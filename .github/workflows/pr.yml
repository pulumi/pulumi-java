on:
  pull_request:
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'

# TODO[pulumi/java#10] protect jobs from crypto mining PR attacks
# before making the repo public.
env:
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  AWS_REGION: us-west-2
  PULUMI_JVM_TASK_TIMEOUT_IN_MILLIS: 300000
  GPR_USER: ${{ secrets.GPR_USER }}
  GPR_TOKEN: ${{ secrets.GPR_TOKEN }}

jobs:

  prerequisites:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Build and unit-test Pulumi Java SDK
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: build
          build-root-directory: sdk/jvm
      - name: Publish Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      - name: Build Pulumi JVM Language Provider and Codegen
        run: make build_go
      - name: Test Pulumi JVM Language Provider and Codegen
        run: make test_go
      - name: Integration tests
        run: make integration_tests
    strategy:
      fail-fast: true

  providers:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        provider:
        - random
        - azure-native
        - google-native
        - gcp
        - aws
        - aws-native
        - kubernetes
        - docker
        - eks
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Build and unit-test Pulumi Java SDK
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: build
          build-root-directory: sdk/jvm
      - name: Publish Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      - name: Build JVM SDK provider
        run: make provider.${PROVIDER}.install
        env:
          PROVIDER: ${{ matrix.provider }}

  example-aws-java-webserver:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Publish Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - name: Build AWS resource provider
        run: make provider.aws.build provider.aws.install
      - name: Build Java language provider
        run: make bin/pulumi-language-jvm
      - name: Run aws-java-webserver example
        run: make test_example.aws-java-webserver

  example-azure-java-appservice-sql:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Publish Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      #- name: Auth
      #  uses: azure/login@v1
      #  with:
      #    creds: ${{ secrets.AZURE_IAM_SP_CREDS }}
      - name: Build Azure Native resource provider
        run: make provider.azure-native.install
      - name: Build Java language provider
        run: make bin/pulumi-language-jvm
      - name: Run example azure-java-appservice-sql
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: make test_example.azure-java-appservice-sql

  example-gcp-java-gke-hello-world:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Publish Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: pulumi-development
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Build GCP resource provider
        run: make provider.gcp.install
      - name: Build Kubernetes resource provider
        run: make provider.kubernetes.install
      - name: Build Java language provider
        run: make bin/pulumi-language-jvm
      - name: Run example gcp-java-gke-hello-world
        run: make test_example.gcp-java-gke-hello-world

  example-minimal:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Publish Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      - name: Build Java language provider
        run: make bin/pulumi-language-jvm
      - name: Run example minimal
        run: make test_example.minimal

  example-aws-native-java-s3-folder:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Publish Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - name: Build AWS provider
        run: make provider.aws.install
      - name: Build AWS Native provider
        run: make provider.aws-native.install
      - name: Build Java language provider
        run: make bin/pulumi-language-jvm
      - name: Run example aws-native-java-s3-folder
        run: make test_example.aws-native-java-s3-folder

  example-azure-java-static-website:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Publish Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      #- name: Auth
      #  uses: azure/login@v1
      #  with:
      #    creds: ${{ secrets.AZURE_IAM_SP_CREDS }}
      - name: Build AWS provider
        run: make provider.aws.install
      - name: Build Azure Native provider
        run: make provider.azure-native.install
      - name: Build Java language provider
        run: make bin/pulumi-language-jvm
      - name: Run example azure-java-static-website
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: make test_example.azure-java-static-website

  example-random:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Publish Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      - name: Build Java language provider
        run: make bin/pulumi-language-jvm
      - name: Build random provider
        run: make provider.random.install
      - name: Run random example
        run: make test_example.random
    strategy:
      fail-fast: true

  example-eks-minimal:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Publish Pulumi Java SDK to a local Maven repo
        run: make install_sdk
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      - name: Build Java language provider
        run: make bin/pulumi-language-jvm
      - name: Build AWS provider
        run: make provider.aws.install
      - name: Build EKS provider
        run: make provider.eks.install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - name: Run eks-minimal example
        run: make test_example.eks-minimal
    strategy:
      fail-fast: true

  go-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container: golangci/golangci-lint:latest
    name: Lint ${{ matrix.directory }}
    strategy:
      matrix:
        directory: [ pkg ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Lint ${{ matrix.directory }}
        run: |
          cd ${{ matrix.directory }} && golangci-lint run -c ../.golangci.yml

  publish-java-sdk-snapshot:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      # Delete SNAPSHOT version before adding a new one, otherwise
      # jars with different date stamps keep accumulating under the
      # SNAPSHOT version.
      - uses: actions/delete-package-versions@v3
        with:
          package-name: 'io.pulumi.pulumi'
          delete-only-pre-release-versions: "true"
      - name: Publish sdk/jvm SNAPSHOT to Maven Repo
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: publish
          build-root-directory: sdk/jvm
