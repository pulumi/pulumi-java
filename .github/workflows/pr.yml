on:
  pull_request:
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'

# TODO[pulumi/java#10] protect jobs from crypto mining PR attacks
# before making the repo public.
env:
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  AWS_REGION: us-west-2
jobs:
  prerequisites:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Build and unit-test Pulumi Java SDK
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: build
          build-root-directory: sdk/jvm
      - name: Publish Pulumi Java SDK to a local Maven repo
        run: make install_sdk
      - name: Build Pulumi JVM Language Provider and Codegen
        run: make build_go
      - name: Test Pulumi JVM Language Provider and Codegen
        run: make test_go
      - name: Build pulumi-random JVM SDK
        run: make provider.random.build
      - name: Install pulumi-random JVM SDK to a local Maven repo
        run: make provider.random.install
      - name: Build pulumi-azure-native JVM SDK
        run: make provider.azure-native.build
      - name: Install pulumi-azure-native JVM SDK to a local Maven repo
        run: make provider.azure-native.install
      - name: Build pulumi-google-native JVM SDK
        run: make provider.google-native.build
      - name: Install pulumi-google-native JVM SDK to a local Maven repo
        run: make provider.google-native.install
      - name: Build pulumi-aws JVM SDK
        run: make provider.aws.build
      - name: Install pulumi-aws JVM SDK to a local Maven repo
        run: make provider.aws.install
      - name: Build pulumi-aws-native JVM SDK
        run: make provider.aws-native.build
      - name: Install pulumi-aws-native JVM SDK to a local Maven repo
        run: make provider.aws-native.install
      - name: Build pulumi-kubernetes JVM SDK
        run: make provider.kubernetes.build
      - name: Install pulumi-kubernetes JVM SDK to a local Maven repo
        run: make provider.kubernetes.install
      - name: Build pulumi-docker JVM SDK
        run: make provider.docker.build
      - name: Install pulumi-docker JVM SDK to a local Maven repo
        run: make provider.docker.install
      - name: Integration tests
        run: make integration_tests
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.pythonversion}}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - name: Run tests
        run: |
          make bin/pulumi-language-jvm && mkdir -p ~/.pulumi/bin/ && cp bin/pulumi-language-jvm ~/.pulumi/bin/pulumi-language-jvm
          export PATH="$PATH:~/.pulumi/bin/"
          for provider in `ls tests/examples/*/ -d`; do
            bash -c  "cd  $provider && pulumi destroy -s dev; pulumi stack rm dev --yes; pulumi stack init dev; pulumi preview; pulumi stack rm dev --yes;";
          done;
    strategy:
      fail-fast: true
  go-lint:
    container: golangci/golangci-lint:latest
    name: Lint ${{ matrix.directory }}
    strategy:
      matrix:
        directory: [ pkg ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Lint ${{ matrix.directory }}
        run: |
          cd ${{ matrix.directory }} && golangci-lint run -c ../.golangci.yml