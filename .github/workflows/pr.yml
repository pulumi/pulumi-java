on:
  pull_request:
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'
  push:
    branches:
      - main
    tags:
      - sdk/v*.*.*
      - aws-native/v*.*.*
      - aws/v*.*.*
      - aws-apigateway/v*.*.*
      - awsx/v*.*.*
      - azure-native/v*.*.*
      - azure/v*.*.*
      - azuread/v*.*.*
      - docker/v*.*.*
      - eks/v*.*.*
      - gcp/v*.*.*
      - google-native/v*.*.*
      - kubernetes/v*.*.*
      - oci/v*.*.*
      - random/v*.*.*
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'
  repository_dispatch:
    types:
      - run-acceptance-tests-command

# TODO[pulumi/java#10] protect jobs from crypto mining PR attacks
# before making the repo public.
env:
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  AWS_REGION: us-west-2
  GPR_USER: ${{ secrets.GPR_USER }}
  GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  prerequisites:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - run: make submodule_update
      - name: Fetch Tags
        run: git fetch --quiet --prune --unshallow --tags
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.7.1
        with:
          repo: pulumi/pulumictl
          tag: v0.0.31
          cache: enable
      - run: ./scripts/versions.sh | tee versions.txt
      - name: Setup versioning env vars
        run: cat versions.txt | tee $GITHUB_ENV
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v3
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Build and unit-test Pulumi Java SDK
        uses: gradle/gradle-build-action@9b814496b50909128c6a52622b416c5ffa04db49
        with:
          arguments: build
          build-root-directory: sdk/java
      - run: make build_go
      - run: make bin/pulumi-java-gen
      - run: make bin/pulumi-language-java
      - uses: actions/upload-artifact@v3
        with:
          name: versions.txt
          path: versions.txt
      - uses: actions/upload-artifact@v3
        with:
          name: go-binaries
          path: bin/
      - name: Publish Pulumi Java SDK
        run: make sdk.publish
        # See Note 1.
        if: |
          github.event_name == 'repository_dispatch'
          || (
                github.event.pull_request.head.repo.full_name == github.repository
                && ! startsWith(github.ref_name, 'dependabot/')
             )
          || github.ref_name == 'main'
    strategy:
      fail-fast: true

  # Run Go tests, most notably codegen tests. These are in a separate
  # job not to block other validations.
  go-tests:
    runs-on: ubuntu-latest
    needs: prerequisites
    timeout-minutes: 30
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - run: make submodule_update
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.17.x
      - name: Download go-binaries
        uses: actions/download-artifact@v3
        with:
          name: go-binaries
          path: ~/bin
      - name: Activate go-binaries
        run: |
          chmod a+x ~/bin/pulumi-language-java
          chmod a+x ~/bin/pulumi-java-gen
      - name: Download versions.txt
        uses: actions/download-artifact@v3
        with:
          name: versions.txt
          path: artifacts
      - name: Setup versioning env vars
        run: cat artifacts/versions.txt | tee $GITHUB_ENV
      - name: Publish Pulumi Java SDK locally to enable codegen tests
        uses: gradle/gradle-build-action@9b814496b50909128c6a52622b416c5ffa04db49
        env:
          # Override to match gen_test.go
          PULUMI_JAVA_SDK_VERSION: 0.0.1
        with:
          arguments: publishToMavenLocal
          build-root-directory: sdk/java
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v3
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-test-go-${{ hashFiles('**/go.sum') }}
      - run: cd pkg && go test -timeout 15m ./...

  providers:
    # See Note 1.
    if: |
      github.event_name == 'repository_dispatch'
      || (
            github.event.pull_request.head.repo.full_name == github.repository
            && ! startsWith(github.ref_name, 'dependabot/')
         )
      || github.ref_name == 'main'
    needs: prerequisites
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        provider:
        - aws
        - aws-native
        - azure
        - azure-native
        - azuread
        - docker
        - gcp
        - google-native
        - kubernetes
        - oci
        - random
    steps:
      - uses: actions/checkout@v3
      - run: make submodule_update
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Download versions.txt
        uses: actions/download-artifact@v3
        with:
          name: versions.txt
          path: artifacts
      - name: Setup versioning env vars
        run: cat artifacts/versions.txt | tee $GITHUB_ENV
      - name: Download go-binaries
        uses: actions/download-artifact@v3
        with:
          name: go-binaries
          path: ~/bin
      - name: Activate go-binaries
        run: |
          chmod a+x ~/bin/pulumi-language-java
          chmod a+x ~/bin/pulumi-java-gen
      - name: Codegen the provider code
        run: ~/bin/pulumi-java-gen -config providers/pulumi-${{ matrix.provider }}/pulumi-java-gen.yaml
      - name: Build and unit-test
        uses: gradle/gradle-build-action@9b814496b50909128c6a52622b416c5ffa04db49
        with:
          arguments: build
          build-root-directory: providers/pulumi-${{ matrix.provider }}/sdk/java
          gradle-version: 7.4.1
      - name: Publish
        run: make provider.${{ matrix.provider }}.publish
      # Below: compute JAR size diff of the current version compared to PR base.
      - name: Get new JAR size
        id: newJar
        run: |
          size=$(du -sb providers/pulumi-${{ matrix.provider }}/sdk/java/build/libs/ | awk '{ print $1 }')
          sizeHuman=$(numfmt --to=iec-i --suffix=B $(echo $size | sed 's/-//g'))
          echo ::set-output name=size::${size}
          echo ::set-output name=sizeHuman::${sizeHuman}
      # clean up
      - name: Remove new JARs
        continue-on-error: true
        run: |
          rm -rf providers/pulumi-${{ matrix.provider }}/sdk/java/build/libs/*
      # build old
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - run: make submodule_update
      - name: Regenerate Java provider SDK from ${{ github.event.pull_request.base.ref }}
        continue-on-error: true
        run: ~/bin/pulumi-java-gen -config providers/pulumi-${{ matrix.provider }}/pulumi-java-gen.yaml
      - name: Rebuild Java provider SDK from ${{ github.event.pull_request.base.ref }}
        uses: gradle/gradle-build-action@9b814496b50909128c6a52622b416c5ffa04db49
        continue-on-error: true
        with:
          gradle-version: 7.4.1
          arguments: build
          build-root-directory: providers/pulumi-${{ matrix.provider }}/sdk/java
      - name: Get old JAR size
        id: oldJar
        continue-on-error: true
        run: |
          size=$(du -sb providers/pulumi-${{ matrix.provider }}/sdk/java/build/libs/ | awk '{ print $1 }')
          sizeHuman=$(numfmt --to=iec-i --suffix=B $(echo $size | sed 's/-//g'))
          echo ::set-output name=size::${size}
          echo ::set-output name=sizeHuman::${sizeHuman}
      # prepare output
      - name: Get JAR size diff
        continue-on-error: true
        id: diffJar
        run: |
          size=$((${{ steps.newJar.outputs.size }} - ${{ steps.oldJar.outputs.size }}))
          sizePct=$(( 100 * ( ${{ steps.newJar.outputs.size }} - ${{ steps.oldJar.outputs.size }} ) / ${{ steps.oldJar.outputs.size }} ))
          sizeHuman=$(numfmt --to=iec-i --suffix=B $(echo $size | sed 's/-//g'))
          echo ::set-output name=size::${size}
          echo ::set-output name=sizePct::${sizePct}
          echo ::set-output name=sizeHuman::${sizeHuman}
      - name: Display provider size summary
        run: |
          echo "Provider : ${{ matrix.provider }}"
          echo "New Size : ${{ steps.newJar.outputs.sizeHuman }}"
          echo "Old Size : ${{ steps.oldJar.outputs.sizeHuman }}"
          echo "Size Diff: ${{ steps.diffJar.outputs.sizeHuman }}"
          echo "Change(%): ${{ steps.diffJar.outputs.sizePct }}%"

  # Copied from providers task to build providers that depend on other providers.
  providers2:
    needs: providers
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        provider:
        - eks
        - awsx
        - aws-apigateway
    steps:
      - uses: actions/checkout@v3
      - run: make submodule_update
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Download versions.txt
        uses: actions/download-artifact@v3
        with:
          name: versions.txt
          path: artifacts
      - name: Setup versioning env vars
        run: cat artifacts/versions.txt | tee $GITHUB_ENV
      - name: Download go-binaries
        uses: actions/download-artifact@v3
        with:
          name: go-binaries
          path: ~/bin
      - name: Activate go-binaries
        run: |
          chmod a+x ~/bin/pulumi-language-java
          chmod a+x ~/bin/pulumi-java-gen
      - name: Codegen the provider code
        run: ~/bin/pulumi-java-gen -config providers/pulumi-${{ matrix.provider }}/pulumi-java-gen.yaml
      - name: Build and unit-test
        uses: gradle/gradle-build-action@9b814496b50909128c6a52622b416c5ffa04db49
        with:
          arguments: build
          build-root-directory: providers/pulumi-${{ matrix.provider }}/sdk/java
          gradle-version: 7.4.1
      - name: Publish
        run: make provider.${{ matrix.provider }}.publish
      # Below: compute JAR size diff of the current version compared to PR base.
      - name: Get new JAR size
        id: newJar
        run: |
          size=$(du -sb providers/pulumi-${{ matrix.provider }}/sdk/java/build/libs/ | awk '{ print $1 }')
          sizeHuman=$(numfmt --to=iec-i --suffix=B $(echo $size | sed 's/-//g'))
          echo ::set-output name=size::${size}
          echo ::set-output name=sizeHuman::${sizeHuman}
      # clean up
      - name: Remove new JARs
        continue-on-error: true
        run: |
          rm -rf providers/pulumi-${{ matrix.provider }}/sdk/java/build/libs/*
      # build old
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - run: make submodule_update
      - name: Regenerate Java provider SDK from ${{ github.event.pull_request.base.ref }}
        continue-on-error: true
        run: ~/bin/pulumi-java-gen -config providers/pulumi-${{ matrix.provider }}/pulumi-java-gen.yaml
      - name: Rebuild Java provider SDK from ${{ github.event.pull_request.base.ref }}
        uses: gradle/gradle-build-action@9b814496b50909128c6a52622b416c5ffa04db49
        continue-on-error: true
        with:
          gradle-version: 7.4.1
          arguments: build
          build-root-directory: providers/pulumi-${{ matrix.provider }}/sdk/java
      - name: Get old JAR size
        id: oldJar
        continue-on-error: true
        run: |
          size=$(du -sb providers/pulumi-${{ matrix.provider }}/sdk/java/build/libs/ | awk '{ print $1 }')
          sizeHuman=$(numfmt --to=iec-i --suffix=B $(echo $size | sed 's/-//g'))
          echo ::set-output name=size::${size}
          echo ::set-output name=sizeHuman::${sizeHuman}
      # prepare output
      - name: Get JAR size diff
        continue-on-error: true
        id: diffJar
        run: |
          size=$((${{ steps.newJar.outputs.size }} - ${{ steps.oldJar.outputs.size }}))
          sizePct=$(( 100 * ( ${{ steps.newJar.outputs.size }} - ${{ steps.oldJar.outputs.size }} ) / ${{ steps.oldJar.outputs.size }} ))
          sizeHuman=$(numfmt --to=iec-i --suffix=B $(echo $size | sed 's/-//g'))
          echo ::set-output name=size::${size}
          echo ::set-output name=sizePct::${sizePct}
          echo ::set-output name=sizeHuman::${sizeHuman}
      - name: Display provider size summary
        run: |
          echo "Provider : ${{ matrix.provider }}"
          echo "New Size : ${{ steps.newJar.outputs.sizeHuman }}"
          echo "Old Size : ${{ steps.oldJar.outputs.sizeHuman }}"
          echo "Size Diff: ${{ steps.diffJar.outputs.sizeHuman }}"
          echo "Change(%): ${{ steps.diffJar.outputs.sizePct }}%"

  examples:
    runs-on: ubuntu-latest
    needs: providers2
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        example:
        - aws-java-eks-minimal
        - aws-java-webserver
        - aws-native-java-s3-folder
        - azure-java-appservice-sql
        - azure-java-function-graal-spring
        - azure-java-static-website
        - gcp-java-gke-hello-world
        - minimal
        - random
    steps:
      - uses: actions/checkout@v3
      - run: make submodule_update
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Set up GraalVM 22.x
        uses: graalvm/setup-graalvm@v1
        if: |
          contains(matrix.example, 'graal')
        with:
          version: '22.0.0.2'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v3
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-examples-${{ hashFiles('**/go.sum') }}
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Download versions.txt
        uses: actions/download-artifact@v3
        with:
          name: versions.txt
          path: artifacts
      - name: Setup versioning env vars
        run: cat artifacts/versions.txt | tee $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: pulumi-development
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Configure maven
        run: cp maven/settings.xml ~/.m2/settings.xml
      - name: Prefetch provider builds
        run: cd maven/dummy && mvn -q compile
      - name: Run ${{ matrix.example }} example
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: make test_example.${{ matrix.example }}

  go-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container: golangci/golangci-lint:latest
    name: Lint ${{ matrix.directory }}
    strategy:
      matrix:
        directory: [ pkg ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - run: make submodule_update
      - name: Lint ${{ matrix.directory }}
        run: |
          cd ${{ matrix.directory }} && golangci-lint run -c ../.golangci.yml

  test_integrations:
    runs-on: ubuntu-latest
    needs: providers
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        integration:
          - stack-reference
    steps:
      - uses: actions/checkout@v3
      - run: make submodule_update
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v3
        id: go-cache
        with:
          path: |
            ${{ steps.go-cache-paths.outputs.go-build }}
            ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-integrations-${{ hashFiles('**/go.sum') }}
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      - name: Download versions.txt
        uses: actions/download-artifact@v3
        with:
          name: versions.txt
          path: artifacts
      - name: Setup versioning env vars
        run: cat artifacts/versions.txt | tee $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: pulumi-development
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Configure maven
        run: cp maven/settings.xml ~/.m2/settings.xml
      - name: Run ${{ matrix.integration }} integration
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: make test_integration.${{ matrix.integration }}

  test_templates:
    runs-on: ubuntu-latest
    needs: providers
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - run: make submodule_update
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v3
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-templates-${{ hashFiles('**/go.sum') }}
      - name: Download versions.txt
        uses: actions/download-artifact@v3
        with:
          name: versions.txt
          path: artifacts
      - name: Setup versioning env vars
        run: cat artifacts/versions.txt | tee $GITHUB_ENV
      - name: Configure maven
        run: cp maven/settings.xml ~/.m2/settings.xml
      - name: Prefetch provider builds
        run: cd maven/dummy && mvn -q compile
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - name: Configure GCP Credentials
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: pulumi-development
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: make test_templates

  check-for-dirty-providers:
    runs-on: ubuntu-latest
    needs: prerequisites
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - name: Download go-binaries
        uses: actions/download-artifact@v3
        with:
          name: go-binaries
          path: ./bin
      - name: Activate pulumi-java-gen
        run: chmod a+x ./bin/pulumi-java-gen
      - run: make --old-file=bin/pulumi-java-gen providers_generate_all
      - run: ./scripts/check-dirty.sh

# ** Note 1: fork PRs do not have access to some of the tokens required
# to use Pulumi infra. The PRs will be partially tested and wait for a
# maintainer to comment `/run-acceptance-tests` after a review,
# triggering this workflow via `repository_dispatch` and the right
# tokens.
