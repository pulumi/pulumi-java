on:
  pull_request:
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'
  push:
    branches:
      - main
    tags:
      - sdk/v*.*.*
      - aws-native/v*.*.*
      - aws/v*.*.*
      - azure-native/v*.*.*
      - docker/v*.*.*
      - eks/v*.*.*
      - gcp/v*.*.*
      - google-native/v*.*.*
      - kubernetes/v*.*.*
      - random/v*.*.*
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'

# TODO[pulumi/java#10] protect jobs from crypto mining PR attacks
# before making the repo public.
env:
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  AWS_REGION: us-west-2
  PULUMI_JVM_TASK_TIMEOUT_IN_MILLIS: 300000
  GPR_USER: ${{ secrets.GPR_USER }}
  GPR_TOKEN: ${{ secrets.GPR_TOKEN }}

jobs:

  prerequisites:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - run: make submodule_update
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Build and unit-test Pulumi Java SDK
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: build
          build-root-directory: sdk/jvm
      - name: Publish Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      - name: Build Pulumi JVM Language Provider and Codegen
        run: make build_go
      - name: Test Pulumi JVM Language Provider and Codegen
        run: make test_go
      - name: Integration tests
        run: make integration_tests
    strategy:
      fail-fast: true

  providers:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    strategy:
      fail-fast: false
      matrix:
        provider:
        - random
        - azure-native
        - google-native
        - gcp
        - aws
        - aws-native
        - kubernetes
        - docker
        - eks
    steps:
      - uses: actions/checkout@v2
      - run: make submodule_update
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Ensure dependencies
        run: make ensure
      - name: Build and unit-test Pulumi Java SDK
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: build
          build-root-directory: sdk/jvm
      - name: Publish new Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      # build new
      - name: Build JVM SDK provider
        run: make provider.${PROVIDER}.install
        env:
          PROVIDER: ${{ matrix.provider }}
      - name: Get new JAR size
        id: newJar
        run: |
          size=$(du -sb providers/pulumi-${{ matrix.provider }}/sdk/java/build/libs/ | awk '{ print $1 }')
          sizeHuman=$(numfmt --to=iec-i --suffix=B $(echo $size | sed 's/-//g'))
          echo ::set-output name=size::${size}
          echo ::set-output name=sizeHuman::${sizeHuman}
      # clean up
      - name: Remove new JARs
        continue-on-error: true
        run: |
          rm -rf providers/pulumi-${{ matrix.provider }}/sdk/java/build/libs/*
      - name: Publish previous Pulumi Java SDK to a local Maven repo
        timeout-minutes: 2
        run: make install_sdk
      # build old
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - run: make submodule_update
      - name: Build JVM SDK provider
        continue-on-error: true
        run: make provider.${PROVIDER}.install
        env:
          PROVIDER: ${{ matrix.provider }}
      - name: Get old JAR size
        id: oldJar
        continue-on-error: true
        run: |
          size=$(du -sb providers/pulumi-${{ matrix.provider }}/sdk/java/build/libs/ | awk '{ print $1 }')
          sizeHuman=$(numfmt --to=iec-i --suffix=B $(echo $size | sed 's/-//g'))
          echo ::set-output name=size::${size}
          echo ::set-output name=sizeHuman::${sizeHuman}
      # prepare output
      - name: Get JAR size diff
        continue-on-error: true
        id: diffJar
        run: |
          size=$((${{ steps.newJar.outputs.size }} - ${{ steps.oldJar.outputs.size }}))
          sizePct=$(( 100 * ( ${{ steps.newJar.outputs.size }} - ${{ steps.oldJar.outputs.size }} ) / ${{ steps.oldJar.outputs.size }} ))
          sizeHuman=$(numfmt --to=iec-i --suffix=B $(echo $size | sed 's/-//g'))
          echo ::set-output name=size::${size}
          echo ::set-output name=sizePct::${sizePct}
          echo ::set-output name=sizeHuman::${sizeHuman}
      - name: Display provider size summary
        run: |
          echo "Provider : ${{ matrix.provider }}"
          echo "New Size : ${{ steps.newJar.outputs.sizeHuman }}"
          echo "Old Size : ${{ steps.oldJar.outputs.sizeHuman }}"
          echo "Size Diff: ${{ steps.diffJar.outputs.sizeHuman }}"
          echo "Change(%): ${{ steps.diffJar.outputs.sizePct }}%"

  examples:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        example:
        - aws-java-webserver
        - aws-native-java-s3-folder
        - azure-java-appservice-sql
        - azure-java-static-website
        - gcp-java-gke-hello-world
        - minimal
        - random
        - eks-minimal
    steps:
      - uses: actions/checkout@v2
      - run: make submodule_update
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure Go cache
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-cache-${{ hashFiles('**/go.sum') }}
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: pulumi-development
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Run ${{ matrix.example }} example
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: make test_example.${{ matrix.example }}

  go-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container: golangci/golangci-lint:latest
    name: Lint ${{ matrix.directory }}
    strategy:
      matrix:
        directory: [ pkg ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - run: make submodule_update
      - name: Lint ${{ matrix.directory }}
        run: |
          cd ${{ matrix.directory }} && golangci-lint run -c ../.golangci.yml

  test_templates:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - run: make submodule_update
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - run: make install_sdk
      - run: make provider.aws.install
      - run: make provider.azure-native.install
      - run: make provider.gcp.install
      - run: make provider.kubernetes.install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - name: Configure GCP Credentials
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: pulumi-development
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: make test_templates
