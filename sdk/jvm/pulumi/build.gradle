plugins {
    id("java-library")
    id("maven-publish")
    id("com.google.protobuf") version "0.8.16"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url("https://maven-central.storage-download.googleapis.com/maven2/")
    }
    mavenCentral()
    mavenLocal()
}

def grpcVersion = "1.38.0"
def protobufVersion = "3.12.0"
def protocVersion = protobufVersion

dependencies {
    implementation("io.grpc:grpc-protobuf:${grpcVersion}")
    implementation("io.grpc:grpc-stub:${grpcVersion}")
    runtimeOnly("io.grpc:grpc-netty-shaded:${grpcVersion}")
    // Workaround for @javax.annotation.Generated
    // see: https://github.com/grpc/grpc-java/issues/3633
    compileOnly("javax.annotation:javax.annotation-api:1.3.1")
    implementation("com.google.code.findbugs:jsr305:3.0.2")
    implementation("net.javacrumbs.future-converter:future-converter-java8-guava:1.2.0") // TODO: remove if possible
    implementation("com.google.guava:guava:30.1-jre") // make sure we don't clash with grpc deps
    implementation("com.google.code.gson:gson:2.8.6") // make sure we don't clash with grpc deps
    implementation("com.google.protobuf:protobuf-java:3.12.0") // make sure we don't clash with grpc deps
    implementation("com.google.protobuf:protobuf-java-util:3.12.0") // make sure we don't clash with grpc deps

    testImplementation("io.grpc:grpc-testing:${grpcVersion}")

    def junitVersion = "5.7.2"
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation("org.assertj:assertj-core:3.20.2")
    testImplementation("org.mockito:mockito-core:3.+")
    testImplementation("nl.jqno.equalsverifier:equalsverifier:3.6.1")
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir "$rootDir/../proto"
        }
        java {
            srcDirs "src/main/java"
            srcDirs "build/generated/source/proto/main/grpc"
            srcDirs "build/generated/source/proto/main/java"
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'

        // set options for log level LIFECYCLE
        events = ['failed']

        info {
            events = ['failed', 'skipped']
        }

        debug {
            events = ['started', 'skipped', 'failed']
        }
    }

    systemProperty 'java.util.logging.config.file', "${projectDir}/src/test/resources/logging.properties"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.pulumi'
            artifactId = 'pulumi'
            version = project.version

            from components.java
        }
        // TODO pom
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}