// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.extensions_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.extensions_v1beta1.outputs.NetworkPolicyPeer;
import io.pulumi.kubernetes.extensions_v1beta1.outputs.NetworkPolicyPort;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@OutputCustomType
public final class NetworkPolicyEgressRule {
    private final @Nullable List<NetworkPolicyPort> ports;
    private final @Nullable List<NetworkPolicyPeer> to;

    @OutputCustomType.Constructor({"ports","to"})
    private NetworkPolicyEgressRule(
        @Nullable List<NetworkPolicyPort> ports,
        @Nullable List<NetworkPolicyPeer> to) {
        this.ports = ports;
        this.to = to;
    }

    public List<NetworkPolicyPort> getPorts() {
        return this.ports == null ? List.of() : this.ports;
    }
    public List<NetworkPolicyPeer> getTo() {
        return this.to == null ? List.of() : this.to;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkPolicyEgressRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<NetworkPolicyPort> ports;
        private @Nullable List<NetworkPolicyPeer> to;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkPolicyEgressRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ports = defaults.ports;
    	      this.to = defaults.to;
        }

        public Builder setPorts(@Nullable List<NetworkPolicyPort> ports) {
            this.ports = ports;
            return this;
        }

        public Builder setTo(@Nullable List<NetworkPolicyPeer> to) {
            this.to = to;
            return this;
        }

        public NetworkPolicyEgressRule build() {
            return new NetworkPolicyEgressRule(ports, to);
        }
    }
}
