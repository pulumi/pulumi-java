// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.flowcontrol.apiserver.k8s.io_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.kubernetes.flowcontrol.apiserver.k8s.io_v1beta1.inputs.FlowDistinguisherMethodArgs;
import io.pulumi.kubernetes.flowcontrol.apiserver.k8s.io_v1beta1.inputs.PolicyRulesWithSubjectsArgs;
import io.pulumi.kubernetes.flowcontrol.apiserver.k8s.io_v1beta1.inputs.PriorityLevelConfigurationReferenceArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlowSchemaSpecArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlowSchemaSpecArgs Empty = new FlowSchemaSpecArgs();

    @InputImport(name="distinguisherMethod")
    private final @Nullable Input<FlowDistinguisherMethodArgs> distinguisherMethod;

    public Input<FlowDistinguisherMethodArgs> getDistinguisherMethod() {
        return this.distinguisherMethod == null ? Input.empty() : this.distinguisherMethod;
    }

    @InputImport(name="matchingPrecedence")
    private final @Nullable Input<Integer> matchingPrecedence;

    public Input<Integer> getMatchingPrecedence() {
        return this.matchingPrecedence == null ? Input.empty() : this.matchingPrecedence;
    }

    @InputImport(name="priorityLevelConfiguration", required=true)
    private final Input<PriorityLevelConfigurationReferenceArgs> priorityLevelConfiguration;

    public Input<PriorityLevelConfigurationReferenceArgs> getPriorityLevelConfiguration() {
        return this.priorityLevelConfiguration;
    }

    @InputImport(name="rules")
    private final @Nullable Input<List<PolicyRulesWithSubjectsArgs>> rules;

    public Input<List<PolicyRulesWithSubjectsArgs>> getRules() {
        return this.rules == null ? Input.empty() : this.rules;
    }

    public FlowSchemaSpecArgs(
        @Nullable Input<FlowDistinguisherMethodArgs> distinguisherMethod,
        @Nullable Input<Integer> matchingPrecedence,
        Input<PriorityLevelConfigurationReferenceArgs> priorityLevelConfiguration,
        @Nullable Input<List<PolicyRulesWithSubjectsArgs>> rules) {
        this.distinguisherMethod = distinguisherMethod;
        this.matchingPrecedence = matchingPrecedence;
        this.priorityLevelConfiguration = Objects.requireNonNull(priorityLevelConfiguration, "expected parameter 'priorityLevelConfiguration' to be non-null");
        this.rules = rules;
    }

    private FlowSchemaSpecArgs() {
        this.distinguisherMethod = Input.empty();
        this.matchingPrecedence = Input.empty();
        this.priorityLevelConfiguration = Input.empty();
        this.rules = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowSchemaSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<FlowDistinguisherMethodArgs> distinguisherMethod;
        private @Nullable Input<Integer> matchingPrecedence;
        private Input<PriorityLevelConfigurationReferenceArgs> priorityLevelConfiguration;
        private @Nullable Input<List<PolicyRulesWithSubjectsArgs>> rules;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowSchemaSpecArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.distinguisherMethod = defaults.distinguisherMethod;
    	      this.matchingPrecedence = defaults.matchingPrecedence;
    	      this.priorityLevelConfiguration = defaults.priorityLevelConfiguration;
    	      this.rules = defaults.rules;
        }

        public Builder setDistinguisherMethod(@Nullable Input<FlowDistinguisherMethodArgs> distinguisherMethod) {
            this.distinguisherMethod = distinguisherMethod;
            return this;
        }

        public Builder setDistinguisherMethod(@Nullable FlowDistinguisherMethodArgs distinguisherMethod) {
            this.distinguisherMethod = Input.ofNullable(distinguisherMethod);
            return this;
        }

        public Builder setMatchingPrecedence(@Nullable Input<Integer> matchingPrecedence) {
            this.matchingPrecedence = matchingPrecedence;
            return this;
        }

        public Builder setMatchingPrecedence(@Nullable Integer matchingPrecedence) {
            this.matchingPrecedence = Input.ofNullable(matchingPrecedence);
            return this;
        }

        public Builder setPriorityLevelConfiguration(Input<PriorityLevelConfigurationReferenceArgs> priorityLevelConfiguration) {
            this.priorityLevelConfiguration = Objects.requireNonNull(priorityLevelConfiguration);
            return this;
        }

        public Builder setPriorityLevelConfiguration(PriorityLevelConfigurationReferenceArgs priorityLevelConfiguration) {
            this.priorityLevelConfiguration = Input.of(Objects.requireNonNull(priorityLevelConfiguration));
            return this;
        }

        public Builder setRules(@Nullable Input<List<PolicyRulesWithSubjectsArgs>> rules) {
            this.rules = rules;
            return this;
        }

        public Builder setRules(@Nullable List<PolicyRulesWithSubjectsArgs> rules) {
            this.rules = Input.ofNullable(rules);
            return this;
        }

        public FlowSchemaSpecArgs build() {
            return new FlowSchemaSpecArgs(distinguisherMethod, matchingPrecedence, priorityLevelConfiguration, rules);
        }
    }
}
