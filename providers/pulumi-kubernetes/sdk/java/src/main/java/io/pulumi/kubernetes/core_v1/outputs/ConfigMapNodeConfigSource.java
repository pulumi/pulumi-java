// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ConfigMapNodeConfigSource {
    /**
     * KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.
     * 
     */
    private final String kubeletConfigKey;
    /**
     * Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.
     * 
     */
    private final String name;
    /**
     * Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.
     * 
     */
    private final String namespace;
    /**
     * ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
     * 
     */
    private final @Nullable String resourceVersion;
    /**
     * UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
     * 
     */
    private final @Nullable String uid;

    @OutputCustomType.Constructor
    private ConfigMapNodeConfigSource(
        @OutputCustomType.Parameter("kubeletConfigKey") String kubeletConfigKey,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("namespace") String namespace,
        @OutputCustomType.Parameter("resourceVersion") @Nullable String resourceVersion,
        @OutputCustomType.Parameter("uid") @Nullable String uid) {
        this.kubeletConfigKey = kubeletConfigKey;
        this.name = name;
        this.namespace = namespace;
        this.resourceVersion = resourceVersion;
        this.uid = uid;
    }

    /**
     * KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.
     * 
    */
    public String getKubeletConfigKey() {
        return this.kubeletConfigKey;
    }
    /**
     * Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.
     * 
    */
    public String getNamespace() {
        return this.namespace;
    }
    /**
     * ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
     * 
    */
    public Optional<String> getResourceVersion() {
        return Optional.ofNullable(this.resourceVersion);
    }
    /**
     * UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
     * 
    */
    public Optional<String> getUid() {
        return Optional.ofNullable(this.uid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigMapNodeConfigSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String kubeletConfigKey;
        private String name;
        private String namespace;
        private @Nullable String resourceVersion;
        private @Nullable String uid;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigMapNodeConfigSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kubeletConfigKey = defaults.kubeletConfigKey;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.resourceVersion = defaults.resourceVersion;
    	      this.uid = defaults.uid;
        }

        public Builder setKubeletConfigKey(String kubeletConfigKey) {
            this.kubeletConfigKey = Objects.requireNonNull(kubeletConfigKey);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNamespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }

        public Builder setResourceVersion(@Nullable String resourceVersion) {
            this.resourceVersion = resourceVersion;
            return this;
        }

        public Builder setUid(@Nullable String uid) {
            this.uid = uid;
            return this;
        }
        public ConfigMapNodeConfigSource build() {
            return new ConfigMapNodeConfigSource(kubeletConfigKey, name, namespace, resourceVersion, uid);
        }
    }
}
