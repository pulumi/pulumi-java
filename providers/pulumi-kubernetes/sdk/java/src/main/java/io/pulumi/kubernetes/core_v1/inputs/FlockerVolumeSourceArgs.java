// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 * 
 */
public final class FlockerVolumeSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlockerVolumeSourceArgs Empty = new FlockerVolumeSourceArgs();

    /**
     * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
     * 
     */
    @InputImport(name="datasetName")
      private final @Nullable Input<String> datasetName;

    public Input<String> getDatasetName() {
        return this.datasetName == null ? Input.empty() : this.datasetName;
    }

    /**
     * UUID of the dataset. This is unique identifier of a Flocker dataset
     * 
     */
    @InputImport(name="datasetUUID")
      private final @Nullable Input<String> datasetUUID;

    public Input<String> getDatasetUUID() {
        return this.datasetUUID == null ? Input.empty() : this.datasetUUID;
    }

    public FlockerVolumeSourceArgs(
        @Nullable Input<String> datasetName,
        @Nullable Input<String> datasetUUID) {
        this.datasetName = datasetName;
        this.datasetUUID = datasetUUID;
    }

    private FlockerVolumeSourceArgs() {
        this.datasetName = Input.empty();
        this.datasetUUID = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlockerVolumeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> datasetName;
        private @Nullable Input<String> datasetUUID;

        public Builder() {
    	      // Empty
        }

        public Builder(FlockerVolumeSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetName = defaults.datasetName;
    	      this.datasetUUID = defaults.datasetUUID;
        }

        public Builder setDatasetName(@Nullable Input<String> datasetName) {
            this.datasetName = datasetName;
            return this;
        }

        public Builder setDatasetName(@Nullable String datasetName) {
            this.datasetName = Input.ofNullable(datasetName);
            return this;
        }

        public Builder setDatasetUUID(@Nullable Input<String> datasetUUID) {
            this.datasetUUID = datasetUUID;
            return this;
        }

        public Builder setDatasetUUID(@Nullable String datasetUUID) {
            this.datasetUUID = Input.ofNullable(datasetUUID);
            return this;
        }
        public FlockerVolumeSourceArgs build() {
            return new FlockerVolumeSourceArgs(datasetName, datasetUUID);
        }
    }
}
