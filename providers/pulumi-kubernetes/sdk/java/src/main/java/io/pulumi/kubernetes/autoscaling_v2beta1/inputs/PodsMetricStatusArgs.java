// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.autoscaling_v2beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.kubernetes.meta_v1.inputs.LabelSelectorArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).
 * 
 */
public final class PodsMetricStatusArgs extends io.pulumi.resources.ResourceArgs {

    public static final PodsMetricStatusArgs Empty = new PodsMetricStatusArgs();

    /**
     * currentAverageValue is the current value of the average of the metric across all relevant pods (as a quantity)
     * 
     */
    @InputImport(name="currentAverageValue", required=true)
      private final Input<String> currentAverageValue;

    public Input<String> getCurrentAverageValue() {
        return this.currentAverageValue;
    }

    /**
     * metricName is the name of the metric in question
     * 
     */
    @InputImport(name="metricName", required=true)
      private final Input<String> metricName;

    public Input<String> getMetricName() {
        return this.metricName;
    }

    /**
     * selector is the string-encoded form of a standard kubernetes label selector for the given metric When set in the PodsMetricSource, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.
     * 
     */
    @InputImport(name="selector")
      private final @Nullable Input<LabelSelectorArgs> selector;

    public Input<LabelSelectorArgs> getSelector() {
        return this.selector == null ? Input.empty() : this.selector;
    }

    public PodsMetricStatusArgs(
        Input<String> currentAverageValue,
        Input<String> metricName,
        @Nullable Input<LabelSelectorArgs> selector) {
        this.currentAverageValue = Objects.requireNonNull(currentAverageValue, "expected parameter 'currentAverageValue' to be non-null");
        this.metricName = Objects.requireNonNull(metricName, "expected parameter 'metricName' to be non-null");
        this.selector = selector;
    }

    private PodsMetricStatusArgs() {
        this.currentAverageValue = Input.empty();
        this.metricName = Input.empty();
        this.selector = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PodsMetricStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> currentAverageValue;
        private Input<String> metricName;
        private @Nullable Input<LabelSelectorArgs> selector;

        public Builder() {
    	      // Empty
        }

        public Builder(PodsMetricStatusArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentAverageValue = defaults.currentAverageValue;
    	      this.metricName = defaults.metricName;
    	      this.selector = defaults.selector;
        }

        public Builder currentAverageValue(Input<String> currentAverageValue) {
            this.currentAverageValue = Objects.requireNonNull(currentAverageValue);
            return this;
        }

        public Builder currentAverageValue(String currentAverageValue) {
            this.currentAverageValue = Input.of(Objects.requireNonNull(currentAverageValue));
            return this;
        }

        public Builder metricName(Input<String> metricName) {
            this.metricName = Objects.requireNonNull(metricName);
            return this;
        }

        public Builder metricName(String metricName) {
            this.metricName = Input.of(Objects.requireNonNull(metricName));
            return this;
        }

        public Builder selector(@Nullable Input<LabelSelectorArgs> selector) {
            this.selector = selector;
            return this;
        }

        public Builder selector(@Nullable LabelSelectorArgs selector) {
            this.selector = Input.ofNullable(selector);
            return this;
        }
        public PodsMetricStatusArgs build() {
            return new PodsMetricStatusArgs(currentAverageValue, metricName, selector);
        }
    }
}
