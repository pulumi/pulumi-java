// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConfigMapNodeConfigSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConfigMapNodeConfigSourceArgs Empty = new ConfigMapNodeConfigSourceArgs();

    @InputImport(name="kubeletConfigKey", required=true)
    private final Input<String> kubeletConfigKey;

    public Input<String> getKubeletConfigKey() {
        return this.kubeletConfigKey;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="namespace", required=true)
    private final Input<String> namespace;

    public Input<String> getNamespace() {
        return this.namespace;
    }

    @InputImport(name="resourceVersion")
    private final @Nullable Input<String> resourceVersion;

    public Input<String> getResourceVersion() {
        return this.resourceVersion == null ? Input.empty() : this.resourceVersion;
    }

    @InputImport(name="uid")
    private final @Nullable Input<String> uid;

    public Input<String> getUid() {
        return this.uid == null ? Input.empty() : this.uid;
    }

    public ConfigMapNodeConfigSourceArgs(
        Input<String> kubeletConfigKey,
        Input<String> name,
        Input<String> namespace,
        @Nullable Input<String> resourceVersion,
        @Nullable Input<String> uid) {
        this.kubeletConfigKey = Objects.requireNonNull(kubeletConfigKey, "expected parameter 'kubeletConfigKey' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.namespace = Objects.requireNonNull(namespace, "expected parameter 'namespace' to be non-null");
        this.resourceVersion = resourceVersion;
        this.uid = uid;
    }

    private ConfigMapNodeConfigSourceArgs() {
        this.kubeletConfigKey = Input.empty();
        this.name = Input.empty();
        this.namespace = Input.empty();
        this.resourceVersion = Input.empty();
        this.uid = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigMapNodeConfigSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> kubeletConfigKey;
        private Input<String> name;
        private Input<String> namespace;
        private @Nullable Input<String> resourceVersion;
        private @Nullable Input<String> uid;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigMapNodeConfigSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kubeletConfigKey = defaults.kubeletConfigKey;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.resourceVersion = defaults.resourceVersion;
    	      this.uid = defaults.uid;
        }

        public Builder setKubeletConfigKey(Input<String> kubeletConfigKey) {
            this.kubeletConfigKey = Objects.requireNonNull(kubeletConfigKey);
            return this;
        }

        public Builder setKubeletConfigKey(String kubeletConfigKey) {
            this.kubeletConfigKey = Input.of(Objects.requireNonNull(kubeletConfigKey));
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setNamespace(Input<String> namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }

        public Builder setNamespace(String namespace) {
            this.namespace = Input.of(Objects.requireNonNull(namespace));
            return this;
        }

        public Builder setResourceVersion(@Nullable Input<String> resourceVersion) {
            this.resourceVersion = resourceVersion;
            return this;
        }

        public Builder setResourceVersion(@Nullable String resourceVersion) {
            this.resourceVersion = Input.ofNullable(resourceVersion);
            return this;
        }

        public Builder setUid(@Nullable Input<String> uid) {
            this.uid = uid;
            return this;
        }

        public Builder setUid(@Nullable String uid) {
            this.uid = Input.ofNullable(uid);
            return this;
        }

        public ConfigMapNodeConfigSourceArgs build() {
            return new ConfigMapNodeConfigSourceArgs(kubeletConfigKey, name, namespace, resourceVersion, uid);
        }
    }
}
