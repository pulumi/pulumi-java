// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
 * 
 */
public final class EmptyDirVolumeSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final EmptyDirVolumeSourceArgs Empty = new EmptyDirVolumeSourceArgs();

    /**
     * What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
     * 
     */
    @Import(name="medium")
      private final @Nullable Output<String> medium;

    public Output<String> medium() {
        return this.medium == null ? Codegen.empty() : this.medium;
    }

    /**
     * Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
     * 
     */
    @Import(name="sizeLimit")
      private final @Nullable Output<String> sizeLimit;

    public Output<String> sizeLimit() {
        return this.sizeLimit == null ? Codegen.empty() : this.sizeLimit;
    }

    public EmptyDirVolumeSourceArgs(
        @Nullable Output<String> medium,
        @Nullable Output<String> sizeLimit) {
        this.medium = medium;
        this.sizeLimit = sizeLimit;
    }

    private EmptyDirVolumeSourceArgs() {
        this.medium = Codegen.empty();
        this.sizeLimit = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EmptyDirVolumeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> medium;
        private @Nullable Output<String> sizeLimit;

        public Builder() {
    	      // Empty
        }

        public Builder(EmptyDirVolumeSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.medium = defaults.medium;
    	      this.sizeLimit = defaults.sizeLimit;
        }

        public Builder medium(@Nullable Output<String> medium) {
            this.medium = medium;
            return this;
        }
        public Builder medium(@Nullable String medium) {
            this.medium = Codegen.ofNullable(medium);
            return this;
        }
        public Builder sizeLimit(@Nullable Output<String> sizeLimit) {
            this.sizeLimit = sizeLimit;
            return this;
        }
        public Builder sizeLimit(@Nullable String sizeLimit) {
            this.sizeLimit = Codegen.ofNullable(sizeLimit);
            return this;
        }        public EmptyDirVolumeSourceArgs build() {
            return new EmptyDirVolumeSourceArgs(medium, sizeLimit);
        }
    }
}
