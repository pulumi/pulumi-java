// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.core_v1.outputs.ContainerState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ContainerStatus {
    private final @Nullable String containerID;
    private final String image;
    private final String imageID;
    private final @Nullable ContainerState lastState;
    private final String name;
    private final Boolean ready;
    private final Integer restartCount;
    private final @Nullable Boolean started;
    private final @Nullable ContainerState state;

    @OutputCustomType.Constructor({"containerID","image","imageID","lastState","name","ready","restartCount","started","state"})
    private ContainerStatus(
        @Nullable String containerID,
        String image,
        String imageID,
        @Nullable ContainerState lastState,
        String name,
        Boolean ready,
        Integer restartCount,
        @Nullable Boolean started,
        @Nullable ContainerState state) {
        this.containerID = containerID;
        this.image = Objects.requireNonNull(image);
        this.imageID = Objects.requireNonNull(imageID);
        this.lastState = lastState;
        this.name = Objects.requireNonNull(name);
        this.ready = Objects.requireNonNull(ready);
        this.restartCount = Objects.requireNonNull(restartCount);
        this.started = started;
        this.state = state;
    }

    public Optional<String> getContainerID() {
        return Optional.ofNullable(this.containerID);
    }
    public String getImage() {
        return this.image;
    }
    public String getImageID() {
        return this.imageID;
    }
    public Optional<ContainerState> getLastState() {
        return Optional.ofNullable(this.lastState);
    }
    public String getName() {
        return this.name;
    }
    public Boolean getReady() {
        return this.ready;
    }
    public Integer getRestartCount() {
        return this.restartCount;
    }
    public Optional<Boolean> getStarted() {
        return Optional.ofNullable(this.started);
    }
    public Optional<ContainerState> getState() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerStatus defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String containerID;
        private String image;
        private String imageID;
        private @Nullable ContainerState lastState;
        private String name;
        private Boolean ready;
        private Integer restartCount;
        private @Nullable Boolean started;
        private @Nullable ContainerState state;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerID = defaults.containerID;
    	      this.image = defaults.image;
    	      this.imageID = defaults.imageID;
    	      this.lastState = defaults.lastState;
    	      this.name = defaults.name;
    	      this.ready = defaults.ready;
    	      this.restartCount = defaults.restartCount;
    	      this.started = defaults.started;
    	      this.state = defaults.state;
        }

        public Builder setContainerID(@Nullable String containerID) {
            this.containerID = containerID;
            return this;
        }

        public Builder setImage(String image) {
            this.image = Objects.requireNonNull(image);
            return this;
        }

        public Builder setImageID(String imageID) {
            this.imageID = Objects.requireNonNull(imageID);
            return this;
        }

        public Builder setLastState(@Nullable ContainerState lastState) {
            this.lastState = lastState;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setReady(Boolean ready) {
            this.ready = Objects.requireNonNull(ready);
            return this;
        }

        public Builder setRestartCount(Integer restartCount) {
            this.restartCount = Objects.requireNonNull(restartCount);
            return this;
        }

        public Builder setStarted(@Nullable Boolean started) {
            this.started = started;
            return this;
        }

        public Builder setState(@Nullable ContainerState state) {
            this.state = state;
            return this;
        }

        public ContainerStatus build() {
            return new ContainerStatus(containerID, image, imageID, lastState, name, ready, restartCount, started, state);
        }
    }
}
