// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class QuobyteVolumeSource {
    /**
     * Group to map volume access to Default is no group
     * 
     */
    private final @Nullable String group;
    /**
     * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
     * 
     */
    private final @Nullable Boolean readOnly;
    /**
     * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
     * 
     */
    private final String registry;
    /**
     * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
     * 
     */
    private final @Nullable String tenant;
    /**
     * User to map volume access to Defaults to serivceaccount user
     * 
     */
    private final @Nullable String user;
    /**
     * Volume is a string that references an already created Quobyte volume by name.
     * 
     */
    private final String volume;

    @OutputCustomType.Constructor({"group","readOnly","registry","tenant","user","volume"})
    private QuobyteVolumeSource(
        @Nullable String group,
        @Nullable Boolean readOnly,
        String registry,
        @Nullable String tenant,
        @Nullable String user,
        String volume) {
        this.group = group;
        this.readOnly = readOnly;
        this.registry = Objects.requireNonNull(registry);
        this.tenant = tenant;
        this.user = user;
        this.volume = Objects.requireNonNull(volume);
    }

    /**
     * Group to map volume access to Default is no group
     * 
     */
    public Optional<String> getGroup() {
        return Optional.ofNullable(this.group);
    }
    /**
     * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
     * 
     */
    public Optional<Boolean> getReadOnly() {
        return Optional.ofNullable(this.readOnly);
    }
    /**
     * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
     * 
     */
    public String getRegistry() {
        return this.registry;
    }
    /**
     * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
     * 
     */
    public Optional<String> getTenant() {
        return Optional.ofNullable(this.tenant);
    }
    /**
     * User to map volume access to Defaults to serivceaccount user
     * 
     */
    public Optional<String> getUser() {
        return Optional.ofNullable(this.user);
    }
    /**
     * Volume is a string that references an already created Quobyte volume by name.
     * 
     */
    public String getVolume() {
        return this.volume;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QuobyteVolumeSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String group;
        private @Nullable Boolean readOnly;
        private String registry;
        private @Nullable String tenant;
        private @Nullable String user;
        private String volume;

        public Builder() {
    	      // Empty
        }

        public Builder(QuobyteVolumeSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.group = defaults.group;
    	      this.readOnly = defaults.readOnly;
    	      this.registry = defaults.registry;
    	      this.tenant = defaults.tenant;
    	      this.user = defaults.user;
    	      this.volume = defaults.volume;
        }

        public Builder setGroup(@Nullable String group) {
            this.group = group;
            return this;
        }

        public Builder setReadOnly(@Nullable Boolean readOnly) {
            this.readOnly = readOnly;
            return this;
        }

        public Builder setRegistry(String registry) {
            this.registry = Objects.requireNonNull(registry);
            return this;
        }

        public Builder setTenant(@Nullable String tenant) {
            this.tenant = tenant;
            return this;
        }

        public Builder setUser(@Nullable String user) {
            this.user = user;
            return this;
        }

        public Builder setVolume(String volume) {
            this.volume = Objects.requireNonNull(volume);
            return this;
        }

        public QuobyteVolumeSource build() {
            return new QuobyteVolumeSource(group, readOnly, registry, tenant, user, volume);
        }
    }
}
