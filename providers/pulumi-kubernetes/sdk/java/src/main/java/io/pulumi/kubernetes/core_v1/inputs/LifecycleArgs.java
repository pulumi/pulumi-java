// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.kubernetes.core_v1.inputs.LifecycleHandlerArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LifecycleArgs extends io.pulumi.resources.ResourceArgs {

    public static final LifecycleArgs Empty = new LifecycleArgs();

    @InputImport(name="postStart")
    private final @Nullable Input<LifecycleHandlerArgs> postStart;

    public Input<LifecycleHandlerArgs> getPostStart() {
        return this.postStart == null ? Input.empty() : this.postStart;
    }

    @InputImport(name="preStop")
    private final @Nullable Input<LifecycleHandlerArgs> preStop;

    public Input<LifecycleHandlerArgs> getPreStop() {
        return this.preStop == null ? Input.empty() : this.preStop;
    }

    public LifecycleArgs(
        @Nullable Input<LifecycleHandlerArgs> postStart,
        @Nullable Input<LifecycleHandlerArgs> preStop) {
        this.postStart = postStart;
        this.preStop = preStop;
    }

    private LifecycleArgs() {
        this.postStart = Input.empty();
        this.preStop = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LifecycleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<LifecycleHandlerArgs> postStart;
        private @Nullable Input<LifecycleHandlerArgs> preStop;

        public Builder() {
    	      // Empty
        }

        public Builder(LifecycleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.postStart = defaults.postStart;
    	      this.preStop = defaults.preStop;
        }

        public Builder setPostStart(@Nullable Input<LifecycleHandlerArgs> postStart) {
            this.postStart = postStart;
            return this;
        }

        public Builder setPostStart(@Nullable LifecycleHandlerArgs postStart) {
            this.postStart = Input.ofNullable(postStart);
            return this;
        }

        public Builder setPreStop(@Nullable Input<LifecycleHandlerArgs> preStop) {
            this.preStop = preStop;
            return this;
        }

        public Builder setPreStop(@Nullable LifecycleHandlerArgs preStop) {
            this.preStop = Input.ofNullable(preStop);
            return this;
        }

        public LifecycleArgs build() {
            return new LifecycleArgs(postStart, preStop);
        }
    }
}
