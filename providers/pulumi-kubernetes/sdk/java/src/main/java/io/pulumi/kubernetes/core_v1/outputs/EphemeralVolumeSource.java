// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.core_v1.outputs.PersistentVolumeClaimTemplate;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class EphemeralVolumeSource {
    private final @Nullable Boolean readOnly;
    private final @Nullable PersistentVolumeClaimTemplate volumeClaimTemplate;

    @OutputCustomType.Constructor({"readOnly","volumeClaimTemplate"})
    private EphemeralVolumeSource(
        @Nullable Boolean readOnly,
        @Nullable PersistentVolumeClaimTemplate volumeClaimTemplate) {
        this.readOnly = readOnly;
        this.volumeClaimTemplate = volumeClaimTemplate;
    }

    public Optional<Boolean> getReadOnly() {
        return Optional.ofNullable(this.readOnly);
    }
    public Optional<PersistentVolumeClaimTemplate> getVolumeClaimTemplate() {
        return Optional.ofNullable(this.volumeClaimTemplate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EphemeralVolumeSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean readOnly;
        private @Nullable PersistentVolumeClaimTemplate volumeClaimTemplate;

        public Builder() {
    	      // Empty
        }

        public Builder(EphemeralVolumeSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.readOnly = defaults.readOnly;
    	      this.volumeClaimTemplate = defaults.volumeClaimTemplate;
        }

        public Builder setReadOnly(@Nullable Boolean readOnly) {
            this.readOnly = readOnly;
            return this;
        }

        public Builder setVolumeClaimTemplate(@Nullable PersistentVolumeClaimTemplate volumeClaimTemplate) {
            this.volumeClaimTemplate = volumeClaimTemplate;
            return this;
        }

        public EphemeralVolumeSource build() {
            return new EphemeralVolumeSource(readOnly, volumeClaimTemplate);
        }
    }
}
