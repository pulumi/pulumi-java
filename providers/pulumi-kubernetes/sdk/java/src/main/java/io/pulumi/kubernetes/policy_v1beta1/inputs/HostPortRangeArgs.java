// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.policy_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;


/**
 * HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined.
 * 
 */
public final class HostPortRangeArgs extends io.pulumi.resources.ResourceArgs {

    public static final HostPortRangeArgs Empty = new HostPortRangeArgs();

    /**
     * max is the end of the range, inclusive.
     * 
     */
    @InputImport(name="max", required=true)
      private final Output<Integer> max;

    public Output<Integer> getMax() {
        return this.max;
    }

    /**
     * min is the start of the range, inclusive.
     * 
     */
    @InputImport(name="min", required=true)
      private final Output<Integer> min;

    public Output<Integer> getMin() {
        return this.min;
    }

    public HostPortRangeArgs(
        Output<Integer> max,
        Output<Integer> min) {
        this.max = Objects.requireNonNull(max, "expected parameter 'max' to be non-null");
        this.min = Objects.requireNonNull(min, "expected parameter 'min' to be non-null");
    }

    private HostPortRangeArgs() {
        this.max = Output.empty();
        this.min = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HostPortRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> max;
        private Output<Integer> min;

        public Builder() {
    	      // Empty
        }

        public Builder(HostPortRangeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.max = defaults.max;
    	      this.min = defaults.min;
        }

        public Builder max(Output<Integer> max) {
            this.max = Objects.requireNonNull(max);
            return this;
        }

        public Builder max(Integer max) {
            this.max = Output.of(Objects.requireNonNull(max));
            return this;
        }

        public Builder min(Output<Integer> min) {
            this.min = Objects.requireNonNull(min);
            return this;
        }

        public Builder min(Integer min) {
            this.min = Output.of(Objects.requireNonNull(min));
            return this;
        }
        public HostPortRangeArgs build() {
            return new HostPortRangeArgs(max, min);
        }
    }
}
