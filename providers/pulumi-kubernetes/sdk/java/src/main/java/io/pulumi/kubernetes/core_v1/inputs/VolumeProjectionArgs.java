// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.kubernetes.core_v1.inputs.ConfigMapProjectionArgs;
import io.pulumi.kubernetes.core_v1.inputs.DownwardAPIProjectionArgs;
import io.pulumi.kubernetes.core_v1.inputs.SecretProjectionArgs;
import io.pulumi.kubernetes.core_v1.inputs.ServiceAccountTokenProjectionArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Projection that may be projected along with other supported volume types
 * 
 */
public final class VolumeProjectionArgs extends io.pulumi.resources.ResourceArgs {

    public static final VolumeProjectionArgs Empty = new VolumeProjectionArgs();

    /**
     * information about the configMap data to project
     * 
     */
    @Import(name="configMap")
      private final @Nullable Output<ConfigMapProjectionArgs> configMap;

    public Output<ConfigMapProjectionArgs> getConfigMap() {
        return this.configMap == null ? Output.empty() : this.configMap;
    }

    /**
     * information about the downwardAPI data to project
     * 
     */
    @Import(name="downwardAPI")
      private final @Nullable Output<DownwardAPIProjectionArgs> downwardAPI;

    public Output<DownwardAPIProjectionArgs> getDownwardAPI() {
        return this.downwardAPI == null ? Output.empty() : this.downwardAPI;
    }

    /**
     * information about the secret data to project
     * 
     */
    @Import(name="secret")
      private final @Nullable Output<SecretProjectionArgs> secret;

    public Output<SecretProjectionArgs> getSecret() {
        return this.secret == null ? Output.empty() : this.secret;
    }

    /**
     * information about the serviceAccountToken data to project
     * 
     */
    @Import(name="serviceAccountToken")
      private final @Nullable Output<ServiceAccountTokenProjectionArgs> serviceAccountToken;

    public Output<ServiceAccountTokenProjectionArgs> getServiceAccountToken() {
        return this.serviceAccountToken == null ? Output.empty() : this.serviceAccountToken;
    }

    public VolumeProjectionArgs(
        @Nullable Output<ConfigMapProjectionArgs> configMap,
        @Nullable Output<DownwardAPIProjectionArgs> downwardAPI,
        @Nullable Output<SecretProjectionArgs> secret,
        @Nullable Output<ServiceAccountTokenProjectionArgs> serviceAccountToken) {
        this.configMap = configMap;
        this.downwardAPI = downwardAPI;
        this.secret = secret;
        this.serviceAccountToken = serviceAccountToken;
    }

    private VolumeProjectionArgs() {
        this.configMap = Output.empty();
        this.downwardAPI = Output.empty();
        this.secret = Output.empty();
        this.serviceAccountToken = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeProjectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ConfigMapProjectionArgs> configMap;
        private @Nullable Output<DownwardAPIProjectionArgs> downwardAPI;
        private @Nullable Output<SecretProjectionArgs> secret;
        private @Nullable Output<ServiceAccountTokenProjectionArgs> serviceAccountToken;

        public Builder() {
    	      // Empty
        }

        public Builder(VolumeProjectionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configMap = defaults.configMap;
    	      this.downwardAPI = defaults.downwardAPI;
    	      this.secret = defaults.secret;
    	      this.serviceAccountToken = defaults.serviceAccountToken;
        }

        public Builder configMap(@Nullable Output<ConfigMapProjectionArgs> configMap) {
            this.configMap = configMap;
            return this;
        }
        public Builder configMap(@Nullable ConfigMapProjectionArgs configMap) {
            this.configMap = Output.ofNullable(configMap);
            return this;
        }
        public Builder downwardAPI(@Nullable Output<DownwardAPIProjectionArgs> downwardAPI) {
            this.downwardAPI = downwardAPI;
            return this;
        }
        public Builder downwardAPI(@Nullable DownwardAPIProjectionArgs downwardAPI) {
            this.downwardAPI = Output.ofNullable(downwardAPI);
            return this;
        }
        public Builder secret(@Nullable Output<SecretProjectionArgs> secret) {
            this.secret = secret;
            return this;
        }
        public Builder secret(@Nullable SecretProjectionArgs secret) {
            this.secret = Output.ofNullable(secret);
            return this;
        }
        public Builder serviceAccountToken(@Nullable Output<ServiceAccountTokenProjectionArgs> serviceAccountToken) {
            this.serviceAccountToken = serviceAccountToken;
            return this;
        }
        public Builder serviceAccountToken(@Nullable ServiceAccountTokenProjectionArgs serviceAccountToken) {
            this.serviceAccountToken = Output.ofNullable(serviceAccountToken);
            return this;
        }        public VolumeProjectionArgs build() {
            return new VolumeProjectionArgs(configMap, downwardAPI, secret, serviceAccountToken);
        }
    }
}
