// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.settings.k8s.io_v1alpha1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.kubernetes.core_v1.outputs.EnvFromSource;
import io.pulumi.kubernetes.core_v1.outputs.EnvVar;
import io.pulumi.kubernetes.core_v1.outputs.Volume;
import io.pulumi.kubernetes.core_v1.outputs.VolumeMount;
import io.pulumi.kubernetes.meta_v1.outputs.LabelSelector;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class PodPresetSpec {
    /**
     * Env defines the collection of EnvVar to inject into containers.
     * 
     */
    private final @Nullable List<EnvVar> env;
    /**
     * EnvFrom defines the collection of EnvFromSource to inject into containers.
     * 
     */
    private final @Nullable List<EnvFromSource> envFrom;
    /**
     * Selector is a label query over a set of resources, in this case pods. Required.
     * 
     */
    private final @Nullable LabelSelector selector;
    /**
     * VolumeMounts defines the collection of VolumeMount to inject into containers.
     * 
     */
    private final @Nullable List<VolumeMount> volumeMounts;
    /**
     * Volumes defines the collection of Volume to inject into the pod.
     * 
     */
    private final @Nullable List<Volume> volumes;

    @OutputCustomType.Constructor({"env","envFrom","selector","volumeMounts","volumes"})
    private PodPresetSpec(
        @Nullable List<EnvVar> env,
        @Nullable List<EnvFromSource> envFrom,
        @Nullable LabelSelector selector,
        @Nullable List<VolumeMount> volumeMounts,
        @Nullable List<Volume> volumes) {
        this.env = env;
        this.envFrom = envFrom;
        this.selector = selector;
        this.volumeMounts = volumeMounts;
        this.volumes = volumes;
    }

    /**
     * Env defines the collection of EnvVar to inject into containers.
     * 
     */
    public List<EnvVar> getEnv() {
        return this.env == null ? List.of() : this.env;
    }
    /**
     * EnvFrom defines the collection of EnvFromSource to inject into containers.
     * 
     */
    public List<EnvFromSource> getEnvFrom() {
        return this.envFrom == null ? List.of() : this.envFrom;
    }
    /**
     * Selector is a label query over a set of resources, in this case pods. Required.
     * 
     */
    public Optional<LabelSelector> getSelector() {
        return Optional.ofNullable(this.selector);
    }
    /**
     * VolumeMounts defines the collection of VolumeMount to inject into containers.
     * 
     */
    public List<VolumeMount> getVolumeMounts() {
        return this.volumeMounts == null ? List.of() : this.volumeMounts;
    }
    /**
     * Volumes defines the collection of Volume to inject into the pod.
     * 
     */
    public List<Volume> getVolumes() {
        return this.volumes == null ? List.of() : this.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PodPresetSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<EnvVar> env;
        private @Nullable List<EnvFromSource> envFrom;
        private @Nullable LabelSelector selector;
        private @Nullable List<VolumeMount> volumeMounts;
        private @Nullable List<Volume> volumes;

        public Builder() {
    	      // Empty
        }

        public Builder(PodPresetSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.env = defaults.env;
    	      this.envFrom = defaults.envFrom;
    	      this.selector = defaults.selector;
    	      this.volumeMounts = defaults.volumeMounts;
    	      this.volumes = defaults.volumes;
        }

        public Builder setEnv(@Nullable List<EnvVar> env) {
            this.env = env;
            return this;
        }

        public Builder setEnvFrom(@Nullable List<EnvFromSource> envFrom) {
            this.envFrom = envFrom;
            return this;
        }

        public Builder setSelector(@Nullable LabelSelector selector) {
            this.selector = selector;
            return this;
        }

        public Builder setVolumeMounts(@Nullable List<VolumeMount> volumeMounts) {
            this.volumeMounts = volumeMounts;
            return this;
        }

        public Builder setVolumes(@Nullable List<Volume> volumes) {
            this.volumes = volumes;
            return this;
        }
        public PodPresetSpec build() {
            return new PodPresetSpec(env, envFrom, selector, volumeMounts, volumes);
        }
    }
}
