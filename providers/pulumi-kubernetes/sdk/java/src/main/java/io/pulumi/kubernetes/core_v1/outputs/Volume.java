// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.core_v1.outputs.AWSElasticBlockStoreVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.AzureDiskVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.AzureFileVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.CSIVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.CephFSVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.CinderVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.ConfigMapVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.DownwardAPIVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.EmptyDirVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.EphemeralVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.FCVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.FlexVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.FlockerVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.GCEPersistentDiskVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.GitRepoVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.GlusterfsVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.HostPathVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.ISCSIVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.NFSVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.PersistentVolumeClaimVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.PhotonPersistentDiskVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.PortworxVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.ProjectedVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.QuobyteVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.RBDVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.ScaleIOVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.SecretVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.StorageOSVolumeSource;
import io.pulumi.kubernetes.core_v1.outputs.VsphereVirtualDiskVolumeSource;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class Volume {
    private final @Nullable AWSElasticBlockStoreVolumeSource awsElasticBlockStore;
    private final @Nullable AzureDiskVolumeSource azureDisk;
    private final @Nullable AzureFileVolumeSource azureFile;
    private final @Nullable CephFSVolumeSource cephfs;
    private final @Nullable CinderVolumeSource cinder;
    private final @Nullable ConfigMapVolumeSource configMap;
    private final @Nullable CSIVolumeSource csi;
    private final @Nullable DownwardAPIVolumeSource downwardAPI;
    private final @Nullable EmptyDirVolumeSource emptyDir;
    private final @Nullable EphemeralVolumeSource ephemeral;
    private final @Nullable FCVolumeSource fc;
    private final @Nullable FlexVolumeSource flexVolume;
    private final @Nullable FlockerVolumeSource flocker;
    private final @Nullable GCEPersistentDiskVolumeSource gcePersistentDisk;
    private final @Nullable GitRepoVolumeSource gitRepo;
    private final @Nullable GlusterfsVolumeSource glusterfs;
    private final @Nullable HostPathVolumeSource hostPath;
    private final @Nullable ISCSIVolumeSource iscsi;
    private final String name;
    private final @Nullable NFSVolumeSource nfs;
    private final @Nullable PersistentVolumeClaimVolumeSource persistentVolumeClaim;
    private final @Nullable PhotonPersistentDiskVolumeSource photonPersistentDisk;
    private final @Nullable PortworxVolumeSource portworxVolume;
    private final @Nullable ProjectedVolumeSource projected;
    private final @Nullable QuobyteVolumeSource quobyte;
    private final @Nullable RBDVolumeSource rbd;
    private final @Nullable ScaleIOVolumeSource scaleIO;
    private final @Nullable SecretVolumeSource secret;
    private final @Nullable StorageOSVolumeSource storageos;
    private final @Nullable VsphereVirtualDiskVolumeSource vsphereVolume;

    @OutputCustomType.Constructor({"awsElasticBlockStore","azureDisk","azureFile","cephfs","cinder","configMap","csi","downwardAPI","emptyDir","ephemeral","fc","flexVolume","flocker","gcePersistentDisk","gitRepo","glusterfs","hostPath","iscsi","name","nfs","persistentVolumeClaim","photonPersistentDisk","portworxVolume","projected","quobyte","rbd","scaleIO","secret","storageos","vsphereVolume"})
    private Volume(
        @Nullable AWSElasticBlockStoreVolumeSource awsElasticBlockStore,
        @Nullable AzureDiskVolumeSource azureDisk,
        @Nullable AzureFileVolumeSource azureFile,
        @Nullable CephFSVolumeSource cephfs,
        @Nullable CinderVolumeSource cinder,
        @Nullable ConfigMapVolumeSource configMap,
        @Nullable CSIVolumeSource csi,
        @Nullable DownwardAPIVolumeSource downwardAPI,
        @Nullable EmptyDirVolumeSource emptyDir,
        @Nullable EphemeralVolumeSource ephemeral,
        @Nullable FCVolumeSource fc,
        @Nullable FlexVolumeSource flexVolume,
        @Nullable FlockerVolumeSource flocker,
        @Nullable GCEPersistentDiskVolumeSource gcePersistentDisk,
        @Nullable GitRepoVolumeSource gitRepo,
        @Nullable GlusterfsVolumeSource glusterfs,
        @Nullable HostPathVolumeSource hostPath,
        @Nullable ISCSIVolumeSource iscsi,
        String name,
        @Nullable NFSVolumeSource nfs,
        @Nullable PersistentVolumeClaimVolumeSource persistentVolumeClaim,
        @Nullable PhotonPersistentDiskVolumeSource photonPersistentDisk,
        @Nullable PortworxVolumeSource portworxVolume,
        @Nullable ProjectedVolumeSource projected,
        @Nullable QuobyteVolumeSource quobyte,
        @Nullable RBDVolumeSource rbd,
        @Nullable ScaleIOVolumeSource scaleIO,
        @Nullable SecretVolumeSource secret,
        @Nullable StorageOSVolumeSource storageos,
        @Nullable VsphereVirtualDiskVolumeSource vsphereVolume) {
        this.awsElasticBlockStore = awsElasticBlockStore;
        this.azureDisk = azureDisk;
        this.azureFile = azureFile;
        this.cephfs = cephfs;
        this.cinder = cinder;
        this.configMap = configMap;
        this.csi = csi;
        this.downwardAPI = downwardAPI;
        this.emptyDir = emptyDir;
        this.ephemeral = ephemeral;
        this.fc = fc;
        this.flexVolume = flexVolume;
        this.flocker = flocker;
        this.gcePersistentDisk = gcePersistentDisk;
        this.gitRepo = gitRepo;
        this.glusterfs = glusterfs;
        this.hostPath = hostPath;
        this.iscsi = iscsi;
        this.name = Objects.requireNonNull(name);
        this.nfs = nfs;
        this.persistentVolumeClaim = persistentVolumeClaim;
        this.photonPersistentDisk = photonPersistentDisk;
        this.portworxVolume = portworxVolume;
        this.projected = projected;
        this.quobyte = quobyte;
        this.rbd = rbd;
        this.scaleIO = scaleIO;
        this.secret = secret;
        this.storageos = storageos;
        this.vsphereVolume = vsphereVolume;
    }

    public Optional<AWSElasticBlockStoreVolumeSource> getAwsElasticBlockStore() {
        return Optional.ofNullable(this.awsElasticBlockStore);
    }
    public Optional<AzureDiskVolumeSource> getAzureDisk() {
        return Optional.ofNullable(this.azureDisk);
    }
    public Optional<AzureFileVolumeSource> getAzureFile() {
        return Optional.ofNullable(this.azureFile);
    }
    public Optional<CephFSVolumeSource> getCephfs() {
        return Optional.ofNullable(this.cephfs);
    }
    public Optional<CinderVolumeSource> getCinder() {
        return Optional.ofNullable(this.cinder);
    }
    public Optional<ConfigMapVolumeSource> getConfigMap() {
        return Optional.ofNullable(this.configMap);
    }
    public Optional<CSIVolumeSource> getCsi() {
        return Optional.ofNullable(this.csi);
    }
    public Optional<DownwardAPIVolumeSource> getDownwardAPI() {
        return Optional.ofNullable(this.downwardAPI);
    }
    public Optional<EmptyDirVolumeSource> getEmptyDir() {
        return Optional.ofNullable(this.emptyDir);
    }
    public Optional<EphemeralVolumeSource> getEphemeral() {
        return Optional.ofNullable(this.ephemeral);
    }
    public Optional<FCVolumeSource> getFc() {
        return Optional.ofNullable(this.fc);
    }
    public Optional<FlexVolumeSource> getFlexVolume() {
        return Optional.ofNullable(this.flexVolume);
    }
    public Optional<FlockerVolumeSource> getFlocker() {
        return Optional.ofNullable(this.flocker);
    }
    public Optional<GCEPersistentDiskVolumeSource> getGcePersistentDisk() {
        return Optional.ofNullable(this.gcePersistentDisk);
    }
    public Optional<GitRepoVolumeSource> getGitRepo() {
        return Optional.ofNullable(this.gitRepo);
    }
    public Optional<GlusterfsVolumeSource> getGlusterfs() {
        return Optional.ofNullable(this.glusterfs);
    }
    public Optional<HostPathVolumeSource> getHostPath() {
        return Optional.ofNullable(this.hostPath);
    }
    public Optional<ISCSIVolumeSource> getIscsi() {
        return Optional.ofNullable(this.iscsi);
    }
    public String getName() {
        return this.name;
    }
    public Optional<NFSVolumeSource> getNfs() {
        return Optional.ofNullable(this.nfs);
    }
    public Optional<PersistentVolumeClaimVolumeSource> getPersistentVolumeClaim() {
        return Optional.ofNullable(this.persistentVolumeClaim);
    }
    public Optional<PhotonPersistentDiskVolumeSource> getPhotonPersistentDisk() {
        return Optional.ofNullable(this.photonPersistentDisk);
    }
    public Optional<PortworxVolumeSource> getPortworxVolume() {
        return Optional.ofNullable(this.portworxVolume);
    }
    public Optional<ProjectedVolumeSource> getProjected() {
        return Optional.ofNullable(this.projected);
    }
    public Optional<QuobyteVolumeSource> getQuobyte() {
        return Optional.ofNullable(this.quobyte);
    }
    public Optional<RBDVolumeSource> getRbd() {
        return Optional.ofNullable(this.rbd);
    }
    public Optional<ScaleIOVolumeSource> getScaleIO() {
        return Optional.ofNullable(this.scaleIO);
    }
    public Optional<SecretVolumeSource> getSecret() {
        return Optional.ofNullable(this.secret);
    }
    public Optional<StorageOSVolumeSource> getStorageos() {
        return Optional.ofNullable(this.storageos);
    }
    public Optional<VsphereVirtualDiskVolumeSource> getVsphereVolume() {
        return Optional.ofNullable(this.vsphereVolume);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Volume defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AWSElasticBlockStoreVolumeSource awsElasticBlockStore;
        private @Nullable AzureDiskVolumeSource azureDisk;
        private @Nullable AzureFileVolumeSource azureFile;
        private @Nullable CephFSVolumeSource cephfs;
        private @Nullable CinderVolumeSource cinder;
        private @Nullable ConfigMapVolumeSource configMap;
        private @Nullable CSIVolumeSource csi;
        private @Nullable DownwardAPIVolumeSource downwardAPI;
        private @Nullable EmptyDirVolumeSource emptyDir;
        private @Nullable EphemeralVolumeSource ephemeral;
        private @Nullable FCVolumeSource fc;
        private @Nullable FlexVolumeSource flexVolume;
        private @Nullable FlockerVolumeSource flocker;
        private @Nullable GCEPersistentDiskVolumeSource gcePersistentDisk;
        private @Nullable GitRepoVolumeSource gitRepo;
        private @Nullable GlusterfsVolumeSource glusterfs;
        private @Nullable HostPathVolumeSource hostPath;
        private @Nullable ISCSIVolumeSource iscsi;
        private String name;
        private @Nullable NFSVolumeSource nfs;
        private @Nullable PersistentVolumeClaimVolumeSource persistentVolumeClaim;
        private @Nullable PhotonPersistentDiskVolumeSource photonPersistentDisk;
        private @Nullable PortworxVolumeSource portworxVolume;
        private @Nullable ProjectedVolumeSource projected;
        private @Nullable QuobyteVolumeSource quobyte;
        private @Nullable RBDVolumeSource rbd;
        private @Nullable ScaleIOVolumeSource scaleIO;
        private @Nullable SecretVolumeSource secret;
        private @Nullable StorageOSVolumeSource storageos;
        private @Nullable VsphereVirtualDiskVolumeSource vsphereVolume;

        public Builder() {
    	      // Empty
        }

        public Builder(Volume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsElasticBlockStore = defaults.awsElasticBlockStore;
    	      this.azureDisk = defaults.azureDisk;
    	      this.azureFile = defaults.azureFile;
    	      this.cephfs = defaults.cephfs;
    	      this.cinder = defaults.cinder;
    	      this.configMap = defaults.configMap;
    	      this.csi = defaults.csi;
    	      this.downwardAPI = defaults.downwardAPI;
    	      this.emptyDir = defaults.emptyDir;
    	      this.ephemeral = defaults.ephemeral;
    	      this.fc = defaults.fc;
    	      this.flexVolume = defaults.flexVolume;
    	      this.flocker = defaults.flocker;
    	      this.gcePersistentDisk = defaults.gcePersistentDisk;
    	      this.gitRepo = defaults.gitRepo;
    	      this.glusterfs = defaults.glusterfs;
    	      this.hostPath = defaults.hostPath;
    	      this.iscsi = defaults.iscsi;
    	      this.name = defaults.name;
    	      this.nfs = defaults.nfs;
    	      this.persistentVolumeClaim = defaults.persistentVolumeClaim;
    	      this.photonPersistentDisk = defaults.photonPersistentDisk;
    	      this.portworxVolume = defaults.portworxVolume;
    	      this.projected = defaults.projected;
    	      this.quobyte = defaults.quobyte;
    	      this.rbd = defaults.rbd;
    	      this.scaleIO = defaults.scaleIO;
    	      this.secret = defaults.secret;
    	      this.storageos = defaults.storageos;
    	      this.vsphereVolume = defaults.vsphereVolume;
        }

        public Builder setAwsElasticBlockStore(@Nullable AWSElasticBlockStoreVolumeSource awsElasticBlockStore) {
            this.awsElasticBlockStore = awsElasticBlockStore;
            return this;
        }

        public Builder setAzureDisk(@Nullable AzureDiskVolumeSource azureDisk) {
            this.azureDisk = azureDisk;
            return this;
        }

        public Builder setAzureFile(@Nullable AzureFileVolumeSource azureFile) {
            this.azureFile = azureFile;
            return this;
        }

        public Builder setCephfs(@Nullable CephFSVolumeSource cephfs) {
            this.cephfs = cephfs;
            return this;
        }

        public Builder setCinder(@Nullable CinderVolumeSource cinder) {
            this.cinder = cinder;
            return this;
        }

        public Builder setConfigMap(@Nullable ConfigMapVolumeSource configMap) {
            this.configMap = configMap;
            return this;
        }

        public Builder setCsi(@Nullable CSIVolumeSource csi) {
            this.csi = csi;
            return this;
        }

        public Builder setDownwardAPI(@Nullable DownwardAPIVolumeSource downwardAPI) {
            this.downwardAPI = downwardAPI;
            return this;
        }

        public Builder setEmptyDir(@Nullable EmptyDirVolumeSource emptyDir) {
            this.emptyDir = emptyDir;
            return this;
        }

        public Builder setEphemeral(@Nullable EphemeralVolumeSource ephemeral) {
            this.ephemeral = ephemeral;
            return this;
        }

        public Builder setFc(@Nullable FCVolumeSource fc) {
            this.fc = fc;
            return this;
        }

        public Builder setFlexVolume(@Nullable FlexVolumeSource flexVolume) {
            this.flexVolume = flexVolume;
            return this;
        }

        public Builder setFlocker(@Nullable FlockerVolumeSource flocker) {
            this.flocker = flocker;
            return this;
        }

        public Builder setGcePersistentDisk(@Nullable GCEPersistentDiskVolumeSource gcePersistentDisk) {
            this.gcePersistentDisk = gcePersistentDisk;
            return this;
        }

        public Builder setGitRepo(@Nullable GitRepoVolumeSource gitRepo) {
            this.gitRepo = gitRepo;
            return this;
        }

        public Builder setGlusterfs(@Nullable GlusterfsVolumeSource glusterfs) {
            this.glusterfs = glusterfs;
            return this;
        }

        public Builder setHostPath(@Nullable HostPathVolumeSource hostPath) {
            this.hostPath = hostPath;
            return this;
        }

        public Builder setIscsi(@Nullable ISCSIVolumeSource iscsi) {
            this.iscsi = iscsi;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNfs(@Nullable NFSVolumeSource nfs) {
            this.nfs = nfs;
            return this;
        }

        public Builder setPersistentVolumeClaim(@Nullable PersistentVolumeClaimVolumeSource persistentVolumeClaim) {
            this.persistentVolumeClaim = persistentVolumeClaim;
            return this;
        }

        public Builder setPhotonPersistentDisk(@Nullable PhotonPersistentDiskVolumeSource photonPersistentDisk) {
            this.photonPersistentDisk = photonPersistentDisk;
            return this;
        }

        public Builder setPortworxVolume(@Nullable PortworxVolumeSource portworxVolume) {
            this.portworxVolume = portworxVolume;
            return this;
        }

        public Builder setProjected(@Nullable ProjectedVolumeSource projected) {
            this.projected = projected;
            return this;
        }

        public Builder setQuobyte(@Nullable QuobyteVolumeSource quobyte) {
            this.quobyte = quobyte;
            return this;
        }

        public Builder setRbd(@Nullable RBDVolumeSource rbd) {
            this.rbd = rbd;
            return this;
        }

        public Builder setScaleIO(@Nullable ScaleIOVolumeSource scaleIO) {
            this.scaleIO = scaleIO;
            return this;
        }

        public Builder setSecret(@Nullable SecretVolumeSource secret) {
            this.secret = secret;
            return this;
        }

        public Builder setStorageos(@Nullable StorageOSVolumeSource storageos) {
            this.storageos = storageos;
            return this;
        }

        public Builder setVsphereVolume(@Nullable VsphereVirtualDiskVolumeSource vsphereVolume) {
            this.vsphereVolume = vsphereVolume;
            return this;
        }

        public Volume build() {
            return new Volume(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, ephemeral, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume);
        }
    }
}
