// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TolerationArgs extends io.pulumi.resources.ResourceArgs {

    public static final TolerationArgs Empty = new TolerationArgs();

    @InputImport(name="effect")
    private final @Nullable Input<String> effect;

    public Input<String> getEffect() {
        return this.effect == null ? Input.empty() : this.effect;
    }

    @InputImport(name="key")
    private final @Nullable Input<String> key;

    public Input<String> getKey() {
        return this.key == null ? Input.empty() : this.key;
    }

    @InputImport(name="operator")
    private final @Nullable Input<String> operator;

    public Input<String> getOperator() {
        return this.operator == null ? Input.empty() : this.operator;
    }

    @InputImport(name="tolerationSeconds")
    private final @Nullable Input<Integer> tolerationSeconds;

    public Input<Integer> getTolerationSeconds() {
        return this.tolerationSeconds == null ? Input.empty() : this.tolerationSeconds;
    }

    @InputImport(name="value")
    private final @Nullable Input<String> value;

    public Input<String> getValue() {
        return this.value == null ? Input.empty() : this.value;
    }

    public TolerationArgs(
        @Nullable Input<String> effect,
        @Nullable Input<String> key,
        @Nullable Input<String> operator,
        @Nullable Input<Integer> tolerationSeconds,
        @Nullable Input<String> value) {
        this.effect = effect;
        this.key = key;
        this.operator = operator;
        this.tolerationSeconds = tolerationSeconds;
        this.value = value;
    }

    private TolerationArgs() {
        this.effect = Input.empty();
        this.key = Input.empty();
        this.operator = Input.empty();
        this.tolerationSeconds = Input.empty();
        this.value = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TolerationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> effect;
        private @Nullable Input<String> key;
        private @Nullable Input<String> operator;
        private @Nullable Input<Integer> tolerationSeconds;
        private @Nullable Input<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(TolerationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.effect = defaults.effect;
    	      this.key = defaults.key;
    	      this.operator = defaults.operator;
    	      this.tolerationSeconds = defaults.tolerationSeconds;
    	      this.value = defaults.value;
        }

        public Builder setEffect(@Nullable Input<String> effect) {
            this.effect = effect;
            return this;
        }

        public Builder setEffect(@Nullable String effect) {
            this.effect = Input.ofNullable(effect);
            return this;
        }

        public Builder setKey(@Nullable Input<String> key) {
            this.key = key;
            return this;
        }

        public Builder setKey(@Nullable String key) {
            this.key = Input.ofNullable(key);
            return this;
        }

        public Builder setOperator(@Nullable Input<String> operator) {
            this.operator = operator;
            return this;
        }

        public Builder setOperator(@Nullable String operator) {
            this.operator = Input.ofNullable(operator);
            return this;
        }

        public Builder setTolerationSeconds(@Nullable Input<Integer> tolerationSeconds) {
            this.tolerationSeconds = tolerationSeconds;
            return this;
        }

        public Builder setTolerationSeconds(@Nullable Integer tolerationSeconds) {
            this.tolerationSeconds = Input.ofNullable(tolerationSeconds);
            return this;
        }

        public Builder setValue(@Nullable Input<String> value) {
            this.value = value;
            return this;
        }

        public Builder setValue(@Nullable String value) {
            this.value = Input.ofNullable(value);
            return this;
        }

        public TolerationArgs build() {
            return new TolerationArgs(effect, key, operator, tolerationSeconds, value);
        }
    }
}
