// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.kubernetes.Utilities;
import io.pulumi.kubernetes.inputs.HelmReleaseSettingsArgs;
import io.pulumi.kubernetes.inputs.KubeClientSettingsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProviderArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    /**
     * If present, the name of the kubeconfig cluster to use.
     * 
     */
    @InputImport(name="cluster")
        private final @Nullable Input<String> cluster;

    public Input<String> getCluster() {
        return this.cluster == null ? Input.empty() : this.cluster;
    }

    /**
     * If present, the name of the kubeconfig context to use.
     * 
     */
    @InputImport(name="context")
        private final @Nullable Input<String> context;

    public Input<String> getContext() {
        return this.context == null ? Input.empty() : this.context;
    }

    /**
     * BETA FEATURE - If present and set to true, enable server-side diff calculations.
     * This feature is in developer preview, and is disabled by default.
     * 
     */
    @InputImport(name="enableDryRun", json=true)
        private final @Nullable Input<Boolean> enableDryRun;

    public Input<Boolean> getEnableDryRun() {
        return this.enableDryRun == null ? Input.empty() : this.enableDryRun;
    }

    /**
     * BETA FEATURE - If present and set to true, replace CRDs on update rather than patching.
     * This feature is in developer preview, and is disabled by default.
     * 
     */
    @InputImport(name="enableReplaceCRD", json=true)
        private final @Nullable Input<Boolean> enableReplaceCRD;

    public Input<Boolean> getEnableReplaceCRD() {
        return this.enableReplaceCRD == null ? Input.empty() : this.enableReplaceCRD;
    }

    /**
     * Options to configure the Helm Release resource.
     * 
     */
    @InputImport(name="helmReleaseSettings", json=true)
        private final @Nullable Input<HelmReleaseSettingsArgs> helmReleaseSettings;

    public Input<HelmReleaseSettingsArgs> getHelmReleaseSettings() {
        return this.helmReleaseSettings == null ? Input.empty() : this.helmReleaseSettings;
    }

    /**
     * Options for tuning the Kubernetes client used by a Provider.
     * 
     */
    @InputImport(name="kubeClientSettings", json=true)
        private final @Nullable Input<KubeClientSettingsArgs> kubeClientSettings;

    public Input<KubeClientSettingsArgs> getKubeClientSettings() {
        return this.kubeClientSettings == null ? Input.empty() : this.kubeClientSettings;
    }

    /**
     * The contents of a kubeconfig file or the path to a kubeconfig file.
     * 
     */
    @InputImport(name="kubeconfig")
        private final @Nullable Input<String> kubeconfig;

    public Input<String> getKubeconfig() {
        return this.kubeconfig == null ? Input.empty() : this.kubeconfig;
    }

    /**
     * If present, the default namespace to use. This flag is ignored for cluster-scoped resources.
     * 
     * A namespace can be specified in multiple places, and the precedence is as follows:
     * 1. `.metadata.namespace` set on the resource.
     * 2. This `namespace` parameter.
     * 3. `namespace` set for the active context in the kubeconfig.
     * 
     */
    @InputImport(name="namespace")
        private final @Nullable Input<String> namespace;

    public Input<String> getNamespace() {
        return this.namespace == null ? Input.empty() : this.namespace;
    }

    /**
     * BETA FEATURE - If present, render resource manifests to this directory. In this mode, resources will not
     * be created on a Kubernetes cluster, but the rendered manifests will be kept in sync with changes
     * to the Pulumi program. This feature is in developer preview, and is disabled by default.
     * 
     * Note that some computed Outputs such as status fields will not be populated
     * since the resources are not created on a Kubernetes cluster. These Output values will remain undefined,
     * and may result in an error if they are referenced by other resources. Also note that any secret values
     * used in these resources will be rendered in plaintext to the resulting YAML.
     * 
     */
    @InputImport(name="renderYamlToDirectory")
        private final @Nullable Input<String> renderYamlToDirectory;

    public Input<String> getRenderYamlToDirectory() {
        return this.renderYamlToDirectory == null ? Input.empty() : this.renderYamlToDirectory;
    }

    /**
     * If present and set to true, suppress apiVersion deprecation warnings from the CLI.
     * 
     */
    @InputImport(name="suppressDeprecationWarnings", json=true)
        private final @Nullable Input<Boolean> suppressDeprecationWarnings;

    public Input<Boolean> getSuppressDeprecationWarnings() {
        return this.suppressDeprecationWarnings == null ? Input.empty() : this.suppressDeprecationWarnings;
    }

    /**
     * If present and set to true, suppress unsupported Helm hook warnings from the CLI.
     * 
     */
    @InputImport(name="suppressHelmHookWarnings", json=true)
        private final @Nullable Input<Boolean> suppressHelmHookWarnings;

    public Input<Boolean> getSuppressHelmHookWarnings() {
        return this.suppressHelmHookWarnings == null ? Input.empty() : this.suppressHelmHookWarnings;
    }

    public ProviderArgs(
        @Nullable Input<String> cluster,
        @Nullable Input<String> context,
        @Nullable Input<Boolean> enableDryRun,
        @Nullable Input<Boolean> enableReplaceCRD,
        @Nullable Input<HelmReleaseSettingsArgs> helmReleaseSettings,
        @Nullable Input<KubeClientSettingsArgs> kubeClientSettings,
        @Nullable Input<String> kubeconfig,
        @Nullable Input<String> namespace,
        @Nullable Input<String> renderYamlToDirectory,
        @Nullable Input<Boolean> suppressDeprecationWarnings,
        @Nullable Input<Boolean> suppressHelmHookWarnings) {
        this.cluster = cluster;
        this.context = context;
        this.enableDryRun = enableDryRun == null ? Input.ofNullable(Utilities.getEnvBoolean("PULUMI_K8S_ENABLE_DRY_RUN").orElse(null)) : enableDryRun;
        this.enableReplaceCRD = enableReplaceCRD == null ? Input.ofNullable(Utilities.getEnvBoolean("PULUMI_K8S_ENABLE_REPLACE_CRD").orElse(null)) : enableReplaceCRD;
        this.helmReleaseSettings = helmReleaseSettings;
        this.kubeClientSettings = kubeClientSettings;
        this.kubeconfig = kubeconfig == null ? Input.ofNullable(Utilities.getEnv("KUBECONFIG").orElse(null)) : kubeconfig;
        this.namespace = namespace;
        this.renderYamlToDirectory = renderYamlToDirectory;
        this.suppressDeprecationWarnings = suppressDeprecationWarnings == null ? Input.ofNullable(Utilities.getEnvBoolean("PULUMI_K8S_SUPPRESS_DEPRECATION_WARNINGS").orElse(null)) : suppressDeprecationWarnings;
        this.suppressHelmHookWarnings = suppressHelmHookWarnings == null ? Input.ofNullable(Utilities.getEnvBoolean("PULUMI_K8S_SUPPRESS_HELM_HOOK_WARNINGS").orElse(null)) : suppressHelmHookWarnings;
    }

    private ProviderArgs() {
        this.cluster = Input.empty();
        this.context = Input.empty();
        this.enableDryRun = Input.empty();
        this.enableReplaceCRD = Input.empty();
        this.helmReleaseSettings = Input.empty();
        this.kubeClientSettings = Input.empty();
        this.kubeconfig = Input.empty();
        this.namespace = Input.empty();
        this.renderYamlToDirectory = Input.empty();
        this.suppressDeprecationWarnings = Input.empty();
        this.suppressHelmHookWarnings = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> cluster;
        private @Nullable Input<String> context;
        private @Nullable Input<Boolean> enableDryRun;
        private @Nullable Input<Boolean> enableReplaceCRD;
        private @Nullable Input<HelmReleaseSettingsArgs> helmReleaseSettings;
        private @Nullable Input<KubeClientSettingsArgs> kubeClientSettings;
        private @Nullable Input<String> kubeconfig;
        private @Nullable Input<String> namespace;
        private @Nullable Input<String> renderYamlToDirectory;
        private @Nullable Input<Boolean> suppressDeprecationWarnings;
        private @Nullable Input<Boolean> suppressHelmHookWarnings;

        public Builder() {
    	      // Empty
        }

        public Builder(ProviderArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cluster = defaults.cluster;
    	      this.context = defaults.context;
    	      this.enableDryRun = defaults.enableDryRun;
    	      this.enableReplaceCRD = defaults.enableReplaceCRD;
    	      this.helmReleaseSettings = defaults.helmReleaseSettings;
    	      this.kubeClientSettings = defaults.kubeClientSettings;
    	      this.kubeconfig = defaults.kubeconfig;
    	      this.namespace = defaults.namespace;
    	      this.renderYamlToDirectory = defaults.renderYamlToDirectory;
    	      this.suppressDeprecationWarnings = defaults.suppressDeprecationWarnings;
    	      this.suppressHelmHookWarnings = defaults.suppressHelmHookWarnings;
        }

        public Builder setCluster(@Nullable Input<String> cluster) {
            this.cluster = cluster;
            return this;
        }

        public Builder setCluster(@Nullable String cluster) {
            this.cluster = Input.ofNullable(cluster);
            return this;
        }

        public Builder setContext(@Nullable Input<String> context) {
            this.context = context;
            return this;
        }

        public Builder setContext(@Nullable String context) {
            this.context = Input.ofNullable(context);
            return this;
        }

        public Builder setEnableDryRun(@Nullable Input<Boolean> enableDryRun) {
            this.enableDryRun = enableDryRun;
            return this;
        }

        public Builder setEnableDryRun(@Nullable Boolean enableDryRun) {
            this.enableDryRun = Input.ofNullable(enableDryRun);
            return this;
        }

        public Builder setEnableReplaceCRD(@Nullable Input<Boolean> enableReplaceCRD) {
            this.enableReplaceCRD = enableReplaceCRD;
            return this;
        }

        public Builder setEnableReplaceCRD(@Nullable Boolean enableReplaceCRD) {
            this.enableReplaceCRD = Input.ofNullable(enableReplaceCRD);
            return this;
        }

        public Builder setHelmReleaseSettings(@Nullable Input<HelmReleaseSettingsArgs> helmReleaseSettings) {
            this.helmReleaseSettings = helmReleaseSettings;
            return this;
        }

        public Builder setHelmReleaseSettings(@Nullable HelmReleaseSettingsArgs helmReleaseSettings) {
            this.helmReleaseSettings = Input.ofNullable(helmReleaseSettings);
            return this;
        }

        public Builder setKubeClientSettings(@Nullable Input<KubeClientSettingsArgs> kubeClientSettings) {
            this.kubeClientSettings = kubeClientSettings;
            return this;
        }

        public Builder setKubeClientSettings(@Nullable KubeClientSettingsArgs kubeClientSettings) {
            this.kubeClientSettings = Input.ofNullable(kubeClientSettings);
            return this;
        }

        public Builder setKubeconfig(@Nullable Input<String> kubeconfig) {
            this.kubeconfig = kubeconfig;
            return this;
        }

        public Builder setKubeconfig(@Nullable String kubeconfig) {
            this.kubeconfig = Input.ofNullable(kubeconfig);
            return this;
        }

        public Builder setNamespace(@Nullable Input<String> namespace) {
            this.namespace = namespace;
            return this;
        }

        public Builder setNamespace(@Nullable String namespace) {
            this.namespace = Input.ofNullable(namespace);
            return this;
        }

        public Builder setRenderYamlToDirectory(@Nullable Input<String> renderYamlToDirectory) {
            this.renderYamlToDirectory = renderYamlToDirectory;
            return this;
        }

        public Builder setRenderYamlToDirectory(@Nullable String renderYamlToDirectory) {
            this.renderYamlToDirectory = Input.ofNullable(renderYamlToDirectory);
            return this;
        }

        public Builder setSuppressDeprecationWarnings(@Nullable Input<Boolean> suppressDeprecationWarnings) {
            this.suppressDeprecationWarnings = suppressDeprecationWarnings;
            return this;
        }

        public Builder setSuppressDeprecationWarnings(@Nullable Boolean suppressDeprecationWarnings) {
            this.suppressDeprecationWarnings = Input.ofNullable(suppressDeprecationWarnings);
            return this;
        }

        public Builder setSuppressHelmHookWarnings(@Nullable Input<Boolean> suppressHelmHookWarnings) {
            this.suppressHelmHookWarnings = suppressHelmHookWarnings;
            return this;
        }

        public Builder setSuppressHelmHookWarnings(@Nullable Boolean suppressHelmHookWarnings) {
            this.suppressHelmHookWarnings = Input.ofNullable(suppressHelmHookWarnings);
            return this;
        }
        public ProviderArgs build() {
            return new ProviderArgs(cluster, context, enableDryRun, enableReplaceCRD, helmReleaseSettings, kubeClientSettings, kubeconfig, namespace, renderYamlToDirectory, suppressDeprecationWarnings, suppressHelmHookWarnings);
        }
    }
}
