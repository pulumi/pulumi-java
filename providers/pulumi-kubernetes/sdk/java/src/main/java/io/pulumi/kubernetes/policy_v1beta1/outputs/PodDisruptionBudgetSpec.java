// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.policy_v1beta1.outputs;

import io.pulumi.core.Either;
import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.meta_v1.outputs.LabelSelector;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class PodDisruptionBudgetSpec {
    private final @Nullable Either<Integer,String> maxUnavailable;
    private final @Nullable Either<Integer,String> minAvailable;
    private final @Nullable LabelSelector selector;

    @OutputCustomType.Constructor({"maxUnavailable","minAvailable","selector"})
    private PodDisruptionBudgetSpec(
        @Nullable Either<Integer,String> maxUnavailable,
        @Nullable Either<Integer,String> minAvailable,
        @Nullable LabelSelector selector) {
        this.maxUnavailable = maxUnavailable;
        this.minAvailable = minAvailable;
        this.selector = selector;
    }

    public Optional<Either<Integer,String>> getMaxUnavailable() {
        return Optional.ofNullable(this.maxUnavailable);
    }
    public Optional<Either<Integer,String>> getMinAvailable() {
        return Optional.ofNullable(this.minAvailable);
    }
    public Optional<LabelSelector> getSelector() {
        return Optional.ofNullable(this.selector);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PodDisruptionBudgetSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Either<Integer,String> maxUnavailable;
        private @Nullable Either<Integer,String> minAvailable;
        private @Nullable LabelSelector selector;

        public Builder() {
    	      // Empty
        }

        public Builder(PodDisruptionBudgetSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxUnavailable = defaults.maxUnavailable;
    	      this.minAvailable = defaults.minAvailable;
    	      this.selector = defaults.selector;
        }

        public Builder setMaxUnavailable(@Nullable Either<Integer,String> maxUnavailable) {
            this.maxUnavailable = maxUnavailable;
            return this;
        }

        public Builder setMinAvailable(@Nullable Either<Integer,String> minAvailable) {
            this.minAvailable = minAvailable;
            return this;
        }

        public Builder setSelector(@Nullable LabelSelector selector) {
            this.selector = selector;
            return this;
        }

        public PodDisruptionBudgetSpec build() {
            return new PodDisruptionBudgetSpec(maxUnavailable, minAvailable, selector);
        }
    }
}
