// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.kubernetes.core_v1.inputs.ObjectFieldSelectorArgs;
import io.pulumi.kubernetes.core_v1.inputs.ResourceFieldSelectorArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 * 
 */
public final class DownwardAPIVolumeFileArgs extends io.pulumi.resources.ResourceArgs {

    public static final DownwardAPIVolumeFileArgs Empty = new DownwardAPIVolumeFileArgs();

    /**
     * Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
     * 
     */
    @InputImport(name="fieldRef")
      private final @Nullable Input<ObjectFieldSelectorArgs> fieldRef;

    public Input<ObjectFieldSelectorArgs> getFieldRef() {
        return this.fieldRef == null ? Input.empty() : this.fieldRef;
    }

    /**
     * Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * 
     */
    @InputImport(name="mode")
      private final @Nullable Input<Integer> mode;

    public Input<Integer> getMode() {
        return this.mode == null ? Input.empty() : this.mode;
    }

    /**
     * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
     * 
     */
    @InputImport(name="path", required=true)
      private final Input<String> path;

    public Input<String> getPath() {
        return this.path;
    }

    /**
     * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
     * 
     */
    @InputImport(name="resourceFieldRef")
      private final @Nullable Input<ResourceFieldSelectorArgs> resourceFieldRef;

    public Input<ResourceFieldSelectorArgs> getResourceFieldRef() {
        return this.resourceFieldRef == null ? Input.empty() : this.resourceFieldRef;
    }

    public DownwardAPIVolumeFileArgs(
        @Nullable Input<ObjectFieldSelectorArgs> fieldRef,
        @Nullable Input<Integer> mode,
        Input<String> path,
        @Nullable Input<ResourceFieldSelectorArgs> resourceFieldRef) {
        this.fieldRef = fieldRef;
        this.mode = mode;
        this.path = Objects.requireNonNull(path, "expected parameter 'path' to be non-null");
        this.resourceFieldRef = resourceFieldRef;
    }

    private DownwardAPIVolumeFileArgs() {
        this.fieldRef = Input.empty();
        this.mode = Input.empty();
        this.path = Input.empty();
        this.resourceFieldRef = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DownwardAPIVolumeFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ObjectFieldSelectorArgs> fieldRef;
        private @Nullable Input<Integer> mode;
        private Input<String> path;
        private @Nullable Input<ResourceFieldSelectorArgs> resourceFieldRef;

        public Builder() {
    	      // Empty
        }

        public Builder(DownwardAPIVolumeFileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fieldRef = defaults.fieldRef;
    	      this.mode = defaults.mode;
    	      this.path = defaults.path;
    	      this.resourceFieldRef = defaults.resourceFieldRef;
        }

        public Builder setFieldRef(@Nullable Input<ObjectFieldSelectorArgs> fieldRef) {
            this.fieldRef = fieldRef;
            return this;
        }

        public Builder setFieldRef(@Nullable ObjectFieldSelectorArgs fieldRef) {
            this.fieldRef = Input.ofNullable(fieldRef);
            return this;
        }

        public Builder setMode(@Nullable Input<Integer> mode) {
            this.mode = mode;
            return this;
        }

        public Builder setMode(@Nullable Integer mode) {
            this.mode = Input.ofNullable(mode);
            return this;
        }

        public Builder setPath(Input<String> path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }

        public Builder setPath(String path) {
            this.path = Input.of(Objects.requireNonNull(path));
            return this;
        }

        public Builder setResourceFieldRef(@Nullable Input<ResourceFieldSelectorArgs> resourceFieldRef) {
            this.resourceFieldRef = resourceFieldRef;
            return this;
        }

        public Builder setResourceFieldRef(@Nullable ResourceFieldSelectorArgs resourceFieldRef) {
            this.resourceFieldRef = Input.ofNullable(resourceFieldRef);
            return this;
        }
        public DownwardAPIVolumeFileArgs build() {
            return new DownwardAPIVolumeFileArgs(fieldRef, mode, path, resourceFieldRef);
        }
    }
}
