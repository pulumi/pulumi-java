// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.apps_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * StatefulSetPersistentVolumeClaimRetentionPolicy describes the policy used for PVCs created from the StatefulSet VolumeClaimTemplates.
 * 
 */
public final class StatefulSetPersistentVolumeClaimRetentionPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final StatefulSetPersistentVolumeClaimRetentionPolicyArgs Empty = new StatefulSetPersistentVolumeClaimRetentionPolicyArgs();

    /**
     * WhenDeleted specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is deleted. The default policy of `Retain` causes PVCs to not be affected by StatefulSet deletion. The `Delete` policy causes those PVCs to be deleted.
     * 
     */
    @Import(name="whenDeleted")
      private final @Nullable Output<String> whenDeleted;

    public Output<String> getWhenDeleted() {
        return this.whenDeleted == null ? Codegen.empty() : this.whenDeleted;
    }

    /**
     * WhenScaled specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is scaled down. The default policy of `Retain` causes PVCs to not be affected by a scaledown. The `Delete` policy causes the associated PVCs for any excess pods above the replica count to be deleted.
     * 
     */
    @Import(name="whenScaled")
      private final @Nullable Output<String> whenScaled;

    public Output<String> getWhenScaled() {
        return this.whenScaled == null ? Codegen.empty() : this.whenScaled;
    }

    public StatefulSetPersistentVolumeClaimRetentionPolicyArgs(
        @Nullable Output<String> whenDeleted,
        @Nullable Output<String> whenScaled) {
        this.whenDeleted = whenDeleted;
        this.whenScaled = whenScaled;
    }

    private StatefulSetPersistentVolumeClaimRetentionPolicyArgs() {
        this.whenDeleted = Codegen.empty();
        this.whenScaled = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StatefulSetPersistentVolumeClaimRetentionPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> whenDeleted;
        private @Nullable Output<String> whenScaled;

        public Builder() {
    	      // Empty
        }

        public Builder(StatefulSetPersistentVolumeClaimRetentionPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.whenDeleted = defaults.whenDeleted;
    	      this.whenScaled = defaults.whenScaled;
        }

        public Builder whenDeleted(@Nullable Output<String> whenDeleted) {
            this.whenDeleted = whenDeleted;
            return this;
        }
        public Builder whenDeleted(@Nullable String whenDeleted) {
            this.whenDeleted = Codegen.ofNullable(whenDeleted);
            return this;
        }
        public Builder whenScaled(@Nullable Output<String> whenScaled) {
            this.whenScaled = whenScaled;
            return this;
        }
        public Builder whenScaled(@Nullable String whenScaled) {
            this.whenScaled = Codegen.ofNullable(whenScaled);
            return this;
        }        public StatefulSetPersistentVolumeClaimRetentionPolicyArgs build() {
            return new StatefulSetPersistentVolumeClaimRetentionPolicyArgs(whenDeleted, whenScaled);
        }
    }
}
