// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.kubernetes.core_v1.inputs.NodeSelectorArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.
 * 
 */
public final class VolumeNodeAffinityArgs extends io.pulumi.resources.ResourceArgs {

    public static final VolumeNodeAffinityArgs Empty = new VolumeNodeAffinityArgs();

    /**
     * Required specifies hard node constraints that must be met.
     * 
     */
    @Import(name="required")
      private final @Nullable Output<NodeSelectorArgs> required;

    public Output<NodeSelectorArgs> getRequired() {
        return this.required == null ? Output.empty() : this.required;
    }

    public VolumeNodeAffinityArgs(@Nullable Output<NodeSelectorArgs> required) {
        this.required = required;
    }

    private VolumeNodeAffinityArgs() {
        this.required = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeNodeAffinityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<NodeSelectorArgs> required;

        public Builder() {
    	      // Empty
        }

        public Builder(VolumeNodeAffinityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.required = defaults.required;
        }

        public Builder required(@Nullable Output<NodeSelectorArgs> required) {
            this.required = required;
            return this;
        }

        public Builder required(@Nullable NodeSelectorArgs required) {
            this.required = Output.ofNullable(required);
            return this;
        }
        public VolumeNodeAffinityArgs build() {
            return new VolumeNodeAffinityArgs(required);
        }
    }
}
