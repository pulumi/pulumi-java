// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.kubernetes.core_v1.inputs.SELinuxOptionsArgs;
import io.pulumi.kubernetes.core_v1.inputs.SeccompProfileArgs;
import io.pulumi.kubernetes.core_v1.inputs.SysctlArgs;
import io.pulumi.kubernetes.core_v1.inputs.WindowsSecurityContextOptionsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PodSecurityContextArgs extends io.pulumi.resources.ResourceArgs {

    public static final PodSecurityContextArgs Empty = new PodSecurityContextArgs();

    @InputImport(name="fsGroup")
    private final @Nullable Input<Integer> fsGroup;

    public Input<Integer> getFsGroup() {
        return this.fsGroup == null ? Input.empty() : this.fsGroup;
    }

    @InputImport(name="fsGroupChangePolicy")
    private final @Nullable Input<String> fsGroupChangePolicy;

    public Input<String> getFsGroupChangePolicy() {
        return this.fsGroupChangePolicy == null ? Input.empty() : this.fsGroupChangePolicy;
    }

    @InputImport(name="runAsGroup")
    private final @Nullable Input<Integer> runAsGroup;

    public Input<Integer> getRunAsGroup() {
        return this.runAsGroup == null ? Input.empty() : this.runAsGroup;
    }

    @InputImport(name="runAsNonRoot")
    private final @Nullable Input<Boolean> runAsNonRoot;

    public Input<Boolean> getRunAsNonRoot() {
        return this.runAsNonRoot == null ? Input.empty() : this.runAsNonRoot;
    }

    @InputImport(name="runAsUser")
    private final @Nullable Input<Integer> runAsUser;

    public Input<Integer> getRunAsUser() {
        return this.runAsUser == null ? Input.empty() : this.runAsUser;
    }

    @InputImport(name="seLinuxOptions")
    private final @Nullable Input<SELinuxOptionsArgs> seLinuxOptions;

    public Input<SELinuxOptionsArgs> getSeLinuxOptions() {
        return this.seLinuxOptions == null ? Input.empty() : this.seLinuxOptions;
    }

    @InputImport(name="seccompProfile")
    private final @Nullable Input<SeccompProfileArgs> seccompProfile;

    public Input<SeccompProfileArgs> getSeccompProfile() {
        return this.seccompProfile == null ? Input.empty() : this.seccompProfile;
    }

    @InputImport(name="supplementalGroups")
    private final @Nullable Input<List<Integer>> supplementalGroups;

    public Input<List<Integer>> getSupplementalGroups() {
        return this.supplementalGroups == null ? Input.empty() : this.supplementalGroups;
    }

    @InputImport(name="sysctls")
    private final @Nullable Input<List<SysctlArgs>> sysctls;

    public Input<List<SysctlArgs>> getSysctls() {
        return this.sysctls == null ? Input.empty() : this.sysctls;
    }

    @InputImport(name="windowsOptions")
    private final @Nullable Input<WindowsSecurityContextOptionsArgs> windowsOptions;

    public Input<WindowsSecurityContextOptionsArgs> getWindowsOptions() {
        return this.windowsOptions == null ? Input.empty() : this.windowsOptions;
    }

    public PodSecurityContextArgs(
        @Nullable Input<Integer> fsGroup,
        @Nullable Input<String> fsGroupChangePolicy,
        @Nullable Input<Integer> runAsGroup,
        @Nullable Input<Boolean> runAsNonRoot,
        @Nullable Input<Integer> runAsUser,
        @Nullable Input<SELinuxOptionsArgs> seLinuxOptions,
        @Nullable Input<SeccompProfileArgs> seccompProfile,
        @Nullable Input<List<Integer>> supplementalGroups,
        @Nullable Input<List<SysctlArgs>> sysctls,
        @Nullable Input<WindowsSecurityContextOptionsArgs> windowsOptions) {
        this.fsGroup = fsGroup;
        this.fsGroupChangePolicy = fsGroupChangePolicy;
        this.runAsGroup = runAsGroup;
        this.runAsNonRoot = runAsNonRoot;
        this.runAsUser = runAsUser;
        this.seLinuxOptions = seLinuxOptions;
        this.seccompProfile = seccompProfile;
        this.supplementalGroups = supplementalGroups;
        this.sysctls = sysctls;
        this.windowsOptions = windowsOptions;
    }

    private PodSecurityContextArgs() {
        this.fsGroup = Input.empty();
        this.fsGroupChangePolicy = Input.empty();
        this.runAsGroup = Input.empty();
        this.runAsNonRoot = Input.empty();
        this.runAsUser = Input.empty();
        this.seLinuxOptions = Input.empty();
        this.seccompProfile = Input.empty();
        this.supplementalGroups = Input.empty();
        this.sysctls = Input.empty();
        this.windowsOptions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PodSecurityContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> fsGroup;
        private @Nullable Input<String> fsGroupChangePolicy;
        private @Nullable Input<Integer> runAsGroup;
        private @Nullable Input<Boolean> runAsNonRoot;
        private @Nullable Input<Integer> runAsUser;
        private @Nullable Input<SELinuxOptionsArgs> seLinuxOptions;
        private @Nullable Input<SeccompProfileArgs> seccompProfile;
        private @Nullable Input<List<Integer>> supplementalGroups;
        private @Nullable Input<List<SysctlArgs>> sysctls;
        private @Nullable Input<WindowsSecurityContextOptionsArgs> windowsOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(PodSecurityContextArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fsGroup = defaults.fsGroup;
    	      this.fsGroupChangePolicy = defaults.fsGroupChangePolicy;
    	      this.runAsGroup = defaults.runAsGroup;
    	      this.runAsNonRoot = defaults.runAsNonRoot;
    	      this.runAsUser = defaults.runAsUser;
    	      this.seLinuxOptions = defaults.seLinuxOptions;
    	      this.seccompProfile = defaults.seccompProfile;
    	      this.supplementalGroups = defaults.supplementalGroups;
    	      this.sysctls = defaults.sysctls;
    	      this.windowsOptions = defaults.windowsOptions;
        }

        public Builder setFsGroup(@Nullable Input<Integer> fsGroup) {
            this.fsGroup = fsGroup;
            return this;
        }

        public Builder setFsGroup(@Nullable Integer fsGroup) {
            this.fsGroup = Input.ofNullable(fsGroup);
            return this;
        }

        public Builder setFsGroupChangePolicy(@Nullable Input<String> fsGroupChangePolicy) {
            this.fsGroupChangePolicy = fsGroupChangePolicy;
            return this;
        }

        public Builder setFsGroupChangePolicy(@Nullable String fsGroupChangePolicy) {
            this.fsGroupChangePolicy = Input.ofNullable(fsGroupChangePolicy);
            return this;
        }

        public Builder setRunAsGroup(@Nullable Input<Integer> runAsGroup) {
            this.runAsGroup = runAsGroup;
            return this;
        }

        public Builder setRunAsGroup(@Nullable Integer runAsGroup) {
            this.runAsGroup = Input.ofNullable(runAsGroup);
            return this;
        }

        public Builder setRunAsNonRoot(@Nullable Input<Boolean> runAsNonRoot) {
            this.runAsNonRoot = runAsNonRoot;
            return this;
        }

        public Builder setRunAsNonRoot(@Nullable Boolean runAsNonRoot) {
            this.runAsNonRoot = Input.ofNullable(runAsNonRoot);
            return this;
        }

        public Builder setRunAsUser(@Nullable Input<Integer> runAsUser) {
            this.runAsUser = runAsUser;
            return this;
        }

        public Builder setRunAsUser(@Nullable Integer runAsUser) {
            this.runAsUser = Input.ofNullable(runAsUser);
            return this;
        }

        public Builder setSeLinuxOptions(@Nullable Input<SELinuxOptionsArgs> seLinuxOptions) {
            this.seLinuxOptions = seLinuxOptions;
            return this;
        }

        public Builder setSeLinuxOptions(@Nullable SELinuxOptionsArgs seLinuxOptions) {
            this.seLinuxOptions = Input.ofNullable(seLinuxOptions);
            return this;
        }

        public Builder setSeccompProfile(@Nullable Input<SeccompProfileArgs> seccompProfile) {
            this.seccompProfile = seccompProfile;
            return this;
        }

        public Builder setSeccompProfile(@Nullable SeccompProfileArgs seccompProfile) {
            this.seccompProfile = Input.ofNullable(seccompProfile);
            return this;
        }

        public Builder setSupplementalGroups(@Nullable Input<List<Integer>> supplementalGroups) {
            this.supplementalGroups = supplementalGroups;
            return this;
        }

        public Builder setSupplementalGroups(@Nullable List<Integer> supplementalGroups) {
            this.supplementalGroups = Input.ofNullable(supplementalGroups);
            return this;
        }

        public Builder setSysctls(@Nullable Input<List<SysctlArgs>> sysctls) {
            this.sysctls = sysctls;
            return this;
        }

        public Builder setSysctls(@Nullable List<SysctlArgs> sysctls) {
            this.sysctls = Input.ofNullable(sysctls);
            return this;
        }

        public Builder setWindowsOptions(@Nullable Input<WindowsSecurityContextOptionsArgs> windowsOptions) {
            this.windowsOptions = windowsOptions;
            return this;
        }

        public Builder setWindowsOptions(@Nullable WindowsSecurityContextOptionsArgs windowsOptions) {
            this.windowsOptions = Input.ofNullable(windowsOptions);
            return this;
        }

        public PodSecurityContextArgs build() {
            return new PodSecurityContextArgs(fsGroup, fsGroupChangePolicy, runAsGroup, runAsNonRoot, runAsUser, seLinuxOptions, seccompProfile, supplementalGroups, sysctls, windowsOptions);
        }
    }
}
