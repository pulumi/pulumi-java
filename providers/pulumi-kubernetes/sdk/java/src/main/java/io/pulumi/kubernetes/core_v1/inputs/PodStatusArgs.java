// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.kubernetes.core_v1.inputs.ContainerStatusArgs;
import io.pulumi.kubernetes.core_v1.inputs.PodConditionArgs;
import io.pulumi.kubernetes.core_v1.inputs.PodIPArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PodStatusArgs extends io.pulumi.resources.ResourceArgs {

    public static final PodStatusArgs Empty = new PodStatusArgs();

    @InputImport(name="conditions")
    private final @Nullable Input<List<PodConditionArgs>> conditions;

    public Input<List<PodConditionArgs>> getConditions() {
        return this.conditions == null ? Input.empty() : this.conditions;
    }

    @InputImport(name="containerStatuses")
    private final @Nullable Input<List<ContainerStatusArgs>> containerStatuses;

    public Input<List<ContainerStatusArgs>> getContainerStatuses() {
        return this.containerStatuses == null ? Input.empty() : this.containerStatuses;
    }

    @InputImport(name="ephemeralContainerStatuses")
    private final @Nullable Input<List<ContainerStatusArgs>> ephemeralContainerStatuses;

    public Input<List<ContainerStatusArgs>> getEphemeralContainerStatuses() {
        return this.ephemeralContainerStatuses == null ? Input.empty() : this.ephemeralContainerStatuses;
    }

    @InputImport(name="hostIP")
    private final @Nullable Input<String> hostIP;

    public Input<String> getHostIP() {
        return this.hostIP == null ? Input.empty() : this.hostIP;
    }

    @InputImport(name="initContainerStatuses")
    private final @Nullable Input<List<ContainerStatusArgs>> initContainerStatuses;

    public Input<List<ContainerStatusArgs>> getInitContainerStatuses() {
        return this.initContainerStatuses == null ? Input.empty() : this.initContainerStatuses;
    }

    @InputImport(name="message")
    private final @Nullable Input<String> message;

    public Input<String> getMessage() {
        return this.message == null ? Input.empty() : this.message;
    }

    @InputImport(name="nominatedNodeName")
    private final @Nullable Input<String> nominatedNodeName;

    public Input<String> getNominatedNodeName() {
        return this.nominatedNodeName == null ? Input.empty() : this.nominatedNodeName;
    }

    @InputImport(name="phase")
    private final @Nullable Input<String> phase;

    public Input<String> getPhase() {
        return this.phase == null ? Input.empty() : this.phase;
    }

    @InputImport(name="podIP")
    private final @Nullable Input<String> podIP;

    public Input<String> getPodIP() {
        return this.podIP == null ? Input.empty() : this.podIP;
    }

    @InputImport(name="podIPs")
    private final @Nullable Input<List<PodIPArgs>> podIPs;

    public Input<List<PodIPArgs>> getPodIPs() {
        return this.podIPs == null ? Input.empty() : this.podIPs;
    }

    @InputImport(name="qosClass")
    private final @Nullable Input<String> qosClass;

    public Input<String> getQosClass() {
        return this.qosClass == null ? Input.empty() : this.qosClass;
    }

    @InputImport(name="reason")
    private final @Nullable Input<String> reason;

    public Input<String> getReason() {
        return this.reason == null ? Input.empty() : this.reason;
    }

    @InputImport(name="startTime")
    private final @Nullable Input<String> startTime;

    public Input<String> getStartTime() {
        return this.startTime == null ? Input.empty() : this.startTime;
    }

    public PodStatusArgs(
        @Nullable Input<List<PodConditionArgs>> conditions,
        @Nullable Input<List<ContainerStatusArgs>> containerStatuses,
        @Nullable Input<List<ContainerStatusArgs>> ephemeralContainerStatuses,
        @Nullable Input<String> hostIP,
        @Nullable Input<List<ContainerStatusArgs>> initContainerStatuses,
        @Nullable Input<String> message,
        @Nullable Input<String> nominatedNodeName,
        @Nullable Input<String> phase,
        @Nullable Input<String> podIP,
        @Nullable Input<List<PodIPArgs>> podIPs,
        @Nullable Input<String> qosClass,
        @Nullable Input<String> reason,
        @Nullable Input<String> startTime) {
        this.conditions = conditions;
        this.containerStatuses = containerStatuses;
        this.ephemeralContainerStatuses = ephemeralContainerStatuses;
        this.hostIP = hostIP;
        this.initContainerStatuses = initContainerStatuses;
        this.message = message;
        this.nominatedNodeName = nominatedNodeName;
        this.phase = phase;
        this.podIP = podIP;
        this.podIPs = podIPs;
        this.qosClass = qosClass;
        this.reason = reason;
        this.startTime = startTime;
    }

    private PodStatusArgs() {
        this.conditions = Input.empty();
        this.containerStatuses = Input.empty();
        this.ephemeralContainerStatuses = Input.empty();
        this.hostIP = Input.empty();
        this.initContainerStatuses = Input.empty();
        this.message = Input.empty();
        this.nominatedNodeName = Input.empty();
        this.phase = Input.empty();
        this.podIP = Input.empty();
        this.podIPs = Input.empty();
        this.qosClass = Input.empty();
        this.reason = Input.empty();
        this.startTime = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PodStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<PodConditionArgs>> conditions;
        private @Nullable Input<List<ContainerStatusArgs>> containerStatuses;
        private @Nullable Input<List<ContainerStatusArgs>> ephemeralContainerStatuses;
        private @Nullable Input<String> hostIP;
        private @Nullable Input<List<ContainerStatusArgs>> initContainerStatuses;
        private @Nullable Input<String> message;
        private @Nullable Input<String> nominatedNodeName;
        private @Nullable Input<String> phase;
        private @Nullable Input<String> podIP;
        private @Nullable Input<List<PodIPArgs>> podIPs;
        private @Nullable Input<String> qosClass;
        private @Nullable Input<String> reason;
        private @Nullable Input<String> startTime;

        public Builder() {
    	      // Empty
        }

        public Builder(PodStatusArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.containerStatuses = defaults.containerStatuses;
    	      this.ephemeralContainerStatuses = defaults.ephemeralContainerStatuses;
    	      this.hostIP = defaults.hostIP;
    	      this.initContainerStatuses = defaults.initContainerStatuses;
    	      this.message = defaults.message;
    	      this.nominatedNodeName = defaults.nominatedNodeName;
    	      this.phase = defaults.phase;
    	      this.podIP = defaults.podIP;
    	      this.podIPs = defaults.podIPs;
    	      this.qosClass = defaults.qosClass;
    	      this.reason = defaults.reason;
    	      this.startTime = defaults.startTime;
        }

        public Builder setConditions(@Nullable Input<List<PodConditionArgs>> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder setConditions(@Nullable List<PodConditionArgs> conditions) {
            this.conditions = Input.ofNullable(conditions);
            return this;
        }

        public Builder setContainerStatuses(@Nullable Input<List<ContainerStatusArgs>> containerStatuses) {
            this.containerStatuses = containerStatuses;
            return this;
        }

        public Builder setContainerStatuses(@Nullable List<ContainerStatusArgs> containerStatuses) {
            this.containerStatuses = Input.ofNullable(containerStatuses);
            return this;
        }

        public Builder setEphemeralContainerStatuses(@Nullable Input<List<ContainerStatusArgs>> ephemeralContainerStatuses) {
            this.ephemeralContainerStatuses = ephemeralContainerStatuses;
            return this;
        }

        public Builder setEphemeralContainerStatuses(@Nullable List<ContainerStatusArgs> ephemeralContainerStatuses) {
            this.ephemeralContainerStatuses = Input.ofNullable(ephemeralContainerStatuses);
            return this;
        }

        public Builder setHostIP(@Nullable Input<String> hostIP) {
            this.hostIP = hostIP;
            return this;
        }

        public Builder setHostIP(@Nullable String hostIP) {
            this.hostIP = Input.ofNullable(hostIP);
            return this;
        }

        public Builder setInitContainerStatuses(@Nullable Input<List<ContainerStatusArgs>> initContainerStatuses) {
            this.initContainerStatuses = initContainerStatuses;
            return this;
        }

        public Builder setInitContainerStatuses(@Nullable List<ContainerStatusArgs> initContainerStatuses) {
            this.initContainerStatuses = Input.ofNullable(initContainerStatuses);
            return this;
        }

        public Builder setMessage(@Nullable Input<String> message) {
            this.message = message;
            return this;
        }

        public Builder setMessage(@Nullable String message) {
            this.message = Input.ofNullable(message);
            return this;
        }

        public Builder setNominatedNodeName(@Nullable Input<String> nominatedNodeName) {
            this.nominatedNodeName = nominatedNodeName;
            return this;
        }

        public Builder setNominatedNodeName(@Nullable String nominatedNodeName) {
            this.nominatedNodeName = Input.ofNullable(nominatedNodeName);
            return this;
        }

        public Builder setPhase(@Nullable Input<String> phase) {
            this.phase = phase;
            return this;
        }

        public Builder setPhase(@Nullable String phase) {
            this.phase = Input.ofNullable(phase);
            return this;
        }

        public Builder setPodIP(@Nullable Input<String> podIP) {
            this.podIP = podIP;
            return this;
        }

        public Builder setPodIP(@Nullable String podIP) {
            this.podIP = Input.ofNullable(podIP);
            return this;
        }

        public Builder setPodIPs(@Nullable Input<List<PodIPArgs>> podIPs) {
            this.podIPs = podIPs;
            return this;
        }

        public Builder setPodIPs(@Nullable List<PodIPArgs> podIPs) {
            this.podIPs = Input.ofNullable(podIPs);
            return this;
        }

        public Builder setQosClass(@Nullable Input<String> qosClass) {
            this.qosClass = qosClass;
            return this;
        }

        public Builder setQosClass(@Nullable String qosClass) {
            this.qosClass = Input.ofNullable(qosClass);
            return this;
        }

        public Builder setReason(@Nullable Input<String> reason) {
            this.reason = reason;
            return this;
        }

        public Builder setReason(@Nullable String reason) {
            this.reason = Input.ofNullable(reason);
            return this;
        }

        public Builder setStartTime(@Nullable Input<String> startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder setStartTime(@Nullable String startTime) {
            this.startTime = Input.ofNullable(startTime);
            return this;
        }

        public PodStatusArgs build() {
            return new PodStatusArgs(conditions, containerStatuses, ephemeralContainerStatuses, hostIP, initContainerStatuses, message, nominatedNodeName, phase, podIP, podIPs, qosClass, reason, startTime);
        }
    }
}
