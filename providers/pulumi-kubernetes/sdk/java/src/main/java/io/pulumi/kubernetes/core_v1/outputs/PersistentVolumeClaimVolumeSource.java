// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class PersistentVolumeClaimVolumeSource {
    /**
     * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
     * 
     */
    private final String claimName;
    /**
     * Will force the ReadOnly setting in VolumeMounts. Default false.
     * 
     */
    private final @Nullable Boolean readOnly;

    @OutputCustomType.Constructor({"claimName","readOnly"})
    private PersistentVolumeClaimVolumeSource(
        String claimName,
        @Nullable Boolean readOnly) {
        this.claimName = claimName;
        this.readOnly = readOnly;
    }

    /**
     * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
     * 
    */
    public String getClaimName() {
        return this.claimName;
    }
    /**
     * Will force the ReadOnly setting in VolumeMounts. Default false.
     * 
    */
    public Optional<Boolean> getReadOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PersistentVolumeClaimVolumeSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String claimName;
        private @Nullable Boolean readOnly;

        public Builder() {
    	      // Empty
        }

        public Builder(PersistentVolumeClaimVolumeSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.claimName = defaults.claimName;
    	      this.readOnly = defaults.readOnly;
        }

        public Builder setClaimName(String claimName) {
            this.claimName = Objects.requireNonNull(claimName);
            return this;
        }

        public Builder setReadOnly(@Nullable Boolean readOnly) {
            this.readOnly = readOnly;
            return this;
        }
        public PersistentVolumeClaimVolumeSource build() {
            return new PersistentVolumeClaimVolumeSource(claimName, readOnly);
        }
    }
}
