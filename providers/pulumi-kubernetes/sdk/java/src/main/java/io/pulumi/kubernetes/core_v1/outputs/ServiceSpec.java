// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.core_v1.outputs.ServicePort;
import io.pulumi.kubernetes.core_v1.outputs.SessionAffinityConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ServiceSpec {
    private final @Nullable Boolean allocateLoadBalancerNodePorts;
    private final @Nullable String clusterIP;
    private final @Nullable List<String> clusterIPs;
    private final @Nullable List<String> externalIPs;
    private final @Nullable String externalName;
    private final @Nullable String externalTrafficPolicy;
    private final @Nullable Integer healthCheckNodePort;
    private final @Nullable String internalTrafficPolicy;
    private final @Nullable List<String> ipFamilies;
    private final @Nullable String ipFamily;
    private final @Nullable String ipFamilyPolicy;
    private final @Nullable String loadBalancerClass;
    private final @Nullable String loadBalancerIP;
    private final @Nullable List<String> loadBalancerSourceRanges;
    private final @Nullable List<ServicePort> ports;
    private final @Nullable Boolean publishNotReadyAddresses;
    private final @Nullable Map<String,String> selector;
    private final @Nullable String sessionAffinity;
    private final @Nullable SessionAffinityConfig sessionAffinityConfig;
    private final @Nullable List<String> topologyKeys;
    private final @Nullable String type;

    @OutputCustomType.Constructor({"allocateLoadBalancerNodePorts","clusterIP","clusterIPs","externalIPs","externalName","externalTrafficPolicy","healthCheckNodePort","internalTrafficPolicy","ipFamilies","ipFamily","ipFamilyPolicy","loadBalancerClass","loadBalancerIP","loadBalancerSourceRanges","ports","publishNotReadyAddresses","selector","sessionAffinity","sessionAffinityConfig","topologyKeys","type"})
    private ServiceSpec(
        @Nullable Boolean allocateLoadBalancerNodePorts,
        @Nullable String clusterIP,
        @Nullable List<String> clusterIPs,
        @Nullable List<String> externalIPs,
        @Nullable String externalName,
        @Nullable String externalTrafficPolicy,
        @Nullable Integer healthCheckNodePort,
        @Nullable String internalTrafficPolicy,
        @Nullable List<String> ipFamilies,
        @Nullable String ipFamily,
        @Nullable String ipFamilyPolicy,
        @Nullable String loadBalancerClass,
        @Nullable String loadBalancerIP,
        @Nullable List<String> loadBalancerSourceRanges,
        @Nullable List<ServicePort> ports,
        @Nullable Boolean publishNotReadyAddresses,
        @Nullable Map<String,String> selector,
        @Nullable String sessionAffinity,
        @Nullable SessionAffinityConfig sessionAffinityConfig,
        @Nullable List<String> topologyKeys,
        @Nullable String type) {
        this.allocateLoadBalancerNodePorts = allocateLoadBalancerNodePorts;
        this.clusterIP = clusterIP;
        this.clusterIPs = clusterIPs;
        this.externalIPs = externalIPs;
        this.externalName = externalName;
        this.externalTrafficPolicy = externalTrafficPolicy;
        this.healthCheckNodePort = healthCheckNodePort;
        this.internalTrafficPolicy = internalTrafficPolicy;
        this.ipFamilies = ipFamilies;
        this.ipFamily = ipFamily;
        this.ipFamilyPolicy = ipFamilyPolicy;
        this.loadBalancerClass = loadBalancerClass;
        this.loadBalancerIP = loadBalancerIP;
        this.loadBalancerSourceRanges = loadBalancerSourceRanges;
        this.ports = ports;
        this.publishNotReadyAddresses = publishNotReadyAddresses;
        this.selector = selector;
        this.sessionAffinity = sessionAffinity;
        this.sessionAffinityConfig = sessionAffinityConfig;
        this.topologyKeys = topologyKeys;
        this.type = type;
    }

    public Optional<Boolean> getAllocateLoadBalancerNodePorts() {
        return Optional.ofNullable(this.allocateLoadBalancerNodePorts);
    }
    public Optional<String> getClusterIP() {
        return Optional.ofNullable(this.clusterIP);
    }
    public List<String> getClusterIPs() {
        return this.clusterIPs == null ? List.of() : this.clusterIPs;
    }
    public List<String> getExternalIPs() {
        return this.externalIPs == null ? List.of() : this.externalIPs;
    }
    public Optional<String> getExternalName() {
        return Optional.ofNullable(this.externalName);
    }
    public Optional<String> getExternalTrafficPolicy() {
        return Optional.ofNullable(this.externalTrafficPolicy);
    }
    public Optional<Integer> getHealthCheckNodePort() {
        return Optional.ofNullable(this.healthCheckNodePort);
    }
    public Optional<String> getInternalTrafficPolicy() {
        return Optional.ofNullable(this.internalTrafficPolicy);
    }
    public List<String> getIpFamilies() {
        return this.ipFamilies == null ? List.of() : this.ipFamilies;
    }
    public Optional<String> getIpFamily() {
        return Optional.ofNullable(this.ipFamily);
    }
    public Optional<String> getIpFamilyPolicy() {
        return Optional.ofNullable(this.ipFamilyPolicy);
    }
    public Optional<String> getLoadBalancerClass() {
        return Optional.ofNullable(this.loadBalancerClass);
    }
    public Optional<String> getLoadBalancerIP() {
        return Optional.ofNullable(this.loadBalancerIP);
    }
    public List<String> getLoadBalancerSourceRanges() {
        return this.loadBalancerSourceRanges == null ? List.of() : this.loadBalancerSourceRanges;
    }
    public List<ServicePort> getPorts() {
        return this.ports == null ? List.of() : this.ports;
    }
    public Optional<Boolean> getPublishNotReadyAddresses() {
        return Optional.ofNullable(this.publishNotReadyAddresses);
    }
    public Map<String,String> getSelector() {
        return this.selector == null ? Map.of() : this.selector;
    }
    public Optional<String> getSessionAffinity() {
        return Optional.ofNullable(this.sessionAffinity);
    }
    public Optional<SessionAffinityConfig> getSessionAffinityConfig() {
        return Optional.ofNullable(this.sessionAffinityConfig);
    }
    public List<String> getTopologyKeys() {
        return this.topologyKeys == null ? List.of() : this.topologyKeys;
    }
    public Optional<String> getType() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allocateLoadBalancerNodePorts;
        private @Nullable String clusterIP;
        private @Nullable List<String> clusterIPs;
        private @Nullable List<String> externalIPs;
        private @Nullable String externalName;
        private @Nullable String externalTrafficPolicy;
        private @Nullable Integer healthCheckNodePort;
        private @Nullable String internalTrafficPolicy;
        private @Nullable List<String> ipFamilies;
        private @Nullable String ipFamily;
        private @Nullable String ipFamilyPolicy;
        private @Nullable String loadBalancerClass;
        private @Nullable String loadBalancerIP;
        private @Nullable List<String> loadBalancerSourceRanges;
        private @Nullable List<ServicePort> ports;
        private @Nullable Boolean publishNotReadyAddresses;
        private @Nullable Map<String,String> selector;
        private @Nullable String sessionAffinity;
        private @Nullable SessionAffinityConfig sessionAffinityConfig;
        private @Nullable List<String> topologyKeys;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocateLoadBalancerNodePorts = defaults.allocateLoadBalancerNodePorts;
    	      this.clusterIP = defaults.clusterIP;
    	      this.clusterIPs = defaults.clusterIPs;
    	      this.externalIPs = defaults.externalIPs;
    	      this.externalName = defaults.externalName;
    	      this.externalTrafficPolicy = defaults.externalTrafficPolicy;
    	      this.healthCheckNodePort = defaults.healthCheckNodePort;
    	      this.internalTrafficPolicy = defaults.internalTrafficPolicy;
    	      this.ipFamilies = defaults.ipFamilies;
    	      this.ipFamily = defaults.ipFamily;
    	      this.ipFamilyPolicy = defaults.ipFamilyPolicy;
    	      this.loadBalancerClass = defaults.loadBalancerClass;
    	      this.loadBalancerIP = defaults.loadBalancerIP;
    	      this.loadBalancerSourceRanges = defaults.loadBalancerSourceRanges;
    	      this.ports = defaults.ports;
    	      this.publishNotReadyAddresses = defaults.publishNotReadyAddresses;
    	      this.selector = defaults.selector;
    	      this.sessionAffinity = defaults.sessionAffinity;
    	      this.sessionAffinityConfig = defaults.sessionAffinityConfig;
    	      this.topologyKeys = defaults.topologyKeys;
    	      this.type = defaults.type;
        }

        public Builder setAllocateLoadBalancerNodePorts(@Nullable Boolean allocateLoadBalancerNodePorts) {
            this.allocateLoadBalancerNodePorts = allocateLoadBalancerNodePorts;
            return this;
        }

        public Builder setClusterIP(@Nullable String clusterIP) {
            this.clusterIP = clusterIP;
            return this;
        }

        public Builder setClusterIPs(@Nullable List<String> clusterIPs) {
            this.clusterIPs = clusterIPs;
            return this;
        }

        public Builder setExternalIPs(@Nullable List<String> externalIPs) {
            this.externalIPs = externalIPs;
            return this;
        }

        public Builder setExternalName(@Nullable String externalName) {
            this.externalName = externalName;
            return this;
        }

        public Builder setExternalTrafficPolicy(@Nullable String externalTrafficPolicy) {
            this.externalTrafficPolicy = externalTrafficPolicy;
            return this;
        }

        public Builder setHealthCheckNodePort(@Nullable Integer healthCheckNodePort) {
            this.healthCheckNodePort = healthCheckNodePort;
            return this;
        }

        public Builder setInternalTrafficPolicy(@Nullable String internalTrafficPolicy) {
            this.internalTrafficPolicy = internalTrafficPolicy;
            return this;
        }

        public Builder setIpFamilies(@Nullable List<String> ipFamilies) {
            this.ipFamilies = ipFamilies;
            return this;
        }

        public Builder setIpFamily(@Nullable String ipFamily) {
            this.ipFamily = ipFamily;
            return this;
        }

        public Builder setIpFamilyPolicy(@Nullable String ipFamilyPolicy) {
            this.ipFamilyPolicy = ipFamilyPolicy;
            return this;
        }

        public Builder setLoadBalancerClass(@Nullable String loadBalancerClass) {
            this.loadBalancerClass = loadBalancerClass;
            return this;
        }

        public Builder setLoadBalancerIP(@Nullable String loadBalancerIP) {
            this.loadBalancerIP = loadBalancerIP;
            return this;
        }

        public Builder setLoadBalancerSourceRanges(@Nullable List<String> loadBalancerSourceRanges) {
            this.loadBalancerSourceRanges = loadBalancerSourceRanges;
            return this;
        }

        public Builder setPorts(@Nullable List<ServicePort> ports) {
            this.ports = ports;
            return this;
        }

        public Builder setPublishNotReadyAddresses(@Nullable Boolean publishNotReadyAddresses) {
            this.publishNotReadyAddresses = publishNotReadyAddresses;
            return this;
        }

        public Builder setSelector(@Nullable Map<String,String> selector) {
            this.selector = selector;
            return this;
        }

        public Builder setSessionAffinity(@Nullable String sessionAffinity) {
            this.sessionAffinity = sessionAffinity;
            return this;
        }

        public Builder setSessionAffinityConfig(@Nullable SessionAffinityConfig sessionAffinityConfig) {
            this.sessionAffinityConfig = sessionAffinityConfig;
            return this;
        }

        public Builder setTopologyKeys(@Nullable List<String> topologyKeys) {
            this.topologyKeys = topologyKeys;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = type;
            return this;
        }

        public ServiceSpec build() {
            return new ServiceSpec(allocateLoadBalancerNodePorts, clusterIP, clusterIPs, externalIPs, externalName, externalTrafficPolicy, healthCheckNodePort, internalTrafficPolicy, ipFamilies, ipFamily, ipFamilyPolicy, loadBalancerClass, loadBalancerIP, loadBalancerSourceRanges, ports, publishNotReadyAddresses, selector, sessionAffinity, sessionAffinityConfig, topologyKeys, type);
        }
    }
}
