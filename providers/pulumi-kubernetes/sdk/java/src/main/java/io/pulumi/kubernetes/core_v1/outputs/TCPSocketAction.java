// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.Either;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TCPSocketAction {
    /**
     * Optional: Host name to connect to, defaults to the pod IP.
     * 
     */
    private final @Nullable String host;
    /**
     * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
     * 
     */
    private final Either<Integer,String> port;

    @OutputCustomType.Constructor({"host","port"})
    private TCPSocketAction(
        @Nullable String host,
        Either<Integer,String> port) {
        this.host = host;
        this.port = Objects.requireNonNull(port);
    }

    /**
     * Optional: Host name to connect to, defaults to the pod IP.
     * 
     */
    public Optional<String> getHost() {
        return Optional.ofNullable(this.host);
    }
    /**
     * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
     * 
     */
    public Either<Integer,String> getPort() {
        return this.port;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TCPSocketAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String host;
        private Either<Integer,String> port;

        public Builder() {
    	      // Empty
        }

        public Builder(TCPSocketAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.port = defaults.port;
        }

        public Builder setHost(@Nullable String host) {
            this.host = host;
            return this;
        }

        public Builder setPort(Either<Integer,String> port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public TCPSocketAction build() {
            return new TCPSocketAction(host, port);
        }
    }
}
