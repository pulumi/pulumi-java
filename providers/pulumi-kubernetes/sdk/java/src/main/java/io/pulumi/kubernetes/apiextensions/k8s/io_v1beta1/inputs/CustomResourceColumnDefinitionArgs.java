// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.apiextensions.k8s.io_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * CustomResourceColumnDefinition specifies a column for server side printing.
 * 
 */
public final class CustomResourceColumnDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final CustomResourceColumnDefinitionArgs Empty = new CustomResourceColumnDefinitionArgs();

    /**
     * JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
     * 
     */
    @InputImport(name="JSONPath", required=true)
      private final Output<String> JSONPath;

    public Output<String> getJSONPath() {
        return this.JSONPath;
    }

    /**
     * description is a human readable description of this column.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
     * 
     */
    @InputImport(name="format")
      private final @Nullable Output<String> format;

    public Output<String> getFormat() {
        return this.format == null ? Output.empty() : this.format;
    }

    /**
     * name is a human readable name for the column.
     * 
     */
    @InputImport(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    /**
     * priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
     * 
     */
    @InputImport(name="priority")
      private final @Nullable Output<Integer> priority;

    public Output<Integer> getPriority() {
        return this.priority == null ? Output.empty() : this.priority;
    }

    /**
     * type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
     * 
     */
    @InputImport(name="type", required=true)
      private final Output<String> type;

    public Output<String> getType() {
        return this.type;
    }

    public CustomResourceColumnDefinitionArgs(
        Output<String> JSONPath,
        @Nullable Output<String> description,
        @Nullable Output<String> format,
        Output<String> name,
        @Nullable Output<Integer> priority,
        Output<String> type) {
        this.JSONPath = Objects.requireNonNull(JSONPath, "expected parameter 'JSONPath' to be non-null");
        this.description = description;
        this.format = format;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.priority = priority;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private CustomResourceColumnDefinitionArgs() {
        this.JSONPath = Output.empty();
        this.description = Output.empty();
        this.format = Output.empty();
        this.name = Output.empty();
        this.priority = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomResourceColumnDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> JSONPath;
        private @Nullable Output<String> description;
        private @Nullable Output<String> format;
        private Output<String> name;
        private @Nullable Output<Integer> priority;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomResourceColumnDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.JSONPath = defaults.JSONPath;
    	      this.description = defaults.description;
    	      this.format = defaults.format;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.type = defaults.type;
        }

        public Builder jSONPath(Output<String> JSONPath) {
            this.JSONPath = Objects.requireNonNull(JSONPath);
            return this;
        }

        public Builder jSONPath(String JSONPath) {
            this.JSONPath = Output.of(Objects.requireNonNull(JSONPath));
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder format(@Nullable Output<String> format) {
            this.format = format;
            return this;
        }

        public Builder format(@Nullable String format) {
            this.format = Output.ofNullable(format);
            return this;
        }

        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder priority(@Nullable Output<Integer> priority) {
            this.priority = priority;
            return this;
        }

        public Builder priority(@Nullable Integer priority) {
            this.priority = Output.ofNullable(priority);
            return this;
        }

        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }
        public CustomResourceColumnDefinitionArgs build() {
            return new CustomResourceColumnDefinitionArgs(JSONPath, description, format, name, priority, type);
        }
    }
}
