// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.certificates.k8s.io_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users.
 * 
 */
public final class CertificateSigningRequestSpecArgs extends io.pulumi.resources.ResourceArgs {

    public static final CertificateSigningRequestSpecArgs Empty = new CertificateSigningRequestSpecArgs();

    /**
     * Extra information about the requesting user. See user.Info interface for details.
     * 
     */
    @InputImport(name="extra")
      private final @Nullable Output<Map<String,List<String>>> extra;

    public Output<Map<String,List<String>>> getExtra() {
        return this.extra == null ? Output.empty() : this.extra;
    }

    /**
     * Group information about the requesting user. See user.Info interface for details.
     * 
     */
    @InputImport(name="groups")
      private final @Nullable Output<List<String>> groups;

    public Output<List<String>> getGroups() {
        return this.groups == null ? Output.empty() : this.groups;
    }

    /**
     * Base64-encoded PKCS#10 CSR data
     * 
     */
    @InputImport(name="request", required=true)
      private final Output<String> request;

    public Output<String> getRequest() {
        return this.request;
    }

    /**
     * Requested signer for the request. It is a qualified name in the form: `scope-hostname.io/name`. If empty, it will be defaulted:
     *  1. If it's a kubelet client certificate, it is assigned
     *     "kubernetes.io/kube-apiserver-client-kubelet".
     *  2. If it's a kubelet serving certificate, it is assigned
     *     "kubernetes.io/kubelet-serving".
     *  3. Otherwise, it is assigned "kubernetes.io/legacy-unknown".
     *     Distribution of trust for signers happens out of band. You can select on this field using `spec.signerName`.
     * 
     */
    @InputImport(name="signerName")
      private final @Nullable Output<String> signerName;

    public Output<String> getSignerName() {
        return this.signerName == null ? Output.empty() : this.signerName;
    }

    /**
     * UID information about the requesting user. See user.Info interface for details.
     * 
     */
    @InputImport(name="uid")
      private final @Nullable Output<String> uid;

    public Output<String> getUid() {
        return this.uid == null ? Output.empty() : this.uid;
    }

    /**
     * allowedUsages specifies a set of usage contexts the key will be valid for. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3
     *      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
     * 
     */
    @InputImport(name="usages")
      private final @Nullable Output<List<String>> usages;

    public Output<List<String>> getUsages() {
        return this.usages == null ? Output.empty() : this.usages;
    }

    /**
     * Information about the requesting user. See user.Info interface for details.
     * 
     */
    @InputImport(name="username")
      private final @Nullable Output<String> username;

    public Output<String> getUsername() {
        return this.username == null ? Output.empty() : this.username;
    }

    public CertificateSigningRequestSpecArgs(
        @Nullable Output<Map<String,List<String>>> extra,
        @Nullable Output<List<String>> groups,
        Output<String> request,
        @Nullable Output<String> signerName,
        @Nullable Output<String> uid,
        @Nullable Output<List<String>> usages,
        @Nullable Output<String> username) {
        this.extra = extra;
        this.groups = groups;
        this.request = Objects.requireNonNull(request, "expected parameter 'request' to be non-null");
        this.signerName = signerName;
        this.uid = uid;
        this.usages = usages;
        this.username = username;
    }

    private CertificateSigningRequestSpecArgs() {
        this.extra = Output.empty();
        this.groups = Output.empty();
        this.request = Output.empty();
        this.signerName = Output.empty();
        this.uid = Output.empty();
        this.usages = Output.empty();
        this.username = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateSigningRequestSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,List<String>>> extra;
        private @Nullable Output<List<String>> groups;
        private Output<String> request;
        private @Nullable Output<String> signerName;
        private @Nullable Output<String> uid;
        private @Nullable Output<List<String>> usages;
        private @Nullable Output<String> username;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateSigningRequestSpecArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extra = defaults.extra;
    	      this.groups = defaults.groups;
    	      this.request = defaults.request;
    	      this.signerName = defaults.signerName;
    	      this.uid = defaults.uid;
    	      this.usages = defaults.usages;
    	      this.username = defaults.username;
        }

        public Builder extra(@Nullable Output<Map<String,List<String>>> extra) {
            this.extra = extra;
            return this;
        }

        public Builder extra(@Nullable Map<String,List<String>> extra) {
            this.extra = Output.ofNullable(extra);
            return this;
        }

        public Builder groups(@Nullable Output<List<String>> groups) {
            this.groups = groups;
            return this;
        }

        public Builder groups(@Nullable List<String> groups) {
            this.groups = Output.ofNullable(groups);
            return this;
        }

        public Builder request(Output<String> request) {
            this.request = Objects.requireNonNull(request);
            return this;
        }

        public Builder request(String request) {
            this.request = Output.of(Objects.requireNonNull(request));
            return this;
        }

        public Builder signerName(@Nullable Output<String> signerName) {
            this.signerName = signerName;
            return this;
        }

        public Builder signerName(@Nullable String signerName) {
            this.signerName = Output.ofNullable(signerName);
            return this;
        }

        public Builder uid(@Nullable Output<String> uid) {
            this.uid = uid;
            return this;
        }

        public Builder uid(@Nullable String uid) {
            this.uid = Output.ofNullable(uid);
            return this;
        }

        public Builder usages(@Nullable Output<List<String>> usages) {
            this.usages = usages;
            return this;
        }

        public Builder usages(@Nullable List<String> usages) {
            this.usages = Output.ofNullable(usages);
            return this;
        }

        public Builder username(@Nullable Output<String> username) {
            this.username = username;
            return this;
        }

        public Builder username(@Nullable String username) {
            this.username = Output.ofNullable(username);
            return this;
        }
        public CertificateSigningRequestSpecArgs build() {
            return new CertificateSigningRequestSpecArgs(extra, groups, request, signerName, uid, usages, username);
        }
    }
}
