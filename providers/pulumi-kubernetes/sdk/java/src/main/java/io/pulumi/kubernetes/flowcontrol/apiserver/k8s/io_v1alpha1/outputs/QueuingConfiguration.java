// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.flowcontrol.apiserver.k8s.io_v1alpha1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class QueuingConfiguration {
    private final @Nullable Integer handSize;
    private final @Nullable Integer queueLengthLimit;
    private final @Nullable Integer queues;

    @OutputCustomType.Constructor({"handSize","queueLengthLimit","queues"})
    private QueuingConfiguration(
        @Nullable Integer handSize,
        @Nullable Integer queueLengthLimit,
        @Nullable Integer queues) {
        this.handSize = handSize;
        this.queueLengthLimit = queueLengthLimit;
        this.queues = queues;
    }

    public Optional<Integer> getHandSize() {
        return Optional.ofNullable(this.handSize);
    }
    public Optional<Integer> getQueueLengthLimit() {
        return Optional.ofNullable(this.queueLengthLimit);
    }
    public Optional<Integer> getQueues() {
        return Optional.ofNullable(this.queues);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueuingConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer handSize;
        private @Nullable Integer queueLengthLimit;
        private @Nullable Integer queues;

        public Builder() {
    	      // Empty
        }

        public Builder(QueuingConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.handSize = defaults.handSize;
    	      this.queueLengthLimit = defaults.queueLengthLimit;
    	      this.queues = defaults.queues;
        }

        public Builder setHandSize(@Nullable Integer handSize) {
            this.handSize = handSize;
            return this;
        }

        public Builder setQueueLengthLimit(@Nullable Integer queueLengthLimit) {
            this.queueLengthLimit = queueLengthLimit;
            return this;
        }

        public Builder setQueues(@Nullable Integer queues) {
            this.queues = queues;
            return this;
        }

        public QueuingConfiguration build() {
            return new QueuingConfiguration(handSize, queueLengthLimit, queues);
        }
    }
}
