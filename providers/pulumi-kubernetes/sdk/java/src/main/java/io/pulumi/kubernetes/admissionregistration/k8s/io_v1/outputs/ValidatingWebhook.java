// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.admissionregistration.k8s.io_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.admissionregistration.k8s.io_v1.outputs.RuleWithOperations;
import io.pulumi.kubernetes.admissionregistration.k8s.io_v1.outputs.WebhookClientConfig;
import io.pulumi.kubernetes.meta_v1.outputs.LabelSelector;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ValidatingWebhook {
    private final List<String> admissionReviewVersions;
    private final WebhookClientConfig clientConfig;
    private final @Nullable String failurePolicy;
    private final @Nullable String matchPolicy;
    private final String name;
    private final @Nullable LabelSelector namespaceSelector;
    private final @Nullable LabelSelector objectSelector;
    private final @Nullable List<RuleWithOperations> rules;
    private final String sideEffects;
    private final @Nullable Integer timeoutSeconds;

    @OutputCustomType.Constructor({"admissionReviewVersions","clientConfig","failurePolicy","matchPolicy","name","namespaceSelector","objectSelector","rules","sideEffects","timeoutSeconds"})
    private ValidatingWebhook(
        List<String> admissionReviewVersions,
        WebhookClientConfig clientConfig,
        @Nullable String failurePolicy,
        @Nullable String matchPolicy,
        String name,
        @Nullable LabelSelector namespaceSelector,
        @Nullable LabelSelector objectSelector,
        @Nullable List<RuleWithOperations> rules,
        String sideEffects,
        @Nullable Integer timeoutSeconds) {
        this.admissionReviewVersions = Objects.requireNonNull(admissionReviewVersions);
        this.clientConfig = Objects.requireNonNull(clientConfig);
        this.failurePolicy = failurePolicy;
        this.matchPolicy = matchPolicy;
        this.name = Objects.requireNonNull(name);
        this.namespaceSelector = namespaceSelector;
        this.objectSelector = objectSelector;
        this.rules = rules;
        this.sideEffects = Objects.requireNonNull(sideEffects);
        this.timeoutSeconds = timeoutSeconds;
    }

    public List<String> getAdmissionReviewVersions() {
        return this.admissionReviewVersions;
    }
    public WebhookClientConfig getClientConfig() {
        return this.clientConfig;
    }
    public Optional<String> getFailurePolicy() {
        return Optional.ofNullable(this.failurePolicy);
    }
    public Optional<String> getMatchPolicy() {
        return Optional.ofNullable(this.matchPolicy);
    }
    public String getName() {
        return this.name;
    }
    public Optional<LabelSelector> getNamespaceSelector() {
        return Optional.ofNullable(this.namespaceSelector);
    }
    public Optional<LabelSelector> getObjectSelector() {
        return Optional.ofNullable(this.objectSelector);
    }
    public List<RuleWithOperations> getRules() {
        return this.rules == null ? List.of() : this.rules;
    }
    public String getSideEffects() {
        return this.sideEffects;
    }
    public Optional<Integer> getTimeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ValidatingWebhook defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> admissionReviewVersions;
        private WebhookClientConfig clientConfig;
        private @Nullable String failurePolicy;
        private @Nullable String matchPolicy;
        private String name;
        private @Nullable LabelSelector namespaceSelector;
        private @Nullable LabelSelector objectSelector;
        private @Nullable List<RuleWithOperations> rules;
        private String sideEffects;
        private @Nullable Integer timeoutSeconds;

        public Builder() {
    	      // Empty
        }

        public Builder(ValidatingWebhook defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.admissionReviewVersions = defaults.admissionReviewVersions;
    	      this.clientConfig = defaults.clientConfig;
    	      this.failurePolicy = defaults.failurePolicy;
    	      this.matchPolicy = defaults.matchPolicy;
    	      this.name = defaults.name;
    	      this.namespaceSelector = defaults.namespaceSelector;
    	      this.objectSelector = defaults.objectSelector;
    	      this.rules = defaults.rules;
    	      this.sideEffects = defaults.sideEffects;
    	      this.timeoutSeconds = defaults.timeoutSeconds;
        }

        public Builder setAdmissionReviewVersions(List<String> admissionReviewVersions) {
            this.admissionReviewVersions = Objects.requireNonNull(admissionReviewVersions);
            return this;
        }

        public Builder setClientConfig(WebhookClientConfig clientConfig) {
            this.clientConfig = Objects.requireNonNull(clientConfig);
            return this;
        }

        public Builder setFailurePolicy(@Nullable String failurePolicy) {
            this.failurePolicy = failurePolicy;
            return this;
        }

        public Builder setMatchPolicy(@Nullable String matchPolicy) {
            this.matchPolicy = matchPolicy;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNamespaceSelector(@Nullable LabelSelector namespaceSelector) {
            this.namespaceSelector = namespaceSelector;
            return this;
        }

        public Builder setObjectSelector(@Nullable LabelSelector objectSelector) {
            this.objectSelector = objectSelector;
            return this;
        }

        public Builder setRules(@Nullable List<RuleWithOperations> rules) {
            this.rules = rules;
            return this;
        }

        public Builder setSideEffects(String sideEffects) {
            this.sideEffects = Objects.requireNonNull(sideEffects);
            return this;
        }

        public Builder setTimeoutSeconds(@Nullable Integer timeoutSeconds) {
            this.timeoutSeconds = timeoutSeconds;
            return this;
        }

        public ValidatingWebhook build() {
            return new ValidatingWebhook(admissionReviewVersions, clientConfig, failurePolicy, matchPolicy, name, namespaceSelector, objectSelector, rules, sideEffects, timeoutSeconds);
        }
    }
}
