// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.kubernetes.core_v1.inputs.PersistentVolumeClaimTemplateArgs;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EphemeralVolumeSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final EphemeralVolumeSourceArgs Empty = new EphemeralVolumeSourceArgs();

    @InputImport(name="readOnly")
    private final @Nullable Input<Boolean> readOnly;

    public Input<Boolean> getReadOnly() {
        return this.readOnly == null ? Input.empty() : this.readOnly;
    }

    @InputImport(name="volumeClaimTemplate")
    private final @Nullable Input<PersistentVolumeClaimTemplateArgs> volumeClaimTemplate;

    public Input<PersistentVolumeClaimTemplateArgs> getVolumeClaimTemplate() {
        return this.volumeClaimTemplate == null ? Input.empty() : this.volumeClaimTemplate;
    }

    public EphemeralVolumeSourceArgs(
        @Nullable Input<Boolean> readOnly,
        @Nullable Input<PersistentVolumeClaimTemplateArgs> volumeClaimTemplate) {
        this.readOnly = readOnly;
        this.volumeClaimTemplate = volumeClaimTemplate;
    }

    private EphemeralVolumeSourceArgs() {
        this.readOnly = Input.empty();
        this.volumeClaimTemplate = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EphemeralVolumeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> readOnly;
        private @Nullable Input<PersistentVolumeClaimTemplateArgs> volumeClaimTemplate;

        public Builder() {
    	      // Empty
        }

        public Builder(EphemeralVolumeSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.readOnly = defaults.readOnly;
    	      this.volumeClaimTemplate = defaults.volumeClaimTemplate;
        }

        public Builder setReadOnly(@Nullable Input<Boolean> readOnly) {
            this.readOnly = readOnly;
            return this;
        }

        public Builder setReadOnly(@Nullable Boolean readOnly) {
            this.readOnly = Input.ofNullable(readOnly);
            return this;
        }

        public Builder setVolumeClaimTemplate(@Nullable Input<PersistentVolumeClaimTemplateArgs> volumeClaimTemplate) {
            this.volumeClaimTemplate = volumeClaimTemplate;
            return this;
        }

        public Builder setVolumeClaimTemplate(@Nullable PersistentVolumeClaimTemplateArgs volumeClaimTemplate) {
            this.volumeClaimTemplate = Input.ofNullable(volumeClaimTemplate);
            return this;
        }

        public EphemeralVolumeSourceArgs build() {
            return new EphemeralVolumeSourceArgs(readOnly, volumeClaimTemplate);
        }
    }
}
