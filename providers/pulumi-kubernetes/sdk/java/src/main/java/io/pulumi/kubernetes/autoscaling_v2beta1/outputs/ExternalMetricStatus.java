// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.autoscaling_v2beta1.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.kubernetes.meta_v1.outputs.LabelSelector;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExternalMetricStatus {
    /**
     * currentAverageValue is the current value of metric averaged over autoscaled pods.
     * 
     */
    private final @Nullable String currentAverageValue;
    /**
     * currentValue is the current value of the metric (as a quantity)
     * 
     */
    private final String currentValue;
    /**
     * metricName is the name of a metric used for autoscaling in metric system.
     * 
     */
    private final String metricName;
    /**
     * metricSelector is used to identify a specific time series within a given metric.
     * 
     */
    private final @Nullable LabelSelector metricSelector;

    @CustomType.Constructor
    private ExternalMetricStatus(
        @CustomType.Parameter("currentAverageValue") @Nullable String currentAverageValue,
        @CustomType.Parameter("currentValue") String currentValue,
        @CustomType.Parameter("metricName") String metricName,
        @CustomType.Parameter("metricSelector") @Nullable LabelSelector metricSelector) {
        this.currentAverageValue = currentAverageValue;
        this.currentValue = currentValue;
        this.metricName = metricName;
        this.metricSelector = metricSelector;
    }

    /**
     * currentAverageValue is the current value of metric averaged over autoscaled pods.
     * 
    */
    public Optional<String> getCurrentAverageValue() {
        return Optional.ofNullable(this.currentAverageValue);
    }
    /**
     * currentValue is the current value of the metric (as a quantity)
     * 
    */
    public String getCurrentValue() {
        return this.currentValue;
    }
    /**
     * metricName is the name of a metric used for autoscaling in metric system.
     * 
    */
    public String getMetricName() {
        return this.metricName;
    }
    /**
     * metricSelector is used to identify a specific time series within a given metric.
     * 
    */
    public Optional<LabelSelector> getMetricSelector() {
        return Optional.ofNullable(this.metricSelector);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExternalMetricStatus defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String currentAverageValue;
        private String currentValue;
        private String metricName;
        private @Nullable LabelSelector metricSelector;

        public Builder() {
    	      // Empty
        }

        public Builder(ExternalMetricStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentAverageValue = defaults.currentAverageValue;
    	      this.currentValue = defaults.currentValue;
    	      this.metricName = defaults.metricName;
    	      this.metricSelector = defaults.metricSelector;
        }

        public Builder currentAverageValue(@Nullable String currentAverageValue) {
            this.currentAverageValue = currentAverageValue;
            return this;
        }
        public Builder currentValue(String currentValue) {
            this.currentValue = Objects.requireNonNull(currentValue);
            return this;
        }
        public Builder metricName(String metricName) {
            this.metricName = Objects.requireNonNull(metricName);
            return this;
        }
        public Builder metricSelector(@Nullable LabelSelector metricSelector) {
            this.metricSelector = metricSelector;
            return this;
        }        public ExternalMetricStatus build() {
            return new ExternalMetricStatus(currentAverageValue, currentValue, metricName, metricSelector);
        }
    }
}
