// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 * 
 */
public final class WindowsSecurityContextOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final WindowsSecurityContextOptionsArgs Empty = new WindowsSecurityContextOptionsArgs();

    /**
     * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
     * 
     */
    @Import(name="gmsaCredentialSpec")
      private final @Nullable Output<String> gmsaCredentialSpec;

    public Output<String> getGmsaCredentialSpec() {
        return this.gmsaCredentialSpec == null ? Output.empty() : this.gmsaCredentialSpec;
    }

    /**
     * GMSACredentialSpecName is the name of the GMSA credential spec to use.
     * 
     */
    @Import(name="gmsaCredentialSpecName")
      private final @Nullable Output<String> gmsaCredentialSpecName;

    public Output<String> getGmsaCredentialSpecName() {
        return this.gmsaCredentialSpecName == null ? Output.empty() : this.gmsaCredentialSpecName;
    }

    /**
     * HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
     * 
     */
    @Import(name="hostProcess")
      private final @Nullable Output<Boolean> hostProcess;

    public Output<Boolean> getHostProcess() {
        return this.hostProcess == null ? Output.empty() : this.hostProcess;
    }

    /**
     * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
     * 
     */
    @Import(name="runAsUserName")
      private final @Nullable Output<String> runAsUserName;

    public Output<String> getRunAsUserName() {
        return this.runAsUserName == null ? Output.empty() : this.runAsUserName;
    }

    public WindowsSecurityContextOptionsArgs(
        @Nullable Output<String> gmsaCredentialSpec,
        @Nullable Output<String> gmsaCredentialSpecName,
        @Nullable Output<Boolean> hostProcess,
        @Nullable Output<String> runAsUserName) {
        this.gmsaCredentialSpec = gmsaCredentialSpec;
        this.gmsaCredentialSpecName = gmsaCredentialSpecName;
        this.hostProcess = hostProcess;
        this.runAsUserName = runAsUserName;
    }

    private WindowsSecurityContextOptionsArgs() {
        this.gmsaCredentialSpec = Output.empty();
        this.gmsaCredentialSpecName = Output.empty();
        this.hostProcess = Output.empty();
        this.runAsUserName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WindowsSecurityContextOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> gmsaCredentialSpec;
        private @Nullable Output<String> gmsaCredentialSpecName;
        private @Nullable Output<Boolean> hostProcess;
        private @Nullable Output<String> runAsUserName;

        public Builder() {
    	      // Empty
        }

        public Builder(WindowsSecurityContextOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gmsaCredentialSpec = defaults.gmsaCredentialSpec;
    	      this.gmsaCredentialSpecName = defaults.gmsaCredentialSpecName;
    	      this.hostProcess = defaults.hostProcess;
    	      this.runAsUserName = defaults.runAsUserName;
        }

        public Builder gmsaCredentialSpec(@Nullable Output<String> gmsaCredentialSpec) {
            this.gmsaCredentialSpec = gmsaCredentialSpec;
            return this;
        }
        public Builder gmsaCredentialSpec(@Nullable String gmsaCredentialSpec) {
            this.gmsaCredentialSpec = Output.ofNullable(gmsaCredentialSpec);
            return this;
        }
        public Builder gmsaCredentialSpecName(@Nullable Output<String> gmsaCredentialSpecName) {
            this.gmsaCredentialSpecName = gmsaCredentialSpecName;
            return this;
        }
        public Builder gmsaCredentialSpecName(@Nullable String gmsaCredentialSpecName) {
            this.gmsaCredentialSpecName = Output.ofNullable(gmsaCredentialSpecName);
            return this;
        }
        public Builder hostProcess(@Nullable Output<Boolean> hostProcess) {
            this.hostProcess = hostProcess;
            return this;
        }
        public Builder hostProcess(@Nullable Boolean hostProcess) {
            this.hostProcess = Output.ofNullable(hostProcess);
            return this;
        }
        public Builder runAsUserName(@Nullable Output<String> runAsUserName) {
            this.runAsUserName = runAsUserName;
            return this;
        }
        public Builder runAsUserName(@Nullable String runAsUserName) {
            this.runAsUserName = Output.ofNullable(runAsUserName);
            return this;
        }        public WindowsSecurityContextOptionsArgs build() {
            return new WindowsSecurityContextOptionsArgs(gmsaCredentialSpec, gmsaCredentialSpecName, hostProcess, runAsUserName);
        }
    }
}
