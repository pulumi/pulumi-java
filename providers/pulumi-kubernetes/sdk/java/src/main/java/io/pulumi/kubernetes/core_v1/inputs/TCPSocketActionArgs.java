// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * TCPSocketAction describes an action based on opening a socket
 * 
 */
public final class TCPSocketActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final TCPSocketActionArgs Empty = new TCPSocketActionArgs();

    /**
     * Optional: Host name to connect to, defaults to the pod IP.
     * 
     */
    @Import(name="host")
      private final @Nullable Output<String> host;

    public Output<String> getHost() {
        return this.host == null ? Codegen.empty() : this.host;
    }

    /**
     * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
     * 
     */
    @Import(name="port", required=true)
      private final Output<Either<Integer,String>> port;

    public Output<Either<Integer,String>> getPort() {
        return this.port;
    }

    public TCPSocketActionArgs(
        @Nullable Output<String> host,
        Output<Either<Integer,String>> port) {
        this.host = host;
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
    }

    private TCPSocketActionArgs() {
        this.host = Codegen.empty();
        this.port = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TCPSocketActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> host;
        private Output<Either<Integer,String>> port;

        public Builder() {
    	      // Empty
        }

        public Builder(TCPSocketActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.port = defaults.port;
        }

        public Builder host(@Nullable Output<String> host) {
            this.host = host;
            return this;
        }
        public Builder host(@Nullable String host) {
            this.host = Codegen.ofNullable(host);
            return this;
        }
        public Builder port(Output<Either<Integer,String>> port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public Builder port(Either<Integer,String> port) {
            this.port = Output.of(Objects.requireNonNull(port));
            return this;
        }        public TCPSocketActionArgs build() {
            return new TCPSocketActionArgs(host, port);
        }
    }
}
