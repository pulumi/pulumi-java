// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.core_v1.outputs.NodeConfigSource;
import io.pulumi.kubernetes.core_v1.outputs.Taint;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class NodeSpec {
    private final @Nullable NodeConfigSource configSource;
    private final @Nullable String externalID;
    private final @Nullable String podCIDR;
    private final @Nullable List<String> podCIDRs;
    private final @Nullable String providerID;
    private final @Nullable List<Taint> taints;
    private final @Nullable Boolean unschedulable;

    @OutputCustomType.Constructor({"configSource","externalID","podCIDR","podCIDRs","providerID","taints","unschedulable"})
    private NodeSpec(
        @Nullable NodeConfigSource configSource,
        @Nullable String externalID,
        @Nullable String podCIDR,
        @Nullable List<String> podCIDRs,
        @Nullable String providerID,
        @Nullable List<Taint> taints,
        @Nullable Boolean unschedulable) {
        this.configSource = configSource;
        this.externalID = externalID;
        this.podCIDR = podCIDR;
        this.podCIDRs = podCIDRs;
        this.providerID = providerID;
        this.taints = taints;
        this.unschedulable = unschedulable;
    }

    public Optional<NodeConfigSource> getConfigSource() {
        return Optional.ofNullable(this.configSource);
    }
    public Optional<String> getExternalID() {
        return Optional.ofNullable(this.externalID);
    }
    public Optional<String> getPodCIDR() {
        return Optional.ofNullable(this.podCIDR);
    }
    public List<String> getPodCIDRs() {
        return this.podCIDRs == null ? List.of() : this.podCIDRs;
    }
    public Optional<String> getProviderID() {
        return Optional.ofNullable(this.providerID);
    }
    public List<Taint> getTaints() {
        return this.taints == null ? List.of() : this.taints;
    }
    public Optional<Boolean> getUnschedulable() {
        return Optional.ofNullable(this.unschedulable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable NodeConfigSource configSource;
        private @Nullable String externalID;
        private @Nullable String podCIDR;
        private @Nullable List<String> podCIDRs;
        private @Nullable String providerID;
        private @Nullable List<Taint> taints;
        private @Nullable Boolean unschedulable;

        public Builder() {
    	      // Empty
        }

        public Builder(NodeSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configSource = defaults.configSource;
    	      this.externalID = defaults.externalID;
    	      this.podCIDR = defaults.podCIDR;
    	      this.podCIDRs = defaults.podCIDRs;
    	      this.providerID = defaults.providerID;
    	      this.taints = defaults.taints;
    	      this.unschedulable = defaults.unschedulable;
        }

        public Builder setConfigSource(@Nullable NodeConfigSource configSource) {
            this.configSource = configSource;
            return this;
        }

        public Builder setExternalID(@Nullable String externalID) {
            this.externalID = externalID;
            return this;
        }

        public Builder setPodCIDR(@Nullable String podCIDR) {
            this.podCIDR = podCIDR;
            return this;
        }

        public Builder setPodCIDRs(@Nullable List<String> podCIDRs) {
            this.podCIDRs = podCIDRs;
            return this;
        }

        public Builder setProviderID(@Nullable String providerID) {
            this.providerID = providerID;
            return this;
        }

        public Builder setTaints(@Nullable List<Taint> taints) {
            this.taints = taints;
            return this;
        }

        public Builder setUnschedulable(@Nullable Boolean unschedulable) {
            this.unschedulable = unschedulable;
            return this;
        }

        public NodeSpec build() {
            return new NodeSpec(configSource, externalID, podCIDR, podCIDRs, providerID, taints, unschedulable);
        }
    }
}
