// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.apiextensions.k8s.io_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.kubernetes.apiextensions.k8s.io_v1beta1.inputs.WebhookClientConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * CustomResourceConversion describes how to convert different versions of a CR.
 * 
 */
public final class CustomResourceConversionArgs extends io.pulumi.resources.ResourceArgs {

    public static final CustomResourceConversionArgs Empty = new CustomResourceConversionArgs();

    /**
     * conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
     * 
     */
    @InputImport(name="conversionReviewVersions")
    private final @Nullable Input<List<String>> conversionReviewVersions;

    public Input<List<String>> getConversionReviewVersions() {
        return this.conversionReviewVersions == null ? Input.empty() : this.conversionReviewVersions;
    }

    /**
     * strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
     *   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
     * 
     */
    @InputImport(name="strategy", required=true)
    private final Input<String> strategy;

    public Input<String> getStrategy() {
        return this.strategy;
    }

    /**
     * webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.
     * 
     */
    @InputImport(name="webhookClientConfig")
    private final @Nullable Input<WebhookClientConfigArgs> webhookClientConfig;

    public Input<WebhookClientConfigArgs> getWebhookClientConfig() {
        return this.webhookClientConfig == null ? Input.empty() : this.webhookClientConfig;
    }

    public CustomResourceConversionArgs(
        @Nullable Input<List<String>> conversionReviewVersions,
        Input<String> strategy,
        @Nullable Input<WebhookClientConfigArgs> webhookClientConfig) {
        this.conversionReviewVersions = conversionReviewVersions;
        this.strategy = Objects.requireNonNull(strategy, "expected parameter 'strategy' to be non-null");
        this.webhookClientConfig = webhookClientConfig;
    }

    private CustomResourceConversionArgs() {
        this.conversionReviewVersions = Input.empty();
        this.strategy = Input.empty();
        this.webhookClientConfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomResourceConversionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> conversionReviewVersions;
        private Input<String> strategy;
        private @Nullable Input<WebhookClientConfigArgs> webhookClientConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomResourceConversionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conversionReviewVersions = defaults.conversionReviewVersions;
    	      this.strategy = defaults.strategy;
    	      this.webhookClientConfig = defaults.webhookClientConfig;
        }

        public Builder setConversionReviewVersions(@Nullable Input<List<String>> conversionReviewVersions) {
            this.conversionReviewVersions = conversionReviewVersions;
            return this;
        }

        public Builder setConversionReviewVersions(@Nullable List<String> conversionReviewVersions) {
            this.conversionReviewVersions = Input.ofNullable(conversionReviewVersions);
            return this;
        }

        public Builder setStrategy(Input<String> strategy) {
            this.strategy = Objects.requireNonNull(strategy);
            return this;
        }

        public Builder setStrategy(String strategy) {
            this.strategy = Input.of(Objects.requireNonNull(strategy));
            return this;
        }

        public Builder setWebhookClientConfig(@Nullable Input<WebhookClientConfigArgs> webhookClientConfig) {
            this.webhookClientConfig = webhookClientConfig;
            return this;
        }

        public Builder setWebhookClientConfig(@Nullable WebhookClientConfigArgs webhookClientConfig) {
            this.webhookClientConfig = Input.ofNullable(webhookClientConfig);
            return this;
        }

        public CustomResourceConversionArgs build() {
            return new CustomResourceConversionArgs(conversionReviewVersions, strategy, webhookClientConfig);
        }
    }
}
