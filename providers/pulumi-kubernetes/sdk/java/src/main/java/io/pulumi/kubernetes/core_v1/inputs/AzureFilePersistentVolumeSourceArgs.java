// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 * 
 */
public final class AzureFilePersistentVolumeSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final AzureFilePersistentVolumeSourceArgs Empty = new AzureFilePersistentVolumeSourceArgs();

    /**
     * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * 
     */
    @InputImport(name="readOnly")
    private final @Nullable Input<Boolean> readOnly;

    public Input<Boolean> getReadOnly() {
        return this.readOnly == null ? Input.empty() : this.readOnly;
    }

    /**
     * the name of secret that contains Azure Storage Account Name and Key
     * 
     */
    @InputImport(name="secretName", required=true)
    private final Input<String> secretName;

    public Input<String> getSecretName() {
        return this.secretName;
    }

    /**
     * the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod
     * 
     */
    @InputImport(name="secretNamespace")
    private final @Nullable Input<String> secretNamespace;

    public Input<String> getSecretNamespace() {
        return this.secretNamespace == null ? Input.empty() : this.secretNamespace;
    }

    /**
     * Share Name
     * 
     */
    @InputImport(name="shareName", required=true)
    private final Input<String> shareName;

    public Input<String> getShareName() {
        return this.shareName;
    }

    public AzureFilePersistentVolumeSourceArgs(
        @Nullable Input<Boolean> readOnly,
        Input<String> secretName,
        @Nullable Input<String> secretNamespace,
        Input<String> shareName) {
        this.readOnly = readOnly;
        this.secretName = Objects.requireNonNull(secretName, "expected parameter 'secretName' to be non-null");
        this.secretNamespace = secretNamespace;
        this.shareName = Objects.requireNonNull(shareName, "expected parameter 'shareName' to be non-null");
    }

    private AzureFilePersistentVolumeSourceArgs() {
        this.readOnly = Input.empty();
        this.secretName = Input.empty();
        this.secretNamespace = Input.empty();
        this.shareName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureFilePersistentVolumeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> readOnly;
        private Input<String> secretName;
        private @Nullable Input<String> secretNamespace;
        private Input<String> shareName;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureFilePersistentVolumeSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.readOnly = defaults.readOnly;
    	      this.secretName = defaults.secretName;
    	      this.secretNamespace = defaults.secretNamespace;
    	      this.shareName = defaults.shareName;
        }

        public Builder setReadOnly(@Nullable Input<Boolean> readOnly) {
            this.readOnly = readOnly;
            return this;
        }

        public Builder setReadOnly(@Nullable Boolean readOnly) {
            this.readOnly = Input.ofNullable(readOnly);
            return this;
        }

        public Builder setSecretName(Input<String> secretName) {
            this.secretName = Objects.requireNonNull(secretName);
            return this;
        }

        public Builder setSecretName(String secretName) {
            this.secretName = Input.of(Objects.requireNonNull(secretName));
            return this;
        }

        public Builder setSecretNamespace(@Nullable Input<String> secretNamespace) {
            this.secretNamespace = secretNamespace;
            return this;
        }

        public Builder setSecretNamespace(@Nullable String secretNamespace) {
            this.secretNamespace = Input.ofNullable(secretNamespace);
            return this;
        }

        public Builder setShareName(Input<String> shareName) {
            this.shareName = Objects.requireNonNull(shareName);
            return this;
        }

        public Builder setShareName(String shareName) {
            this.shareName = Input.of(Objects.requireNonNull(shareName));
            return this;
        }

        public AzureFilePersistentVolumeSourceArgs build() {
            return new AzureFilePersistentVolumeSourceArgs(readOnly, secretName, secretNamespace, shareName);
        }
    }
}
