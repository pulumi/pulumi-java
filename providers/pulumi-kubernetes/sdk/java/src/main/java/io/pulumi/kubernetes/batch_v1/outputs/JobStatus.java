// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.batch_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.batch_v1.outputs.JobCondition;
import io.pulumi.kubernetes.batch_v1.outputs.UncountedTerminatedPods;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class JobStatus {
    private final @Nullable Integer active;
    private final @Nullable String completedIndexes;
    private final @Nullable String completionTime;
    private final @Nullable List<JobCondition> conditions;
    private final @Nullable Integer failed;
    private final @Nullable Integer ready;
    private final @Nullable String startTime;
    private final @Nullable Integer succeeded;
    private final @Nullable UncountedTerminatedPods uncountedTerminatedPods;

    @OutputCustomType.Constructor({"active","completedIndexes","completionTime","conditions","failed","ready","startTime","succeeded","uncountedTerminatedPods"})
    private JobStatus(
        @Nullable Integer active,
        @Nullable String completedIndexes,
        @Nullable String completionTime,
        @Nullable List<JobCondition> conditions,
        @Nullable Integer failed,
        @Nullable Integer ready,
        @Nullable String startTime,
        @Nullable Integer succeeded,
        @Nullable UncountedTerminatedPods uncountedTerminatedPods) {
        this.active = active;
        this.completedIndexes = completedIndexes;
        this.completionTime = completionTime;
        this.conditions = conditions;
        this.failed = failed;
        this.ready = ready;
        this.startTime = startTime;
        this.succeeded = succeeded;
        this.uncountedTerminatedPods = uncountedTerminatedPods;
    }

    public Optional<Integer> getActive() {
        return Optional.ofNullable(this.active);
    }
    public Optional<String> getCompletedIndexes() {
        return Optional.ofNullable(this.completedIndexes);
    }
    public Optional<String> getCompletionTime() {
        return Optional.ofNullable(this.completionTime);
    }
    public List<JobCondition> getConditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }
    public Optional<Integer> getFailed() {
        return Optional.ofNullable(this.failed);
    }
    public Optional<Integer> getReady() {
        return Optional.ofNullable(this.ready);
    }
    public Optional<String> getStartTime() {
        return Optional.ofNullable(this.startTime);
    }
    public Optional<Integer> getSucceeded() {
        return Optional.ofNullable(this.succeeded);
    }
    public Optional<UncountedTerminatedPods> getUncountedTerminatedPods() {
        return Optional.ofNullable(this.uncountedTerminatedPods);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobStatus defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer active;
        private @Nullable String completedIndexes;
        private @Nullable String completionTime;
        private @Nullable List<JobCondition> conditions;
        private @Nullable Integer failed;
        private @Nullable Integer ready;
        private @Nullable String startTime;
        private @Nullable Integer succeeded;
        private @Nullable UncountedTerminatedPods uncountedTerminatedPods;

        public Builder() {
    	      // Empty
        }

        public Builder(JobStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.completedIndexes = defaults.completedIndexes;
    	      this.completionTime = defaults.completionTime;
    	      this.conditions = defaults.conditions;
    	      this.failed = defaults.failed;
    	      this.ready = defaults.ready;
    	      this.startTime = defaults.startTime;
    	      this.succeeded = defaults.succeeded;
    	      this.uncountedTerminatedPods = defaults.uncountedTerminatedPods;
        }

        public Builder setActive(@Nullable Integer active) {
            this.active = active;
            return this;
        }

        public Builder setCompletedIndexes(@Nullable String completedIndexes) {
            this.completedIndexes = completedIndexes;
            return this;
        }

        public Builder setCompletionTime(@Nullable String completionTime) {
            this.completionTime = completionTime;
            return this;
        }

        public Builder setConditions(@Nullable List<JobCondition> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder setFailed(@Nullable Integer failed) {
            this.failed = failed;
            return this;
        }

        public Builder setReady(@Nullable Integer ready) {
            this.ready = ready;
            return this;
        }

        public Builder setStartTime(@Nullable String startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder setSucceeded(@Nullable Integer succeeded) {
            this.succeeded = succeeded;
            return this;
        }

        public Builder setUncountedTerminatedPods(@Nullable UncountedTerminatedPods uncountedTerminatedPods) {
            this.uncountedTerminatedPods = uncountedTerminatedPods;
            return this;
        }

        public JobStatus build() {
            return new JobStatus(active, completedIndexes, completionTime, conditions, failed, ready, startTime, succeeded, uncountedTerminatedPods);
        }
    }
}
