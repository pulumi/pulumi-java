// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.apps_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.apps_v1.outputs.StatefulSetCondition;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class StatefulSetStatus {
    private final Integer availableReplicas;
    private final @Nullable Integer collisionCount;
    private final @Nullable List<StatefulSetCondition> conditions;
    private final @Nullable Integer currentReplicas;
    private final @Nullable String currentRevision;
    private final @Nullable Integer observedGeneration;
    private final @Nullable Integer readyReplicas;
    private final Integer replicas;
    private final @Nullable String updateRevision;
    private final @Nullable Integer updatedReplicas;

    @OutputCustomType.Constructor({"availableReplicas","collisionCount","conditions","currentReplicas","currentRevision","observedGeneration","readyReplicas","replicas","updateRevision","updatedReplicas"})
    private StatefulSetStatus(
        Integer availableReplicas,
        @Nullable Integer collisionCount,
        @Nullable List<StatefulSetCondition> conditions,
        @Nullable Integer currentReplicas,
        @Nullable String currentRevision,
        @Nullable Integer observedGeneration,
        @Nullable Integer readyReplicas,
        Integer replicas,
        @Nullable String updateRevision,
        @Nullable Integer updatedReplicas) {
        this.availableReplicas = Objects.requireNonNull(availableReplicas);
        this.collisionCount = collisionCount;
        this.conditions = conditions;
        this.currentReplicas = currentReplicas;
        this.currentRevision = currentRevision;
        this.observedGeneration = observedGeneration;
        this.readyReplicas = readyReplicas;
        this.replicas = Objects.requireNonNull(replicas);
        this.updateRevision = updateRevision;
        this.updatedReplicas = updatedReplicas;
    }

    public Integer getAvailableReplicas() {
        return this.availableReplicas;
    }
    public Optional<Integer> getCollisionCount() {
        return Optional.ofNullable(this.collisionCount);
    }
    public List<StatefulSetCondition> getConditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }
    public Optional<Integer> getCurrentReplicas() {
        return Optional.ofNullable(this.currentReplicas);
    }
    public Optional<String> getCurrentRevision() {
        return Optional.ofNullable(this.currentRevision);
    }
    public Optional<Integer> getObservedGeneration() {
        return Optional.ofNullable(this.observedGeneration);
    }
    public Optional<Integer> getReadyReplicas() {
        return Optional.ofNullable(this.readyReplicas);
    }
    public Integer getReplicas() {
        return this.replicas;
    }
    public Optional<String> getUpdateRevision() {
        return Optional.ofNullable(this.updateRevision);
    }
    public Optional<Integer> getUpdatedReplicas() {
        return Optional.ofNullable(this.updatedReplicas);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StatefulSetStatus defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer availableReplicas;
        private @Nullable Integer collisionCount;
        private @Nullable List<StatefulSetCondition> conditions;
        private @Nullable Integer currentReplicas;
        private @Nullable String currentRevision;
        private @Nullable Integer observedGeneration;
        private @Nullable Integer readyReplicas;
        private Integer replicas;
        private @Nullable String updateRevision;
        private @Nullable Integer updatedReplicas;

        public Builder() {
    	      // Empty
        }

        public Builder(StatefulSetStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableReplicas = defaults.availableReplicas;
    	      this.collisionCount = defaults.collisionCount;
    	      this.conditions = defaults.conditions;
    	      this.currentReplicas = defaults.currentReplicas;
    	      this.currentRevision = defaults.currentRevision;
    	      this.observedGeneration = defaults.observedGeneration;
    	      this.readyReplicas = defaults.readyReplicas;
    	      this.replicas = defaults.replicas;
    	      this.updateRevision = defaults.updateRevision;
    	      this.updatedReplicas = defaults.updatedReplicas;
        }

        public Builder setAvailableReplicas(Integer availableReplicas) {
            this.availableReplicas = Objects.requireNonNull(availableReplicas);
            return this;
        }

        public Builder setCollisionCount(@Nullable Integer collisionCount) {
            this.collisionCount = collisionCount;
            return this;
        }

        public Builder setConditions(@Nullable List<StatefulSetCondition> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder setCurrentReplicas(@Nullable Integer currentReplicas) {
            this.currentReplicas = currentReplicas;
            return this;
        }

        public Builder setCurrentRevision(@Nullable String currentRevision) {
            this.currentRevision = currentRevision;
            return this;
        }

        public Builder setObservedGeneration(@Nullable Integer observedGeneration) {
            this.observedGeneration = observedGeneration;
            return this;
        }

        public Builder setReadyReplicas(@Nullable Integer readyReplicas) {
            this.readyReplicas = readyReplicas;
            return this;
        }

        public Builder setReplicas(Integer replicas) {
            this.replicas = Objects.requireNonNull(replicas);
            return this;
        }

        public Builder setUpdateRevision(@Nullable String updateRevision) {
            this.updateRevision = updateRevision;
            return this;
        }

        public Builder setUpdatedReplicas(@Nullable Integer updatedReplicas) {
            this.updatedReplicas = updatedReplicas;
            return this;
        }

        public StatefulSetStatus build() {
            return new StatefulSetStatus(availableReplicas, collisionCount, conditions, currentReplicas, currentRevision, observedGeneration, readyReplicas, replicas, updateRevision, updatedReplicas);
        }
    }
}
