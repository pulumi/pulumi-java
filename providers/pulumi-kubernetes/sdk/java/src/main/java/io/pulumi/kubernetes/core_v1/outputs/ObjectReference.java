// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ObjectReference {
    private final @Nullable String apiVersion;
    private final @Nullable String fieldPath;
    private final @Nullable String kind;
    private final @Nullable String name;
    private final @Nullable String namespace;
    private final @Nullable String resourceVersion;
    private final @Nullable String uid;

    @OutputCustomType.Constructor({"apiVersion","fieldPath","kind","name","namespace","resourceVersion","uid"})
    private ObjectReference(
        @Nullable String apiVersion,
        @Nullable String fieldPath,
        @Nullable String kind,
        @Nullable String name,
        @Nullable String namespace,
        @Nullable String resourceVersion,
        @Nullable String uid) {
        this.apiVersion = apiVersion;
        this.fieldPath = fieldPath;
        this.kind = kind;
        this.name = name;
        this.namespace = namespace;
        this.resourceVersion = resourceVersion;
        this.uid = uid;
    }

    public Optional<String> getApiVersion() {
        return Optional.ofNullable(this.apiVersion);
    }
    public Optional<String> getFieldPath() {
        return Optional.ofNullable(this.fieldPath);
    }
    public Optional<String> getKind() {
        return Optional.ofNullable(this.kind);
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> getNamespace() {
        return Optional.ofNullable(this.namespace);
    }
    public Optional<String> getResourceVersion() {
        return Optional.ofNullable(this.resourceVersion);
    }
    public Optional<String> getUid() {
        return Optional.ofNullable(this.uid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObjectReference defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String apiVersion;
        private @Nullable String fieldPath;
        private @Nullable String kind;
        private @Nullable String name;
        private @Nullable String namespace;
        private @Nullable String resourceVersion;
        private @Nullable String uid;

        public Builder() {
    	      // Empty
        }

        public Builder(ObjectReference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiVersion = defaults.apiVersion;
    	      this.fieldPath = defaults.fieldPath;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.resourceVersion = defaults.resourceVersion;
    	      this.uid = defaults.uid;
        }

        public Builder setApiVersion(@Nullable String apiVersion) {
            this.apiVersion = apiVersion;
            return this;
        }

        public Builder setFieldPath(@Nullable String fieldPath) {
            this.fieldPath = fieldPath;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setNamespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }

        public Builder setResourceVersion(@Nullable String resourceVersion) {
            this.resourceVersion = resourceVersion;
            return this;
        }

        public Builder setUid(@Nullable String uid) {
            this.uid = uid;
            return this;
        }

        public ObjectReference build() {
            return new ObjectReference(apiVersion, fieldPath, kind, name, namespace, resourceVersion, uid);
        }
    }
}
