// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.autoscaling_v2beta2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.kubernetes.autoscaling_v2beta2.inputs.MetricTargetArgs;
import java.lang.String;
import java.util.Objects;


public final class ContainerResourceMetricSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContainerResourceMetricSourceArgs Empty = new ContainerResourceMetricSourceArgs();

    @InputImport(name="container", required=true)
    private final Input<String> container;

    public Input<String> getContainer() {
        return this.container;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="target", required=true)
    private final Input<MetricTargetArgs> target;

    public Input<MetricTargetArgs> getTarget() {
        return this.target;
    }

    public ContainerResourceMetricSourceArgs(
        Input<String> container,
        Input<String> name,
        Input<MetricTargetArgs> target) {
        this.container = Objects.requireNonNull(container, "expected parameter 'container' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.target = Objects.requireNonNull(target, "expected parameter 'target' to be non-null");
    }

    private ContainerResourceMetricSourceArgs() {
        this.container = Input.empty();
        this.name = Input.empty();
        this.target = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerResourceMetricSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> container;
        private Input<String> name;
        private Input<MetricTargetArgs> target;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerResourceMetricSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.container = defaults.container;
    	      this.name = defaults.name;
    	      this.target = defaults.target;
        }

        public Builder setContainer(Input<String> container) {
            this.container = Objects.requireNonNull(container);
            return this;
        }

        public Builder setContainer(String container) {
            this.container = Input.of(Objects.requireNonNull(container));
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setTarget(Input<MetricTargetArgs> target) {
            this.target = Objects.requireNonNull(target);
            return this;
        }

        public Builder setTarget(MetricTargetArgs target) {
            this.target = Input.of(Objects.requireNonNull(target));
            return this;
        }

        public ContainerResourceMetricSourceArgs build() {
            return new ContainerResourceMetricSourceArgs(container, name, target);
        }
    }
}
