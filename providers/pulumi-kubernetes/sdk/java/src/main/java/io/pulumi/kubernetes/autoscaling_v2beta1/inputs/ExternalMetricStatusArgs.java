// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.autoscaling_v2beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.kubernetes.meta_v1.inputs.LabelSelectorArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.
 * 
 */
public final class ExternalMetricStatusArgs extends io.pulumi.resources.ResourceArgs {

    public static final ExternalMetricStatusArgs Empty = new ExternalMetricStatusArgs();

    /**
     * currentAverageValue is the current value of metric averaged over autoscaled pods.
     * 
     */
    @Import(name="currentAverageValue")
      private final @Nullable Output<String> currentAverageValue;

    public Output<String> getCurrentAverageValue() {
        return this.currentAverageValue == null ? Output.empty() : this.currentAverageValue;
    }

    /**
     * currentValue is the current value of the metric (as a quantity)
     * 
     */
    @Import(name="currentValue", required=true)
      private final Output<String> currentValue;

    public Output<String> getCurrentValue() {
        return this.currentValue;
    }

    /**
     * metricName is the name of a metric used for autoscaling in metric system.
     * 
     */
    @Import(name="metricName", required=true)
      private final Output<String> metricName;

    public Output<String> getMetricName() {
        return this.metricName;
    }

    /**
     * metricSelector is used to identify a specific time series within a given metric.
     * 
     */
    @Import(name="metricSelector")
      private final @Nullable Output<LabelSelectorArgs> metricSelector;

    public Output<LabelSelectorArgs> getMetricSelector() {
        return this.metricSelector == null ? Output.empty() : this.metricSelector;
    }

    public ExternalMetricStatusArgs(
        @Nullable Output<String> currentAverageValue,
        Output<String> currentValue,
        Output<String> metricName,
        @Nullable Output<LabelSelectorArgs> metricSelector) {
        this.currentAverageValue = currentAverageValue;
        this.currentValue = Objects.requireNonNull(currentValue, "expected parameter 'currentValue' to be non-null");
        this.metricName = Objects.requireNonNull(metricName, "expected parameter 'metricName' to be non-null");
        this.metricSelector = metricSelector;
    }

    private ExternalMetricStatusArgs() {
        this.currentAverageValue = Output.empty();
        this.currentValue = Output.empty();
        this.metricName = Output.empty();
        this.metricSelector = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExternalMetricStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> currentAverageValue;
        private Output<String> currentValue;
        private Output<String> metricName;
        private @Nullable Output<LabelSelectorArgs> metricSelector;

        public Builder() {
    	      // Empty
        }

        public Builder(ExternalMetricStatusArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentAverageValue = defaults.currentAverageValue;
    	      this.currentValue = defaults.currentValue;
    	      this.metricName = defaults.metricName;
    	      this.metricSelector = defaults.metricSelector;
        }

        public Builder currentAverageValue(@Nullable Output<String> currentAverageValue) {
            this.currentAverageValue = currentAverageValue;
            return this;
        }

        public Builder currentAverageValue(@Nullable String currentAverageValue) {
            this.currentAverageValue = Output.ofNullable(currentAverageValue);
            return this;
        }

        public Builder currentValue(Output<String> currentValue) {
            this.currentValue = Objects.requireNonNull(currentValue);
            return this;
        }

        public Builder currentValue(String currentValue) {
            this.currentValue = Output.of(Objects.requireNonNull(currentValue));
            return this;
        }

        public Builder metricName(Output<String> metricName) {
            this.metricName = Objects.requireNonNull(metricName);
            return this;
        }

        public Builder metricName(String metricName) {
            this.metricName = Output.of(Objects.requireNonNull(metricName));
            return this;
        }

        public Builder metricSelector(@Nullable Output<LabelSelectorArgs> metricSelector) {
            this.metricSelector = metricSelector;
            return this;
        }

        public Builder metricSelector(@Nullable LabelSelectorArgs metricSelector) {
            this.metricSelector = Output.ofNullable(metricSelector);
            return this;
        }
        public ExternalMetricStatusArgs build() {
            return new ExternalMetricStatusArgs(currentAverageValue, currentValue, metricName, metricSelector);
        }
    }
}
