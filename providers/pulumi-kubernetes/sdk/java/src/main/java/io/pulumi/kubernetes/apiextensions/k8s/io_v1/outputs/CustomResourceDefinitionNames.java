// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.apiextensions.k8s.io_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class CustomResourceDefinitionNames {
    /**
     * categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
     * 
     */
    private final @Nullable List<String> categories;
    /**
     * kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
     * 
     */
    private final String kind;
    /**
     * listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
     * 
     */
    private final @Nullable String listKind;
    /**
     * plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
     * 
     */
    private final String plural;
    /**
     * shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
     * 
     */
    private final @Nullable List<String> shortNames;
    /**
     * singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
     * 
     */
    private final @Nullable String singular;

    @OutputCustomType.Constructor({"categories","kind","listKind","plural","shortNames","singular"})
    private CustomResourceDefinitionNames(
        @Nullable List<String> categories,
        String kind,
        @Nullable String listKind,
        String plural,
        @Nullable List<String> shortNames,
        @Nullable String singular) {
        this.categories = categories;
        this.kind = Objects.requireNonNull(kind);
        this.listKind = listKind;
        this.plural = Objects.requireNonNull(plural);
        this.shortNames = shortNames;
        this.singular = singular;
    }

    /**
     * categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
     * 
     */
    public List<String> getCategories() {
        return this.categories == null ? List.of() : this.categories;
    }
    /**
     * kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
     * 
     */
    public String getKind() {
        return this.kind;
    }
    /**
     * listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
     * 
     */
    public Optional<String> getListKind() {
        return Optional.ofNullable(this.listKind);
    }
    /**
     * plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
     * 
     */
    public String getPlural() {
        return this.plural;
    }
    /**
     * shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
     * 
     */
    public List<String> getShortNames() {
        return this.shortNames == null ? List.of() : this.shortNames;
    }
    /**
     * singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
     * 
     */
    public Optional<String> getSingular() {
        return Optional.ofNullable(this.singular);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomResourceDefinitionNames defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> categories;
        private String kind;
        private @Nullable String listKind;
        private String plural;
        private @Nullable List<String> shortNames;
        private @Nullable String singular;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomResourceDefinitionNames defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categories = defaults.categories;
    	      this.kind = defaults.kind;
    	      this.listKind = defaults.listKind;
    	      this.plural = defaults.plural;
    	      this.shortNames = defaults.shortNames;
    	      this.singular = defaults.singular;
        }

        public Builder setCategories(@Nullable List<String> categories) {
            this.categories = categories;
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setListKind(@Nullable String listKind) {
            this.listKind = listKind;
            return this;
        }

        public Builder setPlural(String plural) {
            this.plural = Objects.requireNonNull(plural);
            return this;
        }

        public Builder setShortNames(@Nullable List<String> shortNames) {
            this.shortNames = shortNames;
            return this;
        }

        public Builder setSingular(@Nullable String singular) {
            this.singular = singular;
            return this;
        }

        public CustomResourceDefinitionNames build() {
            return new CustomResourceDefinitionNames(categories, kind, listKind, plural, shortNames, singular);
        }
    }
}
