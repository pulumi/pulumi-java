// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * LimitRangeItem defines a min/max usage limit for any resource that matches on kind.
 * 
 */
public final class LimitRangeItemArgs extends io.pulumi.resources.ResourceArgs {

    public static final LimitRangeItemArgs Empty = new LimitRangeItemArgs();

    /**
     * Default resource requirement limit value by resource name if resource limit is omitted.
     * 
     */
    @InputImport(name="default")
        private final @Nullable Input<Map<String,String>> $default;

    public Input<Map<String,String>> get$default() {
        return this.$default == null ? Input.empty() : this.$default;
    }

    /**
     * DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.
     * 
     */
    @InputImport(name="defaultRequest")
        private final @Nullable Input<Map<String,String>> defaultRequest;

    public Input<Map<String,String>> getDefaultRequest() {
        return this.defaultRequest == null ? Input.empty() : this.defaultRequest;
    }

    /**
     * Max usage constraints on this kind by resource name.
     * 
     */
    @InputImport(name="max")
        private final @Nullable Input<Map<String,String>> max;

    public Input<Map<String,String>> getMax() {
        return this.max == null ? Input.empty() : this.max;
    }

    /**
     * MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.
     * 
     */
    @InputImport(name="maxLimitRequestRatio")
        private final @Nullable Input<Map<String,String>> maxLimitRequestRatio;

    public Input<Map<String,String>> getMaxLimitRequestRatio() {
        return this.maxLimitRequestRatio == null ? Input.empty() : this.maxLimitRequestRatio;
    }

    /**
     * Min usage constraints on this kind by resource name.
     * 
     */
    @InputImport(name="min")
        private final @Nullable Input<Map<String,String>> min;

    public Input<Map<String,String>> getMin() {
        return this.min == null ? Input.empty() : this.min;
    }

    /**
     * Type of resource that this limit applies to.
     * 
     * Possible enum values:
     *  - `"Container"` Limit that applies to all containers in a namespace
     *  - `"PersistentVolumeClaim"` Limit that applies to all persistent volume claims in a namespace
     *  - `"Pod"` Limit that applies to all pods in a namespace
     * 
     */
    @InputImport(name="type", required=true)
        private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    public LimitRangeItemArgs(
        @Nullable Input<Map<String,String>> $default,
        @Nullable Input<Map<String,String>> defaultRequest,
        @Nullable Input<Map<String,String>> max,
        @Nullable Input<Map<String,String>> maxLimitRequestRatio,
        @Nullable Input<Map<String,String>> min,
        Input<String> type) {
        this.$default = $default;
        this.defaultRequest = defaultRequest;
        this.max = max;
        this.maxLimitRequestRatio = maxLimitRequestRatio;
        this.min = min;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private LimitRangeItemArgs() {
        this.$default = Input.empty();
        this.defaultRequest = Input.empty();
        this.max = Input.empty();
        this.maxLimitRequestRatio = Input.empty();
        this.min = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LimitRangeItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,String>> $default;
        private @Nullable Input<Map<String,String>> defaultRequest;
        private @Nullable Input<Map<String,String>> max;
        private @Nullable Input<Map<String,String>> maxLimitRequestRatio;
        private @Nullable Input<Map<String,String>> min;
        private Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(LimitRangeItemArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.$default = defaults.$default;
    	      this.defaultRequest = defaults.defaultRequest;
    	      this.max = defaults.max;
    	      this.maxLimitRequestRatio = defaults.maxLimitRequestRatio;
    	      this.min = defaults.min;
    	      this.type = defaults.type;
        }

        public Builder set$default(@Nullable Input<Map<String,String>> $default) {
            this.$default = $default;
            return this;
        }

        public Builder set$default(@Nullable Map<String,String> $default) {
            this.$default = Input.ofNullable($default);
            return this;
        }

        public Builder setDefaultRequest(@Nullable Input<Map<String,String>> defaultRequest) {
            this.defaultRequest = defaultRequest;
            return this;
        }

        public Builder setDefaultRequest(@Nullable Map<String,String> defaultRequest) {
            this.defaultRequest = Input.ofNullable(defaultRequest);
            return this;
        }

        public Builder setMax(@Nullable Input<Map<String,String>> max) {
            this.max = max;
            return this;
        }

        public Builder setMax(@Nullable Map<String,String> max) {
            this.max = Input.ofNullable(max);
            return this;
        }

        public Builder setMaxLimitRequestRatio(@Nullable Input<Map<String,String>> maxLimitRequestRatio) {
            this.maxLimitRequestRatio = maxLimitRequestRatio;
            return this;
        }

        public Builder setMaxLimitRequestRatio(@Nullable Map<String,String> maxLimitRequestRatio) {
            this.maxLimitRequestRatio = Input.ofNullable(maxLimitRequestRatio);
            return this;
        }

        public Builder setMin(@Nullable Input<Map<String,String>> min) {
            this.min = min;
            return this;
        }

        public Builder setMin(@Nullable Map<String,String> min) {
            this.min = Input.ofNullable(min);
            return this;
        }

        public Builder setType(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }
        public LimitRangeItemArgs build() {
            return new LimitRangeItemArgs($default, defaultRequest, max, maxLimitRequestRatio, min, type);
        }
    }
}
