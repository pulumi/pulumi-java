// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.apiregistration.k8s.io_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.kubernetes.apiregistration.k8s.io_v1beta1.outputs.ServiceReference;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class APIServiceSpec {
    private final @Nullable String caBundle;
    private final @Nullable String group;
    private final Integer groupPriorityMinimum;
    private final @Nullable Boolean insecureSkipTLSVerify;
    private final ServiceReference service;
    private final @Nullable String version;
    private final Integer versionPriority;

    @OutputCustomType.Constructor({"caBundle","group","groupPriorityMinimum","insecureSkipTLSVerify","service","version","versionPriority"})
    private APIServiceSpec(
        @Nullable String caBundle,
        @Nullable String group,
        Integer groupPriorityMinimum,
        @Nullable Boolean insecureSkipTLSVerify,
        ServiceReference service,
        @Nullable String version,
        Integer versionPriority) {
        this.caBundle = caBundle;
        this.group = group;
        this.groupPriorityMinimum = Objects.requireNonNull(groupPriorityMinimum);
        this.insecureSkipTLSVerify = insecureSkipTLSVerify;
        this.service = Objects.requireNonNull(service);
        this.version = version;
        this.versionPriority = Objects.requireNonNull(versionPriority);
    }

    public Optional<String> getCaBundle() {
        return Optional.ofNullable(this.caBundle);
    }
    public Optional<String> getGroup() {
        return Optional.ofNullable(this.group);
    }
    public Integer getGroupPriorityMinimum() {
        return this.groupPriorityMinimum;
    }
    public Optional<Boolean> getInsecureSkipTLSVerify() {
        return Optional.ofNullable(this.insecureSkipTLSVerify);
    }
    public ServiceReference getService() {
        return this.service;
    }
    public Optional<String> getVersion() {
        return Optional.ofNullable(this.version);
    }
    public Integer getVersionPriority() {
        return this.versionPriority;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(APIServiceSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String caBundle;
        private @Nullable String group;
        private Integer groupPriorityMinimum;
        private @Nullable Boolean insecureSkipTLSVerify;
        private ServiceReference service;
        private @Nullable String version;
        private Integer versionPriority;

        public Builder() {
    	      // Empty
        }

        public Builder(APIServiceSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caBundle = defaults.caBundle;
    	      this.group = defaults.group;
    	      this.groupPriorityMinimum = defaults.groupPriorityMinimum;
    	      this.insecureSkipTLSVerify = defaults.insecureSkipTLSVerify;
    	      this.service = defaults.service;
    	      this.version = defaults.version;
    	      this.versionPriority = defaults.versionPriority;
        }

        public Builder setCaBundle(@Nullable String caBundle) {
            this.caBundle = caBundle;
            return this;
        }

        public Builder setGroup(@Nullable String group) {
            this.group = group;
            return this;
        }

        public Builder setGroupPriorityMinimum(Integer groupPriorityMinimum) {
            this.groupPriorityMinimum = Objects.requireNonNull(groupPriorityMinimum);
            return this;
        }

        public Builder setInsecureSkipTLSVerify(@Nullable Boolean insecureSkipTLSVerify) {
            this.insecureSkipTLSVerify = insecureSkipTLSVerify;
            return this;
        }

        public Builder setService(ServiceReference service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }

        public Builder setVersion(@Nullable String version) {
            this.version = version;
            return this;
        }

        public Builder setVersionPriority(Integer versionPriority) {
            this.versionPriority = Objects.requireNonNull(versionPriority);
            return this;
        }

        public APIServiceSpec build() {
            return new APIServiceSpec(caBundle, group, groupPriorityMinimum, insecureSkipTLSVerify, service, version, versionPriority);
        }
    }
}
