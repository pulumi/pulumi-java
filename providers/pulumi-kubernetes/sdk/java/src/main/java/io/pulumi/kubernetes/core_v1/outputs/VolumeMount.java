// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeMount {
    /**
     * Path within the container at which the volume should be mounted.  Must not contain ':'.
     * 
     */
    private final String mountPath;
    /**
     * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
     * 
     */
    private final @Nullable String mountPropagation;
    /**
     * This must match the Name of a Volume.
     * 
     */
    private final String name;
    /**
     * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
     * 
     */
    private final @Nullable Boolean readOnly;
    /**
     * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
     * 
     */
    private final @Nullable String subPath;
    /**
     * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
     * 
     */
    private final @Nullable String subPathExpr;

    @CustomType.Constructor
    private VolumeMount(
        @CustomType.Parameter("mountPath") String mountPath,
        @CustomType.Parameter("mountPropagation") @Nullable String mountPropagation,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("readOnly") @Nullable Boolean readOnly,
        @CustomType.Parameter("subPath") @Nullable String subPath,
        @CustomType.Parameter("subPathExpr") @Nullable String subPathExpr) {
        this.mountPath = mountPath;
        this.mountPropagation = mountPropagation;
        this.name = name;
        this.readOnly = readOnly;
        this.subPath = subPath;
        this.subPathExpr = subPathExpr;
    }

    /**
     * Path within the container at which the volume should be mounted.  Must not contain ':'.
     * 
    */
    public String getMountPath() {
        return this.mountPath;
    }
    /**
     * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
     * 
    */
    public Optional<String> getMountPropagation() {
        return Optional.ofNullable(this.mountPropagation);
    }
    /**
     * This must match the Name of a Volume.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
     * 
    */
    public Optional<Boolean> getReadOnly() {
        return Optional.ofNullable(this.readOnly);
    }
    /**
     * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
     * 
    */
    public Optional<String> getSubPath() {
        return Optional.ofNullable(this.subPath);
    }
    /**
     * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
     * 
    */
    public Optional<String> getSubPathExpr() {
        return Optional.ofNullable(this.subPathExpr);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeMount defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String mountPath;
        private @Nullable String mountPropagation;
        private String name;
        private @Nullable Boolean readOnly;
        private @Nullable String subPath;
        private @Nullable String subPathExpr;

        public Builder() {
    	      // Empty
        }

        public Builder(VolumeMount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mountPath = defaults.mountPath;
    	      this.mountPropagation = defaults.mountPropagation;
    	      this.name = defaults.name;
    	      this.readOnly = defaults.readOnly;
    	      this.subPath = defaults.subPath;
    	      this.subPathExpr = defaults.subPathExpr;
        }

        public Builder mountPath(String mountPath) {
            this.mountPath = Objects.requireNonNull(mountPath);
            return this;
        }

        public Builder mountPropagation(@Nullable String mountPropagation) {
            this.mountPropagation = mountPropagation;
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder readOnly(@Nullable Boolean readOnly) {
            this.readOnly = readOnly;
            return this;
        }

        public Builder subPath(@Nullable String subPath) {
            this.subPath = subPath;
            return this;
        }

        public Builder subPathExpr(@Nullable String subPathExpr) {
            this.subPathExpr = subPathExpr;
            return this;
        }
        public VolumeMount build() {
            return new VolumeMount(mountPath, mountPropagation, name, readOnly, subPath, subPathExpr);
        }
    }
}
