// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.auditregistration.k8s.io_v1alpha1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.kubernetes.auditregistration.k8s.io_v1alpha1.inputs.WebhookClientConfigArgs;
import io.pulumi.kubernetes.auditregistration.k8s.io_v1alpha1.inputs.WebhookThrottleConfigArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebhookArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebhookArgs Empty = new WebhookArgs();

    @InputImport(name="clientConfig", required=true)
    private final Input<WebhookClientConfigArgs> clientConfig;

    public Input<WebhookClientConfigArgs> getClientConfig() {
        return this.clientConfig;
    }

    @InputImport(name="throttle")
    private final @Nullable Input<WebhookThrottleConfigArgs> throttle;

    public Input<WebhookThrottleConfigArgs> getThrottle() {
        return this.throttle == null ? Input.empty() : this.throttle;
    }

    public WebhookArgs(
        Input<WebhookClientConfigArgs> clientConfig,
        @Nullable Input<WebhookThrottleConfigArgs> throttle) {
        this.clientConfig = Objects.requireNonNull(clientConfig, "expected parameter 'clientConfig' to be non-null");
        this.throttle = throttle;
    }

    private WebhookArgs() {
        this.clientConfig = Input.empty();
        this.throttle = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebhookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<WebhookClientConfigArgs> clientConfig;
        private @Nullable Input<WebhookThrottleConfigArgs> throttle;

        public Builder() {
    	      // Empty
        }

        public Builder(WebhookArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientConfig = defaults.clientConfig;
    	      this.throttle = defaults.throttle;
        }

        public Builder setClientConfig(Input<WebhookClientConfigArgs> clientConfig) {
            this.clientConfig = Objects.requireNonNull(clientConfig);
            return this;
        }

        public Builder setClientConfig(WebhookClientConfigArgs clientConfig) {
            this.clientConfig = Input.of(Objects.requireNonNull(clientConfig));
            return this;
        }

        public Builder setThrottle(@Nullable Input<WebhookThrottleConfigArgs> throttle) {
            this.throttle = throttle;
            return this;
        }

        public Builder setThrottle(@Nullable WebhookThrottleConfigArgs throttle) {
            this.throttle = Input.ofNullable(throttle);
            return this;
        }

        public WebhookArgs build() {
            return new WebhookArgs(clientConfig, throttle);
        }
    }
}
