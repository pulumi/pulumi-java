// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.kubernetes.core_v1.inputs.NodeAffinityArgs;
import io.pulumi.kubernetes.core_v1.inputs.PodAffinityArgs;
import io.pulumi.kubernetes.core_v1.inputs.PodAntiAffinityArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Affinity is a group of affinity scheduling rules.
 * 
 */
public final class AffinityArgs extends io.pulumi.resources.ResourceArgs {

    public static final AffinityArgs Empty = new AffinityArgs();

    /**
     * Describes node affinity scheduling rules for the pod.
     * 
     */
    @InputImport(name="nodeAffinity")
      private final @Nullable Input<NodeAffinityArgs> nodeAffinity;

    public Input<NodeAffinityArgs> getNodeAffinity() {
        return this.nodeAffinity == null ? Input.empty() : this.nodeAffinity;
    }

    /**
     * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
     * 
     */
    @InputImport(name="podAffinity")
      private final @Nullable Input<PodAffinityArgs> podAffinity;

    public Input<PodAffinityArgs> getPodAffinity() {
        return this.podAffinity == null ? Input.empty() : this.podAffinity;
    }

    /**
     * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
     * 
     */
    @InputImport(name="podAntiAffinity")
      private final @Nullable Input<PodAntiAffinityArgs> podAntiAffinity;

    public Input<PodAntiAffinityArgs> getPodAntiAffinity() {
        return this.podAntiAffinity == null ? Input.empty() : this.podAntiAffinity;
    }

    public AffinityArgs(
        @Nullable Input<NodeAffinityArgs> nodeAffinity,
        @Nullable Input<PodAffinityArgs> podAffinity,
        @Nullable Input<PodAntiAffinityArgs> podAntiAffinity) {
        this.nodeAffinity = nodeAffinity;
        this.podAffinity = podAffinity;
        this.podAntiAffinity = podAntiAffinity;
    }

    private AffinityArgs() {
        this.nodeAffinity = Input.empty();
        this.podAffinity = Input.empty();
        this.podAntiAffinity = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AffinityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<NodeAffinityArgs> nodeAffinity;
        private @Nullable Input<PodAffinityArgs> podAffinity;
        private @Nullable Input<PodAntiAffinityArgs> podAntiAffinity;

        public Builder() {
    	      // Empty
        }

        public Builder(AffinityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nodeAffinity = defaults.nodeAffinity;
    	      this.podAffinity = defaults.podAffinity;
    	      this.podAntiAffinity = defaults.podAntiAffinity;
        }

        public Builder nodeAffinity(@Nullable Input<NodeAffinityArgs> nodeAffinity) {
            this.nodeAffinity = nodeAffinity;
            return this;
        }

        public Builder nodeAffinity(@Nullable NodeAffinityArgs nodeAffinity) {
            this.nodeAffinity = Input.ofNullable(nodeAffinity);
            return this;
        }

        public Builder podAffinity(@Nullable Input<PodAffinityArgs> podAffinity) {
            this.podAffinity = podAffinity;
            return this;
        }

        public Builder podAffinity(@Nullable PodAffinityArgs podAffinity) {
            this.podAffinity = Input.ofNullable(podAffinity);
            return this;
        }

        public Builder podAntiAffinity(@Nullable Input<PodAntiAffinityArgs> podAntiAffinity) {
            this.podAntiAffinity = podAntiAffinity;
            return this;
        }

        public Builder podAntiAffinity(@Nullable PodAntiAffinityArgs podAntiAffinity) {
            this.podAntiAffinity = Input.ofNullable(podAntiAffinity);
            return this;
        }
        public AffinityArgs build() {
            return new AffinityArgs(nodeAffinity, podAffinity, podAntiAffinity);
        }
    }
}
