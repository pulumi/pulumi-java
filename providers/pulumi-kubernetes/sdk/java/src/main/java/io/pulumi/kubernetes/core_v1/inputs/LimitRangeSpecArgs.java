// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.kubernetes.core_v1.inputs.LimitRangeItemArgs;
import java.util.List;
import java.util.Objects;


/**
 * LimitRangeSpec defines a min/max usage limit for resources that match on kind.
 * 
 */
public final class LimitRangeSpecArgs extends io.pulumi.resources.ResourceArgs {

    public static final LimitRangeSpecArgs Empty = new LimitRangeSpecArgs();

    /**
     * Limits is the list of LimitRangeItem objects that are enforced.
     * 
     */
    @InputImport(name="limits", required=true)
      private final Output<List<LimitRangeItemArgs>> limits;

    public Output<List<LimitRangeItemArgs>> getLimits() {
        return this.limits;
    }

    public LimitRangeSpecArgs(Output<List<LimitRangeItemArgs>> limits) {
        this.limits = Objects.requireNonNull(limits, "expected parameter 'limits' to be non-null");
    }

    private LimitRangeSpecArgs() {
        this.limits = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LimitRangeSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<LimitRangeItemArgs>> limits;

        public Builder() {
    	      // Empty
        }

        public Builder(LimitRangeSpecArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.limits = defaults.limits;
        }

        public Builder limits(Output<List<LimitRangeItemArgs>> limits) {
            this.limits = Objects.requireNonNull(limits);
            return this;
        }

        public Builder limits(List<LimitRangeItemArgs> limits) {
            this.limits = Output.of(Objects.requireNonNull(limits));
            return this;
        }
        public LimitRangeSpecArgs build() {
            return new LimitRangeSpecArgs(limits);
        }
    }
}
