// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.apiextensions.k8s.io_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.kubernetes.apiextensions.k8s.io_v1.inputs.CustomResourceConversionArgs;
import io.pulumi.kubernetes.apiextensions.k8s.io_v1.inputs.CustomResourceDefinitionNamesArgs;
import io.pulumi.kubernetes.apiextensions.k8s.io_v1.inputs.CustomResourceDefinitionVersionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CustomResourceDefinitionSpecArgs extends io.pulumi.resources.ResourceArgs {

    public static final CustomResourceDefinitionSpecArgs Empty = new CustomResourceDefinitionSpecArgs();

    @InputImport(name="conversion")
    private final @Nullable Input<CustomResourceConversionArgs> conversion;

    public Input<CustomResourceConversionArgs> getConversion() {
        return this.conversion == null ? Input.empty() : this.conversion;
    }

    @InputImport(name="group", required=true)
    private final Input<String> group;

    public Input<String> getGroup() {
        return this.group;
    }

    @InputImport(name="names", required=true)
    private final Input<CustomResourceDefinitionNamesArgs> names;

    public Input<CustomResourceDefinitionNamesArgs> getNames() {
        return this.names;
    }

    @InputImport(name="preserveUnknownFields")
    private final @Nullable Input<Boolean> preserveUnknownFields;

    public Input<Boolean> getPreserveUnknownFields() {
        return this.preserveUnknownFields == null ? Input.empty() : this.preserveUnknownFields;
    }

    @InputImport(name="scope", required=true)
    private final Input<String> scope;

    public Input<String> getScope() {
        return this.scope;
    }

    @InputImport(name="versions", required=true)
    private final Input<List<CustomResourceDefinitionVersionArgs>> versions;

    public Input<List<CustomResourceDefinitionVersionArgs>> getVersions() {
        return this.versions;
    }

    public CustomResourceDefinitionSpecArgs(
        @Nullable Input<CustomResourceConversionArgs> conversion,
        Input<String> group,
        Input<CustomResourceDefinitionNamesArgs> names,
        @Nullable Input<Boolean> preserveUnknownFields,
        Input<String> scope,
        Input<List<CustomResourceDefinitionVersionArgs>> versions) {
        this.conversion = conversion;
        this.group = Objects.requireNonNull(group, "expected parameter 'group' to be non-null");
        this.names = Objects.requireNonNull(names, "expected parameter 'names' to be non-null");
        this.preserveUnknownFields = preserveUnknownFields;
        this.scope = Objects.requireNonNull(scope, "expected parameter 'scope' to be non-null");
        this.versions = Objects.requireNonNull(versions, "expected parameter 'versions' to be non-null");
    }

    private CustomResourceDefinitionSpecArgs() {
        this.conversion = Input.empty();
        this.group = Input.empty();
        this.names = Input.empty();
        this.preserveUnknownFields = Input.empty();
        this.scope = Input.empty();
        this.versions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomResourceDefinitionSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<CustomResourceConversionArgs> conversion;
        private Input<String> group;
        private Input<CustomResourceDefinitionNamesArgs> names;
        private @Nullable Input<Boolean> preserveUnknownFields;
        private Input<String> scope;
        private Input<List<CustomResourceDefinitionVersionArgs>> versions;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomResourceDefinitionSpecArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conversion = defaults.conversion;
    	      this.group = defaults.group;
    	      this.names = defaults.names;
    	      this.preserveUnknownFields = defaults.preserveUnknownFields;
    	      this.scope = defaults.scope;
    	      this.versions = defaults.versions;
        }

        public Builder setConversion(@Nullable Input<CustomResourceConversionArgs> conversion) {
            this.conversion = conversion;
            return this;
        }

        public Builder setConversion(@Nullable CustomResourceConversionArgs conversion) {
            this.conversion = Input.ofNullable(conversion);
            return this;
        }

        public Builder setGroup(Input<String> group) {
            this.group = Objects.requireNonNull(group);
            return this;
        }

        public Builder setGroup(String group) {
            this.group = Input.of(Objects.requireNonNull(group));
            return this;
        }

        public Builder setNames(Input<CustomResourceDefinitionNamesArgs> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }

        public Builder setNames(CustomResourceDefinitionNamesArgs names) {
            this.names = Input.of(Objects.requireNonNull(names));
            return this;
        }

        public Builder setPreserveUnknownFields(@Nullable Input<Boolean> preserveUnknownFields) {
            this.preserveUnknownFields = preserveUnknownFields;
            return this;
        }

        public Builder setPreserveUnknownFields(@Nullable Boolean preserveUnknownFields) {
            this.preserveUnknownFields = Input.ofNullable(preserveUnknownFields);
            return this;
        }

        public Builder setScope(Input<String> scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }

        public Builder setScope(String scope) {
            this.scope = Input.of(Objects.requireNonNull(scope));
            return this;
        }

        public Builder setVersions(Input<List<CustomResourceDefinitionVersionArgs>> versions) {
            this.versions = Objects.requireNonNull(versions);
            return this;
        }

        public Builder setVersions(List<CustomResourceDefinitionVersionArgs> versions) {
            this.versions = Input.of(Objects.requireNonNull(versions));
            return this;
        }

        public CustomResourceDefinitionSpecArgs build() {
            return new CustomResourceDefinitionSpecArgs(conversion, group, names, preserveUnknownFields, scope, versions);
        }
    }
}
