// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
 * 
 */
public final class FCVolumeSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final FCVolumeSourceArgs Empty = new FCVolumeSourceArgs();

    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &#34;ext4&#34;, &#34;xfs&#34;, &#34;ntfs&#34;. Implicitly inferred to be &#34;ext4&#34; if unspecified.
     * 
     */
    @Import(name="fsType")
    private @Nullable Output<String> fsType;

    public Optional<Output<String>> fsType() {
        return Optional.ofNullable(this.fsType);
    }

    /**
     * Optional: FC target lun number
     * 
     */
    @Import(name="lun")
    private @Nullable Output<Integer> lun;

    public Optional<Output<Integer>> lun() {
        return Optional.ofNullable(this.lun);
    }

    /**
     * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * 
     */
    @Import(name="readOnly")
    private @Nullable Output<Boolean> readOnly;

    public Optional<Output<Boolean>> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    /**
     * Optional: FC target worldwide names (WWNs)
     * 
     */
    @Import(name="targetWWNs")
    private @Nullable Output<List<String>> targetWWNs;

    public Optional<Output<List<String>>> targetWWNs() {
        return Optional.ofNullable(this.targetWWNs);
    }

    /**
     * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
     * 
     */
    @Import(name="wwids")
    private @Nullable Output<List<String>> wwids;

    public Optional<Output<List<String>>> wwids() {
        return Optional.ofNullable(this.wwids);
    }

    private FCVolumeSourceArgs() {}

    private FCVolumeSourceArgs(FCVolumeSourceArgs $) {
        this.fsType = $.fsType;
        this.lun = $.lun;
        this.readOnly = $.readOnly;
        this.targetWWNs = $.targetWWNs;
        this.wwids = $.wwids;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FCVolumeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FCVolumeSourceArgs $;

        public Builder() {
            $ = new FCVolumeSourceArgs();
        }

        public Builder(FCVolumeSourceArgs defaults) {
            $ = new FCVolumeSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder fsType(@Nullable Output<String> fsType) {
            $.fsType = fsType;
            return this;
        }

        public Builder fsType(String fsType) {
            return fsType(Output.of(fsType));
        }

        public Builder lun(@Nullable Output<Integer> lun) {
            $.lun = lun;
            return this;
        }

        public Builder lun(Integer lun) {
            return lun(Output.of(lun));
        }

        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        public Builder readOnly(Boolean readOnly) {
            return readOnly(Output.of(readOnly));
        }

        public Builder targetWWNs(@Nullable Output<List<String>> targetWWNs) {
            $.targetWWNs = targetWWNs;
            return this;
        }

        public Builder targetWWNs(List<String> targetWWNs) {
            return targetWWNs(Output.of(targetWWNs));
        }

        public Builder targetWWNs(String... targetWWNs) {
            return targetWWNs(List.of(targetWWNs));
        }

        public Builder wwids(@Nullable Output<List<String>> wwids) {
            $.wwids = wwids;
            return this;
        }

        public Builder wwids(List<String> wwids) {
            return wwids(Output.of(wwids));
        }

        public Builder wwids(String... wwids) {
            return wwids(List.of(wwids));
        }

        public FCVolumeSourceArgs build() {
            return $;
        }
    }

}
