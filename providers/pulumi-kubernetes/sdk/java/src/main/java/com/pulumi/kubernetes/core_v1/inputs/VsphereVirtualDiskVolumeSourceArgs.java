// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Represents a vSphere volume resource.
 * 
 */
public final class VsphereVirtualDiskVolumeSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final VsphereVirtualDiskVolumeSourceArgs Empty = new VsphereVirtualDiskVolumeSourceArgs();

    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * 
     */
    @Import(name="fsType")
      private final @Nullable Output<String> fsType;

    public Output<String> fsType() {
        return this.fsType == null ? Codegen.empty() : this.fsType;
    }

    /**
     * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
     * 
     */
    @Import(name="storagePolicyID")
      private final @Nullable Output<String> storagePolicyID;

    public Output<String> storagePolicyID() {
        return this.storagePolicyID == null ? Codegen.empty() : this.storagePolicyID;
    }

    /**
     * Storage Policy Based Management (SPBM) profile name.
     * 
     */
    @Import(name="storagePolicyName")
      private final @Nullable Output<String> storagePolicyName;

    public Output<String> storagePolicyName() {
        return this.storagePolicyName == null ? Codegen.empty() : this.storagePolicyName;
    }

    /**
     * Path that identifies vSphere volume vmdk
     * 
     */
    @Import(name="volumePath", required=true)
      private final Output<String> volumePath;

    public Output<String> volumePath() {
        return this.volumePath;
    }

    public VsphereVirtualDiskVolumeSourceArgs(
        @Nullable Output<String> fsType,
        @Nullable Output<String> storagePolicyID,
        @Nullable Output<String> storagePolicyName,
        Output<String> volumePath) {
        this.fsType = fsType;
        this.storagePolicyID = storagePolicyID;
        this.storagePolicyName = storagePolicyName;
        this.volumePath = Objects.requireNonNull(volumePath, "expected parameter 'volumePath' to be non-null");
    }

    private VsphereVirtualDiskVolumeSourceArgs() {
        this.fsType = Codegen.empty();
        this.storagePolicyID = Codegen.empty();
        this.storagePolicyName = Codegen.empty();
        this.volumePath = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VsphereVirtualDiskVolumeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> fsType;
        private @Nullable Output<String> storagePolicyID;
        private @Nullable Output<String> storagePolicyName;
        private Output<String> volumePath;

        public Builder() {
    	      // Empty
        }

        public Builder(VsphereVirtualDiskVolumeSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fsType = defaults.fsType;
    	      this.storagePolicyID = defaults.storagePolicyID;
    	      this.storagePolicyName = defaults.storagePolicyName;
    	      this.volumePath = defaults.volumePath;
        }

        public Builder fsType(@Nullable Output<String> fsType) {
            this.fsType = fsType;
            return this;
        }
        public Builder fsType(@Nullable String fsType) {
            this.fsType = Codegen.ofNullable(fsType);
            return this;
        }
        public Builder storagePolicyID(@Nullable Output<String> storagePolicyID) {
            this.storagePolicyID = storagePolicyID;
            return this;
        }
        public Builder storagePolicyID(@Nullable String storagePolicyID) {
            this.storagePolicyID = Codegen.ofNullable(storagePolicyID);
            return this;
        }
        public Builder storagePolicyName(@Nullable Output<String> storagePolicyName) {
            this.storagePolicyName = storagePolicyName;
            return this;
        }
        public Builder storagePolicyName(@Nullable String storagePolicyName) {
            this.storagePolicyName = Codegen.ofNullable(storagePolicyName);
            return this;
        }
        public Builder volumePath(Output<String> volumePath) {
            this.volumePath = Objects.requireNonNull(volumePath);
            return this;
        }
        public Builder volumePath(String volumePath) {
            this.volumePath = Output.of(Objects.requireNonNull(volumePath));
            return this;
        }        public VsphereVirtualDiskVolumeSourceArgs build() {
            return new VsphereVirtualDiskVolumeSourceArgs(fsType, storagePolicyID, storagePolicyName, volumePath);
        }
    }
}
