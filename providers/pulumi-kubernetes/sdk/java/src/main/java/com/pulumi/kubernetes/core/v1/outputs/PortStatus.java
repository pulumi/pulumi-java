// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PortStatus {
    /**
     * @return Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
     *   CamelCase names
     * - cloud provider specific error values must have names that comply with the
     *   format foo.example.com/CamelCase.
     * 
     */
    private final @Nullable String error;
    /**
     * @return Port is the port number of the service port of which status is recorded here
     * 
     */
    private final Integer port;
    /**
     * @return Protocol is the protocol of the service port of which status is recorded here The supported values are: &#34;TCP&#34;, &#34;UDP&#34;, &#34;SCTP&#34;
     * 
     */
    private final String protocol;

    @CustomType.Constructor
    private PortStatus(
        @CustomType.Parameter("error") @Nullable String error,
        @CustomType.Parameter("port") Integer port,
        @CustomType.Parameter("protocol") String protocol) {
        this.error = error;
        this.port = port;
        this.protocol = protocol;
    }

    /**
     * @return Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
     *   CamelCase names
     * - cloud provider specific error values must have names that comply with the
     *   format foo.example.com/CamelCase.
     * 
     */
    public Optional<String> error() {
        return Optional.ofNullable(this.error);
    }
    /**
     * @return Port is the port number of the service port of which status is recorded here
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return Protocol is the protocol of the service port of which status is recorded here The supported values are: &#34;TCP&#34;, &#34;UDP&#34;, &#34;SCTP&#34;
     * 
     */
    public String protocol() {
        return this.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PortStatus defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String error;
        private Integer port;
        private String protocol;

        public Builder() {
    	      // Empty
        }

        public Builder(PortStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.error = defaults.error;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
        }

        public Builder error(@Nullable String error) {
            this.error = error;
            return this;
        }
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }        public PortStatus build() {
            return new PortStatus(error, port, protocol);
        }
    }
}
