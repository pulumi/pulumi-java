// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.kubernetes.core_v1.inputs.PodDNSConfigOptionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
 * 
 */
public final class PodDNSConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PodDNSConfigArgs Empty = new PodDNSConfigArgs();

    /**
     * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
     * 
     */
    @Import(name="nameservers")
      private final @Nullable Output<List<String>> nameservers;

    public Output<List<String>> nameservers() {
        return this.nameservers == null ? Codegen.empty() : this.nameservers;
    }

    /**
     * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
     * 
     */
    @Import(name="options")
      private final @Nullable Output<List<PodDNSConfigOptionArgs>> options;

    public Output<List<PodDNSConfigOptionArgs>> options() {
        return this.options == null ? Codegen.empty() : this.options;
    }

    /**
     * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
     * 
     */
    @Import(name="searches")
      private final @Nullable Output<List<String>> searches;

    public Output<List<String>> searches() {
        return this.searches == null ? Codegen.empty() : this.searches;
    }

    public PodDNSConfigArgs(
        @Nullable Output<List<String>> nameservers,
        @Nullable Output<List<PodDNSConfigOptionArgs>> options,
        @Nullable Output<List<String>> searches) {
        this.nameservers = nameservers;
        this.options = options;
        this.searches = searches;
    }

    private PodDNSConfigArgs() {
        this.nameservers = Codegen.empty();
        this.options = Codegen.empty();
        this.searches = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PodDNSConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> nameservers;
        private @Nullable Output<List<PodDNSConfigOptionArgs>> options;
        private @Nullable Output<List<String>> searches;

        public Builder() {
    	      // Empty
        }

        public Builder(PodDNSConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nameservers = defaults.nameservers;
    	      this.options = defaults.options;
    	      this.searches = defaults.searches;
        }

        public Builder nameservers(@Nullable Output<List<String>> nameservers) {
            this.nameservers = nameservers;
            return this;
        }
        public Builder nameservers(@Nullable List<String> nameservers) {
            this.nameservers = Codegen.ofNullable(nameservers);
            return this;
        }
        public Builder nameservers(String... nameservers) {
            return nameservers(List.of(nameservers));
        }
        public Builder options(@Nullable Output<List<PodDNSConfigOptionArgs>> options) {
            this.options = options;
            return this;
        }
        public Builder options(@Nullable List<PodDNSConfigOptionArgs> options) {
            this.options = Codegen.ofNullable(options);
            return this;
        }
        public Builder options(PodDNSConfigOptionArgs... options) {
            return options(List.of(options));
        }
        public Builder searches(@Nullable Output<List<String>> searches) {
            this.searches = searches;
            return this;
        }
        public Builder searches(@Nullable List<String> searches) {
            this.searches = Codegen.ofNullable(searches);
            return this;
        }
        public Builder searches(String... searches) {
            return searches(List.of(searches));
        }        public PodDNSConfigArgs build() {
            return new PodDNSConfigArgs(nameservers, options, searches);
        }
    }
}
