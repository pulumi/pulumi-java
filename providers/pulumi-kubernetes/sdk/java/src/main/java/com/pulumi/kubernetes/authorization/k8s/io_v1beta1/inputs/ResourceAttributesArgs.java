// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.authorization.k8s.io_v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
 * 
 */
public final class ResourceAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceAttributesArgs Empty = new ResourceAttributesArgs();

    /**
     * Group is the API Group of the Resource.  &#34;*&#34; means all.
     * 
     */
    @Import(name="group")
      private final @Nullable Output<String> group;

    public Output<String> group() {
        return this.group == null ? Codegen.empty() : this.group;
    }

    /**
     * Name is the name of the resource being requested for a &#34;get&#34; or deleted for a &#34;delete&#34;. &#34;&#34; (empty) means all.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces &#34;&#34; (empty) is defaulted for LocalSubjectAccessReviews &#34;&#34; (empty) is empty for cluster-scoped resources &#34;&#34; (empty) means &#34;all&#34; for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
     * 
     */
    @Import(name="namespace")
      private final @Nullable Output<String> namespace;

    public Output<String> namespace() {
        return this.namespace == null ? Codegen.empty() : this.namespace;
    }

    /**
     * Resource is one of the existing resource types.  &#34;*&#34; means all.
     * 
     */
    @Import(name="resource")
      private final @Nullable Output<String> resource;

    public Output<String> resource() {
        return this.resource == null ? Codegen.empty() : this.resource;
    }

    /**
     * Subresource is one of the existing resource types.  &#34;&#34; means none.
     * 
     */
    @Import(name="subresource")
      private final @Nullable Output<String> subresource;

    public Output<String> subresource() {
        return this.subresource == null ? Codegen.empty() : this.subresource;
    }

    /**
     * Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  &#34;*&#34; means all.
     * 
     */
    @Import(name="verb")
      private final @Nullable Output<String> verb;

    public Output<String> verb() {
        return this.verb == null ? Codegen.empty() : this.verb;
    }

    /**
     * Version is the API Version of the Resource.  &#34;*&#34; means all.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<String> version;

    public Output<String> version() {
        return this.version == null ? Codegen.empty() : this.version;
    }

    public ResourceAttributesArgs(
        @Nullable Output<String> group,
        @Nullable Output<String> name,
        @Nullable Output<String> namespace,
        @Nullable Output<String> resource,
        @Nullable Output<String> subresource,
        @Nullable Output<String> verb,
        @Nullable Output<String> version) {
        this.group = group;
        this.name = name;
        this.namespace = namespace;
        this.resource = resource;
        this.subresource = subresource;
        this.verb = verb;
        this.version = version;
    }

    private ResourceAttributesArgs() {
        this.group = Codegen.empty();
        this.name = Codegen.empty();
        this.namespace = Codegen.empty();
        this.resource = Codegen.empty();
        this.subresource = Codegen.empty();
        this.verb = Codegen.empty();
        this.version = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> group;
        private @Nullable Output<String> name;
        private @Nullable Output<String> namespace;
        private @Nullable Output<String> resource;
        private @Nullable Output<String> subresource;
        private @Nullable Output<String> verb;
        private @Nullable Output<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceAttributesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.group = defaults.group;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.resource = defaults.resource;
    	      this.subresource = defaults.subresource;
    	      this.verb = defaults.verb;
    	      this.version = defaults.version;
        }

        public Builder group(@Nullable Output<String> group) {
            this.group = group;
            return this;
        }
        public Builder group(@Nullable String group) {
            this.group = Codegen.ofNullable(group);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder namespace(@Nullable Output<String> namespace) {
            this.namespace = namespace;
            return this;
        }
        public Builder namespace(@Nullable String namespace) {
            this.namespace = Codegen.ofNullable(namespace);
            return this;
        }
        public Builder resource(@Nullable Output<String> resource) {
            this.resource = resource;
            return this;
        }
        public Builder resource(@Nullable String resource) {
            this.resource = Codegen.ofNullable(resource);
            return this;
        }
        public Builder subresource(@Nullable Output<String> subresource) {
            this.subresource = subresource;
            return this;
        }
        public Builder subresource(@Nullable String subresource) {
            this.subresource = Codegen.ofNullable(subresource);
            return this;
        }
        public Builder verb(@Nullable Output<String> verb) {
            this.verb = verb;
            return this;
        }
        public Builder verb(@Nullable String verb) {
            this.verb = Codegen.ofNullable(verb);
            return this;
        }
        public Builder version(@Nullable Output<String> version) {
            this.version = version;
            return this;
        }
        public Builder version(@Nullable String version) {
            this.version = Codegen.ofNullable(version);
            return this;
        }        public ResourceAttributesArgs build() {
            return new ResourceAttributesArgs(group, name, namespace, resource, subresource, verb, version);
        }
    }
}
