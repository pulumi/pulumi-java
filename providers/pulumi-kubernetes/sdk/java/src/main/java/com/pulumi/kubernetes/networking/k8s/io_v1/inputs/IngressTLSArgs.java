// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.networking.k8s.io_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * IngressTLS describes the transport layer security associated with an Ingress.
 * 
 */
public final class IngressTLSArgs extends com.pulumi.resources.ResourceArgs {

    public static final IngressTLSArgs Empty = new IngressTLSArgs();

    /**
     * Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
     * 
     */
    @Import(name="hosts")
      private final @Nullable Output<List<String>> hosts;

    public Output<List<String>> hosts() {
        return this.hosts == null ? Codegen.empty() : this.hosts;
    }

    /**
     * SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the &#34;Host&#34; header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
     * 
     */
    @Import(name="secretName")
      private final @Nullable Output<String> secretName;

    public Output<String> secretName() {
        return this.secretName == null ? Codegen.empty() : this.secretName;
    }

    public IngressTLSArgs(
        @Nullable Output<List<String>> hosts,
        @Nullable Output<String> secretName) {
        this.hosts = hosts;
        this.secretName = secretName;
    }

    private IngressTLSArgs() {
        this.hosts = Codegen.empty();
        this.secretName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IngressTLSArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> hosts;
        private @Nullable Output<String> secretName;

        public Builder() {
    	      // Empty
        }

        public Builder(IngressTLSArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hosts = defaults.hosts;
    	      this.secretName = defaults.secretName;
        }

        public Builder hosts(@Nullable Output<List<String>> hosts) {
            this.hosts = hosts;
            return this;
        }
        public Builder hosts(@Nullable List<String> hosts) {
            this.hosts = Codegen.ofNullable(hosts);
            return this;
        }
        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }
        public Builder secretName(@Nullable Output<String> secretName) {
            this.secretName = secretName;
            return this;
        }
        public Builder secretName(@Nullable String secretName) {
            this.secretName = Codegen.ofNullable(secretName);
            return this;
        }        public IngressTLSArgs build() {
            return new IngressTLSArgs(hosts, secretName);
        }
    }
}
