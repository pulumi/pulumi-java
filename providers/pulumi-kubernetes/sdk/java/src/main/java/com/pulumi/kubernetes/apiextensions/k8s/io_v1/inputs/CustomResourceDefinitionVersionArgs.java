// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.apiextensions.k8s.io_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.apiextensions.k8s.io_v1.inputs.CustomResourceColumnDefinitionArgs;
import com.pulumi.kubernetes.apiextensions.k8s.io_v1.inputs.CustomResourceSubresourcesArgs;
import com.pulumi.kubernetes.apiextensions.k8s.io_v1.inputs.CustomResourceValidationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * CustomResourceDefinitionVersion describes a version for CRD.
 * 
 */
public final class CustomResourceDefinitionVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomResourceDefinitionVersionArgs Empty = new CustomResourceDefinitionVersionArgs();

    /**
     * additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.
     * 
     */
    @Import(name="additionalPrinterColumns")
    private @Nullable Output<List<CustomResourceColumnDefinitionArgs>> additionalPrinterColumns;

    public Optional<Output<List<CustomResourceColumnDefinitionArgs>>> additionalPrinterColumns() {
        return Optional.ofNullable(this.additionalPrinterColumns);
    }

    /**
     * deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
     * 
     */
    @Import(name="deprecated")
    private @Nullable Output<Boolean> deprecated;

    public Optional<Output<Boolean>> deprecated() {
        return Optional.ofNullable(this.deprecated);
    }

    /**
     * deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
     * 
     */
    @Import(name="deprecationWarning")
    private @Nullable Output<String> deprecationWarning;

    public Optional<Output<String>> deprecationWarning() {
        return Optional.ofNullable(this.deprecationWarning);
    }

    /**
     * name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/&lt;group&gt;/&lt;version&gt;/...` if `served` is true.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.
     * 
     */
    @Import(name="schema")
    private @Nullable Output<CustomResourceValidationArgs> schema;

    public Optional<Output<CustomResourceValidationArgs>> schema() {
        return Optional.ofNullable(this.schema);
    }

    /**
     * served is a flag enabling/disabling this version from being served via REST APIs
     * 
     */
    @Import(name="served", required=true)
    private Output<Boolean> served;

    public Output<Boolean> served() {
        return this.served;
    }

    /**
     * storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
     * 
     */
    @Import(name="storage", required=true)
    private Output<Boolean> storage;

    public Output<Boolean> storage() {
        return this.storage;
    }

    /**
     * subresources specify what subresources this version of the defined custom resource have.
     * 
     */
    @Import(name="subresources")
    private @Nullable Output<CustomResourceSubresourcesArgs> subresources;

    public Optional<Output<CustomResourceSubresourcesArgs>> subresources() {
        return Optional.ofNullable(this.subresources);
    }

    private CustomResourceDefinitionVersionArgs() {}

    private CustomResourceDefinitionVersionArgs(CustomResourceDefinitionVersionArgs $) {
        this.additionalPrinterColumns = $.additionalPrinterColumns;
        this.deprecated = $.deprecated;
        this.deprecationWarning = $.deprecationWarning;
        this.name = $.name;
        this.schema = $.schema;
        this.served = $.served;
        this.storage = $.storage;
        this.subresources = $.subresources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomResourceDefinitionVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomResourceDefinitionVersionArgs $;

        public Builder() {
            $ = new CustomResourceDefinitionVersionArgs();
        }

        public Builder(CustomResourceDefinitionVersionArgs defaults) {
            $ = new CustomResourceDefinitionVersionArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalPrinterColumns(@Nullable Output<List<CustomResourceColumnDefinitionArgs>> additionalPrinterColumns) {
            $.additionalPrinterColumns = additionalPrinterColumns;
            return this;
        }

        public Builder additionalPrinterColumns(List<CustomResourceColumnDefinitionArgs> additionalPrinterColumns) {
            return additionalPrinterColumns(Output.of(additionalPrinterColumns));
        }

        public Builder additionalPrinterColumns(CustomResourceColumnDefinitionArgs... additionalPrinterColumns) {
            return additionalPrinterColumns(List.of(additionalPrinterColumns));
        }

        public Builder deprecated(@Nullable Output<Boolean> deprecated) {
            $.deprecated = deprecated;
            return this;
        }

        public Builder deprecated(Boolean deprecated) {
            return deprecated(Output.of(deprecated));
        }

        public Builder deprecationWarning(@Nullable Output<String> deprecationWarning) {
            $.deprecationWarning = deprecationWarning;
            return this;
        }

        public Builder deprecationWarning(String deprecationWarning) {
            return deprecationWarning(Output.of(deprecationWarning));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder schema(@Nullable Output<CustomResourceValidationArgs> schema) {
            $.schema = schema;
            return this;
        }

        public Builder schema(CustomResourceValidationArgs schema) {
            return schema(Output.of(schema));
        }

        public Builder served(Output<Boolean> served) {
            $.served = served;
            return this;
        }

        public Builder served(Boolean served) {
            return served(Output.of(served));
        }

        public Builder storage(Output<Boolean> storage) {
            $.storage = storage;
            return this;
        }

        public Builder storage(Boolean storage) {
            return storage(Output.of(storage));
        }

        public Builder subresources(@Nullable Output<CustomResourceSubresourcesArgs> subresources) {
            $.subresources = subresources;
            return this;
        }

        public Builder subresources(CustomResourceSubresourcesArgs subresources) {
            return subresources(Output.of(subresources));
        }

        public CustomResourceDefinitionVersionArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.served = Objects.requireNonNull($.served, "expected parameter 'served' to be non-null");
            $.storage = Objects.requireNonNull($.storage, "expected parameter 'storage' to be non-null");
            return $;
        }
    }

}
