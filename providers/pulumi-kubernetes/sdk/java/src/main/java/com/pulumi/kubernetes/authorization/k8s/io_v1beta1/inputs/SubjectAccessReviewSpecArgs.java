// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.authorization.k8s.io_v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.authorization.k8s.io_v1beta1.inputs.NonResourceAttributesArgs;
import com.pulumi.kubernetes.authorization.k8s.io_v1beta1.inputs.ResourceAttributesArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
 * 
 */
public final class SubjectAccessReviewSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubjectAccessReviewSpecArgs Empty = new SubjectAccessReviewSpecArgs();

    /**
     * Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.
     * 
     */
    @Import(name="extra")
    private @Nullable Output<Map<String,List<String>>> extra;

    public Optional<Output<Map<String,List<String>>>> extra() {
        return Optional.ofNullable(this.extra);
    }

    /**
     * Groups is the groups you&#39;re testing for.
     * 
     */
    @Import(name="group")
    private @Nullable Output<List<String>> group;

    public Optional<Output<List<String>>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * NonResourceAttributes describes information for a non-resource access request
     * 
     */
    @Import(name="nonResourceAttributes")
    private @Nullable Output<NonResourceAttributesArgs> nonResourceAttributes;

    public Optional<Output<NonResourceAttributesArgs>> nonResourceAttributes() {
        return Optional.ofNullable(this.nonResourceAttributes);
    }

    /**
     * ResourceAuthorizationAttributes describes information for a resource access request
     * 
     */
    @Import(name="resourceAttributes")
    private @Nullable Output<ResourceAttributesArgs> resourceAttributes;

    public Optional<Output<ResourceAttributesArgs>> resourceAttributes() {
        return Optional.ofNullable(this.resourceAttributes);
    }

    /**
     * UID information about the requesting user.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * User is the user you&#39;re testing for. If you specify &#34;User&#34; but not &#34;Group&#34;, then is it interpreted as &#34;What if User were not a member of any groups
     * 
     */
    @Import(name="user")
    private @Nullable Output<String> user;

    public Optional<Output<String>> user() {
        return Optional.ofNullable(this.user);
    }

    private SubjectAccessReviewSpecArgs() {}

    private SubjectAccessReviewSpecArgs(SubjectAccessReviewSpecArgs $) {
        this.extra = $.extra;
        this.group = $.group;
        this.nonResourceAttributes = $.nonResourceAttributes;
        this.resourceAttributes = $.resourceAttributes;
        this.uid = $.uid;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubjectAccessReviewSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubjectAccessReviewSpecArgs $;

        public Builder() {
            $ = new SubjectAccessReviewSpecArgs();
        }

        public Builder(SubjectAccessReviewSpecArgs defaults) {
            $ = new SubjectAccessReviewSpecArgs(Objects.requireNonNull(defaults));
        }

        public Builder extra(@Nullable Output<Map<String,List<String>>> extra) {
            $.extra = extra;
            return this;
        }

        public Builder extra(Map<String,List<String>> extra) {
            return extra(Output.of(extra));
        }

        public Builder group(@Nullable Output<List<String>> group) {
            $.group = group;
            return this;
        }

        public Builder group(List<String> group) {
            return group(Output.of(group));
        }

        public Builder group(String... group) {
            return group(List.of(group));
        }

        public Builder nonResourceAttributes(@Nullable Output<NonResourceAttributesArgs> nonResourceAttributes) {
            $.nonResourceAttributes = nonResourceAttributes;
            return this;
        }

        public Builder nonResourceAttributes(NonResourceAttributesArgs nonResourceAttributes) {
            return nonResourceAttributes(Output.of(nonResourceAttributes));
        }

        public Builder resourceAttributes(@Nullable Output<ResourceAttributesArgs> resourceAttributes) {
            $.resourceAttributes = resourceAttributes;
            return this;
        }

        public Builder resourceAttributes(ResourceAttributesArgs resourceAttributes) {
            return resourceAttributes(Output.of(resourceAttributes));
        }

        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        public Builder user(@Nullable Output<String> user) {
            $.user = user;
            return this;
        }

        public Builder user(String user) {
            return user(Output.of(user));
        }

        public SubjectAccessReviewSpecArgs build() {
            return $;
        }
    }

}
