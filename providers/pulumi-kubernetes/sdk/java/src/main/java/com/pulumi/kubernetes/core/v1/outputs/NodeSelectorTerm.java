// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kubernetes.core.v1.outputs.NodeSelectorRequirement;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class NodeSelectorTerm {
    /**
     * @return A list of node selector requirements by node&#39;s labels.
     * 
     */
    private final @Nullable List<NodeSelectorRequirement> matchExpressions;
    /**
     * @return A list of node selector requirements by node&#39;s fields.
     * 
     */
    private final @Nullable List<NodeSelectorRequirement> matchFields;

    @CustomType.Constructor
    private NodeSelectorTerm(
        @CustomType.Parameter("matchExpressions") @Nullable List<NodeSelectorRequirement> matchExpressions,
        @CustomType.Parameter("matchFields") @Nullable List<NodeSelectorRequirement> matchFields) {
        this.matchExpressions = matchExpressions;
        this.matchFields = matchFields;
    }

    /**
     * @return A list of node selector requirements by node&#39;s labels.
     * 
     */
    public List<NodeSelectorRequirement> matchExpressions() {
        return this.matchExpressions == null ? List.of() : this.matchExpressions;
    }
    /**
     * @return A list of node selector requirements by node&#39;s fields.
     * 
     */
    public List<NodeSelectorRequirement> matchFields() {
        return this.matchFields == null ? List.of() : this.matchFields;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeSelectorTerm defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<NodeSelectorRequirement> matchExpressions;
        private @Nullable List<NodeSelectorRequirement> matchFields;

        public Builder() {
    	      // Empty
        }

        public Builder(NodeSelectorTerm defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.matchExpressions = defaults.matchExpressions;
    	      this.matchFields = defaults.matchFields;
        }

        public Builder matchExpressions(@Nullable List<NodeSelectorRequirement> matchExpressions) {
            this.matchExpressions = matchExpressions;
            return this;
        }
        public Builder matchExpressions(NodeSelectorRequirement... matchExpressions) {
            return matchExpressions(List.of(matchExpressions));
        }
        public Builder matchFields(@Nullable List<NodeSelectorRequirement> matchFields) {
            this.matchFields = matchFields;
            return this;
        }
        public Builder matchFields(NodeSelectorRequirement... matchFields) {
            return matchFields(List.of(matchFields));
        }        public NodeSelectorTerm build() {
            return new NodeSelectorTerm(matchExpressions, matchFields);
        }
    }
}
