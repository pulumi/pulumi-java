// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.core_v1.inputs.NamespaceConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * NamespaceStatus is information about the current status of a Namespace.
 * 
 */
public final class NamespaceStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceStatusArgs Empty = new NamespaceStatusArgs();

    /**
     * Represents the latest available observations of a namespace&#39;s current state.
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<List<NamespaceConditionArgs>> conditions;

    public Optional<Output<List<NamespaceConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
     * 
     * Possible enum values:
     *  - `&#34;Active&#34;` means the namespace is available for use in the system
     *  - `&#34;Terminating&#34;` means the namespace is undergoing graceful termination
     * 
     */
    @Import(name="phase")
    private @Nullable Output<String> phase;

    public Optional<Output<String>> phase() {
        return Optional.ofNullable(this.phase);
    }

    private NamespaceStatusArgs() {}

    private NamespaceStatusArgs(NamespaceStatusArgs $) {
        this.conditions = $.conditions;
        this.phase = $.phase;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceStatusArgs $;

        public Builder() {
            $ = new NamespaceStatusArgs();
        }

        public Builder(NamespaceStatusArgs defaults) {
            $ = new NamespaceStatusArgs(Objects.requireNonNull(defaults));
        }

        public Builder conditions(@Nullable Output<List<NamespaceConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<NamespaceConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(NamespaceConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder phase(@Nullable Output<String> phase) {
            $.phase = phase;
            return this;
        }

        public Builder phase(String phase) {
            return phase(Output.of(phase));
        }

        public NamespaceStatusArgs build() {
            return $;
        }
    }

}
