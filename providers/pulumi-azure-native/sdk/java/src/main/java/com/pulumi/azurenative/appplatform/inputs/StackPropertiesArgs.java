// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * KPack ClusterStack properties payload
 * 
 */
public final class StackPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final StackPropertiesArgs Empty = new StackPropertiesArgs();

    /**
     * Id of the ClusterStack.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Version of the ClusterStack
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private StackPropertiesArgs() {}

    private StackPropertiesArgs(StackPropertiesArgs $) {
        this.id = $.id;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StackPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StackPropertiesArgs $;

        public Builder() {
            $ = new StackPropertiesArgs();
        }

        public Builder(StackPropertiesArgs defaults) {
            $ = new StackPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public StackPropertiesArgs build() {
            return $;
        }
    }

}
