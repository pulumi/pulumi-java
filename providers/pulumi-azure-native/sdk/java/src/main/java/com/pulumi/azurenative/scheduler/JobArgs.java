// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scheduler;

import com.pulumi.azurenative.scheduler.inputs.JobPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobArgs Empty = new JobArgs();

    /**
     * The job collection name.
     * 
     */
    @Import(name="jobCollectionName", required=true)
    private Output<String> jobCollectionName;

    /**
     * @return The job collection name.
     * 
     */
    public Output<String> jobCollectionName() {
        return this.jobCollectionName;
    }

    /**
     * The job name.
     * 
     */
    @Import(name="jobName")
    private @Nullable Output<String> jobName;

    /**
     * @return The job name.
     * 
     */
    public Optional<Output<String>> jobName() {
        return Optional.ofNullable(this.jobName);
    }

    /**
     * Gets or sets the job properties.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<JobPropertiesArgs> properties;

    /**
     * @return Gets or sets the job properties.
     * 
     */
    public Optional<Output<JobPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private JobArgs() {}

    private JobArgs(JobArgs $) {
        this.jobCollectionName = $.jobCollectionName;
        this.jobName = $.jobName;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobArgs $;

        public Builder() {
            $ = new JobArgs();
        }

        public Builder(JobArgs defaults) {
            $ = new JobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jobCollectionName The job collection name.
         * 
         * @return builder
         * 
         */
        public Builder jobCollectionName(Output<String> jobCollectionName) {
            $.jobCollectionName = jobCollectionName;
            return this;
        }

        /**
         * @param jobCollectionName The job collection name.
         * 
         * @return builder
         * 
         */
        public Builder jobCollectionName(String jobCollectionName) {
            return jobCollectionName(Output.of(jobCollectionName));
        }

        /**
         * @param jobName The job name.
         * 
         * @return builder
         * 
         */
        public Builder jobName(@Nullable Output<String> jobName) {
            $.jobName = jobName;
            return this;
        }

        /**
         * @param jobName The job name.
         * 
         * @return builder
         * 
         */
        public Builder jobName(String jobName) {
            return jobName(Output.of(jobName));
        }

        /**
         * @param properties Gets or sets the job properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<JobPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Gets or sets the job properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(JobPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public JobArgs build() {
            $.jobCollectionName = Objects.requireNonNull($.jobCollectionName, "expected parameter 'jobCollectionName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
