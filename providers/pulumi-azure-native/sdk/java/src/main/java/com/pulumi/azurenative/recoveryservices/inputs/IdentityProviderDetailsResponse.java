// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Identity provider details.
 * 
 */
public final class IdentityProviderDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final IdentityProviderDetailsResponse Empty = new IdentityProviderDetailsResponse();

    /**
     * The base authority for Azure Active Directory authentication.
     * 
     */
    @Import(name="aadAuthority")
    private @Nullable String aadAuthority;

    /**
     * @return The base authority for Azure Active Directory authentication.
     * 
     */
    public Optional<String> aadAuthority() {
        return Optional.ofNullable(this.aadAuthority);
    }

    /**
     * The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    @Import(name="applicationId")
    private @Nullable String applicationId;

    /**
     * @return The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    public Optional<String> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    @Import(name="audience")
    private @Nullable String audience;

    /**
     * @return The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    public Optional<String> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    @Import(name="objectId")
    private @Nullable String objectId;

    /**
     * @return The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    public Optional<String> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    @Import(name="tenantId")
    private @Nullable String tenantId;

    /**
     * @return The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private IdentityProviderDetailsResponse() {}

    private IdentityProviderDetailsResponse(IdentityProviderDetailsResponse $) {
        this.aadAuthority = $.aadAuthority;
        this.applicationId = $.applicationId;
        this.audience = $.audience;
        this.objectId = $.objectId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentityProviderDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentityProviderDetailsResponse $;

        public Builder() {
            $ = new IdentityProviderDetailsResponse();
        }

        public Builder(IdentityProviderDetailsResponse defaults) {
            $ = new IdentityProviderDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param aadAuthority The base authority for Azure Active Directory authentication.
         * 
         * @return builder
         * 
         */
        public Builder aadAuthority(@Nullable String aadAuthority) {
            $.aadAuthority = aadAuthority;
            return this;
        }

        /**
         * @param applicationId The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable String applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param audience The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         * 
         * @return builder
         * 
         */
        public Builder audience(@Nullable String audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param objectId The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable String objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param tenantId The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public IdentityProviderDetailsResponse build() {
            return $;
        }
    }

}
