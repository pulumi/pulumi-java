// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.inputs.ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs;
import com.pulumi.azurenative.network.inputs.VirtualHubIdArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExpressRouteGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExpressRouteGatewayArgs Empty = new ExpressRouteGatewayArgs();

    /**
     * Configuration for auto scaling.
     * 
     */
    @Import(name="autoScaleConfiguration")
    private @Nullable Output<ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs> autoScaleConfiguration;

    public Optional<Output<ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs>> autoScaleConfiguration() {
        return Optional.ofNullable(this.autoScaleConfiguration);
    }

    /**
     * The name of the ExpressRoute gateway.
     * 
     */
    @Import(name="expressRouteGatewayName")
    private @Nullable Output<String> expressRouteGatewayName;

    public Optional<Output<String>> expressRouteGatewayName() {
        return Optional.ofNullable(this.expressRouteGatewayName);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The Virtual Hub where the ExpressRoute gateway is or will be deployed.
     * 
     */
    @Import(name="virtualHub", required=true)
    private Output<VirtualHubIdArgs> virtualHub;

    public Output<VirtualHubIdArgs> virtualHub() {
        return this.virtualHub;
    }

    private ExpressRouteGatewayArgs() {}

    private ExpressRouteGatewayArgs(ExpressRouteGatewayArgs $) {
        this.autoScaleConfiguration = $.autoScaleConfiguration;
        this.expressRouteGatewayName = $.expressRouteGatewayName;
        this.id = $.id;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.virtualHub = $.virtualHub;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExpressRouteGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExpressRouteGatewayArgs $;

        public Builder() {
            $ = new ExpressRouteGatewayArgs();
        }

        public Builder(ExpressRouteGatewayArgs defaults) {
            $ = new ExpressRouteGatewayArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoScaleConfiguration(@Nullable Output<ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs> autoScaleConfiguration) {
            $.autoScaleConfiguration = autoScaleConfiguration;
            return this;
        }

        public Builder autoScaleConfiguration(ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs autoScaleConfiguration) {
            return autoScaleConfiguration(Output.of(autoScaleConfiguration));
        }

        public Builder expressRouteGatewayName(@Nullable Output<String> expressRouteGatewayName) {
            $.expressRouteGatewayName = expressRouteGatewayName;
            return this;
        }

        public Builder expressRouteGatewayName(String expressRouteGatewayName) {
            return expressRouteGatewayName(Output.of(expressRouteGatewayName));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder virtualHub(Output<VirtualHubIdArgs> virtualHub) {
            $.virtualHub = virtualHub;
            return this;
        }

        public Builder virtualHub(VirtualHubIdArgs virtualHub) {
            return virtualHub(Output.of(virtualHub));
        }

        public ExpressRouteGatewayArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.virtualHub = Objects.requireNonNull($.virtualHub, "expected parameter 'virtualHub' to be non-null");
            return $;
        }
    }

}
