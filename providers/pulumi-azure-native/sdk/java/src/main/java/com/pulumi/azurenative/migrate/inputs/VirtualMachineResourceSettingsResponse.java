// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Gets or sets the virtual machine resource settings.
 * 
 */
public final class VirtualMachineResourceSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualMachineResourceSettingsResponse Empty = new VirtualMachineResourceSettingsResponse();

    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is &#39;Microsoft.Compute/virtualMachines&#39;.
     * 
     */
    @Import(name="resourceType", required=true)
    private String resourceType;

    /**
     * @return The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is &#39;Microsoft.Compute/virtualMachines&#39;.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Gets or sets the target availability set id for virtual machines not in an availability set at source.
     * 
     */
    @Import(name="targetAvailabilitySetId")
    private @Nullable String targetAvailabilitySetId;

    /**
     * @return Gets or sets the target availability set id for virtual machines not in an availability set at source.
     * 
     */
    public Optional<String> targetAvailabilitySetId() {
        return Optional.ofNullable(this.targetAvailabilitySetId);
    }

    /**
     * Gets or sets the target availability zone.
     * 
     */
    @Import(name="targetAvailabilityZone")
    private @Nullable String targetAvailabilityZone;

    /**
     * @return Gets or sets the target availability zone.
     * 
     */
    public Optional<String> targetAvailabilityZone() {
        return Optional.ofNullable(this.targetAvailabilityZone);
    }

    /**
     * Gets or sets the target Resource name.
     * 
     */
    @Import(name="targetResourceName", required=true)
    private String targetResourceName;

    /**
     * @return Gets or sets the target Resource name.
     * 
     */
    public String targetResourceName() {
        return this.targetResourceName;
    }

    /**
     * Gets or sets the target virtual machine size.
     * 
     */
    @Import(name="targetVmSize")
    private @Nullable String targetVmSize;

    /**
     * @return Gets or sets the target virtual machine size.
     * 
     */
    public Optional<String> targetVmSize() {
        return Optional.ofNullable(this.targetVmSize);
    }

    private VirtualMachineResourceSettingsResponse() {}

    private VirtualMachineResourceSettingsResponse(VirtualMachineResourceSettingsResponse $) {
        this.resourceType = $.resourceType;
        this.targetAvailabilitySetId = $.targetAvailabilitySetId;
        this.targetAvailabilityZone = $.targetAvailabilityZone;
        this.targetResourceName = $.targetResourceName;
        this.targetVmSize = $.targetVmSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineResourceSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineResourceSettingsResponse $;

        public Builder() {
            $ = new VirtualMachineResourceSettingsResponse();
        }

        public Builder(VirtualMachineResourceSettingsResponse defaults) {
            $ = new VirtualMachineResourceSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceType The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
         * Expected value is &#39;Microsoft.Compute/virtualMachines&#39;.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param targetAvailabilitySetId Gets or sets the target availability set id for virtual machines not in an availability set at source.
         * 
         * @return builder
         * 
         */
        public Builder targetAvailabilitySetId(@Nullable String targetAvailabilitySetId) {
            $.targetAvailabilitySetId = targetAvailabilitySetId;
            return this;
        }

        /**
         * @param targetAvailabilityZone Gets or sets the target availability zone.
         * 
         * @return builder
         * 
         */
        public Builder targetAvailabilityZone(@Nullable String targetAvailabilityZone) {
            $.targetAvailabilityZone = targetAvailabilityZone;
            return this;
        }

        /**
         * @param targetResourceName Gets or sets the target Resource name.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceName(String targetResourceName) {
            $.targetResourceName = targetResourceName;
            return this;
        }

        /**
         * @param targetVmSize Gets or sets the target virtual machine size.
         * 
         * @return builder
         * 
         */
        public Builder targetVmSize(@Nullable String targetVmSize) {
            $.targetVmSize = targetVmSize;
            return this;
        }

        public VirtualMachineResourceSettingsResponse build() {
            $.resourceType = Codegen.stringProp("resourceType").arg($.resourceType).require();
            $.targetResourceName = Objects.requireNonNull($.targetResourceName, "expected parameter 'targetResourceName' to be non-null");
            return $;
        }
    }

}
