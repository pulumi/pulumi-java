// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLogAnalyticExportThrottledRequestsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogAnalyticExportThrottledRequestsArgs Empty = new GetLogAnalyticExportThrottledRequestsArgs();

    /**
     * SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
     * 
     */
    @Import(name="blobContainerSasUri", required=true)
    private Output<String> blobContainerSasUri;

    /**
     * @return SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
     * 
     */
    public Output<String> blobContainerSasUri() {
        return this.blobContainerSasUri;
    }

    /**
     * From time of the query
     * 
     */
    @Import(name="fromTime", required=true)
    private Output<String> fromTime;

    /**
     * @return From time of the query
     * 
     */
    public Output<String> fromTime() {
        return this.fromTime;
    }

    /**
     * Group query result by Client Application ID.
     * 
     */
    @Import(name="groupByClientApplicationId")
    private @Nullable Output<Boolean> groupByClientApplicationId;

    /**
     * @return Group query result by Client Application ID.
     * 
     */
    public Optional<Output<Boolean>> groupByClientApplicationId() {
        return Optional.ofNullable(this.groupByClientApplicationId);
    }

    /**
     * Group query result by Operation Name.
     * 
     */
    @Import(name="groupByOperationName")
    private @Nullable Output<Boolean> groupByOperationName;

    /**
     * @return Group query result by Operation Name.
     * 
     */
    public Optional<Output<Boolean>> groupByOperationName() {
        return Optional.ofNullable(this.groupByOperationName);
    }

    /**
     * Group query result by Resource Name.
     * 
     */
    @Import(name="groupByResourceName")
    private @Nullable Output<Boolean> groupByResourceName;

    /**
     * @return Group query result by Resource Name.
     * 
     */
    public Optional<Output<Boolean>> groupByResourceName() {
        return Optional.ofNullable(this.groupByResourceName);
    }

    /**
     * Group query result by Throttle Policy applied.
     * 
     */
    @Import(name="groupByThrottlePolicy")
    private @Nullable Output<Boolean> groupByThrottlePolicy;

    /**
     * @return Group query result by Throttle Policy applied.
     * 
     */
    public Optional<Output<Boolean>> groupByThrottlePolicy() {
        return Optional.ofNullable(this.groupByThrottlePolicy);
    }

    /**
     * Group query result by User Agent.
     * 
     */
    @Import(name="groupByUserAgent")
    private @Nullable Output<Boolean> groupByUserAgent;

    /**
     * @return Group query result by User Agent.
     * 
     */
    public Optional<Output<Boolean>> groupByUserAgent() {
        return Optional.ofNullable(this.groupByUserAgent);
    }

    /**
     * The location upon which virtual-machine-sizes is queried.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location upon which virtual-machine-sizes is queried.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * To time of the query
     * 
     */
    @Import(name="toTime", required=true)
    private Output<String> toTime;

    /**
     * @return To time of the query
     * 
     */
    public Output<String> toTime() {
        return this.toTime;
    }

    private GetLogAnalyticExportThrottledRequestsArgs() {}

    private GetLogAnalyticExportThrottledRequestsArgs(GetLogAnalyticExportThrottledRequestsArgs $) {
        this.blobContainerSasUri = $.blobContainerSasUri;
        this.fromTime = $.fromTime;
        this.groupByClientApplicationId = $.groupByClientApplicationId;
        this.groupByOperationName = $.groupByOperationName;
        this.groupByResourceName = $.groupByResourceName;
        this.groupByThrottlePolicy = $.groupByThrottlePolicy;
        this.groupByUserAgent = $.groupByUserAgent;
        this.location = $.location;
        this.toTime = $.toTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogAnalyticExportThrottledRequestsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogAnalyticExportThrottledRequestsArgs $;

        public Builder() {
            $ = new GetLogAnalyticExportThrottledRequestsArgs();
        }

        public Builder(GetLogAnalyticExportThrottledRequestsArgs defaults) {
            $ = new GetLogAnalyticExportThrottledRequestsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param blobContainerSasUri SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
         * 
         * @return builder
         * 
         */
        public Builder blobContainerSasUri(Output<String> blobContainerSasUri) {
            $.blobContainerSasUri = blobContainerSasUri;
            return this;
        }

        /**
         * @param blobContainerSasUri SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
         * 
         * @return builder
         * 
         */
        public Builder blobContainerSasUri(String blobContainerSasUri) {
            return blobContainerSasUri(Output.of(blobContainerSasUri));
        }

        /**
         * @param fromTime From time of the query
         * 
         * @return builder
         * 
         */
        public Builder fromTime(Output<String> fromTime) {
            $.fromTime = fromTime;
            return this;
        }

        /**
         * @param fromTime From time of the query
         * 
         * @return builder
         * 
         */
        public Builder fromTime(String fromTime) {
            return fromTime(Output.of(fromTime));
        }

        /**
         * @param groupByClientApplicationId Group query result by Client Application ID.
         * 
         * @return builder
         * 
         */
        public Builder groupByClientApplicationId(@Nullable Output<Boolean> groupByClientApplicationId) {
            $.groupByClientApplicationId = groupByClientApplicationId;
            return this;
        }

        /**
         * @param groupByClientApplicationId Group query result by Client Application ID.
         * 
         * @return builder
         * 
         */
        public Builder groupByClientApplicationId(Boolean groupByClientApplicationId) {
            return groupByClientApplicationId(Output.of(groupByClientApplicationId));
        }

        /**
         * @param groupByOperationName Group query result by Operation Name.
         * 
         * @return builder
         * 
         */
        public Builder groupByOperationName(@Nullable Output<Boolean> groupByOperationName) {
            $.groupByOperationName = groupByOperationName;
            return this;
        }

        /**
         * @param groupByOperationName Group query result by Operation Name.
         * 
         * @return builder
         * 
         */
        public Builder groupByOperationName(Boolean groupByOperationName) {
            return groupByOperationName(Output.of(groupByOperationName));
        }

        /**
         * @param groupByResourceName Group query result by Resource Name.
         * 
         * @return builder
         * 
         */
        public Builder groupByResourceName(@Nullable Output<Boolean> groupByResourceName) {
            $.groupByResourceName = groupByResourceName;
            return this;
        }

        /**
         * @param groupByResourceName Group query result by Resource Name.
         * 
         * @return builder
         * 
         */
        public Builder groupByResourceName(Boolean groupByResourceName) {
            return groupByResourceName(Output.of(groupByResourceName));
        }

        /**
         * @param groupByThrottlePolicy Group query result by Throttle Policy applied.
         * 
         * @return builder
         * 
         */
        public Builder groupByThrottlePolicy(@Nullable Output<Boolean> groupByThrottlePolicy) {
            $.groupByThrottlePolicy = groupByThrottlePolicy;
            return this;
        }

        /**
         * @param groupByThrottlePolicy Group query result by Throttle Policy applied.
         * 
         * @return builder
         * 
         */
        public Builder groupByThrottlePolicy(Boolean groupByThrottlePolicy) {
            return groupByThrottlePolicy(Output.of(groupByThrottlePolicy));
        }

        /**
         * @param groupByUserAgent Group query result by User Agent.
         * 
         * @return builder
         * 
         */
        public Builder groupByUserAgent(@Nullable Output<Boolean> groupByUserAgent) {
            $.groupByUserAgent = groupByUserAgent;
            return this;
        }

        /**
         * @param groupByUserAgent Group query result by User Agent.
         * 
         * @return builder
         * 
         */
        public Builder groupByUserAgent(Boolean groupByUserAgent) {
            return groupByUserAgent(Output.of(groupByUserAgent));
        }

        /**
         * @param location The location upon which virtual-machine-sizes is queried.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location upon which virtual-machine-sizes is queried.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param toTime To time of the query
         * 
         * @return builder
         * 
         */
        public Builder toTime(Output<String> toTime) {
            $.toTime = toTime;
            return this;
        }

        /**
         * @param toTime To time of the query
         * 
         * @return builder
         * 
         */
        public Builder toTime(String toTime) {
            return toTime(Output.of(toTime));
        }

        public GetLogAnalyticExportThrottledRequestsArgs build() {
            $.blobContainerSasUri = Objects.requireNonNull($.blobContainerSasUri, "expected parameter 'blobContainerSasUri' to be non-null");
            $.fromTime = Objects.requireNonNull($.fromTime, "expected parameter 'fromTime' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.toTime = Objects.requireNonNull($.toTime, "expected parameter 'toTime' to be non-null");
            return $;
        }
    }

}
