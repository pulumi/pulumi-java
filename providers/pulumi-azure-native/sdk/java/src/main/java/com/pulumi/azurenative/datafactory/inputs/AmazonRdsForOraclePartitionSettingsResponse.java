// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The settings that will be leveraged for AmazonRdsForOracle source partitioning.
 * 
 */
public final class AmazonRdsForOraclePartitionSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final AmazonRdsForOraclePartitionSettingsResponse Empty = new AmazonRdsForOraclePartitionSettingsResponse();

    /**
     * The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="partitionColumnName")
    private @Nullable Object partitionColumnName;

    /**
     * @return The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> partitionColumnName() {
        return Optional.ofNullable(this.partitionColumnName);
    }

    /**
     * The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="partitionLowerBound")
    private @Nullable Object partitionLowerBound;

    /**
     * @return The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> partitionLowerBound() {
        return Optional.ofNullable(this.partitionLowerBound);
    }

    /**
     * Names of the physical partitions of AmazonRdsForOracle table.
     * 
     */
    @Import(name="partitionNames")
    private @Nullable List<Object> partitionNames;

    /**
     * @return Names of the physical partitions of AmazonRdsForOracle table.
     * 
     */
    public Optional<List<Object>> partitionNames() {
        return Optional.ofNullable(this.partitionNames);
    }

    /**
     * The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="partitionUpperBound")
    private @Nullable Object partitionUpperBound;

    /**
     * @return The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> partitionUpperBound() {
        return Optional.ofNullable(this.partitionUpperBound);
    }

    private AmazonRdsForOraclePartitionSettingsResponse() {}

    private AmazonRdsForOraclePartitionSettingsResponse(AmazonRdsForOraclePartitionSettingsResponse $) {
        this.partitionColumnName = $.partitionColumnName;
        this.partitionLowerBound = $.partitionLowerBound;
        this.partitionNames = $.partitionNames;
        this.partitionUpperBound = $.partitionUpperBound;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AmazonRdsForOraclePartitionSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AmazonRdsForOraclePartitionSettingsResponse $;

        public Builder() {
            $ = new AmazonRdsForOraclePartitionSettingsResponse();
        }

        public Builder(AmazonRdsForOraclePartitionSettingsResponse defaults) {
            $ = new AmazonRdsForOraclePartitionSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param partitionColumnName The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder partitionColumnName(@Nullable Object partitionColumnName) {
            $.partitionColumnName = partitionColumnName;
            return this;
        }

        /**
         * @param partitionLowerBound The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder partitionLowerBound(@Nullable Object partitionLowerBound) {
            $.partitionLowerBound = partitionLowerBound;
            return this;
        }

        /**
         * @param partitionNames Names of the physical partitions of AmazonRdsForOracle table.
         * 
         * @return builder
         * 
         */
        public Builder partitionNames(@Nullable List<Object> partitionNames) {
            $.partitionNames = partitionNames;
            return this;
        }

        /**
         * @param partitionNames Names of the physical partitions of AmazonRdsForOracle table.
         * 
         * @return builder
         * 
         */
        public Builder partitionNames(Object... partitionNames) {
            return partitionNames(List.of(partitionNames));
        }

        /**
         * @param partitionUpperBound The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder partitionUpperBound(@Nullable Object partitionUpperBound) {
            $.partitionUpperBound = partitionUpperBound;
            return this;
        }

        public AmazonRdsForOraclePartitionSettingsResponse build() {
            return $;
        }
    }

}
