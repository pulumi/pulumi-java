// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.outputs;

import com.pulumi.azurenative.storage.outputs.MultichannelResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SmbSettingResponse {
    /**
     * @return SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter &#39;;&#39;.
     * 
     */
    private final @Nullable String authenticationMethods;
    /**
     * @return SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter &#39;;&#39;.
     * 
     */
    private final @Nullable String channelEncryption;
    /**
     * @return Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter &#39;;&#39;
     * 
     */
    private final @Nullable String kerberosTicketEncryption;
    /**
     * @return Multichannel setting. Applies to Premium FileStorage only.
     * 
     */
    private final @Nullable MultichannelResponse multichannel;
    /**
     * @return SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter &#39;;&#39;.
     * 
     */
    private final @Nullable String versions;

    @CustomType.Constructor
    private SmbSettingResponse(
        @CustomType.Parameter("authenticationMethods") @Nullable String authenticationMethods,
        @CustomType.Parameter("channelEncryption") @Nullable String channelEncryption,
        @CustomType.Parameter("kerberosTicketEncryption") @Nullable String kerberosTicketEncryption,
        @CustomType.Parameter("multichannel") @Nullable MultichannelResponse multichannel,
        @CustomType.Parameter("versions") @Nullable String versions) {
        this.authenticationMethods = authenticationMethods;
        this.channelEncryption = channelEncryption;
        this.kerberosTicketEncryption = kerberosTicketEncryption;
        this.multichannel = multichannel;
        this.versions = versions;
    }

    /**
     * @return SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter &#39;;&#39;.
     * 
     */
    public Optional<String> authenticationMethods() {
        return Optional.ofNullable(this.authenticationMethods);
    }
    /**
     * @return SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter &#39;;&#39;.
     * 
     */
    public Optional<String> channelEncryption() {
        return Optional.ofNullable(this.channelEncryption);
    }
    /**
     * @return Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter &#39;;&#39;
     * 
     */
    public Optional<String> kerberosTicketEncryption() {
        return Optional.ofNullable(this.kerberosTicketEncryption);
    }
    /**
     * @return Multichannel setting. Applies to Premium FileStorage only.
     * 
     */
    public Optional<MultichannelResponse> multichannel() {
        return Optional.ofNullable(this.multichannel);
    }
    /**
     * @return SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter &#39;;&#39;.
     * 
     */
    public Optional<String> versions() {
        return Optional.ofNullable(this.versions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SmbSettingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String authenticationMethods;
        private @Nullable String channelEncryption;
        private @Nullable String kerberosTicketEncryption;
        private @Nullable MultichannelResponse multichannel;
        private @Nullable String versions;

        public Builder() {
    	      // Empty
        }

        public Builder(SmbSettingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationMethods = defaults.authenticationMethods;
    	      this.channelEncryption = defaults.channelEncryption;
    	      this.kerberosTicketEncryption = defaults.kerberosTicketEncryption;
    	      this.multichannel = defaults.multichannel;
    	      this.versions = defaults.versions;
        }

        public Builder authenticationMethods(@Nullable String authenticationMethods) {
            this.authenticationMethods = authenticationMethods;
            return this;
        }
        public Builder channelEncryption(@Nullable String channelEncryption) {
            this.channelEncryption = channelEncryption;
            return this;
        }
        public Builder kerberosTicketEncryption(@Nullable String kerberosTicketEncryption) {
            this.kerberosTicketEncryption = kerberosTicketEncryption;
            return this;
        }
        public Builder multichannel(@Nullable MultichannelResponse multichannel) {
            this.multichannel = multichannel;
            return this;
        }
        public Builder versions(@Nullable String versions) {
            this.versions = versions;
            return this;
        }        public SmbSettingResponse build() {
            return new SmbSettingResponse(authenticationMethods, channelEncryption, kerberosTicketEncryption, multichannel, versions);
        }
    }
}
