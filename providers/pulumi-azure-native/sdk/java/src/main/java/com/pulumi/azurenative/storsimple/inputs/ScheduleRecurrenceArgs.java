// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.inputs;

import com.pulumi.azurenative.storsimple.enums.DayOfWeek;
import com.pulumi.azurenative.storsimple.enums.RecurrenceType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The schedule recurrence.
 * 
 */
public final class ScheduleRecurrenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleRecurrenceArgs Empty = new ScheduleRecurrenceArgs();

    /**
     * The recurrence type.
     * 
     */
    @Import(name="recurrenceType", required=true)
    private Output<RecurrenceType> recurrenceType;

    /**
     * @return The recurrence type.
     * 
     */
    public Output<RecurrenceType> recurrenceType() {
        return this.recurrenceType;
    }

    /**
     * The recurrence value.
     * 
     */
    @Import(name="recurrenceValue", required=true)
    private Output<Integer> recurrenceValue;

    /**
     * @return The recurrence value.
     * 
     */
    public Output<Integer> recurrenceValue() {
        return this.recurrenceValue;
    }

    /**
     * The week days list. Applicable only for schedules of recurrence type &#39;weekly&#39;.
     * 
     */
    @Import(name="weeklyDaysList")
    private @Nullable Output<List<DayOfWeek>> weeklyDaysList;

    /**
     * @return The week days list. Applicable only for schedules of recurrence type &#39;weekly&#39;.
     * 
     */
    public Optional<Output<List<DayOfWeek>>> weeklyDaysList() {
        return Optional.ofNullable(this.weeklyDaysList);
    }

    private ScheduleRecurrenceArgs() {}

    private ScheduleRecurrenceArgs(ScheduleRecurrenceArgs $) {
        this.recurrenceType = $.recurrenceType;
        this.recurrenceValue = $.recurrenceValue;
        this.weeklyDaysList = $.weeklyDaysList;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleRecurrenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleRecurrenceArgs $;

        public Builder() {
            $ = new ScheduleRecurrenceArgs();
        }

        public Builder(ScheduleRecurrenceArgs defaults) {
            $ = new ScheduleRecurrenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recurrenceType The recurrence type.
         * 
         * @return builder
         * 
         */
        public Builder recurrenceType(Output<RecurrenceType> recurrenceType) {
            $.recurrenceType = recurrenceType;
            return this;
        }

        /**
         * @param recurrenceType The recurrence type.
         * 
         * @return builder
         * 
         */
        public Builder recurrenceType(RecurrenceType recurrenceType) {
            return recurrenceType(Output.of(recurrenceType));
        }

        /**
         * @param recurrenceValue The recurrence value.
         * 
         * @return builder
         * 
         */
        public Builder recurrenceValue(Output<Integer> recurrenceValue) {
            $.recurrenceValue = recurrenceValue;
            return this;
        }

        /**
         * @param recurrenceValue The recurrence value.
         * 
         * @return builder
         * 
         */
        public Builder recurrenceValue(Integer recurrenceValue) {
            return recurrenceValue(Output.of(recurrenceValue));
        }

        /**
         * @param weeklyDaysList The week days list. Applicable only for schedules of recurrence type &#39;weekly&#39;.
         * 
         * @return builder
         * 
         */
        public Builder weeklyDaysList(@Nullable Output<List<DayOfWeek>> weeklyDaysList) {
            $.weeklyDaysList = weeklyDaysList;
            return this;
        }

        /**
         * @param weeklyDaysList The week days list. Applicable only for schedules of recurrence type &#39;weekly&#39;.
         * 
         * @return builder
         * 
         */
        public Builder weeklyDaysList(List<DayOfWeek> weeklyDaysList) {
            return weeklyDaysList(Output.of(weeklyDaysList));
        }

        /**
         * @param weeklyDaysList The week days list. Applicable only for schedules of recurrence type &#39;weekly&#39;.
         * 
         * @return builder
         * 
         */
        public Builder weeklyDaysList(DayOfWeek... weeklyDaysList) {
            return weeklyDaysList(List.of(weeklyDaysList));
        }

        public ScheduleRecurrenceArgs build() {
            $.recurrenceType = Objects.requireNonNull($.recurrenceType, "expected parameter 'recurrenceType' to be non-null");
            $.recurrenceValue = Objects.requireNonNull($.recurrenceValue, "expected parameter 'recurrenceValue' to be non-null");
            return $;
        }
    }

}
