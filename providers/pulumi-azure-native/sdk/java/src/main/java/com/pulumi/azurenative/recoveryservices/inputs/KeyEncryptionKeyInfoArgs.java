// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Key Encryption Key (KEK) information.
 * 
 */
public final class KeyEncryptionKeyInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyEncryptionKeyInfoArgs Empty = new KeyEncryptionKeyInfoArgs();

    /**
     * The key URL / identifier.
     * 
     */
    @Import(name="keyIdentifier")
    private @Nullable Output<String> keyIdentifier;

    /**
     * @return The key URL / identifier.
     * 
     */
    public Optional<Output<String>> keyIdentifier() {
        return Optional.ofNullable(this.keyIdentifier);
    }

    /**
     * The KeyVault resource ARM Id for key.
     * 
     */
    @Import(name="keyVaultResourceArmId")
    private @Nullable Output<String> keyVaultResourceArmId;

    /**
     * @return The KeyVault resource ARM Id for key.
     * 
     */
    public Optional<Output<String>> keyVaultResourceArmId() {
        return Optional.ofNullable(this.keyVaultResourceArmId);
    }

    private KeyEncryptionKeyInfoArgs() {}

    private KeyEncryptionKeyInfoArgs(KeyEncryptionKeyInfoArgs $) {
        this.keyIdentifier = $.keyIdentifier;
        this.keyVaultResourceArmId = $.keyVaultResourceArmId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyEncryptionKeyInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyEncryptionKeyInfoArgs $;

        public Builder() {
            $ = new KeyEncryptionKeyInfoArgs();
        }

        public Builder(KeyEncryptionKeyInfoArgs defaults) {
            $ = new KeyEncryptionKeyInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyIdentifier The key URL / identifier.
         * 
         * @return builder
         * 
         */
        public Builder keyIdentifier(@Nullable Output<String> keyIdentifier) {
            $.keyIdentifier = keyIdentifier;
            return this;
        }

        /**
         * @param keyIdentifier The key URL / identifier.
         * 
         * @return builder
         * 
         */
        public Builder keyIdentifier(String keyIdentifier) {
            return keyIdentifier(Output.of(keyIdentifier));
        }

        /**
         * @param keyVaultResourceArmId The KeyVault resource ARM Id for key.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultResourceArmId(@Nullable Output<String> keyVaultResourceArmId) {
            $.keyVaultResourceArmId = keyVaultResourceArmId;
            return this;
        }

        /**
         * @param keyVaultResourceArmId The KeyVault resource ARM Id for key.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultResourceArmId(String keyVaultResourceArmId) {
            return keyVaultResourceArmId(Output.of(keyVaultResourceArmId));
        }

        public KeyEncryptionKeyInfoArgs build() {
            return $;
        }
    }

}
