// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.DedicatedHostGroupInstanceViewResponse;
import com.pulumi.azurenative.compute.outputs.SubResourceReadOnlyResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDedicatedHostGroupResult {
    /**
     * @return A list of references to all dedicated hosts in the dedicated host group.
     * 
     */
    private final List<SubResourceReadOnlyResponse> hosts;
    /**
     * @return Resource Id
     * 
     */
    private final String id;
    /**
     * @return The dedicated host group instance view, which has the list of instance view of the dedicated hosts under the dedicated host group.
     * 
     */
    private final DedicatedHostGroupInstanceViewResponse instanceView;
    /**
     * @return Resource location
     * 
     */
    private final String location;
    /**
     * @return Resource name
     * 
     */
    private final String name;
    /**
     * @return Number of fault domains that the host group can span.
     * 
     */
    private final Integer platformFaultDomainCount;
    /**
     * @return Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to &#39;false&#39; when not provided. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01.
     * 
     */
    private final @Nullable Boolean supportAutomaticPlacement;
    /**
     * @return Resource tags
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private final String type;
    /**
     * @return Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
     * 
     */
    private final @Nullable List<String> zones;

    @CustomType.Constructor
    private GetDedicatedHostGroupResult(
        @CustomType.Parameter("hosts") List<SubResourceReadOnlyResponse> hosts,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceView") DedicatedHostGroupInstanceViewResponse instanceView,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("platformFaultDomainCount") Integer platformFaultDomainCount,
        @CustomType.Parameter("supportAutomaticPlacement") @Nullable Boolean supportAutomaticPlacement,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("zones") @Nullable List<String> zones) {
        this.hosts = hosts;
        this.id = id;
        this.instanceView = instanceView;
        this.location = location;
        this.name = name;
        this.platformFaultDomainCount = platformFaultDomainCount;
        this.supportAutomaticPlacement = supportAutomaticPlacement;
        this.tags = tags;
        this.type = type;
        this.zones = zones;
    }

    /**
     * @return A list of references to all dedicated hosts in the dedicated host group.
     * 
     */
    public List<SubResourceReadOnlyResponse> hosts() {
        return this.hosts;
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The dedicated host group instance view, which has the list of instance view of the dedicated hosts under the dedicated host group.
     * 
     */
    public DedicatedHostGroupInstanceViewResponse instanceView() {
        return this.instanceView;
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Number of fault domains that the host group can span.
     * 
     */
    public Integer platformFaultDomainCount() {
        return this.platformFaultDomainCount;
    }
    /**
     * @return Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to &#39;false&#39; when not provided. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01.
     * 
     */
    public Optional<Boolean> supportAutomaticPlacement() {
        return Optional.ofNullable(this.supportAutomaticPlacement);
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
     * 
     */
    public List<String> zones() {
        return this.zones == null ? List.of() : this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDedicatedHostGroupResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<SubResourceReadOnlyResponse> hosts;
        private String id;
        private DedicatedHostGroupInstanceViewResponse instanceView;
        private String location;
        private String name;
        private Integer platformFaultDomainCount;
        private @Nullable Boolean supportAutomaticPlacement;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable List<String> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDedicatedHostGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hosts = defaults.hosts;
    	      this.id = defaults.id;
    	      this.instanceView = defaults.instanceView;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.platformFaultDomainCount = defaults.platformFaultDomainCount;
    	      this.supportAutomaticPlacement = defaults.supportAutomaticPlacement;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.zones = defaults.zones;
        }

        public Builder hosts(List<SubResourceReadOnlyResponse> hosts) {
            this.hosts = Objects.requireNonNull(hosts);
            return this;
        }
        public Builder hosts(SubResourceReadOnlyResponse... hosts) {
            return hosts(List.of(hosts));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceView(DedicatedHostGroupInstanceViewResponse instanceView) {
            this.instanceView = Objects.requireNonNull(instanceView);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder platformFaultDomainCount(Integer platformFaultDomainCount) {
            this.platformFaultDomainCount = Objects.requireNonNull(platformFaultDomainCount);
            return this;
        }
        public Builder supportAutomaticPlacement(@Nullable Boolean supportAutomaticPlacement) {
            this.supportAutomaticPlacement = supportAutomaticPlacement;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder zones(@Nullable List<String> zones) {
            this.zones = zones;
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }        public GetDedicatedHostGroupResult build() {
            return new GetDedicatedHostGroupResult(hosts, id, instanceView, location, name, platformFaultDomainCount, supportAutomaticPlacement, tags, type, zones);
        }
    }
}
