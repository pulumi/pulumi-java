// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Information on the user an incident is assigned to
 * 
 */
public final class IncidentOwnerInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final IncidentOwnerInfoArgs Empty = new IncidentOwnerInfoArgs();

    /**
     * The name of the user the incident is assigned to.
     * 
     */
    @Import(name="assignedTo")
    private @Nullable Output<String> assignedTo;

    /**
     * @return The name of the user the incident is assigned to.
     * 
     */
    public Optional<Output<String>> assignedTo() {
        return Optional.ofNullable(this.assignedTo);
    }

    /**
     * The email of the user the incident is assigned to.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return The email of the user the incident is assigned to.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * The object id of the user the incident is assigned to.
     * 
     */
    @Import(name="objectId")
    private @Nullable Output<String> objectId;

    /**
     * @return The object id of the user the incident is assigned to.
     * 
     */
    public Optional<Output<String>> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * The user principal name of the user the incident is assigned to.
     * 
     */
    @Import(name="userPrincipalName")
    private @Nullable Output<String> userPrincipalName;

    /**
     * @return The user principal name of the user the incident is assigned to.
     * 
     */
    public Optional<Output<String>> userPrincipalName() {
        return Optional.ofNullable(this.userPrincipalName);
    }

    private IncidentOwnerInfoArgs() {}

    private IncidentOwnerInfoArgs(IncidentOwnerInfoArgs $) {
        this.assignedTo = $.assignedTo;
        this.email = $.email;
        this.objectId = $.objectId;
        this.userPrincipalName = $.userPrincipalName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IncidentOwnerInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IncidentOwnerInfoArgs $;

        public Builder() {
            $ = new IncidentOwnerInfoArgs();
        }

        public Builder(IncidentOwnerInfoArgs defaults) {
            $ = new IncidentOwnerInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assignedTo The name of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder assignedTo(@Nullable Output<String> assignedTo) {
            $.assignedTo = assignedTo;
            return this;
        }

        /**
         * @param assignedTo The name of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder assignedTo(String assignedTo) {
            return assignedTo(Output.of(assignedTo));
        }

        /**
         * @param email The email of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email The email of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param objectId The object id of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId The object id of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        /**
         * @param userPrincipalName The user principal name of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder userPrincipalName(@Nullable Output<String> userPrincipalName) {
            $.userPrincipalName = userPrincipalName;
            return this;
        }

        /**
         * @param userPrincipalName The user principal name of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder userPrincipalName(String userPrincipalName) {
            return userPrincipalName(Output.of(userPrincipalName));
        }

        public IncidentOwnerInfoArgs build() {
            return $;
        }
    }

}
