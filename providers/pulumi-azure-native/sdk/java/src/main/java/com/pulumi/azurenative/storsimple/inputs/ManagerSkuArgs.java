// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.inputs;

import com.pulumi.azurenative.storsimple.enums.ManagerSkuType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * The Sku.
 * 
 */
public final class ManagerSkuArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagerSkuArgs Empty = new ManagerSkuArgs();

    /**
     * Refers to the sku name which should be &#34;Standard&#34;
     * 
     */
    @Import(name="name", required=true)
    private Output<ManagerSkuType> name;

    /**
     * @return Refers to the sku name which should be &#34;Standard&#34;
     * 
     */
    public Output<ManagerSkuType> name() {
        return this.name;
    }

    private ManagerSkuArgs() {}

    private ManagerSkuArgs(ManagerSkuArgs $) {
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagerSkuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagerSkuArgs $;

        public Builder() {
            $ = new ManagerSkuArgs();
        }

        public Builder(ManagerSkuArgs defaults) {
            $ = new ManagerSkuArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Refers to the sku name which should be &#34;Standard&#34;
         * 
         * @return builder
         * 
         */
        public Builder name(Output<ManagerSkuType> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Refers to the sku name which should be &#34;Standard&#34;
         * 
         * @return builder
         * 
         */
        public Builder name(ManagerSkuType name) {
            return name(Output.of(name));
        }

        public ManagerSkuArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
