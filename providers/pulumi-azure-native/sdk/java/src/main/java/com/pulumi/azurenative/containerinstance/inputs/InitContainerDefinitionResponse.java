// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.inputs;

import com.pulumi.azurenative.containerinstance.inputs.EnvironmentVariableResponse;
import com.pulumi.azurenative.containerinstance.inputs.InitContainerPropertiesDefinitionResponseInstanceView;
import com.pulumi.azurenative.containerinstance.inputs.VolumeMountResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The init container definition.
 * 
 */
public final class InitContainerDefinitionResponse extends com.pulumi.resources.InvokeArgs {

    public static final InitContainerDefinitionResponse Empty = new InitContainerDefinitionResponse();

    /**
     * The command to execute within the init container in exec form.
     * 
     */
    @Import(name="command")
    private @Nullable List<String> command;

    public Optional<List<String>> command() {
        return Optional.ofNullable(this.command);
    }

    /**
     * The environment variables to set in the init container.
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable List<EnvironmentVariableResponse> environmentVariables;

    public Optional<List<EnvironmentVariableResponse>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * The image of the init container.
     * 
     */
    @Import(name="image")
    private @Nullable String image;

    public Optional<String> image() {
        return Optional.ofNullable(this.image);
    }

    /**
     * The instance view of the init container. Only valid in response.
     * 
     */
    @Import(name="instanceView", required=true)
    private InitContainerPropertiesDefinitionResponseInstanceView instanceView;

    public InitContainerPropertiesDefinitionResponseInstanceView instanceView() {
        return this.instanceView;
    }

    /**
     * The name for the init container.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * The volume mounts available to the init container.
     * 
     */
    @Import(name="volumeMounts")
    private @Nullable List<VolumeMountResponse> volumeMounts;

    public Optional<List<VolumeMountResponse>> volumeMounts() {
        return Optional.ofNullable(this.volumeMounts);
    }

    private InitContainerDefinitionResponse() {}

    private InitContainerDefinitionResponse(InitContainerDefinitionResponse $) {
        this.command = $.command;
        this.environmentVariables = $.environmentVariables;
        this.image = $.image;
        this.instanceView = $.instanceView;
        this.name = $.name;
        this.volumeMounts = $.volumeMounts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InitContainerDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InitContainerDefinitionResponse $;

        public Builder() {
            $ = new InitContainerDefinitionResponse();
        }

        public Builder(InitContainerDefinitionResponse defaults) {
            $ = new InitContainerDefinitionResponse(Objects.requireNonNull(defaults));
        }

        public Builder command(@Nullable List<String> command) {
            $.command = command;
            return this;
        }

        public Builder command(String... command) {
            return command(List.of(command));
        }

        public Builder environmentVariables(@Nullable List<EnvironmentVariableResponse> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        public Builder environmentVariables(EnvironmentVariableResponse... environmentVariables) {
            return environmentVariables(List.of(environmentVariables));
        }

        public Builder image(@Nullable String image) {
            $.image = image;
            return this;
        }

        public Builder instanceView(InitContainerPropertiesDefinitionResponseInstanceView instanceView) {
            $.instanceView = instanceView;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder volumeMounts(@Nullable List<VolumeMountResponse> volumeMounts) {
            $.volumeMounts = volumeMounts;
            return this;
        }

        public Builder volumeMounts(VolumeMountResponse... volumeMounts) {
            return volumeMounts(List.of(volumeMounts));
        }

        public InitContainerDefinitionResponse build() {
            $.instanceView = Objects.requireNonNull($.instanceView, "expected parameter 'instanceView' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
