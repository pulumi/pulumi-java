// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.webpubsub.inputs;

import com.pulumi.azurenative.webpubsub.inputs.EventHandlerResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of a hub.
 * 
 */
public final class WebPubSubHubPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final WebPubSubHubPropertiesResponse Empty = new WebPubSubHubPropertiesResponse();

    /**
     * The settings for configuring if anonymous connections are allowed for this hub: &#34;allow&#34; or &#34;deny&#34;. Default to &#34;deny&#34;.
     * 
     */
    @Import(name="anonymousConnectPolicy")
    private @Nullable String anonymousConnectPolicy;

    /**
     * @return The settings for configuring if anonymous connections are allowed for this hub: &#34;allow&#34; or &#34;deny&#34;. Default to &#34;deny&#34;.
     * 
     */
    public Optional<String> anonymousConnectPolicy() {
        return Optional.ofNullable(this.anonymousConnectPolicy);
    }

    /**
     * Event handler of a hub.
     * 
     */
    @Import(name="eventHandlers")
    private @Nullable List<EventHandlerResponse> eventHandlers;

    /**
     * @return Event handler of a hub.
     * 
     */
    public Optional<List<EventHandlerResponse>> eventHandlers() {
        return Optional.ofNullable(this.eventHandlers);
    }

    private WebPubSubHubPropertiesResponse() {}

    private WebPubSubHubPropertiesResponse(WebPubSubHubPropertiesResponse $) {
        this.anonymousConnectPolicy = $.anonymousConnectPolicy;
        this.eventHandlers = $.eventHandlers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebPubSubHubPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebPubSubHubPropertiesResponse $;

        public Builder() {
            $ = new WebPubSubHubPropertiesResponse();
        }

        public Builder(WebPubSubHubPropertiesResponse defaults) {
            $ = new WebPubSubHubPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param anonymousConnectPolicy The settings for configuring if anonymous connections are allowed for this hub: &#34;allow&#34; or &#34;deny&#34;. Default to &#34;deny&#34;.
         * 
         * @return builder
         * 
         */
        public Builder anonymousConnectPolicy(@Nullable String anonymousConnectPolicy) {
            $.anonymousConnectPolicy = anonymousConnectPolicy;
            return this;
        }

        /**
         * @param eventHandlers Event handler of a hub.
         * 
         * @return builder
         * 
         */
        public Builder eventHandlers(@Nullable List<EventHandlerResponse> eventHandlers) {
            $.eventHandlers = eventHandlers;
            return this;
        }

        /**
         * @param eventHandlers Event handler of a hub.
         * 
         * @return builder
         * 
         */
        public Builder eventHandlers(EventHandlerResponse... eventHandlers) {
            return eventHandlers(List.of(eventHandlers));
        }

        public WebPubSubHubPropertiesResponse build() {
            $.anonymousConnectPolicy = Codegen.stringProp("anonymousConnectPolicy").arg($.anonymousConnectPolicy).def("deny").getNullable();
            return $;
        }
    }

}
