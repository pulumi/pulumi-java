// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Agent disk details.
 * 
 */
public final class AgentDiskDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final AgentDiskDetailsResponse Empty = new AgentDiskDetailsResponse();

    /**
     * The disk capacity in bytes.
     * 
     */
    @Import(name="capacityInBytes", required=true)
    private Double capacityInBytes;

    public Double capacityInBytes() {
        return this.capacityInBytes;
    }

    /**
     * The disk Id.
     * 
     */
    @Import(name="diskId", required=true)
    private String diskId;

    public String diskId() {
        return this.diskId;
    }

    /**
     * The disk name.
     * 
     */
    @Import(name="diskName", required=true)
    private String diskName;

    public String diskName() {
        return this.diskName;
    }

    /**
     * A value indicating whether the disk is the OS disk.
     * 
     */
    @Import(name="isOSDisk", required=true)
    private String isOSDisk;

    public String isOSDisk() {
        return this.isOSDisk;
    }

    /**
     * The lun of disk.
     * 
     */
    @Import(name="lunId", required=true)
    private Integer lunId;

    public Integer lunId() {
        return this.lunId;
    }

    private AgentDiskDetailsResponse() {}

    private AgentDiskDetailsResponse(AgentDiskDetailsResponse $) {
        this.capacityInBytes = $.capacityInBytes;
        this.diskId = $.diskId;
        this.diskName = $.diskName;
        this.isOSDisk = $.isOSDisk;
        this.lunId = $.lunId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentDiskDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentDiskDetailsResponse $;

        public Builder() {
            $ = new AgentDiskDetailsResponse();
        }

        public Builder(AgentDiskDetailsResponse defaults) {
            $ = new AgentDiskDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder capacityInBytes(Double capacityInBytes) {
            $.capacityInBytes = capacityInBytes;
            return this;
        }

        public Builder diskId(String diskId) {
            $.diskId = diskId;
            return this;
        }

        public Builder diskName(String diskName) {
            $.diskName = diskName;
            return this;
        }

        public Builder isOSDisk(String isOSDisk) {
            $.isOSDisk = isOSDisk;
            return this;
        }

        public Builder lunId(Integer lunId) {
            $.lunId = lunId;
            return this;
        }

        public AgentDiskDetailsResponse build() {
            $.capacityInBytes = Objects.requireNonNull($.capacityInBytes, "expected parameter 'capacityInBytes' to be non-null");
            $.diskId = Objects.requireNonNull($.diskId, "expected parameter 'diskId' to be non-null");
            $.diskName = Objects.requireNonNull($.diskName, "expected parameter 'diskName' to be non-null");
            $.isOSDisk = Objects.requireNonNull($.isOSDisk, "expected parameter 'isOSDisk' to be non-null");
            $.lunId = Objects.requireNonNull($.lunId, "expected parameter 'lunId' to be non-null");
            return $;
        }
    }

}
