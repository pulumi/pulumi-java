// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AutoscaleSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoscaleSettingsArgs Empty = new AutoscaleSettingsArgs();

    /**
     * Represents maximum throughput, the resource can scale up to.
     * 
     */
    @Import(name="maxThroughput")
      private final @Nullable Output<Integer> maxThroughput;

    public Output<Integer> maxThroughput() {
        return this.maxThroughput == null ? Codegen.empty() : this.maxThroughput;
    }

    public AutoscaleSettingsArgs(@Nullable Output<Integer> maxThroughput) {
        this.maxThroughput = maxThroughput;
    }

    private AutoscaleSettingsArgs() {
        this.maxThroughput = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoscaleSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> maxThroughput;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoscaleSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxThroughput = defaults.maxThroughput;
        }

        public Builder maxThroughput(@Nullable Output<Integer> maxThroughput) {
            this.maxThroughput = maxThroughput;
            return this;
        }
        public Builder maxThroughput(@Nullable Integer maxThroughput) {
            this.maxThroughput = Codegen.ofNullable(maxThroughput);
            return this;
        }        public AutoscaleSettingsArgs build() {
            return new AutoscaleSettingsArgs(maxThroughput);
        }
    }
}
