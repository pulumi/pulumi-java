// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.azurenative.storage.inputs.ManagementPolicyBaseBlobArgs;
import com.pulumi.azurenative.storage.inputs.ManagementPolicySnapShotArgs;
import com.pulumi.azurenative.storage.inputs.ManagementPolicyVersionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Actions are applied to the filtered blobs when the execution condition is met.
 * 
 */
public final class ManagementPolicyActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementPolicyActionArgs Empty = new ManagementPolicyActionArgs();

    /**
     * The management policy action for base blob
     * 
     */
    @Import(name="baseBlob")
    private @Nullable Output<ManagementPolicyBaseBlobArgs> baseBlob;

    public Optional<Output<ManagementPolicyBaseBlobArgs>> baseBlob() {
        return Optional.ofNullable(this.baseBlob);
    }

    /**
     * The management policy action for snapshot
     * 
     */
    @Import(name="snapshot")
    private @Nullable Output<ManagementPolicySnapShotArgs> snapshot;

    public Optional<Output<ManagementPolicySnapShotArgs>> snapshot() {
        return Optional.ofNullable(this.snapshot);
    }

    /**
     * The management policy action for version
     * 
     */
    @Import(name="version")
    private @Nullable Output<ManagementPolicyVersionArgs> version;

    public Optional<Output<ManagementPolicyVersionArgs>> version() {
        return Optional.ofNullable(this.version);
    }

    private ManagementPolicyActionArgs() {}

    private ManagementPolicyActionArgs(ManagementPolicyActionArgs $) {
        this.baseBlob = $.baseBlob;
        this.snapshot = $.snapshot;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementPolicyActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementPolicyActionArgs $;

        public Builder() {
            $ = new ManagementPolicyActionArgs();
        }

        public Builder(ManagementPolicyActionArgs defaults) {
            $ = new ManagementPolicyActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder baseBlob(@Nullable Output<ManagementPolicyBaseBlobArgs> baseBlob) {
            $.baseBlob = baseBlob;
            return this;
        }

        public Builder baseBlob(ManagementPolicyBaseBlobArgs baseBlob) {
            return baseBlob(Output.of(baseBlob));
        }

        public Builder snapshot(@Nullable Output<ManagementPolicySnapShotArgs> snapshot) {
            $.snapshot = snapshot;
            return this;
        }

        public Builder snapshot(ManagementPolicySnapShotArgs snapshot) {
            return snapshot(Output.of(snapshot));
        }

        public Builder version(@Nullable Output<ManagementPolicyVersionArgs> version) {
            $.version = version;
            return this;
        }

        public Builder version(ManagementPolicyVersionArgs version) {
            return version(Output.of(version));
        }

        public ManagementPolicyActionArgs build() {
            return $;
        }
    }

}
