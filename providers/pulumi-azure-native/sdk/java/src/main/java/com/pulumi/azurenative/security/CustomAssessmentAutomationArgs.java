// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security;

import com.pulumi.azurenative.security.enums.SeverityEnum;
import com.pulumi.azurenative.security.enums.SupportedCloudEnum;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CustomAssessmentAutomationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomAssessmentAutomationArgs Empty = new CustomAssessmentAutomationArgs();

    /**
     * Base 64 encoded KQL query representing the assessment automation results required.
     * 
     */
    @Import(name="compressedQuery")
      private final @Nullable Output<String> compressedQuery;

    public Output<String> compressedQuery() {
        return this.compressedQuery == null ? Codegen.empty() : this.compressedQuery;
    }

    /**
     * Name of the Custom Assessment Automation.
     * 
     */
    @Import(name="customAssessmentAutomationName")
      private final @Nullable Output<String> customAssessmentAutomationName;

    public Output<String> customAssessmentAutomationName() {
        return this.customAssessmentAutomationName == null ? Codegen.empty() : this.customAssessmentAutomationName;
    }

    /**
     * The description to relate to the assessments generated by this assessment automation.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The display name of the assessments generated by this assessment automation.
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName == null ? Codegen.empty() : this.displayName;
    }

    /**
     * The remediation description to relate to the assessments generated by this assessment automation.
     * 
     */
    @Import(name="remediationDescription")
      private final @Nullable Output<String> remediationDescription;

    public Output<String> remediationDescription() {
        return this.remediationDescription == null ? Codegen.empty() : this.remediationDescription;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The severity to relate to the assessments generated by this assessment automation.
     * 
     */
    @Import(name="severity")
      private final @Nullable Output<Either<String,SeverityEnum>> severity;

    public Output<Either<String,SeverityEnum>> severity() {
        return this.severity == null ? Codegen.empty() : this.severity;
    }

    /**
     * Relevant cloud for the custom assessment automation.
     * 
     */
    @Import(name="supportedCloud")
      private final @Nullable Output<Either<String,SupportedCloudEnum>> supportedCloud;

    public Output<Either<String,SupportedCloudEnum>> supportedCloud() {
        return this.supportedCloud == null ? Codegen.empty() : this.supportedCloud;
    }

    public CustomAssessmentAutomationArgs(
        @Nullable Output<String> compressedQuery,
        @Nullable Output<String> customAssessmentAutomationName,
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        @Nullable Output<String> remediationDescription,
        Output<String> resourceGroupName,
        @Nullable Output<Either<String,SeverityEnum>> severity,
        @Nullable Output<Either<String,SupportedCloudEnum>> supportedCloud) {
        this.compressedQuery = compressedQuery;
        this.customAssessmentAutomationName = customAssessmentAutomationName;
        this.description = description;
        this.displayName = displayName;
        this.remediationDescription = remediationDescription;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.severity = severity;
        this.supportedCloud = supportedCloud;
    }

    private CustomAssessmentAutomationArgs() {
        this.compressedQuery = Codegen.empty();
        this.customAssessmentAutomationName = Codegen.empty();
        this.description = Codegen.empty();
        this.displayName = Codegen.empty();
        this.remediationDescription = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.severity = Codegen.empty();
        this.supportedCloud = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomAssessmentAutomationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> compressedQuery;
        private @Nullable Output<String> customAssessmentAutomationName;
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private @Nullable Output<String> remediationDescription;
        private Output<String> resourceGroupName;
        private @Nullable Output<Either<String,SeverityEnum>> severity;
        private @Nullable Output<Either<String,SupportedCloudEnum>> supportedCloud;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomAssessmentAutomationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compressedQuery = defaults.compressedQuery;
    	      this.customAssessmentAutomationName = defaults.customAssessmentAutomationName;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.remediationDescription = defaults.remediationDescription;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.severity = defaults.severity;
    	      this.supportedCloud = defaults.supportedCloud;
        }

        public Builder compressedQuery(@Nullable Output<String> compressedQuery) {
            this.compressedQuery = compressedQuery;
            return this;
        }
        public Builder compressedQuery(@Nullable String compressedQuery) {
            this.compressedQuery = Codegen.ofNullable(compressedQuery);
            return this;
        }
        public Builder customAssessmentAutomationName(@Nullable Output<String> customAssessmentAutomationName) {
            this.customAssessmentAutomationName = customAssessmentAutomationName;
            return this;
        }
        public Builder customAssessmentAutomationName(@Nullable String customAssessmentAutomationName) {
            this.customAssessmentAutomationName = Codegen.ofNullable(customAssessmentAutomationName);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = Codegen.ofNullable(displayName);
            return this;
        }
        public Builder remediationDescription(@Nullable Output<String> remediationDescription) {
            this.remediationDescription = remediationDescription;
            return this;
        }
        public Builder remediationDescription(@Nullable String remediationDescription) {
            this.remediationDescription = Codegen.ofNullable(remediationDescription);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder severity(@Nullable Output<Either<String,SeverityEnum>> severity) {
            this.severity = severity;
            return this;
        }
        public Builder severity(@Nullable Either<String,SeverityEnum> severity) {
            this.severity = Codegen.ofNullable(severity);
            return this;
        }
        public Builder supportedCloud(@Nullable Output<Either<String,SupportedCloudEnum>> supportedCloud) {
            this.supportedCloud = supportedCloud;
            return this;
        }
        public Builder supportedCloud(@Nullable Either<String,SupportedCloudEnum> supportedCloud) {
            this.supportedCloud = Codegen.ofNullable(supportedCloud);
            return this;
        }        public CustomAssessmentAutomationArgs build() {
            return new CustomAssessmentAutomationArgs(compressedQuery, customAssessmentAutomationName, description, displayName, remediationDescription, resourceGroupName, severity, supportedCloud);
        }
    }
}
