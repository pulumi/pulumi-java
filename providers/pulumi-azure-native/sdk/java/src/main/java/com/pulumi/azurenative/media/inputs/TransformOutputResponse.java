// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.azurenative.media.inputs.AudioAnalyzerPresetResponse;
import com.pulumi.azurenative.media.inputs.BuiltInStandardEncoderPresetResponse;
import com.pulumi.azurenative.media.inputs.FaceDetectorPresetResponse;
import com.pulumi.azurenative.media.inputs.StandardEncoderPresetResponse;
import com.pulumi.azurenative.media.inputs.VideoAnalyzerPresetResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the properties of a TransformOutput, which are the rules to be applied while generating the desired output.
 * 
 */
public final class TransformOutputResponse extends com.pulumi.resources.InvokeArgs {

    public static final TransformOutputResponse Empty = new TransformOutputResponse();

    /**
     * A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with &#39;ContinueJob&#39;. The default is &#39;StopProcessingJob&#39;.
     * 
     */
    @Import(name="onError")
    private @Nullable String onError;

    /**
     * @return A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with &#39;ContinueJob&#39;. The default is &#39;StopProcessingJob&#39;.
     * 
     */
    public Optional<String> onError() {
        return Optional.ofNullable(this.onError);
    }

    /**
     * Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output.
     * 
     */
    @Import(name="preset", required=true)
    private Object preset;

    /**
     * @return Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output.
     * 
     */
    public Object preset() {
        return this.preset;
    }

    /**
     * Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal.
     * 
     */
    @Import(name="relativePriority")
    private @Nullable String relativePriority;

    /**
     * @return Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal.
     * 
     */
    public Optional<String> relativePriority() {
        return Optional.ofNullable(this.relativePriority);
    }

    private TransformOutputResponse() {}

    private TransformOutputResponse(TransformOutputResponse $) {
        this.onError = $.onError;
        this.preset = $.preset;
        this.relativePriority = $.relativePriority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransformOutputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransformOutputResponse $;

        public Builder() {
            $ = new TransformOutputResponse();
        }

        public Builder(TransformOutputResponse defaults) {
            $ = new TransformOutputResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param onError A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with &#39;ContinueJob&#39;. The default is &#39;StopProcessingJob&#39;.
         * 
         * @return builder
         * 
         */
        public Builder onError(@Nullable String onError) {
            $.onError = onError;
            return this;
        }

        /**
         * @param preset Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output.
         * 
         * @return builder
         * 
         */
        public Builder preset(Object preset) {
            $.preset = preset;
            return this;
        }

        /**
         * @param relativePriority Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal.
         * 
         * @return builder
         * 
         */
        public Builder relativePriority(@Nullable String relativePriority) {
            $.relativePriority = relativePriority;
            return this;
        }

        public TransformOutputResponse build() {
            $.preset = Objects.requireNonNull($.preset, "expected parameter 'preset' to be non-null");
            return $;
        }
    }

}
