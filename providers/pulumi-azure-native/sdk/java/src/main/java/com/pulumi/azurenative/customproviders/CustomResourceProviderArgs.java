// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customproviders;

import com.pulumi.azurenative.customproviders.inputs.CustomRPActionRouteDefinitionArgs;
import com.pulumi.azurenative.customproviders.inputs.CustomRPResourceTypeRouteDefinitionArgs;
import com.pulumi.azurenative.customproviders.inputs.CustomRPValidationsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomResourceProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomResourceProviderArgs Empty = new CustomResourceProviderArgs();

    /**
     * A list of actions that the custom resource provider implements.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<CustomRPActionRouteDefinitionArgs>> actions;

    /**
     * @return A list of actions that the custom resource provider implements.
     * 
     */
    public Optional<Output<List<CustomRPActionRouteDefinitionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource location
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the resource provider.
     * 
     */
    @Import(name="resourceProviderName")
    private @Nullable Output<String> resourceProviderName;

    /**
     * @return The name of the resource provider.
     * 
     */
    public Optional<Output<String>> resourceProviderName() {
        return Optional.ofNullable(this.resourceProviderName);
    }

    /**
     * A list of resource types that the custom resource provider implements.
     * 
     */
    @Import(name="resourceTypes")
    private @Nullable Output<List<CustomRPResourceTypeRouteDefinitionArgs>> resourceTypes;

    /**
     * @return A list of resource types that the custom resource provider implements.
     * 
     */
    public Optional<Output<List<CustomRPResourceTypeRouteDefinitionArgs>>> resourceTypes() {
        return Optional.ofNullable(this.resourceTypes);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A list of validations to run on the custom resource provider&#39;s requests.
     * 
     */
    @Import(name="validations")
    private @Nullable Output<List<CustomRPValidationsArgs>> validations;

    /**
     * @return A list of validations to run on the custom resource provider&#39;s requests.
     * 
     */
    public Optional<Output<List<CustomRPValidationsArgs>>> validations() {
        return Optional.ofNullable(this.validations);
    }

    private CustomResourceProviderArgs() {}

    private CustomResourceProviderArgs(CustomResourceProviderArgs $) {
        this.actions = $.actions;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.resourceProviderName = $.resourceProviderName;
        this.resourceTypes = $.resourceTypes;
        this.tags = $.tags;
        this.validations = $.validations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomResourceProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomResourceProviderArgs $;

        public Builder() {
            $ = new CustomResourceProviderArgs();
        }

        public Builder(CustomResourceProviderArgs defaults) {
            $ = new CustomResourceProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions A list of actions that the custom resource provider implements.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<CustomRPActionRouteDefinitionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions A list of actions that the custom resource provider implements.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<CustomRPActionRouteDefinitionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions A list of actions that the custom resource provider implements.
         * 
         * @return builder
         * 
         */
        public Builder actions(CustomRPActionRouteDefinitionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param location Resource location
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource location
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param resourceProviderName The name of the resource provider.
         * 
         * @return builder
         * 
         */
        public Builder resourceProviderName(@Nullable Output<String> resourceProviderName) {
            $.resourceProviderName = resourceProviderName;
            return this;
        }

        /**
         * @param resourceProviderName The name of the resource provider.
         * 
         * @return builder
         * 
         */
        public Builder resourceProviderName(String resourceProviderName) {
            return resourceProviderName(Output.of(resourceProviderName));
        }

        /**
         * @param resourceTypes A list of resource types that the custom resource provider implements.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(@Nullable Output<List<CustomRPResourceTypeRouteDefinitionArgs>> resourceTypes) {
            $.resourceTypes = resourceTypes;
            return this;
        }

        /**
         * @param resourceTypes A list of resource types that the custom resource provider implements.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(List<CustomRPResourceTypeRouteDefinitionArgs> resourceTypes) {
            return resourceTypes(Output.of(resourceTypes));
        }

        /**
         * @param resourceTypes A list of resource types that the custom resource provider implements.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(CustomRPResourceTypeRouteDefinitionArgs... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param validations A list of validations to run on the custom resource provider&#39;s requests.
         * 
         * @return builder
         * 
         */
        public Builder validations(@Nullable Output<List<CustomRPValidationsArgs>> validations) {
            $.validations = validations;
            return this;
        }

        /**
         * @param validations A list of validations to run on the custom resource provider&#39;s requests.
         * 
         * @return builder
         * 
         */
        public Builder validations(List<CustomRPValidationsArgs> validations) {
            return validations(Output.of(validations));
        }

        /**
         * @param validations A list of validations to run on the custom resource provider&#39;s requests.
         * 
         * @return builder
         * 
         */
        public Builder validations(CustomRPValidationsArgs... validations) {
            return validations(List.of(validations));
        }

        public CustomResourceProviderArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
