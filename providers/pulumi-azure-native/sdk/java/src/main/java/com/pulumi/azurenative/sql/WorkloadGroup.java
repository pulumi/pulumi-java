// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.sql.WorkloadGroupArgs;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Workload group operations for a data warehouse
 * API Version: 2020-11-01-preview.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:sql:WorkloadGroup smallrc /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr/databases/testdb/workloadGroups/smallrc 
 * ```
 * 
 */
@ResourceType(type="azure-native:sql:WorkloadGroup")
public class WorkloadGroup extends com.pulumi.resources.CustomResource {
    /**
     * The workload group importance level.
     * 
     */
    @Export(name="importance", type=String.class, parameters={})
    private Output</* @Nullable */ String> importance;

    /**
     * @return The workload group importance level.
     * 
     */
    public Output<Optional<String>> importance() {
        return Codegen.optional(this.importance);
    }
    /**
     * The workload group cap percentage resource.
     * 
     */
    @Export(name="maxResourcePercent", type=Integer.class, parameters={})
    private Output<Integer> maxResourcePercent;

    /**
     * @return The workload group cap percentage resource.
     * 
     */
    public Output<Integer> maxResourcePercent() {
        return this.maxResourcePercent;
    }
    /**
     * The workload group request maximum grant percentage.
     * 
     */
    @Export(name="maxResourcePercentPerRequest", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> maxResourcePercentPerRequest;

    /**
     * @return The workload group request maximum grant percentage.
     * 
     */
    public Output<Optional<Double>> maxResourcePercentPerRequest() {
        return Codegen.optional(this.maxResourcePercentPerRequest);
    }
    /**
     * The workload group minimum percentage resource.
     * 
     */
    @Export(name="minResourcePercent", type=Integer.class, parameters={})
    private Output<Integer> minResourcePercent;

    /**
     * @return The workload group minimum percentage resource.
     * 
     */
    public Output<Integer> minResourcePercent() {
        return this.minResourcePercent;
    }
    /**
     * The workload group request minimum grant percentage.
     * 
     */
    @Export(name="minResourcePercentPerRequest", type=Double.class, parameters={})
    private Output<Double> minResourcePercentPerRequest;

    /**
     * @return The workload group request minimum grant percentage.
     * 
     */
    public Output<Double> minResourcePercentPerRequest() {
        return this.minResourcePercentPerRequest;
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The workload group query execution timeout.
     * 
     */
    @Export(name="queryExecutionTimeout", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> queryExecutionTimeout;

    /**
     * @return The workload group query execution timeout.
     * 
     */
    public Output<Optional<Integer>> queryExecutionTimeout() {
        return Codegen.optional(this.queryExecutionTimeout);
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkloadGroup(String name) {
        this(name, WorkloadGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkloadGroup(String name, WorkloadGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkloadGroup(String name, WorkloadGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:WorkloadGroup", name, args == null ? WorkloadGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private WorkloadGroup(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:WorkloadGroup", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:sql/v20190601preview:WorkloadGroup").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20200202preview:WorkloadGroup").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20200801preview:WorkloadGroup").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20201101preview:WorkloadGroup").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20210201preview:WorkloadGroup").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20210501preview:WorkloadGroup").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20210801preview:WorkloadGroup").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20211101preview:WorkloadGroup").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkloadGroup get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkloadGroup(name, id, options);
    }
}
