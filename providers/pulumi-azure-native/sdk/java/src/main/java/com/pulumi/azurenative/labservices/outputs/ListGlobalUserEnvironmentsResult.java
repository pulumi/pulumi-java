// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.outputs;

import com.pulumi.azurenative.labservices.outputs.EnvironmentDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ListGlobalUserEnvironmentsResult {
    /**
     * List of all the environments
     * 
     */
    private final @Nullable List<EnvironmentDetailsResponse> environments;

    @CustomType.Constructor
    private ListGlobalUserEnvironmentsResult(@CustomType.Parameter("environments") @Nullable List<EnvironmentDetailsResponse> environments) {
        this.environments = environments;
    }

    /**
     * List of all the environments
     * 
    */
    public List<EnvironmentDetailsResponse> environments() {
        return this.environments == null ? List.of() : this.environments;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListGlobalUserEnvironmentsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<EnvironmentDetailsResponse> environments;

        public Builder() {
    	      // Empty
        }

        public Builder(ListGlobalUserEnvironmentsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environments = defaults.environments;
        }

        public Builder environments(@Nullable List<EnvironmentDetailsResponse> environments) {
            this.environments = environments;
            return this;
        }
        public Builder environments(EnvironmentDetailsResponse... environments) {
            return environments(List.of(environments));
        }        public ListGlobalUserEnvironmentsResult build() {
            return new ListGlobalUserEnvironmentsResult(environments);
        }
    }
}
