// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Project Database Details
 * 
 */
public final class DatabaseInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseInfoArgs Empty = new DatabaseInfoArgs();

    /**
     * Name of the database
     * 
     */
    @Import(name="sourceDatabaseName", required=true)
    private Output<String> sourceDatabaseName;

    /**
     * @return Name of the database
     * 
     */
    public Output<String> sourceDatabaseName() {
        return this.sourceDatabaseName;
    }

    private DatabaseInfoArgs() {}

    private DatabaseInfoArgs(DatabaseInfoArgs $) {
        this.sourceDatabaseName = $.sourceDatabaseName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseInfoArgs $;

        public Builder() {
            $ = new DatabaseInfoArgs();
        }

        public Builder(DatabaseInfoArgs defaults) {
            $ = new DatabaseInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceDatabaseName Name of the database
         * 
         * @return builder
         * 
         */
        public Builder sourceDatabaseName(Output<String> sourceDatabaseName) {
            $.sourceDatabaseName = sourceDatabaseName;
            return this;
        }

        /**
         * @param sourceDatabaseName Name of the database
         * 
         * @return builder
         * 
         */
        public Builder sourceDatabaseName(String sourceDatabaseName) {
            return sourceDatabaseName(Output.of(sourceDatabaseName));
        }

        public DatabaseInfoArgs build() {
            $.sourceDatabaseName = Objects.requireNonNull($.sourceDatabaseName, "expected parameter 'sourceDatabaseName' to be non-null");
            return $;
        }
    }

}
