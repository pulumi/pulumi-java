// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the dependency override of the move resource.
 * 
 */
public final class MoveResourceDependencyOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final MoveResourceDependencyOverrideArgs Empty = new MoveResourceDependencyOverrideArgs();

    /**
     * Gets or sets the ARM ID of the dependent resource.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Gets or sets the ARM ID of the dependent resource.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
     * the dependent resource.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
     * the dependent resource.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    private MoveResourceDependencyOverrideArgs() {}

    private MoveResourceDependencyOverrideArgs(MoveResourceDependencyOverrideArgs $) {
        this.id = $.id;
        this.targetId = $.targetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MoveResourceDependencyOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MoveResourceDependencyOverrideArgs $;

        public Builder() {
            $ = new MoveResourceDependencyOverrideArgs();
        }

        public Builder(MoveResourceDependencyOverrideArgs defaults) {
            $ = new MoveResourceDependencyOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Gets or sets the ARM ID of the dependent resource.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Gets or sets the ARM ID of the dependent resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param targetId Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
         * the dependent resource.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
         * the dependent resource.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        public MoveResourceDependencyOverrideArgs build() {
            return $;
        }
    }

}
