// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.inputs.ContainerNetworkInterfaceConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkProfileArgs Empty = new NetworkProfileArgs();

    /**
     * List of chid container network interface configurations.
     * 
     */
    @Import(name="containerNetworkInterfaceConfigurations")
    private @Nullable Output<List<ContainerNetworkInterfaceConfigurationArgs>> containerNetworkInterfaceConfigurations;

    public Optional<Output<List<ContainerNetworkInterfaceConfigurationArgs>>> containerNetworkInterfaceConfigurations() {
        return Optional.ofNullable(this.containerNetworkInterfaceConfigurations);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the network profile.
     * 
     */
    @Import(name="networkProfileName")
    private @Nullable Output<String> networkProfileName;

    public Optional<Output<String>> networkProfileName() {
        return Optional.ofNullable(this.networkProfileName);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private NetworkProfileArgs() {}

    private NetworkProfileArgs(NetworkProfileArgs $) {
        this.containerNetworkInterfaceConfigurations = $.containerNetworkInterfaceConfigurations;
        this.id = $.id;
        this.location = $.location;
        this.networkProfileName = $.networkProfileName;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkProfileArgs $;

        public Builder() {
            $ = new NetworkProfileArgs();
        }

        public Builder(NetworkProfileArgs defaults) {
            $ = new NetworkProfileArgs(Objects.requireNonNull(defaults));
        }

        public Builder containerNetworkInterfaceConfigurations(@Nullable Output<List<ContainerNetworkInterfaceConfigurationArgs>> containerNetworkInterfaceConfigurations) {
            $.containerNetworkInterfaceConfigurations = containerNetworkInterfaceConfigurations;
            return this;
        }

        public Builder containerNetworkInterfaceConfigurations(List<ContainerNetworkInterfaceConfigurationArgs> containerNetworkInterfaceConfigurations) {
            return containerNetworkInterfaceConfigurations(Output.of(containerNetworkInterfaceConfigurations));
        }

        public Builder containerNetworkInterfaceConfigurations(ContainerNetworkInterfaceConfigurationArgs... containerNetworkInterfaceConfigurations) {
            return containerNetworkInterfaceConfigurations(List.of(containerNetworkInterfaceConfigurations));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder networkProfileName(@Nullable Output<String> networkProfileName) {
            $.networkProfileName = networkProfileName;
            return this;
        }

        public Builder networkProfileName(String networkProfileName) {
            return networkProfileName(Output.of(networkProfileName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public NetworkProfileArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
