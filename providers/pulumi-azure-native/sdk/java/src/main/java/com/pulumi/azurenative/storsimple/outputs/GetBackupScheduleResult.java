// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.outputs;

import com.pulumi.azurenative.storsimple.outputs.ScheduleRecurrenceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBackupScheduleResult {
    /**
     * @return The type of backup which needs to be taken.
     * 
     */
    private final String backupType;
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    private final String id;
    /**
     * @return The Kind of the object. Currently only Series8000 is supported
     * 
     */
    private final @Nullable String kind;
    /**
     * @return The last successful backup run which was triggered for the schedule.
     * 
     */
    private final String lastSuccessfulRun;
    /**
     * @return The name of the object.
     * 
     */
    private final String name;
    /**
     * @return The number of backups to be retained.
     * 
     */
    private final Double retentionCount;
    /**
     * @return The schedule recurrence.
     * 
     */
    private final ScheduleRecurrenceResponse scheduleRecurrence;
    /**
     * @return The schedule status.
     * 
     */
    private final String scheduleStatus;
    /**
     * @return The start time of the schedule.
     * 
     */
    private final String startTime;
    /**
     * @return The hierarchical type of the object.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetBackupScheduleResult(
        @CustomType.Parameter("backupType") String backupType,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("kind") @Nullable String kind,
        @CustomType.Parameter("lastSuccessfulRun") String lastSuccessfulRun,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("retentionCount") Double retentionCount,
        @CustomType.Parameter("scheduleRecurrence") ScheduleRecurrenceResponse scheduleRecurrence,
        @CustomType.Parameter("scheduleStatus") String scheduleStatus,
        @CustomType.Parameter("startTime") String startTime,
        @CustomType.Parameter("type") String type) {
        this.backupType = backupType;
        this.id = id;
        this.kind = kind;
        this.lastSuccessfulRun = lastSuccessfulRun;
        this.name = name;
        this.retentionCount = retentionCount;
        this.scheduleRecurrence = scheduleRecurrence;
        this.scheduleStatus = scheduleStatus;
        this.startTime = startTime;
        this.type = type;
    }

    /**
     * @return The type of backup which needs to be taken.
     * 
     */
    public String backupType() {
        return this.backupType;
    }
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Kind of the object. Currently only Series8000 is supported
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return The last successful backup run which was triggered for the schedule.
     * 
     */
    public String lastSuccessfulRun() {
        return this.lastSuccessfulRun;
    }
    /**
     * @return The name of the object.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The number of backups to be retained.
     * 
     */
    public Double retentionCount() {
        return this.retentionCount;
    }
    /**
     * @return The schedule recurrence.
     * 
     */
    public ScheduleRecurrenceResponse scheduleRecurrence() {
        return this.scheduleRecurrence;
    }
    /**
     * @return The schedule status.
     * 
     */
    public String scheduleStatus() {
        return this.scheduleStatus;
    }
    /**
     * @return The start time of the schedule.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return The hierarchical type of the object.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupScheduleResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String backupType;
        private String id;
        private @Nullable String kind;
        private String lastSuccessfulRun;
        private String name;
        private Double retentionCount;
        private ScheduleRecurrenceResponse scheduleRecurrence;
        private String scheduleStatus;
        private String startTime;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBackupScheduleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupType = defaults.backupType;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.lastSuccessfulRun = defaults.lastSuccessfulRun;
    	      this.name = defaults.name;
    	      this.retentionCount = defaults.retentionCount;
    	      this.scheduleRecurrence = defaults.scheduleRecurrence;
    	      this.scheduleStatus = defaults.scheduleStatus;
    	      this.startTime = defaults.startTime;
    	      this.type = defaults.type;
        }

        public Builder backupType(String backupType) {
            this.backupType = Objects.requireNonNull(backupType);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        public Builder lastSuccessfulRun(String lastSuccessfulRun) {
            this.lastSuccessfulRun = Objects.requireNonNull(lastSuccessfulRun);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder retentionCount(Double retentionCount) {
            this.retentionCount = Objects.requireNonNull(retentionCount);
            return this;
        }
        public Builder scheduleRecurrence(ScheduleRecurrenceResponse scheduleRecurrence) {
            this.scheduleRecurrence = Objects.requireNonNull(scheduleRecurrence);
            return this;
        }
        public Builder scheduleStatus(String scheduleStatus) {
            this.scheduleStatus = Objects.requireNonNull(scheduleStatus);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetBackupScheduleResult build() {
            return new GetBackupScheduleResult(backupType, id, kind, lastSuccessfulRun, name, retentionCount, scheduleRecurrence, scheduleStatus, startTime, type);
        }
    }
}
