// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.enums.LinuxPatchAssessmentMode;
import com.pulumi.azurenative.compute.enums.LinuxVMGuestPatchMode;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies settings related to VM Guest Patching on Linux.
 * 
 */
public final class LinuxPatchSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinuxPatchSettingsArgs Empty = new LinuxPatchSettingsArgs();

    /**
     * Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - You control the timing of patch assessments on a virtual machine. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
     * 
     */
    @Import(name="assessmentMode")
    private @Nullable Output<Either<String,LinuxPatchAssessmentMode>> assessmentMode;

    /**
     * @return Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - You control the timing of patch assessments on a virtual machine. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
     * 
     */
    public Optional<Output<Either<String,LinuxPatchAssessmentMode>>> assessmentMode() {
        return Optional.ofNullable(this.assessmentMode);
    }

    /**
     * Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - The virtual machine&#39;s default patching configuration is used. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
     * 
     */
    @Import(name="patchMode")
    private @Nullable Output<Either<String,LinuxVMGuestPatchMode>> patchMode;

    /**
     * @return Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - The virtual machine&#39;s default patching configuration is used. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
     * 
     */
    public Optional<Output<Either<String,LinuxVMGuestPatchMode>>> patchMode() {
        return Optional.ofNullable(this.patchMode);
    }

    private LinuxPatchSettingsArgs() {}

    private LinuxPatchSettingsArgs(LinuxPatchSettingsArgs $) {
        this.assessmentMode = $.assessmentMode;
        this.patchMode = $.patchMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxPatchSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxPatchSettingsArgs $;

        public Builder() {
            $ = new LinuxPatchSettingsArgs();
        }

        public Builder(LinuxPatchSettingsArgs defaults) {
            $ = new LinuxPatchSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assessmentMode Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - You control the timing of patch assessments on a virtual machine. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
         * 
         * @return builder
         * 
         */
        public Builder assessmentMode(@Nullable Output<Either<String,LinuxPatchAssessmentMode>> assessmentMode) {
            $.assessmentMode = assessmentMode;
            return this;
        }

        /**
         * @param assessmentMode Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - You control the timing of patch assessments on a virtual machine. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
         * 
         * @return builder
         * 
         */
        public Builder assessmentMode(Either<String,LinuxPatchAssessmentMode> assessmentMode) {
            return assessmentMode(Output.of(assessmentMode));
        }

        /**
         * @param assessmentMode Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - You control the timing of patch assessments on a virtual machine. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
         * 
         * @return builder
         * 
         */
        public Builder assessmentMode(String assessmentMode) {
            return assessmentMode(Either.ofLeft(assessmentMode));
        }

        /**
         * @param assessmentMode Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - You control the timing of patch assessments on a virtual machine. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
         * 
         * @return builder
         * 
         */
        public Builder assessmentMode(LinuxPatchAssessmentMode assessmentMode) {
            return assessmentMode(Either.ofRight(assessmentMode));
        }

        /**
         * @param patchMode Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - The virtual machine&#39;s default patching configuration is used. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
         * 
         * @return builder
         * 
         */
        public Builder patchMode(@Nullable Output<Either<String,LinuxVMGuestPatchMode>> patchMode) {
            $.patchMode = patchMode;
            return this;
        }

        /**
         * @param patchMode Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - The virtual machine&#39;s default patching configuration is used. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
         * 
         * @return builder
         * 
         */
        public Builder patchMode(Either<String,LinuxVMGuestPatchMode> patchMode) {
            return patchMode(Output.of(patchMode));
        }

        /**
         * @param patchMode Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - The virtual machine&#39;s default patching configuration is used. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
         * 
         * @return builder
         * 
         */
        public Builder patchMode(String patchMode) {
            return patchMode(Either.ofLeft(patchMode));
        }

        /**
         * @param patchMode Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - The virtual machine&#39;s default patching configuration is used. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
         * 
         * @return builder
         * 
         */
        public Builder patchMode(LinuxVMGuestPatchMode patchMode) {
            return patchMode(Either.ofRight(patchMode));
        }

        public LinuxPatchSettingsArgs build() {
            return $;
        }
    }

}
