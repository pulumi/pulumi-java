// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.azurenative.appplatform.inputs.NetworkProfileResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Service properties payload
 * 
 */
public final class ClusterResourcePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ClusterResourcePropertiesResponse Empty = new ClusterResourcePropertiesResponse();

    /**
     * Network profile of the Service
     * 
     */
    @Import(name="networkProfile")
    private @Nullable NetworkProfileResponse networkProfile;

    /**
     * @return Network profile of the Service
     * 
     */
    public Optional<NetworkProfileResponse> networkProfile() {
        return Optional.ofNullable(this.networkProfile);
    }

    /**
     * Provisioning state of the Service
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return Provisioning state of the Service
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * ServiceInstanceEntity GUID which uniquely identifies a created resource
     * 
     */
    @Import(name="serviceId", required=true)
    private String serviceId;

    /**
     * @return ServiceInstanceEntity GUID which uniquely identifies a created resource
     * 
     */
    public String serviceId() {
        return this.serviceId;
    }

    /**
     * Version of the Service
     * 
     */
    @Import(name="version", required=true)
    private Integer version;

    /**
     * @return Version of the Service
     * 
     */
    public Integer version() {
        return this.version;
    }

    private ClusterResourcePropertiesResponse() {}

    private ClusterResourcePropertiesResponse(ClusterResourcePropertiesResponse $) {
        this.networkProfile = $.networkProfile;
        this.provisioningState = $.provisioningState;
        this.serviceId = $.serviceId;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterResourcePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterResourcePropertiesResponse $;

        public Builder() {
            $ = new ClusterResourcePropertiesResponse();
        }

        public Builder(ClusterResourcePropertiesResponse defaults) {
            $ = new ClusterResourcePropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkProfile Network profile of the Service
         * 
         * @return builder
         * 
         */
        public Builder networkProfile(@Nullable NetworkProfileResponse networkProfile) {
            $.networkProfile = networkProfile;
            return this;
        }

        /**
         * @param provisioningState Provisioning state of the Service
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param serviceId ServiceInstanceEntity GUID which uniquely identifies a created resource
         * 
         * @return builder
         * 
         */
        public Builder serviceId(String serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        /**
         * @param version Version of the Service
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            $.version = version;
            return this;
        }

        public ClusterResourcePropertiesResponse build() {
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.serviceId = Objects.requireNonNull($.serviceId, "expected parameter 'serviceId' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
