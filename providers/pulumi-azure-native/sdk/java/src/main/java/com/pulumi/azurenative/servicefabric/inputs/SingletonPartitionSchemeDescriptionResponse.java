// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Describes the partition scheme of a singleton-partitioned, or non-partitioned service.
 * 
 */
public final class SingletonPartitionSchemeDescriptionResponse extends com.pulumi.resources.InvokeArgs {

    public static final SingletonPartitionSchemeDescriptionResponse Empty = new SingletonPartitionSchemeDescriptionResponse();

    /**
     * Enumerates the ways that a service can be partitioned.
     * Expected value is &#39;Singleton&#39;.
     * 
     */
    @Import(name="partitionScheme", required=true)
    private String partitionScheme;

    public String partitionScheme() {
        return this.partitionScheme;
    }

    private SingletonPartitionSchemeDescriptionResponse() {}

    private SingletonPartitionSchemeDescriptionResponse(SingletonPartitionSchemeDescriptionResponse $) {
        this.partitionScheme = $.partitionScheme;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SingletonPartitionSchemeDescriptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SingletonPartitionSchemeDescriptionResponse $;

        public Builder() {
            $ = new SingletonPartitionSchemeDescriptionResponse();
        }

        public Builder(SingletonPartitionSchemeDescriptionResponse defaults) {
            $ = new SingletonPartitionSchemeDescriptionResponse(Objects.requireNonNull(defaults));
        }

        public Builder partitionScheme(String partitionScheme) {
            $.partitionScheme = partitionScheme;
            return this;
        }

        public SingletonPartitionSchemeDescriptionResponse build() {
            $.partitionScheme = Codegen.stringProp("partitionScheme").arg($.partitionScheme).require();
            return $;
        }
    }

}
