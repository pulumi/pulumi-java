// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Database connection string information.
 * 
 */
public final class ConnStringInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final ConnStringInfoResponse Empty = new ConnStringInfoResponse();

    /**
     * Connection string value.
     * 
     */
    @Import(name="connectionString")
    private @Nullable String connectionString;

    /**
     * @return Connection string value.
     * 
     */
    public Optional<String> connectionString() {
        return Optional.ofNullable(this.connectionString);
    }

    /**
     * Name of connection string.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of connection string.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Type of database.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return Type of database.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private ConnStringInfoResponse() {}

    private ConnStringInfoResponse(ConnStringInfoResponse $) {
        this.connectionString = $.connectionString;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnStringInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnStringInfoResponse $;

        public Builder() {
            $ = new ConnStringInfoResponse();
        }

        public Builder(ConnStringInfoResponse defaults) {
            $ = new ConnStringInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionString Connection string value.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(@Nullable String connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        /**
         * @param name Name of connection string.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param type Type of database.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public ConnStringInfoResponse build() {
            return $;
        }
    }

}
