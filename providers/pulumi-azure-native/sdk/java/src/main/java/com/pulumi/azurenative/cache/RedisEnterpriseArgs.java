// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cache;

import com.pulumi.azurenative.cache.enums.TlsVersion;
import com.pulumi.azurenative.cache.inputs.EnterpriseSkuArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RedisEnterpriseArgs extends com.pulumi.resources.ResourceArgs {

    public static final RedisEnterpriseArgs Empty = new RedisEnterpriseArgs();

    /**
     * The name of the RedisEnterprise cluster.
     * 
     */
    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    /**
     * @return The name of the RedisEnterprise cluster.
     * 
     */
    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The minimum TLS version for the cluster to support, e.g. &#39;1.2&#39;
     * 
     */
    @Import(name="minimumTlsVersion")
    private @Nullable Output<Either<String,TlsVersion>> minimumTlsVersion;

    /**
     * @return The minimum TLS version for the cluster to support, e.g. &#39;1.2&#39;
     * 
     */
    public Optional<Output<Either<String,TlsVersion>>> minimumTlsVersion() {
        return Optional.ofNullable(this.minimumTlsVersion);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The SKU to create, which affects price, performance, and features.
     * 
     */
    @Import(name="sku", required=true)
    private Output<EnterpriseSkuArgs> sku;

    /**
     * @return The SKU to create, which affects price, performance, and features.
     * 
     */
    public Output<EnterpriseSkuArgs> sku() {
        return this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The Availability Zones where this cluster will be deployed.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    /**
     * @return The Availability Zones where this cluster will be deployed.
     * 
     */
    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private RedisEnterpriseArgs() {}

    private RedisEnterpriseArgs(RedisEnterpriseArgs $) {
        this.clusterName = $.clusterName;
        this.location = $.location;
        this.minimumTlsVersion = $.minimumTlsVersion;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RedisEnterpriseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RedisEnterpriseArgs $;

        public Builder() {
            $ = new RedisEnterpriseArgs();
        }

        public Builder(RedisEnterpriseArgs defaults) {
            $ = new RedisEnterpriseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName The name of the RedisEnterprise cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the RedisEnterprise cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param minimumTlsVersion The minimum TLS version for the cluster to support, e.g. &#39;1.2&#39;
         * 
         * @return builder
         * 
         */
        public Builder minimumTlsVersion(@Nullable Output<Either<String,TlsVersion>> minimumTlsVersion) {
            $.minimumTlsVersion = minimumTlsVersion;
            return this;
        }

        /**
         * @param minimumTlsVersion The minimum TLS version for the cluster to support, e.g. &#39;1.2&#39;
         * 
         * @return builder
         * 
         */
        public Builder minimumTlsVersion(Either<String,TlsVersion> minimumTlsVersion) {
            return minimumTlsVersion(Output.of(minimumTlsVersion));
        }

        /**
         * @param minimumTlsVersion The minimum TLS version for the cluster to support, e.g. &#39;1.2&#39;
         * 
         * @return builder
         * 
         */
        public Builder minimumTlsVersion(String minimumTlsVersion) {
            return minimumTlsVersion(Either.ofLeft(minimumTlsVersion));
        }

        /**
         * @param minimumTlsVersion The minimum TLS version for the cluster to support, e.g. &#39;1.2&#39;
         * 
         * @return builder
         * 
         */
        public Builder minimumTlsVersion(TlsVersion minimumTlsVersion) {
            return minimumTlsVersion(Either.ofRight(minimumTlsVersion));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku The SKU to create, which affects price, performance, and features.
         * 
         * @return builder
         * 
         */
        public Builder sku(Output<EnterpriseSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The SKU to create, which affects price, performance, and features.
         * 
         * @return builder
         * 
         */
        public Builder sku(EnterpriseSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param zones The Availability Zones where this cluster will be deployed.
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones The Availability Zones where this cluster will be deployed.
         * 
         * @return builder
         * 
         */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones The Availability Zones where this cluster will be deployed.
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public RedisEnterpriseArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sku = Objects.requireNonNull($.sku, "expected parameter 'sku' to be non-null");
            return $;
        }
    }

}
