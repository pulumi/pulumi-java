// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Log Analytics destination.
 * 
 */
public final class LogAnalyticsDestinationResponse extends com.pulumi.resources.InvokeArgs {

    public static final LogAnalyticsDestinationResponse Empty = new LogAnalyticsDestinationResponse();

    /**
     * A friendly name for the destination.
     * This name should be unique across all destinations (regardless of type) within the data collection rule.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Customer ID of the Log Analytics workspace.
     * 
     */
    @Import(name="workspaceId", required=true)
    private String workspaceId;

    public String workspaceId() {
        return this.workspaceId;
    }

    /**
     * The resource ID of the Log Analytics workspace.
     * 
     */
    @Import(name="workspaceResourceId")
    private @Nullable String workspaceResourceId;

    public Optional<String> workspaceResourceId() {
        return Optional.ofNullable(this.workspaceResourceId);
    }

    private LogAnalyticsDestinationResponse() {}

    private LogAnalyticsDestinationResponse(LogAnalyticsDestinationResponse $) {
        this.name = $.name;
        this.workspaceId = $.workspaceId;
        this.workspaceResourceId = $.workspaceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogAnalyticsDestinationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogAnalyticsDestinationResponse $;

        public Builder() {
            $ = new LogAnalyticsDestinationResponse();
        }

        public Builder(LogAnalyticsDestinationResponse defaults) {
            $ = new LogAnalyticsDestinationResponse(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceResourceId(@Nullable String workspaceResourceId) {
            $.workspaceResourceId = workspaceResourceId;
            return this;
        }

        public LogAnalyticsDestinationResponse build() {
            $.workspaceId = Objects.requireNonNull($.workspaceId, "expected parameter 'workspaceId' to be non-null");
            return $;
        }
    }

}
