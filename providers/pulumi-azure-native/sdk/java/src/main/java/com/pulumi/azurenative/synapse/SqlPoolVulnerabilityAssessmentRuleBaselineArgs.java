// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse;

import com.pulumi.azurenative.synapse.inputs.SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlPoolVulnerabilityAssessmentRuleBaselineArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlPoolVulnerabilityAssessmentRuleBaselineArgs Empty = new SqlPoolVulnerabilityAssessmentRuleBaselineArgs();

    /**
     * The name of the vulnerability assessment rule baseline (default implies a baseline on a Sql pool level rule and master for workspace level rule).
     * 
     */
    @Import(name="baselineName")
    private @Nullable Output<String> baselineName;

    public Optional<Output<String>> baselineName() {
        return Optional.ofNullable(this.baselineName);
    }

    /**
     * The rule baseline result
     * 
     */
    @Import(name="baselineResults", required=true)
    private Output<List<SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults;

    public Output<List<SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults() {
        return this.baselineResults;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The vulnerability assessment rule ID.
     * 
     */
    @Import(name="ruleId", required=true)
    private Output<String> ruleId;

    public Output<String> ruleId() {
        return this.ruleId;
    }

    /**
     * SQL pool name
     * 
     */
    @Import(name="sqlPoolName", required=true)
    private Output<String> sqlPoolName;

    public Output<String> sqlPoolName() {
        return this.sqlPoolName;
    }

    /**
     * The name of the vulnerability assessment.
     * 
     */
    @Import(name="vulnerabilityAssessmentName", required=true)
    private Output<String> vulnerabilityAssessmentName;

    public Output<String> vulnerabilityAssessmentName() {
        return this.vulnerabilityAssessmentName;
    }

    /**
     * The name of the workspace
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private SqlPoolVulnerabilityAssessmentRuleBaselineArgs() {}

    private SqlPoolVulnerabilityAssessmentRuleBaselineArgs(SqlPoolVulnerabilityAssessmentRuleBaselineArgs $) {
        this.baselineName = $.baselineName;
        this.baselineResults = $.baselineResults;
        this.resourceGroupName = $.resourceGroupName;
        this.ruleId = $.ruleId;
        this.sqlPoolName = $.sqlPoolName;
        this.vulnerabilityAssessmentName = $.vulnerabilityAssessmentName;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlPoolVulnerabilityAssessmentRuleBaselineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlPoolVulnerabilityAssessmentRuleBaselineArgs $;

        public Builder() {
            $ = new SqlPoolVulnerabilityAssessmentRuleBaselineArgs();
        }

        public Builder(SqlPoolVulnerabilityAssessmentRuleBaselineArgs defaults) {
            $ = new SqlPoolVulnerabilityAssessmentRuleBaselineArgs(Objects.requireNonNull(defaults));
        }

        public Builder baselineName(@Nullable Output<String> baselineName) {
            $.baselineName = baselineName;
            return this;
        }

        public Builder baselineName(String baselineName) {
            return baselineName(Output.of(baselineName));
        }

        public Builder baselineResults(Output<List<SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults) {
            $.baselineResults = baselineResults;
            return this;
        }

        public Builder baselineResults(List<SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs> baselineResults) {
            return baselineResults(Output.of(baselineResults));
        }

        public Builder baselineResults(SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs... baselineResults) {
            return baselineResults(List.of(baselineResults));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder ruleId(Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        public Builder sqlPoolName(Output<String> sqlPoolName) {
            $.sqlPoolName = sqlPoolName;
            return this;
        }

        public Builder sqlPoolName(String sqlPoolName) {
            return sqlPoolName(Output.of(sqlPoolName));
        }

        public Builder vulnerabilityAssessmentName(Output<String> vulnerabilityAssessmentName) {
            $.vulnerabilityAssessmentName = vulnerabilityAssessmentName;
            return this;
        }

        public Builder vulnerabilityAssessmentName(String vulnerabilityAssessmentName) {
            return vulnerabilityAssessmentName(Output.of(vulnerabilityAssessmentName));
        }

        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public SqlPoolVulnerabilityAssessmentRuleBaselineArgs build() {
            $.baselineResults = Objects.requireNonNull($.baselineResults, "expected parameter 'baselineResults' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.ruleId = Objects.requireNonNull($.ruleId, "expected parameter 'ruleId' to be non-null");
            $.sqlPoolName = Objects.requireNonNull($.sqlPoolName, "expected parameter 'sqlPoolName' to be non-null");
            $.vulnerabilityAssessmentName = Objects.requireNonNull($.vulnerabilityAssessmentName, "expected parameter 'vulnerabilityAssessmentName' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
