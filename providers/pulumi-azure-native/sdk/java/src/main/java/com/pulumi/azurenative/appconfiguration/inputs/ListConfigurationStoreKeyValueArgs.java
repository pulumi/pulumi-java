// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appconfiguration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListConfigurationStoreKeyValueArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListConfigurationStoreKeyValueArgs Empty = new ListConfigurationStoreKeyValueArgs();

    /**
     * The name of the configuration store.
     * 
     */
    @Import(name="configStoreName", required=true)
    private String configStoreName;

    public String configStoreName() {
        return this.configStoreName;
    }

    /**
     * The key to retrieve.
     * 
     */
    @Import(name="key", required=true)
    private String key;

    public String key() {
        return this.key;
    }

    /**
     * The label of the key.
     * 
     */
    @Import(name="label")
    private @Nullable String label;

    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * The name of the resource group to which the container registry belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    private ListConfigurationStoreKeyValueArgs() {}

    private ListConfigurationStoreKeyValueArgs(ListConfigurationStoreKeyValueArgs $) {
        this.configStoreName = $.configStoreName;
        this.key = $.key;
        this.label = $.label;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListConfigurationStoreKeyValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListConfigurationStoreKeyValueArgs $;

        public Builder() {
            $ = new ListConfigurationStoreKeyValueArgs();
        }

        public Builder(ListConfigurationStoreKeyValueArgs defaults) {
            $ = new ListConfigurationStoreKeyValueArgs(Objects.requireNonNull(defaults));
        }

        public Builder configStoreName(String configStoreName) {
            $.configStoreName = configStoreName;
            return this;
        }

        public Builder key(String key) {
            $.key = key;
            return this;
        }

        public Builder label(@Nullable String label) {
            $.label = label;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public ListConfigurationStoreKeyValueArgs build() {
            $.configStoreName = Objects.requireNonNull($.configStoreName, "expected parameter 'configStoreName' to be non-null");
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
