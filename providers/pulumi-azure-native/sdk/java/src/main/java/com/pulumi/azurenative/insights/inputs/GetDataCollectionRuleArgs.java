// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetDataCollectionRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDataCollectionRuleArgs Empty = new GetDataCollectionRuleArgs();

    /**
     * The name of the data collection rule. The name is case insensitive.
     * 
     */
    @Import(name="dataCollectionRuleName", required=true)
    private Output<String> dataCollectionRuleName;

    /**
     * @return The name of the data collection rule. The name is case insensitive.
     * 
     */
    public Output<String> dataCollectionRuleName() {
        return this.dataCollectionRuleName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetDataCollectionRuleArgs() {}

    private GetDataCollectionRuleArgs(GetDataCollectionRuleArgs $) {
        this.dataCollectionRuleName = $.dataCollectionRuleName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDataCollectionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDataCollectionRuleArgs $;

        public Builder() {
            $ = new GetDataCollectionRuleArgs();
        }

        public Builder(GetDataCollectionRuleArgs defaults) {
            $ = new GetDataCollectionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataCollectionRuleName The name of the data collection rule. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder dataCollectionRuleName(Output<String> dataCollectionRuleName) {
            $.dataCollectionRuleName = dataCollectionRuleName;
            return this;
        }

        /**
         * @param dataCollectionRuleName The name of the data collection rule. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder dataCollectionRuleName(String dataCollectionRuleName) {
            return dataCollectionRuleName(Output.of(dataCollectionRuleName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetDataCollectionRuleArgs build() {
            $.dataCollectionRuleName = Objects.requireNonNull($.dataCollectionRuleName, "expected parameter 'dataCollectionRuleName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
