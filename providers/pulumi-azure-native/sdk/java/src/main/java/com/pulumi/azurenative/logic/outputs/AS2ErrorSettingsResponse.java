// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class AS2ErrorSettingsResponse {
    /**
     * @return The value indicating whether to resend message If MDN is not received.
     * 
     */
    private final Boolean resendIfMDNNotReceived;
    /**
     * @return The value indicating whether to suspend duplicate message.
     * 
     */
    private final Boolean suspendDuplicateMessage;

    @CustomType.Constructor
    private AS2ErrorSettingsResponse(
        @CustomType.Parameter("resendIfMDNNotReceived") Boolean resendIfMDNNotReceived,
        @CustomType.Parameter("suspendDuplicateMessage") Boolean suspendDuplicateMessage) {
        this.resendIfMDNNotReceived = resendIfMDNNotReceived;
        this.suspendDuplicateMessage = suspendDuplicateMessage;
    }

    /**
     * @return The value indicating whether to resend message If MDN is not received.
     * 
     */
    public Boolean resendIfMDNNotReceived() {
        return this.resendIfMDNNotReceived;
    }
    /**
     * @return The value indicating whether to suspend duplicate message.
     * 
     */
    public Boolean suspendDuplicateMessage() {
        return this.suspendDuplicateMessage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AS2ErrorSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean resendIfMDNNotReceived;
        private Boolean suspendDuplicateMessage;

        public Builder() {
    	      // Empty
        }

        public Builder(AS2ErrorSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resendIfMDNNotReceived = defaults.resendIfMDNNotReceived;
    	      this.suspendDuplicateMessage = defaults.suspendDuplicateMessage;
        }

        public Builder resendIfMDNNotReceived(Boolean resendIfMDNNotReceived) {
            this.resendIfMDNNotReceived = Objects.requireNonNull(resendIfMDNNotReceived);
            return this;
        }
        public Builder suspendDuplicateMessage(Boolean suspendDuplicateMessage) {
            this.suspendDuplicateMessage = Objects.requireNonNull(suspendDuplicateMessage);
            return this;
        }        public AS2ErrorSettingsResponse build() {
            return new AS2ErrorSettingsResponse(resendIfMDNNotReceived, suspendDuplicateMessage);
        }
    }
}
