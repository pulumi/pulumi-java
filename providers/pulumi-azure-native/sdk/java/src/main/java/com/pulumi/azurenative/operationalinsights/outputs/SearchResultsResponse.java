// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SearchResultsResponse {
    /**
     * Search results table's Description.
     * 
     */
    private final @Nullable String description;
    /**
     * The timestamp to end the search by (UTC)
     * 
     */
    private final @Nullable String endSearchTime;
    /**
     * Limit the search job to return up to specified number of rows.
     * 
     */
    private final @Nullable Integer limit;
    /**
     * Search job query.
     * 
     */
    private final @Nullable String query;
    /**
     * The table to search data from.
     * 
     */
    private final String sourceTable;
    /**
     * The timestamp to start the search from (UTC)
     * 
     */
    private final @Nullable String startSearchTime;

    @CustomType.Constructor
    private SearchResultsResponse(
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("endSearchTime") @Nullable String endSearchTime,
        @CustomType.Parameter("limit") @Nullable Integer limit,
        @CustomType.Parameter("query") @Nullable String query,
        @CustomType.Parameter("sourceTable") String sourceTable,
        @CustomType.Parameter("startSearchTime") @Nullable String startSearchTime) {
        this.description = description;
        this.endSearchTime = endSearchTime;
        this.limit = limit;
        this.query = query;
        this.sourceTable = sourceTable;
        this.startSearchTime = startSearchTime;
    }

    /**
     * Search results table's Description.
     * 
    */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * The timestamp to end the search by (UTC)
     * 
    */
    public Optional<String> endSearchTime() {
        return Optional.ofNullable(this.endSearchTime);
    }
    /**
     * Limit the search job to return up to specified number of rows.
     * 
    */
    public Optional<Integer> limit() {
        return Optional.ofNullable(this.limit);
    }
    /**
     * Search job query.
     * 
    */
    public Optional<String> query() {
        return Optional.ofNullable(this.query);
    }
    /**
     * The table to search data from.
     * 
    */
    public String sourceTable() {
        return this.sourceTable;
    }
    /**
     * The timestamp to start the search from (UTC)
     * 
    */
    public Optional<String> startSearchTime() {
        return Optional.ofNullable(this.startSearchTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SearchResultsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private @Nullable String endSearchTime;
        private @Nullable Integer limit;
        private @Nullable String query;
        private String sourceTable;
        private @Nullable String startSearchTime;

        public Builder() {
    	      // Empty
        }

        public Builder(SearchResultsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.endSearchTime = defaults.endSearchTime;
    	      this.limit = defaults.limit;
    	      this.query = defaults.query;
    	      this.sourceTable = defaults.sourceTable;
    	      this.startSearchTime = defaults.startSearchTime;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder endSearchTime(@Nullable String endSearchTime) {
            this.endSearchTime = endSearchTime;
            return this;
        }
        public Builder limit(@Nullable Integer limit) {
            this.limit = limit;
            return this;
        }
        public Builder query(@Nullable String query) {
            this.query = query;
            return this;
        }
        public Builder sourceTable(String sourceTable) {
            this.sourceTable = Objects.requireNonNull(sourceTable);
            return this;
        }
        public Builder startSearchTime(@Nullable String startSearchTime) {
            this.startSearchTime = startSearchTime;
            return this;
        }        public SearchResultsResponse build() {
            return new SearchResultsResponse(description, endSearchTime, limit, query, sourceTable, startSearchTime);
        }
    }
}
