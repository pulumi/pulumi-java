// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security;

import com.pulumi.azurenative.security.enums.AssessmentType;
import com.pulumi.azurenative.security.enums.Categories;
import com.pulumi.azurenative.security.enums.ImplementationEffort;
import com.pulumi.azurenative.security.enums.Severity;
import com.pulumi.azurenative.security.enums.Threats;
import com.pulumi.azurenative.security.enums.UserImpact;
import com.pulumi.azurenative.security.inputs.SecurityAssessmentMetadataPartnerDataArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssessmentMetadataInSubscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssessmentMetadataInSubscriptionArgs Empty = new AssessmentMetadataInSubscriptionArgs();

    /**
     * The Assessment Key - Unique key for the assessment type
     * 
     */
    @Import(name="assessmentMetadataName")
    private @Nullable Output<String> assessmentMetadataName;

    /**
     * @return The Assessment Key - Unique key for the assessment type
     * 
     */
    public Optional<Output<String>> assessmentMetadataName() {
        return Optional.ofNullable(this.assessmentMetadataName);
    }

    /**
     * BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition
     * 
     */
    @Import(name="assessmentType", required=true)
    private Output<Either<String,AssessmentType>> assessmentType;

    /**
     * @return BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition
     * 
     */
    public Output<Either<String,AssessmentType>> assessmentType() {
        return this.assessmentType;
    }

    @Import(name="categories")
    private @Nullable Output<List<Either<String,Categories>>> categories;

    public Optional<Output<List<Either<String,Categories>>>> categories() {
        return Optional.ofNullable(this.categories);
    }

    /**
     * Human readable description of the assessment
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Human readable description of the assessment
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * User friendly display name of the assessment
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return User friendly display name of the assessment
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The implementation effort required to remediate this assessment
     * 
     */
    @Import(name="implementationEffort")
    private @Nullable Output<Either<String,ImplementationEffort>> implementationEffort;

    /**
     * @return The implementation effort required to remediate this assessment
     * 
     */
    public Optional<Output<Either<String,ImplementationEffort>>> implementationEffort() {
        return Optional.ofNullable(this.implementationEffort);
    }

    /**
     * Describes the partner that created the assessment
     * 
     */
    @Import(name="partnerData")
    private @Nullable Output<SecurityAssessmentMetadataPartnerDataArgs> partnerData;

    /**
     * @return Describes the partner that created the assessment
     * 
     */
    public Optional<Output<SecurityAssessmentMetadataPartnerDataArgs>> partnerData() {
        return Optional.ofNullable(this.partnerData);
    }

    /**
     * True if this assessment is in preview release status
     * 
     */
    @Import(name="preview")
    private @Nullable Output<Boolean> preview;

    /**
     * @return True if this assessment is in preview release status
     * 
     */
    public Optional<Output<Boolean>> preview() {
        return Optional.ofNullable(this.preview);
    }

    /**
     * Human readable description of what you should do to mitigate this security issue
     * 
     */
    @Import(name="remediationDescription")
    private @Nullable Output<String> remediationDescription;

    /**
     * @return Human readable description of what you should do to mitigate this security issue
     * 
     */
    public Optional<Output<String>> remediationDescription() {
        return Optional.ofNullable(this.remediationDescription);
    }

    /**
     * The severity level of the assessment
     * 
     */
    @Import(name="severity", required=true)
    private Output<Either<String,Severity>> severity;

    /**
     * @return The severity level of the assessment
     * 
     */
    public Output<Either<String,Severity>> severity() {
        return this.severity;
    }

    @Import(name="threats")
    private @Nullable Output<List<Either<String,Threats>>> threats;

    public Optional<Output<List<Either<String,Threats>>>> threats() {
        return Optional.ofNullable(this.threats);
    }

    /**
     * The user impact of the assessment
     * 
     */
    @Import(name="userImpact")
    private @Nullable Output<Either<String,UserImpact>> userImpact;

    /**
     * @return The user impact of the assessment
     * 
     */
    public Optional<Output<Either<String,UserImpact>>> userImpact() {
        return Optional.ofNullable(this.userImpact);
    }

    private AssessmentMetadataInSubscriptionArgs() {}

    private AssessmentMetadataInSubscriptionArgs(AssessmentMetadataInSubscriptionArgs $) {
        this.assessmentMetadataName = $.assessmentMetadataName;
        this.assessmentType = $.assessmentType;
        this.categories = $.categories;
        this.description = $.description;
        this.displayName = $.displayName;
        this.implementationEffort = $.implementationEffort;
        this.partnerData = $.partnerData;
        this.preview = $.preview;
        this.remediationDescription = $.remediationDescription;
        this.severity = $.severity;
        this.threats = $.threats;
        this.userImpact = $.userImpact;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssessmentMetadataInSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssessmentMetadataInSubscriptionArgs $;

        public Builder() {
            $ = new AssessmentMetadataInSubscriptionArgs();
        }

        public Builder(AssessmentMetadataInSubscriptionArgs defaults) {
            $ = new AssessmentMetadataInSubscriptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assessmentMetadataName The Assessment Key - Unique key for the assessment type
         * 
         * @return builder
         * 
         */
        public Builder assessmentMetadataName(@Nullable Output<String> assessmentMetadataName) {
            $.assessmentMetadataName = assessmentMetadataName;
            return this;
        }

        /**
         * @param assessmentMetadataName The Assessment Key - Unique key for the assessment type
         * 
         * @return builder
         * 
         */
        public Builder assessmentMetadataName(String assessmentMetadataName) {
            return assessmentMetadataName(Output.of(assessmentMetadataName));
        }

        /**
         * @param assessmentType BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition
         * 
         * @return builder
         * 
         */
        public Builder assessmentType(Output<Either<String,AssessmentType>> assessmentType) {
            $.assessmentType = assessmentType;
            return this;
        }

        /**
         * @param assessmentType BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition
         * 
         * @return builder
         * 
         */
        public Builder assessmentType(Either<String,AssessmentType> assessmentType) {
            return assessmentType(Output.of(assessmentType));
        }

        /**
         * @param assessmentType BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition
         * 
         * @return builder
         * 
         */
        public Builder assessmentType(String assessmentType) {
            return assessmentType(Either.ofLeft(assessmentType));
        }

        /**
         * @param assessmentType BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition
         * 
         * @return builder
         * 
         */
        public Builder assessmentType(AssessmentType assessmentType) {
            return assessmentType(Either.ofRight(assessmentType));
        }

        public Builder categories(@Nullable Output<List<Either<String,Categories>>> categories) {
            $.categories = categories;
            return this;
        }

        public Builder categories(List<Either<String,Categories>> categories) {
            return categories(Output.of(categories));
        }

        public Builder categories(Either<String,Categories>... categories) {
            return categories(List.of(categories));
        }

        /**
         * @param description Human readable description of the assessment
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Human readable description of the assessment
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName User friendly display name of the assessment
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName User friendly display name of the assessment
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param implementationEffort The implementation effort required to remediate this assessment
         * 
         * @return builder
         * 
         */
        public Builder implementationEffort(@Nullable Output<Either<String,ImplementationEffort>> implementationEffort) {
            $.implementationEffort = implementationEffort;
            return this;
        }

        /**
         * @param implementationEffort The implementation effort required to remediate this assessment
         * 
         * @return builder
         * 
         */
        public Builder implementationEffort(Either<String,ImplementationEffort> implementationEffort) {
            return implementationEffort(Output.of(implementationEffort));
        }

        /**
         * @param implementationEffort The implementation effort required to remediate this assessment
         * 
         * @return builder
         * 
         */
        public Builder implementationEffort(String implementationEffort) {
            return implementationEffort(Either.ofLeft(implementationEffort));
        }

        /**
         * @param implementationEffort The implementation effort required to remediate this assessment
         * 
         * @return builder
         * 
         */
        public Builder implementationEffort(ImplementationEffort implementationEffort) {
            return implementationEffort(Either.ofRight(implementationEffort));
        }

        /**
         * @param partnerData Describes the partner that created the assessment
         * 
         * @return builder
         * 
         */
        public Builder partnerData(@Nullable Output<SecurityAssessmentMetadataPartnerDataArgs> partnerData) {
            $.partnerData = partnerData;
            return this;
        }

        /**
         * @param partnerData Describes the partner that created the assessment
         * 
         * @return builder
         * 
         */
        public Builder partnerData(SecurityAssessmentMetadataPartnerDataArgs partnerData) {
            return partnerData(Output.of(partnerData));
        }

        /**
         * @param preview True if this assessment is in preview release status
         * 
         * @return builder
         * 
         */
        public Builder preview(@Nullable Output<Boolean> preview) {
            $.preview = preview;
            return this;
        }

        /**
         * @param preview True if this assessment is in preview release status
         * 
         * @return builder
         * 
         */
        public Builder preview(Boolean preview) {
            return preview(Output.of(preview));
        }

        /**
         * @param remediationDescription Human readable description of what you should do to mitigate this security issue
         * 
         * @return builder
         * 
         */
        public Builder remediationDescription(@Nullable Output<String> remediationDescription) {
            $.remediationDescription = remediationDescription;
            return this;
        }

        /**
         * @param remediationDescription Human readable description of what you should do to mitigate this security issue
         * 
         * @return builder
         * 
         */
        public Builder remediationDescription(String remediationDescription) {
            return remediationDescription(Output.of(remediationDescription));
        }

        /**
         * @param severity The severity level of the assessment
         * 
         * @return builder
         * 
         */
        public Builder severity(Output<Either<String,Severity>> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity The severity level of the assessment
         * 
         * @return builder
         * 
         */
        public Builder severity(Either<String,Severity> severity) {
            return severity(Output.of(severity));
        }

        /**
         * @param severity The severity level of the assessment
         * 
         * @return builder
         * 
         */
        public Builder severity(String severity) {
            return severity(Either.ofLeft(severity));
        }

        /**
         * @param severity The severity level of the assessment
         * 
         * @return builder
         * 
         */
        public Builder severity(Severity severity) {
            return severity(Either.ofRight(severity));
        }

        public Builder threats(@Nullable Output<List<Either<String,Threats>>> threats) {
            $.threats = threats;
            return this;
        }

        public Builder threats(List<Either<String,Threats>> threats) {
            return threats(Output.of(threats));
        }

        public Builder threats(Either<String,Threats>... threats) {
            return threats(List.of(threats));
        }

        /**
         * @param userImpact The user impact of the assessment
         * 
         * @return builder
         * 
         */
        public Builder userImpact(@Nullable Output<Either<String,UserImpact>> userImpact) {
            $.userImpact = userImpact;
            return this;
        }

        /**
         * @param userImpact The user impact of the assessment
         * 
         * @return builder
         * 
         */
        public Builder userImpact(Either<String,UserImpact> userImpact) {
            return userImpact(Output.of(userImpact));
        }

        /**
         * @param userImpact The user impact of the assessment
         * 
         * @return builder
         * 
         */
        public Builder userImpact(String userImpact) {
            return userImpact(Either.ofLeft(userImpact));
        }

        /**
         * @param userImpact The user impact of the assessment
         * 
         * @return builder
         * 
         */
        public Builder userImpact(UserImpact userImpact) {
            return userImpact(Either.ofRight(userImpact));
        }

        public AssessmentMetadataInSubscriptionArgs build() {
            $.assessmentType = Objects.requireNonNull($.assessmentType, "expected parameter 'assessmentType' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.severity = Objects.requireNonNull($.severity, "expected parameter 'severity' to be non-null");
            return $;
        }
    }

}
