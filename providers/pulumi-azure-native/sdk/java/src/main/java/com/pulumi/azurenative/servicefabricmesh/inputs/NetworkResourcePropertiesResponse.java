// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes properties of a network resource.
 * 
 */
public final class NetworkResourcePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final NetworkResourcePropertiesResponse Empty = new NetworkResourcePropertiesResponse();

    /**
     * User readable description of the network.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return User readable description of the network.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The type of a Service Fabric container network.
     * Expected value is &#39;NetworkResourceProperties&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private String kind;

    /**
     * @return The type of a Service Fabric container network.
     * Expected value is &#39;NetworkResourceProperties&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }

    /**
     * State of the resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return State of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Status of the network.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Status of the network.
     * 
     */
    public String status() {
        return this.status;
    }

    /**
     * Gives additional information about the current status of the network.
     * 
     */
    @Import(name="statusDetails", required=true)
    private String statusDetails;

    /**
     * @return Gives additional information about the current status of the network.
     * 
     */
    public String statusDetails() {
        return this.statusDetails;
    }

    private NetworkResourcePropertiesResponse() {}

    private NetworkResourcePropertiesResponse(NetworkResourcePropertiesResponse $) {
        this.description = $.description;
        this.kind = $.kind;
        this.provisioningState = $.provisioningState;
        this.status = $.status;
        this.statusDetails = $.statusDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkResourcePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkResourcePropertiesResponse $;

        public Builder() {
            $ = new NetworkResourcePropertiesResponse();
        }

        public Builder(NetworkResourcePropertiesResponse defaults) {
            $ = new NetworkResourcePropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param description User readable description of the network.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param kind The type of a Service Fabric container network.
         * Expected value is &#39;NetworkResourceProperties&#39;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param provisioningState State of the resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param status Status of the network.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        /**
         * @param statusDetails Gives additional information about the current status of the network.
         * 
         * @return builder
         * 
         */
        public Builder statusDetails(String statusDetails) {
            $.statusDetails = statusDetails;
            return this;
        }

        public NetworkResourcePropertiesResponse build() {
            $.kind = Codegen.stringProp("kind").arg($.kind).require();
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.statusDetails = Objects.requireNonNull($.statusDetails, "expected parameter 'statusDetails' to be non-null");
            return $;
        }
    }

}
