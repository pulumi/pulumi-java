// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerRegistryResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContainerRegistryResponse Empty = new ContainerRegistryResponse();

    @Import(name="password", required=true)
    private String password;

    public String password() {
        return this.password;
    }

    /**
     * If omitted, the default is &#34;docker.io&#34;.
     * 
     */
    @Import(name="registryServer")
    private @Nullable String registryServer;

    public Optional<String> registryServer() {
        return Optional.ofNullable(this.registryServer);
    }

    @Import(name="userName", required=true)
    private String userName;

    public String userName() {
        return this.userName;
    }

    private ContainerRegistryResponse() {}

    private ContainerRegistryResponse(ContainerRegistryResponse $) {
        this.password = $.password;
        this.registryServer = $.registryServer;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerRegistryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerRegistryResponse $;

        public Builder() {
            $ = new ContainerRegistryResponse();
        }

        public Builder(ContainerRegistryResponse defaults) {
            $ = new ContainerRegistryResponse(Objects.requireNonNull(defaults));
        }

        public Builder password(String password) {
            $.password = password;
            return this;
        }

        public Builder registryServer(@Nullable String registryServer) {
            $.registryServer = registryServer;
            return this;
        }

        public Builder userName(String userName) {
            $.userName = userName;
            return this;
        }

        public ContainerRegistryResponse build() {
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
