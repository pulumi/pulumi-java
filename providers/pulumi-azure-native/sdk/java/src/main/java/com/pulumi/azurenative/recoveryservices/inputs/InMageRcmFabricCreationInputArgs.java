// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.IdentityProviderInputArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * InMageRcm fabric provider specific settings.
 * 
 */
public final class InMageRcmFabricCreationInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final InMageRcmFabricCreationInputArgs Empty = new InMageRcmFabricCreationInputArgs();

    /**
     * The certificate to be used for AAD authentication.
     * 
     */
    @Import(name="authCertificate")
    private @Nullable Output<String> authCertificate;

    /**
     * @return The certificate to be used for AAD authentication.
     * 
     */
    public Optional<Output<String>> authCertificate() {
        return Optional.ofNullable(this.authCertificate);
    }

    /**
     * Gets the class type.
     * Expected value is &#39;InMageRcm&#39;.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return Gets the class type.
     * Expected value is &#39;InMageRcm&#39;.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * The ARM Id of the physical site.
     * 
     */
    @Import(name="physicalSiteId")
    private @Nullable Output<String> physicalSiteId;

    /**
     * @return The ARM Id of the physical site.
     * 
     */
    public Optional<Output<String>> physicalSiteId() {
        return Optional.ofNullable(this.physicalSiteId);
    }

    /**
     * The identity provider input for source agent authentication.
     * 
     */
    @Import(name="sourceAgentIdentity")
    private @Nullable Output<IdentityProviderInputArgs> sourceAgentIdentity;

    /**
     * @return The identity provider input for source agent authentication.
     * 
     */
    public Optional<Output<IdentityProviderInputArgs>> sourceAgentIdentity() {
        return Optional.ofNullable(this.sourceAgentIdentity);
    }

    /**
     * The ARM Id of the VMware site.
     * 
     */
    @Import(name="vmwareSiteId")
    private @Nullable Output<String> vmwareSiteId;

    /**
     * @return The ARM Id of the VMware site.
     * 
     */
    public Optional<Output<String>> vmwareSiteId() {
        return Optional.ofNullable(this.vmwareSiteId);
    }

    private InMageRcmFabricCreationInputArgs() {}

    private InMageRcmFabricCreationInputArgs(InMageRcmFabricCreationInputArgs $) {
        this.authCertificate = $.authCertificate;
        this.instanceType = $.instanceType;
        this.physicalSiteId = $.physicalSiteId;
        this.sourceAgentIdentity = $.sourceAgentIdentity;
        this.vmwareSiteId = $.vmwareSiteId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InMageRcmFabricCreationInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InMageRcmFabricCreationInputArgs $;

        public Builder() {
            $ = new InMageRcmFabricCreationInputArgs();
        }

        public Builder(InMageRcmFabricCreationInputArgs defaults) {
            $ = new InMageRcmFabricCreationInputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authCertificate The certificate to be used for AAD authentication.
         * 
         * @return builder
         * 
         */
        public Builder authCertificate(@Nullable Output<String> authCertificate) {
            $.authCertificate = authCertificate;
            return this;
        }

        /**
         * @param authCertificate The certificate to be used for AAD authentication.
         * 
         * @return builder
         * 
         */
        public Builder authCertificate(String authCertificate) {
            return authCertificate(Output.of(authCertificate));
        }

        /**
         * @param instanceType Gets the class type.
         * Expected value is &#39;InMageRcm&#39;.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType Gets the class type.
         * Expected value is &#39;InMageRcm&#39;.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param physicalSiteId The ARM Id of the physical site.
         * 
         * @return builder
         * 
         */
        public Builder physicalSiteId(@Nullable Output<String> physicalSiteId) {
            $.physicalSiteId = physicalSiteId;
            return this;
        }

        /**
         * @param physicalSiteId The ARM Id of the physical site.
         * 
         * @return builder
         * 
         */
        public Builder physicalSiteId(String physicalSiteId) {
            return physicalSiteId(Output.of(physicalSiteId));
        }

        /**
         * @param sourceAgentIdentity The identity provider input for source agent authentication.
         * 
         * @return builder
         * 
         */
        public Builder sourceAgentIdentity(@Nullable Output<IdentityProviderInputArgs> sourceAgentIdentity) {
            $.sourceAgentIdentity = sourceAgentIdentity;
            return this;
        }

        /**
         * @param sourceAgentIdentity The identity provider input for source agent authentication.
         * 
         * @return builder
         * 
         */
        public Builder sourceAgentIdentity(IdentityProviderInputArgs sourceAgentIdentity) {
            return sourceAgentIdentity(Output.of(sourceAgentIdentity));
        }

        /**
         * @param vmwareSiteId The ARM Id of the VMware site.
         * 
         * @return builder
         * 
         */
        public Builder vmwareSiteId(@Nullable Output<String> vmwareSiteId) {
            $.vmwareSiteId = vmwareSiteId;
            return this;
        }

        /**
         * @param vmwareSiteId The ARM Id of the VMware site.
         * 
         * @return builder
         * 
         */
        public Builder vmwareSiteId(String vmwareSiteId) {
            return vmwareSiteId(Output.of(vmwareSiteId));
        }

        public InMageRcmFabricCreationInputArgs build() {
            $.instanceType = Codegen.stringProp("instanceType").output().arg($.instanceType).getNullable();
            return $;
        }
    }

}
