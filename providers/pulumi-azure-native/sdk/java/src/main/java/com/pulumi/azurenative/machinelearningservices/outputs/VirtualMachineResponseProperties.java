// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.VirtualMachineSshCredentialsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualMachineResponseProperties {
    /**
     * Public IP address of the virtual machine.
     * 
     */
    private final @Nullable String address;
    /**
     * Admin credentials for virtual machine
     * 
     */
    private final @Nullable VirtualMachineSshCredentialsResponse administratorAccount;
    /**
     * Port open for ssh connections.
     * 
     */
    private final @Nullable Integer sshPort;
    /**
     * Virtual Machine size
     * 
     */
    private final @Nullable String virtualMachineSize;

    @CustomType.Constructor
    private VirtualMachineResponseProperties(
        @CustomType.Parameter("address") @Nullable String address,
        @CustomType.Parameter("administratorAccount") @Nullable VirtualMachineSshCredentialsResponse administratorAccount,
        @CustomType.Parameter("sshPort") @Nullable Integer sshPort,
        @CustomType.Parameter("virtualMachineSize") @Nullable String virtualMachineSize) {
        this.address = address;
        this.administratorAccount = administratorAccount;
        this.sshPort = sshPort;
        this.virtualMachineSize = virtualMachineSize;
    }

    /**
     * Public IP address of the virtual machine.
     * 
    */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    /**
     * Admin credentials for virtual machine
     * 
    */
    public Optional<VirtualMachineSshCredentialsResponse> administratorAccount() {
        return Optional.ofNullable(this.administratorAccount);
    }
    /**
     * Port open for ssh connections.
     * 
    */
    public Optional<Integer> sshPort() {
        return Optional.ofNullable(this.sshPort);
    }
    /**
     * Virtual Machine size
     * 
    */
    public Optional<String> virtualMachineSize() {
        return Optional.ofNullable(this.virtualMachineSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String address;
        private @Nullable VirtualMachineSshCredentialsResponse administratorAccount;
        private @Nullable Integer sshPort;
        private @Nullable String virtualMachineSize;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineResponseProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.administratorAccount = defaults.administratorAccount;
    	      this.sshPort = defaults.sshPort;
    	      this.virtualMachineSize = defaults.virtualMachineSize;
        }

        public Builder address(@Nullable String address) {
            this.address = address;
            return this;
        }
        public Builder administratorAccount(@Nullable VirtualMachineSshCredentialsResponse administratorAccount) {
            this.administratorAccount = administratorAccount;
            return this;
        }
        public Builder sshPort(@Nullable Integer sshPort) {
            this.sshPort = sshPort;
            return this;
        }
        public Builder virtualMachineSize(@Nullable String virtualMachineSize) {
            this.virtualMachineSize = virtualMachineSize;
            return this;
        }        public VirtualMachineResponseProperties build() {
            return new VirtualMachineResponseProperties(address, administratorAccount, sshPort, virtualMachineSize);
        }
    }
}
