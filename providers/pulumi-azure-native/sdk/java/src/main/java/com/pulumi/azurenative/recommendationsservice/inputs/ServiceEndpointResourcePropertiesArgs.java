// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recommendationsservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * ServiceEndpoint resource properties.
 * 
 */
public final class ServiceEndpointResourcePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceEndpointResourcePropertiesArgs Empty = new ServiceEndpointResourcePropertiesArgs();

    /**
     * ServiceEndpoint pre-allocated capacity controls the maximum requests-per-second allowed for that endpoint. Only applicable when Account configuration is Capacity.
     * 
     */
    @Import(name="preAllocatedCapacity")
    private @Nullable Output<Integer> preAllocatedCapacity;

    /**
     * @return ServiceEndpoint pre-allocated capacity controls the maximum requests-per-second allowed for that endpoint. Only applicable when Account configuration is Capacity.
     * 
     */
    public Optional<Output<Integer>> preAllocatedCapacity() {
        return Optional.ofNullable(this.preAllocatedCapacity);
    }

    private ServiceEndpointResourcePropertiesArgs() {}

    private ServiceEndpointResourcePropertiesArgs(ServiceEndpointResourcePropertiesArgs $) {
        this.preAllocatedCapacity = $.preAllocatedCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEndpointResourcePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEndpointResourcePropertiesArgs $;

        public Builder() {
            $ = new ServiceEndpointResourcePropertiesArgs();
        }

        public Builder(ServiceEndpointResourcePropertiesArgs defaults) {
            $ = new ServiceEndpointResourcePropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param preAllocatedCapacity ServiceEndpoint pre-allocated capacity controls the maximum requests-per-second allowed for that endpoint. Only applicable when Account configuration is Capacity.
         * 
         * @return builder
         * 
         */
        public Builder preAllocatedCapacity(@Nullable Output<Integer> preAllocatedCapacity) {
            $.preAllocatedCapacity = preAllocatedCapacity;
            return this;
        }

        /**
         * @param preAllocatedCapacity ServiceEndpoint pre-allocated capacity controls the maximum requests-per-second allowed for that endpoint. Only applicable when Account configuration is Capacity.
         * 
         * @return builder
         * 
         */
        public Builder preAllocatedCapacity(Integer preAllocatedCapacity) {
            return preAllocatedCapacity(Output.of(preAllocatedCapacity));
        }

        public ServiceEndpointResourcePropertiesArgs build() {
            return $;
        }
    }

}
