// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.ExpressRouteCircuitPeeringState;
import com.pulumi.azurenative.network.inputs.ExpressRouteCircuitPeeringConfigArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Contains IPv6 peering config.
 * 
 */
public final class Ipv6ExpressRouteCircuitPeeringConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final Ipv6ExpressRouteCircuitPeeringConfigArgs Empty = new Ipv6ExpressRouteCircuitPeeringConfigArgs();

    /**
     * The Microsoft peering configuration.
     * 
     */
    @Import(name="microsoftPeeringConfig")
    private @Nullable Output<ExpressRouteCircuitPeeringConfigArgs> microsoftPeeringConfig;

    public Optional<Output<ExpressRouteCircuitPeeringConfigArgs>> microsoftPeeringConfig() {
        return Optional.ofNullable(this.microsoftPeeringConfig);
    }

    /**
     * The primary address prefix.
     * 
     */
    @Import(name="primaryPeerAddressPrefix")
    private @Nullable Output<String> primaryPeerAddressPrefix;

    public Optional<Output<String>> primaryPeerAddressPrefix() {
        return Optional.ofNullable(this.primaryPeerAddressPrefix);
    }

    /**
     * The reference to the RouteFilter resource.
     * 
     */
    @Import(name="routeFilter")
    private @Nullable Output<SubResourceArgs> routeFilter;

    public Optional<Output<SubResourceArgs>> routeFilter() {
        return Optional.ofNullable(this.routeFilter);
    }

    /**
     * The secondary address prefix.
     * 
     */
    @Import(name="secondaryPeerAddressPrefix")
    private @Nullable Output<String> secondaryPeerAddressPrefix;

    public Optional<Output<String>> secondaryPeerAddressPrefix() {
        return Optional.ofNullable(this.secondaryPeerAddressPrefix);
    }

    /**
     * The state of peering.
     * 
     */
    @Import(name="state")
    private @Nullable Output<Either<String,ExpressRouteCircuitPeeringState>> state;

    public Optional<Output<Either<String,ExpressRouteCircuitPeeringState>>> state() {
        return Optional.ofNullable(this.state);
    }

    private Ipv6ExpressRouteCircuitPeeringConfigArgs() {}

    private Ipv6ExpressRouteCircuitPeeringConfigArgs(Ipv6ExpressRouteCircuitPeeringConfigArgs $) {
        this.microsoftPeeringConfig = $.microsoftPeeringConfig;
        this.primaryPeerAddressPrefix = $.primaryPeerAddressPrefix;
        this.routeFilter = $.routeFilter;
        this.secondaryPeerAddressPrefix = $.secondaryPeerAddressPrefix;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Ipv6ExpressRouteCircuitPeeringConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Ipv6ExpressRouteCircuitPeeringConfigArgs $;

        public Builder() {
            $ = new Ipv6ExpressRouteCircuitPeeringConfigArgs();
        }

        public Builder(Ipv6ExpressRouteCircuitPeeringConfigArgs defaults) {
            $ = new Ipv6ExpressRouteCircuitPeeringConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder microsoftPeeringConfig(@Nullable Output<ExpressRouteCircuitPeeringConfigArgs> microsoftPeeringConfig) {
            $.microsoftPeeringConfig = microsoftPeeringConfig;
            return this;
        }

        public Builder microsoftPeeringConfig(ExpressRouteCircuitPeeringConfigArgs microsoftPeeringConfig) {
            return microsoftPeeringConfig(Output.of(microsoftPeeringConfig));
        }

        public Builder primaryPeerAddressPrefix(@Nullable Output<String> primaryPeerAddressPrefix) {
            $.primaryPeerAddressPrefix = primaryPeerAddressPrefix;
            return this;
        }

        public Builder primaryPeerAddressPrefix(String primaryPeerAddressPrefix) {
            return primaryPeerAddressPrefix(Output.of(primaryPeerAddressPrefix));
        }

        public Builder routeFilter(@Nullable Output<SubResourceArgs> routeFilter) {
            $.routeFilter = routeFilter;
            return this;
        }

        public Builder routeFilter(SubResourceArgs routeFilter) {
            return routeFilter(Output.of(routeFilter));
        }

        public Builder secondaryPeerAddressPrefix(@Nullable Output<String> secondaryPeerAddressPrefix) {
            $.secondaryPeerAddressPrefix = secondaryPeerAddressPrefix;
            return this;
        }

        public Builder secondaryPeerAddressPrefix(String secondaryPeerAddressPrefix) {
            return secondaryPeerAddressPrefix(Output.of(secondaryPeerAddressPrefix));
        }

        public Builder state(@Nullable Output<Either<String,ExpressRouteCircuitPeeringState>> state) {
            $.state = state;
            return this;
        }

        public Builder state(Either<String,ExpressRouteCircuitPeeringState> state) {
            return state(Output.of(state));
        }

        public Builder state(String state) {
            return state(Either.ofLeft(state));
        }

        public Builder state(ExpressRouteCircuitPeeringState state) {
            return state(Either.ofRight(state));
        }

        public Ipv6ExpressRouteCircuitPeeringConfigArgs build() {
            return $;
        }
    }

}
