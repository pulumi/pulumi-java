// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.inputs;

import com.pulumi.azurenative.labservices.inputs.VmStateDetailsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details of a Reference Vm
 * 
 */
public final class ReferenceVmResponse extends com.pulumi.resources.InvokeArgs {

    public static final ReferenceVmResponse Empty = new ReferenceVmResponse();

    /**
     * The password of the virtual machine. This will be set to null in GET resource API
     * 
     */
    @Import(name="password")
    private @Nullable String password;

    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The username of the virtual machine
     * 
     */
    @Import(name="userName", required=true)
    private String userName;

    public String userName() {
        return this.userName;
    }

    /**
     * VM resource Id for the environment
     * 
     */
    @Import(name="vmResourceId", required=true)
    private String vmResourceId;

    public String vmResourceId() {
        return this.vmResourceId;
    }

    /**
     * The state details for the reference virtual machine.
     * 
     */
    @Import(name="vmStateDetails", required=true)
    private VmStateDetailsResponse vmStateDetails;

    public VmStateDetailsResponse vmStateDetails() {
        return this.vmStateDetails;
    }

    private ReferenceVmResponse() {}

    private ReferenceVmResponse(ReferenceVmResponse $) {
        this.password = $.password;
        this.userName = $.userName;
        this.vmResourceId = $.vmResourceId;
        this.vmStateDetails = $.vmStateDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReferenceVmResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReferenceVmResponse $;

        public Builder() {
            $ = new ReferenceVmResponse();
        }

        public Builder(ReferenceVmResponse defaults) {
            $ = new ReferenceVmResponse(Objects.requireNonNull(defaults));
        }

        public Builder password(@Nullable String password) {
            $.password = password;
            return this;
        }

        public Builder userName(String userName) {
            $.userName = userName;
            return this;
        }

        public Builder vmResourceId(String vmResourceId) {
            $.vmResourceId = vmResourceId;
            return this;
        }

        public Builder vmStateDetails(VmStateDetailsResponse vmStateDetails) {
            $.vmStateDetails = vmStateDetails;
            return this;
        }

        public ReferenceVmResponse build() {
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            $.vmResourceId = Objects.requireNonNull($.vmResourceId, "expected parameter 'vmResourceId' to be non-null");
            $.vmStateDetails = Objects.requireNonNull($.vmStateDetails, "expected parameter 'vmStateDetails' to be non-null");
            return $;
        }
    }

}
