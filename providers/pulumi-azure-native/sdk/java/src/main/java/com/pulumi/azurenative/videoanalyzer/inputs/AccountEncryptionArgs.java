// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.inputs;

import com.pulumi.azurenative.videoanalyzer.enums.AccountEncryptionKeyType;
import com.pulumi.azurenative.videoanalyzer.inputs.KeyVaultPropertiesArgs;
import com.pulumi.azurenative.videoanalyzer.inputs.ResourceIdentityArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines how the Video Analyzer account is (optionally) encrypted.
 * 
 */
public final class AccountEncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountEncryptionArgs Empty = new AccountEncryptionArgs();

    /**
     * The Key Vault identity.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<ResourceIdentityArgs> identity;

    public Output<ResourceIdentityArgs> identity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * The properties of the key used to encrypt the account.
     * 
     */
    @Import(name="keyVaultProperties")
      private final @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties;

    public Output<KeyVaultPropertiesArgs> keyVaultProperties() {
        return this.keyVaultProperties == null ? Codegen.empty() : this.keyVaultProperties;
    }

    /**
     * The type of key used to encrypt the Account Key.
     * 
     */
    @Import(name="type", required=true)
      private final Output<Either<String,AccountEncryptionKeyType>> type;

    public Output<Either<String,AccountEncryptionKeyType>> type() {
        return this.type;
    }

    public AccountEncryptionArgs(
        @Nullable Output<ResourceIdentityArgs> identity,
        @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties,
        Output<Either<String,AccountEncryptionKeyType>> type) {
        this.identity = identity;
        this.keyVaultProperties = keyVaultProperties;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private AccountEncryptionArgs() {
        this.identity = Codegen.empty();
        this.keyVaultProperties = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountEncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ResourceIdentityArgs> identity;
        private @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties;
        private Output<Either<String,AccountEncryptionKeyType>> type;

        public Builder() {
    	      // Empty
        }

        public Builder(AccountEncryptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
    	      this.keyVaultProperties = defaults.keyVaultProperties;
    	      this.type = defaults.type;
        }

        public Builder identity(@Nullable Output<ResourceIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable ResourceIdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder keyVaultProperties(@Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties) {
            this.keyVaultProperties = keyVaultProperties;
            return this;
        }
        public Builder keyVaultProperties(@Nullable KeyVaultPropertiesArgs keyVaultProperties) {
            this.keyVaultProperties = Codegen.ofNullable(keyVaultProperties);
            return this;
        }
        public Builder type(Output<Either<String,AccountEncryptionKeyType>> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(Either<String,AccountEncryptionKeyType> type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public AccountEncryptionArgs build() {
            return new AccountEncryptionArgs(identity, keyVaultProperties, type);
        }
    }
}
