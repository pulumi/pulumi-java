// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Filter that is applied to packet capture request. Multiple filters can be applied.
 * 
 */
public final class PacketCaptureFilterResponse extends com.pulumi.resources.InvokeArgs {

    public static final PacketCaptureFilterResponse Empty = new PacketCaptureFilterResponse();

    /**
     * Local IP Address to be filtered on. Notation: &#34;127.0.0.1&#34; for single address entry. &#34;127.0.0.1-127.0.0.255&#34; for range. &#34;127.0.0.1;127.0.0.5&#34;? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    @Import(name="localIPAddress")
    private @Nullable String localIPAddress;

    /**
     * @return Local IP Address to be filtered on. Notation: &#34;127.0.0.1&#34; for single address entry. &#34;127.0.0.1-127.0.0.255&#34; for range. &#34;127.0.0.1;127.0.0.5&#34;? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    public Optional<String> localIPAddress() {
        return Optional.ofNullable(this.localIPAddress);
    }

    /**
     * Local port to be filtered on. Notation: &#34;80&#34; for single port entry.&#34;80-85&#34; for range. &#34;80;443;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    @Import(name="localPort")
    private @Nullable String localPort;

    /**
     * @return Local port to be filtered on. Notation: &#34;80&#34; for single port entry.&#34;80-85&#34; for range. &#34;80;443;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    public Optional<String> localPort() {
        return Optional.ofNullable(this.localPort);
    }

    /**
     * Protocol to be filtered on.
     * 
     */
    @Import(name="protocol")
    private @Nullable String protocol;

    /**
     * @return Protocol to be filtered on.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Local IP Address to be filtered on. Notation: &#34;127.0.0.1&#34; for single address entry. &#34;127.0.0.1-127.0.0.255&#34; for range. &#34;127.0.0.1;127.0.0.5;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    @Import(name="remoteIPAddress")
    private @Nullable String remoteIPAddress;

    /**
     * @return Local IP Address to be filtered on. Notation: &#34;127.0.0.1&#34; for single address entry. &#34;127.0.0.1-127.0.0.255&#34; for range. &#34;127.0.0.1;127.0.0.5;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    public Optional<String> remoteIPAddress() {
        return Optional.ofNullable(this.remoteIPAddress);
    }

    /**
     * Remote port to be filtered on. Notation: &#34;80&#34; for single port entry.&#34;80-85&#34; for range. &#34;80;443;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    @Import(name="remotePort")
    private @Nullable String remotePort;

    /**
     * @return Remote port to be filtered on. Notation: &#34;80&#34; for single port entry.&#34;80-85&#34; for range. &#34;80;443;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    public Optional<String> remotePort() {
        return Optional.ofNullable(this.remotePort);
    }

    private PacketCaptureFilterResponse() {}

    private PacketCaptureFilterResponse(PacketCaptureFilterResponse $) {
        this.localIPAddress = $.localIPAddress;
        this.localPort = $.localPort;
        this.protocol = $.protocol;
        this.remoteIPAddress = $.remoteIPAddress;
        this.remotePort = $.remotePort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PacketCaptureFilterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PacketCaptureFilterResponse $;

        public Builder() {
            $ = new PacketCaptureFilterResponse();
        }

        public Builder(PacketCaptureFilterResponse defaults) {
            $ = new PacketCaptureFilterResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param localIPAddress Local IP Address to be filtered on. Notation: &#34;127.0.0.1&#34; for single address entry. &#34;127.0.0.1-127.0.0.255&#34; for range. &#34;127.0.0.1;127.0.0.5&#34;? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         * 
         * @return builder
         * 
         */
        public Builder localIPAddress(@Nullable String localIPAddress) {
            $.localIPAddress = localIPAddress;
            return this;
        }

        /**
         * @param localPort Local port to be filtered on. Notation: &#34;80&#34; for single port entry.&#34;80-85&#34; for range. &#34;80;443;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         * 
         * @return builder
         * 
         */
        public Builder localPort(@Nullable String localPort) {
            $.localPort = localPort;
            return this;
        }

        /**
         * @param protocol Protocol to be filtered on.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable String protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param remoteIPAddress Local IP Address to be filtered on. Notation: &#34;127.0.0.1&#34; for single address entry. &#34;127.0.0.1-127.0.0.255&#34; for range. &#34;127.0.0.1;127.0.0.5;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         * 
         * @return builder
         * 
         */
        public Builder remoteIPAddress(@Nullable String remoteIPAddress) {
            $.remoteIPAddress = remoteIPAddress;
            return this;
        }

        /**
         * @param remotePort Remote port to be filtered on. Notation: &#34;80&#34; for single port entry.&#34;80-85&#34; for range. &#34;80;443;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
         * 
         * @return builder
         * 
         */
        public Builder remotePort(@Nullable String remotePort) {
            $.remotePort = remotePort;
            return this;
        }

        public PacketCaptureFilterResponse build() {
            $.protocol = Codegen.stringProp("protocol").arg($.protocol).def("Any").getNullable();
            return $;
        }
    }

}
