// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows).
 * 
 */
public final class DiskEncryptionKeyInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiskEncryptionKeyInfoArgs Empty = new DiskEncryptionKeyInfoArgs();

    /**
     * The KeyVault resource ARM Id for secret.
     * 
     */
    @Import(name="keyVaultResourceArmId")
    private @Nullable Output<String> keyVaultResourceArmId;

    /**
     * @return The KeyVault resource ARM Id for secret.
     * 
     */
    public Optional<Output<String>> keyVaultResourceArmId() {
        return Optional.ofNullable(this.keyVaultResourceArmId);
    }

    /**
     * The secret URL / identifier.
     * 
     */
    @Import(name="secretIdentifier")
    private @Nullable Output<String> secretIdentifier;

    /**
     * @return The secret URL / identifier.
     * 
     */
    public Optional<Output<String>> secretIdentifier() {
        return Optional.ofNullable(this.secretIdentifier);
    }

    private DiskEncryptionKeyInfoArgs() {}

    private DiskEncryptionKeyInfoArgs(DiskEncryptionKeyInfoArgs $) {
        this.keyVaultResourceArmId = $.keyVaultResourceArmId;
        this.secretIdentifier = $.secretIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskEncryptionKeyInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskEncryptionKeyInfoArgs $;

        public Builder() {
            $ = new DiskEncryptionKeyInfoArgs();
        }

        public Builder(DiskEncryptionKeyInfoArgs defaults) {
            $ = new DiskEncryptionKeyInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyVaultResourceArmId The KeyVault resource ARM Id for secret.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultResourceArmId(@Nullable Output<String> keyVaultResourceArmId) {
            $.keyVaultResourceArmId = keyVaultResourceArmId;
            return this;
        }

        /**
         * @param keyVaultResourceArmId The KeyVault resource ARM Id for secret.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultResourceArmId(String keyVaultResourceArmId) {
            return keyVaultResourceArmId(Output.of(keyVaultResourceArmId));
        }

        /**
         * @param secretIdentifier The secret URL / identifier.
         * 
         * @return builder
         * 
         */
        public Builder secretIdentifier(@Nullable Output<String> secretIdentifier) {
            $.secretIdentifier = secretIdentifier;
            return this;
        }

        /**
         * @param secretIdentifier The secret URL / identifier.
         * 
         * @return builder
         * 
         */
        public Builder secretIdentifier(String secretIdentifier) {
            return secretIdentifier(Output.of(secretIdentifier));
        }

        public DiskEncryptionKeyInfoArgs build() {
            return $;
        }
    }

}
