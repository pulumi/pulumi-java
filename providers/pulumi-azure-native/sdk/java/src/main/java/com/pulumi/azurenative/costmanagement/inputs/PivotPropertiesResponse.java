// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Each pivot must contain a &#39;type&#39; and &#39;name&#39;.
 * 
 */
public final class PivotPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final PivotPropertiesResponse Empty = new PivotPropertiesResponse();

    /**
     * Data field to show in view.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Data field to show in view.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Data type to show in view.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return Data type to show in view.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private PivotPropertiesResponse() {}

    private PivotPropertiesResponse(PivotPropertiesResponse $) {
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PivotPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PivotPropertiesResponse $;

        public Builder() {
            $ = new PivotPropertiesResponse();
        }

        public Builder(PivotPropertiesResponse defaults) {
            $ = new PivotPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Data field to show in view.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param type Data type to show in view.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public PivotPropertiesResponse build() {
            return $;
        }
    }

}
