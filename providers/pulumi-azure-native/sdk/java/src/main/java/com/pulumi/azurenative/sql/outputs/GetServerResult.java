// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.outputs;

import com.pulumi.azurenative.sql.outputs.ResourceIdentityResponse;
import com.pulumi.azurenative.sql.outputs.ServerExternalAdministratorResponse;
import com.pulumi.azurenative.sql.outputs.ServerPrivateEndpointConnectionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServerResult {
    /**
     * Administrator username for the server. Once created it cannot be changed.
     * 
     */
    private final @Nullable String administratorLogin;
    /**
     * The Azure Active Directory identity of the server.
     * 
     */
    private final @Nullable ServerExternalAdministratorResponse administrators;
    /**
     * The fully qualified domain name of the server.
     * 
     */
    private final String fullyQualifiedDomainName;
    /**
     * Resource ID.
     * 
     */
    private final String id;
    /**
     * The Azure Active Directory identity of the server.
     * 
     */
    private final @Nullable ResourceIdentityResponse identity;
    /**
     * A CMK URI of the key to use for encryption.
     * 
     */
    private final @Nullable String keyId;
    /**
     * Kind of sql server. This is metadata used for the Azure portal experience.
     * 
     */
    private final String kind;
    /**
     * Resource location.
     * 
     */
    private final String location;
    /**
     * Minimal TLS version. Allowed values: &#39;1.0&#39;, &#39;1.1&#39;, &#39;1.2&#39;
     * 
     */
    private final @Nullable String minimalTlsVersion;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * The resource id of a user assigned identity to be used by default.
     * 
     */
    private final @Nullable String primaryUserAssignedIdentityId;
    /**
     * List of private endpoint connections on a server
     * 
     */
    private final List<ServerPrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
     */
    private final @Nullable String publicNetworkAccess;
    /**
     * The state of the server.
     * 
     */
    private final String state;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Resource type.
     * 
     */
    private final String type;
    /**
     * The version of the server.
     * 
     */
    private final @Nullable String version;
    /**
     * Whether or not existing server has a workspace created and if it allows connection from workspace
     * 
     */
    private final String workspaceFeature;

    @CustomType.Constructor
    private GetServerResult(
        @CustomType.Parameter("administratorLogin") @Nullable String administratorLogin,
        @CustomType.Parameter("administrators") @Nullable ServerExternalAdministratorResponse administrators,
        @CustomType.Parameter("fullyQualifiedDomainName") String fullyQualifiedDomainName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identity") @Nullable ResourceIdentityResponse identity,
        @CustomType.Parameter("keyId") @Nullable String keyId,
        @CustomType.Parameter("kind") String kind,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("minimalTlsVersion") @Nullable String minimalTlsVersion,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("primaryUserAssignedIdentityId") @Nullable String primaryUserAssignedIdentityId,
        @CustomType.Parameter("privateEndpointConnections") List<ServerPrivateEndpointConnectionResponse> privateEndpointConnections,
        @CustomType.Parameter("publicNetworkAccess") @Nullable String publicNetworkAccess,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("version") @Nullable String version,
        @CustomType.Parameter("workspaceFeature") String workspaceFeature) {
        this.administratorLogin = administratorLogin;
        this.administrators = administrators;
        this.fullyQualifiedDomainName = fullyQualifiedDomainName;
        this.id = id;
        this.identity = identity;
        this.keyId = keyId;
        this.kind = kind;
        this.location = location;
        this.minimalTlsVersion = minimalTlsVersion;
        this.name = name;
        this.primaryUserAssignedIdentityId = primaryUserAssignedIdentityId;
        this.privateEndpointConnections = privateEndpointConnections;
        this.publicNetworkAccess = publicNetworkAccess;
        this.state = state;
        this.tags = tags;
        this.type = type;
        this.version = version;
        this.workspaceFeature = workspaceFeature;
    }

    /**
     * Administrator username for the server. Once created it cannot be changed.
     * 
    */
    public Optional<String> administratorLogin() {
        return Optional.ofNullable(this.administratorLogin);
    }
    /**
     * The Azure Active Directory identity of the server.
     * 
    */
    public Optional<ServerExternalAdministratorResponse> administrators() {
        return Optional.ofNullable(this.administrators);
    }
    /**
     * The fully qualified domain name of the server.
     * 
    */
    public String fullyQualifiedDomainName() {
        return this.fullyQualifiedDomainName;
    }
    /**
     * Resource ID.
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * The Azure Active Directory identity of the server.
     * 
    */
    public Optional<ResourceIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * A CMK URI of the key to use for encryption.
     * 
    */
    public Optional<String> keyId() {
        return Optional.ofNullable(this.keyId);
    }
    /**
     * Kind of sql server. This is metadata used for the Azure portal experience.
     * 
    */
    public String kind() {
        return this.kind;
    }
    /**
     * Resource location.
     * 
    */
    public String location() {
        return this.location;
    }
    /**
     * Minimal TLS version. Allowed values: &#39;1.0&#39;, &#39;1.1&#39;, &#39;1.2&#39;
     * 
    */
    public Optional<String> minimalTlsVersion() {
        return Optional.ofNullable(this.minimalTlsVersion);
    }
    /**
     * Resource name.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * The resource id of a user assigned identity to be used by default.
     * 
    */
    public Optional<String> primaryUserAssignedIdentityId() {
        return Optional.ofNullable(this.primaryUserAssignedIdentityId);
    }
    /**
     * List of private endpoint connections on a server
     * 
    */
    public List<ServerPrivateEndpointConnectionResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
    */
    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    /**
     * The state of the server.
     * 
    */
    public String state() {
        return this.state;
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Resource type.
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * The version of the server.
     * 
    */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }
    /**
     * Whether or not existing server has a workspace created and if it allows connection from workspace
     * 
    */
    public String workspaceFeature() {
        return this.workspaceFeature;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String administratorLogin;
        private @Nullable ServerExternalAdministratorResponse administrators;
        private String fullyQualifiedDomainName;
        private String id;
        private @Nullable ResourceIdentityResponse identity;
        private @Nullable String keyId;
        private String kind;
        private String location;
        private @Nullable String minimalTlsVersion;
        private String name;
        private @Nullable String primaryUserAssignedIdentityId;
        private List<ServerPrivateEndpointConnectionResponse> privateEndpointConnections;
        private @Nullable String publicNetworkAccess;
        private String state;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable String version;
        private String workspaceFeature;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administratorLogin = defaults.administratorLogin;
    	      this.administrators = defaults.administrators;
    	      this.fullyQualifiedDomainName = defaults.fullyQualifiedDomainName;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.keyId = defaults.keyId;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.minimalTlsVersion = defaults.minimalTlsVersion;
    	      this.name = defaults.name;
    	      this.primaryUserAssignedIdentityId = defaults.primaryUserAssignedIdentityId;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
    	      this.workspaceFeature = defaults.workspaceFeature;
        }

        public Builder administratorLogin(@Nullable String administratorLogin) {
            this.administratorLogin = administratorLogin;
            return this;
        }
        public Builder administrators(@Nullable ServerExternalAdministratorResponse administrators) {
            this.administrators = administrators;
            return this;
        }
        public Builder fullyQualifiedDomainName(String fullyQualifiedDomainName) {
            this.fullyQualifiedDomainName = Objects.requireNonNull(fullyQualifiedDomainName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identity(@Nullable ResourceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        public Builder keyId(@Nullable String keyId) {
            this.keyId = keyId;
            return this;
        }
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder minimalTlsVersion(@Nullable String minimalTlsVersion) {
            this.minimalTlsVersion = minimalTlsVersion;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder primaryUserAssignedIdentityId(@Nullable String primaryUserAssignedIdentityId) {
            this.primaryUserAssignedIdentityId = primaryUserAssignedIdentityId;
            return this;
        }
        public Builder privateEndpointConnections(List<ServerPrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }
        public Builder privateEndpointConnections(ServerPrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public Builder workspaceFeature(String workspaceFeature) {
            this.workspaceFeature = Objects.requireNonNull(workspaceFeature);
            return this;
        }        public GetServerResult build() {
            return new GetServerResult(administratorLogin, administrators, fullyQualifiedDomainName, id, identity, keyId, kind, location, minimalTlsVersion, name, primaryUserAssignedIdentityId, privateEndpointConnections, publicNetworkAccess, state, tags, type, version, workspaceFeature);
        }
    }
}
