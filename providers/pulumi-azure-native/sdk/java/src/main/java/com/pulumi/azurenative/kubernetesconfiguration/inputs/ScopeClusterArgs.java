// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.kubernetesconfiguration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies that the scope of the extensionInstance is Cluster
 * 
 */
public final class ScopeClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScopeClusterArgs Empty = new ScopeClusterArgs();

    /**
     * Namespace where the extension Release must be placed, for a Cluster scoped extensionInstance.  If this namespace does not exist, it will be created
     * 
     */
    @Import(name="releaseNamespace")
    private @Nullable Output<String> releaseNamespace;

    /**
     * @return Namespace where the extension Release must be placed, for a Cluster scoped extensionInstance.  If this namespace does not exist, it will be created
     * 
     */
    public Optional<Output<String>> releaseNamespace() {
        return Optional.ofNullable(this.releaseNamespace);
    }

    private ScopeClusterArgs() {}

    private ScopeClusterArgs(ScopeClusterArgs $) {
        this.releaseNamespace = $.releaseNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScopeClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScopeClusterArgs $;

        public Builder() {
            $ = new ScopeClusterArgs();
        }

        public Builder(ScopeClusterArgs defaults) {
            $ = new ScopeClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param releaseNamespace Namespace where the extension Release must be placed, for a Cluster scoped extensionInstance.  If this namespace does not exist, it will be created
         * 
         * @return builder
         * 
         */
        public Builder releaseNamespace(@Nullable Output<String> releaseNamespace) {
            $.releaseNamespace = releaseNamespace;
            return this;
        }

        /**
         * @param releaseNamespace Namespace where the extension Release must be placed, for a Cluster scoped extensionInstance.  If this namespace does not exist, it will be created
         * 
         * @return builder
         * 
         */
        public Builder releaseNamespace(String releaseNamespace) {
            return releaseNamespace(Output.of(releaseNamespace));
        }

        public ScopeClusterArgs build() {
            return $;
        }
    }

}
