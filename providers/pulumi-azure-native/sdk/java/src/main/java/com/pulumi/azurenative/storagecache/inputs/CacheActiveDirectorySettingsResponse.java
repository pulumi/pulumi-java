// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagecache.inputs;

import com.pulumi.azurenative.storagecache.inputs.CacheActiveDirectorySettingsResponseCredentials;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Active Directory settings used to join a cache to a domain.
 * 
 */
public final class CacheActiveDirectorySettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final CacheActiveDirectorySettingsResponse Empty = new CacheActiveDirectorySettingsResponse();

    /**
     * The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].
     * 
     */
    @Import(name="cacheNetBiosName", required=true)
    private String cacheNetBiosName;

    public String cacheNetBiosName() {
        return this.cacheNetBiosName;
    }

    /**
     * Active Directory admin credentials used to join the HPC Cache to a domain.
     * 
     */
    @Import(name="credentials")
    private @Nullable CacheActiveDirectorySettingsResponseCredentials credentials;

    public Optional<CacheActiveDirectorySettingsResponseCredentials> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * True if the HPC Cache is joined to the Active Directory domain.
     * 
     */
    @Import(name="domainJoined", required=true)
    private String domainJoined;

    public String domainJoined() {
        return this.domainJoined;
    }

    /**
     * The fully qualified domain name of the Active Directory domain controller.
     * 
     */
    @Import(name="domainName", required=true)
    private String domainName;

    public String domainName() {
        return this.domainName;
    }

    /**
     * The Active Directory domain&#39;s NetBIOS name.
     * 
     */
    @Import(name="domainNetBiosName", required=true)
    private String domainNetBiosName;

    public String domainNetBiosName() {
        return this.domainNetBiosName;
    }

    /**
     * Primary DNS IP address used to resolve the Active Directory domain controller&#39;s fully qualified domain name.
     * 
     */
    @Import(name="primaryDnsIpAddress", required=true)
    private String primaryDnsIpAddress;

    public String primaryDnsIpAddress() {
        return this.primaryDnsIpAddress;
    }

    /**
     * Secondary DNS IP address used to resolve the Active Directory domain controller&#39;s fully qualified domain name.
     * 
     */
    @Import(name="secondaryDnsIpAddress")
    private @Nullable String secondaryDnsIpAddress;

    public Optional<String> secondaryDnsIpAddress() {
        return Optional.ofNullable(this.secondaryDnsIpAddress);
    }

    private CacheActiveDirectorySettingsResponse() {}

    private CacheActiveDirectorySettingsResponse(CacheActiveDirectorySettingsResponse $) {
        this.cacheNetBiosName = $.cacheNetBiosName;
        this.credentials = $.credentials;
        this.domainJoined = $.domainJoined;
        this.domainName = $.domainName;
        this.domainNetBiosName = $.domainNetBiosName;
        this.primaryDnsIpAddress = $.primaryDnsIpAddress;
        this.secondaryDnsIpAddress = $.secondaryDnsIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CacheActiveDirectorySettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CacheActiveDirectorySettingsResponse $;

        public Builder() {
            $ = new CacheActiveDirectorySettingsResponse();
        }

        public Builder(CacheActiveDirectorySettingsResponse defaults) {
            $ = new CacheActiveDirectorySettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder cacheNetBiosName(String cacheNetBiosName) {
            $.cacheNetBiosName = cacheNetBiosName;
            return this;
        }

        public Builder credentials(@Nullable CacheActiveDirectorySettingsResponseCredentials credentials) {
            $.credentials = credentials;
            return this;
        }

        public Builder domainJoined(String domainJoined) {
            $.domainJoined = domainJoined;
            return this;
        }

        public Builder domainName(String domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainNetBiosName(String domainNetBiosName) {
            $.domainNetBiosName = domainNetBiosName;
            return this;
        }

        public Builder primaryDnsIpAddress(String primaryDnsIpAddress) {
            $.primaryDnsIpAddress = primaryDnsIpAddress;
            return this;
        }

        public Builder secondaryDnsIpAddress(@Nullable String secondaryDnsIpAddress) {
            $.secondaryDnsIpAddress = secondaryDnsIpAddress;
            return this;
        }

        public CacheActiveDirectorySettingsResponse build() {
            $.cacheNetBiosName = Objects.requireNonNull($.cacheNetBiosName, "expected parameter 'cacheNetBiosName' to be non-null");
            $.domainJoined = Objects.requireNonNull($.domainJoined, "expected parameter 'domainJoined' to be non-null");
            $.domainName = Objects.requireNonNull($.domainName, "expected parameter 'domainName' to be non-null");
            $.domainNetBiosName = Objects.requireNonNull($.domainNetBiosName, "expected parameter 'domainNetBiosName' to be non-null");
            $.primaryDnsIpAddress = Objects.requireNonNull($.primaryDnsIpAddress, "expected parameter 'primaryDnsIpAddress' to be non-null");
            return $;
        }
    }

}
