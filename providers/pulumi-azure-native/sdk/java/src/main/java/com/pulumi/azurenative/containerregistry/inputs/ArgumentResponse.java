// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties of a run argument.
 * 
 */
public final class ArgumentResponse extends com.pulumi.resources.InvokeArgs {

    public static final ArgumentResponse Empty = new ArgumentResponse();

    /**
     * Flag to indicate whether the argument represents a secret and want to be removed from build logs.
     * 
     */
    @Import(name="isSecret")
    private @Nullable Boolean isSecret;

    /**
     * @return Flag to indicate whether the argument represents a secret and want to be removed from build logs.
     * 
     */
    public Optional<Boolean> isSecret() {
        return Optional.ofNullable(this.isSecret);
    }

    /**
     * The name of the argument.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the argument.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The value of the argument.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    /**
     * @return The value of the argument.
     * 
     */
    public String value() {
        return this.value;
    }

    private ArgumentResponse() {}

    private ArgumentResponse(ArgumentResponse $) {
        this.isSecret = $.isSecret;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ArgumentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ArgumentResponse $;

        public Builder() {
            $ = new ArgumentResponse();
        }

        public Builder(ArgumentResponse defaults) {
            $ = new ArgumentResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param isSecret Flag to indicate whether the argument represents a secret and want to be removed from build logs.
         * 
         * @return builder
         * 
         */
        public Builder isSecret(@Nullable Boolean isSecret) {
            $.isSecret = isSecret;
            return this;
        }

        /**
         * @param name The name of the argument.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param value The value of the argument.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public ArgumentResponse build() {
            $.isSecret = Codegen.booleanProp("isSecret").arg($.isSecret).def(false).getNullable();
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
