// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The status detail properties of the connected registry.
 * 
 */
public final class StatusDetailPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final StatusDetailPropertiesResponse Empty = new StatusDetailPropertiesResponse();

    /**
     * The code of the status.
     * 
     */
    @Import(name="code", required=true)
    private String code;

    /**
     * @return The code of the status.
     * 
     */
    public String code() {
        return this.code;
    }

    /**
     * The correlation ID of the status.
     * 
     */
    @Import(name="correlationId", required=true)
    private String correlationId;

    /**
     * @return The correlation ID of the status.
     * 
     */
    public String correlationId() {
        return this.correlationId;
    }

    /**
     * The description of the status.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return The description of the status.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * The timestamp of the status.
     * 
     */
    @Import(name="timestamp", required=true)
    private String timestamp;

    /**
     * @return The timestamp of the status.
     * 
     */
    public String timestamp() {
        return this.timestamp;
    }

    /**
     * The component of the connected registry corresponding to the status.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The component of the connected registry corresponding to the status.
     * 
     */
    public String type() {
        return this.type;
    }

    private StatusDetailPropertiesResponse() {}

    private StatusDetailPropertiesResponse(StatusDetailPropertiesResponse $) {
        this.code = $.code;
        this.correlationId = $.correlationId;
        this.description = $.description;
        this.timestamp = $.timestamp;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StatusDetailPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StatusDetailPropertiesResponse $;

        public Builder() {
            $ = new StatusDetailPropertiesResponse();
        }

        public Builder(StatusDetailPropertiesResponse defaults) {
            $ = new StatusDetailPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param code The code of the status.
         * 
         * @return builder
         * 
         */
        public Builder code(String code) {
            $.code = code;
            return this;
        }

        /**
         * @param correlationId The correlation ID of the status.
         * 
         * @return builder
         * 
         */
        public Builder correlationId(String correlationId) {
            $.correlationId = correlationId;
            return this;
        }

        /**
         * @param description The description of the status.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param timestamp The timestamp of the status.
         * 
         * @return builder
         * 
         */
        public Builder timestamp(String timestamp) {
            $.timestamp = timestamp;
            return this;
        }

        /**
         * @param type The component of the connected registry corresponding to the status.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public StatusDetailPropertiesResponse build() {
            $.code = Objects.requireNonNull($.code, "expected parameter 'code' to be non-null");
            $.correlationId = Objects.requireNonNull($.correlationId, "expected parameter 'correlationId' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.timestamp = Objects.requireNonNull($.timestamp, "expected parameter 'timestamp' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
