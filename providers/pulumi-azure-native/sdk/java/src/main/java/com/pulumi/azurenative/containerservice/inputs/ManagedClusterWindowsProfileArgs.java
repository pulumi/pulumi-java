// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.inputs;

import com.pulumi.azurenative.containerservice.enums.LicenseType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Profile for Windows VMs in the container service cluster.
 * 
 */
public final class ManagedClusterWindowsProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedClusterWindowsProfileArgs Empty = new ManagedClusterWindowsProfileArgs();

    /**
     * Specifies the password of the administrator account. &lt;br&gt;&lt;br&gt; **Minimum-length:** 8 characters &lt;br&gt;&lt;br&gt; **Max-length:** 123 characters &lt;br&gt;&lt;br&gt; **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled &lt;br&gt; Has lower characters &lt;br&gt;Has upper characters &lt;br&gt; Has a digit &lt;br&gt; Has a special character (Regex match [\W_]) &lt;br&gt;&lt;br&gt; **Disallowed values:** &#34;abc@123&#34;, &#34;P@$$w0rd&#34;, &#34;P@ssw0rd&#34;, &#34;P@ssword123&#34;, &#34;Pa$$word&#34;, &#34;pass@word1&#34;, &#34;Password!&#34;, &#34;Password1&#34;, &#34;Password22&#34;, &#34;iloveyou!&#34;
     * 
     */
    @Import(name="adminPassword")
      private final @Nullable Output<String> adminPassword;

    public Output<String> adminPassword() {
        return this.adminPassword == null ? Codegen.empty() : this.adminPassword;
    }

    /**
     * Specifies the name of the administrator account. &lt;br&gt;&lt;br&gt; **restriction:** Cannot end in &#34;.&#34; &lt;br&gt;&lt;br&gt; **Disallowed values:** &#34;administrator&#34;, &#34;admin&#34;, &#34;user&#34;, &#34;user1&#34;, &#34;test&#34;, &#34;user2&#34;, &#34;test1&#34;, &#34;user3&#34;, &#34;admin1&#34;, &#34;1&#34;, &#34;123&#34;, &#34;a&#34;, &#34;actuser&#34;, &#34;adm&#34;, &#34;admin2&#34;, &#34;aspnet&#34;, &#34;backup&#34;, &#34;console&#34;, &#34;david&#34;, &#34;guest&#34;, &#34;john&#34;, &#34;owner&#34;, &#34;root&#34;, &#34;server&#34;, &#34;sql&#34;, &#34;support&#34;, &#34;support_388945a0&#34;, &#34;sys&#34;, &#34;test2&#34;, &#34;test3&#34;, &#34;user4&#34;, &#34;user5&#34;. &lt;br&gt;&lt;br&gt; **Minimum-length:** 1 character &lt;br&gt;&lt;br&gt; **Max-length:** 20 characters
     * 
     */
    @Import(name="adminUsername", required=true)
      private final Output<String> adminUsername;

    public Output<String> adminUsername() {
        return this.adminUsername;
    }

    /**
     * Whether to enable CSI proxy.
     * 
     */
    @Import(name="enableCSIProxy")
      private final @Nullable Output<Boolean> enableCSIProxy;

    public Output<Boolean> enableCSIProxy() {
        return this.enableCSIProxy == null ? Codegen.empty() : this.enableCSIProxy;
    }

    /**
     * The licenseType to use for Windows VMs. Windows_Server is used to enable Azure Hybrid User Benefits for Windows VMs.
     * 
     */
    @Import(name="licenseType")
      private final @Nullable Output<Either<String,LicenseType>> licenseType;

    public Output<Either<String,LicenseType>> licenseType() {
        return this.licenseType == null ? Codegen.empty() : this.licenseType;
    }

    public ManagedClusterWindowsProfileArgs(
        @Nullable Output<String> adminPassword,
        Output<String> adminUsername,
        @Nullable Output<Boolean> enableCSIProxy,
        @Nullable Output<Either<String,LicenseType>> licenseType) {
        this.adminPassword = adminPassword;
        this.adminUsername = Objects.requireNonNull(adminUsername, "expected parameter 'adminUsername' to be non-null");
        this.enableCSIProxy = enableCSIProxy;
        this.licenseType = licenseType;
    }

    private ManagedClusterWindowsProfileArgs() {
        this.adminPassword = Codegen.empty();
        this.adminUsername = Codegen.empty();
        this.enableCSIProxy = Codegen.empty();
        this.licenseType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedClusterWindowsProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> adminPassword;
        private Output<String> adminUsername;
        private @Nullable Output<Boolean> enableCSIProxy;
        private @Nullable Output<Either<String,LicenseType>> licenseType;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedClusterWindowsProfileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminPassword = defaults.adminPassword;
    	      this.adminUsername = defaults.adminUsername;
    	      this.enableCSIProxy = defaults.enableCSIProxy;
    	      this.licenseType = defaults.licenseType;
        }

        public Builder adminPassword(@Nullable Output<String> adminPassword) {
            this.adminPassword = adminPassword;
            return this;
        }
        public Builder adminPassword(@Nullable String adminPassword) {
            this.adminPassword = Codegen.ofNullable(adminPassword);
            return this;
        }
        public Builder adminUsername(Output<String> adminUsername) {
            this.adminUsername = Objects.requireNonNull(adminUsername);
            return this;
        }
        public Builder adminUsername(String adminUsername) {
            this.adminUsername = Output.of(Objects.requireNonNull(adminUsername));
            return this;
        }
        public Builder enableCSIProxy(@Nullable Output<Boolean> enableCSIProxy) {
            this.enableCSIProxy = enableCSIProxy;
            return this;
        }
        public Builder enableCSIProxy(@Nullable Boolean enableCSIProxy) {
            this.enableCSIProxy = Codegen.ofNullable(enableCSIProxy);
            return this;
        }
        public Builder licenseType(@Nullable Output<Either<String,LicenseType>> licenseType) {
            this.licenseType = licenseType;
            return this;
        }
        public Builder licenseType(@Nullable Either<String,LicenseType> licenseType) {
            this.licenseType = Codegen.ofNullable(licenseType);
            return this;
        }        public ManagedClusterWindowsProfileArgs build() {
            return new ManagedClusterWindowsProfileArgs(adminPassword, adminUsername, enableCSIProxy, licenseType);
        }
    }
}
