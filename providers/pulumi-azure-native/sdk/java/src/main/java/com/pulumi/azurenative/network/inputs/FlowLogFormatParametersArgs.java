// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.FlowLogFormatType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Parameters that define the flow log format.
 * 
 */
public final class FlowLogFormatParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowLogFormatParametersArgs Empty = new FlowLogFormatParametersArgs();

    /**
     * The file type of flow log.
     * 
     */
    @Import(name="type")
    private @Nullable Output<Either<String,FlowLogFormatType>> type;

    /**
     * @return The file type of flow log.
     * 
     */
    public Optional<Output<Either<String,FlowLogFormatType>>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The version (revision) of the flow log.
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version (revision) of the flow log.
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private FlowLogFormatParametersArgs() {}

    private FlowLogFormatParametersArgs(FlowLogFormatParametersArgs $) {
        this.type = $.type;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowLogFormatParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowLogFormatParametersArgs $;

        public Builder() {
            $ = new FlowLogFormatParametersArgs();
        }

        public Builder(FlowLogFormatParametersArgs defaults) {
            $ = new FlowLogFormatParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type The file type of flow log.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<Either<String,FlowLogFormatType>> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The file type of flow log.
         * 
         * @return builder
         * 
         */
        public Builder type(Either<String,FlowLogFormatType> type) {
            return type(Output.of(type));
        }

        /**
         * @param type The file type of flow log.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Either.ofLeft(type));
        }

        /**
         * @param type The file type of flow log.
         * 
         * @return builder
         * 
         */
        public Builder type(FlowLogFormatType type) {
            return type(Either.ofRight(type));
        }

        /**
         * @param version The version (revision) of the flow log.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version (revision) of the flow log.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public FlowLogFormatParametersArgs build() {
            $.version = Codegen.integerProp("version").output().arg($.version).def(0).getNullable();
            return $;
        }
    }

}
