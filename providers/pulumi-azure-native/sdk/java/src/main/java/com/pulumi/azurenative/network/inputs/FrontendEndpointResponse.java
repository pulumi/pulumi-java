// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.CustomHttpsConfigurationResponse;
import com.pulumi.azurenative.network.inputs.FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A frontend endpoint used for routing.
 * 
 */
public final class FrontendEndpointResponse extends com.pulumi.resources.InvokeArgs {

    public static final FrontendEndpointResponse Empty = new FrontendEndpointResponse();

    /**
     * The configuration specifying how to enable HTTPS
     * 
     */
    @Import(name="customHttpsConfiguration", required=true)
    private CustomHttpsConfigurationResponse customHttpsConfiguration;

    public CustomHttpsConfigurationResponse customHttpsConfiguration() {
        return this.customHttpsConfiguration;
    }

    /**
     * Provisioning status of Custom Https of the frontendEndpoint.
     * 
     */
    @Import(name="customHttpsProvisioningState", required=true)
    private String customHttpsProvisioningState;

    public String customHttpsProvisioningState() {
        return this.customHttpsProvisioningState;
    }

    /**
     * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
     * 
     */
    @Import(name="customHttpsProvisioningSubstate", required=true)
    private String customHttpsProvisioningSubstate;

    public String customHttpsProvisioningSubstate() {
        return this.customHttpsProvisioningSubstate;
    }

    /**
     * The host name of the frontendEndpoint. Must be a domain name.
     * 
     */
    @Import(name="hostName")
    private @Nullable String hostName;

    public Optional<String> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Resource name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Resource status.
     * 
     */
    @Import(name="resourceState", required=true)
    private String resourceState;

    public String resourceState() {
        return this.resourceState;
    }

    /**
     * Whether to allow session affinity on this host. Valid options are &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
     */
    @Import(name="sessionAffinityEnabledState")
    private @Nullable String sessionAffinityEnabledState;

    public Optional<String> sessionAffinityEnabledState() {
        return Optional.ofNullable(this.sessionAffinityEnabledState);
    }

    /**
     * UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
     * 
     */
    @Import(name="sessionAffinityTtlSeconds")
    private @Nullable Integer sessionAffinityTtlSeconds;

    public Optional<Integer> sessionAffinityTtlSeconds() {
        return Optional.ofNullable(this.sessionAffinityTtlSeconds);
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    /**
     * Defines the Web Application Firewall policy for each host (if applicable)
     * 
     */
    @Import(name="webApplicationFirewallPolicyLink")
    private @Nullable FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink;

    public Optional<FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink> webApplicationFirewallPolicyLink() {
        return Optional.ofNullable(this.webApplicationFirewallPolicyLink);
    }

    private FrontendEndpointResponse() {}

    private FrontendEndpointResponse(FrontendEndpointResponse $) {
        this.customHttpsConfiguration = $.customHttpsConfiguration;
        this.customHttpsProvisioningState = $.customHttpsProvisioningState;
        this.customHttpsProvisioningSubstate = $.customHttpsProvisioningSubstate;
        this.hostName = $.hostName;
        this.id = $.id;
        this.name = $.name;
        this.resourceState = $.resourceState;
        this.sessionAffinityEnabledState = $.sessionAffinityEnabledState;
        this.sessionAffinityTtlSeconds = $.sessionAffinityTtlSeconds;
        this.type = $.type;
        this.webApplicationFirewallPolicyLink = $.webApplicationFirewallPolicyLink;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontendEndpointResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontendEndpointResponse $;

        public Builder() {
            $ = new FrontendEndpointResponse();
        }

        public Builder(FrontendEndpointResponse defaults) {
            $ = new FrontendEndpointResponse(Objects.requireNonNull(defaults));
        }

        public Builder customHttpsConfiguration(CustomHttpsConfigurationResponse customHttpsConfiguration) {
            $.customHttpsConfiguration = customHttpsConfiguration;
            return this;
        }

        public Builder customHttpsProvisioningState(String customHttpsProvisioningState) {
            $.customHttpsProvisioningState = customHttpsProvisioningState;
            return this;
        }

        public Builder customHttpsProvisioningSubstate(String customHttpsProvisioningSubstate) {
            $.customHttpsProvisioningSubstate = customHttpsProvisioningSubstate;
            return this;
        }

        public Builder hostName(@Nullable String hostName) {
            $.hostName = hostName;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder resourceState(String resourceState) {
            $.resourceState = resourceState;
            return this;
        }

        public Builder sessionAffinityEnabledState(@Nullable String sessionAffinityEnabledState) {
            $.sessionAffinityEnabledState = sessionAffinityEnabledState;
            return this;
        }

        public Builder sessionAffinityTtlSeconds(@Nullable Integer sessionAffinityTtlSeconds) {
            $.sessionAffinityTtlSeconds = sessionAffinityTtlSeconds;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder webApplicationFirewallPolicyLink(@Nullable FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink) {
            $.webApplicationFirewallPolicyLink = webApplicationFirewallPolicyLink;
            return this;
        }

        public FrontendEndpointResponse build() {
            $.customHttpsConfiguration = Objects.requireNonNull($.customHttpsConfiguration, "expected parameter 'customHttpsConfiguration' to be non-null");
            $.customHttpsProvisioningState = Objects.requireNonNull($.customHttpsProvisioningState, "expected parameter 'customHttpsProvisioningState' to be non-null");
            $.customHttpsProvisioningSubstate = Objects.requireNonNull($.customHttpsProvisioningSubstate, "expected parameter 'customHttpsProvisioningSubstate' to be non-null");
            $.resourceState = Objects.requireNonNull($.resourceState, "expected parameter 'resourceState' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
