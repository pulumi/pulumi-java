// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.netapp.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Replication properties
 * 
 */
public final class ReplicationObjectResponse extends com.pulumi.resources.InvokeArgs {

    public static final ReplicationObjectResponse Empty = new ReplicationObjectResponse();

    /**
     * Indicates whether the local volume is the source or destination for the Volume Replication
     * 
     */
    @Import(name="endpointType")
    private @Nullable String endpointType;

    public Optional<String> endpointType() {
        return Optional.ofNullable(this.endpointType);
    }

    /**
     * The remote region for the other end of the Volume Replication.
     * 
     */
    @Import(name="remoteVolumeRegion")
    private @Nullable String remoteVolumeRegion;

    public Optional<String> remoteVolumeRegion() {
        return Optional.ofNullable(this.remoteVolumeRegion);
    }

    /**
     * The resource ID of the remote volume.
     * 
     */
    @Import(name="remoteVolumeResourceId", required=true)
    private String remoteVolumeResourceId;

    public String remoteVolumeResourceId() {
        return this.remoteVolumeResourceId;
    }

    /**
     * Id
     * 
     */
    @Import(name="replicationId")
    private @Nullable String replicationId;

    public Optional<String> replicationId() {
        return Optional.ofNullable(this.replicationId);
    }

    /**
     * Schedule
     * 
     */
    @Import(name="replicationSchedule", required=true)
    private String replicationSchedule;

    public String replicationSchedule() {
        return this.replicationSchedule;
    }

    private ReplicationObjectResponse() {}

    private ReplicationObjectResponse(ReplicationObjectResponse $) {
        this.endpointType = $.endpointType;
        this.remoteVolumeRegion = $.remoteVolumeRegion;
        this.remoteVolumeResourceId = $.remoteVolumeResourceId;
        this.replicationId = $.replicationId;
        this.replicationSchedule = $.replicationSchedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationObjectResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationObjectResponse $;

        public Builder() {
            $ = new ReplicationObjectResponse();
        }

        public Builder(ReplicationObjectResponse defaults) {
            $ = new ReplicationObjectResponse(Objects.requireNonNull(defaults));
        }

        public Builder endpointType(@Nullable String endpointType) {
            $.endpointType = endpointType;
            return this;
        }

        public Builder remoteVolumeRegion(@Nullable String remoteVolumeRegion) {
            $.remoteVolumeRegion = remoteVolumeRegion;
            return this;
        }

        public Builder remoteVolumeResourceId(String remoteVolumeResourceId) {
            $.remoteVolumeResourceId = remoteVolumeResourceId;
            return this;
        }

        public Builder replicationId(@Nullable String replicationId) {
            $.replicationId = replicationId;
            return this;
        }

        public Builder replicationSchedule(String replicationSchedule) {
            $.replicationSchedule = replicationSchedule;
            return this;
        }

        public ReplicationObjectResponse build() {
            $.remoteVolumeResourceId = Objects.requireNonNull($.remoteVolumeResourceId, "expected parameter 'remoteVolumeResourceId' to be non-null");
            $.replicationSchedule = Objects.requireNonNull($.replicationSchedule, "expected parameter 'replicationSchedule' to be non-null");
            return $;
        }
    }

}
