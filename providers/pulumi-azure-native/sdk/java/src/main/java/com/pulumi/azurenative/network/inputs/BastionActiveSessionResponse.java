// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;


/**
 * The session detail for a target.
 * 
 */
public final class BastionActiveSessionResponse extends com.pulumi.resources.InvokeArgs {

    public static final BastionActiveSessionResponse Empty = new BastionActiveSessionResponse();

    /**
     * The protocol used to connect to the target.
     * 
     */
    @Import(name="protocol", required=true)
    private String protocol;

    public String protocol() {
        return this.protocol;
    }

    /**
     * The type of the resource.
     * 
     */
    @Import(name="resourceType", required=true)
    private String resourceType;

    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Duration in mins the session has been active.
     * 
     */
    @Import(name="sessionDurationInMins", required=true)
    private Double sessionDurationInMins;

    public Double sessionDurationInMins() {
        return this.sessionDurationInMins;
    }

    /**
     * A unique id for the session.
     * 
     */
    @Import(name="sessionId", required=true)
    private String sessionId;

    public String sessionId() {
        return this.sessionId;
    }

    /**
     * The time when the session started.
     * 
     */
    @Import(name="startTime", required=true)
    private Object startTime;

    public Object startTime() {
        return this.startTime;
    }

    /**
     * The host name of the target.
     * 
     */
    @Import(name="targetHostName", required=true)
    private String targetHostName;

    public String targetHostName() {
        return this.targetHostName;
    }

    /**
     * The IP Address of the target.
     * 
     */
    @Import(name="targetIpAddress", required=true)
    private String targetIpAddress;

    public String targetIpAddress() {
        return this.targetIpAddress;
    }

    /**
     * The resource group of the target.
     * 
     */
    @Import(name="targetResourceGroup", required=true)
    private String targetResourceGroup;

    public String targetResourceGroup() {
        return this.targetResourceGroup;
    }

    /**
     * The resource id of the target.
     * 
     */
    @Import(name="targetResourceId", required=true)
    private String targetResourceId;

    public String targetResourceId() {
        return this.targetResourceId;
    }

    /**
     * The subscription id for the target virtual machine.
     * 
     */
    @Import(name="targetSubscriptionId", required=true)
    private String targetSubscriptionId;

    public String targetSubscriptionId() {
        return this.targetSubscriptionId;
    }

    /**
     * The user name who is active on this session.
     * 
     */
    @Import(name="userName", required=true)
    private String userName;

    public String userName() {
        return this.userName;
    }

    private BastionActiveSessionResponse() {}

    private BastionActiveSessionResponse(BastionActiveSessionResponse $) {
        this.protocol = $.protocol;
        this.resourceType = $.resourceType;
        this.sessionDurationInMins = $.sessionDurationInMins;
        this.sessionId = $.sessionId;
        this.startTime = $.startTime;
        this.targetHostName = $.targetHostName;
        this.targetIpAddress = $.targetIpAddress;
        this.targetResourceGroup = $.targetResourceGroup;
        this.targetResourceId = $.targetResourceId;
        this.targetSubscriptionId = $.targetSubscriptionId;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BastionActiveSessionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BastionActiveSessionResponse $;

        public Builder() {
            $ = new BastionActiveSessionResponse();
        }

        public Builder(BastionActiveSessionResponse defaults) {
            $ = new BastionActiveSessionResponse(Objects.requireNonNull(defaults));
        }

        public Builder protocol(String protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder resourceType(String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder sessionDurationInMins(Double sessionDurationInMins) {
            $.sessionDurationInMins = sessionDurationInMins;
            return this;
        }

        public Builder sessionId(String sessionId) {
            $.sessionId = sessionId;
            return this;
        }

        public Builder startTime(Object startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder targetHostName(String targetHostName) {
            $.targetHostName = targetHostName;
            return this;
        }

        public Builder targetIpAddress(String targetIpAddress) {
            $.targetIpAddress = targetIpAddress;
            return this;
        }

        public Builder targetResourceGroup(String targetResourceGroup) {
            $.targetResourceGroup = targetResourceGroup;
            return this;
        }

        public Builder targetResourceId(String targetResourceId) {
            $.targetResourceId = targetResourceId;
            return this;
        }

        public Builder targetSubscriptionId(String targetSubscriptionId) {
            $.targetSubscriptionId = targetSubscriptionId;
            return this;
        }

        public Builder userName(String userName) {
            $.userName = userName;
            return this;
        }

        public BastionActiveSessionResponse build() {
            $.protocol = Objects.requireNonNull($.protocol, "expected parameter 'protocol' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            $.sessionDurationInMins = Objects.requireNonNull($.sessionDurationInMins, "expected parameter 'sessionDurationInMins' to be non-null");
            $.sessionId = Objects.requireNonNull($.sessionId, "expected parameter 'sessionId' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            $.targetHostName = Objects.requireNonNull($.targetHostName, "expected parameter 'targetHostName' to be non-null");
            $.targetIpAddress = Objects.requireNonNull($.targetIpAddress, "expected parameter 'targetIpAddress' to be non-null");
            $.targetResourceGroup = Objects.requireNonNull($.targetResourceGroup, "expected parameter 'targetResourceGroup' to be non-null");
            $.targetResourceId = Objects.requireNonNull($.targetResourceId, "expected parameter 'targetResourceId' to be non-null");
            $.targetSubscriptionId = Objects.requireNonNull($.targetSubscriptionId, "expected parameter 'targetSubscriptionId' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
