// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.eventgrid.ChannelArgs;
import com.pulumi.azurenative.eventgrid.outputs.PartnerTopicInfoResponse;
import com.pulumi.azurenative.eventgrid.outputs.SystemDataResponse;
import com.pulumi.azurenative.eventgrid.outputs.WebhookPartnerDestinationInfoResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Channel info.
 * API Version: 2021-10-15-preview.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:eventgrid:Channel exampleChannelName1 /subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/partnerNamespaces/examplePartnerNamespaceName1/changes/exampleChannelName1 
 * ```
 * 
 */
@ResourceType(type="azure-native:eventgrid:Channel")
public class Channel extends com.pulumi.resources.CustomResource {
    /**
     * The type of the event channel which represents the  direction flow of events.
     * 
     */
    @Export(name="channelType", type=String.class, parameters={})
    private Output</* @Nullable */ String> channelType;

    /**
     * @return The type of the event channel which represents the  direction flow of events.
     * 
     */
    public Output<Optional<String>> channelType() {
        return Codegen.optional(this.channelType);
    }
    /**
     * Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
     * the channel and corresponding partner topic are deleted.
     * 
     */
    @Export(name="expirationTimeIfNotActivatedUtc", type=String.class, parameters={})
    private Output</* @Nullable */ String> expirationTimeIfNotActivatedUtc;

    /**
     * @return Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
     * the channel and corresponding partner topic are deleted.
     * 
     */
    public Output<Optional<String>> expirationTimeIfNotActivatedUtc() {
        return Codegen.optional(this.expirationTimeIfNotActivatedUtc);
    }
    /**
     * Context or helpful message that can be used during the approval process by the subscriber.
     * 
     */
    @Export(name="messageForActivation", type=String.class, parameters={})
    private Output</* @Nullable */ String> messageForActivation;

    /**
     * @return Context or helpful message that can be used during the approval process by the subscriber.
     * 
     */
    public Output<Optional<String>> messageForActivation() {
        return Codegen.optional(this.messageForActivation);
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * This property should be populated when channelType is PartnerDestination and represents information about the partner destination resource corresponding to the channel.
     * 
     */
    @Export(name="partnerDestinationInfo", type=WebhookPartnerDestinationInfoResponse.class, parameters={})
    private Output</* @Nullable */ WebhookPartnerDestinationInfoResponse> partnerDestinationInfo;

    /**
     * @return This property should be populated when channelType is PartnerDestination and represents information about the partner destination resource corresponding to the channel.
     * 
     */
    public Output<Optional<WebhookPartnerDestinationInfoResponse>> partnerDestinationInfo() {
        return Codegen.optional(this.partnerDestinationInfo);
    }
    /**
     * This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.
     * 
     */
    @Export(name="partnerTopicInfo", type=PartnerTopicInfoResponse.class, parameters={})
    private Output</* @Nullable */ PartnerTopicInfoResponse> partnerTopicInfo;

    /**
     * @return This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.
     * 
     */
    public Output<Optional<PartnerTopicInfoResponse>> partnerTopicInfo() {
        return Codegen.optional(this.partnerTopicInfo);
    }
    /**
     * Provisioning state of the channel.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output</* @Nullable */ String> provisioningState;

    /**
     * @return Provisioning state of the channel.
     * 
     */
    public Output<Optional<String>> provisioningState() {
        return Codegen.optional(this.provisioningState);
    }
    /**
     * The readiness state of the corresponding partner topic.
     * 
     */
    @Export(name="readinessState", type=String.class, parameters={})
    private Output</* @Nullable */ String> readinessState;

    /**
     * @return The readiness state of the corresponding partner topic.
     * 
     */
    public Output<Optional<String>> readinessState() {
        return Codegen.optional(this.readinessState);
    }
    /**
     * The system metadata relating to Channel resource.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return The system metadata relating to Channel resource.
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Type of the resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of the resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Channel(String name) {
        this(name, ChannelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Channel(String name, ChannelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Channel(String name, ChannelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:eventgrid:Channel", name, args == null ? ChannelArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Channel(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:eventgrid:Channel", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:eventgrid/v20211015preview:Channel").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Channel get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Channel(name, id, options);
    }
}
