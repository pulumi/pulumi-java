// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.inputs.RosettaNetPipBusinessDocumentResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The integration account RosettaNet ProcessConfiguration role settings.
 * 
 */
public final class RosettaNetPipRoleSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final RosettaNetPipRoleSettingsResponse Empty = new RosettaNetPipRoleSettingsResponse();

    /**
     * The action name.
     * 
     */
    @Import(name="action", required=true)
    private String action;

    /**
     * @return The action name.
     * 
     */
    public String action() {
        return this.action;
    }

    /**
     * The RosettaNet ProcessConfiguration business document.
     * 
     */
    @Import(name="businessDocument", required=true)
    private RosettaNetPipBusinessDocumentResponse businessDocument;

    /**
     * @return The RosettaNet ProcessConfiguration business document.
     * 
     */
    public RosettaNetPipBusinessDocumentResponse businessDocument() {
        return this.businessDocument;
    }

    /**
     * The description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return The description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The role name.
     * 
     */
    @Import(name="role", required=true)
    private String role;

    /**
     * @return The role name.
     * 
     */
    public String role() {
        return this.role;
    }

    /**
     * The RosettaNet ProcessConfiguration role type.
     * 
     */
    @Import(name="roleType", required=true)
    private String roleType;

    /**
     * @return The RosettaNet ProcessConfiguration role type.
     * 
     */
    public String roleType() {
        return this.roleType;
    }

    /**
     * The service name.
     * 
     */
    @Import(name="service", required=true)
    private String service;

    /**
     * @return The service name.
     * 
     */
    public String service() {
        return this.service;
    }

    /**
     * The service classification name.
     * 
     */
    @Import(name="serviceClassification", required=true)
    private String serviceClassification;

    /**
     * @return The service classification name.
     * 
     */
    public String serviceClassification() {
        return this.serviceClassification;
    }

    private RosettaNetPipRoleSettingsResponse() {}

    private RosettaNetPipRoleSettingsResponse(RosettaNetPipRoleSettingsResponse $) {
        this.action = $.action;
        this.businessDocument = $.businessDocument;
        this.description = $.description;
        this.role = $.role;
        this.roleType = $.roleType;
        this.service = $.service;
        this.serviceClassification = $.serviceClassification;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RosettaNetPipRoleSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RosettaNetPipRoleSettingsResponse $;

        public Builder() {
            $ = new RosettaNetPipRoleSettingsResponse();
        }

        public Builder(RosettaNetPipRoleSettingsResponse defaults) {
            $ = new RosettaNetPipRoleSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The action name.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            $.action = action;
            return this;
        }

        /**
         * @param businessDocument The RosettaNet ProcessConfiguration business document.
         * 
         * @return builder
         * 
         */
        public Builder businessDocument(RosettaNetPipBusinessDocumentResponse businessDocument) {
            $.businessDocument = businessDocument;
            return this;
        }

        /**
         * @param description The description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param role The role name.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            $.role = role;
            return this;
        }

        /**
         * @param roleType The RosettaNet ProcessConfiguration role type.
         * 
         * @return builder
         * 
         */
        public Builder roleType(String roleType) {
            $.roleType = roleType;
            return this;
        }

        /**
         * @param service The service name.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            $.service = service;
            return this;
        }

        /**
         * @param serviceClassification The service classification name.
         * 
         * @return builder
         * 
         */
        public Builder serviceClassification(String serviceClassification) {
            $.serviceClassification = serviceClassification;
            return this;
        }

        public RosettaNetPipRoleSettingsResponse build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.businessDocument = Objects.requireNonNull($.businessDocument, "expected parameter 'businessDocument' to be non-null");
            $.role = Objects.requireNonNull($.role, "expected parameter 'role' to be non-null");
            $.roleType = Objects.requireNonNull($.roleType, "expected parameter 'roleType' to be non-null");
            $.service = Objects.requireNonNull($.service, "expected parameter 'service' to be non-null");
            $.serviceClassification = Objects.requireNonNull($.serviceClassification, "expected parameter 'serviceClassification' to be non-null");
            return $;
        }
    }

}
