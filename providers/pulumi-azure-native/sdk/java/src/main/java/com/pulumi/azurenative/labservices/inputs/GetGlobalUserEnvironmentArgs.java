// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGlobalUserEnvironmentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGlobalUserEnvironmentArgs Empty = new GetGlobalUserEnvironmentArgs();

    /**
     * The resourceId of the environment
     * 
     */
    @Import(name="environmentId", required=true)
    private Output<String> environmentId;

    /**
     * @return The resourceId of the environment
     * 
     */
    public Output<String> environmentId() {
        return this.environmentId;
    }

    /**
     * Specify the $expand query. Example: &#39;properties($expand=environment)&#39;
     * 
     */
    @Import(name="expand")
    private @Nullable Output<String> expand;

    /**
     * @return Specify the $expand query. Example: &#39;properties($expand=environment)&#39;
     * 
     */
    public Optional<Output<String>> expand() {
        return Optional.ofNullable(this.expand);
    }

    /**
     * The name of the user.
     * 
     */
    @Import(name="userName", required=true)
    private Output<String> userName;

    /**
     * @return The name of the user.
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    private GetGlobalUserEnvironmentArgs() {}

    private GetGlobalUserEnvironmentArgs(GetGlobalUserEnvironmentArgs $) {
        this.environmentId = $.environmentId;
        this.expand = $.expand;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGlobalUserEnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGlobalUserEnvironmentArgs $;

        public Builder() {
            $ = new GetGlobalUserEnvironmentArgs();
        }

        public Builder(GetGlobalUserEnvironmentArgs defaults) {
            $ = new GetGlobalUserEnvironmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environmentId The resourceId of the environment
         * 
         * @return builder
         * 
         */
        public Builder environmentId(Output<String> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param environmentId The resourceId of the environment
         * 
         * @return builder
         * 
         */
        public Builder environmentId(String environmentId) {
            return environmentId(Output.of(environmentId));
        }

        /**
         * @param expand Specify the $expand query. Example: &#39;properties($expand=environment)&#39;
         * 
         * @return builder
         * 
         */
        public Builder expand(@Nullable Output<String> expand) {
            $.expand = expand;
            return this;
        }

        /**
         * @param expand Specify the $expand query. Example: &#39;properties($expand=environment)&#39;
         * 
         * @return builder
         * 
         */
        public Builder expand(String expand) {
            return expand(Output.of(expand));
        }

        /**
         * @param userName The name of the user.
         * 
         * @return builder
         * 
         */
        public Builder userName(Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName The name of the user.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public GetGlobalUserEnvironmentArgs build() {
            $.environmentId = Objects.requireNonNull($.environmentId, "expected parameter 'environmentId' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
