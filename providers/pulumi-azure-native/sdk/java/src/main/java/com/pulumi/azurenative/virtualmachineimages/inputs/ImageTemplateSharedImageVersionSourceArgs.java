// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.virtualmachineimages.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Describes an image source that is an image version in a shared image gallery.
 * 
 */
public final class ImageTemplateSharedImageVersionSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageTemplateSharedImageVersionSourceArgs Empty = new ImageTemplateSharedImageVersionSourceArgs();

    /**
     * ARM resource id of the image version in the shared image gallery
     * 
     */
    @Import(name="imageVersionId", required=true)
    private Output<String> imageVersionId;

    public Output<String> imageVersionId() {
        return this.imageVersionId;
    }

    /**
     * Specifies the type of source image you want to start with.
     * Expected value is &#39;SharedImageVersion&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private ImageTemplateSharedImageVersionSourceArgs() {}

    private ImageTemplateSharedImageVersionSourceArgs(ImageTemplateSharedImageVersionSourceArgs $) {
        this.imageVersionId = $.imageVersionId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageTemplateSharedImageVersionSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageTemplateSharedImageVersionSourceArgs $;

        public Builder() {
            $ = new ImageTemplateSharedImageVersionSourceArgs();
        }

        public Builder(ImageTemplateSharedImageVersionSourceArgs defaults) {
            $ = new ImageTemplateSharedImageVersionSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder imageVersionId(Output<String> imageVersionId) {
            $.imageVersionId = imageVersionId;
            return this;
        }

        public Builder imageVersionId(String imageVersionId) {
            return imageVersionId(Output.of(imageVersionId));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ImageTemplateSharedImageVersionSourceArgs build() {
            $.imageVersionId = Objects.requireNonNull($.imageVersionId, "expected parameter 'imageVersionId' to be non-null");
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
