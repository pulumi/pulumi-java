// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices;

import com.pulumi.azurenative.recoveryservices.inputs.EnableMigrationInputPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicationMigrationItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationMigrationItemArgs Empty = new ReplicationMigrationItemArgs();

    /**
     * Fabric name.
     * 
     */
    @Import(name="fabricName", required=true)
    private Output<String> fabricName;

    public Output<String> fabricName() {
        return this.fabricName;
    }

    /**
     * Migration item name.
     * 
     */
    @Import(name="migrationItemName")
    private @Nullable Output<String> migrationItemName;

    public Optional<Output<String>> migrationItemName() {
        return Optional.ofNullable(this.migrationItemName);
    }

    /**
     * Enable migration input properties.
     * 
     */
    @Import(name="properties", required=true)
    private Output<EnableMigrationInputPropertiesArgs> properties;

    public Output<EnableMigrationInputPropertiesArgs> properties() {
        return this.properties;
    }

    /**
     * Protection container name.
     * 
     */
    @Import(name="protectionContainerName", required=true)
    private Output<String> protectionContainerName;

    public Output<String> protectionContainerName() {
        return this.protectionContainerName;
    }

    /**
     * The name of the resource group where the recovery services vault is present.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the recovery services vault.
     * 
     */
    @Import(name="resourceName", required=true)
    private Output<String> resourceName;

    public Output<String> resourceName() {
        return this.resourceName;
    }

    private ReplicationMigrationItemArgs() {}

    private ReplicationMigrationItemArgs(ReplicationMigrationItemArgs $) {
        this.fabricName = $.fabricName;
        this.migrationItemName = $.migrationItemName;
        this.properties = $.properties;
        this.protectionContainerName = $.protectionContainerName;
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationMigrationItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationMigrationItemArgs $;

        public Builder() {
            $ = new ReplicationMigrationItemArgs();
        }

        public Builder(ReplicationMigrationItemArgs defaults) {
            $ = new ReplicationMigrationItemArgs(Objects.requireNonNull(defaults));
        }

        public Builder fabricName(Output<String> fabricName) {
            $.fabricName = fabricName;
            return this;
        }

        public Builder fabricName(String fabricName) {
            return fabricName(Output.of(fabricName));
        }

        public Builder migrationItemName(@Nullable Output<String> migrationItemName) {
            $.migrationItemName = migrationItemName;
            return this;
        }

        public Builder migrationItemName(String migrationItemName) {
            return migrationItemName(Output.of(migrationItemName));
        }

        public Builder properties(Output<EnableMigrationInputPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(EnableMigrationInputPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        public Builder protectionContainerName(Output<String> protectionContainerName) {
            $.protectionContainerName = protectionContainerName;
            return this;
        }

        public Builder protectionContainerName(String protectionContainerName) {
            return protectionContainerName(Output.of(protectionContainerName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder resourceName(Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        public ReplicationMigrationItemArgs build() {
            $.fabricName = Objects.requireNonNull($.fabricName, "expected parameter 'fabricName' to be non-null");
            $.properties = Objects.requireNonNull($.properties, "expected parameter 'properties' to be non-null");
            $.protectionContainerName = Objects.requireNonNull($.protectionContainerName, "expected parameter 'protectionContainerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceName = Objects.requireNonNull($.resourceName, "expected parameter 'resourceName' to be non-null");
            return $;
        }
    }

}
