// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.inputs.AddressSpaceArgs;
import com.pulumi.azurenative.network.inputs.BgpSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LocalNetworkGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final LocalNetworkGatewayArgs Empty = new LocalNetworkGatewayArgs();

    /**
     * Local network gateway&#39;s BGP speaker settings.
     * 
     */
    @Import(name="bgpSettings")
    private @Nullable Output<BgpSettingsArgs> bgpSettings;

    public Optional<Output<BgpSettingsArgs>> bgpSettings() {
        return Optional.ofNullable(this.bgpSettings);
    }

    /**
     * FQDN of local network gateway.
     * 
     */
    @Import(name="fqdn")
    private @Nullable Output<String> fqdn;

    public Optional<Output<String>> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }

    /**
     * IP address of local network gateway.
     * 
     */
    @Import(name="gatewayIpAddress")
    private @Nullable Output<String> gatewayIpAddress;

    public Optional<Output<String>> gatewayIpAddress() {
        return Optional.ofNullable(this.gatewayIpAddress);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Local network site address space.
     * 
     */
    @Import(name="localNetworkAddressSpace")
    private @Nullable Output<AddressSpaceArgs> localNetworkAddressSpace;

    public Optional<Output<AddressSpaceArgs>> localNetworkAddressSpace() {
        return Optional.ofNullable(this.localNetworkAddressSpace);
    }

    /**
     * The name of the local network gateway.
     * 
     */
    @Import(name="localNetworkGatewayName")
    private @Nullable Output<String> localNetworkGatewayName;

    public Optional<Output<String>> localNetworkGatewayName() {
        return Optional.ofNullable(this.localNetworkGatewayName);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private LocalNetworkGatewayArgs() {}

    private LocalNetworkGatewayArgs(LocalNetworkGatewayArgs $) {
        this.bgpSettings = $.bgpSettings;
        this.fqdn = $.fqdn;
        this.gatewayIpAddress = $.gatewayIpAddress;
        this.id = $.id;
        this.localNetworkAddressSpace = $.localNetworkAddressSpace;
        this.localNetworkGatewayName = $.localNetworkGatewayName;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocalNetworkGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocalNetworkGatewayArgs $;

        public Builder() {
            $ = new LocalNetworkGatewayArgs();
        }

        public Builder(LocalNetworkGatewayArgs defaults) {
            $ = new LocalNetworkGatewayArgs(Objects.requireNonNull(defaults));
        }

        public Builder bgpSettings(@Nullable Output<BgpSettingsArgs> bgpSettings) {
            $.bgpSettings = bgpSettings;
            return this;
        }

        public Builder bgpSettings(BgpSettingsArgs bgpSettings) {
            return bgpSettings(Output.of(bgpSettings));
        }

        public Builder fqdn(@Nullable Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        public Builder gatewayIpAddress(@Nullable Output<String> gatewayIpAddress) {
            $.gatewayIpAddress = gatewayIpAddress;
            return this;
        }

        public Builder gatewayIpAddress(String gatewayIpAddress) {
            return gatewayIpAddress(Output.of(gatewayIpAddress));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder localNetworkAddressSpace(@Nullable Output<AddressSpaceArgs> localNetworkAddressSpace) {
            $.localNetworkAddressSpace = localNetworkAddressSpace;
            return this;
        }

        public Builder localNetworkAddressSpace(AddressSpaceArgs localNetworkAddressSpace) {
            return localNetworkAddressSpace(Output.of(localNetworkAddressSpace));
        }

        public Builder localNetworkGatewayName(@Nullable Output<String> localNetworkGatewayName) {
            $.localNetworkGatewayName = localNetworkGatewayName;
            return this;
        }

        public Builder localNetworkGatewayName(String localNetworkGatewayName) {
            return localNetworkGatewayName(Output.of(localNetworkGatewayName));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public LocalNetworkGatewayArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
