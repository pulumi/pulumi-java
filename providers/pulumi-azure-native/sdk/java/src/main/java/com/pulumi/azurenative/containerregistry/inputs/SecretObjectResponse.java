// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the properties of a secret object value.
 * 
 */
public final class SecretObjectResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecretObjectResponse Empty = new SecretObjectResponse();

    /**
     * The type of the secret object which determines how the value of the secret object has to be
     * interpreted.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return The type of the secret object which determines how the value of the secret object has to be
     * interpreted.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The value of the secret. The format of this value will be determined
     * based on the type of the secret object. If the type is Opaque, the value will be
     * used as is without any modification.
     * 
     */
    @Import(name="value")
    private @Nullable String value;

    /**
     * @return The value of the secret. The format of this value will be determined
     * based on the type of the secret object. If the type is Opaque, the value will be
     * used as is without any modification.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    private SecretObjectResponse() {}

    private SecretObjectResponse(SecretObjectResponse $) {
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretObjectResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretObjectResponse $;

        public Builder() {
            $ = new SecretObjectResponse();
        }

        public Builder(SecretObjectResponse defaults) {
            $ = new SecretObjectResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param type The type of the secret object which determines how the value of the secret object has to be
         * interpreted.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        /**
         * @param value The value of the secret. The format of this value will be determined
         * based on the type of the secret object. If the type is Opaque, the value will be
         * used as is without any modification.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable String value) {
            $.value = value;
            return this;
        }

        public SecretObjectResponse build() {
            return $;
        }
    }

}
