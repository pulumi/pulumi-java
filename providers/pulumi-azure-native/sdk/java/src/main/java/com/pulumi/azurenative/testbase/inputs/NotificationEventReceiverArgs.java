// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.inputs;

import com.pulumi.azurenative.testbase.inputs.NotificationReceiverValueArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A notification event receivers.
 * 
 */
public final class NotificationEventReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final NotificationEventReceiverArgs Empty = new NotificationEventReceiverArgs();

    /**
     * The type of the notification event receiver.
     * 
     */
    @Import(name="receiverType")
    private @Nullable Output<String> receiverType;

    /**
     * @return The type of the notification event receiver.
     * 
     */
    public Optional<Output<String>> receiverType() {
        return Optional.ofNullable(this.receiverType);
    }

    /**
     * The notification event receiver value.
     * 
     */
    @Import(name="receiverValue")
    private @Nullable Output<NotificationReceiverValueArgs> receiverValue;

    /**
     * @return The notification event receiver value.
     * 
     */
    public Optional<Output<NotificationReceiverValueArgs>> receiverValue() {
        return Optional.ofNullable(this.receiverValue);
    }

    private NotificationEventReceiverArgs() {}

    private NotificationEventReceiverArgs(NotificationEventReceiverArgs $) {
        this.receiverType = $.receiverType;
        this.receiverValue = $.receiverValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationEventReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationEventReceiverArgs $;

        public Builder() {
            $ = new NotificationEventReceiverArgs();
        }

        public Builder(NotificationEventReceiverArgs defaults) {
            $ = new NotificationEventReceiverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param receiverType The type of the notification event receiver.
         * 
         * @return builder
         * 
         */
        public Builder receiverType(@Nullable Output<String> receiverType) {
            $.receiverType = receiverType;
            return this;
        }

        /**
         * @param receiverType The type of the notification event receiver.
         * 
         * @return builder
         * 
         */
        public Builder receiverType(String receiverType) {
            return receiverType(Output.of(receiverType));
        }

        /**
         * @param receiverValue The notification event receiver value.
         * 
         * @return builder
         * 
         */
        public Builder receiverValue(@Nullable Output<NotificationReceiverValueArgs> receiverValue) {
            $.receiverValue = receiverValue;
            return this;
        }

        /**
         * @param receiverValue The notification event receiver value.
         * 
         * @return builder
         * 
         */
        public Builder receiverValue(NotificationReceiverValueArgs receiverValue) {
            return receiverValue(Output.of(receiverValue));
        }

        public NotificationEventReceiverArgs build() {
            return $;
        }
    }

}
