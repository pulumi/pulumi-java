// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.enums.VpnAuthenticationType;
import com.pulumi.azurenative.network.enums.VpnGatewayTunnelingProtocol;
import com.pulumi.azurenative.network.inputs.AadAuthenticationParametersArgs;
import com.pulumi.azurenative.network.inputs.IpsecPolicyArgs;
import com.pulumi.azurenative.network.inputs.RadiusServerArgs;
import com.pulumi.azurenative.network.inputs.VpnServerConfigRadiusClientRootCertificateArgs;
import com.pulumi.azurenative.network.inputs.VpnServerConfigRadiusServerRootCertificateArgs;
import com.pulumi.azurenative.network.inputs.VpnServerConfigVpnClientRevokedCertificateArgs;
import com.pulumi.azurenative.network.inputs.VpnServerConfigVpnClientRootCertificateArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VpnServerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnServerConfigurationArgs Empty = new VpnServerConfigurationArgs();

    /**
     * The set of aad vpn authentication parameters.
     * 
     */
    @Import(name="aadAuthenticationParameters")
      private final @Nullable Output<AadAuthenticationParametersArgs> aadAuthenticationParameters;

    public Output<AadAuthenticationParametersArgs> aadAuthenticationParameters() {
        return this.aadAuthenticationParameters == null ? Codegen.empty() : this.aadAuthenticationParameters;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the VpnServerConfiguration that is unique within a resource group.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Radius client root certificate of VpnServerConfiguration.
     * 
     */
    @Import(name="radiusClientRootCertificates")
      private final @Nullable Output<List<VpnServerConfigRadiusClientRootCertificateArgs>> radiusClientRootCertificates;

    public Output<List<VpnServerConfigRadiusClientRootCertificateArgs>> radiusClientRootCertificates() {
        return this.radiusClientRootCertificates == null ? Codegen.empty() : this.radiusClientRootCertificates;
    }

    /**
     * The radius server address property of the VpnServerConfiguration resource for point to site client connection.
     * 
     */
    @Import(name="radiusServerAddress")
      private final @Nullable Output<String> radiusServerAddress;

    public Output<String> radiusServerAddress() {
        return this.radiusServerAddress == null ? Codegen.empty() : this.radiusServerAddress;
    }

    /**
     * Radius Server root certificate of VpnServerConfiguration.
     * 
     */
    @Import(name="radiusServerRootCertificates")
      private final @Nullable Output<List<VpnServerConfigRadiusServerRootCertificateArgs>> radiusServerRootCertificates;

    public Output<List<VpnServerConfigRadiusServerRootCertificateArgs>> radiusServerRootCertificates() {
        return this.radiusServerRootCertificates == null ? Codegen.empty() : this.radiusServerRootCertificates;
    }

    /**
     * The radius secret property of the VpnServerConfiguration resource for point to site client connection.
     * 
     */
    @Import(name="radiusServerSecret")
      private final @Nullable Output<String> radiusServerSecret;

    public Output<String> radiusServerSecret() {
        return this.radiusServerSecret == null ? Codegen.empty() : this.radiusServerSecret;
    }

    /**
     * Multiple Radius Server configuration for VpnServerConfiguration.
     * 
     */
    @Import(name="radiusServers")
      private final @Nullable Output<List<RadiusServerArgs>> radiusServers;

    public Output<List<RadiusServerArgs>> radiusServers() {
        return this.radiusServers == null ? Codegen.empty() : this.radiusServers;
    }

    /**
     * The resource group name of the VpnServerConfiguration.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * VPN authentication types for the VpnServerConfiguration.
     * 
     */
    @Import(name="vpnAuthenticationTypes")
      private final @Nullable Output<List<Either<String,VpnAuthenticationType>>> vpnAuthenticationTypes;

    public Output<List<Either<String,VpnAuthenticationType>>> vpnAuthenticationTypes() {
        return this.vpnAuthenticationTypes == null ? Codegen.empty() : this.vpnAuthenticationTypes;
    }

    /**
     * VpnClientIpsecPolicies for VpnServerConfiguration.
     * 
     */
    @Import(name="vpnClientIpsecPolicies")
      private final @Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies;

    public Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies() {
        return this.vpnClientIpsecPolicies == null ? Codegen.empty() : this.vpnClientIpsecPolicies;
    }

    /**
     * VPN client revoked certificate of VpnServerConfiguration.
     * 
     */
    @Import(name="vpnClientRevokedCertificates")
      private final @Nullable Output<List<VpnServerConfigVpnClientRevokedCertificateArgs>> vpnClientRevokedCertificates;

    public Output<List<VpnServerConfigVpnClientRevokedCertificateArgs>> vpnClientRevokedCertificates() {
        return this.vpnClientRevokedCertificates == null ? Codegen.empty() : this.vpnClientRevokedCertificates;
    }

    /**
     * VPN client root certificate of VpnServerConfiguration.
     * 
     */
    @Import(name="vpnClientRootCertificates")
      private final @Nullable Output<List<VpnServerConfigVpnClientRootCertificateArgs>> vpnClientRootCertificates;

    public Output<List<VpnServerConfigVpnClientRootCertificateArgs>> vpnClientRootCertificates() {
        return this.vpnClientRootCertificates == null ? Codegen.empty() : this.vpnClientRootCertificates;
    }

    /**
     * VPN protocols for the VpnServerConfiguration.
     * 
     */
    @Import(name="vpnProtocols")
      private final @Nullable Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols;

    public Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols() {
        return this.vpnProtocols == null ? Codegen.empty() : this.vpnProtocols;
    }

    /**
     * The name of the VpnServerConfiguration being created or updated.
     * 
     */
    @Import(name="vpnServerConfigurationName")
      private final @Nullable Output<String> vpnServerConfigurationName;

    public Output<String> vpnServerConfigurationName() {
        return this.vpnServerConfigurationName == null ? Codegen.empty() : this.vpnServerConfigurationName;
    }

    public VpnServerConfigurationArgs(
        @Nullable Output<AadAuthenticationParametersArgs> aadAuthenticationParameters,
        @Nullable Output<String> id,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<List<VpnServerConfigRadiusClientRootCertificateArgs>> radiusClientRootCertificates,
        @Nullable Output<String> radiusServerAddress,
        @Nullable Output<List<VpnServerConfigRadiusServerRootCertificateArgs>> radiusServerRootCertificates,
        @Nullable Output<String> radiusServerSecret,
        @Nullable Output<List<RadiusServerArgs>> radiusServers,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<List<Either<String,VpnAuthenticationType>>> vpnAuthenticationTypes,
        @Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies,
        @Nullable Output<List<VpnServerConfigVpnClientRevokedCertificateArgs>> vpnClientRevokedCertificates,
        @Nullable Output<List<VpnServerConfigVpnClientRootCertificateArgs>> vpnClientRootCertificates,
        @Nullable Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols,
        @Nullable Output<String> vpnServerConfigurationName) {
        this.aadAuthenticationParameters = aadAuthenticationParameters;
        this.id = id;
        this.location = location;
        this.name = name;
        this.radiusClientRootCertificates = radiusClientRootCertificates;
        this.radiusServerAddress = radiusServerAddress;
        this.radiusServerRootCertificates = radiusServerRootCertificates;
        this.radiusServerSecret = radiusServerSecret;
        this.radiusServers = radiusServers;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.vpnAuthenticationTypes = vpnAuthenticationTypes;
        this.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
        this.vpnClientRevokedCertificates = vpnClientRevokedCertificates;
        this.vpnClientRootCertificates = vpnClientRootCertificates;
        this.vpnProtocols = vpnProtocols;
        this.vpnServerConfigurationName = vpnServerConfigurationName;
    }

    private VpnServerConfigurationArgs() {
        this.aadAuthenticationParameters = Codegen.empty();
        this.id = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.radiusClientRootCertificates = Codegen.empty();
        this.radiusServerAddress = Codegen.empty();
        this.radiusServerRootCertificates = Codegen.empty();
        this.radiusServerSecret = Codegen.empty();
        this.radiusServers = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
        this.vpnAuthenticationTypes = Codegen.empty();
        this.vpnClientIpsecPolicies = Codegen.empty();
        this.vpnClientRevokedCertificates = Codegen.empty();
        this.vpnClientRootCertificates = Codegen.empty();
        this.vpnProtocols = Codegen.empty();
        this.vpnServerConfigurationName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpnServerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AadAuthenticationParametersArgs> aadAuthenticationParameters;
        private @Nullable Output<String> id;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<List<VpnServerConfigRadiusClientRootCertificateArgs>> radiusClientRootCertificates;
        private @Nullable Output<String> radiusServerAddress;
        private @Nullable Output<List<VpnServerConfigRadiusServerRootCertificateArgs>> radiusServerRootCertificates;
        private @Nullable Output<String> radiusServerSecret;
        private @Nullable Output<List<RadiusServerArgs>> radiusServers;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<List<Either<String,VpnAuthenticationType>>> vpnAuthenticationTypes;
        private @Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies;
        private @Nullable Output<List<VpnServerConfigVpnClientRevokedCertificateArgs>> vpnClientRevokedCertificates;
        private @Nullable Output<List<VpnServerConfigVpnClientRootCertificateArgs>> vpnClientRootCertificates;
        private @Nullable Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols;
        private @Nullable Output<String> vpnServerConfigurationName;

        public Builder() {
    	      // Empty
        }

        public Builder(VpnServerConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadAuthenticationParameters = defaults.aadAuthenticationParameters;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.radiusClientRootCertificates = defaults.radiusClientRootCertificates;
    	      this.radiusServerAddress = defaults.radiusServerAddress;
    	      this.radiusServerRootCertificates = defaults.radiusServerRootCertificates;
    	      this.radiusServerSecret = defaults.radiusServerSecret;
    	      this.radiusServers = defaults.radiusServers;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.vpnAuthenticationTypes = defaults.vpnAuthenticationTypes;
    	      this.vpnClientIpsecPolicies = defaults.vpnClientIpsecPolicies;
    	      this.vpnClientRevokedCertificates = defaults.vpnClientRevokedCertificates;
    	      this.vpnClientRootCertificates = defaults.vpnClientRootCertificates;
    	      this.vpnProtocols = defaults.vpnProtocols;
    	      this.vpnServerConfigurationName = defaults.vpnServerConfigurationName;
        }

        public Builder aadAuthenticationParameters(@Nullable Output<AadAuthenticationParametersArgs> aadAuthenticationParameters) {
            this.aadAuthenticationParameters = aadAuthenticationParameters;
            return this;
        }
        public Builder aadAuthenticationParameters(@Nullable AadAuthenticationParametersArgs aadAuthenticationParameters) {
            this.aadAuthenticationParameters = Codegen.ofNullable(aadAuthenticationParameters);
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder radiusClientRootCertificates(@Nullable Output<List<VpnServerConfigRadiusClientRootCertificateArgs>> radiusClientRootCertificates) {
            this.radiusClientRootCertificates = radiusClientRootCertificates;
            return this;
        }
        public Builder radiusClientRootCertificates(@Nullable List<VpnServerConfigRadiusClientRootCertificateArgs> radiusClientRootCertificates) {
            this.radiusClientRootCertificates = Codegen.ofNullable(radiusClientRootCertificates);
            return this;
        }
        public Builder radiusClientRootCertificates(VpnServerConfigRadiusClientRootCertificateArgs... radiusClientRootCertificates) {
            return radiusClientRootCertificates(List.of(radiusClientRootCertificates));
        }
        public Builder radiusServerAddress(@Nullable Output<String> radiusServerAddress) {
            this.radiusServerAddress = radiusServerAddress;
            return this;
        }
        public Builder radiusServerAddress(@Nullable String radiusServerAddress) {
            this.radiusServerAddress = Codegen.ofNullable(radiusServerAddress);
            return this;
        }
        public Builder radiusServerRootCertificates(@Nullable Output<List<VpnServerConfigRadiusServerRootCertificateArgs>> radiusServerRootCertificates) {
            this.radiusServerRootCertificates = radiusServerRootCertificates;
            return this;
        }
        public Builder radiusServerRootCertificates(@Nullable List<VpnServerConfigRadiusServerRootCertificateArgs> radiusServerRootCertificates) {
            this.radiusServerRootCertificates = Codegen.ofNullable(radiusServerRootCertificates);
            return this;
        }
        public Builder radiusServerRootCertificates(VpnServerConfigRadiusServerRootCertificateArgs... radiusServerRootCertificates) {
            return radiusServerRootCertificates(List.of(radiusServerRootCertificates));
        }
        public Builder radiusServerSecret(@Nullable Output<String> radiusServerSecret) {
            this.radiusServerSecret = radiusServerSecret;
            return this;
        }
        public Builder radiusServerSecret(@Nullable String radiusServerSecret) {
            this.radiusServerSecret = Codegen.ofNullable(radiusServerSecret);
            return this;
        }
        public Builder radiusServers(@Nullable Output<List<RadiusServerArgs>> radiusServers) {
            this.radiusServers = radiusServers;
            return this;
        }
        public Builder radiusServers(@Nullable List<RadiusServerArgs> radiusServers) {
            this.radiusServers = Codegen.ofNullable(radiusServers);
            return this;
        }
        public Builder radiusServers(RadiusServerArgs... radiusServers) {
            return radiusServers(List.of(radiusServers));
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder vpnAuthenticationTypes(@Nullable Output<List<Either<String,VpnAuthenticationType>>> vpnAuthenticationTypes) {
            this.vpnAuthenticationTypes = vpnAuthenticationTypes;
            return this;
        }
        public Builder vpnAuthenticationTypes(@Nullable List<Either<String,VpnAuthenticationType>> vpnAuthenticationTypes) {
            this.vpnAuthenticationTypes = Codegen.ofNullable(vpnAuthenticationTypes);
            return this;
        }
        public Builder vpnAuthenticationTypes(Either<String,VpnAuthenticationType>... vpnAuthenticationTypes) {
            return vpnAuthenticationTypes(List.of(vpnAuthenticationTypes));
        }
        public Builder vpnClientIpsecPolicies(@Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies) {
            this.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
            return this;
        }
        public Builder vpnClientIpsecPolicies(@Nullable List<IpsecPolicyArgs> vpnClientIpsecPolicies) {
            this.vpnClientIpsecPolicies = Codegen.ofNullable(vpnClientIpsecPolicies);
            return this;
        }
        public Builder vpnClientIpsecPolicies(IpsecPolicyArgs... vpnClientIpsecPolicies) {
            return vpnClientIpsecPolicies(List.of(vpnClientIpsecPolicies));
        }
        public Builder vpnClientRevokedCertificates(@Nullable Output<List<VpnServerConfigVpnClientRevokedCertificateArgs>> vpnClientRevokedCertificates) {
            this.vpnClientRevokedCertificates = vpnClientRevokedCertificates;
            return this;
        }
        public Builder vpnClientRevokedCertificates(@Nullable List<VpnServerConfigVpnClientRevokedCertificateArgs> vpnClientRevokedCertificates) {
            this.vpnClientRevokedCertificates = Codegen.ofNullable(vpnClientRevokedCertificates);
            return this;
        }
        public Builder vpnClientRevokedCertificates(VpnServerConfigVpnClientRevokedCertificateArgs... vpnClientRevokedCertificates) {
            return vpnClientRevokedCertificates(List.of(vpnClientRevokedCertificates));
        }
        public Builder vpnClientRootCertificates(@Nullable Output<List<VpnServerConfigVpnClientRootCertificateArgs>> vpnClientRootCertificates) {
            this.vpnClientRootCertificates = vpnClientRootCertificates;
            return this;
        }
        public Builder vpnClientRootCertificates(@Nullable List<VpnServerConfigVpnClientRootCertificateArgs> vpnClientRootCertificates) {
            this.vpnClientRootCertificates = Codegen.ofNullable(vpnClientRootCertificates);
            return this;
        }
        public Builder vpnClientRootCertificates(VpnServerConfigVpnClientRootCertificateArgs... vpnClientRootCertificates) {
            return vpnClientRootCertificates(List.of(vpnClientRootCertificates));
        }
        public Builder vpnProtocols(@Nullable Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols) {
            this.vpnProtocols = vpnProtocols;
            return this;
        }
        public Builder vpnProtocols(@Nullable List<Either<String,VpnGatewayTunnelingProtocol>> vpnProtocols) {
            this.vpnProtocols = Codegen.ofNullable(vpnProtocols);
            return this;
        }
        public Builder vpnProtocols(Either<String,VpnGatewayTunnelingProtocol>... vpnProtocols) {
            return vpnProtocols(List.of(vpnProtocols));
        }
        public Builder vpnServerConfigurationName(@Nullable Output<String> vpnServerConfigurationName) {
            this.vpnServerConfigurationName = vpnServerConfigurationName;
            return this;
        }
        public Builder vpnServerConfigurationName(@Nullable String vpnServerConfigurationName) {
            this.vpnServerConfigurationName = Codegen.ofNullable(vpnServerConfigurationName);
            return this;
        }        public VpnServerConfigurationArgs build() {
            return new VpnServerConfigurationArgs(aadAuthenticationParameters, id, location, name, radiusClientRootCertificates, radiusServerAddress, radiusServerRootCertificates, radiusServerSecret, radiusServers, resourceGroupName, tags, vpnAuthenticationTypes, vpnClientIpsecPolicies, vpnClientRevokedCertificates, vpnClientRootCertificates, vpnProtocols, vpnServerConfigurationName);
        }
    }
}
