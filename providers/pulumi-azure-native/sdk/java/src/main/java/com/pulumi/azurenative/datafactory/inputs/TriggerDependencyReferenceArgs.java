// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.TriggerReferenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Trigger referenced dependency.
 * 
 */
public final class TriggerDependencyReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerDependencyReferenceArgs Empty = new TriggerDependencyReferenceArgs();

    /**
     * Referenced trigger.
     * 
     */
    @Import(name="referenceTrigger", required=true)
      private final Output<TriggerReferenceArgs> referenceTrigger;

    public Output<TriggerReferenceArgs> referenceTrigger() {
        return this.referenceTrigger;
    }

    /**
     * The type of dependency reference.
     * Expected value is 'TriggerDependencyReference'.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    public TriggerDependencyReferenceArgs(
        Output<TriggerReferenceArgs> referenceTrigger,
        Output<String> type) {
        this.referenceTrigger = Objects.requireNonNull(referenceTrigger, "expected parameter 'referenceTrigger' to be non-null");
        this.type = Codegen.stringProp("type").output().arg(type).require();
    }

    private TriggerDependencyReferenceArgs() {
        this.referenceTrigger = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerDependencyReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<TriggerReferenceArgs> referenceTrigger;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerDependencyReferenceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.referenceTrigger = defaults.referenceTrigger;
    	      this.type = defaults.type;
        }

        public Builder referenceTrigger(Output<TriggerReferenceArgs> referenceTrigger) {
            this.referenceTrigger = Objects.requireNonNull(referenceTrigger);
            return this;
        }
        public Builder referenceTrigger(TriggerReferenceArgs referenceTrigger) {
            this.referenceTrigger = Output.of(Objects.requireNonNull(referenceTrigger));
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public TriggerDependencyReferenceArgs build() {
            return new TriggerDependencyReferenceArgs(referenceTrigger, type);
        }
    }
}
