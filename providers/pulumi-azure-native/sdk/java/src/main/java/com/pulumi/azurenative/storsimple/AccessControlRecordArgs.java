// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple;

import com.pulumi.azurenative.storsimple.enums.Kind;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessControlRecordArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessControlRecordArgs Empty = new AccessControlRecordArgs();

    /**
     * The name of the access control record.
     * 
     */
    @Import(name="accessControlRecordName")
    private @Nullable Output<String> accessControlRecordName;

    /**
     * @return The name of the access control record.
     * 
     */
    public Optional<Output<String>> accessControlRecordName() {
        return Optional.ofNullable(this.accessControlRecordName);
    }

    /**
     * The iSCSI initiator name (IQN).
     * 
     */
    @Import(name="initiatorName", required=true)
    private Output<String> initiatorName;

    /**
     * @return The iSCSI initiator name (IQN).
     * 
     */
    public Output<String> initiatorName() {
        return this.initiatorName;
    }

    /**
     * The Kind of the object. Currently only Series8000 is supported
     * 
     */
    @Import(name="kind")
    private @Nullable Output<Kind> kind;

    /**
     * @return The Kind of the object. Currently only Series8000 is supported
     * 
     */
    public Optional<Output<Kind>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * The manager name
     * 
     */
    @Import(name="managerName", required=true)
    private Output<String> managerName;

    /**
     * @return The manager name
     * 
     */
    public Output<String> managerName() {
        return this.managerName;
    }

    /**
     * The resource group name
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private AccessControlRecordArgs() {}

    private AccessControlRecordArgs(AccessControlRecordArgs $) {
        this.accessControlRecordName = $.accessControlRecordName;
        this.initiatorName = $.initiatorName;
        this.kind = $.kind;
        this.managerName = $.managerName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessControlRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessControlRecordArgs $;

        public Builder() {
            $ = new AccessControlRecordArgs();
        }

        public Builder(AccessControlRecordArgs defaults) {
            $ = new AccessControlRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessControlRecordName The name of the access control record.
         * 
         * @return builder
         * 
         */
        public Builder accessControlRecordName(@Nullable Output<String> accessControlRecordName) {
            $.accessControlRecordName = accessControlRecordName;
            return this;
        }

        /**
         * @param accessControlRecordName The name of the access control record.
         * 
         * @return builder
         * 
         */
        public Builder accessControlRecordName(String accessControlRecordName) {
            return accessControlRecordName(Output.of(accessControlRecordName));
        }

        /**
         * @param initiatorName The iSCSI initiator name (IQN).
         * 
         * @return builder
         * 
         */
        public Builder initiatorName(Output<String> initiatorName) {
            $.initiatorName = initiatorName;
            return this;
        }

        /**
         * @param initiatorName The iSCSI initiator name (IQN).
         * 
         * @return builder
         * 
         */
        public Builder initiatorName(String initiatorName) {
            return initiatorName(Output.of(initiatorName));
        }

        /**
         * @param kind The Kind of the object. Currently only Series8000 is supported
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<Kind> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The Kind of the object. Currently only Series8000 is supported
         * 
         * @return builder
         * 
         */
        public Builder kind(Kind kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param managerName The manager name
         * 
         * @return builder
         * 
         */
        public Builder managerName(Output<String> managerName) {
            $.managerName = managerName;
            return this;
        }

        /**
         * @param managerName The manager name
         * 
         * @return builder
         * 
         */
        public Builder managerName(String managerName) {
            return managerName(Output.of(managerName));
        }

        /**
         * @param resourceGroupName The resource group name
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public AccessControlRecordArgs build() {
            $.initiatorName = Objects.requireNonNull($.initiatorName, "expected parameter 'initiatorName' to be non-null");
            $.managerName = Objects.requireNonNull($.managerName, "expected parameter 'managerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
