// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse {
    /**
     * @return Number of applied deletes
     * 
     */
    private final String cdcDeleteCounter;
    /**
     * @return Number of applied inserts
     * 
     */
    private final String cdcInsertCounter;
    /**
     * @return Number of applied updates
     * 
     */
    private final String cdcUpdateCounter;
    /**
     * @return Number of data errors occurred
     * 
     */
    private final Double dataErrorsCounter;
    /**
     * @return Name of the database
     * 
     */
    private final String databaseName;
    /**
     * @return Full load end time
     * 
     */
    private final String fullLoadEndedOn;
    /**
     * @return Estimate to finish full load
     * 
     */
    private final String fullLoadEstFinishTime;
    /**
     * @return Full load start time
     * 
     */
    private final String fullLoadStartedOn;
    /**
     * @return Number of rows applied in full load
     * 
     */
    private final Double fullLoadTotalRows;
    /**
     * @return Result identifier
     * 
     */
    private final String id;
    /**
     * @return Last modified time on target
     * 
     */
    private final String lastModifiedTime;
    /**
     * @return Result type
     * Expected value is &#39;TableLevelOutput&#39;.
     * 
     */
    private final String resultType;
    /**
     * @return Current state of the table migration
     * 
     */
    private final String state;
    /**
     * @return Name of the table
     * 
     */
    private final String tableName;
    /**
     * @return Total number of applied changes
     * 
     */
    private final Double totalChangesApplied;

    @CustomType.Constructor
    private MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse(
        @CustomType.Parameter("cdcDeleteCounter") String cdcDeleteCounter,
        @CustomType.Parameter("cdcInsertCounter") String cdcInsertCounter,
        @CustomType.Parameter("cdcUpdateCounter") String cdcUpdateCounter,
        @CustomType.Parameter("dataErrorsCounter") Double dataErrorsCounter,
        @CustomType.Parameter("databaseName") String databaseName,
        @CustomType.Parameter("fullLoadEndedOn") String fullLoadEndedOn,
        @CustomType.Parameter("fullLoadEstFinishTime") String fullLoadEstFinishTime,
        @CustomType.Parameter("fullLoadStartedOn") String fullLoadStartedOn,
        @CustomType.Parameter("fullLoadTotalRows") Double fullLoadTotalRows,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lastModifiedTime") String lastModifiedTime,
        @CustomType.Parameter("resultType") String resultType,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("tableName") String tableName,
        @CustomType.Parameter("totalChangesApplied") Double totalChangesApplied) {
        this.cdcDeleteCounter = cdcDeleteCounter;
        this.cdcInsertCounter = cdcInsertCounter;
        this.cdcUpdateCounter = cdcUpdateCounter;
        this.dataErrorsCounter = dataErrorsCounter;
        this.databaseName = databaseName;
        this.fullLoadEndedOn = fullLoadEndedOn;
        this.fullLoadEstFinishTime = fullLoadEstFinishTime;
        this.fullLoadStartedOn = fullLoadStartedOn;
        this.fullLoadTotalRows = fullLoadTotalRows;
        this.id = id;
        this.lastModifiedTime = lastModifiedTime;
        this.resultType = resultType;
        this.state = state;
        this.tableName = tableName;
        this.totalChangesApplied = totalChangesApplied;
    }

    /**
     * @return Number of applied deletes
     * 
     */
    public String cdcDeleteCounter() {
        return this.cdcDeleteCounter;
    }
    /**
     * @return Number of applied inserts
     * 
     */
    public String cdcInsertCounter() {
        return this.cdcInsertCounter;
    }
    /**
     * @return Number of applied updates
     * 
     */
    public String cdcUpdateCounter() {
        return this.cdcUpdateCounter;
    }
    /**
     * @return Number of data errors occurred
     * 
     */
    public Double dataErrorsCounter() {
        return this.dataErrorsCounter;
    }
    /**
     * @return Name of the database
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return Full load end time
     * 
     */
    public String fullLoadEndedOn() {
        return this.fullLoadEndedOn;
    }
    /**
     * @return Estimate to finish full load
     * 
     */
    public String fullLoadEstFinishTime() {
        return this.fullLoadEstFinishTime;
    }
    /**
     * @return Full load start time
     * 
     */
    public String fullLoadStartedOn() {
        return this.fullLoadStartedOn;
    }
    /**
     * @return Number of rows applied in full load
     * 
     */
    public Double fullLoadTotalRows() {
        return this.fullLoadTotalRows;
    }
    /**
     * @return Result identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Last modified time on target
     * 
     */
    public String lastModifiedTime() {
        return this.lastModifiedTime;
    }
    /**
     * @return Result type
     * Expected value is &#39;TableLevelOutput&#39;.
     * 
     */
    public String resultType() {
        return this.resultType;
    }
    /**
     * @return Current state of the table migration
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Name of the table
     * 
     */
    public String tableName() {
        return this.tableName;
    }
    /**
     * @return Total number of applied changes
     * 
     */
    public Double totalChangesApplied() {
        return this.totalChangesApplied;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cdcDeleteCounter;
        private String cdcInsertCounter;
        private String cdcUpdateCounter;
        private Double dataErrorsCounter;
        private String databaseName;
        private String fullLoadEndedOn;
        private String fullLoadEstFinishTime;
        private String fullLoadStartedOn;
        private Double fullLoadTotalRows;
        private String id;
        private String lastModifiedTime;
        private String resultType;
        private String state;
        private String tableName;
        private Double totalChangesApplied;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cdcDeleteCounter = defaults.cdcDeleteCounter;
    	      this.cdcInsertCounter = defaults.cdcInsertCounter;
    	      this.cdcUpdateCounter = defaults.cdcUpdateCounter;
    	      this.dataErrorsCounter = defaults.dataErrorsCounter;
    	      this.databaseName = defaults.databaseName;
    	      this.fullLoadEndedOn = defaults.fullLoadEndedOn;
    	      this.fullLoadEstFinishTime = defaults.fullLoadEstFinishTime;
    	      this.fullLoadStartedOn = defaults.fullLoadStartedOn;
    	      this.fullLoadTotalRows = defaults.fullLoadTotalRows;
    	      this.id = defaults.id;
    	      this.lastModifiedTime = defaults.lastModifiedTime;
    	      this.resultType = defaults.resultType;
    	      this.state = defaults.state;
    	      this.tableName = defaults.tableName;
    	      this.totalChangesApplied = defaults.totalChangesApplied;
        }

        public Builder cdcDeleteCounter(String cdcDeleteCounter) {
            this.cdcDeleteCounter = Objects.requireNonNull(cdcDeleteCounter);
            return this;
        }
        public Builder cdcInsertCounter(String cdcInsertCounter) {
            this.cdcInsertCounter = Objects.requireNonNull(cdcInsertCounter);
            return this;
        }
        public Builder cdcUpdateCounter(String cdcUpdateCounter) {
            this.cdcUpdateCounter = Objects.requireNonNull(cdcUpdateCounter);
            return this;
        }
        public Builder dataErrorsCounter(Double dataErrorsCounter) {
            this.dataErrorsCounter = Objects.requireNonNull(dataErrorsCounter);
            return this;
        }
        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        public Builder fullLoadEndedOn(String fullLoadEndedOn) {
            this.fullLoadEndedOn = Objects.requireNonNull(fullLoadEndedOn);
            return this;
        }
        public Builder fullLoadEstFinishTime(String fullLoadEstFinishTime) {
            this.fullLoadEstFinishTime = Objects.requireNonNull(fullLoadEstFinishTime);
            return this;
        }
        public Builder fullLoadStartedOn(String fullLoadStartedOn) {
            this.fullLoadStartedOn = Objects.requireNonNull(fullLoadStartedOn);
            return this;
        }
        public Builder fullLoadTotalRows(Double fullLoadTotalRows) {
            this.fullLoadTotalRows = Objects.requireNonNull(fullLoadTotalRows);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lastModifiedTime(String lastModifiedTime) {
            this.lastModifiedTime = Objects.requireNonNull(lastModifiedTime);
            return this;
        }
        public Builder resultType(String resultType) {
            this.resultType = Objects.requireNonNull(resultType);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder tableName(String tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }
        public Builder totalChangesApplied(Double totalChangesApplied) {
            this.totalChangesApplied = Objects.requireNonNull(totalChangesApplied);
            return this;
        }        public MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse build() {
            return new MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse(cdcDeleteCounter, cdcInsertCounter, cdcUpdateCounter, dataErrorsCounter, databaseName, fullLoadEndedOn, fullLoadEstFinishTime, fullLoadStartedOn, fullLoadTotalRows, id, lastModifiedTime, resultType, state, tableName, totalChangesApplied);
        }
    }
}
