// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.policyinsights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The filters that will be applied to determine which resources to remediate.
 * 
 */
public final class RemediationFiltersArgs extends com.pulumi.resources.ResourceArgs {

    public static final RemediationFiltersArgs Empty = new RemediationFiltersArgs();

    /**
     * The resource locations that will be remediated.
     * 
     */
    @Import(name="locations")
    private @Nullable Output<List<String>> locations;

    /**
     * @return The resource locations that will be remediated.
     * 
     */
    public Optional<Output<List<String>>> locations() {
        return Optional.ofNullable(this.locations);
    }

    private RemediationFiltersArgs() {}

    private RemediationFiltersArgs(RemediationFiltersArgs $) {
        this.locations = $.locations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RemediationFiltersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RemediationFiltersArgs $;

        public Builder() {
            $ = new RemediationFiltersArgs();
        }

        public Builder(RemediationFiltersArgs defaults) {
            $ = new RemediationFiltersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param locations The resource locations that will be remediated.
         * 
         * @return builder
         * 
         */
        public Builder locations(@Nullable Output<List<String>> locations) {
            $.locations = locations;
            return this;
        }

        /**
         * @param locations The resource locations that will be remediated.
         * 
         * @return builder
         * 
         */
        public Builder locations(List<String> locations) {
            return locations(Output.of(locations));
        }

        /**
         * @param locations The resource locations that will be remediated.
         * 
         * @return builder
         * 
         */
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }

        public RemediationFiltersArgs build() {
            return $;
        }
    }

}
