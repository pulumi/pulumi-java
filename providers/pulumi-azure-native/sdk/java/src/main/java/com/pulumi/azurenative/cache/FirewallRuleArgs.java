// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cache;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallRuleArgs Empty = new FirewallRuleArgs();

    /**
     * The name of the Redis cache.
     * 
     */
    @Import(name="cacheName", required=true)
    private Output<String> cacheName;

    /**
     * @return The name of the Redis cache.
     * 
     */
    public Output<String> cacheName() {
        return this.cacheName;
    }

    /**
     * highest IP address included in the range
     * 
     */
    @Import(name="endIP", required=true)
    private Output<String> endIP;

    /**
     * @return highest IP address included in the range
     * 
     */
    public Output<String> endIP() {
        return this.endIP;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the firewall rule.
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return The name of the firewall rule.
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    /**
     * lowest IP address included in the range
     * 
     */
    @Import(name="startIP", required=true)
    private Output<String> startIP;

    /**
     * @return lowest IP address included in the range
     * 
     */
    public Output<String> startIP() {
        return this.startIP;
    }

    private FirewallRuleArgs() {}

    private FirewallRuleArgs(FirewallRuleArgs $) {
        this.cacheName = $.cacheName;
        this.endIP = $.endIP;
        this.resourceGroupName = $.resourceGroupName;
        this.ruleName = $.ruleName;
        this.startIP = $.startIP;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallRuleArgs $;

        public Builder() {
            $ = new FirewallRuleArgs();
        }

        public Builder(FirewallRuleArgs defaults) {
            $ = new FirewallRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cacheName The name of the Redis cache.
         * 
         * @return builder
         * 
         */
        public Builder cacheName(Output<String> cacheName) {
            $.cacheName = cacheName;
            return this;
        }

        /**
         * @param cacheName The name of the Redis cache.
         * 
         * @return builder
         * 
         */
        public Builder cacheName(String cacheName) {
            return cacheName(Output.of(cacheName));
        }

        /**
         * @param endIP highest IP address included in the range
         * 
         * @return builder
         * 
         */
        public Builder endIP(Output<String> endIP) {
            $.endIP = endIP;
            return this;
        }

        /**
         * @param endIP highest IP address included in the range
         * 
         * @return builder
         * 
         */
        public Builder endIP(String endIP) {
            return endIP(Output.of(endIP));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param ruleName The name of the firewall rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName The name of the firewall rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        /**
         * @param startIP lowest IP address included in the range
         * 
         * @return builder
         * 
         */
        public Builder startIP(Output<String> startIP) {
            $.startIP = startIP;
            return this;
        }

        /**
         * @param startIP lowest IP address included in the range
         * 
         * @return builder
         * 
         */
        public Builder startIP(String startIP) {
            return startIP(Output.of(startIP));
        }

        public FirewallRuleArgs build() {
            $.cacheName = Objects.requireNonNull($.cacheName, "expected parameter 'cacheName' to be non-null");
            $.endIP = Objects.requireNonNull($.endIP, "expected parameter 'endIP' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.startIP = Objects.requireNonNull($.startIP, "expected parameter 'startIP' to be non-null");
            return $;
        }
    }

}
