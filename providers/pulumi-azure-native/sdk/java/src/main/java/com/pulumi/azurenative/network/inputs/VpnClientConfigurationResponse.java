// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.AddressSpaceResponse;
import com.pulumi.azurenative.network.inputs.IpsecPolicyResponse;
import com.pulumi.azurenative.network.inputs.RadiusServerResponse;
import com.pulumi.azurenative.network.inputs.VpnClientRevokedCertificateResponse;
import com.pulumi.azurenative.network.inputs.VpnClientRootCertificateResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * VpnClientConfiguration for P2S client.
 * 
 */
public final class VpnClientConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final VpnClientConfigurationResponse Empty = new VpnClientConfigurationResponse();

    /**
     * The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     * 
     */
    @Import(name="aadAudience")
    private @Nullable String aadAudience;

    public Optional<String> aadAudience() {
        return Optional.ofNullable(this.aadAudience);
    }

    /**
     * The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     * 
     */
    @Import(name="aadIssuer")
    private @Nullable String aadIssuer;

    public Optional<String> aadIssuer() {
        return Optional.ofNullable(this.aadIssuer);
    }

    /**
     * The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     * 
     */
    @Import(name="aadTenant")
    private @Nullable String aadTenant;

    public Optional<String> aadTenant() {
        return Optional.ofNullable(this.aadTenant);
    }

    /**
     * The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
     * 
     */
    @Import(name="radiusServerAddress")
    private @Nullable String radiusServerAddress;

    public Optional<String> radiusServerAddress() {
        return Optional.ofNullable(this.radiusServerAddress);
    }

    /**
     * The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
     * 
     */
    @Import(name="radiusServerSecret")
    private @Nullable String radiusServerSecret;

    public Optional<String> radiusServerSecret() {
        return Optional.ofNullable(this.radiusServerSecret);
    }

    /**
     * The radiusServers property for multiple radius server configuration.
     * 
     */
    @Import(name="radiusServers")
    private @Nullable List<RadiusServerResponse> radiusServers;

    public Optional<List<RadiusServerResponse>> radiusServers() {
        return Optional.ofNullable(this.radiusServers);
    }

    /**
     * VPN authentication types for the virtual network gateway..
     * 
     */
    @Import(name="vpnAuthenticationTypes")
    private @Nullable List<String> vpnAuthenticationTypes;

    public Optional<List<String>> vpnAuthenticationTypes() {
        return Optional.ofNullable(this.vpnAuthenticationTypes);
    }

    /**
     * The reference to the address space resource which represents Address space for P2S VpnClient.
     * 
     */
    @Import(name="vpnClientAddressPool")
    private @Nullable AddressSpaceResponse vpnClientAddressPool;

    public Optional<AddressSpaceResponse> vpnClientAddressPool() {
        return Optional.ofNullable(this.vpnClientAddressPool);
    }

    /**
     * VpnClientIpsecPolicies for virtual network gateway P2S client.
     * 
     */
    @Import(name="vpnClientIpsecPolicies")
    private @Nullable List<IpsecPolicyResponse> vpnClientIpsecPolicies;

    public Optional<List<IpsecPolicyResponse>> vpnClientIpsecPolicies() {
        return Optional.ofNullable(this.vpnClientIpsecPolicies);
    }

    /**
     * VpnClientProtocols for Virtual network gateway.
     * 
     */
    @Import(name="vpnClientProtocols")
    private @Nullable List<String> vpnClientProtocols;

    public Optional<List<String>> vpnClientProtocols() {
        return Optional.ofNullable(this.vpnClientProtocols);
    }

    /**
     * VpnClientRevokedCertificate for Virtual network gateway.
     * 
     */
    @Import(name="vpnClientRevokedCertificates")
    private @Nullable List<VpnClientRevokedCertificateResponse> vpnClientRevokedCertificates;

    public Optional<List<VpnClientRevokedCertificateResponse>> vpnClientRevokedCertificates() {
        return Optional.ofNullable(this.vpnClientRevokedCertificates);
    }

    /**
     * VpnClientRootCertificate for virtual network gateway.
     * 
     */
    @Import(name="vpnClientRootCertificates")
    private @Nullable List<VpnClientRootCertificateResponse> vpnClientRootCertificates;

    public Optional<List<VpnClientRootCertificateResponse>> vpnClientRootCertificates() {
        return Optional.ofNullable(this.vpnClientRootCertificates);
    }

    private VpnClientConfigurationResponse() {}

    private VpnClientConfigurationResponse(VpnClientConfigurationResponse $) {
        this.aadAudience = $.aadAudience;
        this.aadIssuer = $.aadIssuer;
        this.aadTenant = $.aadTenant;
        this.radiusServerAddress = $.radiusServerAddress;
        this.radiusServerSecret = $.radiusServerSecret;
        this.radiusServers = $.radiusServers;
        this.vpnAuthenticationTypes = $.vpnAuthenticationTypes;
        this.vpnClientAddressPool = $.vpnClientAddressPool;
        this.vpnClientIpsecPolicies = $.vpnClientIpsecPolicies;
        this.vpnClientProtocols = $.vpnClientProtocols;
        this.vpnClientRevokedCertificates = $.vpnClientRevokedCertificates;
        this.vpnClientRootCertificates = $.vpnClientRootCertificates;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnClientConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnClientConfigurationResponse $;

        public Builder() {
            $ = new VpnClientConfigurationResponse();
        }

        public Builder(VpnClientConfigurationResponse defaults) {
            $ = new VpnClientConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder aadAudience(@Nullable String aadAudience) {
            $.aadAudience = aadAudience;
            return this;
        }

        public Builder aadIssuer(@Nullable String aadIssuer) {
            $.aadIssuer = aadIssuer;
            return this;
        }

        public Builder aadTenant(@Nullable String aadTenant) {
            $.aadTenant = aadTenant;
            return this;
        }

        public Builder radiusServerAddress(@Nullable String radiusServerAddress) {
            $.radiusServerAddress = radiusServerAddress;
            return this;
        }

        public Builder radiusServerSecret(@Nullable String radiusServerSecret) {
            $.radiusServerSecret = radiusServerSecret;
            return this;
        }

        public Builder radiusServers(@Nullable List<RadiusServerResponse> radiusServers) {
            $.radiusServers = radiusServers;
            return this;
        }

        public Builder radiusServers(RadiusServerResponse... radiusServers) {
            return radiusServers(List.of(radiusServers));
        }

        public Builder vpnAuthenticationTypes(@Nullable List<String> vpnAuthenticationTypes) {
            $.vpnAuthenticationTypes = vpnAuthenticationTypes;
            return this;
        }

        public Builder vpnAuthenticationTypes(String... vpnAuthenticationTypes) {
            return vpnAuthenticationTypes(List.of(vpnAuthenticationTypes));
        }

        public Builder vpnClientAddressPool(@Nullable AddressSpaceResponse vpnClientAddressPool) {
            $.vpnClientAddressPool = vpnClientAddressPool;
            return this;
        }

        public Builder vpnClientIpsecPolicies(@Nullable List<IpsecPolicyResponse> vpnClientIpsecPolicies) {
            $.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
            return this;
        }

        public Builder vpnClientIpsecPolicies(IpsecPolicyResponse... vpnClientIpsecPolicies) {
            return vpnClientIpsecPolicies(List.of(vpnClientIpsecPolicies));
        }

        public Builder vpnClientProtocols(@Nullable List<String> vpnClientProtocols) {
            $.vpnClientProtocols = vpnClientProtocols;
            return this;
        }

        public Builder vpnClientProtocols(String... vpnClientProtocols) {
            return vpnClientProtocols(List.of(vpnClientProtocols));
        }

        public Builder vpnClientRevokedCertificates(@Nullable List<VpnClientRevokedCertificateResponse> vpnClientRevokedCertificates) {
            $.vpnClientRevokedCertificates = vpnClientRevokedCertificates;
            return this;
        }

        public Builder vpnClientRevokedCertificates(VpnClientRevokedCertificateResponse... vpnClientRevokedCertificates) {
            return vpnClientRevokedCertificates(List.of(vpnClientRevokedCertificates));
        }

        public Builder vpnClientRootCertificates(@Nullable List<VpnClientRootCertificateResponse> vpnClientRootCertificates) {
            $.vpnClientRootCertificates = vpnClientRootCertificates;
            return this;
        }

        public Builder vpnClientRootCertificates(VpnClientRootCertificateResponse... vpnClientRootCertificates) {
            return vpnClientRootCertificates(List.of(vpnClientRootCertificates));
        }

        public VpnClientConfigurationResponse build() {
            return $;
        }
    }

}
