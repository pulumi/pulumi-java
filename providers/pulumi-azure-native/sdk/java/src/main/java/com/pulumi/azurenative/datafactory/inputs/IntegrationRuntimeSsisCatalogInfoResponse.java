// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.SecureStringResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Catalog information for managed dedicated integration runtime.
 * 
 */
public final class IntegrationRuntimeSsisCatalogInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final IntegrationRuntimeSsisCatalogInfoResponse Empty = new IntegrationRuntimeSsisCatalogInfoResponse();

    /**
     * The password of the administrator user account of the catalog database.
     * 
     */
    @Import(name="catalogAdminPassword")
    private @Nullable SecureStringResponse catalogAdminPassword;

    public Optional<SecureStringResponse> catalogAdminPassword() {
        return Optional.ofNullable(this.catalogAdminPassword);
    }

    /**
     * The administrator user name of catalog database.
     * 
     */
    @Import(name="catalogAdminUserName")
    private @Nullable String catalogAdminUserName;

    public Optional<String> catalogAdminUserName() {
        return Optional.ofNullable(this.catalogAdminUserName);
    }

    /**
     * The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
     * 
     */
    @Import(name="catalogPricingTier")
    private @Nullable String catalogPricingTier;

    public Optional<String> catalogPricingTier() {
        return Optional.ofNullable(this.catalogPricingTier);
    }

    /**
     * The catalog database server URL.
     * 
     */
    @Import(name="catalogServerEndpoint")
    private @Nullable String catalogServerEndpoint;

    public Optional<String> catalogServerEndpoint() {
        return Optional.ofNullable(this.catalogServerEndpoint);
    }

    /**
     * The dual standby pair name of Azure-SSIS Integration Runtimes to support SSISDB failover.
     * 
     */
    @Import(name="dualStandbyPairName")
    private @Nullable String dualStandbyPairName;

    public Optional<String> dualStandbyPairName() {
        return Optional.ofNullable(this.dualStandbyPairName);
    }

    private IntegrationRuntimeSsisCatalogInfoResponse() {}

    private IntegrationRuntimeSsisCatalogInfoResponse(IntegrationRuntimeSsisCatalogInfoResponse $) {
        this.catalogAdminPassword = $.catalogAdminPassword;
        this.catalogAdminUserName = $.catalogAdminUserName;
        this.catalogPricingTier = $.catalogPricingTier;
        this.catalogServerEndpoint = $.catalogServerEndpoint;
        this.dualStandbyPairName = $.dualStandbyPairName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationRuntimeSsisCatalogInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationRuntimeSsisCatalogInfoResponse $;

        public Builder() {
            $ = new IntegrationRuntimeSsisCatalogInfoResponse();
        }

        public Builder(IntegrationRuntimeSsisCatalogInfoResponse defaults) {
            $ = new IntegrationRuntimeSsisCatalogInfoResponse(Objects.requireNonNull(defaults));
        }

        public Builder catalogAdminPassword(@Nullable SecureStringResponse catalogAdminPassword) {
            $.catalogAdminPassword = catalogAdminPassword;
            return this;
        }

        public Builder catalogAdminUserName(@Nullable String catalogAdminUserName) {
            $.catalogAdminUserName = catalogAdminUserName;
            return this;
        }

        public Builder catalogPricingTier(@Nullable String catalogPricingTier) {
            $.catalogPricingTier = catalogPricingTier;
            return this;
        }

        public Builder catalogServerEndpoint(@Nullable String catalogServerEndpoint) {
            $.catalogServerEndpoint = catalogServerEndpoint;
            return this;
        }

        public Builder dualStandbyPairName(@Nullable String dualStandbyPairName) {
            $.dualStandbyPairName = dualStandbyPairName;
            return this;
        }

        public IntegrationRuntimeSsisCatalogInfoResponse build() {
            return $;
        }
    }

}
