// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetStorageAccountCredentialPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStorageAccountCredentialPlainArgs Empty = new GetStorageAccountCredentialPlainArgs();

    /**
     * The manager name
     * 
     */
    @Import(name="managerName", required=true)
    private String managerName;

    /**
     * @return The manager name
     * 
     */
    public String managerName() {
        return this.managerName;
    }

    /**
     * The resource group name
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The resource group name
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of storage account credential to be fetched.
     * 
     */
    @Import(name="storageAccountCredentialName", required=true)
    private String storageAccountCredentialName;

    /**
     * @return The name of storage account credential to be fetched.
     * 
     */
    public String storageAccountCredentialName() {
        return this.storageAccountCredentialName;
    }

    private GetStorageAccountCredentialPlainArgs() {}

    private GetStorageAccountCredentialPlainArgs(GetStorageAccountCredentialPlainArgs $) {
        this.managerName = $.managerName;
        this.resourceGroupName = $.resourceGroupName;
        this.storageAccountCredentialName = $.storageAccountCredentialName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStorageAccountCredentialPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStorageAccountCredentialPlainArgs $;

        public Builder() {
            $ = new GetStorageAccountCredentialPlainArgs();
        }

        public Builder(GetStorageAccountCredentialPlainArgs defaults) {
            $ = new GetStorageAccountCredentialPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managerName The manager name
         * 
         * @return builder
         * 
         */
        public Builder managerName(String managerName) {
            $.managerName = managerName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param storageAccountCredentialName The name of storage account credential to be fetched.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountCredentialName(String storageAccountCredentialName) {
            $.storageAccountCredentialName = storageAccountCredentialName;
            return this;
        }

        public GetStorageAccountCredentialPlainArgs build() {
            $.managerName = Objects.requireNonNull($.managerName, "expected parameter 'managerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.storageAccountCredentialName = Objects.requireNonNull($.storageAccountCredentialName, "expected parameter 'storageAccountCredentialName' to be non-null");
            return $;
        }
    }

}
