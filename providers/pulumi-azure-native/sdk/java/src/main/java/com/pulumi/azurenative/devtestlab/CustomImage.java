// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.devtestlab.CustomImageArgs;
import com.pulumi.azurenative.devtestlab.outputs.CustomImagePropertiesCustomResponse;
import com.pulumi.azurenative.devtestlab.outputs.CustomImagePropertiesFromPlanResponse;
import com.pulumi.azurenative.devtestlab.outputs.CustomImagePropertiesFromVmResponse;
import com.pulumi.azurenative.devtestlab.outputs.DataDiskStorageTypeInfoResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A custom image.
 * API Version: 2018-09-15.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:devtestlab:CustomImage {customImageName} /subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/customimages/{customImageName} 
 * ```
 * 
 */
@ResourceType(type="azure-native:devtestlab:CustomImage")
public class CustomImage extends com.pulumi.resources.CustomResource {
    /**
     * The author of the custom image.
     * 
     */
    @Export(name="author", type=String.class, parameters={})
    private Output</* @Nullable */ String> author;

    /**
     * @return The author of the custom image.
     * 
     */
    public Output<Optional<String>> author() {
        return Codegen.optional(this.author);
    }
    /**
     * The creation date of the custom image.
     * 
     */
    @Export(name="creationDate", type=String.class, parameters={})
    private Output<String> creationDate;

    /**
     * @return The creation date of the custom image.
     * 
     */
    public Output<String> creationDate() {
        return this.creationDate;
    }
    /**
     * Storage information about the plan related to this custom image
     * 
     */
    @Export(name="customImagePlan", type=CustomImagePropertiesFromPlanResponse.class, parameters={})
    private Output</* @Nullable */ CustomImagePropertiesFromPlanResponse> customImagePlan;

    /**
     * @return Storage information about the plan related to this custom image
     * 
     */
    public Output<Optional<CustomImagePropertiesFromPlanResponse>> customImagePlan() {
        return Codegen.optional(this.customImagePlan);
    }
    /**
     * Storage information about the data disks present in the custom image
     * 
     */
    @Export(name="dataDiskStorageInfo", type=List.class, parameters={DataDiskStorageTypeInfoResponse.class})
    private Output</* @Nullable */ List<DataDiskStorageTypeInfoResponse>> dataDiskStorageInfo;

    /**
     * @return Storage information about the data disks present in the custom image
     * 
     */
    public Output<Optional<List<DataDiskStorageTypeInfoResponse>>> dataDiskStorageInfo() {
        return Codegen.optional(this.dataDiskStorageInfo);
    }
    /**
     * The description of the custom image.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the custom image.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
     * 
     */
    @Export(name="isPlanAuthorized", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isPlanAuthorized;

    /**
     * @return Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
     * 
     */
    public Output<Optional<Boolean>> isPlanAuthorized() {
        return Codegen.optional(this.isPlanAuthorized);
    }
    /**
     * The location of the resource.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * The Managed Image Id backing the custom image.
     * 
     */
    @Export(name="managedImageId", type=String.class, parameters={})
    private Output</* @Nullable */ String> managedImageId;

    /**
     * @return The Managed Image Id backing the custom image.
     * 
     */
    public Output<Optional<String>> managedImageId() {
        return Codegen.optional(this.managedImageId);
    }
    /**
     * The Managed Snapshot Id backing the custom image.
     * 
     */
    @Export(name="managedSnapshotId", type=String.class, parameters={})
    private Output</* @Nullable */ String> managedSnapshotId;

    /**
     * @return The Managed Snapshot Id backing the custom image.
     * 
     */
    public Output<Optional<String>> managedSnapshotId() {
        return Codegen.optional(this.managedSnapshotId);
    }
    /**
     * The name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The provisioning status of the resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning status of the resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * The tags of the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The tags of the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of the resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The unique immutable identifier of a resource (Guid).
     * 
     */
    @Export(name="uniqueIdentifier", type=String.class, parameters={})
    private Output<String> uniqueIdentifier;

    /**
     * @return The unique immutable identifier of a resource (Guid).
     * 
     */
    public Output<String> uniqueIdentifier() {
        return this.uniqueIdentifier;
    }
    /**
     * The VHD from which the image is to be created.
     * 
     */
    @Export(name="vhd", type=CustomImagePropertiesCustomResponse.class, parameters={})
    private Output</* @Nullable */ CustomImagePropertiesCustomResponse> vhd;

    /**
     * @return The VHD from which the image is to be created.
     * 
     */
    public Output<Optional<CustomImagePropertiesCustomResponse>> vhd() {
        return Codegen.optional(this.vhd);
    }
    /**
     * The virtual machine from which the image is to be created.
     * 
     */
    @Export(name="vm", type=CustomImagePropertiesFromVmResponse.class, parameters={})
    private Output</* @Nullable */ CustomImagePropertiesFromVmResponse> vm;

    /**
     * @return The virtual machine from which the image is to be created.
     * 
     */
    public Output<Optional<CustomImagePropertiesFromVmResponse>> vm() {
        return Codegen.optional(this.vm);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CustomImage(String name) {
        this(name, CustomImageArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CustomImage(String name, CustomImageArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CustomImage(String name, CustomImageArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:devtestlab:CustomImage", name, args == null ? CustomImageArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CustomImage(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:devtestlab:CustomImage", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:devtestlab/v20150521preview:CustomImage").build()),
                Output.of(Alias.builder().type("azure-native:devtestlab/v20160515:CustomImage").build()),
                Output.of(Alias.builder().type("azure-native:devtestlab/v20180915:CustomImage").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CustomImage get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CustomImage(name, id, options);
    }
}
