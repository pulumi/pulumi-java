// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.inputs.VpnServerConfigurationPolicyGroupMemberArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationPolicyGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationPolicyGroupArgs Empty = new ConfigurationPolicyGroupArgs();

    /**
     * The name of the ConfigurationPolicyGroup.
     * 
     */
    @Import(name="configurationPolicyGroupName")
    private @Nullable Output<String> configurationPolicyGroupName;

    /**
     * @return The name of the ConfigurationPolicyGroup.
     * 
     */
    public Optional<Output<String>> configurationPolicyGroupName() {
        return Optional.ofNullable(this.configurationPolicyGroupName);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
     * 
     */
    @Import(name="isDefault")
    private @Nullable Output<Boolean> isDefault;

    /**
     * @return Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
     * 
     */
    public Optional<Output<Boolean>> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
     * 
     */
    @Import(name="policyMembers")
    private @Nullable Output<List<VpnServerConfigurationPolicyGroupMemberArgs>> policyMembers;

    /**
     * @return Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
     * 
     */
    public Optional<Output<List<VpnServerConfigurationPolicyGroupMemberArgs>>> policyMembers() {
        return Optional.ofNullable(this.policyMembers);
    }

    /**
     * Priority for VpnServerConfigurationPolicyGroup.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Priority for VpnServerConfigurationPolicyGroup.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The resource group name of the ConfigurationPolicyGroup.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name of the ConfigurationPolicyGroup.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the VpnServerConfiguration.
     * 
     */
    @Import(name="vpnServerConfigurationName", required=true)
    private Output<String> vpnServerConfigurationName;

    /**
     * @return The name of the VpnServerConfiguration.
     * 
     */
    public Output<String> vpnServerConfigurationName() {
        return this.vpnServerConfigurationName;
    }

    private ConfigurationPolicyGroupArgs() {}

    private ConfigurationPolicyGroupArgs(ConfigurationPolicyGroupArgs $) {
        this.configurationPolicyGroupName = $.configurationPolicyGroupName;
        this.id = $.id;
        this.isDefault = $.isDefault;
        this.name = $.name;
        this.policyMembers = $.policyMembers;
        this.priority = $.priority;
        this.resourceGroupName = $.resourceGroupName;
        this.vpnServerConfigurationName = $.vpnServerConfigurationName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationPolicyGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationPolicyGroupArgs $;

        public Builder() {
            $ = new ConfigurationPolicyGroupArgs();
        }

        public Builder(ConfigurationPolicyGroupArgs defaults) {
            $ = new ConfigurationPolicyGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup.
         * 
         * @return builder
         * 
         */
        public Builder configurationPolicyGroupName(@Nullable Output<String> configurationPolicyGroupName) {
            $.configurationPolicyGroupName = configurationPolicyGroupName;
            return this;
        }

        /**
         * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup.
         * 
         * @return builder
         * 
         */
        public Builder configurationPolicyGroupName(String configurationPolicyGroupName) {
            return configurationPolicyGroupName(Output.of(configurationPolicyGroupName));
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param isDefault Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param isDefault Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        /**
         * @param name The name of the resource that is unique within a resource group. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the resource that is unique within a resource group. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policyMembers Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
         * 
         * @return builder
         * 
         */
        public Builder policyMembers(@Nullable Output<List<VpnServerConfigurationPolicyGroupMemberArgs>> policyMembers) {
            $.policyMembers = policyMembers;
            return this;
        }

        /**
         * @param policyMembers Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
         * 
         * @return builder
         * 
         */
        public Builder policyMembers(List<VpnServerConfigurationPolicyGroupMemberArgs> policyMembers) {
            return policyMembers(Output.of(policyMembers));
        }

        /**
         * @param policyMembers Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
         * 
         * @return builder
         * 
         */
        public Builder policyMembers(VpnServerConfigurationPolicyGroupMemberArgs... policyMembers) {
            return policyMembers(List.of(policyMembers));
        }

        /**
         * @param priority Priority for VpnServerConfigurationPolicyGroup.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority for VpnServerConfigurationPolicyGroup.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param resourceGroupName The resource group name of the ConfigurationPolicyGroup.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name of the ConfigurationPolicyGroup.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param vpnServerConfigurationName The name of the VpnServerConfiguration.
         * 
         * @return builder
         * 
         */
        public Builder vpnServerConfigurationName(Output<String> vpnServerConfigurationName) {
            $.vpnServerConfigurationName = vpnServerConfigurationName;
            return this;
        }

        /**
         * @param vpnServerConfigurationName The name of the VpnServerConfiguration.
         * 
         * @return builder
         * 
         */
        public Builder vpnServerConfigurationName(String vpnServerConfigurationName) {
            return vpnServerConfigurationName(Output.of(vpnServerConfigurationName));
        }

        public ConfigurationPolicyGroupArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.vpnServerConfigurationName = Objects.requireNonNull($.vpnServerConfigurationName, "expected parameter 'vpnServerConfigurationName' to be non-null");
            return $;
        }
    }

}
