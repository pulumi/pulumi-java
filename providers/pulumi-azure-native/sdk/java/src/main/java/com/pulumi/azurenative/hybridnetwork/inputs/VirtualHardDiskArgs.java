// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybridnetwork.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the uri of a disk.
 * 
 */
public final class VirtualHardDiskArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualHardDiskArgs Empty = new VirtualHardDiskArgs();

    /**
     * Specifies the virtual hard disk&#39;s uri.
     * 
     */
    @Import(name="uri")
    private @Nullable Output<String> uri;

    /**
     * @return Specifies the virtual hard disk&#39;s uri.
     * 
     */
    public Optional<Output<String>> uri() {
        return Optional.ofNullable(this.uri);
    }

    private VirtualHardDiskArgs() {}

    private VirtualHardDiskArgs(VirtualHardDiskArgs $) {
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualHardDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualHardDiskArgs $;

        public Builder() {
            $ = new VirtualHardDiskArgs();
        }

        public Builder(VirtualHardDiskArgs defaults) {
            $ = new VirtualHardDiskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param uri Specifies the virtual hard disk&#39;s uri.
         * 
         * @return builder
         * 
         */
        public Builder uri(@Nullable Output<String> uri) {
            $.uri = uri;
            return this;
        }

        /**
         * @param uri Specifies the virtual hard disk&#39;s uri.
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public VirtualHardDiskArgs build() {
            return $;
        }
    }

}
