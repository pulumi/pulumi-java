// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere;

import com.pulumi.azurenative.connectedvmwarevsphere.enums.ProvisioningAction;
import com.pulumi.azurenative.connectedvmwarevsphere.inputs.GuestCredentialArgs;
import com.pulumi.azurenative.connectedvmwarevsphere.inputs.HttpProxyConfigurationArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GuestAgentArgs extends com.pulumi.resources.ResourceArgs {

    public static final GuestAgentArgs Empty = new GuestAgentArgs();

    /**
     * Username / Password Credentials to provision guest agent.
     * 
     */
    @Import(name="credentials")
    private @Nullable Output<GuestCredentialArgs> credentials;

    public Optional<Output<GuestCredentialArgs>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * HTTP Proxy configuration for the VM.
     * 
     */
    @Import(name="httpProxyConfig")
    private @Nullable Output<HttpProxyConfigurationArgs> httpProxyConfig;

    public Optional<Output<HttpProxyConfigurationArgs>> httpProxyConfig() {
        return Optional.ofNullable(this.httpProxyConfig);
    }

    /**
     * Name of the guestAgents.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Gets or sets the guest agent provisioning action.
     * 
     */
    @Import(name="provisioningAction")
    private @Nullable Output<Either<String,ProvisioningAction>> provisioningAction;

    public Optional<Output<Either<String,ProvisioningAction>>> provisioningAction() {
        return Optional.ofNullable(this.provisioningAction);
    }

    /**
     * The Resource Group Name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the vm.
     * 
     */
    @Import(name="virtualMachineName", required=true)
    private Output<String> virtualMachineName;

    public Output<String> virtualMachineName() {
        return this.virtualMachineName;
    }

    private GuestAgentArgs() {}

    private GuestAgentArgs(GuestAgentArgs $) {
        this.credentials = $.credentials;
        this.httpProxyConfig = $.httpProxyConfig;
        this.name = $.name;
        this.provisioningAction = $.provisioningAction;
        this.resourceGroupName = $.resourceGroupName;
        this.virtualMachineName = $.virtualMachineName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GuestAgentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GuestAgentArgs $;

        public Builder() {
            $ = new GuestAgentArgs();
        }

        public Builder(GuestAgentArgs defaults) {
            $ = new GuestAgentArgs(Objects.requireNonNull(defaults));
        }

        public Builder credentials(@Nullable Output<GuestCredentialArgs> credentials) {
            $.credentials = credentials;
            return this;
        }

        public Builder credentials(GuestCredentialArgs credentials) {
            return credentials(Output.of(credentials));
        }

        public Builder httpProxyConfig(@Nullable Output<HttpProxyConfigurationArgs> httpProxyConfig) {
            $.httpProxyConfig = httpProxyConfig;
            return this;
        }

        public Builder httpProxyConfig(HttpProxyConfigurationArgs httpProxyConfig) {
            return httpProxyConfig(Output.of(httpProxyConfig));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder provisioningAction(@Nullable Output<Either<String,ProvisioningAction>> provisioningAction) {
            $.provisioningAction = provisioningAction;
            return this;
        }

        public Builder provisioningAction(Either<String,ProvisioningAction> provisioningAction) {
            return provisioningAction(Output.of(provisioningAction));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder virtualMachineName(Output<String> virtualMachineName) {
            $.virtualMachineName = virtualMachineName;
            return this;
        }

        public Builder virtualMachineName(String virtualMachineName) {
            return virtualMachineName(Output.of(virtualMachineName));
        }

        public GuestAgentArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.virtualMachineName = Objects.requireNonNull($.virtualMachineName, "expected parameter 'virtualMachineName' to be non-null");
            return $;
        }
    }

}
