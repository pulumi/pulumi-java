// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WindowsEventLogDataSourceResponse {
    /**
     * A friendly name for the data source.
     * This name should be unique across all data sources (regardless of type) within the data collection rule.
     * 
     */
    private final @Nullable String name;
    /**
     * List of streams that this data source will be sent to.
     * A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to.
     * 
     */
    private final @Nullable List<String> streams;
    /**
     * A list of Windows Event Log queries in XPATH format.
     * 
     */
    private final @Nullable List<String> xPathQueries;

    @CustomType.Constructor
    private WindowsEventLogDataSourceResponse(
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("streams") @Nullable List<String> streams,
        @CustomType.Parameter("xPathQueries") @Nullable List<String> xPathQueries) {
        this.name = name;
        this.streams = streams;
        this.xPathQueries = xPathQueries;
    }

    /**
     * A friendly name for the data source.
     * This name should be unique across all data sources (regardless of type) within the data collection rule.
     * 
    */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * List of streams that this data source will be sent to.
     * A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to.
     * 
    */
    public List<String> streams() {
        return this.streams == null ? List.of() : this.streams;
    }
    /**
     * A list of Windows Event Log queries in XPATH format.
     * 
    */
    public List<String> xPathQueries() {
        return this.xPathQueries == null ? List.of() : this.xPathQueries;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WindowsEventLogDataSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String name;
        private @Nullable List<String> streams;
        private @Nullable List<String> xPathQueries;

        public Builder() {
    	      // Empty
        }

        public Builder(WindowsEventLogDataSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.streams = defaults.streams;
    	      this.xPathQueries = defaults.xPathQueries;
        }

        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder streams(@Nullable List<String> streams) {
            this.streams = streams;
            return this;
        }
        public Builder streams(String... streams) {
            return streams(List.of(streams));
        }
        public Builder xPathQueries(@Nullable List<String> xPathQueries) {
            this.xPathQueries = xPathQueries;
            return this;
        }
        public Builder xPathQueries(String... xPathQueries) {
            return xPathQueries(List.of(xPathQueries));
        }        public WindowsEventLogDataSourceResponse build() {
            return new WindowsEventLogDataSourceResponse(name, streams, xPathQueries);
        }
    }
}
