// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.AmlTokenResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.ComputeConfigurationResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.InputDataBindingResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.JobEndpointResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.JobOutputResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.ManagedIdentityResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.MpiResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.OutputDataBindingResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.PyTorchResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.TensorFlowResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Command job definition.
 * 
 */
public final class CommandJobResponse extends com.pulumi.resources.InvokeArgs {

    public static final CommandJobResponse Empty = new CommandJobResponse();

    /**
     * ARM resource ID of the code asset.
     * 
     */
    @Import(name="codeId")
    private @Nullable String codeId;

    /**
     * @return ARM resource ID of the code asset.
     * 
     */
    public Optional<String> codeId() {
        return Optional.ofNullable(this.codeId);
    }

    /**
     * The command to execute on startup of the job. eg. &#34;python train.py&#34;
     * 
     */
    @Import(name="command", required=true)
    private String command;

    /**
     * @return The command to execute on startup of the job. eg. &#34;python train.py&#34;
     * 
     */
    public String command() {
        return this.command;
    }

    /**
     * Compute binding for the job.
     * 
     */
    @Import(name="compute", required=true)
    private ComputeConfigurationResponse compute;

    /**
     * @return Compute binding for the job.
     * 
     */
    public ComputeConfigurationResponse compute() {
        return this.compute;
    }

    /**
     * The asset description text.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return The asset description text.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
     * 
     */
    @Import(name="distribution")
    private @Nullable Object distribution;

    /**
     * @return Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
     * 
     */
    public Optional<Object> distribution() {
        return Optional.ofNullable(this.distribution);
    }

    /**
     * The ARM resource ID of the Environment specification for the job.
     * 
     */
    @Import(name="environmentId")
    private @Nullable String environmentId;

    /**
     * @return The ARM resource ID of the Environment specification for the job.
     * 
     */
    public Optional<String> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }

    /**
     * Environment variables included in the job.
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable Map<String,String> environmentVariables;

    /**
     * @return Environment variables included in the job.
     * 
     */
    public Optional<Map<String,String>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * The name of the experiment the job belongs to. If not set, the job is placed in the &#34;Default&#34; experiment.
     * 
     */
    @Import(name="experimentName")
    private @Nullable String experimentName;

    /**
     * @return The name of the experiment the job belongs to. If not set, the job is placed in the &#34;Default&#34; experiment.
     * 
     */
    public Optional<String> experimentName() {
        return Optional.ofNullable(this.experimentName);
    }

    /**
     * Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
     * Defaults to AmlToken if null.
     * 
     */
    @Import(name="identity")
    private @Nullable Either<AmlTokenResponse,ManagedIdentityResponse> identity;

    /**
     * @return Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
     * Defaults to AmlToken if null.
     * 
     */
    public Optional<Either<AmlTokenResponse,ManagedIdentityResponse>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Mapping of input data bindings used in the job.
     * 
     */
    @Import(name="inputDataBindings")
    private @Nullable Map<String,InputDataBindingResponse> inputDataBindings;

    /**
     * @return Mapping of input data bindings used in the job.
     * 
     */
    public Optional<Map<String,InputDataBindingResponse>> inputDataBindings() {
        return Optional.ofNullable(this.inputDataBindings);
    }

    /**
     * List of JobEndpoints.
     * For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
     * 
     */
    @Import(name="interactionEndpoints", required=true)
    private Map<String,JobEndpointResponse> interactionEndpoints;

    /**
     * @return List of JobEndpoints.
     * For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
     * 
     */
    public Map<String,JobEndpointResponse> interactionEndpoints() {
        return this.interactionEndpoints;
    }

    /**
     * Enum to determine the type of job.
     * Expected value is &#39;Command&#39;.
     * 
     */
    @Import(name="jobType", required=true)
    private String jobType;

    /**
     * @return Enum to determine the type of job.
     * Expected value is &#39;Command&#39;.
     * 
     */
    public String jobType() {
        return this.jobType;
    }

    /**
     * Location of the job output logs and artifacts.
     * 
     */
    @Import(name="output", required=true)
    private JobOutputResponse output;

    /**
     * @return Location of the job output logs and artifacts.
     * 
     */
    public JobOutputResponse output() {
        return this.output;
    }

    /**
     * Mapping of output data bindings used in the job.
     * 
     */
    @Import(name="outputDataBindings")
    private @Nullable Map<String,OutputDataBindingResponse> outputDataBindings;

    /**
     * @return Mapping of output data bindings used in the job.
     * 
     */
    public Optional<Map<String,OutputDataBindingResponse>> outputDataBindings() {
        return Optional.ofNullable(this.outputDataBindings);
    }

    /**
     * Input parameters.
     * 
     */
    @Import(name="parameters", required=true)
    private Object parameters;

    /**
     * @return Input parameters.
     * 
     */
    public Object parameters() {
        return this.parameters;
    }

    /**
     * Job priority for scheduling policy. Only applies to AMLCompute.
     * Private preview feature and only available to users on the allow list.
     * 
     */
    @Import(name="priority")
    private @Nullable Integer priority;

    /**
     * @return Job priority for scheduling policy. Only applies to AMLCompute.
     * Private preview feature and only available to users on the allow list.
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The asset property dictionary.
     * 
     */
    @Import(name="properties")
    private @Nullable Map<String,String> properties;

    /**
     * @return The asset property dictionary.
     * 
     */
    public Optional<Map<String,String>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Specifies the job provisioning state.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return Specifies the job provisioning state.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Status of the job.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Status of the job.
     * 
     */
    public String status() {
        return this.status;
    }

    /**
     * Tag dictionary. Tags can be added, removed, and updated.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Tag dictionary. Tags can be added, removed, and updated.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
     * 
     */
    @Import(name="timeout")
    private @Nullable String timeout;

    /**
     * @return The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
     * 
     */
    public Optional<String> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private CommandJobResponse() {}

    private CommandJobResponse(CommandJobResponse $) {
        this.codeId = $.codeId;
        this.command = $.command;
        this.compute = $.compute;
        this.description = $.description;
        this.distribution = $.distribution;
        this.environmentId = $.environmentId;
        this.environmentVariables = $.environmentVariables;
        this.experimentName = $.experimentName;
        this.identity = $.identity;
        this.inputDataBindings = $.inputDataBindings;
        this.interactionEndpoints = $.interactionEndpoints;
        this.jobType = $.jobType;
        this.output = $.output;
        this.outputDataBindings = $.outputDataBindings;
        this.parameters = $.parameters;
        this.priority = $.priority;
        this.properties = $.properties;
        this.provisioningState = $.provisioningState;
        this.status = $.status;
        this.tags = $.tags;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CommandJobResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CommandJobResponse $;

        public Builder() {
            $ = new CommandJobResponse();
        }

        public Builder(CommandJobResponse defaults) {
            $ = new CommandJobResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param codeId ARM resource ID of the code asset.
         * 
         * @return builder
         * 
         */
        public Builder codeId(@Nullable String codeId) {
            $.codeId = codeId;
            return this;
        }

        /**
         * @param command The command to execute on startup of the job. eg. &#34;python train.py&#34;
         * 
         * @return builder
         * 
         */
        public Builder command(String command) {
            $.command = command;
            return this;
        }

        /**
         * @param compute Compute binding for the job.
         * 
         * @return builder
         * 
         */
        public Builder compute(ComputeConfigurationResponse compute) {
            $.compute = compute;
            return this;
        }

        /**
         * @param description The asset description text.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param distribution Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
         * 
         * @return builder
         * 
         */
        public Builder distribution(@Nullable Object distribution) {
            $.distribution = distribution;
            return this;
        }

        /**
         * @param environmentId The ARM resource ID of the Environment specification for the job.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(@Nullable String environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param environmentVariables Environment variables included in the job.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(@Nullable Map<String,String> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        /**
         * @param experimentName The name of the experiment the job belongs to. If not set, the job is placed in the &#34;Default&#34; experiment.
         * 
         * @return builder
         * 
         */
        public Builder experimentName(@Nullable String experimentName) {
            $.experimentName = experimentName;
            return this;
        }

        /**
         * @param identity Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
         * Defaults to AmlToken if null.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Either<AmlTokenResponse,ManagedIdentityResponse> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
         * Defaults to AmlToken if null.
         * 
         * @return builder
         * 
         */
        public Builder identity(AmlTokenResponse identity) {
            return identity(Either.ofLeft(identity));
        }

        /**
         * @param identity Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
         * Defaults to AmlToken if null.
         * 
         * @return builder
         * 
         */
        public Builder identity(ManagedIdentityResponse identity) {
            return identity(Either.ofRight(identity));
        }

        /**
         * @param inputDataBindings Mapping of input data bindings used in the job.
         * 
         * @return builder
         * 
         */
        public Builder inputDataBindings(@Nullable Map<String,InputDataBindingResponse> inputDataBindings) {
            $.inputDataBindings = inputDataBindings;
            return this;
        }

        /**
         * @param interactionEndpoints List of JobEndpoints.
         * For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
         * 
         * @return builder
         * 
         */
        public Builder interactionEndpoints(Map<String,JobEndpointResponse> interactionEndpoints) {
            $.interactionEndpoints = interactionEndpoints;
            return this;
        }

        /**
         * @param jobType Enum to determine the type of job.
         * Expected value is &#39;Command&#39;.
         * 
         * @return builder
         * 
         */
        public Builder jobType(String jobType) {
            $.jobType = jobType;
            return this;
        }

        /**
         * @param output Location of the job output logs and artifacts.
         * 
         * @return builder
         * 
         */
        public Builder output(JobOutputResponse output) {
            $.output = output;
            return this;
        }

        /**
         * @param outputDataBindings Mapping of output data bindings used in the job.
         * 
         * @return builder
         * 
         */
        public Builder outputDataBindings(@Nullable Map<String,OutputDataBindingResponse> outputDataBindings) {
            $.outputDataBindings = outputDataBindings;
            return this;
        }

        /**
         * @param parameters Input parameters.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Object parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param priority Job priority for scheduling policy. Only applies to AMLCompute.
         * Private preview feature and only available to users on the allow list.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Integer priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param properties The asset property dictionary.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Map<String,String> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param provisioningState Specifies the job provisioning state.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param status Status of the job.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        /**
         * @param tags Tag dictionary. Tags can be added, removed, and updated.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param timeout The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable String timeout) {
            $.timeout = timeout;
            return this;
        }

        public CommandJobResponse build() {
            $.command = Objects.requireNonNull($.command, "expected parameter 'command' to be non-null");
            $.compute = Objects.requireNonNull($.compute, "expected parameter 'compute' to be non-null");
            $.interactionEndpoints = Objects.requireNonNull($.interactionEndpoints, "expected parameter 'interactionEndpoints' to be non-null");
            $.jobType = Codegen.stringProp("jobType").arg($.jobType).require();
            $.output = Objects.requireNonNull($.output, "expected parameter 'output' to be non-null");
            $.parameters = Objects.requireNonNull($.parameters, "expected parameter 'parameters' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
