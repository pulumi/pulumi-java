// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.enums.ParameterType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The workflow parameters.
 * 
 */
public final class WorkflowParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowParameterArgs Empty = new WorkflowParameterArgs();

    /**
     * The description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The metadata.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Object> metadata;

    public Optional<Output<Object>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The type.
     * 
     */
    @Import(name="type")
    private @Nullable Output<Either<String,ParameterType>> type;

    public Optional<Output<Either<String,ParameterType>>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The value.
     * 
     */
    @Import(name="value")
    private @Nullable Output<Object> value;

    public Optional<Output<Object>> value() {
        return Optional.ofNullable(this.value);
    }

    private WorkflowParameterArgs() {}

    private WorkflowParameterArgs(WorkflowParameterArgs $) {
        this.description = $.description;
        this.metadata = $.metadata;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowParameterArgs $;

        public Builder() {
            $ = new WorkflowParameterArgs();
        }

        public Builder(WorkflowParameterArgs defaults) {
            $ = new WorkflowParameterArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder metadata(@Nullable Output<Object> metadata) {
            $.metadata = metadata;
            return this;
        }

        public Builder metadata(Object metadata) {
            return metadata(Output.of(metadata));
        }

        public Builder type(@Nullable Output<Either<String,ParameterType>> type) {
            $.type = type;
            return this;
        }

        public Builder type(Either<String,ParameterType> type) {
            return type(Output.of(type));
        }

        public Builder type(String type) {
            return type(Either.ofLeft(type));
        }

        public Builder type(ParameterType type) {
            return type(Either.ofRight(type));
        }

        public Builder value(@Nullable Output<Object> value) {
            $.value = value;
            return this;
        }

        public Builder value(Object value) {
            return value(Output.of(value));
        }

        public WorkflowParameterArgs build() {
            return $;
        }
    }

}
