// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Reference to an asset via its ARM resource ID.
 * 
 */
public final class IdAssetReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final IdAssetReferenceArgs Empty = new IdAssetReferenceArgs();

    /**
     * ARM resource ID of the asset.
     * 
     */
    @Import(name="assetId", required=true)
    private Output<String> assetId;

    public Output<String> assetId() {
        return this.assetId;
    }

    /**
     * Enum to determine which reference method to use for an asset.
     * Expected value is &#39;Id&#39;.
     * 
     */
    @Import(name="referenceType", required=true)
    private Output<String> referenceType;

    public Output<String> referenceType() {
        return this.referenceType;
    }

    private IdAssetReferenceArgs() {}

    private IdAssetReferenceArgs(IdAssetReferenceArgs $) {
        this.assetId = $.assetId;
        this.referenceType = $.referenceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdAssetReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdAssetReferenceArgs $;

        public Builder() {
            $ = new IdAssetReferenceArgs();
        }

        public Builder(IdAssetReferenceArgs defaults) {
            $ = new IdAssetReferenceArgs(Objects.requireNonNull(defaults));
        }

        public Builder assetId(Output<String> assetId) {
            $.assetId = assetId;
            return this;
        }

        public Builder assetId(String assetId) {
            return assetId(Output.of(assetId));
        }

        public Builder referenceType(Output<String> referenceType) {
            $.referenceType = referenceType;
            return this;
        }

        public Builder referenceType(String referenceType) {
            return referenceType(Output.of(referenceType));
        }

        public IdAssetReferenceArgs build() {
            $.assetId = Objects.requireNonNull($.assetId, "expected parameter 'assetId' to be non-null");
            $.referenceType = Codegen.stringProp("referenceType").output().arg($.referenceType).require();
            return $;
        }
    }

}
