// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere;

import com.pulumi.azurenative.connectedvmwarevsphere.enums.InventoryType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InventoryItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final InventoryItemArgs Empty = new InventoryItemArgs();

    /**
     * Name of the inventoryItem.
     * 
     */
    @Import(name="inventoryItemName")
    private @Nullable Output<String> inventoryItemName;

    /**
     * @return Name of the inventoryItem.
     * 
     */
    public Optional<Output<String>> inventoryItemName() {
        return Optional.ofNullable(this.inventoryItemName);
    }

    /**
     * They inventory type.
     * 
     */
    @Import(name="inventoryType", required=true)
    private Output<Either<String,InventoryType>> inventoryType;

    /**
     * @return They inventory type.
     * 
     */
    public Output<Either<String,InventoryType>> inventoryType() {
        return this.inventoryType;
    }

    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Gets or sets the tracked resource id corresponding to the inventory resource.
     * 
     */
    @Import(name="managedResourceId")
    private @Nullable Output<String> managedResourceId;

    /**
     * @return Gets or sets the tracked resource id corresponding to the inventory resource.
     * 
     */
    public Optional<Output<String>> managedResourceId() {
        return Optional.ofNullable(this.managedResourceId);
    }

    /**
     * Gets or sets the vCenter Managed Object name for the inventory item.
     * 
     */
    @Import(name="moName")
    private @Nullable Output<String> moName;

    /**
     * @return Gets or sets the vCenter Managed Object name for the inventory item.
     * 
     */
    public Optional<Output<String>> moName() {
        return Optional.ofNullable(this.moName);
    }

    /**
     * Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
     * 
     */
    @Import(name="moRefId")
    private @Nullable Output<String> moRefId;

    /**
     * @return Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
     * 
     */
    public Optional<Output<String>> moRefId() {
        return Optional.ofNullable(this.moRefId);
    }

    /**
     * The Resource Group Name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The Resource Group Name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the vCenter.
     * 
     */
    @Import(name="vcenterName", required=true)
    private Output<String> vcenterName;

    /**
     * @return Name of the vCenter.
     * 
     */
    public Output<String> vcenterName() {
        return this.vcenterName;
    }

    private InventoryItemArgs() {}

    private InventoryItemArgs(InventoryItemArgs $) {
        this.inventoryItemName = $.inventoryItemName;
        this.inventoryType = $.inventoryType;
        this.kind = $.kind;
        this.managedResourceId = $.managedResourceId;
        this.moName = $.moName;
        this.moRefId = $.moRefId;
        this.resourceGroupName = $.resourceGroupName;
        this.vcenterName = $.vcenterName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InventoryItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InventoryItemArgs $;

        public Builder() {
            $ = new InventoryItemArgs();
        }

        public Builder(InventoryItemArgs defaults) {
            $ = new InventoryItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inventoryItemName Name of the inventoryItem.
         * 
         * @return builder
         * 
         */
        public Builder inventoryItemName(@Nullable Output<String> inventoryItemName) {
            $.inventoryItemName = inventoryItemName;
            return this;
        }

        /**
         * @param inventoryItemName Name of the inventoryItem.
         * 
         * @return builder
         * 
         */
        public Builder inventoryItemName(String inventoryItemName) {
            return inventoryItemName(Output.of(inventoryItemName));
        }

        /**
         * @param inventoryType They inventory type.
         * 
         * @return builder
         * 
         */
        public Builder inventoryType(Output<Either<String,InventoryType>> inventoryType) {
            $.inventoryType = inventoryType;
            return this;
        }

        /**
         * @param inventoryType They inventory type.
         * 
         * @return builder
         * 
         */
        public Builder inventoryType(Either<String,InventoryType> inventoryType) {
            return inventoryType(Output.of(inventoryType));
        }

        /**
         * @param inventoryType They inventory type.
         * 
         * @return builder
         * 
         */
        public Builder inventoryType(String inventoryType) {
            return inventoryType(Either.ofLeft(inventoryType));
        }

        /**
         * @param inventoryType They inventory type.
         * 
         * @return builder
         * 
         */
        public Builder inventoryType(InventoryType inventoryType) {
            return inventoryType(Either.ofRight(inventoryType));
        }

        /**
         * @param kind Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param managedResourceId Gets or sets the tracked resource id corresponding to the inventory resource.
         * 
         * @return builder
         * 
         */
        public Builder managedResourceId(@Nullable Output<String> managedResourceId) {
            $.managedResourceId = managedResourceId;
            return this;
        }

        /**
         * @param managedResourceId Gets or sets the tracked resource id corresponding to the inventory resource.
         * 
         * @return builder
         * 
         */
        public Builder managedResourceId(String managedResourceId) {
            return managedResourceId(Output.of(managedResourceId));
        }

        /**
         * @param moName Gets or sets the vCenter Managed Object name for the inventory item.
         * 
         * @return builder
         * 
         */
        public Builder moName(@Nullable Output<String> moName) {
            $.moName = moName;
            return this;
        }

        /**
         * @param moName Gets or sets the vCenter Managed Object name for the inventory item.
         * 
         * @return builder
         * 
         */
        public Builder moName(String moName) {
            return moName(Output.of(moName));
        }

        /**
         * @param moRefId Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
         * 
         * @return builder
         * 
         */
        public Builder moRefId(@Nullable Output<String> moRefId) {
            $.moRefId = moRefId;
            return this;
        }

        /**
         * @param moRefId Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
         * 
         * @return builder
         * 
         */
        public Builder moRefId(String moRefId) {
            return moRefId(Output.of(moRefId));
        }

        /**
         * @param resourceGroupName The Resource Group Name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The Resource Group Name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param vcenterName Name of the vCenter.
         * 
         * @return builder
         * 
         */
        public Builder vcenterName(Output<String> vcenterName) {
            $.vcenterName = vcenterName;
            return this;
        }

        /**
         * @param vcenterName Name of the vCenter.
         * 
         * @return builder
         * 
         */
        public Builder vcenterName(String vcenterName) {
            return vcenterName(Output.of(vcenterName));
        }

        public InventoryItemArgs build() {
            $.inventoryType = Objects.requireNonNull($.inventoryType, "expected parameter 'inventoryType' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.vcenterName = Objects.requireNonNull($.vcenterName, "expected parameter 'vcenterName' to be non-null");
            return $;
        }
    }

}
