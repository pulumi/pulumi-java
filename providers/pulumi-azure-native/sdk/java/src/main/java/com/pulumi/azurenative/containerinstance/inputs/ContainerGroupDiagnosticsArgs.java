// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.inputs;

import com.pulumi.azurenative.containerinstance.inputs.LogAnalyticsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Container group diagnostic information.
 * 
 */
public final class ContainerGroupDiagnosticsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerGroupDiagnosticsArgs Empty = new ContainerGroupDiagnosticsArgs();

    /**
     * Container group log analytics information.
     * 
     */
    @Import(name="logAnalytics")
    private @Nullable Output<LogAnalyticsArgs> logAnalytics;

    public Optional<Output<LogAnalyticsArgs>> logAnalytics() {
        return Optional.ofNullable(this.logAnalytics);
    }

    private ContainerGroupDiagnosticsArgs() {}

    private ContainerGroupDiagnosticsArgs(ContainerGroupDiagnosticsArgs $) {
        this.logAnalytics = $.logAnalytics;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerGroupDiagnosticsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerGroupDiagnosticsArgs $;

        public Builder() {
            $ = new ContainerGroupDiagnosticsArgs();
        }

        public Builder(ContainerGroupDiagnosticsArgs defaults) {
            $ = new ContainerGroupDiagnosticsArgs(Objects.requireNonNull(defaults));
        }

        public Builder logAnalytics(@Nullable Output<LogAnalyticsArgs> logAnalytics) {
            $.logAnalytics = logAnalytics;
            return this;
        }

        public Builder logAnalytics(LogAnalyticsArgs logAnalytics) {
            return logAnalytics(Output.of(logAnalytics));
        }

        public ContainerGroupDiagnosticsArgs build() {
            return $;
        }
    }

}
