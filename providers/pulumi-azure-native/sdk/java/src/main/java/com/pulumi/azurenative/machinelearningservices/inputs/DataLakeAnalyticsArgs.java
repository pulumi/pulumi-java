// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.DataLakeAnalyticsPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A DataLakeAnalytics compute.
 * 
 */
public final class DataLakeAnalyticsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataLakeAnalyticsArgs Empty = new DataLakeAnalyticsArgs();

    /**
     * Location for the underlying compute
     * 
     */
    @Import(name="computeLocation")
    private @Nullable Output<String> computeLocation;

    public Optional<Output<String>> computeLocation() {
        return Optional.ofNullable(this.computeLocation);
    }

    /**
     * The type of compute
     * Expected value is &#39;DataLakeAnalytics&#39;.
     * 
     */
    @Import(name="computeType", required=true)
    private Output<String> computeType;

    public Output<String> computeType() {
        return this.computeType;
    }

    /**
     * The description of the Machine Learning compute.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="properties")
    private @Nullable Output<DataLakeAnalyticsPropertiesArgs> properties;

    public Optional<Output<DataLakeAnalyticsPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * ARM resource id of the underlying compute
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    private DataLakeAnalyticsArgs() {}

    private DataLakeAnalyticsArgs(DataLakeAnalyticsArgs $) {
        this.computeLocation = $.computeLocation;
        this.computeType = $.computeType;
        this.description = $.description;
        this.properties = $.properties;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLakeAnalyticsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLakeAnalyticsArgs $;

        public Builder() {
            $ = new DataLakeAnalyticsArgs();
        }

        public Builder(DataLakeAnalyticsArgs defaults) {
            $ = new DataLakeAnalyticsArgs(Objects.requireNonNull(defaults));
        }

        public Builder computeLocation(@Nullable Output<String> computeLocation) {
            $.computeLocation = computeLocation;
            return this;
        }

        public Builder computeLocation(String computeLocation) {
            return computeLocation(Output.of(computeLocation));
        }

        public Builder computeType(Output<String> computeType) {
            $.computeType = computeType;
            return this;
        }

        public Builder computeType(String computeType) {
            return computeType(Output.of(computeType));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder properties(@Nullable Output<DataLakeAnalyticsPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(DataLakeAnalyticsPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        public DataLakeAnalyticsArgs build() {
            $.computeType = Codegen.stringProp("computeType").output().arg($.computeType).require();
            return $;
        }
    }

}
