// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.confluent.outputs;

import com.pulumi.azurenative.confluent.outputs.OrganizationResourcePropertiesResponseOfferDetail;
import com.pulumi.azurenative.confluent.outputs.OrganizationResourcePropertiesResponseUserDetail;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOrganizationResult {
    /**
     * @return The creation time of the resource.
     * 
     */
    private final String createdTime;
    /**
     * @return The ARM id of the resource.
     * 
     */
    private final String id;
    /**
     * @return Location of Organization resource
     * 
     */
    private final @Nullable String location;
    /**
     * @return The name of the resource.
     * 
     */
    private final String name;
    /**
     * @return Confluent offer detail
     * 
     */
    private final @Nullable OrganizationResourcePropertiesResponseOfferDetail offerDetail;
    /**
     * @return Id of the Confluent organization.
     * 
     */
    private final String organizationId;
    /**
     * @return Provision states for confluent RP
     * 
     */
    private final String provisioningState;
    /**
     * @return SSO url for the Confluent organization.
     * 
     */
    private final String ssoUrl;
    /**
     * @return Organization resource tags
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource.
     * 
     */
    private final String type;
    /**
     * @return Subscriber detail
     * 
     */
    private final @Nullable OrganizationResourcePropertiesResponseUserDetail userDetail;

    @CustomType.Constructor
    private GetOrganizationResult(
        @CustomType.Parameter("createdTime") String createdTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("offerDetail") @Nullable OrganizationResourcePropertiesResponseOfferDetail offerDetail,
        @CustomType.Parameter("organizationId") String organizationId,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("ssoUrl") String ssoUrl,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("userDetail") @Nullable OrganizationResourcePropertiesResponseUserDetail userDetail) {
        this.createdTime = createdTime;
        this.id = id;
        this.location = location;
        this.name = name;
        this.offerDetail = offerDetail;
        this.organizationId = organizationId;
        this.provisioningState = provisioningState;
        this.ssoUrl = ssoUrl;
        this.tags = tags;
        this.type = type;
        this.userDetail = userDetail;
    }

    /**
     * @return The creation time of the resource.
     * 
     */
    public String createdTime() {
        return this.createdTime;
    }
    /**
     * @return The ARM id of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Location of Organization resource
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Confluent offer detail
     * 
     */
    public Optional<OrganizationResourcePropertiesResponseOfferDetail> offerDetail() {
        return Optional.ofNullable(this.offerDetail);
    }
    /**
     * @return Id of the Confluent organization.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return Provision states for confluent RP
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return SSO url for the Confluent organization.
     * 
     */
    public String ssoUrl() {
        return this.ssoUrl;
    }
    /**
     * @return Organization resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Subscriber detail
     * 
     */
    public Optional<OrganizationResourcePropertiesResponseUserDetail> userDetail() {
        return Optional.ofNullable(this.userDetail);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createdTime;
        private String id;
        private @Nullable String location;
        private String name;
        private @Nullable OrganizationResourcePropertiesResponseOfferDetail offerDetail;
        private String organizationId;
        private String provisioningState;
        private String ssoUrl;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable OrganizationResourcePropertiesResponseUserDetail userDetail;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOrganizationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdTime = defaults.createdTime;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.offerDetail = defaults.offerDetail;
    	      this.organizationId = defaults.organizationId;
    	      this.provisioningState = defaults.provisioningState;
    	      this.ssoUrl = defaults.ssoUrl;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.userDetail = defaults.userDetail;
        }

        public Builder createdTime(String createdTime) {
            this.createdTime = Objects.requireNonNull(createdTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder offerDetail(@Nullable OrganizationResourcePropertiesResponseOfferDetail offerDetail) {
            this.offerDetail = offerDetail;
            return this;
        }
        public Builder organizationId(String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder ssoUrl(String ssoUrl) {
            this.ssoUrl = Objects.requireNonNull(ssoUrl);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder userDetail(@Nullable OrganizationResourcePropertiesResponseUserDetail userDetail) {
            this.userDetail = userDetail;
            return this;
        }        public GetOrganizationResult build() {
            return new GetOrganizationResult(createdTime, id, location, name, offerDetail, organizationId, provisioningState, ssoUrl, tags, type, userDetail);
        }
    }
}
