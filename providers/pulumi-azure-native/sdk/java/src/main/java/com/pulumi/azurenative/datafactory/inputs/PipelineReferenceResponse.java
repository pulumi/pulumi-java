// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Pipeline reference type.
 * 
 */
public final class PipelineReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final PipelineReferenceResponse Empty = new PipelineReferenceResponse();

    /**
     * Reference name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Reference pipeline name.
     * 
     */
    @Import(name="referenceName", required=true)
    private String referenceName;

    public String referenceName() {
        return this.referenceName;
    }

    /**
     * Pipeline reference type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private PipelineReferenceResponse() {}

    private PipelineReferenceResponse(PipelineReferenceResponse $) {
        this.name = $.name;
        this.referenceName = $.referenceName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineReferenceResponse $;

        public Builder() {
            $ = new PipelineReferenceResponse();
        }

        public Builder(PipelineReferenceResponse defaults) {
            $ = new PipelineReferenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder referenceName(String referenceName) {
            $.referenceName = referenceName;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public PipelineReferenceResponse build() {
            $.referenceName = Objects.requireNonNull($.referenceName, "expected parameter 'referenceName' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
