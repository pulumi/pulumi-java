// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.confidentialledger.inputs;

import com.pulumi.azurenative.confidentialledger.enums.LedgerType;
import com.pulumi.azurenative.confidentialledger.inputs.AADBasedSecurityPrincipalArgs;
import com.pulumi.azurenative.confidentialledger.inputs.CertBasedSecurityPrincipalArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Additional Confidential Ledger properties.
 * 
 */
public final class LedgerPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final LedgerPropertiesArgs Empty = new LedgerPropertiesArgs();

    /**
     * Array of all AAD based Security Principals.
     * 
     */
    @Import(name="aadBasedSecurityPrincipals")
      private final @Nullable Output<List<AADBasedSecurityPrincipalArgs>> aadBasedSecurityPrincipals;

    public Output<List<AADBasedSecurityPrincipalArgs>> aadBasedSecurityPrincipals() {
        return this.aadBasedSecurityPrincipals == null ? Codegen.empty() : this.aadBasedSecurityPrincipals;
    }

    /**
     * Array of all cert based Security Principals.
     * 
     */
    @Import(name="certBasedSecurityPrincipals")
      private final @Nullable Output<List<CertBasedSecurityPrincipalArgs>> certBasedSecurityPrincipals;

    public Output<List<CertBasedSecurityPrincipalArgs>> certBasedSecurityPrincipals() {
        return this.certBasedSecurityPrincipals == null ? Codegen.empty() : this.certBasedSecurityPrincipals;
    }

    /**
     * Name of the Blob Storage Account for saving ledger files
     * 
     */
    @Import(name="ledgerStorageAccount")
      private final @Nullable Output<String> ledgerStorageAccount;

    public Output<String> ledgerStorageAccount() {
        return this.ledgerStorageAccount == null ? Codegen.empty() : this.ledgerStorageAccount;
    }

    /**
     * Type of Confidential Ledger
     * 
     */
    @Import(name="ledgerType")
      private final @Nullable Output<Either<String,LedgerType>> ledgerType;

    public Output<Either<String,LedgerType>> ledgerType() {
        return this.ledgerType == null ? Codegen.empty() : this.ledgerType;
    }

    public LedgerPropertiesArgs(
        @Nullable Output<List<AADBasedSecurityPrincipalArgs>> aadBasedSecurityPrincipals,
        @Nullable Output<List<CertBasedSecurityPrincipalArgs>> certBasedSecurityPrincipals,
        @Nullable Output<String> ledgerStorageAccount,
        @Nullable Output<Either<String,LedgerType>> ledgerType) {
        this.aadBasedSecurityPrincipals = aadBasedSecurityPrincipals;
        this.certBasedSecurityPrincipals = certBasedSecurityPrincipals;
        this.ledgerStorageAccount = ledgerStorageAccount;
        this.ledgerType = ledgerType;
    }

    private LedgerPropertiesArgs() {
        this.aadBasedSecurityPrincipals = Codegen.empty();
        this.certBasedSecurityPrincipals = Codegen.empty();
        this.ledgerStorageAccount = Codegen.empty();
        this.ledgerType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LedgerPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<AADBasedSecurityPrincipalArgs>> aadBasedSecurityPrincipals;
        private @Nullable Output<List<CertBasedSecurityPrincipalArgs>> certBasedSecurityPrincipals;
        private @Nullable Output<String> ledgerStorageAccount;
        private @Nullable Output<Either<String,LedgerType>> ledgerType;

        public Builder() {
    	      // Empty
        }

        public Builder(LedgerPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadBasedSecurityPrincipals = defaults.aadBasedSecurityPrincipals;
    	      this.certBasedSecurityPrincipals = defaults.certBasedSecurityPrincipals;
    	      this.ledgerStorageAccount = defaults.ledgerStorageAccount;
    	      this.ledgerType = defaults.ledgerType;
        }

        public Builder aadBasedSecurityPrincipals(@Nullable Output<List<AADBasedSecurityPrincipalArgs>> aadBasedSecurityPrincipals) {
            this.aadBasedSecurityPrincipals = aadBasedSecurityPrincipals;
            return this;
        }
        public Builder aadBasedSecurityPrincipals(@Nullable List<AADBasedSecurityPrincipalArgs> aadBasedSecurityPrincipals) {
            this.aadBasedSecurityPrincipals = Codegen.ofNullable(aadBasedSecurityPrincipals);
            return this;
        }
        public Builder aadBasedSecurityPrincipals(AADBasedSecurityPrincipalArgs... aadBasedSecurityPrincipals) {
            return aadBasedSecurityPrincipals(List.of(aadBasedSecurityPrincipals));
        }
        public Builder certBasedSecurityPrincipals(@Nullable Output<List<CertBasedSecurityPrincipalArgs>> certBasedSecurityPrincipals) {
            this.certBasedSecurityPrincipals = certBasedSecurityPrincipals;
            return this;
        }
        public Builder certBasedSecurityPrincipals(@Nullable List<CertBasedSecurityPrincipalArgs> certBasedSecurityPrincipals) {
            this.certBasedSecurityPrincipals = Codegen.ofNullable(certBasedSecurityPrincipals);
            return this;
        }
        public Builder certBasedSecurityPrincipals(CertBasedSecurityPrincipalArgs... certBasedSecurityPrincipals) {
            return certBasedSecurityPrincipals(List.of(certBasedSecurityPrincipals));
        }
        public Builder ledgerStorageAccount(@Nullable Output<String> ledgerStorageAccount) {
            this.ledgerStorageAccount = ledgerStorageAccount;
            return this;
        }
        public Builder ledgerStorageAccount(@Nullable String ledgerStorageAccount) {
            this.ledgerStorageAccount = Codegen.ofNullable(ledgerStorageAccount);
            return this;
        }
        public Builder ledgerType(@Nullable Output<Either<String,LedgerType>> ledgerType) {
            this.ledgerType = ledgerType;
            return this;
        }
        public Builder ledgerType(@Nullable Either<String,LedgerType> ledgerType) {
            this.ledgerType = Codegen.ofNullable(ledgerType);
            return this;
        }        public LedgerPropertiesArgs build() {
            return new LedgerPropertiesArgs(aadBasedSecurityPrincipals, certBasedSecurityPrincipals, ledgerStorageAccount, ledgerType);
        }
    }
}
