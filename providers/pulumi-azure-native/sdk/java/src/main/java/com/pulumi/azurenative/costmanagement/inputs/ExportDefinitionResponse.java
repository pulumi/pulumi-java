// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.azurenative.costmanagement.inputs.ExportDatasetResponse;
import com.pulumi.azurenative.costmanagement.inputs.ExportTimePeriodResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The definition of an export.
 * 
 */
public final class ExportDefinitionResponse extends com.pulumi.resources.InvokeArgs {

    public static final ExportDefinitionResponse Empty = new ExportDefinitionResponse();

    /**
     * The definition for data in the export.
     * 
     */
    @Import(name="dataSet")
      private final @Nullable ExportDatasetResponse dataSet;

    public Optional<ExportDatasetResponse> dataSet() {
        return this.dataSet == null ? Optional.empty() : Optional.ofNullable(this.dataSet);
    }

    /**
     * Has time period for pulling data for the export.
     * 
     */
    @Import(name="timePeriod")
      private final @Nullable ExportTimePeriodResponse timePeriod;

    public Optional<ExportTimePeriodResponse> timePeriod() {
        return this.timePeriod == null ? Optional.empty() : Optional.ofNullable(this.timePeriod);
    }

    /**
     * The time frame for pulling data for the export. If custom, then a specific time period must be provided.
     * 
     */
    @Import(name="timeframe", required=true)
      private final String timeframe;

    public String timeframe() {
        return this.timeframe;
    }

    /**
     * The type of the export. Note that &#39;Usage&#39; is equivalent to &#39;ActualCost&#39; and is applicable to exports that do not yet provide data for charges or amortization for service reservations.
     * 
     */
    @Import(name="type", required=true)
      private final String type;

    public String type() {
        return this.type;
    }

    public ExportDefinitionResponse(
        @Nullable ExportDatasetResponse dataSet,
        @Nullable ExportTimePeriodResponse timePeriod,
        String timeframe,
        String type) {
        this.dataSet = dataSet;
        this.timePeriod = timePeriod;
        this.timeframe = Objects.requireNonNull(timeframe, "expected parameter 'timeframe' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private ExportDefinitionResponse() {
        this.dataSet = null;
        this.timePeriod = null;
        this.timeframe = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExportDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ExportDatasetResponse dataSet;
        private @Nullable ExportTimePeriodResponse timePeriod;
        private String timeframe;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ExportDefinitionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSet = defaults.dataSet;
    	      this.timePeriod = defaults.timePeriod;
    	      this.timeframe = defaults.timeframe;
    	      this.type = defaults.type;
        }

        public Builder dataSet(@Nullable ExportDatasetResponse dataSet) {
            this.dataSet = dataSet;
            return this;
        }
        public Builder timePeriod(@Nullable ExportTimePeriodResponse timePeriod) {
            this.timePeriod = timePeriod;
            return this;
        }
        public Builder timeframe(String timeframe) {
            this.timeframe = Objects.requireNonNull(timeframe);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public ExportDefinitionResponse build() {
            return new ExportDefinitionResponse(dataSet, timePeriod, timeframe, type);
        }
    }
}
