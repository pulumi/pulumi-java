// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dataprotection.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * DataStoreInfo base
 * 
 */
public final class DataStoreInfoBaseResponse extends com.pulumi.resources.InvokeArgs {

    public static final DataStoreInfoBaseResponse Empty = new DataStoreInfoBaseResponse();

    /**
     * type of datastore; Operational/Vault/Archive
     * 
     */
    @Import(name="dataStoreType", required=true)
    private String dataStoreType;

    public String dataStoreType() {
        return this.dataStoreType;
    }

    /**
     * Type of Datasource object, used to initialize the right inherited type
     * 
     */
    @Import(name="objectType", required=true)
    private String objectType;

    public String objectType() {
        return this.objectType;
    }

    private DataStoreInfoBaseResponse() {}

    private DataStoreInfoBaseResponse(DataStoreInfoBaseResponse $) {
        this.dataStoreType = $.dataStoreType;
        this.objectType = $.objectType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataStoreInfoBaseResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataStoreInfoBaseResponse $;

        public Builder() {
            $ = new DataStoreInfoBaseResponse();
        }

        public Builder(DataStoreInfoBaseResponse defaults) {
            $ = new DataStoreInfoBaseResponse(Objects.requireNonNull(defaults));
        }

        public Builder dataStoreType(String dataStoreType) {
            $.dataStoreType = dataStoreType;
            return this;
        }

        public Builder objectType(String objectType) {
            $.objectType = objectType;
            return this;
        }

        public DataStoreInfoBaseResponse build() {
            $.dataStoreType = Objects.requireNonNull($.dataStoreType, "expected parameter 'dataStoreType' to be non-null");
            $.objectType = Objects.requireNonNull($.objectType, "expected parameter 'objectType' to be non-null");
            return $;
        }
    }

}
