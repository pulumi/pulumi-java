// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.ApplicationGatewayPathRuleArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
 * 
 */
public final class ApplicationGatewayUrlPathMapArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationGatewayUrlPathMapArgs Empty = new ApplicationGatewayUrlPathMapArgs();

    /**
     * Default backend address pool resource of URL path map.
     * 
     */
    @Import(name="defaultBackendAddressPool")
    private @Nullable Output<SubResourceArgs> defaultBackendAddressPool;

    public Optional<Output<SubResourceArgs>> defaultBackendAddressPool() {
        return Optional.ofNullable(this.defaultBackendAddressPool);
    }

    /**
     * Default backend http settings resource of URL path map.
     * 
     */
    @Import(name="defaultBackendHttpSettings")
    private @Nullable Output<SubResourceArgs> defaultBackendHttpSettings;

    public Optional<Output<SubResourceArgs>> defaultBackendHttpSettings() {
        return Optional.ofNullable(this.defaultBackendHttpSettings);
    }

    /**
     * Default redirect configuration resource of URL path map.
     * 
     */
    @Import(name="defaultRedirectConfiguration")
    private @Nullable Output<SubResourceArgs> defaultRedirectConfiguration;

    public Optional<Output<SubResourceArgs>> defaultRedirectConfiguration() {
        return Optional.ofNullable(this.defaultRedirectConfiguration);
    }

    /**
     * Default Rewrite rule set resource of URL path map.
     * 
     */
    @Import(name="defaultRewriteRuleSet")
    private @Nullable Output<SubResourceArgs> defaultRewriteRuleSet;

    public Optional<Output<SubResourceArgs>> defaultRewriteRuleSet() {
        return Optional.ofNullable(this.defaultRewriteRuleSet);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the URL path map that is unique within an Application Gateway.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Path rule of URL path map resource.
     * 
     */
    @Import(name="pathRules")
    private @Nullable Output<List<ApplicationGatewayPathRuleArgs>> pathRules;

    public Optional<Output<List<ApplicationGatewayPathRuleArgs>>> pathRules() {
        return Optional.ofNullable(this.pathRules);
    }

    private ApplicationGatewayUrlPathMapArgs() {}

    private ApplicationGatewayUrlPathMapArgs(ApplicationGatewayUrlPathMapArgs $) {
        this.defaultBackendAddressPool = $.defaultBackendAddressPool;
        this.defaultBackendHttpSettings = $.defaultBackendHttpSettings;
        this.defaultRedirectConfiguration = $.defaultRedirectConfiguration;
        this.defaultRewriteRuleSet = $.defaultRewriteRuleSet;
        this.id = $.id;
        this.name = $.name;
        this.pathRules = $.pathRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayUrlPathMapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayUrlPathMapArgs $;

        public Builder() {
            $ = new ApplicationGatewayUrlPathMapArgs();
        }

        public Builder(ApplicationGatewayUrlPathMapArgs defaults) {
            $ = new ApplicationGatewayUrlPathMapArgs(Objects.requireNonNull(defaults));
        }

        public Builder defaultBackendAddressPool(@Nullable Output<SubResourceArgs> defaultBackendAddressPool) {
            $.defaultBackendAddressPool = defaultBackendAddressPool;
            return this;
        }

        public Builder defaultBackendAddressPool(SubResourceArgs defaultBackendAddressPool) {
            return defaultBackendAddressPool(Output.of(defaultBackendAddressPool));
        }

        public Builder defaultBackendHttpSettings(@Nullable Output<SubResourceArgs> defaultBackendHttpSettings) {
            $.defaultBackendHttpSettings = defaultBackendHttpSettings;
            return this;
        }

        public Builder defaultBackendHttpSettings(SubResourceArgs defaultBackendHttpSettings) {
            return defaultBackendHttpSettings(Output.of(defaultBackendHttpSettings));
        }

        public Builder defaultRedirectConfiguration(@Nullable Output<SubResourceArgs> defaultRedirectConfiguration) {
            $.defaultRedirectConfiguration = defaultRedirectConfiguration;
            return this;
        }

        public Builder defaultRedirectConfiguration(SubResourceArgs defaultRedirectConfiguration) {
            return defaultRedirectConfiguration(Output.of(defaultRedirectConfiguration));
        }

        public Builder defaultRewriteRuleSet(@Nullable Output<SubResourceArgs> defaultRewriteRuleSet) {
            $.defaultRewriteRuleSet = defaultRewriteRuleSet;
            return this;
        }

        public Builder defaultRewriteRuleSet(SubResourceArgs defaultRewriteRuleSet) {
            return defaultRewriteRuleSet(Output.of(defaultRewriteRuleSet));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder pathRules(@Nullable Output<List<ApplicationGatewayPathRuleArgs>> pathRules) {
            $.pathRules = pathRules;
            return this;
        }

        public Builder pathRules(List<ApplicationGatewayPathRuleArgs> pathRules) {
            return pathRules(Output.of(pathRules));
        }

        public Builder pathRules(ApplicationGatewayPathRuleArgs... pathRules) {
            return pathRules(List.of(pathRules));
        }

        public ApplicationGatewayUrlPathMapArgs build() {
            return $;
        }
    }

}
