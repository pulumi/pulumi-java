// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dataprotection.inputs;

import com.pulumi.azurenative.dataprotection.inputs.AbsoluteDeleteOptionArgs;
import com.pulumi.azurenative.dataprotection.inputs.DataStoreInfoBaseArgs;
import com.pulumi.azurenative.dataprotection.inputs.TargetCopySettingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Source LifeCycle
 * 
 */
public final class SourceLifeCycleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SourceLifeCycleArgs Empty = new SourceLifeCycleArgs();

    /**
     * Delete Option
     * 
     */
    @Import(name="deleteAfter", required=true)
    private Output<AbsoluteDeleteOptionArgs> deleteAfter;

    /**
     * @return Delete Option
     * 
     */
    public Output<AbsoluteDeleteOptionArgs> deleteAfter() {
        return this.deleteAfter;
    }

    /**
     * DataStoreInfo base
     * 
     */
    @Import(name="sourceDataStore", required=true)
    private Output<DataStoreInfoBaseArgs> sourceDataStore;

    /**
     * @return DataStoreInfo base
     * 
     */
    public Output<DataStoreInfoBaseArgs> sourceDataStore() {
        return this.sourceDataStore;
    }

    @Import(name="targetDataStoreCopySettings")
    private @Nullable Output<List<TargetCopySettingArgs>> targetDataStoreCopySettings;

    public Optional<Output<List<TargetCopySettingArgs>>> targetDataStoreCopySettings() {
        return Optional.ofNullable(this.targetDataStoreCopySettings);
    }

    private SourceLifeCycleArgs() {}

    private SourceLifeCycleArgs(SourceLifeCycleArgs $) {
        this.deleteAfter = $.deleteAfter;
        this.sourceDataStore = $.sourceDataStore;
        this.targetDataStoreCopySettings = $.targetDataStoreCopySettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceLifeCycleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceLifeCycleArgs $;

        public Builder() {
            $ = new SourceLifeCycleArgs();
        }

        public Builder(SourceLifeCycleArgs defaults) {
            $ = new SourceLifeCycleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteAfter Delete Option
         * 
         * @return builder
         * 
         */
        public Builder deleteAfter(Output<AbsoluteDeleteOptionArgs> deleteAfter) {
            $.deleteAfter = deleteAfter;
            return this;
        }

        /**
         * @param deleteAfter Delete Option
         * 
         * @return builder
         * 
         */
        public Builder deleteAfter(AbsoluteDeleteOptionArgs deleteAfter) {
            return deleteAfter(Output.of(deleteAfter));
        }

        /**
         * @param sourceDataStore DataStoreInfo base
         * 
         * @return builder
         * 
         */
        public Builder sourceDataStore(Output<DataStoreInfoBaseArgs> sourceDataStore) {
            $.sourceDataStore = sourceDataStore;
            return this;
        }

        /**
         * @param sourceDataStore DataStoreInfo base
         * 
         * @return builder
         * 
         */
        public Builder sourceDataStore(DataStoreInfoBaseArgs sourceDataStore) {
            return sourceDataStore(Output.of(sourceDataStore));
        }

        public Builder targetDataStoreCopySettings(@Nullable Output<List<TargetCopySettingArgs>> targetDataStoreCopySettings) {
            $.targetDataStoreCopySettings = targetDataStoreCopySettings;
            return this;
        }

        public Builder targetDataStoreCopySettings(List<TargetCopySettingArgs> targetDataStoreCopySettings) {
            return targetDataStoreCopySettings(Output.of(targetDataStoreCopySettings));
        }

        public Builder targetDataStoreCopySettings(TargetCopySettingArgs... targetDataStoreCopySettings) {
            return targetDataStoreCopySettings(List.of(targetDataStoreCopySettings));
        }

        public SourceLifeCycleArgs build() {
            $.deleteAfter = Objects.requireNonNull($.deleteAfter, "expected parameter 'deleteAfter' to be non-null");
            $.sourceDataStore = Objects.requireNonNull($.sourceDataStore, "expected parameter 'sourceDataStore' to be non-null");
            return $;
        }
    }

}
