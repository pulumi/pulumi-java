// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.inputs;

import com.pulumi.azurenative.databoxedge.enums.ClientPermissionType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The mapping between a particular client IP and the type of access client has on the NFS share.
 * 
 */
public final class ClientAccessRightArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClientAccessRightArgs Empty = new ClientAccessRightArgs();

    /**
     * Type of access to be allowed for the client.
     * 
     */
    @Import(name="accessPermission", required=true)
    private Output<Either<String,ClientPermissionType>> accessPermission;

    /**
     * @return Type of access to be allowed for the client.
     * 
     */
    public Output<Either<String,ClientPermissionType>> accessPermission() {
        return this.accessPermission;
    }

    /**
     * IP of the client.
     * 
     */
    @Import(name="client", required=true)
    private Output<String> client;

    /**
     * @return IP of the client.
     * 
     */
    public Output<String> client() {
        return this.client;
    }

    private ClientAccessRightArgs() {}

    private ClientAccessRightArgs(ClientAccessRightArgs $) {
        this.accessPermission = $.accessPermission;
        this.client = $.client;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientAccessRightArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientAccessRightArgs $;

        public Builder() {
            $ = new ClientAccessRightArgs();
        }

        public Builder(ClientAccessRightArgs defaults) {
            $ = new ClientAccessRightArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessPermission Type of access to be allowed for the client.
         * 
         * @return builder
         * 
         */
        public Builder accessPermission(Output<Either<String,ClientPermissionType>> accessPermission) {
            $.accessPermission = accessPermission;
            return this;
        }

        /**
         * @param accessPermission Type of access to be allowed for the client.
         * 
         * @return builder
         * 
         */
        public Builder accessPermission(Either<String,ClientPermissionType> accessPermission) {
            return accessPermission(Output.of(accessPermission));
        }

        /**
         * @param accessPermission Type of access to be allowed for the client.
         * 
         * @return builder
         * 
         */
        public Builder accessPermission(String accessPermission) {
            return accessPermission(Either.ofLeft(accessPermission));
        }

        /**
         * @param accessPermission Type of access to be allowed for the client.
         * 
         * @return builder
         * 
         */
        public Builder accessPermission(ClientPermissionType accessPermission) {
            return accessPermission(Either.ofRight(accessPermission));
        }

        /**
         * @param client IP of the client.
         * 
         * @return builder
         * 
         */
        public Builder client(Output<String> client) {
            $.client = client;
            return this;
        }

        /**
         * @param client IP of the client.
         * 
         * @return builder
         * 
         */
        public Builder client(String client) {
            return client(Output.of(client));
        }

        public ClientAccessRightArgs build() {
            $.accessPermission = Objects.requireNonNull($.accessPermission, "expected parameter 'accessPermission' to be non-null");
            $.client = Objects.requireNonNull($.client, "expected parameter 'client' to be non-null");
            return $;
        }
    }

}
