// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.azurenative.authorization.outputs.RoleManagementPolicyRuleTargetResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RoleManagementPolicyEnablementRuleResponse {
    /**
     * @return The list of enabled rules.
     * 
     */
    private final @Nullable List<String> enabledRules;
    /**
     * @return The id of the rule.
     * 
     */
    private final @Nullable String id;
    /**
     * @return The type of rule
     * Expected value is &#39;RoleManagementPolicyEnablementRule&#39;.
     * 
     */
    private final String ruleType;
    /**
     * @return The target of the current rule.
     * 
     */
    private final @Nullable RoleManagementPolicyRuleTargetResponse target;

    @CustomType.Constructor
    private RoleManagementPolicyEnablementRuleResponse(
        @CustomType.Parameter("enabledRules") @Nullable List<String> enabledRules,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("ruleType") String ruleType,
        @CustomType.Parameter("target") @Nullable RoleManagementPolicyRuleTargetResponse target) {
        this.enabledRules = enabledRules;
        this.id = id;
        this.ruleType = ruleType;
        this.target = target;
    }

    /**
     * @return The list of enabled rules.
     * 
     */
    public List<String> enabledRules() {
        return this.enabledRules == null ? List.of() : this.enabledRules;
    }
    /**
     * @return The id of the rule.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The type of rule
     * Expected value is &#39;RoleManagementPolicyEnablementRule&#39;.
     * 
     */
    public String ruleType() {
        return this.ruleType;
    }
    /**
     * @return The target of the current rule.
     * 
     */
    public Optional<RoleManagementPolicyRuleTargetResponse> target() {
        return Optional.ofNullable(this.target);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoleManagementPolicyEnablementRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> enabledRules;
        private @Nullable String id;
        private String ruleType;
        private @Nullable RoleManagementPolicyRuleTargetResponse target;

        public Builder() {
    	      // Empty
        }

        public Builder(RoleManagementPolicyEnablementRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabledRules = defaults.enabledRules;
    	      this.id = defaults.id;
    	      this.ruleType = defaults.ruleType;
    	      this.target = defaults.target;
        }

        public Builder enabledRules(@Nullable List<String> enabledRules) {
            this.enabledRules = enabledRules;
            return this;
        }
        public Builder enabledRules(String... enabledRules) {
            return enabledRules(List.of(enabledRules));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder ruleType(String ruleType) {
            this.ruleType = Objects.requireNonNull(ruleType);
            return this;
        }
        public Builder target(@Nullable RoleManagementPolicyRuleTargetResponse target) {
            this.target = target;
            return this;
        }        public RoleManagementPolicyEnablementRuleResponse build() {
            return new RoleManagementPolicyEnablementRuleResponse(enabledRules, id, ruleType, target);
        }
    }
}
