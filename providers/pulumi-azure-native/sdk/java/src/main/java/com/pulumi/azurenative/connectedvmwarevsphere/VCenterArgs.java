// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere;

import com.pulumi.azurenative.connectedvmwarevsphere.inputs.ExtendedLocationArgs;
import com.pulumi.azurenative.connectedvmwarevsphere.inputs.VICredentialArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VCenterArgs extends com.pulumi.resources.ResourceArgs {

    public static final VCenterArgs Empty = new VCenterArgs();

    /**
     * Username / Password Credentials to connect to vcenter.
     * 
     */
    @Import(name="credentials")
    private @Nullable Output<VICredentialArgs> credentials;

    /**
     * @return Username / Password Credentials to connect to vcenter.
     * 
     */
    public Optional<Output<VICredentialArgs>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * Gets or sets the extended location.
     * 
     */
    @Import(name="extendedLocation")
    private @Nullable Output<ExtendedLocationArgs> extendedLocation;

    /**
     * @return Gets or sets the extended location.
     * 
     */
    public Optional<Output<ExtendedLocationArgs>> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }

    /**
     * Gets or sets the FQDN/IPAddress of the vCenter.
     * 
     */
    @Import(name="fqdn", required=true)
    private Output<String> fqdn;

    /**
     * @return Gets or sets the FQDN/IPAddress of the vCenter.
     * 
     */
    public Output<String> fqdn() {
        return this.fqdn;
    }

    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Gets or sets the location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Gets or sets the location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Gets or sets the port of the vCenter.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return Gets or sets the port of the vCenter.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The Resource Group Name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The Resource Group Name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets the Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Gets or sets the Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Name of the vCenter.
     * 
     */
    @Import(name="vcenterName")
    private @Nullable Output<String> vcenterName;

    /**
     * @return Name of the vCenter.
     * 
     */
    public Optional<Output<String>> vcenterName() {
        return Optional.ofNullable(this.vcenterName);
    }

    private VCenterArgs() {}

    private VCenterArgs(VCenterArgs $) {
        this.credentials = $.credentials;
        this.extendedLocation = $.extendedLocation;
        this.fqdn = $.fqdn;
        this.kind = $.kind;
        this.location = $.location;
        this.port = $.port;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.vcenterName = $.vcenterName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VCenterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VCenterArgs $;

        public Builder() {
            $ = new VCenterArgs();
        }

        public Builder(VCenterArgs defaults) {
            $ = new VCenterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param credentials Username / Password Credentials to connect to vcenter.
         * 
         * @return builder
         * 
         */
        public Builder credentials(@Nullable Output<VICredentialArgs> credentials) {
            $.credentials = credentials;
            return this;
        }

        /**
         * @param credentials Username / Password Credentials to connect to vcenter.
         * 
         * @return builder
         * 
         */
        public Builder credentials(VICredentialArgs credentials) {
            return credentials(Output.of(credentials));
        }

        /**
         * @param extendedLocation Gets or sets the extended location.
         * 
         * @return builder
         * 
         */
        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            $.extendedLocation = extendedLocation;
            return this;
        }

        /**
         * @param extendedLocation Gets or sets the extended location.
         * 
         * @return builder
         * 
         */
        public Builder extendedLocation(ExtendedLocationArgs extendedLocation) {
            return extendedLocation(Output.of(extendedLocation));
        }

        /**
         * @param fqdn Gets or sets the FQDN/IPAddress of the vCenter.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        /**
         * @param fqdn Gets or sets the FQDN/IPAddress of the vCenter.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        /**
         * @param kind Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param location Gets or sets the location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Gets or sets the location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param port Gets or sets the port of the vCenter.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Gets or sets the port of the vCenter.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param resourceGroupName The Resource Group Name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The Resource Group Name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Gets or sets the Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Gets or sets the Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vcenterName Name of the vCenter.
         * 
         * @return builder
         * 
         */
        public Builder vcenterName(@Nullable Output<String> vcenterName) {
            $.vcenterName = vcenterName;
            return this;
        }

        /**
         * @param vcenterName Name of the vCenter.
         * 
         * @return builder
         * 
         */
        public Builder vcenterName(String vcenterName) {
            return vcenterName(Output.of(vcenterName));
        }

        public VCenterArgs build() {
            $.fqdn = Objects.requireNonNull($.fqdn, "expected parameter 'fqdn' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
