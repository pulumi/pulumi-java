// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningcompute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * AutoScale configuration properties.
 * 
 */
public final class AutoScaleConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final AutoScaleConfigurationResponse Empty = new AutoScaleConfigurationResponse();

    /**
     * The maximum number of replicas for each service.
     * 
     */
    @Import(name="maxReplicas")
    private @Nullable Integer maxReplicas;

    public Optional<Integer> maxReplicas() {
        return Optional.ofNullable(this.maxReplicas);
    }

    /**
     * The minimum number of replicas for each service.
     * 
     */
    @Import(name="minReplicas")
    private @Nullable Integer minReplicas;

    public Optional<Integer> minReplicas() {
        return Optional.ofNullable(this.minReplicas);
    }

    /**
     * Refresh period in seconds.
     * 
     */
    @Import(name="refreshPeriodInSeconds")
    private @Nullable Integer refreshPeriodInSeconds;

    public Optional<Integer> refreshPeriodInSeconds() {
        return Optional.ofNullable(this.refreshPeriodInSeconds);
    }

    /**
     * If auto-scale is enabled for all services. Each service can turn it off individually.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The target utilization.
     * 
     */
    @Import(name="targetUtilization")
    private @Nullable Double targetUtilization;

    public Optional<Double> targetUtilization() {
        return Optional.ofNullable(this.targetUtilization);
    }

    private AutoScaleConfigurationResponse() {}

    private AutoScaleConfigurationResponse(AutoScaleConfigurationResponse $) {
        this.maxReplicas = $.maxReplicas;
        this.minReplicas = $.minReplicas;
        this.refreshPeriodInSeconds = $.refreshPeriodInSeconds;
        this.status = $.status;
        this.targetUtilization = $.targetUtilization;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoScaleConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoScaleConfigurationResponse $;

        public Builder() {
            $ = new AutoScaleConfigurationResponse();
        }

        public Builder(AutoScaleConfigurationResponse defaults) {
            $ = new AutoScaleConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder maxReplicas(@Nullable Integer maxReplicas) {
            $.maxReplicas = maxReplicas;
            return this;
        }

        public Builder minReplicas(@Nullable Integer minReplicas) {
            $.minReplicas = minReplicas;
            return this;
        }

        public Builder refreshPeriodInSeconds(@Nullable Integer refreshPeriodInSeconds) {
            $.refreshPeriodInSeconds = refreshPeriodInSeconds;
            return this;
        }

        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public Builder targetUtilization(@Nullable Double targetUtilization) {
            $.targetUtilization = targetUtilization;
            return this;
        }

        public AutoScaleConfigurationResponse build() {
            $.maxReplicas = Codegen.integerProp("maxReplicas").arg($.maxReplicas).def(100).getNullable();
            $.minReplicas = Codegen.integerProp("minReplicas").arg($.minReplicas).def(1).getNullable();
            $.status = Codegen.stringProp("status").arg($.status).def("Disabled").getNullable();
            return $;
        }
    }

}
