// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.azurenative.media.inputs.ContentKeyPolicyPlayReadyLicenseArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies a configuration for PlayReady licenses.
 * 
 */
public final class ContentKeyPolicyPlayReadyConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContentKeyPolicyPlayReadyConfigurationArgs Empty = new ContentKeyPolicyPlayReadyConfigurationArgs();

    /**
     * The PlayReady licenses.
     * 
     */
    @Import(name="licenses", required=true)
    private Output<List<ContentKeyPolicyPlayReadyLicenseArgs>> licenses;

    public Output<List<ContentKeyPolicyPlayReadyLicenseArgs>> licenses() {
        return this.licenses;
    }

    /**
     * The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private Output<String> odataType;

    public Output<String> odataType() {
        return this.odataType;
    }

    /**
     * The custom response data.
     * 
     */
    @Import(name="responseCustomData")
    private @Nullable Output<String> responseCustomData;

    public Optional<Output<String>> responseCustomData() {
        return Optional.ofNullable(this.responseCustomData);
    }

    private ContentKeyPolicyPlayReadyConfigurationArgs() {}

    private ContentKeyPolicyPlayReadyConfigurationArgs(ContentKeyPolicyPlayReadyConfigurationArgs $) {
        this.licenses = $.licenses;
        this.odataType = $.odataType;
        this.responseCustomData = $.responseCustomData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentKeyPolicyPlayReadyConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentKeyPolicyPlayReadyConfigurationArgs $;

        public Builder() {
            $ = new ContentKeyPolicyPlayReadyConfigurationArgs();
        }

        public Builder(ContentKeyPolicyPlayReadyConfigurationArgs defaults) {
            $ = new ContentKeyPolicyPlayReadyConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder licenses(Output<List<ContentKeyPolicyPlayReadyLicenseArgs>> licenses) {
            $.licenses = licenses;
            return this;
        }

        public Builder licenses(List<ContentKeyPolicyPlayReadyLicenseArgs> licenses) {
            return licenses(Output.of(licenses));
        }

        public Builder licenses(ContentKeyPolicyPlayReadyLicenseArgs... licenses) {
            return licenses(List.of(licenses));
        }

        public Builder odataType(Output<String> odataType) {
            $.odataType = odataType;
            return this;
        }

        public Builder odataType(String odataType) {
            return odataType(Output.of(odataType));
        }

        public Builder responseCustomData(@Nullable Output<String> responseCustomData) {
            $.responseCustomData = responseCustomData;
            return this;
        }

        public Builder responseCustomData(String responseCustomData) {
            return responseCustomData(Output.of(responseCustomData));
        }

        public ContentKeyPolicyPlayReadyConfigurationArgs build() {
            $.licenses = Objects.requireNonNull($.licenses, "expected parameter 'licenses' to be non-null");
            $.odataType = Codegen.stringProp("odataType").output().arg($.odataType).require();
            return $;
        }
    }

}
