// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.PropagatedRouteTableArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.azurenative.network.inputs.VnetRouteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Routing Configuration indicating the associated and propagated route tables for this connection.
 * 
 */
public final class RoutingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoutingConfigurationArgs Empty = new RoutingConfigurationArgs();

    /**
     * The resource id RouteTable associated with this RoutingConfiguration.
     * 
     */
    @Import(name="associatedRouteTable")
    private @Nullable Output<SubResourceArgs> associatedRouteTable;

    /**
     * @return The resource id RouteTable associated with this RoutingConfiguration.
     * 
     */
    public Optional<Output<SubResourceArgs>> associatedRouteTable() {
        return Optional.ofNullable(this.associatedRouteTable);
    }

    /**
     * The list of RouteTables to advertise the routes to.
     * 
     */
    @Import(name="propagatedRouteTables")
    private @Nullable Output<PropagatedRouteTableArgs> propagatedRouteTables;

    /**
     * @return The list of RouteTables to advertise the routes to.
     * 
     */
    public Optional<Output<PropagatedRouteTableArgs>> propagatedRouteTables() {
        return Optional.ofNullable(this.propagatedRouteTables);
    }

    /**
     * List of routes that control routing from VirtualHub into a virtual network connection.
     * 
     */
    @Import(name="vnetRoutes")
    private @Nullable Output<VnetRouteArgs> vnetRoutes;

    /**
     * @return List of routes that control routing from VirtualHub into a virtual network connection.
     * 
     */
    public Optional<Output<VnetRouteArgs>> vnetRoutes() {
        return Optional.ofNullable(this.vnetRoutes);
    }

    private RoutingConfigurationArgs() {}

    private RoutingConfigurationArgs(RoutingConfigurationArgs $) {
        this.associatedRouteTable = $.associatedRouteTable;
        this.propagatedRouteTables = $.propagatedRouteTables;
        this.vnetRoutes = $.vnetRoutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutingConfigurationArgs $;

        public Builder() {
            $ = new RoutingConfigurationArgs();
        }

        public Builder(RoutingConfigurationArgs defaults) {
            $ = new RoutingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param associatedRouteTable The resource id RouteTable associated with this RoutingConfiguration.
         * 
         * @return builder
         * 
         */
        public Builder associatedRouteTable(@Nullable Output<SubResourceArgs> associatedRouteTable) {
            $.associatedRouteTable = associatedRouteTable;
            return this;
        }

        /**
         * @param associatedRouteTable The resource id RouteTable associated with this RoutingConfiguration.
         * 
         * @return builder
         * 
         */
        public Builder associatedRouteTable(SubResourceArgs associatedRouteTable) {
            return associatedRouteTable(Output.of(associatedRouteTable));
        }

        /**
         * @param propagatedRouteTables The list of RouteTables to advertise the routes to.
         * 
         * @return builder
         * 
         */
        public Builder propagatedRouteTables(@Nullable Output<PropagatedRouteTableArgs> propagatedRouteTables) {
            $.propagatedRouteTables = propagatedRouteTables;
            return this;
        }

        /**
         * @param propagatedRouteTables The list of RouteTables to advertise the routes to.
         * 
         * @return builder
         * 
         */
        public Builder propagatedRouteTables(PropagatedRouteTableArgs propagatedRouteTables) {
            return propagatedRouteTables(Output.of(propagatedRouteTables));
        }

        /**
         * @param vnetRoutes List of routes that control routing from VirtualHub into a virtual network connection.
         * 
         * @return builder
         * 
         */
        public Builder vnetRoutes(@Nullable Output<VnetRouteArgs> vnetRoutes) {
            $.vnetRoutes = vnetRoutes;
            return this;
        }

        /**
         * @param vnetRoutes List of routes that control routing from VirtualHub into a virtual network connection.
         * 
         * @return builder
         * 
         */
        public Builder vnetRoutes(VnetRouteArgs vnetRoutes) {
            return vnetRoutes(Output.of(vnetRoutes));
        }

        public RoutingConfigurationArgs build() {
            return $;
        }
    }

}
