// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Advance configuration for AKS networking
 * 
 */
public final class AksNetworkingConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final AksNetworkingConfigurationResponse Empty = new AksNetworkingConfigurationResponse();

    /**
     * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
     * 
     */
    @Import(name="dnsServiceIP")
    private @Nullable String dnsServiceIP;

    /**
     * @return An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
     * 
     */
    public Optional<String> dnsServiceIP() {
        return Optional.ofNullable(this.dnsServiceIP);
    }

    /**
     * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
     * 
     */
    @Import(name="dockerBridgeCidr")
    private @Nullable String dockerBridgeCidr;

    /**
     * @return A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
     * 
     */
    public Optional<String> dockerBridgeCidr() {
        return Optional.ofNullable(this.dockerBridgeCidr);
    }

    /**
     * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
     * 
     */
    @Import(name="serviceCidr")
    private @Nullable String serviceCidr;

    /**
     * @return A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
     * 
     */
    public Optional<String> serviceCidr() {
        return Optional.ofNullable(this.serviceCidr);
    }

    /**
     * Virtual network subnet resource ID the compute nodes belong to
     * 
     */
    @Import(name="subnetId")
    private @Nullable String subnetId;

    /**
     * @return Virtual network subnet resource ID the compute nodes belong to
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    private AksNetworkingConfigurationResponse() {}

    private AksNetworkingConfigurationResponse(AksNetworkingConfigurationResponse $) {
        this.dnsServiceIP = $.dnsServiceIP;
        this.dockerBridgeCidr = $.dockerBridgeCidr;
        this.serviceCidr = $.serviceCidr;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AksNetworkingConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AksNetworkingConfigurationResponse $;

        public Builder() {
            $ = new AksNetworkingConfigurationResponse();
        }

        public Builder(AksNetworkingConfigurationResponse defaults) {
            $ = new AksNetworkingConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsServiceIP An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
         * 
         * @return builder
         * 
         */
        public Builder dnsServiceIP(@Nullable String dnsServiceIP) {
            $.dnsServiceIP = dnsServiceIP;
            return this;
        }

        /**
         * @param dockerBridgeCidr A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
         * 
         * @return builder
         * 
         */
        public Builder dockerBridgeCidr(@Nullable String dockerBridgeCidr) {
            $.dockerBridgeCidr = dockerBridgeCidr;
            return this;
        }

        /**
         * @param serviceCidr A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
         * 
         * @return builder
         * 
         */
        public Builder serviceCidr(@Nullable String serviceCidr) {
            $.serviceCidr = serviceCidr;
            return this;
        }

        /**
         * @param subnetId Virtual network subnet resource ID the compute nodes belong to
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable String subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public AksNetworkingConfigurationResponse build() {
            return $;
        }
    }

}
