// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.apimanagement.ApiDiagnosticLoggerArgs;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Logger details.
 * API Version: 2018-01-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:apimanagement:ApiDiagnosticLogger applicationinsights /subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/diagnostics/default/loggers/applicationinsights 
 * ```
 * 
 */
@ResourceType(type="azure-native:apimanagement:ApiDiagnosticLogger")
public class ApiDiagnosticLogger extends com.pulumi.resources.CustomResource {
    /**
     * The name and SendRule connection string of the event hub for azureEventHub logger.
     * Instrumentation key for applicationInsights logger.
     * 
     */
    @Export(name="credentials", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> credentials;

    /**
     * @return The name and SendRule connection string of the event hub for azureEventHub logger.
     * Instrumentation key for applicationInsights logger.
     * 
     */
    public Output<Map<String,String>> credentials() {
        return this.credentials;
    }
    /**
     * Logger description.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Logger description.
     * 
     */
    public Output</* @Nullable */ String> description() {
        return this.description;
    }
    /**
     * Whether records are buffered in the logger before publishing. Default is assumed to be true.
     * 
     */
    @Export(name="isBuffered", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isBuffered;

    /**
     * @return Whether records are buffered in the logger before publishing. Default is assumed to be true.
     * 
     */
    public Output</* @Nullable */ Boolean> isBuffered() {
        return this.isBuffered;
    }
    /**
     * Logger type.
     * 
     */
    @Export(name="loggerType", type=String.class, parameters={})
    private Output<String> loggerType;

    /**
     * @return Logger type.
     * 
     */
    public Output<String> loggerType() {
        return this.loggerType;
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Resource type for API Management resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type for API Management resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApiDiagnosticLogger(String name) {
        this(name, ApiDiagnosticLoggerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApiDiagnosticLogger(String name, ApiDiagnosticLoggerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApiDiagnosticLogger(String name, ApiDiagnosticLoggerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:apimanagement:ApiDiagnosticLogger", name, args == null ? ApiDiagnosticLoggerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ApiDiagnosticLogger(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:apimanagement:ApiDiagnosticLogger", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:apimanagement/v20170301:ApiDiagnosticLogger").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20180101:ApiDiagnosticLogger").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApiDiagnosticLogger get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApiDiagnosticLogger(name, id, options);
    }
}
