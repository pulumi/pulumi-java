// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Network Virtual Appliance NIC properties.
 * 
 */
public final class VirtualApplianceNicPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualApplianceNicPropertiesResponse Empty = new VirtualApplianceNicPropertiesResponse();

    /**
     * NIC name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return NIC name.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Private IP address.
     * 
     */
    @Import(name="privateIpAddress", required=true)
    private String privateIpAddress;

    /**
     * @return Private IP address.
     * 
     */
    public String privateIpAddress() {
        return this.privateIpAddress;
    }

    /**
     * Public IP address.
     * 
     */
    @Import(name="publicIpAddress", required=true)
    private String publicIpAddress;

    /**
     * @return Public IP address.
     * 
     */
    public String publicIpAddress() {
        return this.publicIpAddress;
    }

    private VirtualApplianceNicPropertiesResponse() {}

    private VirtualApplianceNicPropertiesResponse(VirtualApplianceNicPropertiesResponse $) {
        this.name = $.name;
        this.privateIpAddress = $.privateIpAddress;
        this.publicIpAddress = $.publicIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualApplianceNicPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualApplianceNicPropertiesResponse $;

        public Builder() {
            $ = new VirtualApplianceNicPropertiesResponse();
        }

        public Builder(VirtualApplianceNicPropertiesResponse defaults) {
            $ = new VirtualApplianceNicPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name NIC name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param privateIpAddress Private IP address.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param publicIpAddress Public IP address.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddress(String publicIpAddress) {
            $.publicIpAddress = publicIpAddress;
            return this;
        }

        public VirtualApplianceNicPropertiesResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.privateIpAddress = Objects.requireNonNull($.privateIpAddress, "expected parameter 'privateIpAddress' to be non-null");
            $.publicIpAddress = Objects.requireNonNull($.publicIpAddress, "expected parameter 'publicIpAddress' to be non-null");
            return $;
        }
    }

}
