// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. &lt;br&gt;&lt;br&gt; You can easily view the output of your console log. &lt;br&gt;&lt;br&gt; Azure also enables you to see a screenshot of the VM from the hypervisor.
 * 
 */
public final class BootDiagnosticsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BootDiagnosticsArgs Empty = new BootDiagnosticsArgs();

    /**
     * Whether boot diagnostics should be enabled on the Virtual Machine.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether boot diagnostics should be enabled on the Virtual Machine.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Uri of the storage account to use for placing the console output and screenshot. &lt;br&gt;&lt;br&gt;If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
     * 
     */
    @Import(name="storageUri")
    private @Nullable Output<String> storageUri;

    /**
     * @return Uri of the storage account to use for placing the console output and screenshot. &lt;br&gt;&lt;br&gt;If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
     * 
     */
    public Optional<Output<String>> storageUri() {
        return Optional.ofNullable(this.storageUri);
    }

    private BootDiagnosticsArgs() {}

    private BootDiagnosticsArgs(BootDiagnosticsArgs $) {
        this.enabled = $.enabled;
        this.storageUri = $.storageUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BootDiagnosticsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BootDiagnosticsArgs $;

        public Builder() {
            $ = new BootDiagnosticsArgs();
        }

        public Builder(BootDiagnosticsArgs defaults) {
            $ = new BootDiagnosticsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether boot diagnostics should be enabled on the Virtual Machine.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether boot diagnostics should be enabled on the Virtual Machine.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param storageUri Uri of the storage account to use for placing the console output and screenshot. &lt;br&gt;&lt;br&gt;If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
         * 
         * @return builder
         * 
         */
        public Builder storageUri(@Nullable Output<String> storageUri) {
            $.storageUri = storageUri;
            return this;
        }

        /**
         * @param storageUri Uri of the storage account to use for placing the console output and screenshot. &lt;br&gt;&lt;br&gt;If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
         * 
         * @return builder
         * 
         */
        public Builder storageUri(String storageUri) {
            return storageUri(Output.of(storageUri));
        }

        public BootDiagnosticsArgs build() {
            return $;
        }
    }

}
