// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.inputs.EdifactAcknowledgementSettingsResponse;
import com.pulumi.azurenative.logic.inputs.EdifactDelimiterOverrideResponse;
import com.pulumi.azurenative.logic.inputs.EdifactEnvelopeOverrideResponse;
import com.pulumi.azurenative.logic.inputs.EdifactEnvelopeSettingsResponse;
import com.pulumi.azurenative.logic.inputs.EdifactFramingSettingsResponse;
import com.pulumi.azurenative.logic.inputs.EdifactMessageFilterResponse;
import com.pulumi.azurenative.logic.inputs.EdifactMessageIdentifierResponse;
import com.pulumi.azurenative.logic.inputs.EdifactProcessingSettingsResponse;
import com.pulumi.azurenative.logic.inputs.EdifactSchemaReferenceResponse;
import com.pulumi.azurenative.logic.inputs.EdifactValidationOverrideResponse;
import com.pulumi.azurenative.logic.inputs.EdifactValidationSettingsResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The Edifact agreement protocol settings.
 * 
 */
public final class EdifactProtocolSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final EdifactProtocolSettingsResponse Empty = new EdifactProtocolSettingsResponse();

    /**
     * The EDIFACT acknowledgement settings.
     * 
     */
    @Import(name="acknowledgementSettings", required=true)
    private EdifactAcknowledgementSettingsResponse acknowledgementSettings;

    /**
     * @return The EDIFACT acknowledgement settings.
     * 
     */
    public EdifactAcknowledgementSettingsResponse acknowledgementSettings() {
        return this.acknowledgementSettings;
    }

    /**
     * The EDIFACT delimiter override settings.
     * 
     */
    @Import(name="edifactDelimiterOverrides")
    private @Nullable List<EdifactDelimiterOverrideResponse> edifactDelimiterOverrides;

    /**
     * @return The EDIFACT delimiter override settings.
     * 
     */
    public Optional<List<EdifactDelimiterOverrideResponse>> edifactDelimiterOverrides() {
        return Optional.ofNullable(this.edifactDelimiterOverrides);
    }

    /**
     * The EDIFACT envelope override settings.
     * 
     */
    @Import(name="envelopeOverrides")
    private @Nullable List<EdifactEnvelopeOverrideResponse> envelopeOverrides;

    /**
     * @return The EDIFACT envelope override settings.
     * 
     */
    public Optional<List<EdifactEnvelopeOverrideResponse>> envelopeOverrides() {
        return Optional.ofNullable(this.envelopeOverrides);
    }

    /**
     * The EDIFACT envelope settings.
     * 
     */
    @Import(name="envelopeSettings", required=true)
    private EdifactEnvelopeSettingsResponse envelopeSettings;

    /**
     * @return The EDIFACT envelope settings.
     * 
     */
    public EdifactEnvelopeSettingsResponse envelopeSettings() {
        return this.envelopeSettings;
    }

    /**
     * The EDIFACT framing settings.
     * 
     */
    @Import(name="framingSettings", required=true)
    private EdifactFramingSettingsResponse framingSettings;

    /**
     * @return The EDIFACT framing settings.
     * 
     */
    public EdifactFramingSettingsResponse framingSettings() {
        return this.framingSettings;
    }

    /**
     * The EDIFACT message filter.
     * 
     */
    @Import(name="messageFilter", required=true)
    private EdifactMessageFilterResponse messageFilter;

    /**
     * @return The EDIFACT message filter.
     * 
     */
    public EdifactMessageFilterResponse messageFilter() {
        return this.messageFilter;
    }

    /**
     * The EDIFACT message filter list.
     * 
     */
    @Import(name="messageFilterList")
    private @Nullable List<EdifactMessageIdentifierResponse> messageFilterList;

    /**
     * @return The EDIFACT message filter list.
     * 
     */
    public Optional<List<EdifactMessageIdentifierResponse>> messageFilterList() {
        return Optional.ofNullable(this.messageFilterList);
    }

    /**
     * The EDIFACT processing Settings.
     * 
     */
    @Import(name="processingSettings", required=true)
    private EdifactProcessingSettingsResponse processingSettings;

    /**
     * @return The EDIFACT processing Settings.
     * 
     */
    public EdifactProcessingSettingsResponse processingSettings() {
        return this.processingSettings;
    }

    /**
     * The EDIFACT schema references.
     * 
     */
    @Import(name="schemaReferences", required=true)
    private List<EdifactSchemaReferenceResponse> schemaReferences;

    /**
     * @return The EDIFACT schema references.
     * 
     */
    public List<EdifactSchemaReferenceResponse> schemaReferences() {
        return this.schemaReferences;
    }

    /**
     * The EDIFACT validation override settings.
     * 
     */
    @Import(name="validationOverrides")
    private @Nullable List<EdifactValidationOverrideResponse> validationOverrides;

    /**
     * @return The EDIFACT validation override settings.
     * 
     */
    public Optional<List<EdifactValidationOverrideResponse>> validationOverrides() {
        return Optional.ofNullable(this.validationOverrides);
    }

    /**
     * The EDIFACT validation settings.
     * 
     */
    @Import(name="validationSettings", required=true)
    private EdifactValidationSettingsResponse validationSettings;

    /**
     * @return The EDIFACT validation settings.
     * 
     */
    public EdifactValidationSettingsResponse validationSettings() {
        return this.validationSettings;
    }

    private EdifactProtocolSettingsResponse() {}

    private EdifactProtocolSettingsResponse(EdifactProtocolSettingsResponse $) {
        this.acknowledgementSettings = $.acknowledgementSettings;
        this.edifactDelimiterOverrides = $.edifactDelimiterOverrides;
        this.envelopeOverrides = $.envelopeOverrides;
        this.envelopeSettings = $.envelopeSettings;
        this.framingSettings = $.framingSettings;
        this.messageFilter = $.messageFilter;
        this.messageFilterList = $.messageFilterList;
        this.processingSettings = $.processingSettings;
        this.schemaReferences = $.schemaReferences;
        this.validationOverrides = $.validationOverrides;
        this.validationSettings = $.validationSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EdifactProtocolSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdifactProtocolSettingsResponse $;

        public Builder() {
            $ = new EdifactProtocolSettingsResponse();
        }

        public Builder(EdifactProtocolSettingsResponse defaults) {
            $ = new EdifactProtocolSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param acknowledgementSettings The EDIFACT acknowledgement settings.
         * 
         * @return builder
         * 
         */
        public Builder acknowledgementSettings(EdifactAcknowledgementSettingsResponse acknowledgementSettings) {
            $.acknowledgementSettings = acknowledgementSettings;
            return this;
        }

        /**
         * @param edifactDelimiterOverrides The EDIFACT delimiter override settings.
         * 
         * @return builder
         * 
         */
        public Builder edifactDelimiterOverrides(@Nullable List<EdifactDelimiterOverrideResponse> edifactDelimiterOverrides) {
            $.edifactDelimiterOverrides = edifactDelimiterOverrides;
            return this;
        }

        /**
         * @param edifactDelimiterOverrides The EDIFACT delimiter override settings.
         * 
         * @return builder
         * 
         */
        public Builder edifactDelimiterOverrides(EdifactDelimiterOverrideResponse... edifactDelimiterOverrides) {
            return edifactDelimiterOverrides(List.of(edifactDelimiterOverrides));
        }

        /**
         * @param envelopeOverrides The EDIFACT envelope override settings.
         * 
         * @return builder
         * 
         */
        public Builder envelopeOverrides(@Nullable List<EdifactEnvelopeOverrideResponse> envelopeOverrides) {
            $.envelopeOverrides = envelopeOverrides;
            return this;
        }

        /**
         * @param envelopeOverrides The EDIFACT envelope override settings.
         * 
         * @return builder
         * 
         */
        public Builder envelopeOverrides(EdifactEnvelopeOverrideResponse... envelopeOverrides) {
            return envelopeOverrides(List.of(envelopeOverrides));
        }

        /**
         * @param envelopeSettings The EDIFACT envelope settings.
         * 
         * @return builder
         * 
         */
        public Builder envelopeSettings(EdifactEnvelopeSettingsResponse envelopeSettings) {
            $.envelopeSettings = envelopeSettings;
            return this;
        }

        /**
         * @param framingSettings The EDIFACT framing settings.
         * 
         * @return builder
         * 
         */
        public Builder framingSettings(EdifactFramingSettingsResponse framingSettings) {
            $.framingSettings = framingSettings;
            return this;
        }

        /**
         * @param messageFilter The EDIFACT message filter.
         * 
         * @return builder
         * 
         */
        public Builder messageFilter(EdifactMessageFilterResponse messageFilter) {
            $.messageFilter = messageFilter;
            return this;
        }

        /**
         * @param messageFilterList The EDIFACT message filter list.
         * 
         * @return builder
         * 
         */
        public Builder messageFilterList(@Nullable List<EdifactMessageIdentifierResponse> messageFilterList) {
            $.messageFilterList = messageFilterList;
            return this;
        }

        /**
         * @param messageFilterList The EDIFACT message filter list.
         * 
         * @return builder
         * 
         */
        public Builder messageFilterList(EdifactMessageIdentifierResponse... messageFilterList) {
            return messageFilterList(List.of(messageFilterList));
        }

        /**
         * @param processingSettings The EDIFACT processing Settings.
         * 
         * @return builder
         * 
         */
        public Builder processingSettings(EdifactProcessingSettingsResponse processingSettings) {
            $.processingSettings = processingSettings;
            return this;
        }

        /**
         * @param schemaReferences The EDIFACT schema references.
         * 
         * @return builder
         * 
         */
        public Builder schemaReferences(List<EdifactSchemaReferenceResponse> schemaReferences) {
            $.schemaReferences = schemaReferences;
            return this;
        }

        /**
         * @param schemaReferences The EDIFACT schema references.
         * 
         * @return builder
         * 
         */
        public Builder schemaReferences(EdifactSchemaReferenceResponse... schemaReferences) {
            return schemaReferences(List.of(schemaReferences));
        }

        /**
         * @param validationOverrides The EDIFACT validation override settings.
         * 
         * @return builder
         * 
         */
        public Builder validationOverrides(@Nullable List<EdifactValidationOverrideResponse> validationOverrides) {
            $.validationOverrides = validationOverrides;
            return this;
        }

        /**
         * @param validationOverrides The EDIFACT validation override settings.
         * 
         * @return builder
         * 
         */
        public Builder validationOverrides(EdifactValidationOverrideResponse... validationOverrides) {
            return validationOverrides(List.of(validationOverrides));
        }

        /**
         * @param validationSettings The EDIFACT validation settings.
         * 
         * @return builder
         * 
         */
        public Builder validationSettings(EdifactValidationSettingsResponse validationSettings) {
            $.validationSettings = validationSettings;
            return this;
        }

        public EdifactProtocolSettingsResponse build() {
            $.acknowledgementSettings = Objects.requireNonNull($.acknowledgementSettings, "expected parameter 'acknowledgementSettings' to be non-null");
            $.envelopeSettings = Objects.requireNonNull($.envelopeSettings, "expected parameter 'envelopeSettings' to be non-null");
            $.framingSettings = Objects.requireNonNull($.framingSettings, "expected parameter 'framingSettings' to be non-null");
            $.messageFilter = Objects.requireNonNull($.messageFilter, "expected parameter 'messageFilter' to be non-null");
            $.processingSettings = Objects.requireNonNull($.processingSettings, "expected parameter 'processingSettings' to be non-null");
            $.schemaReferences = Objects.requireNonNull($.schemaReferences, "expected parameter 'schemaReferences' to be non-null");
            $.validationSettings = Objects.requireNonNull($.validationSettings, "expected parameter 'validationSettings' to be non-null");
            return $;
        }
    }

}
