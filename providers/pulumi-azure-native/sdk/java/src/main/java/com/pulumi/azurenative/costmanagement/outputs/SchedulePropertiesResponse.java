// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SchedulePropertiesResponse {
    /**
     * @return UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.
     * 
     */
    private final @Nullable Integer dayOfMonth;
    /**
     * @return Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.
     * 
     */
    private final @Nullable List<String> daysOfWeek;
    /**
     * @return The end date and time of the scheduled action (UTC).
     * 
     */
    private final String endDate;
    /**
     * @return Frequency of the schedule.
     * 
     */
    private final String frequency;
    /**
     * @return UTC time at which cost analysis data will be emailed.
     * 
     */
    private final @Nullable Integer hourOfDay;
    /**
     * @return The start date and time of the scheduled action (UTC).
     * 
     */
    private final String startDate;
    /**
     * @return Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.
     * 
     */
    private final @Nullable List<String> weeksOfMonth;

    @CustomType.Constructor
    private SchedulePropertiesResponse(
        @CustomType.Parameter("dayOfMonth") @Nullable Integer dayOfMonth,
        @CustomType.Parameter("daysOfWeek") @Nullable List<String> daysOfWeek,
        @CustomType.Parameter("endDate") String endDate,
        @CustomType.Parameter("frequency") String frequency,
        @CustomType.Parameter("hourOfDay") @Nullable Integer hourOfDay,
        @CustomType.Parameter("startDate") String startDate,
        @CustomType.Parameter("weeksOfMonth") @Nullable List<String> weeksOfMonth) {
        this.dayOfMonth = dayOfMonth;
        this.daysOfWeek = daysOfWeek;
        this.endDate = endDate;
        this.frequency = frequency;
        this.hourOfDay = hourOfDay;
        this.startDate = startDate;
        this.weeksOfMonth = weeksOfMonth;
    }

    /**
     * @return UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.
     * 
     */
    public Optional<Integer> dayOfMonth() {
        return Optional.ofNullable(this.dayOfMonth);
    }
    /**
     * @return Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.
     * 
     */
    public List<String> daysOfWeek() {
        return this.daysOfWeek == null ? List.of() : this.daysOfWeek;
    }
    /**
     * @return The end date and time of the scheduled action (UTC).
     * 
     */
    public String endDate() {
        return this.endDate;
    }
    /**
     * @return Frequency of the schedule.
     * 
     */
    public String frequency() {
        return this.frequency;
    }
    /**
     * @return UTC time at which cost analysis data will be emailed.
     * 
     */
    public Optional<Integer> hourOfDay() {
        return Optional.ofNullable(this.hourOfDay);
    }
    /**
     * @return The start date and time of the scheduled action (UTC).
     * 
     */
    public String startDate() {
        return this.startDate;
    }
    /**
     * @return Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.
     * 
     */
    public List<String> weeksOfMonth() {
        return this.weeksOfMonth == null ? List.of() : this.weeksOfMonth;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SchedulePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer dayOfMonth;
        private @Nullable List<String> daysOfWeek;
        private String endDate;
        private String frequency;
        private @Nullable Integer hourOfDay;
        private String startDate;
        private @Nullable List<String> weeksOfMonth;

        public Builder() {
    	      // Empty
        }

        public Builder(SchedulePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfMonth = defaults.dayOfMonth;
    	      this.daysOfWeek = defaults.daysOfWeek;
    	      this.endDate = defaults.endDate;
    	      this.frequency = defaults.frequency;
    	      this.hourOfDay = defaults.hourOfDay;
    	      this.startDate = defaults.startDate;
    	      this.weeksOfMonth = defaults.weeksOfMonth;
        }

        public Builder dayOfMonth(@Nullable Integer dayOfMonth) {
            this.dayOfMonth = dayOfMonth;
            return this;
        }
        public Builder daysOfWeek(@Nullable List<String> daysOfWeek) {
            this.daysOfWeek = daysOfWeek;
            return this;
        }
        public Builder daysOfWeek(String... daysOfWeek) {
            return daysOfWeek(List.of(daysOfWeek));
        }
        public Builder endDate(String endDate) {
            this.endDate = Objects.requireNonNull(endDate);
            return this;
        }
        public Builder frequency(String frequency) {
            this.frequency = Objects.requireNonNull(frequency);
            return this;
        }
        public Builder hourOfDay(@Nullable Integer hourOfDay) {
            this.hourOfDay = hourOfDay;
            return this;
        }
        public Builder startDate(String startDate) {
            this.startDate = Objects.requireNonNull(startDate);
            return this;
        }
        public Builder weeksOfMonth(@Nullable List<String> weeksOfMonth) {
            this.weeksOfMonth = weeksOfMonth;
            return this;
        }
        public Builder weeksOfMonth(String... weeksOfMonth) {
            return weeksOfMonth(List.of(weeksOfMonth));
        }        public SchedulePropertiesResponse build() {
            return new SchedulePropertiesResponse(dayOfMonth, daysOfWeek, endDate, frequency, hourOfDay, startDate, weeksOfMonth);
        }
    }
}
