// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.azurenative.storage.inputs.ManagementPolicyBaseBlobResponse;
import com.pulumi.azurenative.storage.inputs.ManagementPolicySnapShotResponse;
import com.pulumi.azurenative.storage.inputs.ManagementPolicyVersionResponse;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Actions are applied to the filtered blobs when the execution condition is met.
 * 
 */
public final class ManagementPolicyActionResponse extends com.pulumi.resources.InvokeArgs {

    public static final ManagementPolicyActionResponse Empty = new ManagementPolicyActionResponse();

    /**
     * The management policy action for base blob
     * 
     */
    @Import(name="baseBlob")
    private @Nullable ManagementPolicyBaseBlobResponse baseBlob;

    /**
     * @return The management policy action for base blob
     * 
     */
    public Optional<ManagementPolicyBaseBlobResponse> baseBlob() {
        return Optional.ofNullable(this.baseBlob);
    }

    /**
     * The management policy action for snapshot
     * 
     */
    @Import(name="snapshot")
    private @Nullable ManagementPolicySnapShotResponse snapshot;

    /**
     * @return The management policy action for snapshot
     * 
     */
    public Optional<ManagementPolicySnapShotResponse> snapshot() {
        return Optional.ofNullable(this.snapshot);
    }

    /**
     * The management policy action for version
     * 
     */
    @Import(name="version")
    private @Nullable ManagementPolicyVersionResponse version;

    /**
     * @return The management policy action for version
     * 
     */
    public Optional<ManagementPolicyVersionResponse> version() {
        return Optional.ofNullable(this.version);
    }

    private ManagementPolicyActionResponse() {}

    private ManagementPolicyActionResponse(ManagementPolicyActionResponse $) {
        this.baseBlob = $.baseBlob;
        this.snapshot = $.snapshot;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementPolicyActionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementPolicyActionResponse $;

        public Builder() {
            $ = new ManagementPolicyActionResponse();
        }

        public Builder(ManagementPolicyActionResponse defaults) {
            $ = new ManagementPolicyActionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param baseBlob The management policy action for base blob
         * 
         * @return builder
         * 
         */
        public Builder baseBlob(@Nullable ManagementPolicyBaseBlobResponse baseBlob) {
            $.baseBlob = baseBlob;
            return this;
        }

        /**
         * @param snapshot The management policy action for snapshot
         * 
         * @return builder
         * 
         */
        public Builder snapshot(@Nullable ManagementPolicySnapShotResponse snapshot) {
            $.snapshot = snapshot;
            return this;
        }

        /**
         * @param version The management policy action for version
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable ManagementPolicyVersionResponse version) {
            $.version = version;
            return this;
        }

        public ManagementPolicyActionResponse build() {
            return $;
        }
    }

}
