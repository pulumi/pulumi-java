// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.inputs;

import com.pulumi.azurenative.batch.enums.DiskEncryptionTarget;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The disk encryption configuration applied on compute nodes in the pool. Disk encryption configuration is not supported on Linux pool created with Virtual Machine Image or Shared Image Gallery Image.
 * 
 */
public final class DiskEncryptionConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiskEncryptionConfigurationArgs Empty = new DiskEncryptionConfigurationArgs();

    /**
     * On Linux pool, only &#34;TemporaryDisk&#34; is supported; on Windows pool, &#34;OsDisk&#34; and &#34;TemporaryDisk&#34; must be specified.
     * 
     */
    @Import(name="targets")
    private @Nullable Output<List<DiskEncryptionTarget>> targets;

    /**
     * @return On Linux pool, only &#34;TemporaryDisk&#34; is supported; on Windows pool, &#34;OsDisk&#34; and &#34;TemporaryDisk&#34; must be specified.
     * 
     */
    public Optional<Output<List<DiskEncryptionTarget>>> targets() {
        return Optional.ofNullable(this.targets);
    }

    private DiskEncryptionConfigurationArgs() {}

    private DiskEncryptionConfigurationArgs(DiskEncryptionConfigurationArgs $) {
        this.targets = $.targets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskEncryptionConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskEncryptionConfigurationArgs $;

        public Builder() {
            $ = new DiskEncryptionConfigurationArgs();
        }

        public Builder(DiskEncryptionConfigurationArgs defaults) {
            $ = new DiskEncryptionConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targets On Linux pool, only &#34;TemporaryDisk&#34; is supported; on Windows pool, &#34;OsDisk&#34; and &#34;TemporaryDisk&#34; must be specified.
         * 
         * @return builder
         * 
         */
        public Builder targets(@Nullable Output<List<DiskEncryptionTarget>> targets) {
            $.targets = targets;
            return this;
        }

        /**
         * @param targets On Linux pool, only &#34;TemporaryDisk&#34; is supported; on Windows pool, &#34;OsDisk&#34; and &#34;TemporaryDisk&#34; must be specified.
         * 
         * @return builder
         * 
         */
        public Builder targets(List<DiskEncryptionTarget> targets) {
            return targets(Output.of(targets));
        }

        /**
         * @param targets On Linux pool, only &#34;TemporaryDisk&#34; is supported; on Windows pool, &#34;OsDisk&#34; and &#34;TemporaryDisk&#34; must be specified.
         * 
         * @return builder
         * 
         */
        public Builder targets(DiskEncryptionTarget... targets) {
            return targets(List.of(targets));
        }

        public DiskEncryptionConfigurationArgs build() {
            return $;
        }
    }

}
