// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dataprotection.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Inner Error
 * 
 */
public final class InnerErrorResponse extends com.pulumi.resources.InvokeArgs {

    public static final InnerErrorResponse Empty = new InnerErrorResponse();

    /**
     * Any Key value pairs that can be provided to the client for additional  verbose information.
     * 
     */
    @Import(name="additionalInfo")
    private @Nullable Map<String,String> additionalInfo;

    /**
     * @return Any Key value pairs that can be provided to the client for additional  verbose information.
     * 
     */
    public Optional<Map<String,String>> additionalInfo() {
        return Optional.ofNullable(this.additionalInfo);
    }

    /**
     * Unique code for this error
     * 
     */
    @Import(name="code")
    private @Nullable String code;

    /**
     * @return Unique code for this error
     * 
     */
    public Optional<String> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * Child Inner Error, to allow Nesting.
     * 
     */
    @Import(name="embeddedInnerError")
    private @Nullable InnerErrorResponse embeddedInnerError;

    /**
     * @return Child Inner Error, to allow Nesting.
     * 
     */
    public Optional<InnerErrorResponse> embeddedInnerError() {
        return Optional.ofNullable(this.embeddedInnerError);
    }

    private InnerErrorResponse() {}

    private InnerErrorResponse(InnerErrorResponse $) {
        this.additionalInfo = $.additionalInfo;
        this.code = $.code;
        this.embeddedInnerError = $.embeddedInnerError;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InnerErrorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InnerErrorResponse $;

        public Builder() {
            $ = new InnerErrorResponse();
        }

        public Builder(InnerErrorResponse defaults) {
            $ = new InnerErrorResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalInfo Any Key value pairs that can be provided to the client for additional  verbose information.
         * 
         * @return builder
         * 
         */
        public Builder additionalInfo(@Nullable Map<String,String> additionalInfo) {
            $.additionalInfo = additionalInfo;
            return this;
        }

        /**
         * @param code Unique code for this error
         * 
         * @return builder
         * 
         */
        public Builder code(@Nullable String code) {
            $.code = code;
            return this;
        }

        /**
         * @param embeddedInnerError Child Inner Error, to allow Nesting.
         * 
         * @return builder
         * 
         */
        public Builder embeddedInnerError(@Nullable InnerErrorResponse embeddedInnerError) {
            $.embeddedInnerError = embeddedInnerError;
            return this;
        }

        public InnerErrorResponse build() {
            return $;
        }
    }

}
