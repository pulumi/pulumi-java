// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApiReleaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiReleaseArgs Empty = new ApiReleaseArgs();

    /**
     * Identifier of the API the release belongs to.
     * 
     */
    @Import(name="apiId", required=true)
      private final Output<String> apiId;

    public Output<String> apiId() {
        return this.apiId;
    }

    /**
     * Release Notes
     * 
     */
    @Import(name="notes")
      private final @Nullable Output<String> notes;

    public Output<String> notes() {
        return this.notes == null ? Codegen.empty() : this.notes;
    }

    /**
     * Release identifier within an API. Must be unique in the current API Management service instance.
     * 
     */
    @Import(name="releaseId")
      private final @Nullable Output<String> releaseId;

    public Output<String> releaseId() {
        return this.releaseId == null ? Codegen.empty() : this.releaseId;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @Import(name="serviceName", required=true)
      private final Output<String> serviceName;

    public Output<String> serviceName() {
        return this.serviceName;
    }

    public ApiReleaseArgs(
        Output<String> apiId,
        @Nullable Output<String> notes,
        @Nullable Output<String> releaseId,
        Output<String> resourceGroupName,
        Output<String> serviceName) {
        this.apiId = Objects.requireNonNull(apiId, "expected parameter 'apiId' to be non-null");
        this.notes = notes;
        this.releaseId = releaseId;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
    }

    private ApiReleaseArgs() {
        this.apiId = Codegen.empty();
        this.notes = Codegen.empty();
        this.releaseId = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.serviceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiReleaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> apiId;
        private @Nullable Output<String> notes;
        private @Nullable Output<String> releaseId;
        private Output<String> resourceGroupName;
        private Output<String> serviceName;

        public Builder() {
    	      // Empty
        }

        public Builder(ApiReleaseArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiId = defaults.apiId;
    	      this.notes = defaults.notes;
    	      this.releaseId = defaults.releaseId;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceName = defaults.serviceName;
        }

        public Builder apiId(Output<String> apiId) {
            this.apiId = Objects.requireNonNull(apiId);
            return this;
        }
        public Builder apiId(String apiId) {
            this.apiId = Output.of(Objects.requireNonNull(apiId));
            return this;
        }
        public Builder notes(@Nullable Output<String> notes) {
            this.notes = notes;
            return this;
        }
        public Builder notes(@Nullable String notes) {
            this.notes = Codegen.ofNullable(notes);
            return this;
        }
        public Builder releaseId(@Nullable Output<String> releaseId) {
            this.releaseId = releaseId;
            return this;
        }
        public Builder releaseId(@Nullable String releaseId) {
            this.releaseId = Codegen.ofNullable(releaseId);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder serviceName(Output<String> serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public Builder serviceName(String serviceName) {
            this.serviceName = Output.of(Objects.requireNonNull(serviceName));
            return this;
        }        public ApiReleaseArgs build() {
            return new ApiReleaseArgs(apiId, notes, releaseId, resourceGroupName, serviceName);
        }
    }
}
