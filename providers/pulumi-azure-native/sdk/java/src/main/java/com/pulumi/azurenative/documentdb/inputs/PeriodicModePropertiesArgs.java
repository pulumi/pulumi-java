// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Configuration values for periodic mode backup
 * 
 */
public final class PeriodicModePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final PeriodicModePropertiesArgs Empty = new PeriodicModePropertiesArgs();

    /**
     * An integer representing the interval in minutes between two backups
     * 
     */
    @Import(name="backupIntervalInMinutes")
      private final @Nullable Output<Integer> backupIntervalInMinutes;

    public Output<Integer> backupIntervalInMinutes() {
        return this.backupIntervalInMinutes == null ? Codegen.empty() : this.backupIntervalInMinutes;
    }

    /**
     * An integer representing the time (in hours) that each backup is retained
     * 
     */
    @Import(name="backupRetentionIntervalInHours")
      private final @Nullable Output<Integer> backupRetentionIntervalInHours;

    public Output<Integer> backupRetentionIntervalInHours() {
        return this.backupRetentionIntervalInHours == null ? Codegen.empty() : this.backupRetentionIntervalInHours;
    }

    public PeriodicModePropertiesArgs(
        @Nullable Output<Integer> backupIntervalInMinutes,
        @Nullable Output<Integer> backupRetentionIntervalInHours) {
        this.backupIntervalInMinutes = backupIntervalInMinutes;
        this.backupRetentionIntervalInHours = backupRetentionIntervalInHours;
    }

    private PeriodicModePropertiesArgs() {
        this.backupIntervalInMinutes = Codegen.empty();
        this.backupRetentionIntervalInHours = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PeriodicModePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> backupIntervalInMinutes;
        private @Nullable Output<Integer> backupRetentionIntervalInHours;

        public Builder() {
    	      // Empty
        }

        public Builder(PeriodicModePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupIntervalInMinutes = defaults.backupIntervalInMinutes;
    	      this.backupRetentionIntervalInHours = defaults.backupRetentionIntervalInHours;
        }

        public Builder backupIntervalInMinutes(@Nullable Output<Integer> backupIntervalInMinutes) {
            this.backupIntervalInMinutes = backupIntervalInMinutes;
            return this;
        }
        public Builder backupIntervalInMinutes(@Nullable Integer backupIntervalInMinutes) {
            this.backupIntervalInMinutes = Codegen.ofNullable(backupIntervalInMinutes);
            return this;
        }
        public Builder backupRetentionIntervalInHours(@Nullable Output<Integer> backupRetentionIntervalInHours) {
            this.backupRetentionIntervalInHours = backupRetentionIntervalInHours;
            return this;
        }
        public Builder backupRetentionIntervalInHours(@Nullable Integer backupRetentionIntervalInHours) {
            this.backupRetentionIntervalInHours = Codegen.ofNullable(backupRetentionIntervalInHours);
            return this;
        }        public PeriodicModePropertiesArgs build() {
            return new PeriodicModePropertiesArgs(backupIntervalInMinutes, backupRetentionIntervalInHours);
        }
    }
}
