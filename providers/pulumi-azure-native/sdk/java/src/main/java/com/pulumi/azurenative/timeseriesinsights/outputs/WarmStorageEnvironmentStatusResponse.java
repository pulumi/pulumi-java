// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.timeseriesinsights.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WarmStorageEnvironmentStatusResponse {
    /**
     * A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
     * 
     */
    private final @Nullable Integer currentCount;
    /**
     * A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
     * 
     */
    private final @Nullable Integer maxCount;
    /**
     * This string represents the state of warm storage properties usage. It can be &#34;Ok&#34;, &#34;Error&#34;, &#34;Unknown&#34;.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private WarmStorageEnvironmentStatusResponse(
        @CustomType.Parameter("currentCount") @Nullable Integer currentCount,
        @CustomType.Parameter("maxCount") @Nullable Integer maxCount,
        @CustomType.Parameter("state") @Nullable String state) {
        this.currentCount = currentCount;
        this.maxCount = maxCount;
        this.state = state;
    }

    /**
     * A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
     * 
    */
    public Optional<Integer> currentCount() {
        return Optional.ofNullable(this.currentCount);
    }
    /**
     * A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
     * 
    */
    public Optional<Integer> maxCount() {
        return Optional.ofNullable(this.maxCount);
    }
    /**
     * This string represents the state of warm storage properties usage. It can be &#34;Ok&#34;, &#34;Error&#34;, &#34;Unknown&#34;.
     * 
    */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WarmStorageEnvironmentStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer currentCount;
        private @Nullable Integer maxCount;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(WarmStorageEnvironmentStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentCount = defaults.currentCount;
    	      this.maxCount = defaults.maxCount;
    	      this.state = defaults.state;
        }

        public Builder currentCount(@Nullable Integer currentCount) {
            this.currentCount = currentCount;
            return this;
        }
        public Builder maxCount(@Nullable Integer maxCount) {
            this.maxCount = maxCount;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public WarmStorageEnvironmentStatusResponse build() {
            return new WarmStorageEnvironmentStatusResponse(currentCount, maxCount, state);
        }
    }
}
