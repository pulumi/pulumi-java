// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * An access key for the storage account.
 * 
 */
public final class StorageAccountKeyResponse extends com.pulumi.resources.InvokeArgs {

    public static final StorageAccountKeyResponse Empty = new StorageAccountKeyResponse();

    /**
     * Creation time of the key, in round trip date format.
     * 
     */
    @Import(name="creationTime", required=true)
    private String creationTime;

    /**
     * @return Creation time of the key, in round trip date format.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }

    /**
     * Name of the key.
     * 
     */
    @Import(name="keyName", required=true)
    private String keyName;

    /**
     * @return Name of the key.
     * 
     */
    public String keyName() {
        return this.keyName;
    }

    /**
     * Permissions for the key -- read-only or full permissions.
     * 
     */
    @Import(name="permissions", required=true)
    private String permissions;

    /**
     * @return Permissions for the key -- read-only or full permissions.
     * 
     */
    public String permissions() {
        return this.permissions;
    }

    /**
     * Base 64-encoded value of the key.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    /**
     * @return Base 64-encoded value of the key.
     * 
     */
    public String value() {
        return this.value;
    }

    private StorageAccountKeyResponse() {}

    private StorageAccountKeyResponse(StorageAccountKeyResponse $) {
        this.creationTime = $.creationTime;
        this.keyName = $.keyName;
        this.permissions = $.permissions;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageAccountKeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageAccountKeyResponse $;

        public Builder() {
            $ = new StorageAccountKeyResponse();
        }

        public Builder(StorageAccountKeyResponse defaults) {
            $ = new StorageAccountKeyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationTime Creation time of the key, in round trip date format.
         * 
         * @return builder
         * 
         */
        public Builder creationTime(String creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        /**
         * @param keyName Name of the key.
         * 
         * @return builder
         * 
         */
        public Builder keyName(String keyName) {
            $.keyName = keyName;
            return this;
        }

        /**
         * @param permissions Permissions for the key -- read-only or full permissions.
         * 
         * @return builder
         * 
         */
        public Builder permissions(String permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param value Base 64-encoded value of the key.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public StorageAccountKeyResponse build() {
            $.creationTime = Objects.requireNonNull($.creationTime, "expected parameter 'creationTime' to be non-null");
            $.keyName = Objects.requireNonNull($.keyName, "expected parameter 'keyName' to be non-null");
            $.permissions = Objects.requireNonNull($.permissions, "expected parameter 'permissions' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
