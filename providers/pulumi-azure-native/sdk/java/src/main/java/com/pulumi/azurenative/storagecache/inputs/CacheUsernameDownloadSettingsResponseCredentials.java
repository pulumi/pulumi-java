// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagecache.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * When present, these are the credentials for the secure LDAP connection.
 * 
 */
public final class CacheUsernameDownloadSettingsResponseCredentials extends com.pulumi.resources.InvokeArgs {

    public static final CacheUsernameDownloadSettingsResponseCredentials Empty = new CacheUsernameDownloadSettingsResponseCredentials();

    /**
     * The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.
     * 
     */
    @Import(name="bindDn")
    private @Nullable String bindDn;

    /**
     * @return The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.
     * 
     */
    public Optional<String> bindDn() {
        return Optional.ofNullable(this.bindDn);
    }

    /**
     * The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.
     * 
     */
    @Import(name="bindPassword")
    private @Nullable String bindPassword;

    /**
     * @return The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.
     * 
     */
    public Optional<String> bindPassword() {
        return Optional.ofNullable(this.bindPassword);
    }

    private CacheUsernameDownloadSettingsResponseCredentials() {}

    private CacheUsernameDownloadSettingsResponseCredentials(CacheUsernameDownloadSettingsResponseCredentials $) {
        this.bindDn = $.bindDn;
        this.bindPassword = $.bindPassword;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CacheUsernameDownloadSettingsResponseCredentials defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CacheUsernameDownloadSettingsResponseCredentials $;

        public Builder() {
            $ = new CacheUsernameDownloadSettingsResponseCredentials();
        }

        public Builder(CacheUsernameDownloadSettingsResponseCredentials defaults) {
            $ = new CacheUsernameDownloadSettingsResponseCredentials(Objects.requireNonNull(defaults));
        }

        /**
         * @param bindDn The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.
         * 
         * @return builder
         * 
         */
        public Builder bindDn(@Nullable String bindDn) {
            $.bindDn = bindDn;
            return this;
        }

        /**
         * @param bindPassword The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.
         * 
         * @return builder
         * 
         */
        public Builder bindPassword(@Nullable String bindPassword) {
            $.bindPassword = bindPassword;
            return this;
        }

        public CacheUsernameDownloadSettingsResponseCredentials build() {
            return $;
        }
    }

}
