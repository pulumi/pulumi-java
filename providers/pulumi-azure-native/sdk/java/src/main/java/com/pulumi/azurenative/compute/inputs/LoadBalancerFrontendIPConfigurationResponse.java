// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.LoadBalancerFrontendIPConfigurationPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class LoadBalancerFrontendIPConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final LoadBalancerFrontendIPConfigurationResponse Empty = new LoadBalancerFrontendIPConfigurationResponse();

    /**
     * The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Properties of load balancer frontend ip configuration.
     * 
     */
    @Import(name="properties", required=true)
    private LoadBalancerFrontendIPConfigurationPropertiesResponse properties;

    /**
     * @return Properties of load balancer frontend ip configuration.
     * 
     */
    public LoadBalancerFrontendIPConfigurationPropertiesResponse properties() {
        return this.properties;
    }

    private LoadBalancerFrontendIPConfigurationResponse() {}

    private LoadBalancerFrontendIPConfigurationResponse(LoadBalancerFrontendIPConfigurationResponse $) {
        this.name = $.name;
        this.properties = $.properties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerFrontendIPConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerFrontendIPConfigurationResponse $;

        public Builder() {
            $ = new LoadBalancerFrontendIPConfigurationResponse();
        }

        public Builder(LoadBalancerFrontendIPConfigurationResponse defaults) {
            $ = new LoadBalancerFrontendIPConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param properties Properties of load balancer frontend ip configuration.
         * 
         * @return builder
         * 
         */
        public Builder properties(LoadBalancerFrontendIPConfigurationPropertiesResponse properties) {
            $.properties = properties;
            return this;
        }

        public LoadBalancerFrontendIPConfigurationResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.properties = Objects.requireNonNull($.properties, "expected parameter 'properties' to be non-null");
            return $;
        }
    }

}
