// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.azurenative.migrate.inputs.NsgReferenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the virtual network subnets resource settings.
 * 
 */
public final class SubnetResourceSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubnetResourceSettingsArgs Empty = new SubnetResourceSettingsArgs();

    /**
     * Gets or sets address prefix for the subnet.
     * 
     */
    @Import(name="addressPrefix")
    private @Nullable Output<String> addressPrefix;

    /**
     * @return Gets or sets address prefix for the subnet.
     * 
     */
    public Optional<Output<String>> addressPrefix() {
        return Optional.ofNullable(this.addressPrefix);
    }

    /**
     * Gets or sets the Subnet name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Gets or sets the Subnet name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Defines reference to NSG.
     * 
     */
    @Import(name="networkSecurityGroup")
    private @Nullable Output<NsgReferenceArgs> networkSecurityGroup;

    /**
     * @return Defines reference to NSG.
     * 
     */
    public Optional<Output<NsgReferenceArgs>> networkSecurityGroup() {
        return Optional.ofNullable(this.networkSecurityGroup);
    }

    private SubnetResourceSettingsArgs() {}

    private SubnetResourceSettingsArgs(SubnetResourceSettingsArgs $) {
        this.addressPrefix = $.addressPrefix;
        this.name = $.name;
        this.networkSecurityGroup = $.networkSecurityGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubnetResourceSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubnetResourceSettingsArgs $;

        public Builder() {
            $ = new SubnetResourceSettingsArgs();
        }

        public Builder(SubnetResourceSettingsArgs defaults) {
            $ = new SubnetResourceSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressPrefix Gets or sets address prefix for the subnet.
         * 
         * @return builder
         * 
         */
        public Builder addressPrefix(@Nullable Output<String> addressPrefix) {
            $.addressPrefix = addressPrefix;
            return this;
        }

        /**
         * @param addressPrefix Gets or sets address prefix for the subnet.
         * 
         * @return builder
         * 
         */
        public Builder addressPrefix(String addressPrefix) {
            return addressPrefix(Output.of(addressPrefix));
        }

        /**
         * @param name Gets or sets the Subnet name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Gets or sets the Subnet name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkSecurityGroup Defines reference to NSG.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroup(@Nullable Output<NsgReferenceArgs> networkSecurityGroup) {
            $.networkSecurityGroup = networkSecurityGroup;
            return this;
        }

        /**
         * @param networkSecurityGroup Defines reference to NSG.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroup(NsgReferenceArgs networkSecurityGroup) {
            return networkSecurityGroup(Output.of(networkSecurityGroup));
        }

        public SubnetResourceSettingsArgs build() {
            return $;
        }
    }

}
