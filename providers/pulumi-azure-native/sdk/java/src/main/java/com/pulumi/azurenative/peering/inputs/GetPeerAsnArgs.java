// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.peering.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetPeerAsnArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPeerAsnArgs Empty = new GetPeerAsnArgs();

    /**
     * The peer ASN name.
     * 
     */
    @Import(name="peerAsnName", required=true)
    private Output<String> peerAsnName;

    /**
     * @return The peer ASN name.
     * 
     */
    public Output<String> peerAsnName() {
        return this.peerAsnName;
    }

    private GetPeerAsnArgs() {}

    private GetPeerAsnArgs(GetPeerAsnArgs $) {
        this.peerAsnName = $.peerAsnName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPeerAsnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPeerAsnArgs $;

        public Builder() {
            $ = new GetPeerAsnArgs();
        }

        public Builder(GetPeerAsnArgs defaults) {
            $ = new GetPeerAsnArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param peerAsnName The peer ASN name.
         * 
         * @return builder
         * 
         */
        public Builder peerAsnName(Output<String> peerAsnName) {
            $.peerAsnName = peerAsnName;
            return this;
        }

        /**
         * @param peerAsnName The peer ASN name.
         * 
         * @return builder
         * 
         */
        public Builder peerAsnName(String peerAsnName) {
            return peerAsnName(Output.of(peerAsnName));
        }

        public GetPeerAsnArgs build() {
            $.peerAsnName = Objects.requireNonNull($.peerAsnName, "expected parameter 'peerAsnName' to be non-null");
            return $;
        }
    }

}
