// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.azurenative.migrate.inputs.CollectorAgentPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CollectorPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final CollectorPropertiesResponse Empty = new CollectorPropertiesResponse();

    @Import(name="agentProperties")
    private @Nullable CollectorAgentPropertiesResponse agentProperties;

    public Optional<CollectorAgentPropertiesResponse> agentProperties() {
        return Optional.ofNullable(this.agentProperties);
    }

    /**
     * Time when this collector was created. Date-Time represented in ISO-8601 format.
     * 
     */
    @Import(name="createdTimestamp", required=true)
    private String createdTimestamp;

    public String createdTimestamp() {
        return this.createdTimestamp;
    }

    /**
     * The ARM id of the discovery service site.
     * 
     */
    @Import(name="discoverySiteId")
    private @Nullable String discoverySiteId;

    public Optional<String> discoverySiteId() {
        return Optional.ofNullable(this.discoverySiteId);
    }

    /**
     * Time when this collector was updated. Date-Time represented in ISO-8601 format.
     * 
     */
    @Import(name="updatedTimestamp", required=true)
    private String updatedTimestamp;

    public String updatedTimestamp() {
        return this.updatedTimestamp;
    }

    private CollectorPropertiesResponse() {}

    private CollectorPropertiesResponse(CollectorPropertiesResponse $) {
        this.agentProperties = $.agentProperties;
        this.createdTimestamp = $.createdTimestamp;
        this.discoverySiteId = $.discoverySiteId;
        this.updatedTimestamp = $.updatedTimestamp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CollectorPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CollectorPropertiesResponse $;

        public Builder() {
            $ = new CollectorPropertiesResponse();
        }

        public Builder(CollectorPropertiesResponse defaults) {
            $ = new CollectorPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder agentProperties(@Nullable CollectorAgentPropertiesResponse agentProperties) {
            $.agentProperties = agentProperties;
            return this;
        }

        public Builder createdTimestamp(String createdTimestamp) {
            $.createdTimestamp = createdTimestamp;
            return this;
        }

        public Builder discoverySiteId(@Nullable String discoverySiteId) {
            $.discoverySiteId = discoverySiteId;
            return this;
        }

        public Builder updatedTimestamp(String updatedTimestamp) {
            $.updatedTimestamp = updatedTimestamp;
            return this;
        }

        public CollectorPropertiesResponse build() {
            $.createdTimestamp = Objects.requireNonNull($.createdTimestamp, "expected parameter 'createdTimestamp' to be non-null");
            $.updatedTimestamp = Objects.requireNonNull($.updatedTimestamp, "expected parameter 'updatedTimestamp' to be non-null");
            return $;
        }
    }

}
