// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute;

import com.pulumi.azurenative.compute.enums.OperatingSystemTypes;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GalleryApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GalleryApplicationArgs Empty = new GalleryApplicationArgs();

    /**
     * The description of this gallery Application Definition resource. This property is updatable.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable.
     * 
     */
    @Import(name="endOfLifeDate")
    private @Nullable Output<String> endOfLifeDate;

    public Optional<Output<String>> endOfLifeDate() {
        return Optional.ofNullable(this.endOfLifeDate);
    }

    /**
     * The Eula agreement for the gallery Application Definition.
     * 
     */
    @Import(name="eula")
    private @Nullable Output<String> eula;

    public Optional<Output<String>> eula() {
        return Optional.ofNullable(this.eula);
    }

    /**
     * The name of the gallery Application Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters.
     * 
     */
    @Import(name="galleryApplicationName")
    private @Nullable Output<String> galleryApplicationName;

    public Optional<Output<String>> galleryApplicationName() {
        return Optional.ofNullable(this.galleryApplicationName);
    }

    /**
     * The name of the Shared Application Gallery in which the Application Definition is to be created.
     * 
     */
    @Import(name="galleryName", required=true)
    private Output<String> galleryName;

    public Output<String> galleryName() {
        return this.galleryName;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The privacy statement uri.
     * 
     */
    @Import(name="privacyStatementUri")
    private @Nullable Output<String> privacyStatementUri;

    public Optional<Output<String>> privacyStatementUri() {
        return Optional.ofNullable(this.privacyStatementUri);
    }

    /**
     * The release note uri.
     * 
     */
    @Import(name="releaseNoteUri")
    private @Nullable Output<String> releaseNoteUri;

    public Optional<Output<String>> releaseNoteUri() {
        return Optional.ofNullable(this.releaseNoteUri);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * This property allows you to specify the supported type of the OS that application is built for. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux**
     * 
     */
    @Import(name="supportedOSType", required=true)
    private Output<OperatingSystemTypes> supportedOSType;

    public Output<OperatingSystemTypes> supportedOSType() {
        return this.supportedOSType;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GalleryApplicationArgs() {}

    private GalleryApplicationArgs(GalleryApplicationArgs $) {
        this.description = $.description;
        this.endOfLifeDate = $.endOfLifeDate;
        this.eula = $.eula;
        this.galleryApplicationName = $.galleryApplicationName;
        this.galleryName = $.galleryName;
        this.location = $.location;
        this.privacyStatementUri = $.privacyStatementUri;
        this.releaseNoteUri = $.releaseNoteUri;
        this.resourceGroupName = $.resourceGroupName;
        this.supportedOSType = $.supportedOSType;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GalleryApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GalleryApplicationArgs $;

        public Builder() {
            $ = new GalleryApplicationArgs();
        }

        public Builder(GalleryApplicationArgs defaults) {
            $ = new GalleryApplicationArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder endOfLifeDate(@Nullable Output<String> endOfLifeDate) {
            $.endOfLifeDate = endOfLifeDate;
            return this;
        }

        public Builder endOfLifeDate(String endOfLifeDate) {
            return endOfLifeDate(Output.of(endOfLifeDate));
        }

        public Builder eula(@Nullable Output<String> eula) {
            $.eula = eula;
            return this;
        }

        public Builder eula(String eula) {
            return eula(Output.of(eula));
        }

        public Builder galleryApplicationName(@Nullable Output<String> galleryApplicationName) {
            $.galleryApplicationName = galleryApplicationName;
            return this;
        }

        public Builder galleryApplicationName(String galleryApplicationName) {
            return galleryApplicationName(Output.of(galleryApplicationName));
        }

        public Builder galleryName(Output<String> galleryName) {
            $.galleryName = galleryName;
            return this;
        }

        public Builder galleryName(String galleryName) {
            return galleryName(Output.of(galleryName));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder privacyStatementUri(@Nullable Output<String> privacyStatementUri) {
            $.privacyStatementUri = privacyStatementUri;
            return this;
        }

        public Builder privacyStatementUri(String privacyStatementUri) {
            return privacyStatementUri(Output.of(privacyStatementUri));
        }

        public Builder releaseNoteUri(@Nullable Output<String> releaseNoteUri) {
            $.releaseNoteUri = releaseNoteUri;
            return this;
        }

        public Builder releaseNoteUri(String releaseNoteUri) {
            return releaseNoteUri(Output.of(releaseNoteUri));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder supportedOSType(Output<OperatingSystemTypes> supportedOSType) {
            $.supportedOSType = supportedOSType;
            return this;
        }

        public Builder supportedOSType(OperatingSystemTypes supportedOSType) {
            return supportedOSType(Output.of(supportedOSType));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GalleryApplicationArgs build() {
            $.galleryName = Objects.requireNonNull($.galleryName, "expected parameter 'galleryName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.supportedOSType = Objects.requireNonNull($.supportedOSType, "expected parameter 'supportedOSType' to be non-null");
            return $;
        }
    }

}
