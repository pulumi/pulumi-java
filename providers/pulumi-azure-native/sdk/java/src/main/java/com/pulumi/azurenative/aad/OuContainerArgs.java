// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.aad;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OuContainerArgs extends com.pulumi.resources.ResourceArgs {

    public static final OuContainerArgs Empty = new OuContainerArgs();

    /**
     * The account name
     * 
     */
    @Import(name="accountName")
    private @Nullable Output<String> accountName;

    /**
     * @return The account name
     * 
     */
    public Optional<Output<String>> accountName() {
        return Optional.ofNullable(this.accountName);
    }

    /**
     * The name of the domain service.
     * 
     */
    @Import(name="domainServiceName", required=true)
    private Output<String> domainServiceName;

    /**
     * @return The name of the domain service.
     * 
     */
    public Output<String> domainServiceName() {
        return this.domainServiceName;
    }

    /**
     * The name of the OuContainer.
     * 
     */
    @Import(name="ouContainerName")
    private @Nullable Output<String> ouContainerName;

    /**
     * @return The name of the OuContainer.
     * 
     */
    public Optional<Output<String>> ouContainerName() {
        return Optional.ofNullable(this.ouContainerName);
    }

    /**
     * The account password
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The account password
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The account spn
     * 
     */
    @Import(name="spn")
    private @Nullable Output<String> spn;

    /**
     * @return The account spn
     * 
     */
    public Optional<Output<String>> spn() {
        return Optional.ofNullable(this.spn);
    }

    private OuContainerArgs() {}

    private OuContainerArgs(OuContainerArgs $) {
        this.accountName = $.accountName;
        this.domainServiceName = $.domainServiceName;
        this.ouContainerName = $.ouContainerName;
        this.password = $.password;
        this.resourceGroupName = $.resourceGroupName;
        this.spn = $.spn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OuContainerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OuContainerArgs $;

        public Builder() {
            $ = new OuContainerArgs();
        }

        public Builder(OuContainerArgs defaults) {
            $ = new OuContainerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The account name
         * 
         * @return builder
         * 
         */
        public Builder accountName(@Nullable Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The account name
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param domainServiceName The name of the domain service.
         * 
         * @return builder
         * 
         */
        public Builder domainServiceName(Output<String> domainServiceName) {
            $.domainServiceName = domainServiceName;
            return this;
        }

        /**
         * @param domainServiceName The name of the domain service.
         * 
         * @return builder
         * 
         */
        public Builder domainServiceName(String domainServiceName) {
            return domainServiceName(Output.of(domainServiceName));
        }

        /**
         * @param ouContainerName The name of the OuContainer.
         * 
         * @return builder
         * 
         */
        public Builder ouContainerName(@Nullable Output<String> ouContainerName) {
            $.ouContainerName = ouContainerName;
            return this;
        }

        /**
         * @param ouContainerName The name of the OuContainer.
         * 
         * @return builder
         * 
         */
        public Builder ouContainerName(String ouContainerName) {
            return ouContainerName(Output.of(ouContainerName));
        }

        /**
         * @param password The account password
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The account password
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param spn The account spn
         * 
         * @return builder
         * 
         */
        public Builder spn(@Nullable Output<String> spn) {
            $.spn = spn;
            return this;
        }

        /**
         * @param spn The account spn
         * 
         * @return builder
         * 
         */
        public Builder spn(String spn) {
            return spn(Output.of(spn));
        }

        public OuContainerArgs build() {
            $.domainServiceName = Objects.requireNonNull($.domainServiceName, "expected parameter 'domainServiceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
