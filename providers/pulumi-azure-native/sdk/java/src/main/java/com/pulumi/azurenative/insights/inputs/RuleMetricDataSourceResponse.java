// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A rule metric data source. The discriminator value is always RuleMetricDataSource in this case.
 * 
 */
public final class RuleMetricDataSourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final RuleMetricDataSourceResponse Empty = new RuleMetricDataSourceResponse();

    /**
     * the legacy resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.
     * 
     */
    @Import(name="legacyResourceId")
    private @Nullable String legacyResourceId;

    /**
     * @return the legacy resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.
     * 
     */
    public Optional<String> legacyResourceId() {
        return Optional.ofNullable(this.legacyResourceId);
    }

    /**
     * the name of the metric that defines what the rule monitors.
     * 
     */
    @Import(name="metricName")
    private @Nullable String metricName;

    /**
     * @return the name of the metric that defines what the rule monitors.
     * 
     */
    public Optional<String> metricName() {
        return Optional.ofNullable(this.metricName);
    }

    /**
     * the namespace of the metric.
     * 
     */
    @Import(name="metricNamespace")
    private @Nullable String metricNamespace;

    /**
     * @return the namespace of the metric.
     * 
     */
    public Optional<String> metricNamespace() {
        return Optional.ofNullable(this.metricNamespace);
    }

    /**
     * specifies the type of data source. There are two types of rule data sources: RuleMetricDataSource and RuleManagementEventDataSource
     * Expected value is &#39;Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private String odataType;

    /**
     * @return specifies the type of data source. There are two types of rule data sources: RuleMetricDataSource and RuleManagementEventDataSource
     * Expected value is &#39;Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource&#39;.
     * 
     */
    public String odataType() {
        return this.odataType;
    }

    /**
     * the location of the resource.
     * 
     */
    @Import(name="resourceLocation")
    private @Nullable String resourceLocation;

    /**
     * @return the location of the resource.
     * 
     */
    public Optional<String> resourceLocation() {
        return Optional.ofNullable(this.resourceLocation);
    }

    /**
     * the resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.
     * 
     */
    @Import(name="resourceUri")
    private @Nullable String resourceUri;

    /**
     * @return the resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.
     * 
     */
    public Optional<String> resourceUri() {
        return Optional.ofNullable(this.resourceUri);
    }

    private RuleMetricDataSourceResponse() {}

    private RuleMetricDataSourceResponse(RuleMetricDataSourceResponse $) {
        this.legacyResourceId = $.legacyResourceId;
        this.metricName = $.metricName;
        this.metricNamespace = $.metricNamespace;
        this.odataType = $.odataType;
        this.resourceLocation = $.resourceLocation;
        this.resourceUri = $.resourceUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleMetricDataSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleMetricDataSourceResponse $;

        public Builder() {
            $ = new RuleMetricDataSourceResponse();
        }

        public Builder(RuleMetricDataSourceResponse defaults) {
            $ = new RuleMetricDataSourceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param legacyResourceId the legacy resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.
         * 
         * @return builder
         * 
         */
        public Builder legacyResourceId(@Nullable String legacyResourceId) {
            $.legacyResourceId = legacyResourceId;
            return this;
        }

        /**
         * @param metricName the name of the metric that defines what the rule monitors.
         * 
         * @return builder
         * 
         */
        public Builder metricName(@Nullable String metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param metricNamespace the namespace of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricNamespace(@Nullable String metricNamespace) {
            $.metricNamespace = metricNamespace;
            return this;
        }

        /**
         * @param odataType specifies the type of data source. There are two types of rule data sources: RuleMetricDataSource and RuleManagementEventDataSource
         * Expected value is &#39;Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource&#39;.
         * 
         * @return builder
         * 
         */
        public Builder odataType(String odataType) {
            $.odataType = odataType;
            return this;
        }

        /**
         * @param resourceLocation the location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceLocation(@Nullable String resourceLocation) {
            $.resourceLocation = resourceLocation;
            return this;
        }

        /**
         * @param resourceUri the resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.
         * 
         * @return builder
         * 
         */
        public Builder resourceUri(@Nullable String resourceUri) {
            $.resourceUri = resourceUri;
            return this;
        }

        public RuleMetricDataSourceResponse build() {
            $.odataType = Codegen.stringProp("odataType").arg($.odataType).require();
            return $;
        }
    }

}
