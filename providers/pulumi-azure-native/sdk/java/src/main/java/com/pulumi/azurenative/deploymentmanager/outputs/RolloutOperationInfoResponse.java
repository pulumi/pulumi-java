// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deploymentmanager.outputs;

import com.pulumi.azurenative.deploymentmanager.outputs.CloudErrorBodyResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RolloutOperationInfoResponse {
    /**
     * @return The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.
     * 
     */
    private final String endTime;
    /**
     * @return The detailed error information for any failure.
     * 
     */
    private final CloudErrorBodyResponse error;
    /**
     * @return The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.
     * 
     */
    private final Integer retryAttempt;
    /**
     * @return True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.
     * 
     */
    private final Boolean skipSucceededOnRetry;
    /**
     * @return The start time of the rollout in UTC.
     * 
     */
    private final String startTime;

    @CustomType.Constructor
    private RolloutOperationInfoResponse(
        @CustomType.Parameter("endTime") String endTime,
        @CustomType.Parameter("error") CloudErrorBodyResponse error,
        @CustomType.Parameter("retryAttempt") Integer retryAttempt,
        @CustomType.Parameter("skipSucceededOnRetry") Boolean skipSucceededOnRetry,
        @CustomType.Parameter("startTime") String startTime) {
        this.endTime = endTime;
        this.error = error;
        this.retryAttempt = retryAttempt;
        this.skipSucceededOnRetry = skipSucceededOnRetry;
        this.startTime = startTime;
    }

    /**
     * @return The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.
     * 
     */
    public String endTime() {
        return this.endTime;
    }
    /**
     * @return The detailed error information for any failure.
     * 
     */
    public CloudErrorBodyResponse error() {
        return this.error;
    }
    /**
     * @return The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.
     * 
     */
    public Integer retryAttempt() {
        return this.retryAttempt;
    }
    /**
     * @return True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.
     * 
     */
    public Boolean skipSucceededOnRetry() {
        return this.skipSucceededOnRetry;
    }
    /**
     * @return The start time of the rollout in UTC.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RolloutOperationInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String endTime;
        private CloudErrorBodyResponse error;
        private Integer retryAttempt;
        private Boolean skipSucceededOnRetry;
        private String startTime;

        public Builder() {
    	      // Empty
        }

        public Builder(RolloutOperationInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTime = defaults.endTime;
    	      this.error = defaults.error;
    	      this.retryAttempt = defaults.retryAttempt;
    	      this.skipSucceededOnRetry = defaults.skipSucceededOnRetry;
    	      this.startTime = defaults.startTime;
        }

        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        public Builder error(CloudErrorBodyResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }
        public Builder retryAttempt(Integer retryAttempt) {
            this.retryAttempt = Objects.requireNonNull(retryAttempt);
            return this;
        }
        public Builder skipSucceededOnRetry(Boolean skipSucceededOnRetry) {
            this.skipSucceededOnRetry = Objects.requireNonNull(skipSucceededOnRetry);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }        public RolloutOperationInfoResponse build() {
            return new RolloutOperationInfoResponse(endTime, error, retryAttempt, skipSucceededOnRetry, startTime);
        }
    }
}
