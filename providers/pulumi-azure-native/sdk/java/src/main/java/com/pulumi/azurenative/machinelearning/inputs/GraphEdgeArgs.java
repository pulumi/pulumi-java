// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearning.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines an edge within the web service&#39;s graph.
 * 
 */
public final class GraphEdgeArgs extends com.pulumi.resources.ResourceArgs {

    public static final GraphEdgeArgs Empty = new GraphEdgeArgs();

    /**
     * The source graph node&#39;s identifier.
     * 
     */
    @Import(name="sourceNodeId")
    private @Nullable Output<String> sourceNodeId;

    /**
     * @return The source graph node&#39;s identifier.
     * 
     */
    public Optional<Output<String>> sourceNodeId() {
        return Optional.ofNullable(this.sourceNodeId);
    }

    /**
     * The identifier of the source node&#39;s port that the edge connects from.
     * 
     */
    @Import(name="sourcePortId")
    private @Nullable Output<String> sourcePortId;

    /**
     * @return The identifier of the source node&#39;s port that the edge connects from.
     * 
     */
    public Optional<Output<String>> sourcePortId() {
        return Optional.ofNullable(this.sourcePortId);
    }

    /**
     * The destination graph node&#39;s identifier.
     * 
     */
    @Import(name="targetNodeId")
    private @Nullable Output<String> targetNodeId;

    /**
     * @return The destination graph node&#39;s identifier.
     * 
     */
    public Optional<Output<String>> targetNodeId() {
        return Optional.ofNullable(this.targetNodeId);
    }

    /**
     * The identifier of the destination node&#39;s port that the edge connects into.
     * 
     */
    @Import(name="targetPortId")
    private @Nullable Output<String> targetPortId;

    /**
     * @return The identifier of the destination node&#39;s port that the edge connects into.
     * 
     */
    public Optional<Output<String>> targetPortId() {
        return Optional.ofNullable(this.targetPortId);
    }

    private GraphEdgeArgs() {}

    private GraphEdgeArgs(GraphEdgeArgs $) {
        this.sourceNodeId = $.sourceNodeId;
        this.sourcePortId = $.sourcePortId;
        this.targetNodeId = $.targetNodeId;
        this.targetPortId = $.targetPortId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GraphEdgeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GraphEdgeArgs $;

        public Builder() {
            $ = new GraphEdgeArgs();
        }

        public Builder(GraphEdgeArgs defaults) {
            $ = new GraphEdgeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceNodeId The source graph node&#39;s identifier.
         * 
         * @return builder
         * 
         */
        public Builder sourceNodeId(@Nullable Output<String> sourceNodeId) {
            $.sourceNodeId = sourceNodeId;
            return this;
        }

        /**
         * @param sourceNodeId The source graph node&#39;s identifier.
         * 
         * @return builder
         * 
         */
        public Builder sourceNodeId(String sourceNodeId) {
            return sourceNodeId(Output.of(sourceNodeId));
        }

        /**
         * @param sourcePortId The identifier of the source node&#39;s port that the edge connects from.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortId(@Nullable Output<String> sourcePortId) {
            $.sourcePortId = sourcePortId;
            return this;
        }

        /**
         * @param sourcePortId The identifier of the source node&#39;s port that the edge connects from.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortId(String sourcePortId) {
            return sourcePortId(Output.of(sourcePortId));
        }

        /**
         * @param targetNodeId The destination graph node&#39;s identifier.
         * 
         * @return builder
         * 
         */
        public Builder targetNodeId(@Nullable Output<String> targetNodeId) {
            $.targetNodeId = targetNodeId;
            return this;
        }

        /**
         * @param targetNodeId The destination graph node&#39;s identifier.
         * 
         * @return builder
         * 
         */
        public Builder targetNodeId(String targetNodeId) {
            return targetNodeId(Output.of(targetNodeId));
        }

        /**
         * @param targetPortId The identifier of the destination node&#39;s port that the edge connects into.
         * 
         * @return builder
         * 
         */
        public Builder targetPortId(@Nullable Output<String> targetPortId) {
            $.targetPortId = targetPortId;
            return this;
        }

        /**
         * @param targetPortId The identifier of the destination node&#39;s port that the edge connects into.
         * 
         * @return builder
         * 
         */
        public Builder targetPortId(String targetPortId) {
            return targetPortId(Output.of(targetPortId));
        }

        public GraphEdgeArgs build() {
            return $;
        }
    }

}
