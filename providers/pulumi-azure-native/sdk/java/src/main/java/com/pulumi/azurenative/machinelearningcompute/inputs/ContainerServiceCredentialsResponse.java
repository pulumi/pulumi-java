// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningcompute.inputs;

import com.pulumi.azurenative.machinelearningcompute.inputs.ServicePrincipalPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Information about the Azure Container Registry which contains the images deployed to the cluster.
 * 
 */
public final class ContainerServiceCredentialsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContainerServiceCredentialsResponse Empty = new ContainerServiceCredentialsResponse();

    /**
     * The ACS kube config file.
     * 
     */
    @Import(name="acsKubeConfig", required=true)
    private String acsKubeConfig;

    /**
     * @return The ACS kube config file.
     * 
     */
    public String acsKubeConfig() {
        return this.acsKubeConfig;
    }

    /**
     * The ACR image pull secret name which was created in Kubernetes.
     * 
     */
    @Import(name="imagePullSecretName", required=true)
    private String imagePullSecretName;

    /**
     * @return The ACR image pull secret name which was created in Kubernetes.
     * 
     */
    public String imagePullSecretName() {
        return this.imagePullSecretName;
    }

    /**
     * Service principal configuration used by Kubernetes.
     * 
     */
    @Import(name="servicePrincipalConfiguration", required=true)
    private ServicePrincipalPropertiesResponse servicePrincipalConfiguration;

    /**
     * @return Service principal configuration used by Kubernetes.
     * 
     */
    public ServicePrincipalPropertiesResponse servicePrincipalConfiguration() {
        return this.servicePrincipalConfiguration;
    }

    private ContainerServiceCredentialsResponse() {}

    private ContainerServiceCredentialsResponse(ContainerServiceCredentialsResponse $) {
        this.acsKubeConfig = $.acsKubeConfig;
        this.imagePullSecretName = $.imagePullSecretName;
        this.servicePrincipalConfiguration = $.servicePrincipalConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerServiceCredentialsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerServiceCredentialsResponse $;

        public Builder() {
            $ = new ContainerServiceCredentialsResponse();
        }

        public Builder(ContainerServiceCredentialsResponse defaults) {
            $ = new ContainerServiceCredentialsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param acsKubeConfig The ACS kube config file.
         * 
         * @return builder
         * 
         */
        public Builder acsKubeConfig(String acsKubeConfig) {
            $.acsKubeConfig = acsKubeConfig;
            return this;
        }

        /**
         * @param imagePullSecretName The ACR image pull secret name which was created in Kubernetes.
         * 
         * @return builder
         * 
         */
        public Builder imagePullSecretName(String imagePullSecretName) {
            $.imagePullSecretName = imagePullSecretName;
            return this;
        }

        /**
         * @param servicePrincipalConfiguration Service principal configuration used by Kubernetes.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalConfiguration(ServicePrincipalPropertiesResponse servicePrincipalConfiguration) {
            $.servicePrincipalConfiguration = servicePrincipalConfiguration;
            return this;
        }

        public ContainerServiceCredentialsResponse build() {
            $.acsKubeConfig = Objects.requireNonNull($.acsKubeConfig, "expected parameter 'acsKubeConfig' to be non-null");
            $.imagePullSecretName = Objects.requireNonNull($.imagePullSecretName, "expected parameter 'imagePullSecretName' to be non-null");
            $.servicePrincipalConfiguration = Objects.requireNonNull($.servicePrincipalConfiguration, "expected parameter 'servicePrincipalConfiguration' to be non-null");
            return $;
        }
    }

}
