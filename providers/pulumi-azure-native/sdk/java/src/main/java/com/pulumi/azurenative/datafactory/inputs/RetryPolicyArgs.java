// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.Object;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Execution policy for an activity.
 * 
 */
public final class RetryPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RetryPolicyArgs Empty = new RetryPolicyArgs();

    /**
     * Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
     * 
     */
    @Import(name="count")
      private final @Nullable Output<Object> count;

    public Output<Object> count() {
        return this.count == null ? Codegen.empty() : this.count;
    }

    /**
     * Interval between retries in seconds. Default is 30.
     * 
     */
    @Import(name="intervalInSeconds")
      private final @Nullable Output<Integer> intervalInSeconds;

    public Output<Integer> intervalInSeconds() {
        return this.intervalInSeconds == null ? Codegen.empty() : this.intervalInSeconds;
    }

    public RetryPolicyArgs(
        @Nullable Output<Object> count,
        @Nullable Output<Integer> intervalInSeconds) {
        this.count = count;
        this.intervalInSeconds = intervalInSeconds;
    }

    private RetryPolicyArgs() {
        this.count = Codegen.empty();
        this.intervalInSeconds = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RetryPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> count;
        private @Nullable Output<Integer> intervalInSeconds;

        public Builder() {
    	      // Empty
        }

        public Builder(RetryPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.intervalInSeconds = defaults.intervalInSeconds;
        }

        public Builder count(@Nullable Output<Object> count) {
            this.count = count;
            return this;
        }
        public Builder count(@Nullable Object count) {
            this.count = Codegen.ofNullable(count);
            return this;
        }
        public Builder intervalInSeconds(@Nullable Output<Integer> intervalInSeconds) {
            this.intervalInSeconds = intervalInSeconds;
            return this;
        }
        public Builder intervalInSeconds(@Nullable Integer intervalInSeconds) {
            this.intervalInSeconds = Codegen.ofNullable(intervalInSeconds);
            return this;
        }        public RetryPolicyArgs build() {
            return new RetryPolicyArgs(count, intervalInSeconds);
        }
    }
}
