// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deploymentmanager.inputs;

import com.pulumi.azurenative.deploymentmanager.enums.RestAuthLocation;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
 * 
 */
public final class ApiKeyAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiKeyAuthenticationArgs Empty = new ApiKeyAuthenticationArgs();

    /**
     * The location of the authentication key/value pair in the request.
     * 
     */
    @Import(name="in", required=true)
    private Output<RestAuthLocation> in;

    /**
     * @return The location of the authentication key/value pair in the request.
     * 
     */
    public Output<RestAuthLocation> in() {
        return this.in;
    }

    /**
     * The key name of the authentication key/value pair.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The key name of the authentication key/value pair.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The authentication type.
     * Expected value is &#39;ApiKey&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The authentication type.
     * Expected value is &#39;ApiKey&#39;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * The value of the authentication key/value pair.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return The value of the authentication key/value pair.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private ApiKeyAuthenticationArgs() {}

    private ApiKeyAuthenticationArgs(ApiKeyAuthenticationArgs $) {
        this.in = $.in;
        this.name = $.name;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiKeyAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiKeyAuthenticationArgs $;

        public Builder() {
            $ = new ApiKeyAuthenticationArgs();
        }

        public Builder(ApiKeyAuthenticationArgs defaults) {
            $ = new ApiKeyAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param in The location of the authentication key/value pair in the request.
         * 
         * @return builder
         * 
         */
        public Builder in(Output<RestAuthLocation> in) {
            $.in = in;
            return this;
        }

        /**
         * @param in The location of the authentication key/value pair in the request.
         * 
         * @return builder
         * 
         */
        public Builder in(RestAuthLocation in) {
            return in(Output.of(in));
        }

        /**
         * @param name The key name of the authentication key/value pair.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The key name of the authentication key/value pair.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type The authentication type.
         * Expected value is &#39;ApiKey&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The authentication type.
         * Expected value is &#39;ApiKey&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value The value of the authentication key/value pair.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value of the authentication key/value pair.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public ApiKeyAuthenticationArgs build() {
            $.in = Objects.requireNonNull($.in, "expected parameter 'in' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
