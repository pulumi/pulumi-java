// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azuredata;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlServerArgs Empty = new SqlServerArgs();

    /**
     * Cores of the Sql Server.
     * 
     */
    @Import(name="cores")
    private @Nullable Output<Integer> cores;

    public Optional<Output<Integer>> cores() {
        return Optional.ofNullable(this.cores);
    }

    /**
     * Sql Server Edition.
     * 
     */
    @Import(name="edition")
    private @Nullable Output<String> edition;

    public Optional<Output<String>> edition() {
        return Optional.ofNullable(this.edition);
    }

    /**
     * Sql Server Json Property Bag.
     * 
     */
    @Import(name="propertyBag")
    private @Nullable Output<String> propertyBag;

    public Optional<Output<String>> propertyBag() {
        return Optional.ofNullable(this.propertyBag);
    }

    /**
     * ID for Parent Sql Server Registration.
     * 
     */
    @Import(name="registrationID")
    private @Nullable Output<String> registrationID;

    public Optional<Output<String>> registrationID() {
        return Optional.ofNullable(this.registrationID);
    }

    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the SQL Server.
     * 
     */
    @Import(name="sqlServerName")
    private @Nullable Output<String> sqlServerName;

    public Optional<Output<String>> sqlServerName() {
        return Optional.ofNullable(this.sqlServerName);
    }

    /**
     * Name of the SQL Server registration.
     * 
     */
    @Import(name="sqlServerRegistrationName", required=true)
    private Output<String> sqlServerRegistrationName;

    public Output<String> sqlServerRegistrationName() {
        return this.sqlServerRegistrationName;
    }

    /**
     * Version of the Sql Server.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private SqlServerArgs() {}

    private SqlServerArgs(SqlServerArgs $) {
        this.cores = $.cores;
        this.edition = $.edition;
        this.propertyBag = $.propertyBag;
        this.registrationID = $.registrationID;
        this.resourceGroupName = $.resourceGroupName;
        this.sqlServerName = $.sqlServerName;
        this.sqlServerRegistrationName = $.sqlServerRegistrationName;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlServerArgs $;

        public Builder() {
            $ = new SqlServerArgs();
        }

        public Builder(SqlServerArgs defaults) {
            $ = new SqlServerArgs(Objects.requireNonNull(defaults));
        }

        public Builder cores(@Nullable Output<Integer> cores) {
            $.cores = cores;
            return this;
        }

        public Builder cores(Integer cores) {
            return cores(Output.of(cores));
        }

        public Builder edition(@Nullable Output<String> edition) {
            $.edition = edition;
            return this;
        }

        public Builder edition(String edition) {
            return edition(Output.of(edition));
        }

        public Builder propertyBag(@Nullable Output<String> propertyBag) {
            $.propertyBag = propertyBag;
            return this;
        }

        public Builder propertyBag(String propertyBag) {
            return propertyBag(Output.of(propertyBag));
        }

        public Builder registrationID(@Nullable Output<String> registrationID) {
            $.registrationID = registrationID;
            return this;
        }

        public Builder registrationID(String registrationID) {
            return registrationID(Output.of(registrationID));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder sqlServerName(@Nullable Output<String> sqlServerName) {
            $.sqlServerName = sqlServerName;
            return this;
        }

        public Builder sqlServerName(String sqlServerName) {
            return sqlServerName(Output.of(sqlServerName));
        }

        public Builder sqlServerRegistrationName(Output<String> sqlServerRegistrationName) {
            $.sqlServerRegistrationName = sqlServerRegistrationName;
            return this;
        }

        public Builder sqlServerRegistrationName(String sqlServerRegistrationName) {
            return sqlServerRegistrationName(Output.of(sqlServerRegistrationName));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public SqlServerArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sqlServerRegistrationName = Objects.requireNonNull($.sqlServerRegistrationName, "expected parameter 'sqlServerRegistrationName' to be non-null");
            return $;
        }
    }

}
