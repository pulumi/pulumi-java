// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The details of the InMage agent.
 * 
 */
public final class InMageAgentDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final InMageAgentDetailsResponse Empty = new InMageAgentDetailsResponse();

    /**
     * Agent expiry date.
     * 
     */
    @Import(name="agentExpiryDate")
    private @Nullable String agentExpiryDate;

    /**
     * @return Agent expiry date.
     * 
     */
    public Optional<String> agentExpiryDate() {
        return Optional.ofNullable(this.agentExpiryDate);
    }

    /**
     * A value indicating whether installed agent needs to be updated.
     * 
     */
    @Import(name="agentUpdateStatus")
    private @Nullable String agentUpdateStatus;

    /**
     * @return A value indicating whether installed agent needs to be updated.
     * 
     */
    public Optional<String> agentUpdateStatus() {
        return Optional.ofNullable(this.agentUpdateStatus);
    }

    /**
     * The agent version.
     * 
     */
    @Import(name="agentVersion")
    private @Nullable String agentVersion;

    /**
     * @return The agent version.
     * 
     */
    public Optional<String> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }

    /**
     * A value indicating whether reboot is required after update is applied.
     * 
     */
    @Import(name="postUpdateRebootStatus")
    private @Nullable String postUpdateRebootStatus;

    /**
     * @return A value indicating whether reboot is required after update is applied.
     * 
     */
    public Optional<String> postUpdateRebootStatus() {
        return Optional.ofNullable(this.postUpdateRebootStatus);
    }

    private InMageAgentDetailsResponse() {}

    private InMageAgentDetailsResponse(InMageAgentDetailsResponse $) {
        this.agentExpiryDate = $.agentExpiryDate;
        this.agentUpdateStatus = $.agentUpdateStatus;
        this.agentVersion = $.agentVersion;
        this.postUpdateRebootStatus = $.postUpdateRebootStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InMageAgentDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InMageAgentDetailsResponse $;

        public Builder() {
            $ = new InMageAgentDetailsResponse();
        }

        public Builder(InMageAgentDetailsResponse defaults) {
            $ = new InMageAgentDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentExpiryDate Agent expiry date.
         * 
         * @return builder
         * 
         */
        public Builder agentExpiryDate(@Nullable String agentExpiryDate) {
            $.agentExpiryDate = agentExpiryDate;
            return this;
        }

        /**
         * @param agentUpdateStatus A value indicating whether installed agent needs to be updated.
         * 
         * @return builder
         * 
         */
        public Builder agentUpdateStatus(@Nullable String agentUpdateStatus) {
            $.agentUpdateStatus = agentUpdateStatus;
            return this;
        }

        /**
         * @param agentVersion The agent version.
         * 
         * @return builder
         * 
         */
        public Builder agentVersion(@Nullable String agentVersion) {
            $.agentVersion = agentVersion;
            return this;
        }

        /**
         * @param postUpdateRebootStatus A value indicating whether reboot is required after update is applied.
         * 
         * @return builder
         * 
         */
        public Builder postUpdateRebootStatus(@Nullable String postUpdateRebootStatus) {
            $.postUpdateRebootStatus = postUpdateRebootStatus;
            return this;
        }

        public InMageAgentDetailsResponse build() {
            return $;
        }
    }

}
