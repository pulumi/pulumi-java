// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.azurenative.costmanagement.inputs.ReportConfigComparisonExpressionResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The filter expression to be used in the report.
 * 
 */
public final class ReportConfigFilterResponse extends com.pulumi.resources.InvokeArgs {

    public static final ReportConfigFilterResponse Empty = new ReportConfigFilterResponse();

    /**
     * The logical &#34;AND&#34; expression. Must have at least 2 items.
     * 
     */
    @Import(name="and")
    private @Nullable List<ReportConfigFilterResponse> and;

    public Optional<List<ReportConfigFilterResponse>> and() {
        return Optional.ofNullable(this.and);
    }

    /**
     * Has comparison expression for a dimension
     * 
     */
    @Import(name="dimensions")
    private @Nullable ReportConfigComparisonExpressionResponse dimensions;

    public Optional<ReportConfigComparisonExpressionResponse> dimensions() {
        return Optional.ofNullable(this.dimensions);
    }

    /**
     * The logical &#34;OR&#34; expression. Must have at least 2 items.
     * 
     */
    @Import(name="or")
    private @Nullable List<ReportConfigFilterResponse> or;

    public Optional<List<ReportConfigFilterResponse>> or() {
        return Optional.ofNullable(this.or);
    }

    /**
     * Has comparison expression for a tag key
     * 
     */
    @Import(name="tagKey")
    private @Nullable ReportConfigComparisonExpressionResponse tagKey;

    public Optional<ReportConfigComparisonExpressionResponse> tagKey() {
        return Optional.ofNullable(this.tagKey);
    }

    /**
     * Has comparison expression for a tag value
     * 
     */
    @Import(name="tagValue")
    private @Nullable ReportConfigComparisonExpressionResponse tagValue;

    public Optional<ReportConfigComparisonExpressionResponse> tagValue() {
        return Optional.ofNullable(this.tagValue);
    }

    /**
     * Has comparison expression for a tag
     * 
     */
    @Import(name="tags")
    private @Nullable ReportConfigComparisonExpressionResponse tags;

    public Optional<ReportConfigComparisonExpressionResponse> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ReportConfigFilterResponse() {}

    private ReportConfigFilterResponse(ReportConfigFilterResponse $) {
        this.and = $.and;
        this.dimensions = $.dimensions;
        this.or = $.or;
        this.tagKey = $.tagKey;
        this.tagValue = $.tagValue;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReportConfigFilterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReportConfigFilterResponse $;

        public Builder() {
            $ = new ReportConfigFilterResponse();
        }

        public Builder(ReportConfigFilterResponse defaults) {
            $ = new ReportConfigFilterResponse(Objects.requireNonNull(defaults));
        }

        public Builder and(@Nullable List<ReportConfigFilterResponse> and) {
            $.and = and;
            return this;
        }

        public Builder and(ReportConfigFilterResponse... and) {
            return and(List.of(and));
        }

        public Builder dimensions(@Nullable ReportConfigComparisonExpressionResponse dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        public Builder or(@Nullable List<ReportConfigFilterResponse> or) {
            $.or = or;
            return this;
        }

        public Builder or(ReportConfigFilterResponse... or) {
            return or(List.of(or));
        }

        public Builder tagKey(@Nullable ReportConfigComparisonExpressionResponse tagKey) {
            $.tagKey = tagKey;
            return this;
        }

        public Builder tagValue(@Nullable ReportConfigComparisonExpressionResponse tagValue) {
            $.tagValue = tagValue;
            return this;
        }

        public Builder tags(@Nullable ReportConfigComparisonExpressionResponse tags) {
            $.tags = tags;
            return this;
        }

        public ReportConfigFilterResponse build() {
            return $;
        }
    }

}
