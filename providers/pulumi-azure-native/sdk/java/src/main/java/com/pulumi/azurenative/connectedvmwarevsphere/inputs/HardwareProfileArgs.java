// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the resource properties.
 * 
 */
public final class HardwareProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final HardwareProfileArgs Empty = new HardwareProfileArgs();

    /**
     * Gets or sets memory size in MBs for the vm.
     * 
     */
    @Import(name="memorySizeMB")
    private @Nullable Output<Integer> memorySizeMB;

    public Optional<Output<Integer>> memorySizeMB() {
        return Optional.ofNullable(this.memorySizeMB);
    }

    /**
     * Gets or sets the number of vCPUs for the vm.
     * 
     */
    @Import(name="numCPUs")
    private @Nullable Output<Integer> numCPUs;

    public Optional<Output<Integer>> numCPUs() {
        return Optional.ofNullable(this.numCPUs);
    }

    /**
     * Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.
     * 
     */
    @Import(name="numCoresPerSocket")
    private @Nullable Output<Integer> numCoresPerSocket;

    public Optional<Output<Integer>> numCoresPerSocket() {
        return Optional.ofNullable(this.numCoresPerSocket);
    }

    private HardwareProfileArgs() {}

    private HardwareProfileArgs(HardwareProfileArgs $) {
        this.memorySizeMB = $.memorySizeMB;
        this.numCPUs = $.numCPUs;
        this.numCoresPerSocket = $.numCoresPerSocket;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HardwareProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HardwareProfileArgs $;

        public Builder() {
            $ = new HardwareProfileArgs();
        }

        public Builder(HardwareProfileArgs defaults) {
            $ = new HardwareProfileArgs(Objects.requireNonNull(defaults));
        }

        public Builder memorySizeMB(@Nullable Output<Integer> memorySizeMB) {
            $.memorySizeMB = memorySizeMB;
            return this;
        }

        public Builder memorySizeMB(Integer memorySizeMB) {
            return memorySizeMB(Output.of(memorySizeMB));
        }

        public Builder numCPUs(@Nullable Output<Integer> numCPUs) {
            $.numCPUs = numCPUs;
            return this;
        }

        public Builder numCPUs(Integer numCPUs) {
            return numCPUs(Output.of(numCPUs));
        }

        public Builder numCoresPerSocket(@Nullable Output<Integer> numCoresPerSocket) {
            $.numCoresPerSocket = numCoresPerSocket;
            return this;
        }

        public Builder numCoresPerSocket(Integer numCoresPerSocket) {
            return numCoresPerSocket(Output.of(numCoresPerSocket));
        }

        public HardwareProfileArgs build() {
            return $;
        }
    }

}
