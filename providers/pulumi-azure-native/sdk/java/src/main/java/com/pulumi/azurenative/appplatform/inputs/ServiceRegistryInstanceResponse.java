// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Collection of instances belong to the Service Registry
 * 
 */
public final class ServiceRegistryInstanceResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServiceRegistryInstanceResponse Empty = new ServiceRegistryInstanceResponse();

    /**
     * Name of the Service Registry instance
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Status of the Service Registry instance
     * 
     */
    @Import(name="status", required=true)
    private String status;

    public String status() {
        return this.status;
    }

    private ServiceRegistryInstanceResponse() {}

    private ServiceRegistryInstanceResponse(ServiceRegistryInstanceResponse $) {
        this.name = $.name;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceRegistryInstanceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceRegistryInstanceResponse $;

        public Builder() {
            $ = new ServiceRegistryInstanceResponse();
        }

        public Builder(ServiceRegistryInstanceResponse defaults) {
            $ = new ServiceRegistryInstanceResponse(Objects.requireNonNull(defaults));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public ServiceRegistryInstanceResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
