// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Parameters that define the configuration of traffic analytics.
 * 
 */
public final class TrafficAnalyticsConfigurationPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final TrafficAnalyticsConfigurationPropertiesResponse Empty = new TrafficAnalyticsConfigurationPropertiesResponse();

    /**
     * Flag to enable/disable traffic analytics.
     * 
     */
    @Import(name="enabled")
    private @Nullable Boolean enabled;

    /**
     * @return Flag to enable/disable traffic analytics.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The interval in minutes which would decide how frequently TA service should do flow analytics.
     * 
     */
    @Import(name="trafficAnalyticsInterval")
    private @Nullable Integer trafficAnalyticsInterval;

    /**
     * @return The interval in minutes which would decide how frequently TA service should do flow analytics.
     * 
     */
    public Optional<Integer> trafficAnalyticsInterval() {
        return Optional.ofNullable(this.trafficAnalyticsInterval);
    }

    /**
     * The resource guid of the attached workspace.
     * 
     */
    @Import(name="workspaceId")
    private @Nullable String workspaceId;

    /**
     * @return The resource guid of the attached workspace.
     * 
     */
    public Optional<String> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    /**
     * The location of the attached workspace.
     * 
     */
    @Import(name="workspaceRegion")
    private @Nullable String workspaceRegion;

    /**
     * @return The location of the attached workspace.
     * 
     */
    public Optional<String> workspaceRegion() {
        return Optional.ofNullable(this.workspaceRegion);
    }

    /**
     * Resource Id of the attached workspace.
     * 
     */
    @Import(name="workspaceResourceId")
    private @Nullable String workspaceResourceId;

    /**
     * @return Resource Id of the attached workspace.
     * 
     */
    public Optional<String> workspaceResourceId() {
        return Optional.ofNullable(this.workspaceResourceId);
    }

    private TrafficAnalyticsConfigurationPropertiesResponse() {}

    private TrafficAnalyticsConfigurationPropertiesResponse(TrafficAnalyticsConfigurationPropertiesResponse $) {
        this.enabled = $.enabled;
        this.trafficAnalyticsInterval = $.trafficAnalyticsInterval;
        this.workspaceId = $.workspaceId;
        this.workspaceRegion = $.workspaceRegion;
        this.workspaceResourceId = $.workspaceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrafficAnalyticsConfigurationPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrafficAnalyticsConfigurationPropertiesResponse $;

        public Builder() {
            $ = new TrafficAnalyticsConfigurationPropertiesResponse();
        }

        public Builder(TrafficAnalyticsConfigurationPropertiesResponse defaults) {
            $ = new TrafficAnalyticsConfigurationPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Flag to enable/disable traffic analytics.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param trafficAnalyticsInterval The interval in minutes which would decide how frequently TA service should do flow analytics.
         * 
         * @return builder
         * 
         */
        public Builder trafficAnalyticsInterval(@Nullable Integer trafficAnalyticsInterval) {
            $.trafficAnalyticsInterval = trafficAnalyticsInterval;
            return this;
        }

        /**
         * @param workspaceId The resource guid of the attached workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable String workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceRegion The location of the attached workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceRegion(@Nullable String workspaceRegion) {
            $.workspaceRegion = workspaceRegion;
            return this;
        }

        /**
         * @param workspaceResourceId Resource Id of the attached workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceResourceId(@Nullable String workspaceResourceId) {
            $.workspaceResourceId = workspaceResourceId;
            return this;
        }

        public TrafficAnalyticsConfigurationPropertiesResponse build() {
            return $;
        }
    }

}
