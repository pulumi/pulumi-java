// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datashare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ShareSubscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ShareSubscriptionArgs Empty = new ShareSubscriptionArgs();

    /**
     * The name of the share account.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The expiration date of the share subscription.
     * 
     */
    @Import(name="expirationDate")
    private @Nullable Output<String> expirationDate;

    public Optional<Output<String>> expirationDate() {
        return Optional.ofNullable(this.expirationDate);
    }

    /**
     * The invitation id.
     * 
     */
    @Import(name="invitationId", required=true)
    private Output<String> invitationId;

    public Output<String> invitationId() {
        return this.invitationId;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the shareSubscription.
     * 
     */
    @Import(name="shareSubscriptionName")
    private @Nullable Output<String> shareSubscriptionName;

    public Optional<Output<String>> shareSubscriptionName() {
        return Optional.ofNullable(this.shareSubscriptionName);
    }

    /**
     * Source share location.
     * 
     */
    @Import(name="sourceShareLocation", required=true)
    private Output<String> sourceShareLocation;

    public Output<String> sourceShareLocation() {
        return this.sourceShareLocation;
    }

    private ShareSubscriptionArgs() {}

    private ShareSubscriptionArgs(ShareSubscriptionArgs $) {
        this.accountName = $.accountName;
        this.expirationDate = $.expirationDate;
        this.invitationId = $.invitationId;
        this.resourceGroupName = $.resourceGroupName;
        this.shareSubscriptionName = $.shareSubscriptionName;
        this.sourceShareLocation = $.sourceShareLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShareSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShareSubscriptionArgs $;

        public Builder() {
            $ = new ShareSubscriptionArgs();
        }

        public Builder(ShareSubscriptionArgs defaults) {
            $ = new ShareSubscriptionArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        public Builder expirationDate(@Nullable Output<String> expirationDate) {
            $.expirationDate = expirationDate;
            return this;
        }

        public Builder expirationDate(String expirationDate) {
            return expirationDate(Output.of(expirationDate));
        }

        public Builder invitationId(Output<String> invitationId) {
            $.invitationId = invitationId;
            return this;
        }

        public Builder invitationId(String invitationId) {
            return invitationId(Output.of(invitationId));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder shareSubscriptionName(@Nullable Output<String> shareSubscriptionName) {
            $.shareSubscriptionName = shareSubscriptionName;
            return this;
        }

        public Builder shareSubscriptionName(String shareSubscriptionName) {
            return shareSubscriptionName(Output.of(shareSubscriptionName));
        }

        public Builder sourceShareLocation(Output<String> sourceShareLocation) {
            $.sourceShareLocation = sourceShareLocation;
            return this;
        }

        public Builder sourceShareLocation(String sourceShareLocation) {
            return sourceShareLocation(Output.of(sourceShareLocation));
        }

        public ShareSubscriptionArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.invitationId = Objects.requireNonNull($.invitationId, "expected parameter 'invitationId' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sourceShareLocation = Objects.requireNonNull($.sourceShareLocation, "expected parameter 'sourceShareLocation' to be non-null");
            return $;
        }
    }

}
