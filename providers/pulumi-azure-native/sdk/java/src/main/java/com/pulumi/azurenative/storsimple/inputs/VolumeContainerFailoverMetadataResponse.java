// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.inputs;

import com.pulumi.azurenative.storsimple.inputs.VolumeFailoverMetadataResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The metadata of the volume container, that is being considered as part of a failover set.
 * 
 */
public final class VolumeContainerFailoverMetadataResponse extends com.pulumi.resources.InvokeArgs {

    public static final VolumeContainerFailoverMetadataResponse Empty = new VolumeContainerFailoverMetadataResponse();

    /**
     * The path ID of the volume container.
     * 
     */
    @Import(name="volumeContainerId")
    private @Nullable String volumeContainerId;

    /**
     * @return The path ID of the volume container.
     * 
     */
    public Optional<String> volumeContainerId() {
        return Optional.ofNullable(this.volumeContainerId);
    }

    /**
     * The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
     * 
     */
    @Import(name="volumes")
    private @Nullable List<VolumeFailoverMetadataResponse> volumes;

    /**
     * @return The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
     * 
     */
    public Optional<List<VolumeFailoverMetadataResponse>> volumes() {
        return Optional.ofNullable(this.volumes);
    }

    private VolumeContainerFailoverMetadataResponse() {}

    private VolumeContainerFailoverMetadataResponse(VolumeContainerFailoverMetadataResponse $) {
        this.volumeContainerId = $.volumeContainerId;
        this.volumes = $.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeContainerFailoverMetadataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeContainerFailoverMetadataResponse $;

        public Builder() {
            $ = new VolumeContainerFailoverMetadataResponse();
        }

        public Builder(VolumeContainerFailoverMetadataResponse defaults) {
            $ = new VolumeContainerFailoverMetadataResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param volumeContainerId The path ID of the volume container.
         * 
         * @return builder
         * 
         */
        public Builder volumeContainerId(@Nullable String volumeContainerId) {
            $.volumeContainerId = volumeContainerId;
            return this;
        }

        /**
         * @param volumes The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
         * 
         * @return builder
         * 
         */
        public Builder volumes(@Nullable List<VolumeFailoverMetadataResponse> volumes) {
            $.volumes = volumes;
            return this;
        }

        /**
         * @param volumes The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
         * 
         * @return builder
         * 
         */
        public Builder volumes(VolumeFailoverMetadataResponse... volumes) {
            return volumes(List.of(volumes));
        }

        public VolumeContainerFailoverMetadataResponse build() {
            return $;
        }
    }

}
