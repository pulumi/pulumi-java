// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.ActivityDependencyResponse;
import com.pulumi.azurenative.datafactory.inputs.ActivityPolicyResponse;
import com.pulumi.azurenative.datafactory.inputs.AmazonMWSSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AmazonRdsForOracleSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AmazonRdsForSqlServerSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AmazonRedshiftSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AvroSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AzureBlobFSSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AzureDataExplorerSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AzureDataLakeStoreSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AzureDatabricksDeltaLakeSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AzureMariaDBSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AzureMySqlSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AzurePostgreSqlSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AzureSqlSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.AzureTableSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.BinarySourceResponse;
import com.pulumi.azurenative.datafactory.inputs.BlobSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.CassandraSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.CommonDataServiceForAppsSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.ConcurSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.CosmosDbMongoDbApiSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.CosmosDbSqlApiSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.CouchbaseSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.DatasetReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.Db2SourceResponse;
import com.pulumi.azurenative.datafactory.inputs.DelimitedTextSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.DocumentDbCollectionSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.DrillSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.DynamicsAXSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.DynamicsCrmSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.DynamicsSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.EloquaSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.ExcelSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.FileSystemSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.GoogleAdWordsSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.GoogleBigQuerySourceResponse;
import com.pulumi.azurenative.datafactory.inputs.GreenplumSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.HBaseSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.HdfsSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.HiveSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.HttpSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.HubspotSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.ImpalaSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.InformixSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.JiraSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.JsonSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.MagentoSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.MariaDBSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.MarketoSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.MicrosoftAccessSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.MongoDbAtlasSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.MongoDbSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.MongoDbV2SourceResponse;
import com.pulumi.azurenative.datafactory.inputs.MySqlSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.NetezzaSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.ODataSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.OdbcSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.Office365SourceResponse;
import com.pulumi.azurenative.datafactory.inputs.OracleServiceCloudSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.OracleSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.OrcSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.ParquetSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.PaypalSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.PhoenixSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.PostgreSqlSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.PrestoSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.QuickBooksSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.RelationalSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.ResponsysSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.RestSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SalesforceMarketingCloudSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SalesforceServiceCloudSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SalesforceSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SapBwSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SapCloudForCustomerSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SapEccSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SapHanaSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SapOpenHubSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SapTableSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.ServiceNowSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SharePointOnlineListSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.ShopifySourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SnowflakeSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SparkSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SqlDWSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SqlMISourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SqlServerSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SqlSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SquareSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.SybaseSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.TabularSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.TeradataSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.UserPropertyResponse;
import com.pulumi.azurenative.datafactory.inputs.VerticaSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.WebSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.XeroSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.XmlSourceResponse;
import com.pulumi.azurenative.datafactory.inputs.ZohoSourceResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Lookup activity.
 * 
 */
public final class LookupActivityResponse extends com.pulumi.resources.InvokeArgs {

    public static final LookupActivityResponse Empty = new LookupActivityResponse();

    /**
     * Lookup activity dataset reference.
     * 
     */
    @Import(name="dataset", required=true)
    private DatasetReferenceResponse dataset;

    /**
     * @return Lookup activity dataset reference.
     * 
     */
    public DatasetReferenceResponse dataset() {
        return this.dataset;
    }

    /**
     * Activity depends on condition.
     * 
     */
    @Import(name="dependsOn")
    private @Nullable List<ActivityDependencyResponse> dependsOn;

    /**
     * @return Activity depends on condition.
     * 
     */
    public Optional<List<ActivityDependencyResponse>> dependsOn() {
        return Optional.ofNullable(this.dependsOn);
    }

    /**
     * Activity description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Activity description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
     * 
     */
    @Import(name="firstRowOnly")
    private @Nullable Object firstRowOnly;

    /**
     * @return Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Object> firstRowOnly() {
        return Optional.ofNullable(this.firstRowOnly);
    }

    /**
     * Linked service reference.
     * 
     */
    @Import(name="linkedServiceName")
    private @Nullable LinkedServiceReferenceResponse linkedServiceName;

    /**
     * @return Linked service reference.
     * 
     */
    public Optional<LinkedServiceReferenceResponse> linkedServiceName() {
        return Optional.ofNullable(this.linkedServiceName);
    }

    /**
     * Activity name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Activity name.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Activity policy.
     * 
     */
    @Import(name="policy")
    private @Nullable ActivityPolicyResponse policy;

    /**
     * @return Activity policy.
     * 
     */
    public Optional<ActivityPolicyResponse> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Dataset-specific source properties, same as copy activity source.
     * 
     */
    @Import(name="source", required=true)
    private Object source;

    /**
     * @return Dataset-specific source properties, same as copy activity source.
     * 
     */
    public Object source() {
        return this.source;
    }

    /**
     * Type of activity.
     * Expected value is &#39;Lookup&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Type of activity.
     * Expected value is &#39;Lookup&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * Activity user properties.
     * 
     */
    @Import(name="userProperties")
    private @Nullable List<UserPropertyResponse> userProperties;

    /**
     * @return Activity user properties.
     * 
     */
    public Optional<List<UserPropertyResponse>> userProperties() {
        return Optional.ofNullable(this.userProperties);
    }

    private LookupActivityResponse() {}

    private LookupActivityResponse(LookupActivityResponse $) {
        this.dataset = $.dataset;
        this.dependsOn = $.dependsOn;
        this.description = $.description;
        this.firstRowOnly = $.firstRowOnly;
        this.linkedServiceName = $.linkedServiceName;
        this.name = $.name;
        this.policy = $.policy;
        this.source = $.source;
        this.type = $.type;
        this.userProperties = $.userProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LookupActivityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LookupActivityResponse $;

        public Builder() {
            $ = new LookupActivityResponse();
        }

        public Builder(LookupActivityResponse defaults) {
            $ = new LookupActivityResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataset Lookup activity dataset reference.
         * 
         * @return builder
         * 
         */
        public Builder dataset(DatasetReferenceResponse dataset) {
            $.dataset = dataset;
            return this;
        }

        /**
         * @param dependsOn Activity depends on condition.
         * 
         * @return builder
         * 
         */
        public Builder dependsOn(@Nullable List<ActivityDependencyResponse> dependsOn) {
            $.dependsOn = dependsOn;
            return this;
        }

        /**
         * @param dependsOn Activity depends on condition.
         * 
         * @return builder
         * 
         */
        public Builder dependsOn(ActivityDependencyResponse... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }

        /**
         * @param description Activity description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param firstRowOnly Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
         * 
         * @return builder
         * 
         */
        public Builder firstRowOnly(@Nullable Object firstRowOnly) {
            $.firstRowOnly = firstRowOnly;
            return this;
        }

        /**
         * @param linkedServiceName Linked service reference.
         * 
         * @return builder
         * 
         */
        public Builder linkedServiceName(@Nullable LinkedServiceReferenceResponse linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        /**
         * @param name Activity name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param policy Activity policy.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable ActivityPolicyResponse policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param source Dataset-specific source properties, same as copy activity source.
         * 
         * @return builder
         * 
         */
        public Builder source(Object source) {
            $.source = source;
            return this;
        }

        /**
         * @param type Type of activity.
         * Expected value is &#39;Lookup&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param userProperties Activity user properties.
         * 
         * @return builder
         * 
         */
        public Builder userProperties(@Nullable List<UserPropertyResponse> userProperties) {
            $.userProperties = userProperties;
            return this;
        }

        /**
         * @param userProperties Activity user properties.
         * 
         * @return builder
         * 
         */
        public Builder userProperties(UserPropertyResponse... userProperties) {
            return userProperties(List.of(userProperties));
        }

        public LookupActivityResponse build() {
            $.dataset = Objects.requireNonNull($.dataset, "expected parameter 'dataset' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.source = Objects.requireNonNull($.source, "expected parameter 'source' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
