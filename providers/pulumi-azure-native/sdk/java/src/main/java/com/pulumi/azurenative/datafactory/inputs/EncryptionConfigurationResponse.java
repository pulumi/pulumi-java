// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.CMKIdentityDefinitionResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Definition of CMK for the factory.
 * 
 */
public final class EncryptionConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final EncryptionConfigurationResponse Empty = new EncryptionConfigurationResponse();

    /**
     * User assigned identity to use to authenticate to customer&#39;s key vault. If not provided Managed Service Identity will be used.
     * 
     */
    @Import(name="identity")
    private @Nullable CMKIdentityDefinitionResponse identity;

    public Optional<CMKIdentityDefinitionResponse> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The name of the key in Azure Key Vault to use as Customer Managed Key.
     * 
     */
    @Import(name="keyName", required=true)
    private String keyName;

    public String keyName() {
        return this.keyName;
    }

    /**
     * The version of the key used for CMK. If not provided, latest version will be used.
     * 
     */
    @Import(name="keyVersion")
    private @Nullable String keyVersion;

    public Optional<String> keyVersion() {
        return Optional.ofNullable(this.keyVersion);
    }

    /**
     * The url of the Azure Key Vault used for CMK.
     * 
     */
    @Import(name="vaultBaseUrl", required=true)
    private String vaultBaseUrl;

    public String vaultBaseUrl() {
        return this.vaultBaseUrl;
    }

    private EncryptionConfigurationResponse() {}

    private EncryptionConfigurationResponse(EncryptionConfigurationResponse $) {
        this.identity = $.identity;
        this.keyName = $.keyName;
        this.keyVersion = $.keyVersion;
        this.vaultBaseUrl = $.vaultBaseUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionConfigurationResponse $;

        public Builder() {
            $ = new EncryptionConfigurationResponse();
        }

        public Builder(EncryptionConfigurationResponse defaults) {
            $ = new EncryptionConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder identity(@Nullable CMKIdentityDefinitionResponse identity) {
            $.identity = identity;
            return this;
        }

        public Builder keyName(String keyName) {
            $.keyName = keyName;
            return this;
        }

        public Builder keyVersion(@Nullable String keyVersion) {
            $.keyVersion = keyVersion;
            return this;
        }

        public Builder vaultBaseUrl(String vaultBaseUrl) {
            $.vaultBaseUrl = vaultBaseUrl;
            return this;
        }

        public EncryptionConfigurationResponse build() {
            $.keyName = Objects.requireNonNull($.keyName, "expected parameter 'keyName' to be non-null");
            $.vaultBaseUrl = Objects.requireNonNull($.vaultBaseUrl, "expected parameter 'vaultBaseUrl' to be non-null");
            return $;
        }
    }

}
