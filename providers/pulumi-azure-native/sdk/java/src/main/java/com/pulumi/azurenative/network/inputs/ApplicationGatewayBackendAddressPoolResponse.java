// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.ApplicationGatewayBackendAddressResponse;
import com.pulumi.azurenative.network.inputs.NetworkInterfaceIPConfigurationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Backend Address Pool of an application gateway.
 * 
 */
public final class ApplicationGatewayBackendAddressPoolResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationGatewayBackendAddressPoolResponse Empty = new ApplicationGatewayBackendAddressPoolResponse();

    /**
     * Backend addresses.
     * 
     */
    @Import(name="backendAddresses")
    private @Nullable List<ApplicationGatewayBackendAddressResponse> backendAddresses;

    public Optional<List<ApplicationGatewayBackendAddressResponse>> backendAddresses() {
        return Optional.ofNullable(this.backendAddresses);
    }

    /**
     * Collection of references to IPs defined in network interfaces.
     * 
     */
    @Import(name="backendIPConfigurations", required=true)
    private List<NetworkInterfaceIPConfigurationResponse> backendIPConfigurations;

    public List<NetworkInterfaceIPConfigurationResponse> backendIPConfigurations() {
        return this.backendIPConfigurations;
    }

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    public String etag() {
        return this.etag;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the backend address pool that is unique within an Application Gateway.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The provisioning state of the backend address pool resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Type of the resource.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private ApplicationGatewayBackendAddressPoolResponse() {}

    private ApplicationGatewayBackendAddressPoolResponse(ApplicationGatewayBackendAddressPoolResponse $) {
        this.backendAddresses = $.backendAddresses;
        this.backendIPConfigurations = $.backendIPConfigurations;
        this.etag = $.etag;
        this.id = $.id;
        this.name = $.name;
        this.provisioningState = $.provisioningState;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayBackendAddressPoolResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayBackendAddressPoolResponse $;

        public Builder() {
            $ = new ApplicationGatewayBackendAddressPoolResponse();
        }

        public Builder(ApplicationGatewayBackendAddressPoolResponse defaults) {
            $ = new ApplicationGatewayBackendAddressPoolResponse(Objects.requireNonNull(defaults));
        }

        public Builder backendAddresses(@Nullable List<ApplicationGatewayBackendAddressResponse> backendAddresses) {
            $.backendAddresses = backendAddresses;
            return this;
        }

        public Builder backendAddresses(ApplicationGatewayBackendAddressResponse... backendAddresses) {
            return backendAddresses(List.of(backendAddresses));
        }

        public Builder backendIPConfigurations(List<NetworkInterfaceIPConfigurationResponse> backendIPConfigurations) {
            $.backendIPConfigurations = backendIPConfigurations;
            return this;
        }

        public Builder backendIPConfigurations(NetworkInterfaceIPConfigurationResponse... backendIPConfigurations) {
            return backendIPConfigurations(List.of(backendIPConfigurations));
        }

        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public ApplicationGatewayBackendAddressPoolResponse build() {
            $.backendIPConfigurations = Objects.requireNonNull($.backendIPConfigurations, "expected parameter 'backendIPConfigurations' to be non-null");
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
