// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.AzureKeyVaultSecretReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.CredentialReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.SecureStringResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Web activity authentication properties.
 * 
 */
public final class WebActivityAuthenticationResponse extends com.pulumi.resources.InvokeArgs {

    public static final WebActivityAuthenticationResponse Empty = new WebActivityAuthenticationResponse();

    /**
     * The credential reference containing authentication information.
     * 
     */
    @Import(name="credential")
    private @Nullable CredentialReferenceResponse credential;

    /**
     * @return The credential reference containing authentication information.
     * 
     */
    public Optional<CredentialReferenceResponse> credential() {
        return Optional.ofNullable(this.credential);
    }

    /**
     * Password for the PFX file or basic authentication / Secret when used for ServicePrincipal
     * 
     */
    @Import(name="password")
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password;

    /**
     * @return Password for the PFX file or basic authentication / Secret when used for ServicePrincipal
     * 
     */
    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Base64-encoded contents of a PFX file or Certificate when used for ServicePrincipal
     * 
     */
    @Import(name="pfx")
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> pfx;

    /**
     * @return Base64-encoded contents of a PFX file or Certificate when used for ServicePrincipal
     * 
     */
    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> pfx() {
        return Optional.ofNullable(this.pfx);
    }

    /**
     * Resource for which Azure Auth token will be requested when using MSI Authentication. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="resource")
    private @Nullable Object resource;

    /**
     * @return Resource for which Azure Auth token will be requested when using MSI Authentication. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> resource() {
        return Optional.ofNullable(this.resource);
    }

    /**
     * Web activity authentication (Basic/ClientCertificate/MSI/ServicePrincipal)
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return Web activity authentication (Basic/ClientCertificate/MSI/ServicePrincipal)
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * TenantId for which Azure Auth token will be requested when using ServicePrincipal Authentication. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="userTenant")
    private @Nullable Object userTenant;

    /**
     * @return TenantId for which Azure Auth token will be requested when using ServicePrincipal Authentication. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> userTenant() {
        return Optional.ofNullable(this.userTenant);
    }

    /**
     * Web activity authentication user name for basic authentication or ClientID when used for ServicePrincipal. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="username")
    private @Nullable Object username;

    /**
     * @return Web activity authentication user name for basic authentication or ClientID when used for ServicePrincipal. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> username() {
        return Optional.ofNullable(this.username);
    }

    private WebActivityAuthenticationResponse() {}

    private WebActivityAuthenticationResponse(WebActivityAuthenticationResponse $) {
        this.credential = $.credential;
        this.password = $.password;
        this.pfx = $.pfx;
        this.resource = $.resource;
        this.type = $.type;
        this.userTenant = $.userTenant;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebActivityAuthenticationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebActivityAuthenticationResponse $;

        public Builder() {
            $ = new WebActivityAuthenticationResponse();
        }

        public Builder(WebActivityAuthenticationResponse defaults) {
            $ = new WebActivityAuthenticationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param credential The credential reference containing authentication information.
         * 
         * @return builder
         * 
         */
        public Builder credential(@Nullable CredentialReferenceResponse credential) {
            $.credential = credential;
            return this;
        }

        /**
         * @param password Password for the PFX file or basic authentication / Secret when used for ServicePrincipal
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Password for the PFX file or basic authentication / Secret when used for ServicePrincipal
         * 
         * @return builder
         * 
         */
        public Builder password(AzureKeyVaultSecretReferenceResponse password) {
            return password(Either.ofLeft(password));
        }

        /**
         * @param password Password for the PFX file or basic authentication / Secret when used for ServicePrincipal
         * 
         * @return builder
         * 
         */
        public Builder password(SecureStringResponse password) {
            return password(Either.ofRight(password));
        }

        /**
         * @param pfx Base64-encoded contents of a PFX file or Certificate when used for ServicePrincipal
         * 
         * @return builder
         * 
         */
        public Builder pfx(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> pfx) {
            $.pfx = pfx;
            return this;
        }

        /**
         * @param pfx Base64-encoded contents of a PFX file or Certificate when used for ServicePrincipal
         * 
         * @return builder
         * 
         */
        public Builder pfx(AzureKeyVaultSecretReferenceResponse pfx) {
            return pfx(Either.ofLeft(pfx));
        }

        /**
         * @param pfx Base64-encoded contents of a PFX file or Certificate when used for ServicePrincipal
         * 
         * @return builder
         * 
         */
        public Builder pfx(SecureStringResponse pfx) {
            return pfx(Either.ofRight(pfx));
        }

        /**
         * @param resource Resource for which Azure Auth token will be requested when using MSI Authentication. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder resource(@Nullable Object resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param type Web activity authentication (Basic/ClientCertificate/MSI/ServicePrincipal)
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        /**
         * @param userTenant TenantId for which Azure Auth token will be requested when using ServicePrincipal Authentication. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder userTenant(@Nullable Object userTenant) {
            $.userTenant = userTenant;
            return this;
        }

        /**
         * @param username Web activity authentication user name for basic authentication or ClientID when used for ServicePrincipal. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Object username) {
            $.username = username;
            return this;
        }

        public WebActivityAuthenticationResponse build() {
            return $;
        }
    }

}
