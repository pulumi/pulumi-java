// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.avs.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetScriptExecutionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetScriptExecutionPlainArgs Empty = new GetScriptExecutionPlainArgs();

    /**
     * Name of the private cloud
     * 
     */
    @Import(name="privateCloudName", required=true)
    private String privateCloudName;

    /**
     * @return Name of the private cloud
     * 
     */
    public String privateCloudName() {
        return this.privateCloudName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the user-invoked script execution resource
     * 
     */
    @Import(name="scriptExecutionName", required=true)
    private String scriptExecutionName;

    /**
     * @return Name of the user-invoked script execution resource
     * 
     */
    public String scriptExecutionName() {
        return this.scriptExecutionName;
    }

    private GetScriptExecutionPlainArgs() {}

    private GetScriptExecutionPlainArgs(GetScriptExecutionPlainArgs $) {
        this.privateCloudName = $.privateCloudName;
        this.resourceGroupName = $.resourceGroupName;
        this.scriptExecutionName = $.scriptExecutionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetScriptExecutionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetScriptExecutionPlainArgs $;

        public Builder() {
            $ = new GetScriptExecutionPlainArgs();
        }

        public Builder(GetScriptExecutionPlainArgs defaults) {
            $ = new GetScriptExecutionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param privateCloudName Name of the private cloud
         * 
         * @return builder
         * 
         */
        public Builder privateCloudName(String privateCloudName) {
            $.privateCloudName = privateCloudName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param scriptExecutionName Name of the user-invoked script execution resource
         * 
         * @return builder
         * 
         */
        public Builder scriptExecutionName(String scriptExecutionName) {
            $.scriptExecutionName = scriptExecutionName;
            return this;
        }

        public GetScriptExecutionPlainArgs build() {
            $.privateCloudName = Objects.requireNonNull($.privateCloudName, "expected parameter 'privateCloudName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.scriptExecutionName = Objects.requireNonNull($.scriptExecutionName, "expected parameter 'scriptExecutionName' to be non-null");
            return $;
        }
    }

}
