// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.certificateregistration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Key Vault container for a certificate that is purchased through Azure.
 * 
 */
public final class AppServiceCertificateResponse extends com.pulumi.resources.InvokeArgs {

    public static final AppServiceCertificateResponse Empty = new AppServiceCertificateResponse();

    /**
     * Key Vault resource Id.
     * 
     */
    @Import(name="keyVaultId")
    private @Nullable String keyVaultId;

    /**
     * @return Key Vault resource Id.
     * 
     */
    public Optional<String> keyVaultId() {
        return Optional.ofNullable(this.keyVaultId);
    }

    /**
     * Key Vault secret name.
     * 
     */
    @Import(name="keyVaultSecretName")
    private @Nullable String keyVaultSecretName;

    /**
     * @return Key Vault secret name.
     * 
     */
    public Optional<String> keyVaultSecretName() {
        return Optional.ofNullable(this.keyVaultSecretName);
    }

    /**
     * Status of the Key Vault secret.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return Status of the Key Vault secret.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    private AppServiceCertificateResponse() {}

    private AppServiceCertificateResponse(AppServiceCertificateResponse $) {
        this.keyVaultId = $.keyVaultId;
        this.keyVaultSecretName = $.keyVaultSecretName;
        this.provisioningState = $.provisioningState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppServiceCertificateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppServiceCertificateResponse $;

        public Builder() {
            $ = new AppServiceCertificateResponse();
        }

        public Builder(AppServiceCertificateResponse defaults) {
            $ = new AppServiceCertificateResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyVaultId Key Vault resource Id.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(@Nullable String keyVaultId) {
            $.keyVaultId = keyVaultId;
            return this;
        }

        /**
         * @param keyVaultSecretName Key Vault secret name.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultSecretName(@Nullable String keyVaultSecretName) {
            $.keyVaultSecretName = keyVaultSecretName;
            return this;
        }

        /**
         * @param provisioningState Status of the Key Vault secret.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public AppServiceCertificateResponse build() {
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
