// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.netapp.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Monthly Schedule properties
 * 
 */
public final class MonthlyScheduleResponse extends com.pulumi.resources.InvokeArgs {

    public static final MonthlyScheduleResponse Empty = new MonthlyScheduleResponse();

    /**
     * Indicates which days of the month snapshot should be taken. A comma delimited string.
     * 
     */
    @Import(name="daysOfMonth")
    private @Nullable String daysOfMonth;

    public Optional<String> daysOfMonth() {
        return Optional.ofNullable(this.daysOfMonth);
    }

    /**
     * Indicates which hour in UTC timezone a snapshot should be taken
     * 
     */
    @Import(name="hour")
    private @Nullable Integer hour;

    public Optional<Integer> hour() {
        return Optional.ofNullable(this.hour);
    }

    /**
     * Indicates which minute snapshot should be taken
     * 
     */
    @Import(name="minute")
    private @Nullable Integer minute;

    public Optional<Integer> minute() {
        return Optional.ofNullable(this.minute);
    }

    /**
     * Monthly snapshot count to keep
     * 
     */
    @Import(name="snapshotsToKeep")
    private @Nullable Integer snapshotsToKeep;

    public Optional<Integer> snapshotsToKeep() {
        return Optional.ofNullable(this.snapshotsToKeep);
    }

    /**
     * Resource size in bytes, current storage usage for the volume in bytes
     * 
     */
    @Import(name="usedBytes")
    private @Nullable Double usedBytes;

    public Optional<Double> usedBytes() {
        return Optional.ofNullable(this.usedBytes);
    }

    private MonthlyScheduleResponse() {}

    private MonthlyScheduleResponse(MonthlyScheduleResponse $) {
        this.daysOfMonth = $.daysOfMonth;
        this.hour = $.hour;
        this.minute = $.minute;
        this.snapshotsToKeep = $.snapshotsToKeep;
        this.usedBytes = $.usedBytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonthlyScheduleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonthlyScheduleResponse $;

        public Builder() {
            $ = new MonthlyScheduleResponse();
        }

        public Builder(MonthlyScheduleResponse defaults) {
            $ = new MonthlyScheduleResponse(Objects.requireNonNull(defaults));
        }

        public Builder daysOfMonth(@Nullable String daysOfMonth) {
            $.daysOfMonth = daysOfMonth;
            return this;
        }

        public Builder hour(@Nullable Integer hour) {
            $.hour = hour;
            return this;
        }

        public Builder minute(@Nullable Integer minute) {
            $.minute = minute;
            return this;
        }

        public Builder snapshotsToKeep(@Nullable Integer snapshotsToKeep) {
            $.snapshotsToKeep = snapshotsToKeep;
            return this;
        }

        public Builder usedBytes(@Nullable Double usedBytes) {
            $.usedBytes = usedBytes;
            return this;
        }

        public MonthlyScheduleResponse build() {
            return $;
        }
    }

}
