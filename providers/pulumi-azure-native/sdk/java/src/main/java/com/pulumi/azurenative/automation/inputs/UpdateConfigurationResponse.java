// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation.inputs;

import com.pulumi.azurenative.automation.inputs.LinuxPropertiesResponse;
import com.pulumi.azurenative.automation.inputs.TargetPropertiesResponse;
import com.pulumi.azurenative.automation.inputs.WindowsPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Update specific properties of the software update configuration.
 * 
 */
public final class UpdateConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final UpdateConfigurationResponse Empty = new UpdateConfigurationResponse();

    /**
     * List of azure resource Ids for azure virtual machines targeted by the software update configuration.
     * 
     */
    @Import(name="azureVirtualMachines")
    private @Nullable List<String> azureVirtualMachines;

    public Optional<List<String>> azureVirtualMachines() {
        return Optional.ofNullable(this.azureVirtualMachines);
    }

    /**
     * Maximum time allowed for the software update configuration run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601
     * 
     */
    @Import(name="duration")
    private @Nullable String duration;

    public Optional<String> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * Linux specific update configuration.
     * 
     */
    @Import(name="linux")
    private @Nullable LinuxPropertiesResponse linux;

    public Optional<LinuxPropertiesResponse> linux() {
        return Optional.ofNullable(this.linux);
    }

    /**
     * List of names of non-azure machines targeted by the software update configuration.
     * 
     */
    @Import(name="nonAzureComputerNames")
    private @Nullable List<String> nonAzureComputerNames;

    public Optional<List<String>> nonAzureComputerNames() {
        return Optional.ofNullable(this.nonAzureComputerNames);
    }

    /**
     * operating system of target machines
     * 
     */
    @Import(name="operatingSystem", required=true)
    private String operatingSystem;

    public String operatingSystem() {
        return this.operatingSystem;
    }

    /**
     * Group targets for the software update configuration.
     * 
     */
    @Import(name="targets")
    private @Nullable TargetPropertiesResponse targets;

    public Optional<TargetPropertiesResponse> targets() {
        return Optional.ofNullable(this.targets);
    }

    /**
     * Windows specific update configuration.
     * 
     */
    @Import(name="windows")
    private @Nullable WindowsPropertiesResponse windows;

    public Optional<WindowsPropertiesResponse> windows() {
        return Optional.ofNullable(this.windows);
    }

    private UpdateConfigurationResponse() {}

    private UpdateConfigurationResponse(UpdateConfigurationResponse $) {
        this.azureVirtualMachines = $.azureVirtualMachines;
        this.duration = $.duration;
        this.linux = $.linux;
        this.nonAzureComputerNames = $.nonAzureComputerNames;
        this.operatingSystem = $.operatingSystem;
        this.targets = $.targets;
        this.windows = $.windows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UpdateConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UpdateConfigurationResponse $;

        public Builder() {
            $ = new UpdateConfigurationResponse();
        }

        public Builder(UpdateConfigurationResponse defaults) {
            $ = new UpdateConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder azureVirtualMachines(@Nullable List<String> azureVirtualMachines) {
            $.azureVirtualMachines = azureVirtualMachines;
            return this;
        }

        public Builder azureVirtualMachines(String... azureVirtualMachines) {
            return azureVirtualMachines(List.of(azureVirtualMachines));
        }

        public Builder duration(@Nullable String duration) {
            $.duration = duration;
            return this;
        }

        public Builder linux(@Nullable LinuxPropertiesResponse linux) {
            $.linux = linux;
            return this;
        }

        public Builder nonAzureComputerNames(@Nullable List<String> nonAzureComputerNames) {
            $.nonAzureComputerNames = nonAzureComputerNames;
            return this;
        }

        public Builder nonAzureComputerNames(String... nonAzureComputerNames) {
            return nonAzureComputerNames(List.of(nonAzureComputerNames));
        }

        public Builder operatingSystem(String operatingSystem) {
            $.operatingSystem = operatingSystem;
            return this;
        }

        public Builder targets(@Nullable TargetPropertiesResponse targets) {
            $.targets = targets;
            return this;
        }

        public Builder windows(@Nullable WindowsPropertiesResponse windows) {
            $.windows = windows;
            return this;
        }

        public UpdateConfigurationResponse build() {
            $.operatingSystem = Objects.requireNonNull($.operatingSystem, "expected parameter 'operatingSystem' to be non-null");
            return $;
        }
    }

}
