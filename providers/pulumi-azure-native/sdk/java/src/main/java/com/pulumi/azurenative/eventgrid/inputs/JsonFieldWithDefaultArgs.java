// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * This is used to express the source of an input schema mapping for a single target field
 * in the Event Grid Event schema. This is currently used in the mappings for the &#39;subject&#39;,
 * &#39;eventtype&#39; and &#39;dataversion&#39; properties. This represents a field in the input event schema
 * along with a default value to be used, and at least one of these two properties should be provided.
 * 
 */
public final class JsonFieldWithDefaultArgs extends com.pulumi.resources.ResourceArgs {

    public static final JsonFieldWithDefaultArgs Empty = new JsonFieldWithDefaultArgs();

    /**
     * The default value to be used for mapping when a SourceField is not provided or if there&#39;s no property with the specified name in the published JSON event payload.
     * 
     */
    @Import(name="defaultValue")
      private final @Nullable Output<String> defaultValue;

    public Output<String> defaultValue() {
        return this.defaultValue == null ? Codegen.empty() : this.defaultValue;
    }

    /**
     * Name of a field in the input event schema that&#39;s to be used as the source of a mapping.
     * 
     */
    @Import(name="sourceField")
      private final @Nullable Output<String> sourceField;

    public Output<String> sourceField() {
        return this.sourceField == null ? Codegen.empty() : this.sourceField;
    }

    public JsonFieldWithDefaultArgs(
        @Nullable Output<String> defaultValue,
        @Nullable Output<String> sourceField) {
        this.defaultValue = defaultValue;
        this.sourceField = sourceField;
    }

    private JsonFieldWithDefaultArgs() {
        this.defaultValue = Codegen.empty();
        this.sourceField = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JsonFieldWithDefaultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> defaultValue;
        private @Nullable Output<String> sourceField;

        public Builder() {
    	      // Empty
        }

        public Builder(JsonFieldWithDefaultArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultValue = defaults.defaultValue;
    	      this.sourceField = defaults.sourceField;
        }

        public Builder defaultValue(@Nullable Output<String> defaultValue) {
            this.defaultValue = defaultValue;
            return this;
        }
        public Builder defaultValue(@Nullable String defaultValue) {
            this.defaultValue = Codegen.ofNullable(defaultValue);
            return this;
        }
        public Builder sourceField(@Nullable Output<String> sourceField) {
            this.sourceField = sourceField;
            return this;
        }
        public Builder sourceField(@Nullable String sourceField) {
            this.sourceField = Codegen.ofNullable(sourceField);
            return this;
        }        public JsonFieldWithDefaultArgs build() {
            return new JsonFieldWithDefaultArgs(defaultValue, sourceField);
        }
    }
}
