// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.RulesEngineRuleResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
 * 
 */
public final class RulesEngineResponse extends com.pulumi.resources.InvokeArgs {

    public static final RulesEngineResponse Empty = new RulesEngineResponse();

    /**
     * Resource ID.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * Resource name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Resource status.
     * 
     */
    @Import(name="resourceState", required=true)
    private String resourceState;

    public String resourceState() {
        return this.resourceState;
    }

    /**
     * A list of rules that define a particular Rules Engine Configuration.
     * 
     */
    @Import(name="rules")
    private @Nullable List<RulesEngineRuleResponse> rules;

    public Optional<List<RulesEngineRuleResponse>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private RulesEngineResponse() {}

    private RulesEngineResponse(RulesEngineResponse $) {
        this.id = $.id;
        this.name = $.name;
        this.resourceState = $.resourceState;
        this.rules = $.rules;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RulesEngineResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RulesEngineResponse $;

        public Builder() {
            $ = new RulesEngineResponse();
        }

        public Builder(RulesEngineResponse defaults) {
            $ = new RulesEngineResponse(Objects.requireNonNull(defaults));
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder resourceState(String resourceState) {
            $.resourceState = resourceState;
            return this;
        }

        public Builder rules(@Nullable List<RulesEngineRuleResponse> rules) {
            $.rules = rules;
            return this;
        }

        public Builder rules(RulesEngineRuleResponse... rules) {
            return rules(List.of(rules));
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public RulesEngineResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceState = Objects.requireNonNull($.resourceState, "expected parameter 'resourceState' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
