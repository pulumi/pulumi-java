// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.loadtestservice.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Managed service identity (either system assigned, or none)
 * 
 */
public final class SystemAssignedServiceIdentityResponse extends com.pulumi.resources.InvokeArgs {

    public static final SystemAssignedServiceIdentityResponse Empty = new SystemAssignedServiceIdentityResponse();

    /**
     * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
     * 
     */
    @Import(name="principalId", required=true)
    private String principalId;

    public String principalId() {
        return this.principalId;
    }

    /**
     * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
     * 
     */
    @Import(name="tenantId", required=true)
    private String tenantId;

    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Type of managed service identity (either system assigned, or none).
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private SystemAssignedServiceIdentityResponse() {}

    private SystemAssignedServiceIdentityResponse(SystemAssignedServiceIdentityResponse $) {
        this.principalId = $.principalId;
        this.tenantId = $.tenantId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemAssignedServiceIdentityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemAssignedServiceIdentityResponse $;

        public Builder() {
            $ = new SystemAssignedServiceIdentityResponse();
        }

        public Builder(SystemAssignedServiceIdentityResponse defaults) {
            $ = new SystemAssignedServiceIdentityResponse(Objects.requireNonNull(defaults));
        }

        public Builder principalId(String principalId) {
            $.principalId = principalId;
            return this;
        }

        public Builder tenantId(String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public SystemAssignedServiceIdentityResponse build() {
            $.principalId = Objects.requireNonNull($.principalId, "expected parameter 'principalId' to be non-null");
            $.tenantId = Objects.requireNonNull($.tenantId, "expected parameter 'tenantId' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
