// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataVersionResponse {
    /**
     * @return The Format of dataset.
     * 
     */
    private final @Nullable String datasetType;
    /**
     * @return ARM resource ID of the datastore where the asset is located.
     * 
     */
    private final @Nullable String datastoreId;
    /**
     * @return The asset description text.
     * 
     */
    private final @Nullable String description;
    /**
     * @return If the name version are system generated (anonymous registration).
     * 
     */
    private final @Nullable Boolean isAnonymous;
    /**
     * @return [Required] The path of the file/directory in the datastore.
     * 
     */
    private final String path;
    /**
     * @return The asset property dictionary.
     * 
     */
    private final @Nullable Map<String,String> properties;
    /**
     * @return Tag dictionary. Tags can be added, removed, and updated.
     * 
     */
    private final @Nullable Map<String,String> tags;

    @CustomType.Constructor
    private DataVersionResponse(
        @CustomType.Parameter("datasetType") @Nullable String datasetType,
        @CustomType.Parameter("datastoreId") @Nullable String datastoreId,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("isAnonymous") @Nullable Boolean isAnonymous,
        @CustomType.Parameter("path") String path,
        @CustomType.Parameter("properties") @Nullable Map<String,String> properties,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags) {
        this.datasetType = datasetType;
        this.datastoreId = datastoreId;
        this.description = description;
        this.isAnonymous = isAnonymous;
        this.path = path;
        this.properties = properties;
        this.tags = tags;
    }

    /**
     * @return The Format of dataset.
     * 
     */
    public Optional<String> datasetType() {
        return Optional.ofNullable(this.datasetType);
    }
    /**
     * @return ARM resource ID of the datastore where the asset is located.
     * 
     */
    public Optional<String> datastoreId() {
        return Optional.ofNullable(this.datastoreId);
    }
    /**
     * @return The asset description text.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return If the name version are system generated (anonymous registration).
     * 
     */
    public Optional<Boolean> isAnonymous() {
        return Optional.ofNullable(this.isAnonymous);
    }
    /**
     * @return [Required] The path of the file/directory in the datastore.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return The asset property dictionary.
     * 
     */
    public Map<String,String> properties() {
        return this.properties == null ? Map.of() : this.properties;
    }
    /**
     * @return Tag dictionary. Tags can be added, removed, and updated.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataVersionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String datasetType;
        private @Nullable String datastoreId;
        private @Nullable String description;
        private @Nullable Boolean isAnonymous;
        private String path;
        private @Nullable Map<String,String> properties;
        private @Nullable Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DataVersionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetType = defaults.datasetType;
    	      this.datastoreId = defaults.datastoreId;
    	      this.description = defaults.description;
    	      this.isAnonymous = defaults.isAnonymous;
    	      this.path = defaults.path;
    	      this.properties = defaults.properties;
    	      this.tags = defaults.tags;
        }

        public Builder datasetType(@Nullable String datasetType) {
            this.datasetType = datasetType;
            return this;
        }
        public Builder datastoreId(@Nullable String datastoreId) {
            this.datastoreId = datastoreId;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder isAnonymous(@Nullable Boolean isAnonymous) {
            this.isAnonymous = isAnonymous;
            return this;
        }
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }        public DataVersionResponse build() {
            return new DataVersionResponse(datasetType, datastoreId, description, isAnonymous, path, properties, tags);
        }
    }
}
