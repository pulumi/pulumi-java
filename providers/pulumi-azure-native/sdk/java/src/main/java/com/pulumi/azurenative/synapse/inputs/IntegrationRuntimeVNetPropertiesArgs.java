// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * VNet properties for managed integration runtime.
 * 
 */
public final class IntegrationRuntimeVNetPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationRuntimeVNetPropertiesArgs Empty = new IntegrationRuntimeVNetPropertiesArgs();

    /**
     * Resource IDs of the public IP addresses that this integration runtime will use.
     * 
     */
    @Import(name="publicIPs")
      private final @Nullable Output<List<String>> publicIPs;

    public Output<List<String>> publicIPs() {
        return this.publicIPs == null ? Codegen.empty() : this.publicIPs;
    }

    /**
     * The name of the subnet this integration runtime will join.
     * 
     */
    @Import(name="subnet")
      private final @Nullable Output<String> subnet;

    public Output<String> subnet() {
        return this.subnet == null ? Codegen.empty() : this.subnet;
    }

    /**
     * The ID of subnet, to which this Azure-SSIS integration runtime will be joined.
     * 
     */
    @Import(name="subnetId")
      private final @Nullable Output<String> subnetId;

    public Output<String> subnetId() {
        return this.subnetId == null ? Codegen.empty() : this.subnetId;
    }

    /**
     * The ID of the VNet that this integration runtime will join.
     * 
     */
    @Import(name="vNetId")
      private final @Nullable Output<String> vNetId;

    public Output<String> vNetId() {
        return this.vNetId == null ? Codegen.empty() : this.vNetId;
    }

    public IntegrationRuntimeVNetPropertiesArgs(
        @Nullable Output<List<String>> publicIPs,
        @Nullable Output<String> subnet,
        @Nullable Output<String> subnetId,
        @Nullable Output<String> vNetId) {
        this.publicIPs = publicIPs;
        this.subnet = subnet;
        this.subnetId = subnetId;
        this.vNetId = vNetId;
    }

    private IntegrationRuntimeVNetPropertiesArgs() {
        this.publicIPs = Codegen.empty();
        this.subnet = Codegen.empty();
        this.subnetId = Codegen.empty();
        this.vNetId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationRuntimeVNetPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> publicIPs;
        private @Nullable Output<String> subnet;
        private @Nullable Output<String> subnetId;
        private @Nullable Output<String> vNetId;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationRuntimeVNetPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.publicIPs = defaults.publicIPs;
    	      this.subnet = defaults.subnet;
    	      this.subnetId = defaults.subnetId;
    	      this.vNetId = defaults.vNetId;
        }

        public Builder publicIPs(@Nullable Output<List<String>> publicIPs) {
            this.publicIPs = publicIPs;
            return this;
        }
        public Builder publicIPs(@Nullable List<String> publicIPs) {
            this.publicIPs = Codegen.ofNullable(publicIPs);
            return this;
        }
        public Builder publicIPs(String... publicIPs) {
            return publicIPs(List.of(publicIPs));
        }
        public Builder subnet(@Nullable Output<String> subnet) {
            this.subnet = subnet;
            return this;
        }
        public Builder subnet(@Nullable String subnet) {
            this.subnet = Codegen.ofNullable(subnet);
            return this;
        }
        public Builder subnetId(@Nullable Output<String> subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = Codegen.ofNullable(subnetId);
            return this;
        }
        public Builder vNetId(@Nullable Output<String> vNetId) {
            this.vNetId = vNetId;
            return this;
        }
        public Builder vNetId(@Nullable String vNetId) {
            this.vNetId = Codegen.ofNullable(vNetId);
            return this;
        }        public IntegrationRuntimeVNetPropertiesArgs build() {
            return new IntegrationRuntimeVNetPropertiesArgs(publicIPs, subnet, subnetId, vNetId);
        }
    }
}
