// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybridcompute.outputs;

import com.pulumi.azurenative.hybridcompute.outputs.ErrorDetailResponse;
import com.pulumi.azurenative.hybridcompute.outputs.LocationDataResponse;
import com.pulumi.azurenative.hybridcompute.outputs.MachineExtensionInstanceViewResponse;
import com.pulumi.azurenative.hybridcompute.outputs.MachinePropertiesResponseOsProfile;
import com.pulumi.azurenative.hybridcompute.outputs.MachineResponseIdentity;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMachineResult {
    /**
     * Specifies the AD fully qualified display name.
     * 
     */
    private final String adFqdn;
    /**
     * The hybrid machine agent full version.
     * 
     */
    private final String agentVersion;
    /**
     * Public Key that the client provides to be used during initial resource onboarding
     * 
     */
    private final @Nullable String clientPublicKey;
    /**
     * Specifies the hybrid machine display name.
     * 
     */
    private final String displayName;
    /**
     * Specifies the DNS fully qualified display name.
     * 
     */
    private final String dnsFqdn;
    /**
     * Specifies the Windows domain name.
     * 
     */
    private final String domainName;
    /**
     * Details about the error state.
     * 
     */
    private final List<ErrorDetailResponse> errorDetails;
    /**
     * Machine Extensions information
     * 
     */
    private final List<MachineExtensionInstanceViewResponse> extensions;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    private final @Nullable MachineResponseIdentity identity;
    /**
     * The time of the last status change.
     * 
     */
    private final String lastStatusChange;
    /**
     * The geo-location where the resource lives
     * 
     */
    private final String location;
    /**
     * Metadata pertaining to the geographic location of the resource.
     * 
     */
    private final @Nullable LocationDataResponse locationData;
    /**
     * Specifies the hybrid machine FQDN.
     * 
     */
    private final String machineFqdn;
    /**
     * The name of the resource
     * 
     */
    private final String name;
    /**
     * The Operating System running on the hybrid machine.
     * 
     */
    private final String osName;
    /**
     * Specifies the operating system settings for the hybrid machine.
     * 
     */
    private final @Nullable MachinePropertiesResponseOsProfile osProfile;
    /**
     * Specifies the Operating System product SKU.
     * 
     */
    private final String osSku;
    /**
     * The version of Operating System running on the hybrid machine.
     * 
     */
    private final String osVersion;
    /**
     * The provisioning state, which only appears in the response.
     * 
     */
    private final String provisioningState;
    /**
     * The status of the hybrid machine agent.
     * 
     */
    private final String status;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
     */
    private final String type;
    /**
     * Specifies the hybrid machine unique ID.
     * 
     */
    private final @Nullable String vmId;
    /**
     * Specifies the Arc Machine's unique SMBIOS ID
     * 
     */
    private final String vmUuid;

    @CustomType.Constructor
    private GetMachineResult(
        @CustomType.Parameter("adFqdn") String adFqdn,
        @CustomType.Parameter("agentVersion") String agentVersion,
        @CustomType.Parameter("clientPublicKey") @Nullable String clientPublicKey,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("dnsFqdn") String dnsFqdn,
        @CustomType.Parameter("domainName") String domainName,
        @CustomType.Parameter("errorDetails") List<ErrorDetailResponse> errorDetails,
        @CustomType.Parameter("extensions") List<MachineExtensionInstanceViewResponse> extensions,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identity") @Nullable MachineResponseIdentity identity,
        @CustomType.Parameter("lastStatusChange") String lastStatusChange,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("locationData") @Nullable LocationDataResponse locationData,
        @CustomType.Parameter("machineFqdn") String machineFqdn,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("osName") String osName,
        @CustomType.Parameter("osProfile") @Nullable MachinePropertiesResponseOsProfile osProfile,
        @CustomType.Parameter("osSku") String osSku,
        @CustomType.Parameter("osVersion") String osVersion,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("vmId") @Nullable String vmId,
        @CustomType.Parameter("vmUuid") String vmUuid) {
        this.adFqdn = adFqdn;
        this.agentVersion = agentVersion;
        this.clientPublicKey = clientPublicKey;
        this.displayName = displayName;
        this.dnsFqdn = dnsFqdn;
        this.domainName = domainName;
        this.errorDetails = errorDetails;
        this.extensions = extensions;
        this.id = id;
        this.identity = identity;
        this.lastStatusChange = lastStatusChange;
        this.location = location;
        this.locationData = locationData;
        this.machineFqdn = machineFqdn;
        this.name = name;
        this.osName = osName;
        this.osProfile = osProfile;
        this.osSku = osSku;
        this.osVersion = osVersion;
        this.provisioningState = provisioningState;
        this.status = status;
        this.tags = tags;
        this.type = type;
        this.vmId = vmId;
        this.vmUuid = vmUuid;
    }

    /**
     * Specifies the AD fully qualified display name.
     * 
    */
    public String adFqdn() {
        return this.adFqdn;
    }
    /**
     * The hybrid machine agent full version.
     * 
    */
    public String agentVersion() {
        return this.agentVersion;
    }
    /**
     * Public Key that the client provides to be used during initial resource onboarding
     * 
    */
    public Optional<String> clientPublicKey() {
        return Optional.ofNullable(this.clientPublicKey);
    }
    /**
     * Specifies the hybrid machine display name.
     * 
    */
    public String displayName() {
        return this.displayName;
    }
    /**
     * Specifies the DNS fully qualified display name.
     * 
    */
    public String dnsFqdn() {
        return this.dnsFqdn;
    }
    /**
     * Specifies the Windows domain name.
     * 
    */
    public String domainName() {
        return this.domainName;
    }
    /**
     * Details about the error state.
     * 
    */
    public List<ErrorDetailResponse> errorDetails() {
        return this.errorDetails;
    }
    /**
     * Machine Extensions information
     * 
    */
    public List<MachineExtensionInstanceViewResponse> extensions() {
        return this.extensions;
    }
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
    */
    public String id() {
        return this.id;
    }
    public Optional<MachineResponseIdentity> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * The time of the last status change.
     * 
    */
    public String lastStatusChange() {
        return this.lastStatusChange;
    }
    /**
     * The geo-location where the resource lives
     * 
    */
    public String location() {
        return this.location;
    }
    /**
     * Metadata pertaining to the geographic location of the resource.
     * 
    */
    public Optional<LocationDataResponse> locationData() {
        return Optional.ofNullable(this.locationData);
    }
    /**
     * Specifies the hybrid machine FQDN.
     * 
    */
    public String machineFqdn() {
        return this.machineFqdn;
    }
    /**
     * The name of the resource
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * The Operating System running on the hybrid machine.
     * 
    */
    public String osName() {
        return this.osName;
    }
    /**
     * Specifies the operating system settings for the hybrid machine.
     * 
    */
    public Optional<MachinePropertiesResponseOsProfile> osProfile() {
        return Optional.ofNullable(this.osProfile);
    }
    /**
     * Specifies the Operating System product SKU.
     * 
    */
    public String osSku() {
        return this.osSku;
    }
    /**
     * The version of Operating System running on the hybrid machine.
     * 
    */
    public String osVersion() {
        return this.osVersion;
    }
    /**
     * The provisioning state, which only appears in the response.
     * 
    */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * The status of the hybrid machine agent.
     * 
    */
    public String status() {
        return this.status;
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * Specifies the hybrid machine unique ID.
     * 
    */
    public Optional<String> vmId() {
        return Optional.ofNullable(this.vmId);
    }
    /**
     * Specifies the Arc Machine's unique SMBIOS ID
     * 
    */
    public String vmUuid() {
        return this.vmUuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMachineResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String adFqdn;
        private String agentVersion;
        private @Nullable String clientPublicKey;
        private String displayName;
        private String dnsFqdn;
        private String domainName;
        private List<ErrorDetailResponse> errorDetails;
        private List<MachineExtensionInstanceViewResponse> extensions;
        private String id;
        private @Nullable MachineResponseIdentity identity;
        private String lastStatusChange;
        private String location;
        private @Nullable LocationDataResponse locationData;
        private String machineFqdn;
        private String name;
        private String osName;
        private @Nullable MachinePropertiesResponseOsProfile osProfile;
        private String osSku;
        private String osVersion;
        private String provisioningState;
        private String status;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable String vmId;
        private String vmUuid;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMachineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adFqdn = defaults.adFqdn;
    	      this.agentVersion = defaults.agentVersion;
    	      this.clientPublicKey = defaults.clientPublicKey;
    	      this.displayName = defaults.displayName;
    	      this.dnsFqdn = defaults.dnsFqdn;
    	      this.domainName = defaults.domainName;
    	      this.errorDetails = defaults.errorDetails;
    	      this.extensions = defaults.extensions;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.lastStatusChange = defaults.lastStatusChange;
    	      this.location = defaults.location;
    	      this.locationData = defaults.locationData;
    	      this.machineFqdn = defaults.machineFqdn;
    	      this.name = defaults.name;
    	      this.osName = defaults.osName;
    	      this.osProfile = defaults.osProfile;
    	      this.osSku = defaults.osSku;
    	      this.osVersion = defaults.osVersion;
    	      this.provisioningState = defaults.provisioningState;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.vmId = defaults.vmId;
    	      this.vmUuid = defaults.vmUuid;
        }

        public Builder adFqdn(String adFqdn) {
            this.adFqdn = Objects.requireNonNull(adFqdn);
            return this;
        }
        public Builder agentVersion(String agentVersion) {
            this.agentVersion = Objects.requireNonNull(agentVersion);
            return this;
        }
        public Builder clientPublicKey(@Nullable String clientPublicKey) {
            this.clientPublicKey = clientPublicKey;
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder dnsFqdn(String dnsFqdn) {
            this.dnsFqdn = Objects.requireNonNull(dnsFqdn);
            return this;
        }
        public Builder domainName(String domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }
        public Builder errorDetails(List<ErrorDetailResponse> errorDetails) {
            this.errorDetails = Objects.requireNonNull(errorDetails);
            return this;
        }
        public Builder errorDetails(ErrorDetailResponse... errorDetails) {
            return errorDetails(List.of(errorDetails));
        }
        public Builder extensions(List<MachineExtensionInstanceViewResponse> extensions) {
            this.extensions = Objects.requireNonNull(extensions);
            return this;
        }
        public Builder extensions(MachineExtensionInstanceViewResponse... extensions) {
            return extensions(List.of(extensions));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identity(@Nullable MachineResponseIdentity identity) {
            this.identity = identity;
            return this;
        }
        public Builder lastStatusChange(String lastStatusChange) {
            this.lastStatusChange = Objects.requireNonNull(lastStatusChange);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder locationData(@Nullable LocationDataResponse locationData) {
            this.locationData = locationData;
            return this;
        }
        public Builder machineFqdn(String machineFqdn) {
            this.machineFqdn = Objects.requireNonNull(machineFqdn);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder osName(String osName) {
            this.osName = Objects.requireNonNull(osName);
            return this;
        }
        public Builder osProfile(@Nullable MachinePropertiesResponseOsProfile osProfile) {
            this.osProfile = osProfile;
            return this;
        }
        public Builder osSku(String osSku) {
            this.osSku = Objects.requireNonNull(osSku);
            return this;
        }
        public Builder osVersion(String osVersion) {
            this.osVersion = Objects.requireNonNull(osVersion);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder vmId(@Nullable String vmId) {
            this.vmId = vmId;
            return this;
        }
        public Builder vmUuid(String vmUuid) {
            this.vmUuid = Objects.requireNonNull(vmUuid);
            return this;
        }        public GetMachineResult build() {
            return new GetMachineResult(adFqdn, agentVersion, clientPublicKey, displayName, dnsFqdn, domainName, errorDetails, extensions, id, identity, lastStatusChange, location, locationData, machineFqdn, name, osName, osProfile, osSku, osVersion, provisioningState, status, tags, type, vmId, vmUuid);
        }
    }
}
