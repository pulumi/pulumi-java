// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationPackageArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPackageArgs Empty = new ApplicationPackageArgs();

    /**
     * The name of the Batch account.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The name of the application. This must be unique within the account.
     * 
     */
    @Import(name="applicationName", required=true)
    private Output<String> applicationName;

    public Output<String> applicationName() {
        return this.applicationName;
    }

    /**
     * The name of the resource group that contains the Batch account.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The version of the application.
     * 
     */
    @Import(name="versionName")
    private @Nullable Output<String> versionName;

    public Optional<Output<String>> versionName() {
        return Optional.ofNullable(this.versionName);
    }

    private ApplicationPackageArgs() {}

    private ApplicationPackageArgs(ApplicationPackageArgs $) {
        this.accountName = $.accountName;
        this.applicationName = $.applicationName;
        this.resourceGroupName = $.resourceGroupName;
        this.versionName = $.versionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationPackageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationPackageArgs $;

        public Builder() {
            $ = new ApplicationPackageArgs();
        }

        public Builder(ApplicationPackageArgs defaults) {
            $ = new ApplicationPackageArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        public Builder applicationName(Output<String> applicationName) {
            $.applicationName = applicationName;
            return this;
        }

        public Builder applicationName(String applicationName) {
            return applicationName(Output.of(applicationName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder versionName(@Nullable Output<String> versionName) {
            $.versionName = versionName;
            return this;
        }

        public Builder versionName(String versionName) {
            return versionName(Output.of(versionName));
        }

        public ApplicationPackageArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.applicationName = Objects.requireNonNull($.applicationName, "expected parameter 'applicationName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
