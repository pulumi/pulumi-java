// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.FilterItems;
import com.pulumi.azurenative.network.inputs.OrderBy;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListFirewallPolicyIdpsSignaturePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListFirewallPolicyIdpsSignaturePlainArgs Empty = new ListFirewallPolicyIdpsSignaturePlainArgs();

    /**
     * Contain all filters names and values
     * 
     */
    @Import(name="filters")
    private @Nullable List<FilterItems> filters;

    /**
     * @return Contain all filters names and values
     * 
     */
    public Optional<List<FilterItems>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The name of the Firewall Policy.
     * 
     */
    @Import(name="firewallPolicyName", required=true)
    private String firewallPolicyName;

    /**
     * @return The name of the Firewall Policy.
     * 
     */
    public String firewallPolicyName() {
        return this.firewallPolicyName;
    }

    /**
     * Column to sort response by
     * 
     */
    @Import(name="orderBy")
    private @Nullable OrderBy orderBy;

    /**
     * @return Column to sort response by
     * 
     */
    public Optional<OrderBy> orderBy() {
        return Optional.ofNullable(this.orderBy);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The number of the results to return in each page
     * 
     */
    @Import(name="resultsPerPage")
    private @Nullable Integer resultsPerPage;

    /**
     * @return The number of the results to return in each page
     * 
     */
    public Optional<Integer> resultsPerPage() {
        return Optional.ofNullable(this.resultsPerPage);
    }

    /**
     * Search term in all columns
     * 
     */
    @Import(name="search")
    private @Nullable String search;

    /**
     * @return Search term in all columns
     * 
     */
    public Optional<String> search() {
        return Optional.ofNullable(this.search);
    }

    /**
     * The number of records matching the filter to skip
     * 
     */
    @Import(name="skip")
    private @Nullable Integer skip;

    /**
     * @return The number of records matching the filter to skip
     * 
     */
    public Optional<Integer> skip() {
        return Optional.ofNullable(this.skip);
    }

    private ListFirewallPolicyIdpsSignaturePlainArgs() {}

    private ListFirewallPolicyIdpsSignaturePlainArgs(ListFirewallPolicyIdpsSignaturePlainArgs $) {
        this.filters = $.filters;
        this.firewallPolicyName = $.firewallPolicyName;
        this.orderBy = $.orderBy;
        this.resourceGroupName = $.resourceGroupName;
        this.resultsPerPage = $.resultsPerPage;
        this.search = $.search;
        this.skip = $.skip;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListFirewallPolicyIdpsSignaturePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListFirewallPolicyIdpsSignaturePlainArgs $;

        public Builder() {
            $ = new ListFirewallPolicyIdpsSignaturePlainArgs();
        }

        public Builder(ListFirewallPolicyIdpsSignaturePlainArgs defaults) {
            $ = new ListFirewallPolicyIdpsSignaturePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters Contain all filters names and values
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<FilterItems> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Contain all filters names and values
         * 
         * @return builder
         * 
         */
        public Builder filters(FilterItems... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param firewallPolicyName The name of the Firewall Policy.
         * 
         * @return builder
         * 
         */
        public Builder firewallPolicyName(String firewallPolicyName) {
            $.firewallPolicyName = firewallPolicyName;
            return this;
        }

        /**
         * @param orderBy Column to sort response by
         * 
         * @return builder
         * 
         */
        public Builder orderBy(@Nullable OrderBy orderBy) {
            $.orderBy = orderBy;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resultsPerPage The number of the results to return in each page
         * 
         * @return builder
         * 
         */
        public Builder resultsPerPage(@Nullable Integer resultsPerPage) {
            $.resultsPerPage = resultsPerPage;
            return this;
        }

        /**
         * @param search Search term in all columns
         * 
         * @return builder
         * 
         */
        public Builder search(@Nullable String search) {
            $.search = search;
            return this;
        }

        /**
         * @param skip The number of records matching the filter to skip
         * 
         * @return builder
         * 
         */
        public Builder skip(@Nullable Integer skip) {
            $.skip = skip;
            return this;
        }

        public ListFirewallPolicyIdpsSignaturePlainArgs build() {
            $.firewallPolicyName = Objects.requireNonNull($.firewallPolicyName, "expected parameter 'firewallPolicyName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
