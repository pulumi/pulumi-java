// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights;

import com.pulumi.azurenative.insights.enums.ItemScope;
import com.pulumi.azurenative.insights.enums.ItemType;
import com.pulumi.azurenative.insights.inputs.ApplicationInsightsComponentAnalyticsItemPropertiesArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyticsItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyticsItemArgs Empty = new AnalyticsItemArgs();

    /**
     * The content of this item
     * 
     */
    @Import(name="content")
    private @Nullable Output<String> content;

    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * Internally assigned unique id of the item definition.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The user-defined name of the item.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Flag indicating whether or not to force save an item. This allows overriding an item if it already exists.
     * 
     */
    @Import(name="overrideItem")
    private @Nullable Output<Boolean> overrideItem;

    public Optional<Output<Boolean>> overrideItem() {
        return Optional.ofNullable(this.overrideItem);
    }

    /**
     * A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<ApplicationInsightsComponentAnalyticsItemPropertiesArgs> properties;

    public Optional<Output<ApplicationInsightsComponentAnalyticsItemPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Application Insights component resource.
     * 
     */
    @Import(name="resourceName", required=true)
    private Output<String> resourceName;

    public Output<String> resourceName() {
        return this.resourceName;
    }

    /**
     * Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<Either<String,ItemScope>> scope;

    public Optional<Output<Either<String,ItemScope>>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
     * 
     */
    @Import(name="scopePath", required=true)
    private Output<String> scopePath;

    public Output<String> scopePath() {
        return this.scopePath;
    }

    /**
     * Enum indicating the type of the Analytics item.
     * 
     */
    @Import(name="type")
    private @Nullable Output<Either<String,ItemType>> type;

    public Optional<Output<Either<String,ItemType>>> type() {
        return Optional.ofNullable(this.type);
    }

    private AnalyticsItemArgs() {}

    private AnalyticsItemArgs(AnalyticsItemArgs $) {
        this.content = $.content;
        this.id = $.id;
        this.name = $.name;
        this.overrideItem = $.overrideItem;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
        this.scope = $.scope;
        this.scopePath = $.scopePath;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyticsItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyticsItemArgs $;

        public Builder() {
            $ = new AnalyticsItemArgs();
        }

        public Builder(AnalyticsItemArgs defaults) {
            $ = new AnalyticsItemArgs(Objects.requireNonNull(defaults));
        }

        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        public Builder content(String content) {
            return content(Output.of(content));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder overrideItem(@Nullable Output<Boolean> overrideItem) {
            $.overrideItem = overrideItem;
            return this;
        }

        public Builder overrideItem(Boolean overrideItem) {
            return overrideItem(Output.of(overrideItem));
        }

        public Builder properties(@Nullable Output<ApplicationInsightsComponentAnalyticsItemPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(ApplicationInsightsComponentAnalyticsItemPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder resourceName(Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        public Builder scope(@Nullable Output<Either<String,ItemScope>> scope) {
            $.scope = scope;
            return this;
        }

        public Builder scope(Either<String,ItemScope> scope) {
            return scope(Output.of(scope));
        }

        public Builder scopePath(Output<String> scopePath) {
            $.scopePath = scopePath;
            return this;
        }

        public Builder scopePath(String scopePath) {
            return scopePath(Output.of(scopePath));
        }

        public Builder type(@Nullable Output<Either<String,ItemType>> type) {
            $.type = type;
            return this;
        }

        public Builder type(Either<String,ItemType> type) {
            return type(Output.of(type));
        }

        public AnalyticsItemArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceName = Objects.requireNonNull($.resourceName, "expected parameter 'resourceName' to be non-null");
            $.scopePath = Objects.requireNonNull($.scopePath, "expected parameter 'scopePath' to be non-null");
            return $;
        }
    }

}
