// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Disk details for E2A provider.
 * 
 */
public final class AzureVmDiskDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final AzureVmDiskDetailsResponse Empty = new AzureVmDiskDetailsResponse();

    /**
     * The DiskEncryptionSet ARM ID.
     * 
     */
    @Import(name="diskEncryptionSetId")
    private @Nullable String diskEncryptionSetId;

    /**
     * @return The DiskEncryptionSet ARM ID.
     * 
     */
    public Optional<String> diskEncryptionSetId() {
        return Optional.ofNullable(this.diskEncryptionSetId);
    }

    /**
     * The disk resource id.
     * 
     */
    @Import(name="diskId")
    private @Nullable String diskId;

    /**
     * @return The disk resource id.
     * 
     */
    public Optional<String> diskId() {
        return Optional.ofNullable(this.diskId);
    }

    /**
     * Ordinal\LunId of the disk for the Azure VM.
     * 
     */
    @Import(name="lunId")
    private @Nullable String lunId;

    /**
     * @return Ordinal\LunId of the disk for the Azure VM.
     * 
     */
    public Optional<String> lunId() {
        return Optional.ofNullable(this.lunId);
    }

    /**
     * Max side in MB.
     * 
     */
    @Import(name="maxSizeMB")
    private @Nullable String maxSizeMB;

    /**
     * @return Max side in MB.
     * 
     */
    public Optional<String> maxSizeMB() {
        return Optional.ofNullable(this.maxSizeMB);
    }

    /**
     * Blob uri of the Azure disk.
     * 
     */
    @Import(name="targetDiskLocation")
    private @Nullable String targetDiskLocation;

    /**
     * @return Blob uri of the Azure disk.
     * 
     */
    public Optional<String> targetDiskLocation() {
        return Optional.ofNullable(this.targetDiskLocation);
    }

    /**
     * The target Azure disk name.
     * 
     */
    @Import(name="targetDiskName")
    private @Nullable String targetDiskName;

    /**
     * @return The target Azure disk name.
     * 
     */
    public Optional<String> targetDiskName() {
        return Optional.ofNullable(this.targetDiskName);
    }

    /**
     * The VHD id.
     * 
     */
    @Import(name="vhdId")
    private @Nullable String vhdId;

    /**
     * @return The VHD id.
     * 
     */
    public Optional<String> vhdId() {
        return Optional.ofNullable(this.vhdId);
    }

    /**
     * VHD name.
     * 
     */
    @Import(name="vhdName")
    private @Nullable String vhdName;

    /**
     * @return VHD name.
     * 
     */
    public Optional<String> vhdName() {
        return Optional.ofNullable(this.vhdName);
    }

    /**
     * VHD type.
     * 
     */
    @Import(name="vhdType")
    private @Nullable String vhdType;

    /**
     * @return VHD type.
     * 
     */
    public Optional<String> vhdType() {
        return Optional.ofNullable(this.vhdType);
    }

    private AzureVmDiskDetailsResponse() {}

    private AzureVmDiskDetailsResponse(AzureVmDiskDetailsResponse $) {
        this.diskEncryptionSetId = $.diskEncryptionSetId;
        this.diskId = $.diskId;
        this.lunId = $.lunId;
        this.maxSizeMB = $.maxSizeMB;
        this.targetDiskLocation = $.targetDiskLocation;
        this.targetDiskName = $.targetDiskName;
        this.vhdId = $.vhdId;
        this.vhdName = $.vhdName;
        this.vhdType = $.vhdType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureVmDiskDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureVmDiskDetailsResponse $;

        public Builder() {
            $ = new AzureVmDiskDetailsResponse();
        }

        public Builder(AzureVmDiskDetailsResponse defaults) {
            $ = new AzureVmDiskDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param diskEncryptionSetId The DiskEncryptionSet ARM ID.
         * 
         * @return builder
         * 
         */
        public Builder diskEncryptionSetId(@Nullable String diskEncryptionSetId) {
            $.diskEncryptionSetId = diskEncryptionSetId;
            return this;
        }

        /**
         * @param diskId The disk resource id.
         * 
         * @return builder
         * 
         */
        public Builder diskId(@Nullable String diskId) {
            $.diskId = diskId;
            return this;
        }

        /**
         * @param lunId Ordinal\LunId of the disk for the Azure VM.
         * 
         * @return builder
         * 
         */
        public Builder lunId(@Nullable String lunId) {
            $.lunId = lunId;
            return this;
        }

        /**
         * @param maxSizeMB Max side in MB.
         * 
         * @return builder
         * 
         */
        public Builder maxSizeMB(@Nullable String maxSizeMB) {
            $.maxSizeMB = maxSizeMB;
            return this;
        }

        /**
         * @param targetDiskLocation Blob uri of the Azure disk.
         * 
         * @return builder
         * 
         */
        public Builder targetDiskLocation(@Nullable String targetDiskLocation) {
            $.targetDiskLocation = targetDiskLocation;
            return this;
        }

        /**
         * @param targetDiskName The target Azure disk name.
         * 
         * @return builder
         * 
         */
        public Builder targetDiskName(@Nullable String targetDiskName) {
            $.targetDiskName = targetDiskName;
            return this;
        }

        /**
         * @param vhdId The VHD id.
         * 
         * @return builder
         * 
         */
        public Builder vhdId(@Nullable String vhdId) {
            $.vhdId = vhdId;
            return this;
        }

        /**
         * @param vhdName VHD name.
         * 
         * @return builder
         * 
         */
        public Builder vhdName(@Nullable String vhdName) {
            $.vhdName = vhdName;
            return this;
        }

        /**
         * @param vhdType VHD type.
         * 
         * @return builder
         * 
         */
        public Builder vhdType(@Nullable String vhdType) {
            $.vhdType = vhdType;
            return this;
        }

        public AzureVmDiskDetailsResponse build() {
            return $;
        }
    }

}
