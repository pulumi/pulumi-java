// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurestack.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Product compatibility
 * 
 */
public final class CompatibilityResponse extends com.pulumi.resources.InvokeArgs {

    public static final CompatibilityResponse Empty = new CompatibilityResponse();

    /**
     * Full error message if any compatibility issues are found
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Tells if product is compatible with current device
     * 
     */
    @Import(name="isCompatible")
    private @Nullable Boolean isCompatible;

    public Optional<Boolean> isCompatible() {
        return Optional.ofNullable(this.isCompatible);
    }

    /**
     * List of all issues found
     * 
     */
    @Import(name="issues")
    private @Nullable List<String> issues;

    public Optional<List<String>> issues() {
        return Optional.ofNullable(this.issues);
    }

    /**
     * Short error message if any compatibility issues are found
     * 
     */
    @Import(name="message")
    private @Nullable String message;

    public Optional<String> message() {
        return Optional.ofNullable(this.message);
    }

    private CompatibilityResponse() {}

    private CompatibilityResponse(CompatibilityResponse $) {
        this.description = $.description;
        this.isCompatible = $.isCompatible;
        this.issues = $.issues;
        this.message = $.message;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CompatibilityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CompatibilityResponse $;

        public Builder() {
            $ = new CompatibilityResponse();
        }

        public Builder(CompatibilityResponse defaults) {
            $ = new CompatibilityResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder isCompatible(@Nullable Boolean isCompatible) {
            $.isCompatible = isCompatible;
            return this;
        }

        public Builder issues(@Nullable List<String> issues) {
            $.issues = issues;
            return this;
        }

        public Builder issues(String... issues) {
            return issues(List.of(issues));
        }

        public Builder message(@Nullable String message) {
            $.message = message;
            return this;
        }

        public CompatibilityResponse build() {
            return $;
        }
    }

}
