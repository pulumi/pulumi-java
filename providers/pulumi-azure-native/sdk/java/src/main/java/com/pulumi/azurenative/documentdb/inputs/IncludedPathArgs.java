// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.azurenative.documentdb.inputs.IndexesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The paths that are included in indexing
 * 
 */
public final class IncludedPathArgs extends com.pulumi.resources.ResourceArgs {

    public static final IncludedPathArgs Empty = new IncludedPathArgs();

    /**
     * List of indexes for this path
     * 
     */
    @Import(name="indexes")
    private @Nullable Output<List<IndexesArgs>> indexes;

    /**
     * @return List of indexes for this path
     * 
     */
    public Optional<Output<List<IndexesArgs>>> indexes() {
        return Optional.ofNullable(this.indexes);
    }

    /**
     * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private IncludedPathArgs() {}

    private IncludedPathArgs(IncludedPathArgs $) {
        this.indexes = $.indexes;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IncludedPathArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IncludedPathArgs $;

        public Builder() {
            $ = new IncludedPathArgs();
        }

        public Builder(IncludedPathArgs defaults) {
            $ = new IncludedPathArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param indexes List of indexes for this path
         * 
         * @return builder
         * 
         */
        public Builder indexes(@Nullable Output<List<IndexesArgs>> indexes) {
            $.indexes = indexes;
            return this;
        }

        /**
         * @param indexes List of indexes for this path
         * 
         * @return builder
         * 
         */
        public Builder indexes(List<IndexesArgs> indexes) {
            return indexes(Output.of(indexes));
        }

        /**
         * @param indexes List of indexes for this path
         * 
         * @return builder
         * 
         */
        public Builder indexes(IndexesArgs... indexes) {
            return indexes(List.of(indexes));
        }

        /**
         * @param path The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public IncludedPathArgs build() {
            return $;
        }
    }

}
