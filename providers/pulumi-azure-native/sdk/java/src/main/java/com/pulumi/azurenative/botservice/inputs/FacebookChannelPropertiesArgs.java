// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.azurenative.botservice.inputs.FacebookPageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The parameters to provide for the Facebook channel.
 * 
 */
public final class FacebookChannelPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final FacebookChannelPropertiesArgs Empty = new FacebookChannelPropertiesArgs();

    /**
     * Facebook application id
     * 
     */
    @Import(name="appId", required=true)
    private Output<String> appId;

    /**
     * @return Facebook application id
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }

    /**
     * Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    @Import(name="appSecret")
    private @Nullable Output<String> appSecret;

    /**
     * @return Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    public Optional<Output<String>> appSecret() {
        return Optional.ofNullable(this.appSecret);
    }

    /**
     * Whether this channel is enabled for the bot
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return Whether this channel is enabled for the bot
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * The list of Facebook pages
     * 
     */
    @Import(name="pages")
    private @Nullable Output<List<FacebookPageArgs>> pages;

    /**
     * @return The list of Facebook pages
     * 
     */
    public Optional<Output<List<FacebookPageArgs>>> pages() {
        return Optional.ofNullable(this.pages);
    }

    private FacebookChannelPropertiesArgs() {}

    private FacebookChannelPropertiesArgs(FacebookChannelPropertiesArgs $) {
        this.appId = $.appId;
        this.appSecret = $.appSecret;
        this.isEnabled = $.isEnabled;
        this.pages = $.pages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FacebookChannelPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FacebookChannelPropertiesArgs $;

        public Builder() {
            $ = new FacebookChannelPropertiesArgs();
        }

        public Builder(FacebookChannelPropertiesArgs defaults) {
            $ = new FacebookChannelPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId Facebook application id
         * 
         * @return builder
         * 
         */
        public Builder appId(Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId Facebook application id
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param appSecret Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
         * 
         * @return builder
         * 
         */
        public Builder appSecret(@Nullable Output<String> appSecret) {
            $.appSecret = appSecret;
            return this;
        }

        /**
         * @param appSecret Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
         * 
         * @return builder
         * 
         */
        public Builder appSecret(String appSecret) {
            return appSecret(Output.of(appSecret));
        }

        /**
         * @param isEnabled Whether this channel is enabled for the bot
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Whether this channel is enabled for the bot
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param pages The list of Facebook pages
         * 
         * @return builder
         * 
         */
        public Builder pages(@Nullable Output<List<FacebookPageArgs>> pages) {
            $.pages = pages;
            return this;
        }

        /**
         * @param pages The list of Facebook pages
         * 
         * @return builder
         * 
         */
        public Builder pages(List<FacebookPageArgs> pages) {
            return pages(Output.of(pages));
        }

        /**
         * @param pages The list of Facebook pages
         * 
         * @return builder
         * 
         */
        public Builder pages(FacebookPageArgs... pages) {
            return pages(List.of(pages));
        }

        public FacebookChannelPropertiesArgs build() {
            $.appId = Objects.requireNonNull($.appId, "expected parameter 'appId' to be non-null");
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            return $;
        }
    }

}
