// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Path to match for routing.
 * 
 */
public final class HttpRouteMatchPathResponse extends com.pulumi.resources.InvokeArgs {

    public static final HttpRouteMatchPathResponse Empty = new HttpRouteMatchPathResponse();

    /**
     * replacement string for matched part of the Uri.
     * 
     */
    @Import(name="rewrite")
    private @Nullable String rewrite;

    /**
     * @return replacement string for matched part of the Uri.
     * 
     */
    public Optional<String> rewrite() {
        return Optional.ofNullable(this.rewrite);
    }

    /**
     * how to match value in the Uri
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return how to match value in the Uri
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * Uri path to match for request.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    /**
     * @return Uri path to match for request.
     * 
     */
    public String value() {
        return this.value;
    }

    private HttpRouteMatchPathResponse() {}

    private HttpRouteMatchPathResponse(HttpRouteMatchPathResponse $) {
        this.rewrite = $.rewrite;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpRouteMatchPathResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpRouteMatchPathResponse $;

        public Builder() {
            $ = new HttpRouteMatchPathResponse();
        }

        public Builder(HttpRouteMatchPathResponse defaults) {
            $ = new HttpRouteMatchPathResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param rewrite replacement string for matched part of the Uri.
         * 
         * @return builder
         * 
         */
        public Builder rewrite(@Nullable String rewrite) {
            $.rewrite = rewrite;
            return this;
        }

        /**
         * @param type how to match value in the Uri
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param value Uri path to match for request.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public HttpRouteMatchPathResponse build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
