// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hdinsight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The SSH public key for the cluster nodes.
 * 
 */
public final class SshPublicKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SshPublicKeyArgs Empty = new SshPublicKeyArgs();

    /**
     * The certificate for SSH.
     * 
     */
    @Import(name="certificateData")
    private @Nullable Output<String> certificateData;

    /**
     * @return The certificate for SSH.
     * 
     */
    public Optional<Output<String>> certificateData() {
        return Optional.ofNullable(this.certificateData);
    }

    private SshPublicKeyArgs() {}

    private SshPublicKeyArgs(SshPublicKeyArgs $) {
        this.certificateData = $.certificateData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SshPublicKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SshPublicKeyArgs $;

        public Builder() {
            $ = new SshPublicKeyArgs();
        }

        public Builder(SshPublicKeyArgs defaults) {
            $ = new SshPublicKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateData The certificate for SSH.
         * 
         * @return builder
         * 
         */
        public Builder certificateData(@Nullable Output<String> certificateData) {
            $.certificateData = certificateData;
            return this;
        }

        /**
         * @param certificateData The certificate for SSH.
         * 
         * @return builder
         * 
         */
        public Builder certificateData(String certificateData) {
            return certificateData(Output.of(certificateData));
        }

        public SshPublicKeyArgs build() {
            return $;
        }
    }

}
