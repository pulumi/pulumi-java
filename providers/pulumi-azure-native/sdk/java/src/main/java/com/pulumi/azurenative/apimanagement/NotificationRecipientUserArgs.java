// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotificationRecipientUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final NotificationRecipientUserArgs Empty = new NotificationRecipientUserArgs();

    /**
     * Notification Name Identifier.
     * 
     */
    @Import(name="notificationName", required=true)
    private Output<String> notificationName;

    /**
     * @return Notification Name Identifier.
     * 
     */
    public Output<String> notificationName() {
        return this.notificationName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the API Management service.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * User identifier. Must be unique in the current API Management service instance.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return User identifier. Must be unique in the current API Management service instance.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private NotificationRecipientUserArgs() {}

    private NotificationRecipientUserArgs(NotificationRecipientUserArgs $) {
        this.notificationName = $.notificationName;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceName = $.serviceName;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationRecipientUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationRecipientUserArgs $;

        public Builder() {
            $ = new NotificationRecipientUserArgs();
        }

        public Builder(NotificationRecipientUserArgs defaults) {
            $ = new NotificationRecipientUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param notificationName Notification Name Identifier.
         * 
         * @return builder
         * 
         */
        public Builder notificationName(Output<String> notificationName) {
            $.notificationName = notificationName;
            return this;
        }

        /**
         * @param notificationName Notification Name Identifier.
         * 
         * @return builder
         * 
         */
        public Builder notificationName(String notificationName) {
            return notificationName(Output.of(notificationName));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serviceName The name of the API Management service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the API Management service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param userId User identifier. Must be unique in the current API Management service instance.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId User identifier. Must be unique in the current API Management service instance.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public NotificationRecipientUserArgs build() {
            $.notificationName = Objects.requireNonNull($.notificationName, "expected parameter 'notificationName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
