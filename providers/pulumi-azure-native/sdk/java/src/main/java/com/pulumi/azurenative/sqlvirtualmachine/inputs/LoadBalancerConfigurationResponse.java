// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine.inputs;

import com.pulumi.azurenative.sqlvirtualmachine.inputs.PrivateIPAddressResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A load balancer configuration for an availability group listener.
 * 
 */
public final class LoadBalancerConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final LoadBalancerConfigurationResponse Empty = new LoadBalancerConfigurationResponse();

    /**
     * Resource id of the load balancer.
     * 
     */
    @Import(name="loadBalancerResourceId")
    private @Nullable String loadBalancerResourceId;

    /**
     * @return Resource id of the load balancer.
     * 
     */
    public Optional<String> loadBalancerResourceId() {
        return Optional.ofNullable(this.loadBalancerResourceId);
    }

    /**
     * Private IP address.
     * 
     */
    @Import(name="privateIpAddress")
    private @Nullable PrivateIPAddressResponse privateIpAddress;

    /**
     * @return Private IP address.
     * 
     */
    public Optional<PrivateIPAddressResponse> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * Probe port.
     * 
     */
    @Import(name="probePort")
    private @Nullable Integer probePort;

    /**
     * @return Probe port.
     * 
     */
    public Optional<Integer> probePort() {
        return Optional.ofNullable(this.probePort);
    }

    /**
     * Resource id of the public IP.
     * 
     */
    @Import(name="publicIpAddressResourceId")
    private @Nullable String publicIpAddressResourceId;

    /**
     * @return Resource id of the public IP.
     * 
     */
    public Optional<String> publicIpAddressResourceId() {
        return Optional.ofNullable(this.publicIpAddressResourceId);
    }

    /**
     * List of the SQL virtual machine instance resource id&#39;s that are enrolled into the availability group listener.
     * 
     */
    @Import(name="sqlVirtualMachineInstances")
    private @Nullable List<String> sqlVirtualMachineInstances;

    /**
     * @return List of the SQL virtual machine instance resource id&#39;s that are enrolled into the availability group listener.
     * 
     */
    public Optional<List<String>> sqlVirtualMachineInstances() {
        return Optional.ofNullable(this.sqlVirtualMachineInstances);
    }

    private LoadBalancerConfigurationResponse() {}

    private LoadBalancerConfigurationResponse(LoadBalancerConfigurationResponse $) {
        this.loadBalancerResourceId = $.loadBalancerResourceId;
        this.privateIpAddress = $.privateIpAddress;
        this.probePort = $.probePort;
        this.publicIpAddressResourceId = $.publicIpAddressResourceId;
        this.sqlVirtualMachineInstances = $.sqlVirtualMachineInstances;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerConfigurationResponse $;

        public Builder() {
            $ = new LoadBalancerConfigurationResponse();
        }

        public Builder(LoadBalancerConfigurationResponse defaults) {
            $ = new LoadBalancerConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param loadBalancerResourceId Resource id of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerResourceId(@Nullable String loadBalancerResourceId) {
            $.loadBalancerResourceId = loadBalancerResourceId;
            return this;
        }

        /**
         * @param privateIpAddress Private IP address.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(@Nullable PrivateIPAddressResponse privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param probePort Probe port.
         * 
         * @return builder
         * 
         */
        public Builder probePort(@Nullable Integer probePort) {
            $.probePort = probePort;
            return this;
        }

        /**
         * @param publicIpAddressResourceId Resource id of the public IP.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddressResourceId(@Nullable String publicIpAddressResourceId) {
            $.publicIpAddressResourceId = publicIpAddressResourceId;
            return this;
        }

        /**
         * @param sqlVirtualMachineInstances List of the SQL virtual machine instance resource id&#39;s that are enrolled into the availability group listener.
         * 
         * @return builder
         * 
         */
        public Builder sqlVirtualMachineInstances(@Nullable List<String> sqlVirtualMachineInstances) {
            $.sqlVirtualMachineInstances = sqlVirtualMachineInstances;
            return this;
        }

        /**
         * @param sqlVirtualMachineInstances List of the SQL virtual machine instance resource id&#39;s that are enrolled into the availability group listener.
         * 
         * @return builder
         * 
         */
        public Builder sqlVirtualMachineInstances(String... sqlVirtualMachineInstances) {
            return sqlVirtualMachineInstances(List.of(sqlVirtualMachineInstances));
        }

        public LoadBalancerConfigurationResponse build() {
            return $;
        }
    }

}
