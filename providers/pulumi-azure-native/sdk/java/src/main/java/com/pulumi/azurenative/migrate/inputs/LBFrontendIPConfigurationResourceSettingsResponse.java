// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.azurenative.migrate.inputs.SubnetReferenceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines load balancer frontend IP configuration properties.
 * 
 */
public final class LBFrontendIPConfigurationResourceSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final LBFrontendIPConfigurationResourceSettingsResponse Empty = new LBFrontendIPConfigurationResourceSettingsResponse();

    /**
     * Gets or sets the frontend IP configuration name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Gets or sets the IP address of the Load Balancer.This is only specified if a specific
     * private IP address shall be allocated from the subnet specified in subnetRef.
     * 
     */
    @Import(name="privateIpAddress")
    private @Nullable String privateIpAddress;

    public Optional<String> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * Gets or sets PrivateIP allocation method (Static/Dynamic).
     * 
     */
    @Import(name="privateIpAllocationMethod")
    private @Nullable String privateIpAllocationMethod;

    public Optional<String> privateIpAllocationMethod() {
        return Optional.ofNullable(this.privateIpAllocationMethod);
    }

    /**
     * Defines reference to subnet.
     * 
     */
    @Import(name="subnet")
    private @Nullable SubnetReferenceResponse subnet;

    public Optional<SubnetReferenceResponse> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    /**
     * Gets or sets the csv list of zones.
     * 
     */
    @Import(name="zones")
    private @Nullable String zones;

    public Optional<String> zones() {
        return Optional.ofNullable(this.zones);
    }

    private LBFrontendIPConfigurationResourceSettingsResponse() {}

    private LBFrontendIPConfigurationResourceSettingsResponse(LBFrontendIPConfigurationResourceSettingsResponse $) {
        this.name = $.name;
        this.privateIpAddress = $.privateIpAddress;
        this.privateIpAllocationMethod = $.privateIpAllocationMethod;
        this.subnet = $.subnet;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LBFrontendIPConfigurationResourceSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LBFrontendIPConfigurationResourceSettingsResponse $;

        public Builder() {
            $ = new LBFrontendIPConfigurationResourceSettingsResponse();
        }

        public Builder(LBFrontendIPConfigurationResourceSettingsResponse defaults) {
            $ = new LBFrontendIPConfigurationResourceSettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder privateIpAddress(@Nullable String privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        public Builder privateIpAllocationMethod(@Nullable String privateIpAllocationMethod) {
            $.privateIpAllocationMethod = privateIpAllocationMethod;
            return this;
        }

        public Builder subnet(@Nullable SubnetReferenceResponse subnet) {
            $.subnet = subnet;
            return this;
        }

        public Builder zones(@Nullable String zones) {
            $.zones = zones;
            return this;
        }

        public LBFrontendIPConfigurationResourceSettingsResponse build() {
            return $;
        }
    }

}
