// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.AzureKeyVaultSecretReferenceArgs;
import com.pulumi.azurenative.datafactory.inputs.IntegrationRuntimeReferenceArgs;
import com.pulumi.azurenative.datafactory.inputs.ParameterSpecificationArgs;
import com.pulumi.azurenative.datafactory.inputs.SecureStringArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Linked service for AppFigures.
 * 
 */
public final class AppFiguresLinkedServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppFiguresLinkedServiceArgs Empty = new AppFiguresLinkedServiceArgs();

    /**
     * List of tags that can be used for describing the linked service.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<List<Object>> annotations;

    /**
     * @return List of tags that can be used for describing the linked service.
     * 
     */
    public Optional<Output<List<Object>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * The client key for the AppFigures source.
     * 
     */
    @Import(name="clientKey", required=true)
    private Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> clientKey;

    /**
     * @return The client key for the AppFigures source.
     * 
     */
    public Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> clientKey() {
        return this.clientKey;
    }

    /**
     * The integration runtime reference.
     * 
     */
    @Import(name="connectVia")
    private @Nullable Output<IntegrationRuntimeReferenceArgs> connectVia;

    /**
     * @return The integration runtime reference.
     * 
     */
    public Optional<Output<IntegrationRuntimeReferenceArgs>> connectVia() {
        return Optional.ofNullable(this.connectVia);
    }

    /**
     * Linked service description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Linked service description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Parameters for linked service.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,ParameterSpecificationArgs>> parameters;

    /**
     * @return Parameters for linked service.
     * 
     */
    public Optional<Output<Map<String,ParameterSpecificationArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The password of the AppFigures source.
     * 
     */
    @Import(name="password", required=true)
    private Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password;

    /**
     * @return The password of the AppFigures source.
     * 
     */
    public Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password() {
        return this.password;
    }

    /**
     * Type of linked service.
     * Expected value is &#39;AppFigures&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of linked service.
     * Expected value is &#39;AppFigures&#39;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * The username of the Appfigures source.
     * 
     */
    @Import(name="userName", required=true)
    private Output<Object> userName;

    /**
     * @return The username of the Appfigures source.
     * 
     */
    public Output<Object> userName() {
        return this.userName;
    }

    private AppFiguresLinkedServiceArgs() {}

    private AppFiguresLinkedServiceArgs(AppFiguresLinkedServiceArgs $) {
        this.annotations = $.annotations;
        this.clientKey = $.clientKey;
        this.connectVia = $.connectVia;
        this.description = $.description;
        this.parameters = $.parameters;
        this.password = $.password;
        this.type = $.type;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppFiguresLinkedServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppFiguresLinkedServiceArgs $;

        public Builder() {
            $ = new AppFiguresLinkedServiceArgs();
        }

        public Builder(AppFiguresLinkedServiceArgs defaults) {
            $ = new AppFiguresLinkedServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations List of tags that can be used for describing the linked service.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<List<Object>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations List of tags that can be used for describing the linked service.
         * 
         * @return builder
         * 
         */
        public Builder annotations(List<Object> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param annotations List of tags that can be used for describing the linked service.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Object... annotations) {
            return annotations(List.of(annotations));
        }

        /**
         * @param clientKey The client key for the AppFigures source.
         * 
         * @return builder
         * 
         */
        public Builder clientKey(Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> clientKey) {
            $.clientKey = clientKey;
            return this;
        }

        /**
         * @param clientKey The client key for the AppFigures source.
         * 
         * @return builder
         * 
         */
        public Builder clientKey(Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs> clientKey) {
            return clientKey(Output.of(clientKey));
        }

        /**
         * @param clientKey The client key for the AppFigures source.
         * 
         * @return builder
         * 
         */
        public Builder clientKey(AzureKeyVaultSecretReferenceArgs clientKey) {
            return clientKey(Either.ofLeft(clientKey));
        }

        /**
         * @param clientKey The client key for the AppFigures source.
         * 
         * @return builder
         * 
         */
        public Builder clientKey(SecureStringArgs clientKey) {
            return clientKey(Either.ofRight(clientKey));
        }

        /**
         * @param connectVia The integration runtime reference.
         * 
         * @return builder
         * 
         */
        public Builder connectVia(@Nullable Output<IntegrationRuntimeReferenceArgs> connectVia) {
            $.connectVia = connectVia;
            return this;
        }

        /**
         * @param connectVia The integration runtime reference.
         * 
         * @return builder
         * 
         */
        public Builder connectVia(IntegrationRuntimeReferenceArgs connectVia) {
            return connectVia(Output.of(connectVia));
        }

        /**
         * @param description Linked service description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Linked service description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param parameters Parameters for linked service.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,ParameterSpecificationArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Parameters for linked service.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,ParameterSpecificationArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param password The password of the AppFigures source.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password of the AppFigures source.
         * 
         * @return builder
         * 
         */
        public Builder password(Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs> password) {
            return password(Output.of(password));
        }

        /**
         * @param password The password of the AppFigures source.
         * 
         * @return builder
         * 
         */
        public Builder password(AzureKeyVaultSecretReferenceArgs password) {
            return password(Either.ofLeft(password));
        }

        /**
         * @param password The password of the AppFigures source.
         * 
         * @return builder
         * 
         */
        public Builder password(SecureStringArgs password) {
            return password(Either.ofRight(password));
        }

        /**
         * @param type Type of linked service.
         * Expected value is &#39;AppFigures&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of linked service.
         * Expected value is &#39;AppFigures&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param userName The username of the Appfigures source.
         * 
         * @return builder
         * 
         */
        public Builder userName(Output<Object> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName The username of the Appfigures source.
         * 
         * @return builder
         * 
         */
        public Builder userName(Object userName) {
            return userName(Output.of(userName));
        }

        public AppFiguresLinkedServiceArgs build() {
            $.clientKey = Objects.requireNonNull($.clientKey, "expected parameter 'clientKey' to be non-null");
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
