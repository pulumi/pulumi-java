// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dataprotection.inputs;

import com.pulumi.azurenative.dataprotection.inputs.AdhocBasedTaggingCriteriaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Adhoc trigger context
 * 
 */
public final class AdhocBasedTriggerContextArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdhocBasedTriggerContextArgs Empty = new AdhocBasedTriggerContextArgs();

    /**
     * Type of the specific object - used for deserializing
     * Expected value is &#39;AdhocBasedTriggerContext&#39;.
     * 
     */
    @Import(name="objectType", required=true)
    private Output<String> objectType;

    public Output<String> objectType() {
        return this.objectType;
    }

    /**
     * Tagging Criteria containing retention tag for adhoc backup.
     * 
     */
    @Import(name="taggingCriteria", required=true)
    private Output<AdhocBasedTaggingCriteriaArgs> taggingCriteria;

    public Output<AdhocBasedTaggingCriteriaArgs> taggingCriteria() {
        return this.taggingCriteria;
    }

    private AdhocBasedTriggerContextArgs() {}

    private AdhocBasedTriggerContextArgs(AdhocBasedTriggerContextArgs $) {
        this.objectType = $.objectType;
        this.taggingCriteria = $.taggingCriteria;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdhocBasedTriggerContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdhocBasedTriggerContextArgs $;

        public Builder() {
            $ = new AdhocBasedTriggerContextArgs();
        }

        public Builder(AdhocBasedTriggerContextArgs defaults) {
            $ = new AdhocBasedTriggerContextArgs(Objects.requireNonNull(defaults));
        }

        public Builder objectType(Output<String> objectType) {
            $.objectType = objectType;
            return this;
        }

        public Builder objectType(String objectType) {
            return objectType(Output.of(objectType));
        }

        public Builder taggingCriteria(Output<AdhocBasedTaggingCriteriaArgs> taggingCriteria) {
            $.taggingCriteria = taggingCriteria;
            return this;
        }

        public Builder taggingCriteria(AdhocBasedTaggingCriteriaArgs taggingCriteria) {
            return taggingCriteria(Output.of(taggingCriteria));
        }

        public AdhocBasedTriggerContextArgs build() {
            $.objectType = Codegen.stringProp("objectType").output().arg($.objectType).require();
            $.taggingCriteria = Objects.requireNonNull($.taggingCriteria, "expected parameter 'taggingCriteria' to be non-null");
            return $;
        }
    }

}
