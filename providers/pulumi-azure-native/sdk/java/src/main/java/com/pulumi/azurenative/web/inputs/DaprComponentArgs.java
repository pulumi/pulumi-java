// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.DaprMetadataArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Dapr component configuration
 * 
 */
public final class DaprComponentArgs extends com.pulumi.resources.ResourceArgs {

    public static final DaprComponentArgs Empty = new DaprComponentArgs();

    /**
     * Component metadata
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<List<DaprMetadataArgs>> metadata;

    /**
     * @return Component metadata
     * 
     */
    public Optional<Output<List<DaprMetadataArgs>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * Component name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Component name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Component type
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Component type
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Component version
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Component version
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private DaprComponentArgs() {}

    private DaprComponentArgs(DaprComponentArgs $) {
        this.metadata = $.metadata;
        this.name = $.name;
        this.type = $.type;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DaprComponentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DaprComponentArgs $;

        public Builder() {
            $ = new DaprComponentArgs();
        }

        public Builder(DaprComponentArgs defaults) {
            $ = new DaprComponentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metadata Component metadata
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<List<DaprMetadataArgs>> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata Component metadata
         * 
         * @return builder
         * 
         */
        public Builder metadata(List<DaprMetadataArgs> metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param metadata Component metadata
         * 
         * @return builder
         * 
         */
        public Builder metadata(DaprMetadataArgs... metadata) {
            return metadata(List.of(metadata));
        }

        /**
         * @param name Component name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Component name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type Component type
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Component type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param version Component version
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Component version
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public DaprComponentArgs build() {
            return $;
        }
    }

}
