// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A Facebook page for Facebook channel registration
 * 
 */
public final class FacebookPageResponse extends com.pulumi.resources.InvokeArgs {

    public static final FacebookPageResponse Empty = new FacebookPageResponse();

    /**
     * Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    @Import(name="accessToken")
    private @Nullable String accessToken;

    public Optional<String> accessToken() {
        return Optional.ofNullable(this.accessToken);
    }

    /**
     * Page id
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    private FacebookPageResponse() {}

    private FacebookPageResponse(FacebookPageResponse $) {
        this.accessToken = $.accessToken;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FacebookPageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FacebookPageResponse $;

        public Builder() {
            $ = new FacebookPageResponse();
        }

        public Builder(FacebookPageResponse defaults) {
            $ = new FacebookPageResponse(Objects.requireNonNull(defaults));
        }

        public Builder accessToken(@Nullable String accessToken) {
            $.accessToken = accessToken;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public FacebookPageResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
