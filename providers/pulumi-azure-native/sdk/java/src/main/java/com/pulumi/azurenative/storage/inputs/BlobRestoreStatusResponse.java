// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.azurenative.storage.inputs.BlobRestoreParametersResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Blob restore status.
 * 
 */
public final class BlobRestoreStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final BlobRestoreStatusResponse Empty = new BlobRestoreStatusResponse();

    /**
     * Failure reason when blob restore is failed.
     * 
     */
    @Import(name="failureReason", required=true)
    private String failureReason;

    public String failureReason() {
        return this.failureReason;
    }

    /**
     * Blob restore request parameters.
     * 
     */
    @Import(name="parameters", required=true)
    private BlobRestoreParametersResponse parameters;

    public BlobRestoreParametersResponse parameters() {
        return this.parameters;
    }

    /**
     * Id for tracking blob restore request.
     * 
     */
    @Import(name="restoreId", required=true)
    private String restoreId;

    public String restoreId() {
        return this.restoreId;
    }

    /**
     * The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    public String status() {
        return this.status;
    }

    private BlobRestoreStatusResponse() {}

    private BlobRestoreStatusResponse(BlobRestoreStatusResponse $) {
        this.failureReason = $.failureReason;
        this.parameters = $.parameters;
        this.restoreId = $.restoreId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlobRestoreStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlobRestoreStatusResponse $;

        public Builder() {
            $ = new BlobRestoreStatusResponse();
        }

        public Builder(BlobRestoreStatusResponse defaults) {
            $ = new BlobRestoreStatusResponse(Objects.requireNonNull(defaults));
        }

        public Builder failureReason(String failureReason) {
            $.failureReason = failureReason;
            return this;
        }

        public Builder parameters(BlobRestoreParametersResponse parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder restoreId(String restoreId) {
            $.restoreId = restoreId;
            return this;
        }

        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public BlobRestoreStatusResponse build() {
            $.failureReason = Objects.requireNonNull($.failureReason, "expected parameter 'failureReason' to be non-null");
            $.parameters = Objects.requireNonNull($.parameters, "expected parameter 'parameters' to be non-null");
            $.restoreId = Objects.requireNonNull($.restoreId, "expected parameter 'restoreId' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
