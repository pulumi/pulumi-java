// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Common field for data type in data connectors.
 * 
 */
public final class DataConnectorDataTypeCommonResponse extends com.pulumi.resources.InvokeArgs {

    public static final DataConnectorDataTypeCommonResponse Empty = new DataConnectorDataTypeCommonResponse();

    /**
     * Describe whether this data type connection is enabled or not.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return Describe whether this data type connection is enabled or not.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private DataConnectorDataTypeCommonResponse() {}

    private DataConnectorDataTypeCommonResponse(DataConnectorDataTypeCommonResponse $) {
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataConnectorDataTypeCommonResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataConnectorDataTypeCommonResponse $;

        public Builder() {
            $ = new DataConnectorDataTypeCommonResponse();
        }

        public Builder(DataConnectorDataTypeCommonResponse defaults) {
            $ = new DataConnectorDataTypeCommonResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param state Describe whether this data type connection is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public DataConnectorDataTypeCommonResponse build() {
            return $;
        }
    }

}
