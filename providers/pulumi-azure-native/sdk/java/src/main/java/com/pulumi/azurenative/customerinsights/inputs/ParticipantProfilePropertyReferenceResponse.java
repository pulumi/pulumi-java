// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The participant profile property reference.
 * 
 */
public final class ParticipantProfilePropertyReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final ParticipantProfilePropertyReferenceResponse Empty = new ParticipantProfilePropertyReferenceResponse();

    /**
     * The source interaction property that maps to the target profile property.
     * 
     */
    @Import(name="interactionPropertyName", required=true)
    private String interactionPropertyName;

    /**
     * @return The source interaction property that maps to the target profile property.
     * 
     */
    public String interactionPropertyName() {
        return this.interactionPropertyName;
    }

    /**
     * The target profile property that maps to the source interaction property.
     * 
     */
    @Import(name="profilePropertyName", required=true)
    private String profilePropertyName;

    /**
     * @return The target profile property that maps to the source interaction property.
     * 
     */
    public String profilePropertyName() {
        return this.profilePropertyName;
    }

    private ParticipantProfilePropertyReferenceResponse() {}

    private ParticipantProfilePropertyReferenceResponse(ParticipantProfilePropertyReferenceResponse $) {
        this.interactionPropertyName = $.interactionPropertyName;
        this.profilePropertyName = $.profilePropertyName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ParticipantProfilePropertyReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ParticipantProfilePropertyReferenceResponse $;

        public Builder() {
            $ = new ParticipantProfilePropertyReferenceResponse();
        }

        public Builder(ParticipantProfilePropertyReferenceResponse defaults) {
            $ = new ParticipantProfilePropertyReferenceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param interactionPropertyName The source interaction property that maps to the target profile property.
         * 
         * @return builder
         * 
         */
        public Builder interactionPropertyName(String interactionPropertyName) {
            $.interactionPropertyName = interactionPropertyName;
            return this;
        }

        /**
         * @param profilePropertyName The target profile property that maps to the source interaction property.
         * 
         * @return builder
         * 
         */
        public Builder profilePropertyName(String profilePropertyName) {
            $.profilePropertyName = profilePropertyName;
            return this;
        }

        public ParticipantProfilePropertyReferenceResponse build() {
            $.interactionPropertyName = Objects.requireNonNull($.interactionPropertyName, "expected parameter 'interactionPropertyName' to be non-null");
            $.profilePropertyName = Objects.requireNonNull($.profilePropertyName, "expected parameter 'profilePropertyName' to be non-null");
            return $;
        }
    }

}
