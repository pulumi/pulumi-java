// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.avs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalReachConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalReachConnectionArgs Empty = new GlobalReachConnectionArgs();

    /**
     * Authorization key from the peer express route used for the global reach connection
     * 
     */
    @Import(name="authorizationKey")
    private @Nullable Output<String> authorizationKey;

    /**
     * @return Authorization key from the peer express route used for the global reach connection
     * 
     */
    public Optional<Output<String>> authorizationKey() {
        return Optional.ofNullable(this.authorizationKey);
    }

    /**
     * Name of the global reach connection in the private cloud
     * 
     */
    @Import(name="globalReachConnectionName")
    private @Nullable Output<String> globalReachConnectionName;

    /**
     * @return Name of the global reach connection in the private cloud
     * 
     */
    public Optional<Output<String>> globalReachConnectionName() {
        return Optional.ofNullable(this.globalReachConnectionName);
    }

    /**
     * Identifier of the ExpressRoute Circuit to peer with in the global reach connection
     * 
     */
    @Import(name="peerExpressRouteCircuit")
    private @Nullable Output<String> peerExpressRouteCircuit;

    /**
     * @return Identifier of the ExpressRoute Circuit to peer with in the global reach connection
     * 
     */
    public Optional<Output<String>> peerExpressRouteCircuit() {
        return Optional.ofNullable(this.peerExpressRouteCircuit);
    }

    /**
     * The name of the private cloud.
     * 
     */
    @Import(name="privateCloudName", required=true)
    private Output<String> privateCloudName;

    /**
     * @return The name of the private cloud.
     * 
     */
    public Output<String> privateCloudName() {
        return this.privateCloudName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GlobalReachConnectionArgs() {}

    private GlobalReachConnectionArgs(GlobalReachConnectionArgs $) {
        this.authorizationKey = $.authorizationKey;
        this.globalReachConnectionName = $.globalReachConnectionName;
        this.peerExpressRouteCircuit = $.peerExpressRouteCircuit;
        this.privateCloudName = $.privateCloudName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalReachConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalReachConnectionArgs $;

        public Builder() {
            $ = new GlobalReachConnectionArgs();
        }

        public Builder(GlobalReachConnectionArgs defaults) {
            $ = new GlobalReachConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizationKey Authorization key from the peer express route used for the global reach connection
         * 
         * @return builder
         * 
         */
        public Builder authorizationKey(@Nullable Output<String> authorizationKey) {
            $.authorizationKey = authorizationKey;
            return this;
        }

        /**
         * @param authorizationKey Authorization key from the peer express route used for the global reach connection
         * 
         * @return builder
         * 
         */
        public Builder authorizationKey(String authorizationKey) {
            return authorizationKey(Output.of(authorizationKey));
        }

        /**
         * @param globalReachConnectionName Name of the global reach connection in the private cloud
         * 
         * @return builder
         * 
         */
        public Builder globalReachConnectionName(@Nullable Output<String> globalReachConnectionName) {
            $.globalReachConnectionName = globalReachConnectionName;
            return this;
        }

        /**
         * @param globalReachConnectionName Name of the global reach connection in the private cloud
         * 
         * @return builder
         * 
         */
        public Builder globalReachConnectionName(String globalReachConnectionName) {
            return globalReachConnectionName(Output.of(globalReachConnectionName));
        }

        /**
         * @param peerExpressRouteCircuit Identifier of the ExpressRoute Circuit to peer with in the global reach connection
         * 
         * @return builder
         * 
         */
        public Builder peerExpressRouteCircuit(@Nullable Output<String> peerExpressRouteCircuit) {
            $.peerExpressRouteCircuit = peerExpressRouteCircuit;
            return this;
        }

        /**
         * @param peerExpressRouteCircuit Identifier of the ExpressRoute Circuit to peer with in the global reach connection
         * 
         * @return builder
         * 
         */
        public Builder peerExpressRouteCircuit(String peerExpressRouteCircuit) {
            return peerExpressRouteCircuit(Output.of(peerExpressRouteCircuit));
        }

        /**
         * @param privateCloudName The name of the private cloud.
         * 
         * @return builder
         * 
         */
        public Builder privateCloudName(Output<String> privateCloudName) {
            $.privateCloudName = privateCloudName;
            return this;
        }

        /**
         * @param privateCloudName The name of the private cloud.
         * 
         * @return builder
         * 
         */
        public Builder privateCloudName(String privateCloudName) {
            return privateCloudName(Output.of(privateCloudName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GlobalReachConnectionArgs build() {
            $.privateCloudName = Objects.requireNonNull($.privateCloudName, "expected parameter 'privateCloudName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
