// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PerformanceCounterConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PerformanceCounterConfigurationArgs Empty = new PerformanceCounterConfigurationArgs();

    @Import(name="instance")
    private @Nullable Output<String> instance;

    public Optional<Output<String>> instance() {
        return Optional.ofNullable(this.instance);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="samplingPeriod", required=true)
    private Output<String> samplingPeriod;

    public Output<String> samplingPeriod() {
        return this.samplingPeriod;
    }

    private PerformanceCounterConfigurationArgs() {}

    private PerformanceCounterConfigurationArgs(PerformanceCounterConfigurationArgs $) {
        this.instance = $.instance;
        this.name = $.name;
        this.samplingPeriod = $.samplingPeriod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PerformanceCounterConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PerformanceCounterConfigurationArgs $;

        public Builder() {
            $ = new PerformanceCounterConfigurationArgs();
        }

        public Builder(PerformanceCounterConfigurationArgs defaults) {
            $ = new PerformanceCounterConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder instance(@Nullable Output<String> instance) {
            $.instance = instance;
            return this;
        }

        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder samplingPeriod(Output<String> samplingPeriod) {
            $.samplingPeriod = samplingPeriod;
            return this;
        }

        public Builder samplingPeriod(String samplingPeriod) {
            return samplingPeriod(Output.of(samplingPeriod));
        }

        public PerformanceCounterConfigurationArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.samplingPeriod = Objects.requireNonNull($.samplingPeriod, "expected parameter 'samplingPeriod' to be non-null");
            return $;
        }
    }

}
