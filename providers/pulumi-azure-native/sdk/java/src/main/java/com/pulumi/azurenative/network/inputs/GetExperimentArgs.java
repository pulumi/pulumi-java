// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetExperimentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetExperimentArgs Empty = new GetExperimentArgs();

    /**
     * The Experiment identifier associated with the Experiment
     * 
     */
    @Import(name="experimentName", required=true)
    private Output<String> experimentName;

    /**
     * @return The Experiment identifier associated with the Experiment
     * 
     */
    public Output<String> experimentName() {
        return this.experimentName;
    }

    /**
     * The Profile identifier associated with the Tenant and Partner
     * 
     */
    @Import(name="profileName", required=true)
    private Output<String> profileName;

    /**
     * @return The Profile identifier associated with the Tenant and Partner
     * 
     */
    public Output<String> profileName() {
        return this.profileName;
    }

    /**
     * Name of the Resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the Resource group within the Azure subscription.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetExperimentArgs() {}

    private GetExperimentArgs(GetExperimentArgs $) {
        this.experimentName = $.experimentName;
        this.profileName = $.profileName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetExperimentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetExperimentArgs $;

        public Builder() {
            $ = new GetExperimentArgs();
        }

        public Builder(GetExperimentArgs defaults) {
            $ = new GetExperimentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param experimentName The Experiment identifier associated with the Experiment
         * 
         * @return builder
         * 
         */
        public Builder experimentName(Output<String> experimentName) {
            $.experimentName = experimentName;
            return this;
        }

        /**
         * @param experimentName The Experiment identifier associated with the Experiment
         * 
         * @return builder
         * 
         */
        public Builder experimentName(String experimentName) {
            return experimentName(Output.of(experimentName));
        }

        /**
         * @param profileName The Profile identifier associated with the Tenant and Partner
         * 
         * @return builder
         * 
         */
        public Builder profileName(Output<String> profileName) {
            $.profileName = profileName;
            return this;
        }

        /**
         * @param profileName The Profile identifier associated with the Tenant and Partner
         * 
         * @return builder
         * 
         */
        public Builder profileName(String profileName) {
            return profileName(Output.of(profileName));
        }

        /**
         * @param resourceGroupName Name of the Resource group within the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the Resource group within the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetExperimentArgs build() {
            $.experimentName = Objects.requireNonNull($.experimentName, "expected parameter 'experimentName' to be non-null");
            $.profileName = Objects.requireNonNull($.profileName, "expected parameter 'profileName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
