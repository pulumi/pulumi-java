// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.portal.inputs;

import com.pulumi.azurenative.portal.inputs.MarkdownPartMetadataSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Markdown part metadata.
 * 
 */
public final class MarkdownPartMetadataArgs extends com.pulumi.resources.ResourceArgs {

    public static final MarkdownPartMetadataArgs Empty = new MarkdownPartMetadataArgs();

    /**
     * Input to dashboard part.
     * 
     */
    @Import(name="inputs")
      private final @Nullable Output<List<Object>> inputs;

    public Output<List<Object>> inputs() {
        return this.inputs == null ? Codegen.empty() : this.inputs;
    }

    /**
     * Markdown part settings.
     * 
     */
    @Import(name="settings")
      private final @Nullable Output<MarkdownPartMetadataSettingsArgs> settings;

    public Output<MarkdownPartMetadataSettingsArgs> settings() {
        return this.settings == null ? Codegen.empty() : this.settings;
    }

    /**
     * The type of dashboard part.
     * Expected value is &#39;Extension/HubsExtension/PartType/MarkdownPart&#39;.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    public MarkdownPartMetadataArgs(
        @Nullable Output<List<Object>> inputs,
        @Nullable Output<MarkdownPartMetadataSettingsArgs> settings,
        Output<String> type) {
        this.inputs = inputs;
        this.settings = settings;
        this.type = Codegen.stringProp("type").output().arg(type).require();
    }

    private MarkdownPartMetadataArgs() {
        this.inputs = Codegen.empty();
        this.settings = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MarkdownPartMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<Object>> inputs;
        private @Nullable Output<MarkdownPartMetadataSettingsArgs> settings;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(MarkdownPartMetadataArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inputs = defaults.inputs;
    	      this.settings = defaults.settings;
    	      this.type = defaults.type;
        }

        public Builder inputs(@Nullable Output<List<Object>> inputs) {
            this.inputs = inputs;
            return this;
        }
        public Builder inputs(@Nullable List<Object> inputs) {
            this.inputs = Codegen.ofNullable(inputs);
            return this;
        }
        public Builder inputs(Object... inputs) {
            return inputs(List.of(inputs));
        }
        public Builder settings(@Nullable Output<MarkdownPartMetadataSettingsArgs> settings) {
            this.settings = settings;
            return this;
        }
        public Builder settings(@Nullable MarkdownPartMetadataSettingsArgs settings) {
            this.settings = Codegen.ofNullable(settings);
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public MarkdownPartMetadataArgs build() {
            return new MarkdownPartMetadataArgs(inputs, settings, type);
        }
    }
}
