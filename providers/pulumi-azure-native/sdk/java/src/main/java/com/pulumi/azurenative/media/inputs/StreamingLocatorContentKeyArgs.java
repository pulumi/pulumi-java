// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class for content key in Streaming Locator
 * 
 */
public final class StreamingLocatorContentKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamingLocatorContentKeyArgs Empty = new StreamingLocatorContentKeyArgs();

    /**
     * ID of Content Key
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return ID of Content Key
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Label of Content Key as specified in the Streaming Policy
     * 
     */
    @Import(name="labelReferenceInStreamingPolicy")
    private @Nullable Output<String> labelReferenceInStreamingPolicy;

    /**
     * @return Label of Content Key as specified in the Streaming Policy
     * 
     */
    public Optional<Output<String>> labelReferenceInStreamingPolicy() {
        return Optional.ofNullable(this.labelReferenceInStreamingPolicy);
    }

    /**
     * Value of Content Key
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Value of Content Key
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private StreamingLocatorContentKeyArgs() {}

    private StreamingLocatorContentKeyArgs(StreamingLocatorContentKeyArgs $) {
        this.id = $.id;
        this.labelReferenceInStreamingPolicy = $.labelReferenceInStreamingPolicy;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamingLocatorContentKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamingLocatorContentKeyArgs $;

        public Builder() {
            $ = new StreamingLocatorContentKeyArgs();
        }

        public Builder(StreamingLocatorContentKeyArgs defaults) {
            $ = new StreamingLocatorContentKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id ID of Content Key
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID of Content Key
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param labelReferenceInStreamingPolicy Label of Content Key as specified in the Streaming Policy
         * 
         * @return builder
         * 
         */
        public Builder labelReferenceInStreamingPolicy(@Nullable Output<String> labelReferenceInStreamingPolicy) {
            $.labelReferenceInStreamingPolicy = labelReferenceInStreamingPolicy;
            return this;
        }

        /**
         * @param labelReferenceInStreamingPolicy Label of Content Key as specified in the Streaming Policy
         * 
         * @return builder
         * 
         */
        public Builder labelReferenceInStreamingPolicy(String labelReferenceInStreamingPolicy) {
            return labelReferenceInStreamingPolicy(Output.of(labelReferenceInStreamingPolicy));
        }

        /**
         * @param value Value of Content Key
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value of Content Key
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public StreamingLocatorContentKeyArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
