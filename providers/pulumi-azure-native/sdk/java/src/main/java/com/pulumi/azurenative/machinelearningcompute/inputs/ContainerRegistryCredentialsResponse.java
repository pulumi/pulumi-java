// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningcompute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Information about the Azure Container Registry which contains the images deployed to the cluster.
 * 
 */
public final class ContainerRegistryCredentialsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContainerRegistryCredentialsResponse Empty = new ContainerRegistryCredentialsResponse();

    /**
     * The ACR login server name. User name is the first part of the FQDN.
     * 
     */
    @Import(name="loginServer", required=true)
    private String loginServer;

    public String loginServer() {
        return this.loginServer;
    }

    /**
     * The ACR primary password.
     * 
     */
    @Import(name="password", required=true)
    private String password;

    public String password() {
        return this.password;
    }

    /**
     * The ACR secondary password.
     * 
     */
    @Import(name="password2", required=true)
    private String password2;

    public String password2() {
        return this.password2;
    }

    /**
     * The ACR login username.
     * 
     */
    @Import(name="username", required=true)
    private String username;

    public String username() {
        return this.username;
    }

    private ContainerRegistryCredentialsResponse() {}

    private ContainerRegistryCredentialsResponse(ContainerRegistryCredentialsResponse $) {
        this.loginServer = $.loginServer;
        this.password = $.password;
        this.password2 = $.password2;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerRegistryCredentialsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerRegistryCredentialsResponse $;

        public Builder() {
            $ = new ContainerRegistryCredentialsResponse();
        }

        public Builder(ContainerRegistryCredentialsResponse defaults) {
            $ = new ContainerRegistryCredentialsResponse(Objects.requireNonNull(defaults));
        }

        public Builder loginServer(String loginServer) {
            $.loginServer = loginServer;
            return this;
        }

        public Builder password(String password) {
            $.password = password;
            return this;
        }

        public Builder password2(String password2) {
            $.password2 = password2;
            return this;
        }

        public Builder username(String username) {
            $.username = username;
            return this;
        }

        public ContainerRegistryCredentialsResponse build() {
            $.loginServer = Objects.requireNonNull($.loginServer, "expected parameter 'loginServer' to be non-null");
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.password2 = Objects.requireNonNull($.password2, "expected parameter 'password2' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
