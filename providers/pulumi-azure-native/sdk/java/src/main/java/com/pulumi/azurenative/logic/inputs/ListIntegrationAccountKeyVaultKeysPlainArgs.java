// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.inputs.KeyVaultReference;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListIntegrationAccountKeyVaultKeysPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListIntegrationAccountKeyVaultKeysPlainArgs Empty = new ListIntegrationAccountKeyVaultKeysPlainArgs();

    /**
     * The integration account name.
     * 
     */
    @Import(name="integrationAccountName", required=true)
    private String integrationAccountName;

    /**
     * @return The integration account name.
     * 
     */
    public String integrationAccountName() {
        return this.integrationAccountName;
    }

    /**
     * The key vault reference.
     * 
     */
    @Import(name="keyVault", required=true)
    private KeyVaultReference keyVault;

    /**
     * @return The key vault reference.
     * 
     */
    public KeyVaultReference keyVault() {
        return this.keyVault;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The resource group name.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The skip token.
     * 
     */
    @Import(name="skipToken")
    private @Nullable String skipToken;

    /**
     * @return The skip token.
     * 
     */
    public Optional<String> skipToken() {
        return Optional.ofNullable(this.skipToken);
    }

    private ListIntegrationAccountKeyVaultKeysPlainArgs() {}

    private ListIntegrationAccountKeyVaultKeysPlainArgs(ListIntegrationAccountKeyVaultKeysPlainArgs $) {
        this.integrationAccountName = $.integrationAccountName;
        this.keyVault = $.keyVault;
        this.resourceGroupName = $.resourceGroupName;
        this.skipToken = $.skipToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListIntegrationAccountKeyVaultKeysPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListIntegrationAccountKeyVaultKeysPlainArgs $;

        public Builder() {
            $ = new ListIntegrationAccountKeyVaultKeysPlainArgs();
        }

        public Builder(ListIntegrationAccountKeyVaultKeysPlainArgs defaults) {
            $ = new ListIntegrationAccountKeyVaultKeysPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param integrationAccountName The integration account name.
         * 
         * @return builder
         * 
         */
        public Builder integrationAccountName(String integrationAccountName) {
            $.integrationAccountName = integrationAccountName;
            return this;
        }

        /**
         * @param keyVault The key vault reference.
         * 
         * @return builder
         * 
         */
        public Builder keyVault(KeyVaultReference keyVault) {
            $.keyVault = keyVault;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param skipToken The skip token.
         * 
         * @return builder
         * 
         */
        public Builder skipToken(@Nullable String skipToken) {
            $.skipToken = skipToken;
            return this;
        }

        public ListIntegrationAccountKeyVaultKeysPlainArgs build() {
            $.integrationAccountName = Objects.requireNonNull($.integrationAccountName, "expected parameter 'integrationAccountName' to be non-null");
            $.keyVault = Objects.requireNonNull($.keyVault, "expected parameter 'keyVault' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
