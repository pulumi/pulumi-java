// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.avs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * The properties of a default cluster
 * 
 */
public final class ManagementClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementClusterArgs Empty = new ManagementClusterArgs();

    /**
     * The cluster size
     * 
     */
    @Import(name="clusterSize", required=true)
    private Output<Integer> clusterSize;

    /**
     * @return The cluster size
     * 
     */
    public Output<Integer> clusterSize() {
        return this.clusterSize;
    }

    private ManagementClusterArgs() {}

    private ManagementClusterArgs(ManagementClusterArgs $) {
        this.clusterSize = $.clusterSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementClusterArgs $;

        public Builder() {
            $ = new ManagementClusterArgs();
        }

        public Builder(ManagementClusterArgs defaults) {
            $ = new ManagementClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterSize The cluster size
         * 
         * @return builder
         * 
         */
        public Builder clusterSize(Output<Integer> clusterSize) {
            $.clusterSize = clusterSize;
            return this;
        }

        /**
         * @param clusterSize The cluster size
         * 
         * @return builder
         * 
         */
        public Builder clusterSize(Integer clusterSize) {
            return clusterSize(Output.of(clusterSize));
        }

        public ManagementClusterArgs build() {
            $.clusterSize = Objects.requireNonNull($.clusterSize, "expected parameter 'clusterSize' to be non-null");
            return $;
        }
    }

}
