// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.inputs.ThrottlingMetricResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThrottlingRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final ThrottlingRuleResponse Empty = new ThrottlingRuleResponse();

    @Import(name="action", required=true)
    private String action;

    public String action() {
        return this.action;
    }

    @Import(name="metrics", required=true)
    private List<ThrottlingMetricResponse> metrics;

    public List<ThrottlingMetricResponse> metrics() {
        return this.metrics;
    }

    @Import(name="requiredFeatures")
    private @Nullable List<String> requiredFeatures;

    public Optional<List<String>> requiredFeatures() {
        return Optional.ofNullable(this.requiredFeatures);
    }

    private ThrottlingRuleResponse() {}

    private ThrottlingRuleResponse(ThrottlingRuleResponse $) {
        this.action = $.action;
        this.metrics = $.metrics;
        this.requiredFeatures = $.requiredFeatures;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThrottlingRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThrottlingRuleResponse $;

        public Builder() {
            $ = new ThrottlingRuleResponse();
        }

        public Builder(ThrottlingRuleResponse defaults) {
            $ = new ThrottlingRuleResponse(Objects.requireNonNull(defaults));
        }

        public Builder action(String action) {
            $.action = action;
            return this;
        }

        public Builder metrics(List<ThrottlingMetricResponse> metrics) {
            $.metrics = metrics;
            return this;
        }

        public Builder metrics(ThrottlingMetricResponse... metrics) {
            return metrics(List.of(metrics));
        }

        public Builder requiredFeatures(@Nullable List<String> requiredFeatures) {
            $.requiredFeatures = requiredFeatures;
            return this;
        }

        public Builder requiredFeatures(String... requiredFeatures) {
            return requiredFeatures(List.of(requiredFeatures));
        }

        public ThrottlingRuleResponse build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.metrics = Objects.requireNonNull($.metrics, "expected parameter 'metrics' to be non-null");
            return $;
        }
    }

}
