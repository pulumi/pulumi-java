// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.importexport.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Contains information about the Microsoft datacenter to which the drives should be shipped.
 * 
 */
public final class ShippingInformationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ShippingInformationResponse Empty = new ShippingInformationResponse();

    /**
     * Additional shipping information for customer, specific to datacenter to which customer should send their disks.
     * 
     */
    @Import(name="additionalInformation", required=true)
    private String additionalInformation;

    public String additionalInformation() {
        return this.additionalInformation;
    }

    /**
     * The city name to use when returning the drives.
     * 
     */
    @Import(name="city")
    private @Nullable String city;

    public Optional<String> city() {
        return Optional.ofNullable(this.city);
    }

    /**
     * The country or region to use when returning the drives.
     * 
     */
    @Import(name="countryOrRegion")
    private @Nullable String countryOrRegion;

    public Optional<String> countryOrRegion() {
        return Optional.ofNullable(this.countryOrRegion);
    }

    /**
     * Phone number of the recipient of the returned drives.
     * 
     */
    @Import(name="phone")
    private @Nullable String phone;

    public Optional<String> phone() {
        return Optional.ofNullable(this.phone);
    }

    /**
     * The postal code to use when returning the drives.
     * 
     */
    @Import(name="postalCode")
    private @Nullable String postalCode;

    public Optional<String> postalCode() {
        return Optional.ofNullable(this.postalCode);
    }

    /**
     * The name of the recipient who will receive the hard drives when they are returned.
     * 
     */
    @Import(name="recipientName")
    private @Nullable String recipientName;

    public Optional<String> recipientName() {
        return Optional.ofNullable(this.recipientName);
    }

    /**
     * The state or province to use when returning the drives.
     * 
     */
    @Import(name="stateOrProvince")
    private @Nullable String stateOrProvince;

    public Optional<String> stateOrProvince() {
        return Optional.ofNullable(this.stateOrProvince);
    }

    /**
     * The first line of the street address to use when returning the drives.
     * 
     */
    @Import(name="streetAddress1")
    private @Nullable String streetAddress1;

    public Optional<String> streetAddress1() {
        return Optional.ofNullable(this.streetAddress1);
    }

    /**
     * The second line of the street address to use when returning the drives.
     * 
     */
    @Import(name="streetAddress2")
    private @Nullable String streetAddress2;

    public Optional<String> streetAddress2() {
        return Optional.ofNullable(this.streetAddress2);
    }

    private ShippingInformationResponse() {}

    private ShippingInformationResponse(ShippingInformationResponse $) {
        this.additionalInformation = $.additionalInformation;
        this.city = $.city;
        this.countryOrRegion = $.countryOrRegion;
        this.phone = $.phone;
        this.postalCode = $.postalCode;
        this.recipientName = $.recipientName;
        this.stateOrProvince = $.stateOrProvince;
        this.streetAddress1 = $.streetAddress1;
        this.streetAddress2 = $.streetAddress2;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShippingInformationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShippingInformationResponse $;

        public Builder() {
            $ = new ShippingInformationResponse();
        }

        public Builder(ShippingInformationResponse defaults) {
            $ = new ShippingInformationResponse(Objects.requireNonNull(defaults));
        }

        public Builder additionalInformation(String additionalInformation) {
            $.additionalInformation = additionalInformation;
            return this;
        }

        public Builder city(@Nullable String city) {
            $.city = city;
            return this;
        }

        public Builder countryOrRegion(@Nullable String countryOrRegion) {
            $.countryOrRegion = countryOrRegion;
            return this;
        }

        public Builder phone(@Nullable String phone) {
            $.phone = phone;
            return this;
        }

        public Builder postalCode(@Nullable String postalCode) {
            $.postalCode = postalCode;
            return this;
        }

        public Builder recipientName(@Nullable String recipientName) {
            $.recipientName = recipientName;
            return this;
        }

        public Builder stateOrProvince(@Nullable String stateOrProvince) {
            $.stateOrProvince = stateOrProvince;
            return this;
        }

        public Builder streetAddress1(@Nullable String streetAddress1) {
            $.streetAddress1 = streetAddress1;
            return this;
        }

        public Builder streetAddress2(@Nullable String streetAddress2) {
            $.streetAddress2 = streetAddress2;
            return this;
        }

        public ShippingInformationResponse build() {
            $.additionalInformation = Objects.requireNonNull($.additionalInformation, "expected parameter 'additionalInformation' to be non-null");
            return $;
        }
    }

}
