// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.azurenative.storage.inputs.BlobInventoryPolicyFilterResponse;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * An object that defines the blob inventory rule. Each definition consists of a set of filters.
 * 
 */
public final class BlobInventoryPolicyDefinitionResponse extends com.pulumi.resources.InvokeArgs {

    public static final BlobInventoryPolicyDefinitionResponse Empty = new BlobInventoryPolicyDefinitionResponse();

    /**
     * An object that defines the filter set.
     * 
     */
    @Import(name="filters", required=true)
    private BlobInventoryPolicyFilterResponse filters;

    /**
     * @return An object that defines the filter set.
     * 
     */
    public BlobInventoryPolicyFilterResponse filters() {
        return this.filters;
    }

    private BlobInventoryPolicyDefinitionResponse() {}

    private BlobInventoryPolicyDefinitionResponse(BlobInventoryPolicyDefinitionResponse $) {
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlobInventoryPolicyDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlobInventoryPolicyDefinitionResponse $;

        public Builder() {
            $ = new BlobInventoryPolicyDefinitionResponse();
        }

        public Builder(BlobInventoryPolicyDefinitionResponse defaults) {
            $ = new BlobInventoryPolicyDefinitionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters An object that defines the filter set.
         * 
         * @return builder
         * 
         */
        public Builder filters(BlobInventoryPolicyFilterResponse filters) {
            $.filters = filters;
            return this;
        }

        public BlobInventoryPolicyDefinitionResponse build() {
            $.filters = Objects.requireNonNull($.filters, "expected parameter 'filters' to be non-null");
            return $;
        }
    }

}
