// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The API deployment parameter metadata.
 * 
 */
public final class ApiDeploymentParameterMetadataResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApiDeploymentParameterMetadataResponse Empty = new ApiDeploymentParameterMetadataResponse();

    /**
     * The description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return The description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return The display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Indicates whether its required.
     * 
     */
    @Import(name="isRequired")
    private @Nullable Boolean isRequired;

    /**
     * @return Indicates whether its required.
     * 
     */
    public Optional<Boolean> isRequired() {
        return Optional.ofNullable(this.isRequired);
    }

    /**
     * The type.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return The type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The visibility.
     * 
     */
    @Import(name="visibility")
    private @Nullable String visibility;

    /**
     * @return The visibility.
     * 
     */
    public Optional<String> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    private ApiDeploymentParameterMetadataResponse() {}

    private ApiDeploymentParameterMetadataResponse(ApiDeploymentParameterMetadataResponse $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.isRequired = $.isRequired;
        this.type = $.type;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiDeploymentParameterMetadataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiDeploymentParameterMetadataResponse $;

        public Builder() {
            $ = new ApiDeploymentParameterMetadataResponse();
        }

        public Builder(ApiDeploymentParameterMetadataResponse defaults) {
            $ = new ApiDeploymentParameterMetadataResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param displayName The display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param isRequired Indicates whether its required.
         * 
         * @return builder
         * 
         */
        public Builder isRequired(@Nullable Boolean isRequired) {
            $.isRequired = isRequired;
            return this;
        }

        /**
         * @param type The type.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        /**
         * @param visibility The visibility.
         * 
         * @return builder
         * 
         */
        public Builder visibility(@Nullable String visibility) {
            $.visibility = visibility;
            return this;
        }

        public ApiDeploymentParameterMetadataResponse build() {
            return $;
        }
    }

}
