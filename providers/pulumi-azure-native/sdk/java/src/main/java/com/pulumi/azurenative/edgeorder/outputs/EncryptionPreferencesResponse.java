// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EncryptionPreferencesResponse {
    /**
     * @return Double encryption status as entered by the customer. It is compulsory to give this parameter if the &#39;Deny&#39; or &#39;Disabled&#39; policy is configured.
     * 
     */
    private final @Nullable String doubleEncryptionStatus;

    @CustomType.Constructor
    private EncryptionPreferencesResponse(@CustomType.Parameter("doubleEncryptionStatus") @Nullable String doubleEncryptionStatus) {
        this.doubleEncryptionStatus = doubleEncryptionStatus;
    }

    /**
     * @return Double encryption status as entered by the customer. It is compulsory to give this parameter if the &#39;Deny&#39; or &#39;Disabled&#39; policy is configured.
     * 
     */
    public Optional<String> doubleEncryptionStatus() {
        return Optional.ofNullable(this.doubleEncryptionStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionPreferencesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String doubleEncryptionStatus;

        public Builder() {
    	      // Empty
        }

        public Builder(EncryptionPreferencesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.doubleEncryptionStatus = defaults.doubleEncryptionStatus;
        }

        public Builder doubleEncryptionStatus(@Nullable String doubleEncryptionStatus) {
            this.doubleEncryptionStatus = doubleEncryptionStatus;
            return this;
        }        public EncryptionPreferencesResponse build() {
            return new EncryptionPreferencesResponse(doubleEncryptionStatus);
        }
    }
}
