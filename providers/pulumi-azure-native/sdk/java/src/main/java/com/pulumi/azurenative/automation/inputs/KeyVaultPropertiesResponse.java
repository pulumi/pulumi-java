// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Settings concerning key vault encryption for a configuration store.
 * 
 */
public final class KeyVaultPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final KeyVaultPropertiesResponse Empty = new KeyVaultPropertiesResponse();

    /**
     * The name of key used to encrypt data.
     * 
     */
    @Import(name="keyName")
    private @Nullable String keyName;

    public Optional<String> keyName() {
        return Optional.ofNullable(this.keyName);
    }

    /**
     * The key version of the key used to encrypt data.
     * 
     */
    @Import(name="keyVersion")
    private @Nullable String keyVersion;

    public Optional<String> keyVersion() {
        return Optional.ofNullable(this.keyVersion);
    }

    /**
     * The URI of the key vault key used to encrypt data.
     * 
     */
    @Import(name="keyvaultUri")
    private @Nullable String keyvaultUri;

    public Optional<String> keyvaultUri() {
        return Optional.ofNullable(this.keyvaultUri);
    }

    private KeyVaultPropertiesResponse() {}

    private KeyVaultPropertiesResponse(KeyVaultPropertiesResponse $) {
        this.keyName = $.keyName;
        this.keyVersion = $.keyVersion;
        this.keyvaultUri = $.keyvaultUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyVaultPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVaultPropertiesResponse $;

        public Builder() {
            $ = new KeyVaultPropertiesResponse();
        }

        public Builder(KeyVaultPropertiesResponse defaults) {
            $ = new KeyVaultPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder keyName(@Nullable String keyName) {
            $.keyName = keyName;
            return this;
        }

        public Builder keyVersion(@Nullable String keyVersion) {
            $.keyVersion = keyVersion;
            return this;
        }

        public Builder keyvaultUri(@Nullable String keyvaultUri) {
            $.keyvaultUri = keyvaultUri;
            return this;
        }

        public KeyVaultPropertiesResponse build() {
            return $;
        }
    }

}
