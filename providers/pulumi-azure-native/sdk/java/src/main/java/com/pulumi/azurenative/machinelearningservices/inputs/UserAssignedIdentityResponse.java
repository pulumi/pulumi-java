// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * User Assigned Identity
 * 
 */
public final class UserAssignedIdentityResponse extends com.pulumi.resources.InvokeArgs {

    public static final UserAssignedIdentityResponse Empty = new UserAssignedIdentityResponse();

    /**
     * The clientId(aka appId) of the user assigned identity.
     * 
     */
    @Import(name="clientId", required=true)
    private String clientId;

    /**
     * @return The clientId(aka appId) of the user assigned identity.
     * 
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * The principal ID of the user assigned identity.
     * 
     */
    @Import(name="principalId", required=true)
    private String principalId;

    /**
     * @return The principal ID of the user assigned identity.
     * 
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * The tenant ID of the user assigned identity.
     * 
     */
    @Import(name="tenantId", required=true)
    private String tenantId;

    /**
     * @return The tenant ID of the user assigned identity.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    private UserAssignedIdentityResponse() {}

    private UserAssignedIdentityResponse(UserAssignedIdentityResponse $) {
        this.clientId = $.clientId;
        this.principalId = $.principalId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAssignedIdentityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAssignedIdentityResponse $;

        public Builder() {
            $ = new UserAssignedIdentityResponse();
        }

        public Builder(UserAssignedIdentityResponse defaults) {
            $ = new UserAssignedIdentityResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId The clientId(aka appId) of the user assigned identity.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param principalId The principal ID of the user assigned identity.
         * 
         * @return builder
         * 
         */
        public Builder principalId(String principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param tenantId The tenant ID of the user assigned identity.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public UserAssignedIdentityResponse build() {
            $.clientId = Objects.requireNonNull($.clientId, "expected parameter 'clientId' to be non-null");
            $.principalId = Objects.requireNonNull($.principalId, "expected parameter 'principalId' to be non-null");
            $.tenantId = Objects.requireNonNull($.tenantId, "expected parameter 'tenantId' to be non-null");
            return $;
        }
    }

}
