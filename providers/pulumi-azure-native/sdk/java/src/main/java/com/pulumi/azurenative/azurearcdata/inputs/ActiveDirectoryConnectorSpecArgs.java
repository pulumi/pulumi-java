// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurearcdata.inputs;

import com.pulumi.azurenative.azurearcdata.inputs.ActiveDirectoryConnectorDNSDetailsArgs;
import com.pulumi.azurenative.azurearcdata.inputs.ActiveDirectoryConnectorDomainDetailsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * The specifications of the AD Kubernetes resource.
 * 
 */
public final class ActiveDirectoryConnectorSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActiveDirectoryConnectorSpecArgs Empty = new ActiveDirectoryConnectorSpecArgs();

    /**
     * null
     * 
     */
    @Import(name="activeDirectory", required=true)
    private Output<ActiveDirectoryConnectorDomainDetailsArgs> activeDirectory;

    /**
     * @return null
     * 
     */
    public Output<ActiveDirectoryConnectorDomainDetailsArgs> activeDirectory() {
        return this.activeDirectory;
    }

    /**
     * null
     * 
     */
    @Import(name="dns", required=true)
    private Output<ActiveDirectoryConnectorDNSDetailsArgs> dns;

    /**
     * @return null
     * 
     */
    public Output<ActiveDirectoryConnectorDNSDetailsArgs> dns() {
        return this.dns;
    }

    private ActiveDirectoryConnectorSpecArgs() {}

    private ActiveDirectoryConnectorSpecArgs(ActiveDirectoryConnectorSpecArgs $) {
        this.activeDirectory = $.activeDirectory;
        this.dns = $.dns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActiveDirectoryConnectorSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActiveDirectoryConnectorSpecArgs $;

        public Builder() {
            $ = new ActiveDirectoryConnectorSpecArgs();
        }

        public Builder(ActiveDirectoryConnectorSpecArgs defaults) {
            $ = new ActiveDirectoryConnectorSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeDirectory null
         * 
         * @return builder
         * 
         */
        public Builder activeDirectory(Output<ActiveDirectoryConnectorDomainDetailsArgs> activeDirectory) {
            $.activeDirectory = activeDirectory;
            return this;
        }

        /**
         * @param activeDirectory null
         * 
         * @return builder
         * 
         */
        public Builder activeDirectory(ActiveDirectoryConnectorDomainDetailsArgs activeDirectory) {
            return activeDirectory(Output.of(activeDirectory));
        }

        /**
         * @param dns null
         * 
         * @return builder
         * 
         */
        public Builder dns(Output<ActiveDirectoryConnectorDNSDetailsArgs> dns) {
            $.dns = dns;
            return this;
        }

        /**
         * @param dns null
         * 
         * @return builder
         * 
         */
        public Builder dns(ActiveDirectoryConnectorDNSDetailsArgs dns) {
            return dns(Output.of(dns));
        }

        public ActiveDirectoryConnectorSpecArgs build() {
            $.activeDirectory = Objects.requireNonNull($.activeDirectory, "expected parameter 'activeDirectory' to be non-null");
            $.dns = Objects.requireNonNull($.dns, "expected parameter 'dns' to be non-null");
            return $;
        }
    }

}
