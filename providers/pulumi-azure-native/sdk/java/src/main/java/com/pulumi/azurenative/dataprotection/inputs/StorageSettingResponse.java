// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dataprotection.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Storage setting
 * 
 */
public final class StorageSettingResponse extends com.pulumi.resources.InvokeArgs {

    public static final StorageSettingResponse Empty = new StorageSettingResponse();

    /**
     * Gets or sets the type of the datastore.
     * 
     */
    @Import(name="datastoreType")
    private @Nullable String datastoreType;

    public Optional<String> datastoreType() {
        return Optional.ofNullable(this.datastoreType);
    }

    /**
     * Gets or sets the type.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private StorageSettingResponse() {}

    private StorageSettingResponse(StorageSettingResponse $) {
        this.datastoreType = $.datastoreType;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageSettingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageSettingResponse $;

        public Builder() {
            $ = new StorageSettingResponse();
        }

        public Builder(StorageSettingResponse defaults) {
            $ = new StorageSettingResponse(Objects.requireNonNull(defaults));
        }

        public Builder datastoreType(@Nullable String datastoreType) {
            $.datastoreType = datastoreType;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public StorageSettingResponse build() {
            return $;
        }
    }

}
