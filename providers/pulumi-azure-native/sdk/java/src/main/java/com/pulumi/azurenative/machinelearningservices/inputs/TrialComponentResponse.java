// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.InputDataBindingResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.MpiResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.OutputDataBindingResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.PyTorchResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.TensorFlowResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Trial component definition.
 * 
 */
public final class TrialComponentResponse extends com.pulumi.resources.InvokeArgs {

    public static final TrialComponentResponse Empty = new TrialComponentResponse();

    /**
     * ARM resource ID of the code asset.
     * 
     */
    @Import(name="codeId")
    private @Nullable String codeId;

    /**
     * @return ARM resource ID of the code asset.
     * 
     */
    public Optional<String> codeId() {
        return Optional.ofNullable(this.codeId);
    }

    /**
     * The command to execute on startup of the job. eg. &#34;python train.py&#34;
     * 
     */
    @Import(name="command", required=true)
    private String command;

    /**
     * @return The command to execute on startup of the job. eg. &#34;python train.py&#34;
     * 
     */
    public String command() {
        return this.command;
    }

    /**
     * Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
     * 
     */
    @Import(name="distribution")
    private @Nullable Object distribution;

    /**
     * @return Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
     * 
     */
    public Optional<Object> distribution() {
        return Optional.ofNullable(this.distribution);
    }

    /**
     * The ARM resource ID of the Environment specification for the job.
     * 
     */
    @Import(name="environmentId")
    private @Nullable String environmentId;

    /**
     * @return The ARM resource ID of the Environment specification for the job.
     * 
     */
    public Optional<String> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }

    /**
     * Environment variables included in the job.
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable Map<String,String> environmentVariables;

    /**
     * @return Environment variables included in the job.
     * 
     */
    public Optional<Map<String,String>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * Mapping of input data bindings used in the job.
     * 
     */
    @Import(name="inputDataBindings")
    private @Nullable Map<String,InputDataBindingResponse> inputDataBindings;

    /**
     * @return Mapping of input data bindings used in the job.
     * 
     */
    public Optional<Map<String,InputDataBindingResponse>> inputDataBindings() {
        return Optional.ofNullable(this.inputDataBindings);
    }

    /**
     * Mapping of output data bindings used in the job.
     * 
     */
    @Import(name="outputDataBindings")
    private @Nullable Map<String,OutputDataBindingResponse> outputDataBindings;

    /**
     * @return Mapping of output data bindings used in the job.
     * 
     */
    public Optional<Map<String,OutputDataBindingResponse>> outputDataBindings() {
        return Optional.ofNullable(this.outputDataBindings);
    }

    /**
     * The max run duration in ISO 8601 format, after which the trial component will be cancelled.
     * Only supports duration with precision as low as Seconds.
     * 
     */
    @Import(name="timeout")
    private @Nullable String timeout;

    /**
     * @return The max run duration in ISO 8601 format, after which the trial component will be cancelled.
     * Only supports duration with precision as low as Seconds.
     * 
     */
    public Optional<String> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private TrialComponentResponse() {}

    private TrialComponentResponse(TrialComponentResponse $) {
        this.codeId = $.codeId;
        this.command = $.command;
        this.distribution = $.distribution;
        this.environmentId = $.environmentId;
        this.environmentVariables = $.environmentVariables;
        this.inputDataBindings = $.inputDataBindings;
        this.outputDataBindings = $.outputDataBindings;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrialComponentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrialComponentResponse $;

        public Builder() {
            $ = new TrialComponentResponse();
        }

        public Builder(TrialComponentResponse defaults) {
            $ = new TrialComponentResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param codeId ARM resource ID of the code asset.
         * 
         * @return builder
         * 
         */
        public Builder codeId(@Nullable String codeId) {
            $.codeId = codeId;
            return this;
        }

        /**
         * @param command The command to execute on startup of the job. eg. &#34;python train.py&#34;
         * 
         * @return builder
         * 
         */
        public Builder command(String command) {
            $.command = command;
            return this;
        }

        /**
         * @param distribution Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
         * 
         * @return builder
         * 
         */
        public Builder distribution(@Nullable Object distribution) {
            $.distribution = distribution;
            return this;
        }

        /**
         * @param environmentId The ARM resource ID of the Environment specification for the job.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(@Nullable String environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param environmentVariables Environment variables included in the job.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(@Nullable Map<String,String> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        /**
         * @param inputDataBindings Mapping of input data bindings used in the job.
         * 
         * @return builder
         * 
         */
        public Builder inputDataBindings(@Nullable Map<String,InputDataBindingResponse> inputDataBindings) {
            $.inputDataBindings = inputDataBindings;
            return this;
        }

        /**
         * @param outputDataBindings Mapping of output data bindings used in the job.
         * 
         * @return builder
         * 
         */
        public Builder outputDataBindings(@Nullable Map<String,OutputDataBindingResponse> outputDataBindings) {
            $.outputDataBindings = outputDataBindings;
            return this;
        }

        /**
         * @param timeout The max run duration in ISO 8601 format, after which the trial component will be cancelled.
         * Only supports duration with precision as low as Seconds.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable String timeout) {
            $.timeout = timeout;
            return this;
        }

        public TrialComponentResponse build() {
            $.command = Objects.requireNonNull($.command, "expected parameter 'command' to be non-null");
            return $;
        }
    }

}
