// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * The container instance state.
 * 
 */
public final class ContainerStateResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContainerStateResponse Empty = new ContainerStateResponse();

    /**
     * The human-readable status of the container instance state.
     * 
     */
    @Import(name="detailStatus", required=true)
    private String detailStatus;

    /**
     * @return The human-readable status of the container instance state.
     * 
     */
    public String detailStatus() {
        return this.detailStatus;
    }

    /**
     * The container instance exit codes correspond to those from the `docker run` command.
     * 
     */
    @Import(name="exitCode", required=true)
    private Integer exitCode;

    /**
     * @return The container instance exit codes correspond to those from the `docker run` command.
     * 
     */
    public Integer exitCode() {
        return this.exitCode;
    }

    /**
     * The date-time when the container instance state finished.
     * 
     */
    @Import(name="finishTime", required=true)
    private String finishTime;

    /**
     * @return The date-time when the container instance state finished.
     * 
     */
    public String finishTime() {
        return this.finishTime;
    }

    /**
     * The date-time when the container instance state started.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    /**
     * @return The date-time when the container instance state started.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * The state of the container instance.
     * 
     */
    @Import(name="state", required=true)
    private String state;

    /**
     * @return The state of the container instance.
     * 
     */
    public String state() {
        return this.state;
    }

    private ContainerStateResponse() {}

    private ContainerStateResponse(ContainerStateResponse $) {
        this.detailStatus = $.detailStatus;
        this.exitCode = $.exitCode;
        this.finishTime = $.finishTime;
        this.startTime = $.startTime;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerStateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerStateResponse $;

        public Builder() {
            $ = new ContainerStateResponse();
        }

        public Builder(ContainerStateResponse defaults) {
            $ = new ContainerStateResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param detailStatus The human-readable status of the container instance state.
         * 
         * @return builder
         * 
         */
        public Builder detailStatus(String detailStatus) {
            $.detailStatus = detailStatus;
            return this;
        }

        /**
         * @param exitCode The container instance exit codes correspond to those from the `docker run` command.
         * 
         * @return builder
         * 
         */
        public Builder exitCode(Integer exitCode) {
            $.exitCode = exitCode;
            return this;
        }

        /**
         * @param finishTime The date-time when the container instance state finished.
         * 
         * @return builder
         * 
         */
        public Builder finishTime(String finishTime) {
            $.finishTime = finishTime;
            return this;
        }

        /**
         * @param startTime The date-time when the container instance state started.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param state The state of the container instance.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            $.state = state;
            return this;
        }

        public ContainerStateResponse build() {
            $.detailStatus = Objects.requireNonNull($.detailStatus, "expected parameter 'detailStatus' to be non-null");
            $.exitCode = Objects.requireNonNull($.exitCode, "expected parameter 'exitCode' to be non-null");
            $.finishTime = Objects.requireNonNull($.finishTime, "expected parameter 'finishTime' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            $.state = Objects.requireNonNull($.state, "expected parameter 'state' to be non-null");
            return $;
        }
    }

}
