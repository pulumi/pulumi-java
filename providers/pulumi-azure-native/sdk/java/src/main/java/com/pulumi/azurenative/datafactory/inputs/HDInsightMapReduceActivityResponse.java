// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.ActivityDependencyResponse;
import com.pulumi.azurenative.datafactory.inputs.ActivityPolicyResponse;
import com.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.UserPropertyResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * HDInsight MapReduce activity type.
 * 
 */
public final class HDInsightMapReduceActivityResponse extends com.pulumi.resources.InvokeArgs {

    public static final HDInsightMapReduceActivityResponse Empty = new HDInsightMapReduceActivityResponse();

    /**
     * User specified arguments to HDInsightActivity.
     * 
     */
    @Import(name="arguments")
    private @Nullable List<Object> arguments;

    public Optional<List<Object>> arguments() {
        return Optional.ofNullable(this.arguments);
    }

    /**
     * Class name. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="className", required=true)
    private Object className;

    public Object className() {
        return this.className;
    }

    /**
     * Allows user to specify defines for the MapReduce job request.
     * 
     */
    @Import(name="defines")
    private @Nullable Map<String,Object> defines;

    public Optional<Map<String,Object>> defines() {
        return Optional.ofNullable(this.defines);
    }

    /**
     * Activity depends on condition.
     * 
     */
    @Import(name="dependsOn")
    private @Nullable List<ActivityDependencyResponse> dependsOn;

    public Optional<List<ActivityDependencyResponse>> dependsOn() {
        return Optional.ofNullable(this.dependsOn);
    }

    /**
     * Activity description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Debug info option.
     * 
     */
    @Import(name="getDebugInfo")
    private @Nullable String getDebugInfo;

    public Optional<String> getDebugInfo() {
        return Optional.ofNullable(this.getDebugInfo);
    }

    /**
     * Jar path. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="jarFilePath", required=true)
    private Object jarFilePath;

    public Object jarFilePath() {
        return this.jarFilePath;
    }

    /**
     * Jar libs.
     * 
     */
    @Import(name="jarLibs")
    private @Nullable List<Object> jarLibs;

    public Optional<List<Object>> jarLibs() {
        return Optional.ofNullable(this.jarLibs);
    }

    /**
     * Jar linked service reference.
     * 
     */
    @Import(name="jarLinkedService")
    private @Nullable LinkedServiceReferenceResponse jarLinkedService;

    public Optional<LinkedServiceReferenceResponse> jarLinkedService() {
        return Optional.ofNullable(this.jarLinkedService);
    }

    /**
     * Linked service reference.
     * 
     */
    @Import(name="linkedServiceName")
    private @Nullable LinkedServiceReferenceResponse linkedServiceName;

    public Optional<LinkedServiceReferenceResponse> linkedServiceName() {
        return Optional.ofNullable(this.linkedServiceName);
    }

    /**
     * Activity name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Activity policy.
     * 
     */
    @Import(name="policy")
    private @Nullable ActivityPolicyResponse policy;

    public Optional<ActivityPolicyResponse> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Storage linked service references.
     * 
     */
    @Import(name="storageLinkedServices")
    private @Nullable List<LinkedServiceReferenceResponse> storageLinkedServices;

    public Optional<List<LinkedServiceReferenceResponse>> storageLinkedServices() {
        return Optional.ofNullable(this.storageLinkedServices);
    }

    /**
     * Type of activity.
     * Expected value is &#39;HDInsightMapReduce&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    /**
     * Activity user properties.
     * 
     */
    @Import(name="userProperties")
    private @Nullable List<UserPropertyResponse> userProperties;

    public Optional<List<UserPropertyResponse>> userProperties() {
        return Optional.ofNullable(this.userProperties);
    }

    private HDInsightMapReduceActivityResponse() {}

    private HDInsightMapReduceActivityResponse(HDInsightMapReduceActivityResponse $) {
        this.arguments = $.arguments;
        this.className = $.className;
        this.defines = $.defines;
        this.dependsOn = $.dependsOn;
        this.description = $.description;
        this.getDebugInfo = $.getDebugInfo;
        this.jarFilePath = $.jarFilePath;
        this.jarLibs = $.jarLibs;
        this.jarLinkedService = $.jarLinkedService;
        this.linkedServiceName = $.linkedServiceName;
        this.name = $.name;
        this.policy = $.policy;
        this.storageLinkedServices = $.storageLinkedServices;
        this.type = $.type;
        this.userProperties = $.userProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HDInsightMapReduceActivityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HDInsightMapReduceActivityResponse $;

        public Builder() {
            $ = new HDInsightMapReduceActivityResponse();
        }

        public Builder(HDInsightMapReduceActivityResponse defaults) {
            $ = new HDInsightMapReduceActivityResponse(Objects.requireNonNull(defaults));
        }

        public Builder arguments(@Nullable List<Object> arguments) {
            $.arguments = arguments;
            return this;
        }

        public Builder arguments(Object... arguments) {
            return arguments(List.of(arguments));
        }

        public Builder className(Object className) {
            $.className = className;
            return this;
        }

        public Builder defines(@Nullable Map<String,Object> defines) {
            $.defines = defines;
            return this;
        }

        public Builder dependsOn(@Nullable List<ActivityDependencyResponse> dependsOn) {
            $.dependsOn = dependsOn;
            return this;
        }

        public Builder dependsOn(ActivityDependencyResponse... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder getDebugInfo(@Nullable String getDebugInfo) {
            $.getDebugInfo = getDebugInfo;
            return this;
        }

        public Builder jarFilePath(Object jarFilePath) {
            $.jarFilePath = jarFilePath;
            return this;
        }

        public Builder jarLibs(@Nullable List<Object> jarLibs) {
            $.jarLibs = jarLibs;
            return this;
        }

        public Builder jarLibs(Object... jarLibs) {
            return jarLibs(List.of(jarLibs));
        }

        public Builder jarLinkedService(@Nullable LinkedServiceReferenceResponse jarLinkedService) {
            $.jarLinkedService = jarLinkedService;
            return this;
        }

        public Builder linkedServiceName(@Nullable LinkedServiceReferenceResponse linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder policy(@Nullable ActivityPolicyResponse policy) {
            $.policy = policy;
            return this;
        }

        public Builder storageLinkedServices(@Nullable List<LinkedServiceReferenceResponse> storageLinkedServices) {
            $.storageLinkedServices = storageLinkedServices;
            return this;
        }

        public Builder storageLinkedServices(LinkedServiceReferenceResponse... storageLinkedServices) {
            return storageLinkedServices(List.of(storageLinkedServices));
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder userProperties(@Nullable List<UserPropertyResponse> userProperties) {
            $.userProperties = userProperties;
            return this;
        }

        public Builder userProperties(UserPropertyResponse... userProperties) {
            return userProperties(List.of(userProperties));
        }

        public HDInsightMapReduceActivityResponse build() {
            $.className = Objects.requireNonNull($.className, "expected parameter 'className' to be non-null");
            $.jarFilePath = Objects.requireNonNull($.jarFilePath, "expected parameter 'jarFilePath' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
