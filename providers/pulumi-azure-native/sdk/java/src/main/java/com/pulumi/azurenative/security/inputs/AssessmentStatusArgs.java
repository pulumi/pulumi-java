// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.enums.AssessmentStatusCode;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The result of the assessment
 * 
 */
public final class AssessmentStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssessmentStatusArgs Empty = new AssessmentStatusArgs();

    /**
     * Programmatic code for the cause of the assessment status
     * 
     */
    @Import(name="cause")
      private final @Nullable Output<String> cause;

    public Output<String> cause() {
        return this.cause == null ? Codegen.empty() : this.cause;
    }

    /**
     * Programmatic code for the status of the assessment
     * 
     */
    @Import(name="code", required=true)
      private final Output<Either<String,AssessmentStatusCode>> code;

    public Output<Either<String,AssessmentStatusCode>> code() {
        return this.code;
    }

    /**
     * Human readable description of the assessment status
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    public AssessmentStatusArgs(
        @Nullable Output<String> cause,
        Output<Either<String,AssessmentStatusCode>> code,
        @Nullable Output<String> description) {
        this.cause = cause;
        this.code = Objects.requireNonNull(code, "expected parameter 'code' to be non-null");
        this.description = description;
    }

    private AssessmentStatusArgs() {
        this.cause = Codegen.empty();
        this.code = Codegen.empty();
        this.description = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssessmentStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> cause;
        private Output<Either<String,AssessmentStatusCode>> code;
        private @Nullable Output<String> description;

        public Builder() {
    	      // Empty
        }

        public Builder(AssessmentStatusArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cause = defaults.cause;
    	      this.code = defaults.code;
    	      this.description = defaults.description;
        }

        public Builder cause(@Nullable Output<String> cause) {
            this.cause = cause;
            return this;
        }
        public Builder cause(@Nullable String cause) {
            this.cause = Codegen.ofNullable(cause);
            return this;
        }
        public Builder code(Output<Either<String,AssessmentStatusCode>> code) {
            this.code = Objects.requireNonNull(code);
            return this;
        }
        public Builder code(Either<String,AssessmentStatusCode> code) {
            this.code = Output.of(Objects.requireNonNull(code));
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }        public AssessmentStatusArgs build() {
            return new AssessmentStatusArgs(cause, code, description);
        }
    }
}
