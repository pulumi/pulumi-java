// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.enums.AssessmentStatusCode;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The result of the assessment
 * 
 */
public final class AssessmentStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssessmentStatusArgs Empty = new AssessmentStatusArgs();

    /**
     * Programmatic code for the cause of the assessment status
     * 
     */
    @Import(name="cause")
    private @Nullable Output<String> cause;

    /**
     * @return Programmatic code for the cause of the assessment status
     * 
     */
    public Optional<Output<String>> cause() {
        return Optional.ofNullable(this.cause);
    }

    /**
     * Programmatic code for the status of the assessment
     * 
     */
    @Import(name="code", required=true)
    private Output<Either<String,AssessmentStatusCode>> code;

    /**
     * @return Programmatic code for the status of the assessment
     * 
     */
    public Output<Either<String,AssessmentStatusCode>> code() {
        return this.code;
    }

    /**
     * Human readable description of the assessment status
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Human readable description of the assessment status
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    private AssessmentStatusArgs() {}

    private AssessmentStatusArgs(AssessmentStatusArgs $) {
        this.cause = $.cause;
        this.code = $.code;
        this.description = $.description;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssessmentStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssessmentStatusArgs $;

        public Builder() {
            $ = new AssessmentStatusArgs();
        }

        public Builder(AssessmentStatusArgs defaults) {
            $ = new AssessmentStatusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cause Programmatic code for the cause of the assessment status
         * 
         * @return builder
         * 
         */
        public Builder cause(@Nullable Output<String> cause) {
            $.cause = cause;
            return this;
        }

        /**
         * @param cause Programmatic code for the cause of the assessment status
         * 
         * @return builder
         * 
         */
        public Builder cause(String cause) {
            return cause(Output.of(cause));
        }

        /**
         * @param code Programmatic code for the status of the assessment
         * 
         * @return builder
         * 
         */
        public Builder code(Output<Either<String,AssessmentStatusCode>> code) {
            $.code = code;
            return this;
        }

        /**
         * @param code Programmatic code for the status of the assessment
         * 
         * @return builder
         * 
         */
        public Builder code(Either<String,AssessmentStatusCode> code) {
            return code(Output.of(code));
        }

        /**
         * @param code Programmatic code for the status of the assessment
         * 
         * @return builder
         * 
         */
        public Builder code(String code) {
            return code(Either.ofLeft(code));
        }

        /**
         * @param code Programmatic code for the status of the assessment
         * 
         * @return builder
         * 
         */
        public Builder code(AssessmentStatusCode code) {
            return code(Either.ofRight(code));
        }

        /**
         * @param description Human readable description of the assessment status
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Human readable description of the assessment status
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public AssessmentStatusArgs build() {
            $.code = Objects.requireNonNull($.code, "expected parameter 'code' to be non-null");
            return $;
        }
    }

}
