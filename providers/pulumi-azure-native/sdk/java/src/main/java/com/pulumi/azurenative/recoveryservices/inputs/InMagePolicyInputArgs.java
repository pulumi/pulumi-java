// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.enums.SetMultiVmSyncStatus;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * VMWare Azure specific protection profile Input.
 * 
 */
public final class InMagePolicyInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final InMagePolicyInputArgs Empty = new InMagePolicyInputArgs();

    /**
     * The app consistent snapshot frequency (in minutes).
     * 
     */
    @Import(name="appConsistentFrequencyInMinutes")
    private @Nullable Output<Integer> appConsistentFrequencyInMinutes;

    /**
     * @return The app consistent snapshot frequency (in minutes).
     * 
     */
    public Optional<Output<Integer>> appConsistentFrequencyInMinutes() {
        return Optional.ofNullable(this.appConsistentFrequencyInMinutes);
    }

    /**
     * The class type.
     * Expected value is &#39;InMage&#39;.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return The class type.
     * Expected value is &#39;InMage&#39;.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * A value indicating whether multi-VM sync has to be enabled. Value should be &#39;Enabled&#39; or &#39;Disabled&#39;.
     * 
     */
    @Import(name="multiVmSyncStatus", required=true)
    private Output<Either<String,SetMultiVmSyncStatus>> multiVmSyncStatus;

    /**
     * @return A value indicating whether multi-VM sync has to be enabled. Value should be &#39;Enabled&#39; or &#39;Disabled&#39;.
     * 
     */
    public Output<Either<String,SetMultiVmSyncStatus>> multiVmSyncStatus() {
        return this.multiVmSyncStatus;
    }

    /**
     * The duration in minutes until which the recovery points need to be stored.
     * 
     */
    @Import(name="recoveryPointHistory")
    private @Nullable Output<Integer> recoveryPointHistory;

    /**
     * @return The duration in minutes until which the recovery points need to be stored.
     * 
     */
    public Optional<Output<Integer>> recoveryPointHistory() {
        return Optional.ofNullable(this.recoveryPointHistory);
    }

    /**
     * The recovery point threshold in minutes.
     * 
     */
    @Import(name="recoveryPointThresholdInMinutes")
    private @Nullable Output<Integer> recoveryPointThresholdInMinutes;

    /**
     * @return The recovery point threshold in minutes.
     * 
     */
    public Optional<Output<Integer>> recoveryPointThresholdInMinutes() {
        return Optional.ofNullable(this.recoveryPointThresholdInMinutes);
    }

    private InMagePolicyInputArgs() {}

    private InMagePolicyInputArgs(InMagePolicyInputArgs $) {
        this.appConsistentFrequencyInMinutes = $.appConsistentFrequencyInMinutes;
        this.instanceType = $.instanceType;
        this.multiVmSyncStatus = $.multiVmSyncStatus;
        this.recoveryPointHistory = $.recoveryPointHistory;
        this.recoveryPointThresholdInMinutes = $.recoveryPointThresholdInMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InMagePolicyInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InMagePolicyInputArgs $;

        public Builder() {
            $ = new InMagePolicyInputArgs();
        }

        public Builder(InMagePolicyInputArgs defaults) {
            $ = new InMagePolicyInputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appConsistentFrequencyInMinutes The app consistent snapshot frequency (in minutes).
         * 
         * @return builder
         * 
         */
        public Builder appConsistentFrequencyInMinutes(@Nullable Output<Integer> appConsistentFrequencyInMinutes) {
            $.appConsistentFrequencyInMinutes = appConsistentFrequencyInMinutes;
            return this;
        }

        /**
         * @param appConsistentFrequencyInMinutes The app consistent snapshot frequency (in minutes).
         * 
         * @return builder
         * 
         */
        public Builder appConsistentFrequencyInMinutes(Integer appConsistentFrequencyInMinutes) {
            return appConsistentFrequencyInMinutes(Output.of(appConsistentFrequencyInMinutes));
        }

        /**
         * @param instanceType The class type.
         * Expected value is &#39;InMage&#39;.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The class type.
         * Expected value is &#39;InMage&#39;.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param multiVmSyncStatus A value indicating whether multi-VM sync has to be enabled. Value should be &#39;Enabled&#39; or &#39;Disabled&#39;.
         * 
         * @return builder
         * 
         */
        public Builder multiVmSyncStatus(Output<Either<String,SetMultiVmSyncStatus>> multiVmSyncStatus) {
            $.multiVmSyncStatus = multiVmSyncStatus;
            return this;
        }

        /**
         * @param multiVmSyncStatus A value indicating whether multi-VM sync has to be enabled. Value should be &#39;Enabled&#39; or &#39;Disabled&#39;.
         * 
         * @return builder
         * 
         */
        public Builder multiVmSyncStatus(Either<String,SetMultiVmSyncStatus> multiVmSyncStatus) {
            return multiVmSyncStatus(Output.of(multiVmSyncStatus));
        }

        /**
         * @param multiVmSyncStatus A value indicating whether multi-VM sync has to be enabled. Value should be &#39;Enabled&#39; or &#39;Disabled&#39;.
         * 
         * @return builder
         * 
         */
        public Builder multiVmSyncStatus(String multiVmSyncStatus) {
            return multiVmSyncStatus(Either.ofLeft(multiVmSyncStatus));
        }

        /**
         * @param multiVmSyncStatus A value indicating whether multi-VM sync has to be enabled. Value should be &#39;Enabled&#39; or &#39;Disabled&#39;.
         * 
         * @return builder
         * 
         */
        public Builder multiVmSyncStatus(SetMultiVmSyncStatus multiVmSyncStatus) {
            return multiVmSyncStatus(Either.ofRight(multiVmSyncStatus));
        }

        /**
         * @param recoveryPointHistory The duration in minutes until which the recovery points need to be stored.
         * 
         * @return builder
         * 
         */
        public Builder recoveryPointHistory(@Nullable Output<Integer> recoveryPointHistory) {
            $.recoveryPointHistory = recoveryPointHistory;
            return this;
        }

        /**
         * @param recoveryPointHistory The duration in minutes until which the recovery points need to be stored.
         * 
         * @return builder
         * 
         */
        public Builder recoveryPointHistory(Integer recoveryPointHistory) {
            return recoveryPointHistory(Output.of(recoveryPointHistory));
        }

        /**
         * @param recoveryPointThresholdInMinutes The recovery point threshold in minutes.
         * 
         * @return builder
         * 
         */
        public Builder recoveryPointThresholdInMinutes(@Nullable Output<Integer> recoveryPointThresholdInMinutes) {
            $.recoveryPointThresholdInMinutes = recoveryPointThresholdInMinutes;
            return this;
        }

        /**
         * @param recoveryPointThresholdInMinutes The recovery point threshold in minutes.
         * 
         * @return builder
         * 
         */
        public Builder recoveryPointThresholdInMinutes(Integer recoveryPointThresholdInMinutes) {
            return recoveryPointThresholdInMinutes(Output.of(recoveryPointThresholdInMinutes));
        }

        public InMagePolicyInputArgs build() {
            $.instanceType = Codegen.stringProp("instanceType").output().arg($.instanceType).getNullable();
            $.multiVmSyncStatus = Objects.requireNonNull($.multiVmSyncStatus, "expected parameter 'multiVmSyncStatus' to be non-null");
            return $;
        }
    }

}
