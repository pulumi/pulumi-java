// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch;

import com.pulumi.azurenative.batch.enums.PoolAllocationMode;
import com.pulumi.azurenative.batch.enums.PublicNetworkAccessType;
import com.pulumi.azurenative.batch.inputs.AutoStorageBasePropertiesArgs;
import com.pulumi.azurenative.batch.inputs.BatchAccountIdentityArgs;
import com.pulumi.azurenative.batch.inputs.EncryptionPropertiesArgs;
import com.pulumi.azurenative.batch.inputs.KeyVaultReferenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BatchAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final BatchAccountArgs Empty = new BatchAccountArgs();

    /**
     * A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.
     * 
     */
    @Import(name="accountName")
    private @Nullable Output<String> accountName;

    public Optional<Output<String>> accountName() {
        return Optional.ofNullable(this.accountName);
    }

    /**
     * The properties related to the auto-storage account.
     * 
     */
    @Import(name="autoStorage")
    private @Nullable Output<AutoStorageBasePropertiesArgs> autoStorage;

    public Optional<Output<AutoStorageBasePropertiesArgs>> autoStorage() {
        return Optional.ofNullable(this.autoStorage);
    }

    /**
     * Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
     * 
     */
    @Import(name="encryption")
    private @Nullable Output<EncryptionPropertiesArgs> encryption;

    public Optional<Output<EncryptionPropertiesArgs>> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * The identity of the Batch account.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<BatchAccountIdentityArgs> identity;

    public Optional<Output<BatchAccountIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * A reference to the Azure key vault associated with the Batch account.
     * 
     */
    @Import(name="keyVaultReference")
    private @Nullable Output<KeyVaultReferenceArgs> keyVaultReference;

    public Optional<Output<KeyVaultReferenceArgs>> keyVaultReference() {
        return Optional.ofNullable(this.keyVaultReference);
    }

    /**
     * The region in which to create the account.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
     * 
     */
    @Import(name="poolAllocationMode")
    private @Nullable Output<PoolAllocationMode> poolAllocationMode;

    public Optional<Output<PoolAllocationMode>> poolAllocationMode() {
        return Optional.ofNullable(this.poolAllocationMode);
    }

    /**
     * If not specified, the default value is &#39;enabled&#39;.
     * 
     */
    @Import(name="publicNetworkAccess")
    private @Nullable Output<PublicNetworkAccessType> publicNetworkAccess;

    public Optional<Output<PublicNetworkAccessType>> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }

    /**
     * The name of the resource group that contains the Batch account.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The user-specified tags associated with the account.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private BatchAccountArgs() {}

    private BatchAccountArgs(BatchAccountArgs $) {
        this.accountName = $.accountName;
        this.autoStorage = $.autoStorage;
        this.encryption = $.encryption;
        this.identity = $.identity;
        this.keyVaultReference = $.keyVaultReference;
        this.location = $.location;
        this.poolAllocationMode = $.poolAllocationMode;
        this.publicNetworkAccess = $.publicNetworkAccess;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BatchAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BatchAccountArgs $;

        public Builder() {
            $ = new BatchAccountArgs();
        }

        public Builder(BatchAccountArgs defaults) {
            $ = new BatchAccountArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountName(@Nullable Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        public Builder autoStorage(@Nullable Output<AutoStorageBasePropertiesArgs> autoStorage) {
            $.autoStorage = autoStorage;
            return this;
        }

        public Builder autoStorage(AutoStorageBasePropertiesArgs autoStorage) {
            return autoStorage(Output.of(autoStorage));
        }

        public Builder encryption(@Nullable Output<EncryptionPropertiesArgs> encryption) {
            $.encryption = encryption;
            return this;
        }

        public Builder encryption(EncryptionPropertiesArgs encryption) {
            return encryption(Output.of(encryption));
        }

        public Builder identity(@Nullable Output<BatchAccountIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(BatchAccountIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        public Builder keyVaultReference(@Nullable Output<KeyVaultReferenceArgs> keyVaultReference) {
            $.keyVaultReference = keyVaultReference;
            return this;
        }

        public Builder keyVaultReference(KeyVaultReferenceArgs keyVaultReference) {
            return keyVaultReference(Output.of(keyVaultReference));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder poolAllocationMode(@Nullable Output<PoolAllocationMode> poolAllocationMode) {
            $.poolAllocationMode = poolAllocationMode;
            return this;
        }

        public Builder poolAllocationMode(PoolAllocationMode poolAllocationMode) {
            return poolAllocationMode(Output.of(poolAllocationMode));
        }

        public Builder publicNetworkAccess(@Nullable Output<PublicNetworkAccessType> publicNetworkAccess) {
            $.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        public Builder publicNetworkAccess(PublicNetworkAccessType publicNetworkAccess) {
            return publicNetworkAccess(Output.of(publicNetworkAccess));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public BatchAccountArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
