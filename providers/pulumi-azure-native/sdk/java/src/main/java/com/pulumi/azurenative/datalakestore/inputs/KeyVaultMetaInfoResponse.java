// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datalakestore.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Metadata information used by account encryption.
 * 
 */
public final class KeyVaultMetaInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final KeyVaultMetaInfoResponse Empty = new KeyVaultMetaInfoResponse();

    /**
     * The name of the user managed encryption key.
     * 
     */
    @Import(name="encryptionKeyName", required=true)
    private String encryptionKeyName;

    /**
     * @return The name of the user managed encryption key.
     * 
     */
    public String encryptionKeyName() {
        return this.encryptionKeyName;
    }

    /**
     * The version of the user managed encryption key.
     * 
     */
    @Import(name="encryptionKeyVersion", required=true)
    private String encryptionKeyVersion;

    /**
     * @return The version of the user managed encryption key.
     * 
     */
    public String encryptionKeyVersion() {
        return this.encryptionKeyVersion;
    }

    /**
     * The resource identifier for the user managed Key Vault being used to encrypt.
     * 
     */
    @Import(name="keyVaultResourceId", required=true)
    private String keyVaultResourceId;

    /**
     * @return The resource identifier for the user managed Key Vault being used to encrypt.
     * 
     */
    public String keyVaultResourceId() {
        return this.keyVaultResourceId;
    }

    private KeyVaultMetaInfoResponse() {}

    private KeyVaultMetaInfoResponse(KeyVaultMetaInfoResponse $) {
        this.encryptionKeyName = $.encryptionKeyName;
        this.encryptionKeyVersion = $.encryptionKeyVersion;
        this.keyVaultResourceId = $.keyVaultResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyVaultMetaInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVaultMetaInfoResponse $;

        public Builder() {
            $ = new KeyVaultMetaInfoResponse();
        }

        public Builder(KeyVaultMetaInfoResponse defaults) {
            $ = new KeyVaultMetaInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryptionKeyName The name of the user managed encryption key.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeyName(String encryptionKeyName) {
            $.encryptionKeyName = encryptionKeyName;
            return this;
        }

        /**
         * @param encryptionKeyVersion The version of the user managed encryption key.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeyVersion(String encryptionKeyVersion) {
            $.encryptionKeyVersion = encryptionKeyVersion;
            return this;
        }

        /**
         * @param keyVaultResourceId The resource identifier for the user managed Key Vault being used to encrypt.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultResourceId(String keyVaultResourceId) {
            $.keyVaultResourceId = keyVaultResourceId;
            return this;
        }

        public KeyVaultMetaInfoResponse build() {
            $.encryptionKeyName = Objects.requireNonNull($.encryptionKeyName, "expected parameter 'encryptionKeyName' to be non-null");
            $.encryptionKeyVersion = Objects.requireNonNull($.encryptionKeyVersion, "expected parameter 'encryptionKeyVersion' to be non-null");
            $.keyVaultResourceId = Objects.requireNonNull($.keyVaultResourceId, "expected parameter 'keyVaultResourceId' to be non-null");
            return $;
        }
    }

}
