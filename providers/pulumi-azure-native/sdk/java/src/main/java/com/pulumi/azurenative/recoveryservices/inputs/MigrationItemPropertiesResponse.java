// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.CurrentJobDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.HealthErrorResponse;
import com.pulumi.azurenative.recoveryservices.inputs.VMwareCbtMigrationDetailsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Migration item properties.
 * 
 */
public final class MigrationItemPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final MigrationItemPropertiesResponse Empty = new MigrationItemPropertiesResponse();

    /**
     * The allowed operations on the migration item, based on the current migration state of the item.
     * 
     */
    @Import(name="allowedOperations", required=true)
    private List<String> allowedOperations;

    /**
     * @return The allowed operations on the migration item, based on the current migration state of the item.
     * 
     */
    public List<String> allowedOperations() {
        return this.allowedOperations;
    }

    /**
     * The current job details.
     * 
     */
    @Import(name="currentJob", required=true)
    private CurrentJobDetailsResponse currentJob;

    /**
     * @return The current job details.
     * 
     */
    public CurrentJobDetailsResponse currentJob() {
        return this.currentJob;
    }

    /**
     * The consolidated health.
     * 
     */
    @Import(name="health", required=true)
    private String health;

    /**
     * @return The consolidated health.
     * 
     */
    public String health() {
        return this.health;
    }

    /**
     * The list of health errors.
     * 
     */
    @Import(name="healthErrors", required=true)
    private List<HealthErrorResponse> healthErrors;

    /**
     * @return The list of health errors.
     * 
     */
    public List<HealthErrorResponse> healthErrors() {
        return this.healthErrors;
    }

    /**
     * The on-premise virtual machine name.
     * 
     */
    @Import(name="machineName", required=true)
    private String machineName;

    /**
     * @return The on-premise virtual machine name.
     * 
     */
    public String machineName() {
        return this.machineName;
    }

    /**
     * The migration status.
     * 
     */
    @Import(name="migrationState", required=true)
    private String migrationState;

    /**
     * @return The migration status.
     * 
     */
    public String migrationState() {
        return this.migrationState;
    }

    /**
     * The migration state description.
     * 
     */
    @Import(name="migrationStateDescription", required=true)
    private String migrationStateDescription;

    /**
     * @return The migration state description.
     * 
     */
    public String migrationStateDescription() {
        return this.migrationStateDescription;
    }

    /**
     * The name of policy governing this item.
     * 
     */
    @Import(name="policyFriendlyName", required=true)
    private String policyFriendlyName;

    /**
     * @return The name of policy governing this item.
     * 
     */
    public String policyFriendlyName() {
        return this.policyFriendlyName;
    }

    /**
     * The ARM Id of policy governing this item.
     * 
     */
    @Import(name="policyId", required=true)
    private String policyId;

    /**
     * @return The ARM Id of policy governing this item.
     * 
     */
    public String policyId() {
        return this.policyId;
    }

    /**
     * The migration provider custom settings.
     * 
     */
    @Import(name="providerSpecificDetails")
    private @Nullable VMwareCbtMigrationDetailsResponse providerSpecificDetails;

    /**
     * @return The migration provider custom settings.
     * 
     */
    public Optional<VMwareCbtMigrationDetailsResponse> providerSpecificDetails() {
        return Optional.ofNullable(this.providerSpecificDetails);
    }

    /**
     * The recovery services provider ARM Id.
     * 
     */
    @Import(name="recoveryServicesProviderId", required=true)
    private String recoveryServicesProviderId;

    /**
     * @return The recovery services provider ARM Id.
     * 
     */
    public String recoveryServicesProviderId() {
        return this.recoveryServicesProviderId;
    }

    /**
     * The test migrate state.
     * 
     */
    @Import(name="testMigrateState", required=true)
    private String testMigrateState;

    /**
     * @return The test migrate state.
     * 
     */
    public String testMigrateState() {
        return this.testMigrateState;
    }

    /**
     * The test migrate state description.
     * 
     */
    @Import(name="testMigrateStateDescription", required=true)
    private String testMigrateStateDescription;

    /**
     * @return The test migrate state description.
     * 
     */
    public String testMigrateStateDescription() {
        return this.testMigrateStateDescription;
    }

    private MigrationItemPropertiesResponse() {}

    private MigrationItemPropertiesResponse(MigrationItemPropertiesResponse $) {
        this.allowedOperations = $.allowedOperations;
        this.currentJob = $.currentJob;
        this.health = $.health;
        this.healthErrors = $.healthErrors;
        this.machineName = $.machineName;
        this.migrationState = $.migrationState;
        this.migrationStateDescription = $.migrationStateDescription;
        this.policyFriendlyName = $.policyFriendlyName;
        this.policyId = $.policyId;
        this.providerSpecificDetails = $.providerSpecificDetails;
        this.recoveryServicesProviderId = $.recoveryServicesProviderId;
        this.testMigrateState = $.testMigrateState;
        this.testMigrateStateDescription = $.testMigrateStateDescription;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationItemPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationItemPropertiesResponse $;

        public Builder() {
            $ = new MigrationItemPropertiesResponse();
        }

        public Builder(MigrationItemPropertiesResponse defaults) {
            $ = new MigrationItemPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedOperations The allowed operations on the migration item, based on the current migration state of the item.
         * 
         * @return builder
         * 
         */
        public Builder allowedOperations(List<String> allowedOperations) {
            $.allowedOperations = allowedOperations;
            return this;
        }

        /**
         * @param allowedOperations The allowed operations on the migration item, based on the current migration state of the item.
         * 
         * @return builder
         * 
         */
        public Builder allowedOperations(String... allowedOperations) {
            return allowedOperations(List.of(allowedOperations));
        }

        /**
         * @param currentJob The current job details.
         * 
         * @return builder
         * 
         */
        public Builder currentJob(CurrentJobDetailsResponse currentJob) {
            $.currentJob = currentJob;
            return this;
        }

        /**
         * @param health The consolidated health.
         * 
         * @return builder
         * 
         */
        public Builder health(String health) {
            $.health = health;
            return this;
        }

        /**
         * @param healthErrors The list of health errors.
         * 
         * @return builder
         * 
         */
        public Builder healthErrors(List<HealthErrorResponse> healthErrors) {
            $.healthErrors = healthErrors;
            return this;
        }

        /**
         * @param healthErrors The list of health errors.
         * 
         * @return builder
         * 
         */
        public Builder healthErrors(HealthErrorResponse... healthErrors) {
            return healthErrors(List.of(healthErrors));
        }

        /**
         * @param machineName The on-premise virtual machine name.
         * 
         * @return builder
         * 
         */
        public Builder machineName(String machineName) {
            $.machineName = machineName;
            return this;
        }

        /**
         * @param migrationState The migration status.
         * 
         * @return builder
         * 
         */
        public Builder migrationState(String migrationState) {
            $.migrationState = migrationState;
            return this;
        }

        /**
         * @param migrationStateDescription The migration state description.
         * 
         * @return builder
         * 
         */
        public Builder migrationStateDescription(String migrationStateDescription) {
            $.migrationStateDescription = migrationStateDescription;
            return this;
        }

        /**
         * @param policyFriendlyName The name of policy governing this item.
         * 
         * @return builder
         * 
         */
        public Builder policyFriendlyName(String policyFriendlyName) {
            $.policyFriendlyName = policyFriendlyName;
            return this;
        }

        /**
         * @param policyId The ARM Id of policy governing this item.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param providerSpecificDetails The migration provider custom settings.
         * 
         * @return builder
         * 
         */
        public Builder providerSpecificDetails(@Nullable VMwareCbtMigrationDetailsResponse providerSpecificDetails) {
            $.providerSpecificDetails = providerSpecificDetails;
            return this;
        }

        /**
         * @param recoveryServicesProviderId The recovery services provider ARM Id.
         * 
         * @return builder
         * 
         */
        public Builder recoveryServicesProviderId(String recoveryServicesProviderId) {
            $.recoveryServicesProviderId = recoveryServicesProviderId;
            return this;
        }

        /**
         * @param testMigrateState The test migrate state.
         * 
         * @return builder
         * 
         */
        public Builder testMigrateState(String testMigrateState) {
            $.testMigrateState = testMigrateState;
            return this;
        }

        /**
         * @param testMigrateStateDescription The test migrate state description.
         * 
         * @return builder
         * 
         */
        public Builder testMigrateStateDescription(String testMigrateStateDescription) {
            $.testMigrateStateDescription = testMigrateStateDescription;
            return this;
        }

        public MigrationItemPropertiesResponse build() {
            $.allowedOperations = Objects.requireNonNull($.allowedOperations, "expected parameter 'allowedOperations' to be non-null");
            $.currentJob = Objects.requireNonNull($.currentJob, "expected parameter 'currentJob' to be non-null");
            $.health = Objects.requireNonNull($.health, "expected parameter 'health' to be non-null");
            $.healthErrors = Objects.requireNonNull($.healthErrors, "expected parameter 'healthErrors' to be non-null");
            $.machineName = Objects.requireNonNull($.machineName, "expected parameter 'machineName' to be non-null");
            $.migrationState = Objects.requireNonNull($.migrationState, "expected parameter 'migrationState' to be non-null");
            $.migrationStateDescription = Objects.requireNonNull($.migrationStateDescription, "expected parameter 'migrationStateDescription' to be non-null");
            $.policyFriendlyName = Objects.requireNonNull($.policyFriendlyName, "expected parameter 'policyFriendlyName' to be non-null");
            $.policyId = Objects.requireNonNull($.policyId, "expected parameter 'policyId' to be non-null");
            $.recoveryServicesProviderId = Objects.requireNonNull($.recoveryServicesProviderId, "expected parameter 'recoveryServicesProviderId' to be non-null");
            $.testMigrateState = Objects.requireNonNull($.testMigrateState, "expected parameter 'testMigrateState' to be non-null");
            $.testMigrateStateDescription = Objects.requireNonNull($.testMigrateStateDescription, "expected parameter 'testMigrateStateDescription' to be non-null");
            return $;
        }
    }

}
