// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.ApplicationGatewayAuthenticationCertificateResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayAutoscaleConfigurationResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayBackendAddressPoolResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayBackendHttpSettingsResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayCustomErrorResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayFrontendIPConfigurationResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayFrontendPortResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayHttpListenerResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayIPConfigurationResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayPrivateEndpointConnectionResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayPrivateLinkConfigurationResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayProbeResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayRedirectConfigurationResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayRequestRoutingRuleResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayRewriteRuleSetResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewaySkuResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewaySslCertificateResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewaySslPolicyResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewaySslProfileResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayTrustedClientCertificateResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayTrustedRootCertificateResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayUrlPathMapResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayWebApplicationFirewallConfigurationResponse;
import com.pulumi.azurenative.network.inputs.ManagedServiceIdentityResponse;
import com.pulumi.azurenative.network.inputs.SubResourceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Application gateway resource.
 * 
 */
public final class ApplicationGatewayResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationGatewayResponse Empty = new ApplicationGatewayResponse();

    /**
     * Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="authenticationCertificates")
    private @Nullable List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates;

    public Optional<List<ApplicationGatewayAuthenticationCertificateResponse>> authenticationCertificates() {
        return Optional.ofNullable(this.authenticationCertificates);
    }

    /**
     * Autoscale Configuration.
     * 
     */
    @Import(name="autoscaleConfiguration")
    private @Nullable ApplicationGatewayAutoscaleConfigurationResponse autoscaleConfiguration;

    public Optional<ApplicationGatewayAutoscaleConfigurationResponse> autoscaleConfiguration() {
        return Optional.ofNullable(this.autoscaleConfiguration);
    }

    /**
     * Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="backendAddressPools")
    private @Nullable List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools;

    public Optional<List<ApplicationGatewayBackendAddressPoolResponse>> backendAddressPools() {
        return Optional.ofNullable(this.backendAddressPools);
    }

    /**
     * Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="backendHttpSettingsCollection")
    private @Nullable List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection;

    public Optional<List<ApplicationGatewayBackendHttpSettingsResponse>> backendHttpSettingsCollection() {
        return Optional.ofNullable(this.backendHttpSettingsCollection);
    }

    /**
     * Custom error configurations of the application gateway resource.
     * 
     */
    @Import(name="customErrorConfigurations")
    private @Nullable List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations;

    public Optional<List<ApplicationGatewayCustomErrorResponse>> customErrorConfigurations() {
        return Optional.ofNullable(this.customErrorConfigurations);
    }

    /**
     * Whether FIPS is enabled on the application gateway resource.
     * 
     */
    @Import(name="enableFips")
    private @Nullable Boolean enableFips;

    public Optional<Boolean> enableFips() {
        return Optional.ofNullable(this.enableFips);
    }

    /**
     * Whether HTTP2 is enabled on the application gateway resource.
     * 
     */
    @Import(name="enableHttp2")
    private @Nullable Boolean enableHttp2;

    public Optional<Boolean> enableHttp2() {
        return Optional.ofNullable(this.enableHttp2);
    }

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    public String etag() {
        return this.etag;
    }

    /**
     * Reference to the FirewallPolicy resource.
     * 
     */
    @Import(name="firewallPolicy")
    private @Nullable SubResourceResponse firewallPolicy;

    public Optional<SubResourceResponse> firewallPolicy() {
        return Optional.ofNullable(this.firewallPolicy);
    }

    /**
     * If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
     * 
     */
    @Import(name="forceFirewallPolicyAssociation")
    private @Nullable Boolean forceFirewallPolicyAssociation;

    public Optional<Boolean> forceFirewallPolicyAssociation() {
        return Optional.ofNullable(this.forceFirewallPolicyAssociation);
    }

    /**
     * Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="frontendIPConfigurations")
    private @Nullable List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations;

    public Optional<List<ApplicationGatewayFrontendIPConfigurationResponse>> frontendIPConfigurations() {
        return Optional.ofNullable(this.frontendIPConfigurations);
    }

    /**
     * Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="frontendPorts")
    private @Nullable List<ApplicationGatewayFrontendPortResponse> frontendPorts;

    public Optional<List<ApplicationGatewayFrontendPortResponse>> frontendPorts() {
        return Optional.ofNullable(this.frontendPorts);
    }

    /**
     * Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="gatewayIPConfigurations")
    private @Nullable List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations;

    public Optional<List<ApplicationGatewayIPConfigurationResponse>> gatewayIPConfigurations() {
        return Optional.ofNullable(this.gatewayIPConfigurations);
    }

    /**
     * Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="httpListeners")
    private @Nullable List<ApplicationGatewayHttpListenerResponse> httpListeners;

    public Optional<List<ApplicationGatewayHttpListenerResponse>> httpListeners() {
        return Optional.ofNullable(this.httpListeners);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The identity of the application gateway, if configured.
     * 
     */
    @Import(name="identity")
    private @Nullable ManagedServiceIdentityResponse identity;

    public Optional<ManagedServiceIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Resource name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Operational state of the application gateway resource.
     * 
     */
    @Import(name="operationalState", required=true)
    private String operationalState;

    public String operationalState() {
        return this.operationalState;
    }

    /**
     * Private Endpoint connections on application gateway.
     * 
     */
    @Import(name="privateEndpointConnections", required=true)
    private List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections;

    public List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }

    /**
     * PrivateLink configurations on application gateway.
     * 
     */
    @Import(name="privateLinkConfigurations")
    private @Nullable List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations;

    public Optional<List<ApplicationGatewayPrivateLinkConfigurationResponse>> privateLinkConfigurations() {
        return Optional.ofNullable(this.privateLinkConfigurations);
    }

    /**
     * Probes of the application gateway resource.
     * 
     */
    @Import(name="probes")
    private @Nullable List<ApplicationGatewayProbeResponse> probes;

    public Optional<List<ApplicationGatewayProbeResponse>> probes() {
        return Optional.ofNullable(this.probes);
    }

    /**
     * The provisioning state of the application gateway resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="redirectConfigurations")
    private @Nullable List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations;

    public Optional<List<ApplicationGatewayRedirectConfigurationResponse>> redirectConfigurations() {
        return Optional.ofNullable(this.redirectConfigurations);
    }

    /**
     * Request routing rules of the application gateway resource.
     * 
     */
    @Import(name="requestRoutingRules")
    private @Nullable List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules;

    public Optional<List<ApplicationGatewayRequestRoutingRuleResponse>> requestRoutingRules() {
        return Optional.ofNullable(this.requestRoutingRules);
    }

    /**
     * The resource GUID property of the application gateway resource.
     * 
     */
    @Import(name="resourceGuid", required=true)
    private String resourceGuid;

    public String resourceGuid() {
        return this.resourceGuid;
    }

    /**
     * Rewrite rules for the application gateway resource.
     * 
     */
    @Import(name="rewriteRuleSets")
    private @Nullable List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets;

    public Optional<List<ApplicationGatewayRewriteRuleSetResponse>> rewriteRuleSets() {
        return Optional.ofNullable(this.rewriteRuleSets);
    }

    /**
     * SKU of the application gateway resource.
     * 
     */
    @Import(name="sku")
    private @Nullable ApplicationGatewaySkuResponse sku;

    public Optional<ApplicationGatewaySkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="sslCertificates")
    private @Nullable List<ApplicationGatewaySslCertificateResponse> sslCertificates;

    public Optional<List<ApplicationGatewaySslCertificateResponse>> sslCertificates() {
        return Optional.ofNullable(this.sslCertificates);
    }

    /**
     * SSL policy of the application gateway resource.
     * 
     */
    @Import(name="sslPolicy")
    private @Nullable ApplicationGatewaySslPolicyResponse sslPolicy;

    public Optional<ApplicationGatewaySslPolicyResponse> sslPolicy() {
        return Optional.ofNullable(this.sslPolicy);
    }

    /**
     * SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="sslProfiles")
    private @Nullable List<ApplicationGatewaySslProfileResponse> sslProfiles;

    public Optional<List<ApplicationGatewaySslProfileResponse>> sslProfiles() {
        return Optional.ofNullable(this.sslProfiles);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="trustedClientCertificates")
    private @Nullable List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates;

    public Optional<List<ApplicationGatewayTrustedClientCertificateResponse>> trustedClientCertificates() {
        return Optional.ofNullable(this.trustedClientCertificates);
    }

    /**
     * Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="trustedRootCertificates")
    private @Nullable List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates;

    public Optional<List<ApplicationGatewayTrustedRootCertificateResponse>> trustedRootCertificates() {
        return Optional.ofNullable(this.trustedRootCertificates);
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    /**
     * URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    @Import(name="urlPathMaps")
    private @Nullable List<ApplicationGatewayUrlPathMapResponse> urlPathMaps;

    public Optional<List<ApplicationGatewayUrlPathMapResponse>> urlPathMaps() {
        return Optional.ofNullable(this.urlPathMaps);
    }

    /**
     * Web application firewall configuration.
     * 
     */
    @Import(name="webApplicationFirewallConfiguration")
    private @Nullable ApplicationGatewayWebApplicationFirewallConfigurationResponse webApplicationFirewallConfiguration;

    public Optional<ApplicationGatewayWebApplicationFirewallConfigurationResponse> webApplicationFirewallConfiguration() {
        return Optional.ofNullable(this.webApplicationFirewallConfiguration);
    }

    /**
     * A list of availability zones denoting where the resource needs to come from.
     * 
     */
    @Import(name="zones")
    private @Nullable List<String> zones;

    public Optional<List<String>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private ApplicationGatewayResponse() {}

    private ApplicationGatewayResponse(ApplicationGatewayResponse $) {
        this.authenticationCertificates = $.authenticationCertificates;
        this.autoscaleConfiguration = $.autoscaleConfiguration;
        this.backendAddressPools = $.backendAddressPools;
        this.backendHttpSettingsCollection = $.backendHttpSettingsCollection;
        this.customErrorConfigurations = $.customErrorConfigurations;
        this.enableFips = $.enableFips;
        this.enableHttp2 = $.enableHttp2;
        this.etag = $.etag;
        this.firewallPolicy = $.firewallPolicy;
        this.forceFirewallPolicyAssociation = $.forceFirewallPolicyAssociation;
        this.frontendIPConfigurations = $.frontendIPConfigurations;
        this.frontendPorts = $.frontendPorts;
        this.gatewayIPConfigurations = $.gatewayIPConfigurations;
        this.httpListeners = $.httpListeners;
        this.id = $.id;
        this.identity = $.identity;
        this.location = $.location;
        this.name = $.name;
        this.operationalState = $.operationalState;
        this.privateEndpointConnections = $.privateEndpointConnections;
        this.privateLinkConfigurations = $.privateLinkConfigurations;
        this.probes = $.probes;
        this.provisioningState = $.provisioningState;
        this.redirectConfigurations = $.redirectConfigurations;
        this.requestRoutingRules = $.requestRoutingRules;
        this.resourceGuid = $.resourceGuid;
        this.rewriteRuleSets = $.rewriteRuleSets;
        this.sku = $.sku;
        this.sslCertificates = $.sslCertificates;
        this.sslPolicy = $.sslPolicy;
        this.sslProfiles = $.sslProfiles;
        this.tags = $.tags;
        this.trustedClientCertificates = $.trustedClientCertificates;
        this.trustedRootCertificates = $.trustedRootCertificates;
        this.type = $.type;
        this.urlPathMaps = $.urlPathMaps;
        this.webApplicationFirewallConfiguration = $.webApplicationFirewallConfiguration;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayResponse $;

        public Builder() {
            $ = new ApplicationGatewayResponse();
        }

        public Builder(ApplicationGatewayResponse defaults) {
            $ = new ApplicationGatewayResponse(Objects.requireNonNull(defaults));
        }

        public Builder authenticationCertificates(@Nullable List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates) {
            $.authenticationCertificates = authenticationCertificates;
            return this;
        }

        public Builder authenticationCertificates(ApplicationGatewayAuthenticationCertificateResponse... authenticationCertificates) {
            return authenticationCertificates(List.of(authenticationCertificates));
        }

        public Builder autoscaleConfiguration(@Nullable ApplicationGatewayAutoscaleConfigurationResponse autoscaleConfiguration) {
            $.autoscaleConfiguration = autoscaleConfiguration;
            return this;
        }

        public Builder backendAddressPools(@Nullable List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools) {
            $.backendAddressPools = backendAddressPools;
            return this;
        }

        public Builder backendAddressPools(ApplicationGatewayBackendAddressPoolResponse... backendAddressPools) {
            return backendAddressPools(List.of(backendAddressPools));
        }

        public Builder backendHttpSettingsCollection(@Nullable List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection) {
            $.backendHttpSettingsCollection = backendHttpSettingsCollection;
            return this;
        }

        public Builder backendHttpSettingsCollection(ApplicationGatewayBackendHttpSettingsResponse... backendHttpSettingsCollection) {
            return backendHttpSettingsCollection(List.of(backendHttpSettingsCollection));
        }

        public Builder customErrorConfigurations(@Nullable List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations) {
            $.customErrorConfigurations = customErrorConfigurations;
            return this;
        }

        public Builder customErrorConfigurations(ApplicationGatewayCustomErrorResponse... customErrorConfigurations) {
            return customErrorConfigurations(List.of(customErrorConfigurations));
        }

        public Builder enableFips(@Nullable Boolean enableFips) {
            $.enableFips = enableFips;
            return this;
        }

        public Builder enableHttp2(@Nullable Boolean enableHttp2) {
            $.enableHttp2 = enableHttp2;
            return this;
        }

        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        public Builder firewallPolicy(@Nullable SubResourceResponse firewallPolicy) {
            $.firewallPolicy = firewallPolicy;
            return this;
        }

        public Builder forceFirewallPolicyAssociation(@Nullable Boolean forceFirewallPolicyAssociation) {
            $.forceFirewallPolicyAssociation = forceFirewallPolicyAssociation;
            return this;
        }

        public Builder frontendIPConfigurations(@Nullable List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations) {
            $.frontendIPConfigurations = frontendIPConfigurations;
            return this;
        }

        public Builder frontendIPConfigurations(ApplicationGatewayFrontendIPConfigurationResponse... frontendIPConfigurations) {
            return frontendIPConfigurations(List.of(frontendIPConfigurations));
        }

        public Builder frontendPorts(@Nullable List<ApplicationGatewayFrontendPortResponse> frontendPorts) {
            $.frontendPorts = frontendPorts;
            return this;
        }

        public Builder frontendPorts(ApplicationGatewayFrontendPortResponse... frontendPorts) {
            return frontendPorts(List.of(frontendPorts));
        }

        public Builder gatewayIPConfigurations(@Nullable List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations) {
            $.gatewayIPConfigurations = gatewayIPConfigurations;
            return this;
        }

        public Builder gatewayIPConfigurations(ApplicationGatewayIPConfigurationResponse... gatewayIPConfigurations) {
            return gatewayIPConfigurations(List.of(gatewayIPConfigurations));
        }

        public Builder httpListeners(@Nullable List<ApplicationGatewayHttpListenerResponse> httpListeners) {
            $.httpListeners = httpListeners;
            return this;
        }

        public Builder httpListeners(ApplicationGatewayHttpListenerResponse... httpListeners) {
            return httpListeners(List.of(httpListeners));
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder identity(@Nullable ManagedServiceIdentityResponse identity) {
            $.identity = identity;
            return this;
        }

        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder operationalState(String operationalState) {
            $.operationalState = operationalState;
            return this;
        }

        public Builder privateEndpointConnections(List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections) {
            $.privateEndpointConnections = privateEndpointConnections;
            return this;
        }

        public Builder privateEndpointConnections(ApplicationGatewayPrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }

        public Builder privateLinkConfigurations(@Nullable List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations) {
            $.privateLinkConfigurations = privateLinkConfigurations;
            return this;
        }

        public Builder privateLinkConfigurations(ApplicationGatewayPrivateLinkConfigurationResponse... privateLinkConfigurations) {
            return privateLinkConfigurations(List.of(privateLinkConfigurations));
        }

        public Builder probes(@Nullable List<ApplicationGatewayProbeResponse> probes) {
            $.probes = probes;
            return this;
        }

        public Builder probes(ApplicationGatewayProbeResponse... probes) {
            return probes(List.of(probes));
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder redirectConfigurations(@Nullable List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations) {
            $.redirectConfigurations = redirectConfigurations;
            return this;
        }

        public Builder redirectConfigurations(ApplicationGatewayRedirectConfigurationResponse... redirectConfigurations) {
            return redirectConfigurations(List.of(redirectConfigurations));
        }

        public Builder requestRoutingRules(@Nullable List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules) {
            $.requestRoutingRules = requestRoutingRules;
            return this;
        }

        public Builder requestRoutingRules(ApplicationGatewayRequestRoutingRuleResponse... requestRoutingRules) {
            return requestRoutingRules(List.of(requestRoutingRules));
        }

        public Builder resourceGuid(String resourceGuid) {
            $.resourceGuid = resourceGuid;
            return this;
        }

        public Builder rewriteRuleSets(@Nullable List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets) {
            $.rewriteRuleSets = rewriteRuleSets;
            return this;
        }

        public Builder rewriteRuleSets(ApplicationGatewayRewriteRuleSetResponse... rewriteRuleSets) {
            return rewriteRuleSets(List.of(rewriteRuleSets));
        }

        public Builder sku(@Nullable ApplicationGatewaySkuResponse sku) {
            $.sku = sku;
            return this;
        }

        public Builder sslCertificates(@Nullable List<ApplicationGatewaySslCertificateResponse> sslCertificates) {
            $.sslCertificates = sslCertificates;
            return this;
        }

        public Builder sslCertificates(ApplicationGatewaySslCertificateResponse... sslCertificates) {
            return sslCertificates(List.of(sslCertificates));
        }

        public Builder sslPolicy(@Nullable ApplicationGatewaySslPolicyResponse sslPolicy) {
            $.sslPolicy = sslPolicy;
            return this;
        }

        public Builder sslProfiles(@Nullable List<ApplicationGatewaySslProfileResponse> sslProfiles) {
            $.sslProfiles = sslProfiles;
            return this;
        }

        public Builder sslProfiles(ApplicationGatewaySslProfileResponse... sslProfiles) {
            return sslProfiles(List.of(sslProfiles));
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public Builder trustedClientCertificates(@Nullable List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates) {
            $.trustedClientCertificates = trustedClientCertificates;
            return this;
        }

        public Builder trustedClientCertificates(ApplicationGatewayTrustedClientCertificateResponse... trustedClientCertificates) {
            return trustedClientCertificates(List.of(trustedClientCertificates));
        }

        public Builder trustedRootCertificates(@Nullable List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates) {
            $.trustedRootCertificates = trustedRootCertificates;
            return this;
        }

        public Builder trustedRootCertificates(ApplicationGatewayTrustedRootCertificateResponse... trustedRootCertificates) {
            return trustedRootCertificates(List.of(trustedRootCertificates));
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder urlPathMaps(@Nullable List<ApplicationGatewayUrlPathMapResponse> urlPathMaps) {
            $.urlPathMaps = urlPathMaps;
            return this;
        }

        public Builder urlPathMaps(ApplicationGatewayUrlPathMapResponse... urlPathMaps) {
            return urlPathMaps(List.of(urlPathMaps));
        }

        public Builder webApplicationFirewallConfiguration(@Nullable ApplicationGatewayWebApplicationFirewallConfigurationResponse webApplicationFirewallConfiguration) {
            $.webApplicationFirewallConfiguration = webApplicationFirewallConfiguration;
            return this;
        }

        public Builder zones(@Nullable List<String> zones) {
            $.zones = zones;
            return this;
        }

        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public ApplicationGatewayResponse build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.operationalState = Objects.requireNonNull($.operationalState, "expected parameter 'operationalState' to be non-null");
            $.privateEndpointConnections = Objects.requireNonNull($.privateEndpointConnections, "expected parameter 'privateEndpointConnections' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.resourceGuid = Objects.requireNonNull($.resourceGuid, "expected parameter 'resourceGuid' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
