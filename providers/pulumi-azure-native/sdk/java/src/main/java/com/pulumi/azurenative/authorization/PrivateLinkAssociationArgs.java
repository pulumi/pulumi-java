// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization;

import com.pulumi.azurenative.authorization.inputs.PrivateLinkAssociationPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateLinkAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateLinkAssociationArgs Empty = new PrivateLinkAssociationArgs();

    /**
     * The management group ID.
     * 
     */
    @Import(name="groupId", required=true)
    private Output<String> groupId;

    /**
     * @return The management group ID.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }

    /**
     * The ID of the PLA
     * 
     */
    @Import(name="plaId")
    private @Nullable Output<String> plaId;

    /**
     * @return The ID of the PLA
     * 
     */
    public Optional<Output<String>> plaId() {
        return Optional.ofNullable(this.plaId);
    }

    /**
     * The properties of the PrivateLinkAssociation.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<PrivateLinkAssociationPropertiesArgs> properties;

    /**
     * @return The properties of the PrivateLinkAssociation.
     * 
     */
    public Optional<Output<PrivateLinkAssociationPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    private PrivateLinkAssociationArgs() {}

    private PrivateLinkAssociationArgs(PrivateLinkAssociationArgs $) {
        this.groupId = $.groupId;
        this.plaId = $.plaId;
        this.properties = $.properties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateLinkAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateLinkAssociationArgs $;

        public Builder() {
            $ = new PrivateLinkAssociationArgs();
        }

        public Builder(PrivateLinkAssociationArgs defaults) {
            $ = new PrivateLinkAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupId The management group ID.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The management group ID.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param plaId The ID of the PLA
         * 
         * @return builder
         * 
         */
        public Builder plaId(@Nullable Output<String> plaId) {
            $.plaId = plaId;
            return this;
        }

        /**
         * @param plaId The ID of the PLA
         * 
         * @return builder
         * 
         */
        public Builder plaId(String plaId) {
            return plaId(Output.of(plaId));
        }

        /**
         * @param properties The properties of the PrivateLinkAssociation.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<PrivateLinkAssociationPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties The properties of the PrivateLinkAssociation.
         * 
         * @return builder
         * 
         */
        public Builder properties(PrivateLinkAssociationPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        public PrivateLinkAssociationArgs build() {
            $.groupId = Objects.requireNonNull($.groupId, "expected parameter 'groupId' to be non-null");
            return $;
        }
    }

}
