// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybridnetwork.inputs;

import com.pulumi.azurenative.hybridnetwork.inputs.DataDiskArgs;
import com.pulumi.azurenative.hybridnetwork.inputs.ImageReferenceArgs;
import com.pulumi.azurenative.hybridnetwork.inputs.OsDiskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies the storage settings for the virtual machine disks.
 * 
 */
public final class StorageProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageProfileArgs Empty = new StorageProfileArgs();

    /**
     * Specifies the parameters that are used to add a data disk to a virtual machine.
     * 
     */
    @Import(name="dataDisks")
    private @Nullable Output<List<DataDiskArgs>> dataDisks;

    /**
     * @return Specifies the parameters that are used to add a data disk to a virtual machine.
     * 
     */
    public Optional<Output<List<DataDiskArgs>>> dataDisks() {
        return Optional.ofNullable(this.dataDisks);
    }

    /**
     * The image reference properties.
     * 
     */
    @Import(name="imageReference")
    private @Nullable Output<ImageReferenceArgs> imageReference;

    /**
     * @return The image reference properties.
     * 
     */
    public Optional<Output<ImageReferenceArgs>> imageReference() {
        return Optional.ofNullable(this.imageReference);
    }

    /**
     * Specifies information about the operating system disk used by the virtual machine.
     * 
     */
    @Import(name="osDisk")
    private @Nullable Output<OsDiskArgs> osDisk;

    /**
     * @return Specifies information about the operating system disk used by the virtual machine.
     * 
     */
    public Optional<Output<OsDiskArgs>> osDisk() {
        return Optional.ofNullable(this.osDisk);
    }

    private StorageProfileArgs() {}

    private StorageProfileArgs(StorageProfileArgs $) {
        this.dataDisks = $.dataDisks;
        this.imageReference = $.imageReference;
        this.osDisk = $.osDisk;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageProfileArgs $;

        public Builder() {
            $ = new StorageProfileArgs();
        }

        public Builder(StorageProfileArgs defaults) {
            $ = new StorageProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataDisks Specifies the parameters that are used to add a data disk to a virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(@Nullable Output<List<DataDiskArgs>> dataDisks) {
            $.dataDisks = dataDisks;
            return this;
        }

        /**
         * @param dataDisks Specifies the parameters that are used to add a data disk to a virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(List<DataDiskArgs> dataDisks) {
            return dataDisks(Output.of(dataDisks));
        }

        /**
         * @param dataDisks Specifies the parameters that are used to add a data disk to a virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(DataDiskArgs... dataDisks) {
            return dataDisks(List.of(dataDisks));
        }

        /**
         * @param imageReference The image reference properties.
         * 
         * @return builder
         * 
         */
        public Builder imageReference(@Nullable Output<ImageReferenceArgs> imageReference) {
            $.imageReference = imageReference;
            return this;
        }

        /**
         * @param imageReference The image reference properties.
         * 
         * @return builder
         * 
         */
        public Builder imageReference(ImageReferenceArgs imageReference) {
            return imageReference(Output.of(imageReference));
        }

        /**
         * @param osDisk Specifies information about the operating system disk used by the virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder osDisk(@Nullable Output<OsDiskArgs> osDisk) {
            $.osDisk = osDisk;
            return this;
        }

        /**
         * @param osDisk Specifies information about the operating system disk used by the virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder osDisk(OsDiskArgs osDisk) {
            return osDisk(Output.of(osDisk));
        }

        public StorageProfileArgs build() {
            return $;
        }
    }

}
