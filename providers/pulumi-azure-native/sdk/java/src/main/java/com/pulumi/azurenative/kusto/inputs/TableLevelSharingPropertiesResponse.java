// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.kusto.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Tables that will be included and excluded in the follower database
 * 
 */
public final class TableLevelSharingPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final TableLevelSharingPropertiesResponse Empty = new TableLevelSharingPropertiesResponse();

    /**
     * List of external tables exclude from the follower database
     * 
     */
    @Import(name="externalTablesToExclude")
    private @Nullable List<String> externalTablesToExclude;

    public Optional<List<String>> externalTablesToExclude() {
        return Optional.ofNullable(this.externalTablesToExclude);
    }

    /**
     * List of external tables to include in the follower database
     * 
     */
    @Import(name="externalTablesToInclude")
    private @Nullable List<String> externalTablesToInclude;

    public Optional<List<String>> externalTablesToInclude() {
        return Optional.ofNullable(this.externalTablesToInclude);
    }

    /**
     * List of materialized views exclude from the follower database
     * 
     */
    @Import(name="materializedViewsToExclude")
    private @Nullable List<String> materializedViewsToExclude;

    public Optional<List<String>> materializedViewsToExclude() {
        return Optional.ofNullable(this.materializedViewsToExclude);
    }

    /**
     * List of materialized views to include in the follower database
     * 
     */
    @Import(name="materializedViewsToInclude")
    private @Nullable List<String> materializedViewsToInclude;

    public Optional<List<String>> materializedViewsToInclude() {
        return Optional.ofNullable(this.materializedViewsToInclude);
    }

    /**
     * List of tables to exclude from the follower database
     * 
     */
    @Import(name="tablesToExclude")
    private @Nullable List<String> tablesToExclude;

    public Optional<List<String>> tablesToExclude() {
        return Optional.ofNullable(this.tablesToExclude);
    }

    /**
     * List of tables to include in the follower database
     * 
     */
    @Import(name="tablesToInclude")
    private @Nullable List<String> tablesToInclude;

    public Optional<List<String>> tablesToInclude() {
        return Optional.ofNullable(this.tablesToInclude);
    }

    private TableLevelSharingPropertiesResponse() {}

    private TableLevelSharingPropertiesResponse(TableLevelSharingPropertiesResponse $) {
        this.externalTablesToExclude = $.externalTablesToExclude;
        this.externalTablesToInclude = $.externalTablesToInclude;
        this.materializedViewsToExclude = $.materializedViewsToExclude;
        this.materializedViewsToInclude = $.materializedViewsToInclude;
        this.tablesToExclude = $.tablesToExclude;
        this.tablesToInclude = $.tablesToInclude;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableLevelSharingPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableLevelSharingPropertiesResponse $;

        public Builder() {
            $ = new TableLevelSharingPropertiesResponse();
        }

        public Builder(TableLevelSharingPropertiesResponse defaults) {
            $ = new TableLevelSharingPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder externalTablesToExclude(@Nullable List<String> externalTablesToExclude) {
            $.externalTablesToExclude = externalTablesToExclude;
            return this;
        }

        public Builder externalTablesToExclude(String... externalTablesToExclude) {
            return externalTablesToExclude(List.of(externalTablesToExclude));
        }

        public Builder externalTablesToInclude(@Nullable List<String> externalTablesToInclude) {
            $.externalTablesToInclude = externalTablesToInclude;
            return this;
        }

        public Builder externalTablesToInclude(String... externalTablesToInclude) {
            return externalTablesToInclude(List.of(externalTablesToInclude));
        }

        public Builder materializedViewsToExclude(@Nullable List<String> materializedViewsToExclude) {
            $.materializedViewsToExclude = materializedViewsToExclude;
            return this;
        }

        public Builder materializedViewsToExclude(String... materializedViewsToExclude) {
            return materializedViewsToExclude(List.of(materializedViewsToExclude));
        }

        public Builder materializedViewsToInclude(@Nullable List<String> materializedViewsToInclude) {
            $.materializedViewsToInclude = materializedViewsToInclude;
            return this;
        }

        public Builder materializedViewsToInclude(String... materializedViewsToInclude) {
            return materializedViewsToInclude(List.of(materializedViewsToInclude));
        }

        public Builder tablesToExclude(@Nullable List<String> tablesToExclude) {
            $.tablesToExclude = tablesToExclude;
            return this;
        }

        public Builder tablesToExclude(String... tablesToExclude) {
            return tablesToExclude(List.of(tablesToExclude));
        }

        public Builder tablesToInclude(@Nullable List<String> tablesToInclude) {
            $.tablesToInclude = tablesToInclude;
            return this;
        }

        public Builder tablesToInclude(String... tablesToInclude) {
            return tablesToInclude(List.of(tablesToInclude));
        }

        public TableLevelSharingPropertiesResponse build() {
            return $;
        }
    }

}
