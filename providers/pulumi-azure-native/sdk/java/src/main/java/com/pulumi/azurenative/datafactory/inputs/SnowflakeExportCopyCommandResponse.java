// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Snowflake export command settings.
 * 
 */
public final class SnowflakeExportCopyCommandResponse extends com.pulumi.resources.InvokeArgs {

    public static final SnowflakeExportCopyCommandResponse Empty = new SnowflakeExportCopyCommandResponse();

    /**
     * Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: &#34;additionalCopyOptions&#34;: { &#34;DATE_FORMAT&#34;: &#34;MM/DD/YYYY&#34;, &#34;TIME_FORMAT&#34;: &#34;&#39;HH24:MI:SS.FF&#39;&#34; }
     * 
     */
    @Import(name="additionalCopyOptions")
    private @Nullable Map<String,Object> additionalCopyOptions;

    public Optional<Map<String,Object>> additionalCopyOptions() {
        return Optional.ofNullable(this.additionalCopyOptions);
    }

    /**
     * Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: &#34;additionalFormatOptions&#34;: { &#34;OVERWRITE&#34;: &#34;TRUE&#34;, &#34;MAX_FILE_SIZE&#34;: &#34;&#39;FALSE&#39;&#34; }
     * 
     */
    @Import(name="additionalFormatOptions")
    private @Nullable Map<String,Object> additionalFormatOptions;

    public Optional<Map<String,Object>> additionalFormatOptions() {
        return Optional.ofNullable(this.additionalFormatOptions);
    }

    /**
     * The export setting type.
     * Expected value is &#39;SnowflakeExportCopyCommand&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private SnowflakeExportCopyCommandResponse() {}

    private SnowflakeExportCopyCommandResponse(SnowflakeExportCopyCommandResponse $) {
        this.additionalCopyOptions = $.additionalCopyOptions;
        this.additionalFormatOptions = $.additionalFormatOptions;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnowflakeExportCopyCommandResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnowflakeExportCopyCommandResponse $;

        public Builder() {
            $ = new SnowflakeExportCopyCommandResponse();
        }

        public Builder(SnowflakeExportCopyCommandResponse defaults) {
            $ = new SnowflakeExportCopyCommandResponse(Objects.requireNonNull(defaults));
        }

        public Builder additionalCopyOptions(@Nullable Map<String,Object> additionalCopyOptions) {
            $.additionalCopyOptions = additionalCopyOptions;
            return this;
        }

        public Builder additionalFormatOptions(@Nullable Map<String,Object> additionalFormatOptions) {
            $.additionalFormatOptions = additionalFormatOptions;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public SnowflakeExportCopyCommandResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
