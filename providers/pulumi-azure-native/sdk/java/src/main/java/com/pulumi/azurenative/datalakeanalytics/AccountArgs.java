// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datalakeanalytics;

import com.pulumi.azurenative.datalakeanalytics.enums.FirewallAllowAzureIpsState;
import com.pulumi.azurenative.datalakeanalytics.enums.FirewallState;
import com.pulumi.azurenative.datalakeanalytics.enums.TierType;
import com.pulumi.azurenative.datalakeanalytics.inputs.AddDataLakeStoreWithAccountParametersArgs;
import com.pulumi.azurenative.datalakeanalytics.inputs.AddStorageAccountWithAccountParametersArgs;
import com.pulumi.azurenative.datalakeanalytics.inputs.CreateComputePolicyWithAccountParametersArgs;
import com.pulumi.azurenative.datalakeanalytics.inputs.CreateFirewallRuleWithAccountParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountArgs Empty = new AccountArgs();

    /**
     * The name of the Data Lake Analytics account.
     * 
     */
    @Import(name="accountName")
      private final @Nullable Output<String> accountName;

    public Output<String> accountName() {
        return this.accountName == null ? Codegen.empty() : this.accountName;
    }

    /**
     * The list of compute policies associated with this account.
     * 
     */
    @Import(name="computePolicies")
      private final @Nullable Output<List<CreateComputePolicyWithAccountParametersArgs>> computePolicies;

    public Output<List<CreateComputePolicyWithAccountParametersArgs>> computePolicies() {
        return this.computePolicies == null ? Codegen.empty() : this.computePolicies;
    }

    /**
     * The list of Data Lake Store accounts associated with this account.
     * 
     */
    @Import(name="dataLakeStoreAccounts", required=true)
      private final Output<List<AddDataLakeStoreWithAccountParametersArgs>> dataLakeStoreAccounts;

    public Output<List<AddDataLakeStoreWithAccountParametersArgs>> dataLakeStoreAccounts() {
        return this.dataLakeStoreAccounts;
    }

    /**
     * The default Data Lake Store account associated with this account.
     * 
     */
    @Import(name="defaultDataLakeStoreAccount", required=true)
      private final Output<String> defaultDataLakeStoreAccount;

    public Output<String> defaultDataLakeStoreAccount() {
        return this.defaultDataLakeStoreAccount;
    }

    /**
     * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
     * 
     */
    @Import(name="firewallAllowAzureIps")
      private final @Nullable Output<FirewallAllowAzureIpsState> firewallAllowAzureIps;

    public Output<FirewallAllowAzureIpsState> firewallAllowAzureIps() {
        return this.firewallAllowAzureIps == null ? Codegen.empty() : this.firewallAllowAzureIps;
    }

    /**
     * The list of firewall rules associated with this account.
     * 
     */
    @Import(name="firewallRules")
      private final @Nullable Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules;

    public Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules() {
        return this.firewallRules == null ? Codegen.empty() : this.firewallRules;
    }

    /**
     * The current state of the IP address firewall for this account.
     * 
     */
    @Import(name="firewallState")
      private final @Nullable Output<FirewallState> firewallState;

    public Output<FirewallState> firewallState() {
        return this.firewallState == null ? Codegen.empty() : this.firewallState;
    }

    /**
     * The resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The maximum supported degree of parallelism for this account.
     * 
     */
    @Import(name="maxDegreeOfParallelism")
      private final @Nullable Output<Integer> maxDegreeOfParallelism;

    public Output<Integer> maxDegreeOfParallelism() {
        return this.maxDegreeOfParallelism == null ? Codegen.empty() : this.maxDegreeOfParallelism;
    }

    /**
     * The maximum supported degree of parallelism per job for this account.
     * 
     */
    @Import(name="maxDegreeOfParallelismPerJob")
      private final @Nullable Output<Integer> maxDegreeOfParallelismPerJob;

    public Output<Integer> maxDegreeOfParallelismPerJob() {
        return this.maxDegreeOfParallelismPerJob == null ? Codegen.empty() : this.maxDegreeOfParallelismPerJob;
    }

    /**
     * The maximum supported jobs running under the account at the same time.
     * 
     */
    @Import(name="maxJobCount")
      private final @Nullable Output<Integer> maxJobCount;

    public Output<Integer> maxJobCount() {
        return this.maxJobCount == null ? Codegen.empty() : this.maxJobCount;
    }

    /**
     * The minimum supported priority per job for this account.
     * 
     */
    @Import(name="minPriorityPerJob")
      private final @Nullable Output<Integer> minPriorityPerJob;

    public Output<Integer> minPriorityPerJob() {
        return this.minPriorityPerJob == null ? Codegen.empty() : this.minPriorityPerJob;
    }

    /**
     * The commitment tier for the next month.
     * 
     */
    @Import(name="newTier")
      private final @Nullable Output<TierType> newTier;

    public Output<TierType> newTier() {
        return this.newTier == null ? Codegen.empty() : this.newTier;
    }

    /**
     * The number of days that job metadata is retained.
     * 
     */
    @Import(name="queryStoreRetention")
      private final @Nullable Output<Integer> queryStoreRetention;

    public Output<Integer> queryStoreRetention() {
        return this.queryStoreRetention == null ? Codegen.empty() : this.queryStoreRetention;
    }

    /**
     * The name of the Azure resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The list of Azure Blob Storage accounts associated with this account.
     * 
     */
    @Import(name="storageAccounts")
      private final @Nullable Output<List<AddStorageAccountWithAccountParametersArgs>> storageAccounts;

    public Output<List<AddStorageAccountWithAccountParametersArgs>> storageAccounts() {
        return this.storageAccounts == null ? Codegen.empty() : this.storageAccounts;
    }

    /**
     * The resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public AccountArgs(
        @Nullable Output<String> accountName,
        @Nullable Output<List<CreateComputePolicyWithAccountParametersArgs>> computePolicies,
        Output<List<AddDataLakeStoreWithAccountParametersArgs>> dataLakeStoreAccounts,
        Output<String> defaultDataLakeStoreAccount,
        @Nullable Output<FirewallAllowAzureIpsState> firewallAllowAzureIps,
        @Nullable Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules,
        @Nullable Output<FirewallState> firewallState,
        @Nullable Output<String> location,
        @Nullable Output<Integer> maxDegreeOfParallelism,
        @Nullable Output<Integer> maxDegreeOfParallelismPerJob,
        @Nullable Output<Integer> maxJobCount,
        @Nullable Output<Integer> minPriorityPerJob,
        @Nullable Output<TierType> newTier,
        @Nullable Output<Integer> queryStoreRetention,
        Output<String> resourceGroupName,
        @Nullable Output<List<AddStorageAccountWithAccountParametersArgs>> storageAccounts,
        @Nullable Output<Map<String,String>> tags) {
        this.accountName = accountName;
        this.computePolicies = computePolicies;
        this.dataLakeStoreAccounts = Objects.requireNonNull(dataLakeStoreAccounts, "expected parameter 'dataLakeStoreAccounts' to be non-null");
        this.defaultDataLakeStoreAccount = Objects.requireNonNull(defaultDataLakeStoreAccount, "expected parameter 'defaultDataLakeStoreAccount' to be non-null");
        this.firewallAllowAzureIps = firewallAllowAzureIps == null ? Codegen.ofNullable(com.pulumi.azurenative.datalakeanalytics.enums.FirewallAllowAzureIpsState.Disabled) : firewallAllowAzureIps;
        this.firewallRules = firewallRules;
        this.firewallState = firewallState == null ? Codegen.ofNullable(com.pulumi.azurenative.datalakeanalytics.enums.FirewallState.Disabled) : firewallState;
        this.location = location;
        this.maxDegreeOfParallelism = maxDegreeOfParallelism == null ? Codegen.ofNullable(30) : maxDegreeOfParallelism;
        this.maxDegreeOfParallelismPerJob = maxDegreeOfParallelismPerJob == null ? Codegen.ofNullable(32) : maxDegreeOfParallelismPerJob;
        this.maxJobCount = maxJobCount == null ? Codegen.ofNullable(3) : maxJobCount;
        this.minPriorityPerJob = minPriorityPerJob;
        this.newTier = newTier == null ? Codegen.ofNullable(com.pulumi.azurenative.datalakeanalytics.enums.TierType.Consumption) : newTier;
        this.queryStoreRetention = queryStoreRetention == null ? Codegen.ofNullable(30) : queryStoreRetention;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.storageAccounts = storageAccounts;
        this.tags = tags;
    }

    private AccountArgs() {
        this.accountName = Codegen.empty();
        this.computePolicies = Codegen.empty();
        this.dataLakeStoreAccounts = Codegen.empty();
        this.defaultDataLakeStoreAccount = Codegen.empty();
        this.firewallAllowAzureIps = Codegen.empty();
        this.firewallRules = Codegen.empty();
        this.firewallState = Codegen.empty();
        this.location = Codegen.empty();
        this.maxDegreeOfParallelism = Codegen.empty();
        this.maxDegreeOfParallelismPerJob = Codegen.empty();
        this.maxJobCount = Codegen.empty();
        this.minPriorityPerJob = Codegen.empty();
        this.newTier = Codegen.empty();
        this.queryStoreRetention = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.storageAccounts = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accountName;
        private @Nullable Output<List<CreateComputePolicyWithAccountParametersArgs>> computePolicies;
        private Output<List<AddDataLakeStoreWithAccountParametersArgs>> dataLakeStoreAccounts;
        private Output<String> defaultDataLakeStoreAccount;
        private @Nullable Output<FirewallAllowAzureIpsState> firewallAllowAzureIps;
        private @Nullable Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules;
        private @Nullable Output<FirewallState> firewallState;
        private @Nullable Output<String> location;
        private @Nullable Output<Integer> maxDegreeOfParallelism;
        private @Nullable Output<Integer> maxDegreeOfParallelismPerJob;
        private @Nullable Output<Integer> maxJobCount;
        private @Nullable Output<Integer> minPriorityPerJob;
        private @Nullable Output<TierType> newTier;
        private @Nullable Output<Integer> queryStoreRetention;
        private Output<String> resourceGroupName;
        private @Nullable Output<List<AddStorageAccountWithAccountParametersArgs>> storageAccounts;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AccountArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.computePolicies = defaults.computePolicies;
    	      this.dataLakeStoreAccounts = defaults.dataLakeStoreAccounts;
    	      this.defaultDataLakeStoreAccount = defaults.defaultDataLakeStoreAccount;
    	      this.firewallAllowAzureIps = defaults.firewallAllowAzureIps;
    	      this.firewallRules = defaults.firewallRules;
    	      this.firewallState = defaults.firewallState;
    	      this.location = defaults.location;
    	      this.maxDegreeOfParallelism = defaults.maxDegreeOfParallelism;
    	      this.maxDegreeOfParallelismPerJob = defaults.maxDegreeOfParallelismPerJob;
    	      this.maxJobCount = defaults.maxJobCount;
    	      this.minPriorityPerJob = defaults.minPriorityPerJob;
    	      this.newTier = defaults.newTier;
    	      this.queryStoreRetention = defaults.queryStoreRetention;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.storageAccounts = defaults.storageAccounts;
    	      this.tags = defaults.tags;
        }

        public Builder accountName(@Nullable Output<String> accountName) {
            this.accountName = accountName;
            return this;
        }
        public Builder accountName(@Nullable String accountName) {
            this.accountName = Codegen.ofNullable(accountName);
            return this;
        }
        public Builder computePolicies(@Nullable Output<List<CreateComputePolicyWithAccountParametersArgs>> computePolicies) {
            this.computePolicies = computePolicies;
            return this;
        }
        public Builder computePolicies(@Nullable List<CreateComputePolicyWithAccountParametersArgs> computePolicies) {
            this.computePolicies = Codegen.ofNullable(computePolicies);
            return this;
        }
        public Builder computePolicies(CreateComputePolicyWithAccountParametersArgs... computePolicies) {
            return computePolicies(List.of(computePolicies));
        }
        public Builder dataLakeStoreAccounts(Output<List<AddDataLakeStoreWithAccountParametersArgs>> dataLakeStoreAccounts) {
            this.dataLakeStoreAccounts = Objects.requireNonNull(dataLakeStoreAccounts);
            return this;
        }
        public Builder dataLakeStoreAccounts(List<AddDataLakeStoreWithAccountParametersArgs> dataLakeStoreAccounts) {
            this.dataLakeStoreAccounts = Output.of(Objects.requireNonNull(dataLakeStoreAccounts));
            return this;
        }
        public Builder dataLakeStoreAccounts(AddDataLakeStoreWithAccountParametersArgs... dataLakeStoreAccounts) {
            return dataLakeStoreAccounts(List.of(dataLakeStoreAccounts));
        }
        public Builder defaultDataLakeStoreAccount(Output<String> defaultDataLakeStoreAccount) {
            this.defaultDataLakeStoreAccount = Objects.requireNonNull(defaultDataLakeStoreAccount);
            return this;
        }
        public Builder defaultDataLakeStoreAccount(String defaultDataLakeStoreAccount) {
            this.defaultDataLakeStoreAccount = Output.of(Objects.requireNonNull(defaultDataLakeStoreAccount));
            return this;
        }
        public Builder firewallAllowAzureIps(@Nullable Output<FirewallAllowAzureIpsState> firewallAllowAzureIps) {
            this.firewallAllowAzureIps = firewallAllowAzureIps;
            return this;
        }
        public Builder firewallAllowAzureIps(@Nullable FirewallAllowAzureIpsState firewallAllowAzureIps) {
            this.firewallAllowAzureIps = Codegen.ofNullable(firewallAllowAzureIps);
            return this;
        }
        public Builder firewallRules(@Nullable Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules) {
            this.firewallRules = firewallRules;
            return this;
        }
        public Builder firewallRules(@Nullable List<CreateFirewallRuleWithAccountParametersArgs> firewallRules) {
            this.firewallRules = Codegen.ofNullable(firewallRules);
            return this;
        }
        public Builder firewallRules(CreateFirewallRuleWithAccountParametersArgs... firewallRules) {
            return firewallRules(List.of(firewallRules));
        }
        public Builder firewallState(@Nullable Output<FirewallState> firewallState) {
            this.firewallState = firewallState;
            return this;
        }
        public Builder firewallState(@Nullable FirewallState firewallState) {
            this.firewallState = Codegen.ofNullable(firewallState);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder maxDegreeOfParallelism(@Nullable Output<Integer> maxDegreeOfParallelism) {
            this.maxDegreeOfParallelism = maxDegreeOfParallelism;
            return this;
        }
        public Builder maxDegreeOfParallelism(@Nullable Integer maxDegreeOfParallelism) {
            this.maxDegreeOfParallelism = Codegen.ofNullable(maxDegreeOfParallelism);
            return this;
        }
        public Builder maxDegreeOfParallelismPerJob(@Nullable Output<Integer> maxDegreeOfParallelismPerJob) {
            this.maxDegreeOfParallelismPerJob = maxDegreeOfParallelismPerJob;
            return this;
        }
        public Builder maxDegreeOfParallelismPerJob(@Nullable Integer maxDegreeOfParallelismPerJob) {
            this.maxDegreeOfParallelismPerJob = Codegen.ofNullable(maxDegreeOfParallelismPerJob);
            return this;
        }
        public Builder maxJobCount(@Nullable Output<Integer> maxJobCount) {
            this.maxJobCount = maxJobCount;
            return this;
        }
        public Builder maxJobCount(@Nullable Integer maxJobCount) {
            this.maxJobCount = Codegen.ofNullable(maxJobCount);
            return this;
        }
        public Builder minPriorityPerJob(@Nullable Output<Integer> minPriorityPerJob) {
            this.minPriorityPerJob = minPriorityPerJob;
            return this;
        }
        public Builder minPriorityPerJob(@Nullable Integer minPriorityPerJob) {
            this.minPriorityPerJob = Codegen.ofNullable(minPriorityPerJob);
            return this;
        }
        public Builder newTier(@Nullable Output<TierType> newTier) {
            this.newTier = newTier;
            return this;
        }
        public Builder newTier(@Nullable TierType newTier) {
            this.newTier = Codegen.ofNullable(newTier);
            return this;
        }
        public Builder queryStoreRetention(@Nullable Output<Integer> queryStoreRetention) {
            this.queryStoreRetention = queryStoreRetention;
            return this;
        }
        public Builder queryStoreRetention(@Nullable Integer queryStoreRetention) {
            this.queryStoreRetention = Codegen.ofNullable(queryStoreRetention);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder storageAccounts(@Nullable Output<List<AddStorageAccountWithAccountParametersArgs>> storageAccounts) {
            this.storageAccounts = storageAccounts;
            return this;
        }
        public Builder storageAccounts(@Nullable List<AddStorageAccountWithAccountParametersArgs> storageAccounts) {
            this.storageAccounts = Codegen.ofNullable(storageAccounts);
            return this;
        }
        public Builder storageAccounts(AddStorageAccountWithAccountParametersArgs... storageAccounts) {
            return storageAccounts(List.of(storageAccounts));
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public AccountArgs build() {
            return new AccountArgs(accountName, computePolicies, dataLakeStoreAccounts, defaultDataLakeStoreAccount, firewallAllowAzureIps, firewallRules, firewallState, location, maxDegreeOfParallelism, maxDegreeOfParallelismPerJob, maxJobCount, minPriorityPerJob, newTier, queryStoreRetention, resourceGroupName, storageAccounts, tags);
        }
    }
}
