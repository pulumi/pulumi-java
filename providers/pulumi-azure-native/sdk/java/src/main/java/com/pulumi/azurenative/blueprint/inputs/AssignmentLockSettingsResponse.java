// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.blueprint.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines how resources deployed by a blueprint assignment are locked.
 * 
 */
public final class AssignmentLockSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final AssignmentLockSettingsResponse Empty = new AssignmentLockSettingsResponse();

    /**
     * List of management operations that are excluded from blueprint locks. Up to 200 actions are permitted. If the lock mode is set to &#39;AllResourcesReadOnly&#39;, then the following actions are automatically appended to &#39;excludedActions&#39;: &#39;*{@literal /}read&#39;, &#39;Microsoft.Network/virtualNetworks/subnets/join/action&#39; and &#39;Microsoft.Authorization/locks/delete&#39;. If the lock mode is set to &#39;AllResourcesDoNotDelete&#39;, then the following actions are automatically appended to &#39;excludedActions&#39;: &#39;Microsoft.Authorization/locks/delete&#39;. Duplicate actions will get removed.
     * 
     */
    @Import(name="excludedActions")
    private @Nullable List<String> excludedActions;

    public Optional<List<String>> excludedActions() {
        return Optional.ofNullable(this.excludedActions);
    }

    /**
     * List of AAD principals excluded from blueprint locks. Up to 5 principals are permitted.
     * 
     */
    @Import(name="excludedPrincipals")
    private @Nullable List<String> excludedPrincipals;

    public Optional<List<String>> excludedPrincipals() {
        return Optional.ofNullable(this.excludedPrincipals);
    }

    /**
     * Lock mode.
     * 
     */
    @Import(name="mode")
    private @Nullable String mode;

    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }

    private AssignmentLockSettingsResponse() {}

    private AssignmentLockSettingsResponse(AssignmentLockSettingsResponse $) {
        this.excludedActions = $.excludedActions;
        this.excludedPrincipals = $.excludedPrincipals;
        this.mode = $.mode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssignmentLockSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssignmentLockSettingsResponse $;

        public Builder() {
            $ = new AssignmentLockSettingsResponse();
        }

        public Builder(AssignmentLockSettingsResponse defaults) {
            $ = new AssignmentLockSettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder excludedActions(@Nullable List<String> excludedActions) {
            $.excludedActions = excludedActions;
            return this;
        }

        public Builder excludedActions(String... excludedActions) {
            return excludedActions(List.of(excludedActions));
        }

        public Builder excludedPrincipals(@Nullable List<String> excludedPrincipals) {
            $.excludedPrincipals = excludedPrincipals;
            return this;
        }

        public Builder excludedPrincipals(String... excludedPrincipals) {
            return excludedPrincipals(List.of(excludedPrincipals));
        }

        public Builder mode(@Nullable String mode) {
            $.mode = mode;
            return this;
        }

        public AssignmentLockSettingsResponse build() {
            return $;
        }
    }

}
