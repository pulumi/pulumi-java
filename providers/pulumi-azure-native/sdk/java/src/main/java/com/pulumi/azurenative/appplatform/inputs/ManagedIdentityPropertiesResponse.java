// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Managed identity properties retrieved from ARM request headers.
 * 
 */
public final class ManagedIdentityPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ManagedIdentityPropertiesResponse Empty = new ManagedIdentityPropertiesResponse();

    /**
     * Principal Id
     * 
     */
    @Import(name="principalId")
    private @Nullable String principalId;

    /**
     * @return Principal Id
     * 
     */
    public Optional<String> principalId() {
        return Optional.ofNullable(this.principalId);
    }

    /**
     * Tenant Id
     * 
     */
    @Import(name="tenantId")
    private @Nullable String tenantId;

    /**
     * @return Tenant Id
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    /**
     * Type of the managed identity
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return Type of the managed identity
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private ManagedIdentityPropertiesResponse() {}

    private ManagedIdentityPropertiesResponse(ManagedIdentityPropertiesResponse $) {
        this.principalId = $.principalId;
        this.tenantId = $.tenantId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedIdentityPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedIdentityPropertiesResponse $;

        public Builder() {
            $ = new ManagedIdentityPropertiesResponse();
        }

        public Builder(ManagedIdentityPropertiesResponse defaults) {
            $ = new ManagedIdentityPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param principalId Principal Id
         * 
         * @return builder
         * 
         */
        public Builder principalId(@Nullable String principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param tenantId Tenant Id
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param type Type of the managed identity
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public ManagedIdentityPropertiesResponse build() {
            return $;
        }
    }

}
