// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.ApiOAuthSettingsParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * OAuth settings for the connection provider
 * 
 */
public final class ApiOAuthSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiOAuthSettingsArgs Empty = new ApiOAuthSettingsArgs();

    /**
     * Resource provider client id
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Client Secret needed for OAuth
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * OAuth parameters key is the name of parameter
     * 
     */
    @Import(name="customParameters")
    private @Nullable Output<Map<String,ApiOAuthSettingsParameterArgs>> customParameters;

    public Optional<Output<Map<String,ApiOAuthSettingsParameterArgs>>> customParameters() {
        return Optional.ofNullable(this.customParameters);
    }

    /**
     * Identity provider
     * 
     */
    @Import(name="identityProvider")
    private @Nullable Output<String> identityProvider;

    public Optional<Output<String>> identityProvider() {
        return Optional.ofNullable(this.identityProvider);
    }

    /**
     * Read only properties for this oauth setting.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<Object> properties;

    public Optional<Output<Object>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Url
     * 
     */
    @Import(name="redirectUrl")
    private @Nullable Output<String> redirectUrl;

    public Optional<Output<String>> redirectUrl() {
        return Optional.ofNullable(this.redirectUrl);
    }

    /**
     * OAuth scopes
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    private ApiOAuthSettingsArgs() {}

    private ApiOAuthSettingsArgs(ApiOAuthSettingsArgs $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.customParameters = $.customParameters;
        this.identityProvider = $.identityProvider;
        this.properties = $.properties;
        this.redirectUrl = $.redirectUrl;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiOAuthSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiOAuthSettingsArgs $;

        public Builder() {
            $ = new ApiOAuthSettingsArgs();
        }

        public Builder(ApiOAuthSettingsArgs defaults) {
            $ = new ApiOAuthSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public Builder customParameters(@Nullable Output<Map<String,ApiOAuthSettingsParameterArgs>> customParameters) {
            $.customParameters = customParameters;
            return this;
        }

        public Builder customParameters(Map<String,ApiOAuthSettingsParameterArgs> customParameters) {
            return customParameters(Output.of(customParameters));
        }

        public Builder identityProvider(@Nullable Output<String> identityProvider) {
            $.identityProvider = identityProvider;
            return this;
        }

        public Builder identityProvider(String identityProvider) {
            return identityProvider(Output.of(identityProvider));
        }

        public Builder properties(@Nullable Output<Object> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(Object properties) {
            return properties(Output.of(properties));
        }

        public Builder redirectUrl(@Nullable Output<String> redirectUrl) {
            $.redirectUrl = redirectUrl;
            return this;
        }

        public Builder redirectUrl(String redirectUrl) {
            return redirectUrl(Output.of(redirectUrl));
        }

        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public ApiOAuthSettingsArgs build() {
            return $;
        }
    }

}
