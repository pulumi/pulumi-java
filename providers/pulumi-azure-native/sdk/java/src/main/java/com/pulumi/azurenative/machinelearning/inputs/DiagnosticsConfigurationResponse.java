// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearning.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Diagnostics settings for an Azure ML web service.
 * 
 */
public final class DiagnosticsConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final DiagnosticsConfigurationResponse Empty = new DiagnosticsConfigurationResponse();

    /**
     * Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
     * 
     */
    @Import(name="expiry")
    private @Nullable String expiry;

    /**
     * @return Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
     * 
     */
    public Optional<String> expiry() {
        return Optional.ofNullable(this.expiry);
    }

    /**
     * Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
     * 
     */
    @Import(name="level", required=true)
    private String level;

    /**
     * @return Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
     * 
     */
    public String level() {
        return this.level;
    }

    private DiagnosticsConfigurationResponse() {}

    private DiagnosticsConfigurationResponse(DiagnosticsConfigurationResponse $) {
        this.expiry = $.expiry;
        this.level = $.level;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiagnosticsConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiagnosticsConfigurationResponse $;

        public Builder() {
            $ = new DiagnosticsConfigurationResponse();
        }

        public Builder(DiagnosticsConfigurationResponse defaults) {
            $ = new DiagnosticsConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param expiry Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
         * 
         * @return builder
         * 
         */
        public Builder expiry(@Nullable String expiry) {
            $.expiry = expiry;
            return this;
        }

        /**
         * @param level Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
         * 
         * @return builder
         * 
         */
        public Builder level(String level) {
            $.level = level;
            return this;
        }

        public DiagnosticsConfigurationResponse build() {
            $.level = Objects.requireNonNull($.level, "expected parameter 'level' to be non-null");
            return $;
        }
    }

}
