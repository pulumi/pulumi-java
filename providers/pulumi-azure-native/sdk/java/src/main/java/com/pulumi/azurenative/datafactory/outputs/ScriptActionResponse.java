// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScriptActionResponse {
    /**
     * @return The user provided name of the script action.
     * 
     */
    private final String name;
    /**
     * @return The parameters for the script action.
     * 
     */
    private final @Nullable String parameters;
    /**
     * @return The node types on which the script action should be executed.
     * 
     */
    private final Object roles;
    /**
     * @return The URI for the script action.
     * 
     */
    private final String uri;

    @CustomType.Constructor
    private ScriptActionResponse(
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("parameters") @Nullable String parameters,
        @CustomType.Parameter("roles") Object roles,
        @CustomType.Parameter("uri") String uri) {
        this.name = name;
        this.parameters = parameters;
        this.roles = roles;
        this.uri = uri;
    }

    /**
     * @return The user provided name of the script action.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The parameters for the script action.
     * 
     */
    public Optional<String> parameters() {
        return Optional.ofNullable(this.parameters);
    }
    /**
     * @return The node types on which the script action should be executed.
     * 
     */
    public Object roles() {
        return this.roles;
    }
    /**
     * @return The URI for the script action.
     * 
     */
    public String uri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScriptActionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private @Nullable String parameters;
        private Object roles;
        private String uri;

        public Builder() {
    	      // Empty
        }

        public Builder(ScriptActionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.roles = defaults.roles;
    	      this.uri = defaults.uri;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder parameters(@Nullable String parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder roles(Object roles) {
            this.roles = Objects.requireNonNull(roles);
            return this;
        }
        public Builder uri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }        public ScriptActionResponse build() {
            return new ScriptActionResponse(name, parameters, roles, uri);
        }
    }
}
