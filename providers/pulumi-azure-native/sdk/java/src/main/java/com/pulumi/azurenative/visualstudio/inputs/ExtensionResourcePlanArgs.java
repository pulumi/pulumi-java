// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.visualstudio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Plan data for an extension resource.
 * 
 */
public final class ExtensionResourcePlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExtensionResourcePlanArgs Empty = new ExtensionResourcePlanArgs();

    /**
     * Name of the plan.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the plan.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Product name.
     * 
     */
    @Import(name="product")
    private @Nullable Output<String> product;

    /**
     * @return Product name.
     * 
     */
    public Optional<Output<String>> product() {
        return Optional.ofNullable(this.product);
    }

    /**
     * Optional: the promotion code associated with the plan.
     * 
     */
    @Import(name="promotionCode")
    private @Nullable Output<String> promotionCode;

    /**
     * @return Optional: the promotion code associated with the plan.
     * 
     */
    public Optional<Output<String>> promotionCode() {
        return Optional.ofNullable(this.promotionCode);
    }

    /**
     * Name of the extension publisher.
     * 
     */
    @Import(name="publisher")
    private @Nullable Output<String> publisher;

    /**
     * @return Name of the extension publisher.
     * 
     */
    public Optional<Output<String>> publisher() {
        return Optional.ofNullable(this.publisher);
    }

    /**
     * A string that uniquely identifies the plan version.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return A string that uniquely identifies the plan version.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ExtensionResourcePlanArgs() {}

    private ExtensionResourcePlanArgs(ExtensionResourcePlanArgs $) {
        this.name = $.name;
        this.product = $.product;
        this.promotionCode = $.promotionCode;
        this.publisher = $.publisher;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExtensionResourcePlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExtensionResourcePlanArgs $;

        public Builder() {
            $ = new ExtensionResourcePlanArgs();
        }

        public Builder(ExtensionResourcePlanArgs defaults) {
            $ = new ExtensionResourcePlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the plan.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the plan.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param product Product name.
         * 
         * @return builder
         * 
         */
        public Builder product(@Nullable Output<String> product) {
            $.product = product;
            return this;
        }

        /**
         * @param product Product name.
         * 
         * @return builder
         * 
         */
        public Builder product(String product) {
            return product(Output.of(product));
        }

        /**
         * @param promotionCode Optional: the promotion code associated with the plan.
         * 
         * @return builder
         * 
         */
        public Builder promotionCode(@Nullable Output<String> promotionCode) {
            $.promotionCode = promotionCode;
            return this;
        }

        /**
         * @param promotionCode Optional: the promotion code associated with the plan.
         * 
         * @return builder
         * 
         */
        public Builder promotionCode(String promotionCode) {
            return promotionCode(Output.of(promotionCode));
        }

        /**
         * @param publisher Name of the extension publisher.
         * 
         * @return builder
         * 
         */
        public Builder publisher(@Nullable Output<String> publisher) {
            $.publisher = publisher;
            return this;
        }

        /**
         * @param publisher Name of the extension publisher.
         * 
         * @return builder
         * 
         */
        public Builder publisher(String publisher) {
            return publisher(Output.of(publisher));
        }

        /**
         * @param version A string that uniquely identifies the plan version.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version A string that uniquely identifies the plan version.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ExtensionResourcePlanArgs build() {
            return $;
        }
    }

}
