// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetCreateRequestTimeSeriesArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetCreateRequestTimeSeriesArgs Empty = new DatasetCreateRequestTimeSeriesArgs();

    /**
     * Column name to be used as CoarseGrainTimestamp. Can only be used if &#39;fineGrainTimestamp&#39; is specified and cannot be same as &#39;fineGrainTimestamp&#39;.
     * 
     */
    @Import(name="coarseGrainTimestamp")
    private @Nullable Output<String> coarseGrainTimestamp;

    /**
     * @return Column name to be used as CoarseGrainTimestamp. Can only be used if &#39;fineGrainTimestamp&#39; is specified and cannot be same as &#39;fineGrainTimestamp&#39;.
     * 
     */
    public Optional<Output<String>> coarseGrainTimestamp() {
        return Optional.ofNullable(this.coarseGrainTimestamp);
    }

    /**
     *  Column name to be used as FineGrainTimestamp
     * 
     */
    @Import(name="fineGrainTimestamp")
    private @Nullable Output<String> fineGrainTimestamp;

    /**
     * @return  Column name to be used as FineGrainTimestamp
     * 
     */
    public Optional<Output<String>> fineGrainTimestamp() {
        return Optional.ofNullable(this.fineGrainTimestamp);
    }

    private DatasetCreateRequestTimeSeriesArgs() {}

    private DatasetCreateRequestTimeSeriesArgs(DatasetCreateRequestTimeSeriesArgs $) {
        this.coarseGrainTimestamp = $.coarseGrainTimestamp;
        this.fineGrainTimestamp = $.fineGrainTimestamp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetCreateRequestTimeSeriesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetCreateRequestTimeSeriesArgs $;

        public Builder() {
            $ = new DatasetCreateRequestTimeSeriesArgs();
        }

        public Builder(DatasetCreateRequestTimeSeriesArgs defaults) {
            $ = new DatasetCreateRequestTimeSeriesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param coarseGrainTimestamp Column name to be used as CoarseGrainTimestamp. Can only be used if &#39;fineGrainTimestamp&#39; is specified and cannot be same as &#39;fineGrainTimestamp&#39;.
         * 
         * @return builder
         * 
         */
        public Builder coarseGrainTimestamp(@Nullable Output<String> coarseGrainTimestamp) {
            $.coarseGrainTimestamp = coarseGrainTimestamp;
            return this;
        }

        /**
         * @param coarseGrainTimestamp Column name to be used as CoarseGrainTimestamp. Can only be used if &#39;fineGrainTimestamp&#39; is specified and cannot be same as &#39;fineGrainTimestamp&#39;.
         * 
         * @return builder
         * 
         */
        public Builder coarseGrainTimestamp(String coarseGrainTimestamp) {
            return coarseGrainTimestamp(Output.of(coarseGrainTimestamp));
        }

        /**
         * @param fineGrainTimestamp  Column name to be used as FineGrainTimestamp
         * 
         * @return builder
         * 
         */
        public Builder fineGrainTimestamp(@Nullable Output<String> fineGrainTimestamp) {
            $.fineGrainTimestamp = fineGrainTimestamp;
            return this;
        }

        /**
         * @param fineGrainTimestamp  Column name to be used as FineGrainTimestamp
         * 
         * @return builder
         * 
         */
        public Builder fineGrainTimestamp(String fineGrainTimestamp) {
            return fineGrainTimestamp(Output.of(fineGrainTimestamp));
        }

        public DatasetCreateRequestTimeSeriesArgs build() {
            return $;
        }
    }

}
