// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Hyper-V Replica Azure specific input for creating a protection profile.
 * 
 */
public final class HyperVReplicaAzurePolicyInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final HyperVReplicaAzurePolicyInputArgs Empty = new HyperVReplicaAzurePolicyInputArgs();

    /**
     * The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
     * 
     */
    @Import(name="applicationConsistentSnapshotFrequencyInHours")
    private @Nullable Output<Integer> applicationConsistentSnapshotFrequencyInHours;

    /**
     * @return The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
     * 
     */
    public Optional<Output<Integer>> applicationConsistentSnapshotFrequencyInHours() {
        return Optional.ofNullable(this.applicationConsistentSnapshotFrequencyInHours);
    }

    /**
     * The class type.
     * Expected value is &#39;HyperVReplicaAzure&#39;.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return The class type.
     * Expected value is &#39;HyperVReplicaAzure&#39;.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
     * 
     */
    @Import(name="onlineReplicationStartTime")
    private @Nullable Output<String> onlineReplicationStartTime;

    /**
     * @return The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
     * 
     */
    public Optional<Output<String>> onlineReplicationStartTime() {
        return Optional.ofNullable(this.onlineReplicationStartTime);
    }

    /**
     * The duration (in hours) to which point the recovery history needs to be maintained.
     * 
     */
    @Import(name="recoveryPointHistoryDuration")
    private @Nullable Output<Integer> recoveryPointHistoryDuration;

    /**
     * @return The duration (in hours) to which point the recovery history needs to be maintained.
     * 
     */
    public Optional<Output<Integer>> recoveryPointHistoryDuration() {
        return Optional.ofNullable(this.recoveryPointHistoryDuration);
    }

    /**
     * The replication interval.
     * 
     */
    @Import(name="replicationInterval")
    private @Nullable Output<Integer> replicationInterval;

    /**
     * @return The replication interval.
     * 
     */
    public Optional<Output<Integer>> replicationInterval() {
        return Optional.ofNullable(this.replicationInterval);
    }

    /**
     * The list of storage accounts to which the VMs in the primary cloud can replicate to.
     * 
     */
    @Import(name="storageAccounts")
    private @Nullable Output<List<String>> storageAccounts;

    /**
     * @return The list of storage accounts to which the VMs in the primary cloud can replicate to.
     * 
     */
    public Optional<Output<List<String>>> storageAccounts() {
        return Optional.ofNullable(this.storageAccounts);
    }

    private HyperVReplicaAzurePolicyInputArgs() {}

    private HyperVReplicaAzurePolicyInputArgs(HyperVReplicaAzurePolicyInputArgs $) {
        this.applicationConsistentSnapshotFrequencyInHours = $.applicationConsistentSnapshotFrequencyInHours;
        this.instanceType = $.instanceType;
        this.onlineReplicationStartTime = $.onlineReplicationStartTime;
        this.recoveryPointHistoryDuration = $.recoveryPointHistoryDuration;
        this.replicationInterval = $.replicationInterval;
        this.storageAccounts = $.storageAccounts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HyperVReplicaAzurePolicyInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HyperVReplicaAzurePolicyInputArgs $;

        public Builder() {
            $ = new HyperVReplicaAzurePolicyInputArgs();
        }

        public Builder(HyperVReplicaAzurePolicyInputArgs defaults) {
            $ = new HyperVReplicaAzurePolicyInputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationConsistentSnapshotFrequencyInHours The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
         * 
         * @return builder
         * 
         */
        public Builder applicationConsistentSnapshotFrequencyInHours(@Nullable Output<Integer> applicationConsistentSnapshotFrequencyInHours) {
            $.applicationConsistentSnapshotFrequencyInHours = applicationConsistentSnapshotFrequencyInHours;
            return this;
        }

        /**
         * @param applicationConsistentSnapshotFrequencyInHours The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
         * 
         * @return builder
         * 
         */
        public Builder applicationConsistentSnapshotFrequencyInHours(Integer applicationConsistentSnapshotFrequencyInHours) {
            return applicationConsistentSnapshotFrequencyInHours(Output.of(applicationConsistentSnapshotFrequencyInHours));
        }

        /**
         * @param instanceType The class type.
         * Expected value is &#39;HyperVReplicaAzure&#39;.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The class type.
         * Expected value is &#39;HyperVReplicaAzure&#39;.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param onlineReplicationStartTime The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
         * 
         * @return builder
         * 
         */
        public Builder onlineReplicationStartTime(@Nullable Output<String> onlineReplicationStartTime) {
            $.onlineReplicationStartTime = onlineReplicationStartTime;
            return this;
        }

        /**
         * @param onlineReplicationStartTime The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
         * 
         * @return builder
         * 
         */
        public Builder onlineReplicationStartTime(String onlineReplicationStartTime) {
            return onlineReplicationStartTime(Output.of(onlineReplicationStartTime));
        }

        /**
         * @param recoveryPointHistoryDuration The duration (in hours) to which point the recovery history needs to be maintained.
         * 
         * @return builder
         * 
         */
        public Builder recoveryPointHistoryDuration(@Nullable Output<Integer> recoveryPointHistoryDuration) {
            $.recoveryPointHistoryDuration = recoveryPointHistoryDuration;
            return this;
        }

        /**
         * @param recoveryPointHistoryDuration The duration (in hours) to which point the recovery history needs to be maintained.
         * 
         * @return builder
         * 
         */
        public Builder recoveryPointHistoryDuration(Integer recoveryPointHistoryDuration) {
            return recoveryPointHistoryDuration(Output.of(recoveryPointHistoryDuration));
        }

        /**
         * @param replicationInterval The replication interval.
         * 
         * @return builder
         * 
         */
        public Builder replicationInterval(@Nullable Output<Integer> replicationInterval) {
            $.replicationInterval = replicationInterval;
            return this;
        }

        /**
         * @param replicationInterval The replication interval.
         * 
         * @return builder
         * 
         */
        public Builder replicationInterval(Integer replicationInterval) {
            return replicationInterval(Output.of(replicationInterval));
        }

        /**
         * @param storageAccounts The list of storage accounts to which the VMs in the primary cloud can replicate to.
         * 
         * @return builder
         * 
         */
        public Builder storageAccounts(@Nullable Output<List<String>> storageAccounts) {
            $.storageAccounts = storageAccounts;
            return this;
        }

        /**
         * @param storageAccounts The list of storage accounts to which the VMs in the primary cloud can replicate to.
         * 
         * @return builder
         * 
         */
        public Builder storageAccounts(List<String> storageAccounts) {
            return storageAccounts(Output.of(storageAccounts));
        }

        /**
         * @param storageAccounts The list of storage accounts to which the VMs in the primary cloud can replicate to.
         * 
         * @return builder
         * 
         */
        public Builder storageAccounts(String... storageAccounts) {
            return storageAccounts(List.of(storageAccounts));
        }

        public HyperVReplicaAzurePolicyInputArgs build() {
            $.instanceType = Codegen.stringProp("instanceType").output().arg($.instanceType).getNullable();
            return $;
        }
    }

}
