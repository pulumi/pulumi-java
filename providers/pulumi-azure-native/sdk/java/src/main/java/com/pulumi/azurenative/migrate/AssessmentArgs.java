// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate;

import com.pulumi.azurenative.migrate.inputs.AssessmentPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssessmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssessmentArgs Empty = new AssessmentArgs();

    /**
     * Unique name of an assessment within a project.
     * 
     */
    @Import(name="assessmentName")
    private @Nullable Output<String> assessmentName;

    public Optional<Output<String>> assessmentName() {
        return Optional.ofNullable(this.assessmentName);
    }

    /**
     * For optimistic concurrency control.
     * 
     */
    @Import(name="eTag")
    private @Nullable Output<String> eTag;

    public Optional<Output<String>> eTag() {
        return Optional.ofNullable(this.eTag);
    }

    /**
     * Unique name of a group within a project.
     * 
     */
    @Import(name="groupName", required=true)
    private Output<String> groupName;

    public Output<String> groupName() {
        return this.groupName;
    }

    /**
     * Name of the Azure Migrate project.
     * 
     */
    @Import(name="projectName", required=true)
    private Output<String> projectName;

    public Output<String> projectName() {
        return this.projectName;
    }

    /**
     * Properties of the assessment.
     * 
     */
    @Import(name="properties", required=true)
    private Output<AssessmentPropertiesArgs> properties;

    public Output<AssessmentPropertiesArgs> properties() {
        return this.properties;
    }

    /**
     * Name of the Azure Resource Group that project is part of.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private AssessmentArgs() {}

    private AssessmentArgs(AssessmentArgs $) {
        this.assessmentName = $.assessmentName;
        this.eTag = $.eTag;
        this.groupName = $.groupName;
        this.projectName = $.projectName;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssessmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssessmentArgs $;

        public Builder() {
            $ = new AssessmentArgs();
        }

        public Builder(AssessmentArgs defaults) {
            $ = new AssessmentArgs(Objects.requireNonNull(defaults));
        }

        public Builder assessmentName(@Nullable Output<String> assessmentName) {
            $.assessmentName = assessmentName;
            return this;
        }

        public Builder assessmentName(String assessmentName) {
            return assessmentName(Output.of(assessmentName));
        }

        public Builder eTag(@Nullable Output<String> eTag) {
            $.eTag = eTag;
            return this;
        }

        public Builder eTag(String eTag) {
            return eTag(Output.of(eTag));
        }

        public Builder groupName(Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        public Builder projectName(Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        public Builder properties(Output<AssessmentPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(AssessmentPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public AssessmentArgs build() {
            $.groupName = Objects.requireNonNull($.groupName, "expected parameter 'groupName' to be non-null");
            $.projectName = Objects.requireNonNull($.projectName, "expected parameter 'projectName' to be non-null");
            $.properties = Objects.requireNonNull($.properties, "expected parameter 'properties' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
