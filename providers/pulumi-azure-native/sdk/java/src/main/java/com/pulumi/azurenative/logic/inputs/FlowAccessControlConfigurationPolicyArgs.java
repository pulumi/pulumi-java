// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.inputs.IpAddressRangeArgs;
import com.pulumi.azurenative.logic.inputs.OpenAuthenticationAccessPoliciesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The access control configuration policy.
 * 
 */
public final class FlowAccessControlConfigurationPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowAccessControlConfigurationPolicyArgs Empty = new FlowAccessControlConfigurationPolicyArgs();

    /**
     * The allowed caller IP address ranges.
     * 
     */
    @Import(name="allowedCallerIpAddresses")
    private @Nullable Output<List<IpAddressRangeArgs>> allowedCallerIpAddresses;

    /**
     * @return The allowed caller IP address ranges.
     * 
     */
    public Optional<Output<List<IpAddressRangeArgs>>> allowedCallerIpAddresses() {
        return Optional.ofNullable(this.allowedCallerIpAddresses);
    }

    /**
     * The authentication policies for workflow.
     * 
     */
    @Import(name="openAuthenticationPolicies")
    private @Nullable Output<OpenAuthenticationAccessPoliciesArgs> openAuthenticationPolicies;

    /**
     * @return The authentication policies for workflow.
     * 
     */
    public Optional<Output<OpenAuthenticationAccessPoliciesArgs>> openAuthenticationPolicies() {
        return Optional.ofNullable(this.openAuthenticationPolicies);
    }

    private FlowAccessControlConfigurationPolicyArgs() {}

    private FlowAccessControlConfigurationPolicyArgs(FlowAccessControlConfigurationPolicyArgs $) {
        this.allowedCallerIpAddresses = $.allowedCallerIpAddresses;
        this.openAuthenticationPolicies = $.openAuthenticationPolicies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowAccessControlConfigurationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowAccessControlConfigurationPolicyArgs $;

        public Builder() {
            $ = new FlowAccessControlConfigurationPolicyArgs();
        }

        public Builder(FlowAccessControlConfigurationPolicyArgs defaults) {
            $ = new FlowAccessControlConfigurationPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedCallerIpAddresses The allowed caller IP address ranges.
         * 
         * @return builder
         * 
         */
        public Builder allowedCallerIpAddresses(@Nullable Output<List<IpAddressRangeArgs>> allowedCallerIpAddresses) {
            $.allowedCallerIpAddresses = allowedCallerIpAddresses;
            return this;
        }

        /**
         * @param allowedCallerIpAddresses The allowed caller IP address ranges.
         * 
         * @return builder
         * 
         */
        public Builder allowedCallerIpAddresses(List<IpAddressRangeArgs> allowedCallerIpAddresses) {
            return allowedCallerIpAddresses(Output.of(allowedCallerIpAddresses));
        }

        /**
         * @param allowedCallerIpAddresses The allowed caller IP address ranges.
         * 
         * @return builder
         * 
         */
        public Builder allowedCallerIpAddresses(IpAddressRangeArgs... allowedCallerIpAddresses) {
            return allowedCallerIpAddresses(List.of(allowedCallerIpAddresses));
        }

        /**
         * @param openAuthenticationPolicies The authentication policies for workflow.
         * 
         * @return builder
         * 
         */
        public Builder openAuthenticationPolicies(@Nullable Output<OpenAuthenticationAccessPoliciesArgs> openAuthenticationPolicies) {
            $.openAuthenticationPolicies = openAuthenticationPolicies;
            return this;
        }

        /**
         * @param openAuthenticationPolicies The authentication policies for workflow.
         * 
         * @return builder
         * 
         */
        public Builder openAuthenticationPolicies(OpenAuthenticationAccessPoliciesArgs openAuthenticationPolicies) {
            return openAuthenticationPolicies(Output.of(openAuthenticationPolicies));
        }

        public FlowAccessControlConfigurationPolicyArgs build() {
            return $;
        }
    }

}
