// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkflowAccessKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowAccessKeyArgs Empty = new WorkflowAccessKeyArgs();

    /**
     * The workflow access key name.
     * 
     */
    @Import(name="accessKeyName")
    private @Nullable Output<String> accessKeyName;

    /**
     * @return The workflow access key name.
     * 
     */
    public Optional<Output<String>> accessKeyName() {
        return Optional.ofNullable(this.accessKeyName);
    }

    /**
     * Gets or sets the resource id.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Gets or sets the resource id.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Gets or sets the not-after time.
     * 
     */
    @Import(name="notAfter")
    private @Nullable Output<String> notAfter;

    /**
     * @return Gets or sets the not-after time.
     * 
     */
    public Optional<Output<String>> notAfter() {
        return Optional.ofNullable(this.notAfter);
    }

    /**
     * Gets or sets the not-before time.
     * 
     */
    @Import(name="notBefore")
    private @Nullable Output<String> notBefore;

    /**
     * @return Gets or sets the not-before time.
     * 
     */
    public Optional<Output<String>> notBefore() {
        return Optional.ofNullable(this.notBefore);
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The workflow name.
     * 
     */
    @Import(name="workflowName", required=true)
    private Output<String> workflowName;

    /**
     * @return The workflow name.
     * 
     */
    public Output<String> workflowName() {
        return this.workflowName;
    }

    private WorkflowAccessKeyArgs() {}

    private WorkflowAccessKeyArgs(WorkflowAccessKeyArgs $) {
        this.accessKeyName = $.accessKeyName;
        this.id = $.id;
        this.notAfter = $.notAfter;
        this.notBefore = $.notBefore;
        this.resourceGroupName = $.resourceGroupName;
        this.workflowName = $.workflowName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowAccessKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowAccessKeyArgs $;

        public Builder() {
            $ = new WorkflowAccessKeyArgs();
        }

        public Builder(WorkflowAccessKeyArgs defaults) {
            $ = new WorkflowAccessKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyName The workflow access key name.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyName(@Nullable Output<String> accessKeyName) {
            $.accessKeyName = accessKeyName;
            return this;
        }

        /**
         * @param accessKeyName The workflow access key name.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyName(String accessKeyName) {
            return accessKeyName(Output.of(accessKeyName));
        }

        /**
         * @param id Gets or sets the resource id.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Gets or sets the resource id.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param notAfter Gets or sets the not-after time.
         * 
         * @return builder
         * 
         */
        public Builder notAfter(@Nullable Output<String> notAfter) {
            $.notAfter = notAfter;
            return this;
        }

        /**
         * @param notAfter Gets or sets the not-after time.
         * 
         * @return builder
         * 
         */
        public Builder notAfter(String notAfter) {
            return notAfter(Output.of(notAfter));
        }

        /**
         * @param notBefore Gets or sets the not-before time.
         * 
         * @return builder
         * 
         */
        public Builder notBefore(@Nullable Output<String> notBefore) {
            $.notBefore = notBefore;
            return this;
        }

        /**
         * @param notBefore Gets or sets the not-before time.
         * 
         * @return builder
         * 
         */
        public Builder notBefore(String notBefore) {
            return notBefore(Output.of(notBefore));
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param workflowName The workflow name.
         * 
         * @return builder
         * 
         */
        public Builder workflowName(Output<String> workflowName) {
            $.workflowName = workflowName;
            return this;
        }

        /**
         * @param workflowName The workflow name.
         * 
         * @return builder
         * 
         */
        public Builder workflowName(String workflowName) {
            return workflowName(Output.of(workflowName));
        }

        public WorkflowAccessKeyArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.workflowName = Objects.requireNonNull($.workflowName, "expected parameter 'workflowName' to be non-null");
            return $;
        }
    }

}
