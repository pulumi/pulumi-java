// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datashare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SynapseWorkspaceSqlPoolTableDataSetMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final SynapseWorkspaceSqlPoolTableDataSetMappingArgs Empty = new SynapseWorkspaceSqlPoolTableDataSetMappingArgs();

    /**
     * The name of the share account.
     * 
     */
    @Import(name="accountName", required=true)
      private final Output<String> accountName;

    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The id of the source data set.
     * 
     */
    @Import(name="dataSetId", required=true)
      private final Output<String> dataSetId;

    public Output<String> dataSetId() {
        return this.dataSetId;
    }

    /**
     * The name of the data set mapping to be created.
     * 
     */
    @Import(name="dataSetMappingName")
      private final @Nullable Output<String> dataSetMappingName;

    public Output<String> dataSetMappingName() {
        return this.dataSetMappingName == null ? Codegen.empty() : this.dataSetMappingName;
    }

    /**
     * Kind of data set mapping.
     * Expected value is 'SynapseWorkspaceSqlPoolTable'.
     * 
     */
    @Import(name="kind", required=true)
      private final Output<String> kind;

    public Output<String> kind() {
        return this.kind;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the share subscription which will hold the data set sink.
     * 
     */
    @Import(name="shareSubscriptionName", required=true)
      private final Output<String> shareSubscriptionName;

    public Output<String> shareSubscriptionName() {
        return this.shareSubscriptionName;
    }

    /**
     * Resource id of the Synapse Workspace SQL Pool Table
     * 
     */
    @Import(name="synapseWorkspaceSqlPoolTableResourceId", required=true)
      private final Output<String> synapseWorkspaceSqlPoolTableResourceId;

    public Output<String> synapseWorkspaceSqlPoolTableResourceId() {
        return this.synapseWorkspaceSqlPoolTableResourceId;
    }

    public SynapseWorkspaceSqlPoolTableDataSetMappingArgs(
        Output<String> accountName,
        Output<String> dataSetId,
        @Nullable Output<String> dataSetMappingName,
        Output<String> kind,
        Output<String> resourceGroupName,
        Output<String> shareSubscriptionName,
        Output<String> synapseWorkspaceSqlPoolTableResourceId) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.dataSetId = Objects.requireNonNull(dataSetId, "expected parameter 'dataSetId' to be non-null");
        this.dataSetMappingName = dataSetMappingName;
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.shareSubscriptionName = Objects.requireNonNull(shareSubscriptionName, "expected parameter 'shareSubscriptionName' to be non-null");
        this.synapseWorkspaceSqlPoolTableResourceId = Objects.requireNonNull(synapseWorkspaceSqlPoolTableResourceId, "expected parameter 'synapseWorkspaceSqlPoolTableResourceId' to be non-null");
    }

    private SynapseWorkspaceSqlPoolTableDataSetMappingArgs() {
        this.accountName = Codegen.empty();
        this.dataSetId = Codegen.empty();
        this.dataSetMappingName = Codegen.empty();
        this.kind = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.shareSubscriptionName = Codegen.empty();
        this.synapseWorkspaceSqlPoolTableResourceId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SynapseWorkspaceSqlPoolTableDataSetMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accountName;
        private Output<String> dataSetId;
        private @Nullable Output<String> dataSetMappingName;
        private Output<String> kind;
        private Output<String> resourceGroupName;
        private Output<String> shareSubscriptionName;
        private Output<String> synapseWorkspaceSqlPoolTableResourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(SynapseWorkspaceSqlPoolTableDataSetMappingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.dataSetId = defaults.dataSetId;
    	      this.dataSetMappingName = defaults.dataSetMappingName;
    	      this.kind = defaults.kind;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.shareSubscriptionName = defaults.shareSubscriptionName;
    	      this.synapseWorkspaceSqlPoolTableResourceId = defaults.synapseWorkspaceSqlPoolTableResourceId;
        }

        public Builder accountName(Output<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }
        public Builder accountName(String accountName) {
            this.accountName = Output.of(Objects.requireNonNull(accountName));
            return this;
        }
        public Builder dataSetId(Output<String> dataSetId) {
            this.dataSetId = Objects.requireNonNull(dataSetId);
            return this;
        }
        public Builder dataSetId(String dataSetId) {
            this.dataSetId = Output.of(Objects.requireNonNull(dataSetId));
            return this;
        }
        public Builder dataSetMappingName(@Nullable Output<String> dataSetMappingName) {
            this.dataSetMappingName = dataSetMappingName;
            return this;
        }
        public Builder dataSetMappingName(@Nullable String dataSetMappingName) {
            this.dataSetMappingName = Codegen.ofNullable(dataSetMappingName);
            return this;
        }
        public Builder kind(Output<String> kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder kind(String kind) {
            this.kind = Output.of(Objects.requireNonNull(kind));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder shareSubscriptionName(Output<String> shareSubscriptionName) {
            this.shareSubscriptionName = Objects.requireNonNull(shareSubscriptionName);
            return this;
        }
        public Builder shareSubscriptionName(String shareSubscriptionName) {
            this.shareSubscriptionName = Output.of(Objects.requireNonNull(shareSubscriptionName));
            return this;
        }
        public Builder synapseWorkspaceSqlPoolTableResourceId(Output<String> synapseWorkspaceSqlPoolTableResourceId) {
            this.synapseWorkspaceSqlPoolTableResourceId = Objects.requireNonNull(synapseWorkspaceSqlPoolTableResourceId);
            return this;
        }
        public Builder synapseWorkspaceSqlPoolTableResourceId(String synapseWorkspaceSqlPoolTableResourceId) {
            this.synapseWorkspaceSqlPoolTableResourceId = Output.of(Objects.requireNonNull(synapseWorkspaceSqlPoolTableResourceId));
            return this;
        }        public SynapseWorkspaceSqlPoolTableDataSetMappingArgs build() {
            return new SynapseWorkspaceSqlPoolTableDataSetMappingArgs(accountName, dataSetId, dataSetMappingName, kind, resourceGroupName, shareSubscriptionName, synapseWorkspaceSqlPoolTableResourceId);
        }
    }
}
