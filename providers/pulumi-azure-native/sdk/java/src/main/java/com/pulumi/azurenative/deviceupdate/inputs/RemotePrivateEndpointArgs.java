// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deviceupdate.inputs;

import com.pulumi.azurenative.deviceupdate.inputs.PrivateLinkServiceConnectionArgs;
import com.pulumi.azurenative.deviceupdate.inputs.PrivateLinkServiceProxyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Remote private endpoint details.
 * 
 */
public final class RemotePrivateEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final RemotePrivateEndpointArgs Empty = new RemotePrivateEndpointArgs();

    /**
     * Remote endpoint resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Remote endpoint resource ID.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Original resource ID needed by Microsoft.Network.
     * 
     */
    @Import(name="immutableResourceId")
    private @Nullable Output<String> immutableResourceId;

    /**
     * @return Original resource ID needed by Microsoft.Network.
     * 
     */
    public Optional<Output<String>> immutableResourceId() {
        return Optional.ofNullable(this.immutableResourceId);
    }

    /**
     * Original subscription ID needed by Microsoft.Network.
     * 
     */
    @Import(name="immutableSubscriptionId")
    private @Nullable Output<String> immutableSubscriptionId;

    /**
     * @return Original subscription ID needed by Microsoft.Network.
     * 
     */
    public Optional<Output<String>> immutableSubscriptionId() {
        return Optional.ofNullable(this.immutableSubscriptionId);
    }

    /**
     * ARM location of the remote private endpoint.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return ARM location of the remote private endpoint.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * List of private link service connections that need manual approval.
     * 
     */
    @Import(name="manualPrivateLinkServiceConnections")
    private @Nullable Output<List<PrivateLinkServiceConnectionArgs>> manualPrivateLinkServiceConnections;

    /**
     * @return List of private link service connections that need manual approval.
     * 
     */
    public Optional<Output<List<PrivateLinkServiceConnectionArgs>>> manualPrivateLinkServiceConnections() {
        return Optional.ofNullable(this.manualPrivateLinkServiceConnections);
    }

    /**
     * List of automatically approved private link service connections.
     * 
     */
    @Import(name="privateLinkServiceConnections")
    private @Nullable Output<List<PrivateLinkServiceConnectionArgs>> privateLinkServiceConnections;

    /**
     * @return List of automatically approved private link service connections.
     * 
     */
    public Optional<Output<List<PrivateLinkServiceConnectionArgs>>> privateLinkServiceConnections() {
        return Optional.ofNullable(this.privateLinkServiceConnections);
    }

    /**
     * List of private link service proxies.
     * 
     */
    @Import(name="privateLinkServiceProxies")
    private @Nullable Output<List<PrivateLinkServiceProxyArgs>> privateLinkServiceProxies;

    /**
     * @return List of private link service proxies.
     * 
     */
    public Optional<Output<List<PrivateLinkServiceProxyArgs>>> privateLinkServiceProxies() {
        return Optional.ofNullable(this.privateLinkServiceProxies);
    }

    /**
     * Virtual network traffic tag.
     * 
     */
    @Import(name="vnetTrafficTag")
    private @Nullable Output<String> vnetTrafficTag;

    /**
     * @return Virtual network traffic tag.
     * 
     */
    public Optional<Output<String>> vnetTrafficTag() {
        return Optional.ofNullable(this.vnetTrafficTag);
    }

    private RemotePrivateEndpointArgs() {}

    private RemotePrivateEndpointArgs(RemotePrivateEndpointArgs $) {
        this.id = $.id;
        this.immutableResourceId = $.immutableResourceId;
        this.immutableSubscriptionId = $.immutableSubscriptionId;
        this.location = $.location;
        this.manualPrivateLinkServiceConnections = $.manualPrivateLinkServiceConnections;
        this.privateLinkServiceConnections = $.privateLinkServiceConnections;
        this.privateLinkServiceProxies = $.privateLinkServiceProxies;
        this.vnetTrafficTag = $.vnetTrafficTag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RemotePrivateEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RemotePrivateEndpointArgs $;

        public Builder() {
            $ = new RemotePrivateEndpointArgs();
        }

        public Builder(RemotePrivateEndpointArgs defaults) {
            $ = new RemotePrivateEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Remote endpoint resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Remote endpoint resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param immutableResourceId Original resource ID needed by Microsoft.Network.
         * 
         * @return builder
         * 
         */
        public Builder immutableResourceId(@Nullable Output<String> immutableResourceId) {
            $.immutableResourceId = immutableResourceId;
            return this;
        }

        /**
         * @param immutableResourceId Original resource ID needed by Microsoft.Network.
         * 
         * @return builder
         * 
         */
        public Builder immutableResourceId(String immutableResourceId) {
            return immutableResourceId(Output.of(immutableResourceId));
        }

        /**
         * @param immutableSubscriptionId Original subscription ID needed by Microsoft.Network.
         * 
         * @return builder
         * 
         */
        public Builder immutableSubscriptionId(@Nullable Output<String> immutableSubscriptionId) {
            $.immutableSubscriptionId = immutableSubscriptionId;
            return this;
        }

        /**
         * @param immutableSubscriptionId Original subscription ID needed by Microsoft.Network.
         * 
         * @return builder
         * 
         */
        public Builder immutableSubscriptionId(String immutableSubscriptionId) {
            return immutableSubscriptionId(Output.of(immutableSubscriptionId));
        }

        /**
         * @param location ARM location of the remote private endpoint.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location ARM location of the remote private endpoint.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param manualPrivateLinkServiceConnections List of private link service connections that need manual approval.
         * 
         * @return builder
         * 
         */
        public Builder manualPrivateLinkServiceConnections(@Nullable Output<List<PrivateLinkServiceConnectionArgs>> manualPrivateLinkServiceConnections) {
            $.manualPrivateLinkServiceConnections = manualPrivateLinkServiceConnections;
            return this;
        }

        /**
         * @param manualPrivateLinkServiceConnections List of private link service connections that need manual approval.
         * 
         * @return builder
         * 
         */
        public Builder manualPrivateLinkServiceConnections(List<PrivateLinkServiceConnectionArgs> manualPrivateLinkServiceConnections) {
            return manualPrivateLinkServiceConnections(Output.of(manualPrivateLinkServiceConnections));
        }

        /**
         * @param manualPrivateLinkServiceConnections List of private link service connections that need manual approval.
         * 
         * @return builder
         * 
         */
        public Builder manualPrivateLinkServiceConnections(PrivateLinkServiceConnectionArgs... manualPrivateLinkServiceConnections) {
            return manualPrivateLinkServiceConnections(List.of(manualPrivateLinkServiceConnections));
        }

        /**
         * @param privateLinkServiceConnections List of automatically approved private link service connections.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceConnections(@Nullable Output<List<PrivateLinkServiceConnectionArgs>> privateLinkServiceConnections) {
            $.privateLinkServiceConnections = privateLinkServiceConnections;
            return this;
        }

        /**
         * @param privateLinkServiceConnections List of automatically approved private link service connections.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceConnections(List<PrivateLinkServiceConnectionArgs> privateLinkServiceConnections) {
            return privateLinkServiceConnections(Output.of(privateLinkServiceConnections));
        }

        /**
         * @param privateLinkServiceConnections List of automatically approved private link service connections.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceConnections(PrivateLinkServiceConnectionArgs... privateLinkServiceConnections) {
            return privateLinkServiceConnections(List.of(privateLinkServiceConnections));
        }

        /**
         * @param privateLinkServiceProxies List of private link service proxies.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceProxies(@Nullable Output<List<PrivateLinkServiceProxyArgs>> privateLinkServiceProxies) {
            $.privateLinkServiceProxies = privateLinkServiceProxies;
            return this;
        }

        /**
         * @param privateLinkServiceProxies List of private link service proxies.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceProxies(List<PrivateLinkServiceProxyArgs> privateLinkServiceProxies) {
            return privateLinkServiceProxies(Output.of(privateLinkServiceProxies));
        }

        /**
         * @param privateLinkServiceProxies List of private link service proxies.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceProxies(PrivateLinkServiceProxyArgs... privateLinkServiceProxies) {
            return privateLinkServiceProxies(List.of(privateLinkServiceProxies));
        }

        /**
         * @param vnetTrafficTag Virtual network traffic tag.
         * 
         * @return builder
         * 
         */
        public Builder vnetTrafficTag(@Nullable Output<String> vnetTrafficTag) {
            $.vnetTrafficTag = vnetTrafficTag;
            return this;
        }

        /**
         * @param vnetTrafficTag Virtual network traffic tag.
         * 
         * @return builder
         * 
         */
        public Builder vnetTrafficTag(String vnetTrafficTag) {
            return vnetTrafficTag(Output.of(vnetTrafficTag));
        }

        public RemotePrivateEndpointArgs build() {
            return $;
        }
    }

}
