// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes an IoT Hub input data source that contains stream data.
 * 
 */
public final class IoTHubStreamInputDataSourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final IoTHubStreamInputDataSourceResponse Empty = new IoTHubStreamInputDataSourceResponse();

    /**
     * The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hubâ€™s default consumer group.
     * 
     */
    @Import(name="consumerGroupName")
    private @Nullable String consumerGroupName;

    public Optional<String> consumerGroupName() {
        return Optional.ofNullable(this.consumerGroupName);
    }

    /**
     * The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
     * 
     */
    @Import(name="endpoint")
    private @Nullable String endpoint;

    public Optional<String> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="iotHubNamespace")
    private @Nullable String iotHubNamespace;

    public Optional<String> iotHubNamespace() {
        return Optional.ofNullable(this.iotHubNamespace);
    }

    /**
     * The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="sharedAccessPolicyKey")
    private @Nullable String sharedAccessPolicyKey;

    public Optional<String> sharedAccessPolicyKey() {
        return Optional.ofNullable(this.sharedAccessPolicyKey);
    }

    /**
     * The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="sharedAccessPolicyName")
    private @Nullable String sharedAccessPolicyName;

    public Optional<String> sharedAccessPolicyName() {
        return Optional.ofNullable(this.sharedAccessPolicyName);
    }

    /**
     * Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Microsoft.Devices/IotHubs&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private IoTHubStreamInputDataSourceResponse() {}

    private IoTHubStreamInputDataSourceResponse(IoTHubStreamInputDataSourceResponse $) {
        this.consumerGroupName = $.consumerGroupName;
        this.endpoint = $.endpoint;
        this.iotHubNamespace = $.iotHubNamespace;
        this.sharedAccessPolicyKey = $.sharedAccessPolicyKey;
        this.sharedAccessPolicyName = $.sharedAccessPolicyName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IoTHubStreamInputDataSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IoTHubStreamInputDataSourceResponse $;

        public Builder() {
            $ = new IoTHubStreamInputDataSourceResponse();
        }

        public Builder(IoTHubStreamInputDataSourceResponse defaults) {
            $ = new IoTHubStreamInputDataSourceResponse(Objects.requireNonNull(defaults));
        }

        public Builder consumerGroupName(@Nullable String consumerGroupName) {
            $.consumerGroupName = consumerGroupName;
            return this;
        }

        public Builder endpoint(@Nullable String endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder iotHubNamespace(@Nullable String iotHubNamespace) {
            $.iotHubNamespace = iotHubNamespace;
            return this;
        }

        public Builder sharedAccessPolicyKey(@Nullable String sharedAccessPolicyKey) {
            $.sharedAccessPolicyKey = sharedAccessPolicyKey;
            return this;
        }

        public Builder sharedAccessPolicyName(@Nullable String sharedAccessPolicyName) {
            $.sharedAccessPolicyName = sharedAccessPolicyName;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public IoTHubStreamInputDataSourceResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
