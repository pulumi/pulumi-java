// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetViewByScopeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetViewByScopeArgs Empty = new GetViewByScopeArgs();

    /**
     * The scope associated with view operations. This includes &#39;subscriptions/{subscriptionId}&#39; for subscription scope, &#39;subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}&#39; for resourceGroup scope, &#39;providers/Microsoft.Billing/billingAccounts/{billingAccountId}&#39; for Billing Account scope, &#39;providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}&#39; for Department scope, &#39;providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}&#39; for EnrollmentAccount scope, &#39;providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}&#39; for BillingProfile scope, &#39;providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}&#39; for InvoiceSection scope, &#39;providers/Microsoft.Management/managementGroups/{managementGroupId}&#39; for Management Group scope, &#39;providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}&#39; for External Billing Account scope and &#39;providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}&#39; for External Subscription scope.
     * 
     */
    @Import(name="scope", required=true)
      private final String scope;

    public String scope() {
        return this.scope;
    }

    /**
     * View name
     * 
     */
    @Import(name="viewName", required=true)
      private final String viewName;

    public String viewName() {
        return this.viewName;
    }

    public GetViewByScopeArgs(
        String scope,
        String viewName) {
        this.scope = Objects.requireNonNull(scope, "expected parameter 'scope' to be non-null");
        this.viewName = Objects.requireNonNull(viewName, "expected parameter 'viewName' to be non-null");
    }

    private GetViewByScopeArgs() {
        this.scope = null;
        this.viewName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetViewByScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String scope;
        private String viewName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetViewByScopeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scope = defaults.scope;
    	      this.viewName = defaults.viewName;
        }

        public Builder scope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        public Builder viewName(String viewName) {
            this.viewName = Objects.requireNonNull(viewName);
            return this;
        }        public GetViewByScopeArgs build() {
            return new GetViewByScopeArgs(scope, viewName);
        }
    }
}
