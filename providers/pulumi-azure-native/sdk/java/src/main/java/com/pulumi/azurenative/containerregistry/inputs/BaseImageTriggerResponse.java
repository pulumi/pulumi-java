// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The trigger based on base image dependency.
 * 
 */
public final class BaseImageTriggerResponse extends com.pulumi.resources.InvokeArgs {

    public static final BaseImageTriggerResponse Empty = new BaseImageTriggerResponse();

    /**
     * The type of the auto trigger for base image dependency updates.
     * 
     */
    @Import(name="baseImageTriggerType", required=true)
    private String baseImageTriggerType;

    public String baseImageTriggerType() {
        return this.baseImageTriggerType;
    }

    /**
     * The name of the trigger.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * The current status of trigger.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The endpoint URL for receiving update triggers.
     * 
     */
    @Import(name="updateTriggerEndpoint")
    private @Nullable String updateTriggerEndpoint;

    public Optional<String> updateTriggerEndpoint() {
        return Optional.ofNullable(this.updateTriggerEndpoint);
    }

    /**
     * Type of Payload body for Base image update triggers.
     * 
     */
    @Import(name="updateTriggerPayloadType")
    private @Nullable String updateTriggerPayloadType;

    public Optional<String> updateTriggerPayloadType() {
        return Optional.ofNullable(this.updateTriggerPayloadType);
    }

    private BaseImageTriggerResponse() {}

    private BaseImageTriggerResponse(BaseImageTriggerResponse $) {
        this.baseImageTriggerType = $.baseImageTriggerType;
        this.name = $.name;
        this.status = $.status;
        this.updateTriggerEndpoint = $.updateTriggerEndpoint;
        this.updateTriggerPayloadType = $.updateTriggerPayloadType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BaseImageTriggerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BaseImageTriggerResponse $;

        public Builder() {
            $ = new BaseImageTriggerResponse();
        }

        public Builder(BaseImageTriggerResponse defaults) {
            $ = new BaseImageTriggerResponse(Objects.requireNonNull(defaults));
        }

        public Builder baseImageTriggerType(String baseImageTriggerType) {
            $.baseImageTriggerType = baseImageTriggerType;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public Builder updateTriggerEndpoint(@Nullable String updateTriggerEndpoint) {
            $.updateTriggerEndpoint = updateTriggerEndpoint;
            return this;
        }

        public Builder updateTriggerPayloadType(@Nullable String updateTriggerPayloadType) {
            $.updateTriggerPayloadType = updateTriggerPayloadType;
            return this;
        }

        public BaseImageTriggerResponse build() {
            $.baseImageTriggerType = Objects.requireNonNull($.baseImageTriggerType, "expected parameter 'baseImageTriggerType' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.status = Codegen.stringProp("status").arg($.status).def("Enabled").getNullable();
            return $;
        }
    }

}
