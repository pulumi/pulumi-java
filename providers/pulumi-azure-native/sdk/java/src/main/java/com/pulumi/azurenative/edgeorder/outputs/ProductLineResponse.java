// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.outputs;

import com.pulumi.azurenative.edgeorder.outputs.AvailabilityInformationResponse;
import com.pulumi.azurenative.edgeorder.outputs.CostInformationResponse;
import com.pulumi.azurenative.edgeorder.outputs.DescriptionResponse;
import com.pulumi.azurenative.edgeorder.outputs.FilterablePropertyResponse;
import com.pulumi.azurenative.edgeorder.outputs.HierarchyInformationResponse;
import com.pulumi.azurenative.edgeorder.outputs.ImageInformationResponse;
import com.pulumi.azurenative.edgeorder.outputs.ProductResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ProductLineResponse {
    /**
     * @return Availability information of the product system.
     * 
     */
    private final AvailabilityInformationResponse availabilityInformation;
    /**
     * @return Cost information for the product system.
     * 
     */
    private final CostInformationResponse costInformation;
    /**
     * @return Description related to the product system.
     * 
     */
    private final DescriptionResponse description;
    /**
     * @return Display Name for the product system.
     * 
     */
    private final String displayName;
    /**
     * @return list of filters supported for a product
     * 
     */
    private final List<FilterablePropertyResponse> filterableProperties;
    /**
     * @return Hierarchy information of a product.
     * 
     */
    private final HierarchyInformationResponse hierarchyInformation;
    /**
     * @return Image information for the product system.
     * 
     */
    private final List<ImageInformationResponse> imageInformation;
    /**
     * @return List of products in the product line
     * 
     */
    private final List<ProductResponse> products;

    @CustomType.Constructor
    private ProductLineResponse(
        @CustomType.Parameter("availabilityInformation") AvailabilityInformationResponse availabilityInformation,
        @CustomType.Parameter("costInformation") CostInformationResponse costInformation,
        @CustomType.Parameter("description") DescriptionResponse description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("filterableProperties") List<FilterablePropertyResponse> filterableProperties,
        @CustomType.Parameter("hierarchyInformation") HierarchyInformationResponse hierarchyInformation,
        @CustomType.Parameter("imageInformation") List<ImageInformationResponse> imageInformation,
        @CustomType.Parameter("products") List<ProductResponse> products) {
        this.availabilityInformation = availabilityInformation;
        this.costInformation = costInformation;
        this.description = description;
        this.displayName = displayName;
        this.filterableProperties = filterableProperties;
        this.hierarchyInformation = hierarchyInformation;
        this.imageInformation = imageInformation;
        this.products = products;
    }

    /**
     * @return Availability information of the product system.
     * 
     */
    public AvailabilityInformationResponse availabilityInformation() {
        return this.availabilityInformation;
    }
    /**
     * @return Cost information for the product system.
     * 
     */
    public CostInformationResponse costInformation() {
        return this.costInformation;
    }
    /**
     * @return Description related to the product system.
     * 
     */
    public DescriptionResponse description() {
        return this.description;
    }
    /**
     * @return Display Name for the product system.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return list of filters supported for a product
     * 
     */
    public List<FilterablePropertyResponse> filterableProperties() {
        return this.filterableProperties;
    }
    /**
     * @return Hierarchy information of a product.
     * 
     */
    public HierarchyInformationResponse hierarchyInformation() {
        return this.hierarchyInformation;
    }
    /**
     * @return Image information for the product system.
     * 
     */
    public List<ImageInformationResponse> imageInformation() {
        return this.imageInformation;
    }
    /**
     * @return List of products in the product line
     * 
     */
    public List<ProductResponse> products() {
        return this.products;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProductLineResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AvailabilityInformationResponse availabilityInformation;
        private CostInformationResponse costInformation;
        private DescriptionResponse description;
        private String displayName;
        private List<FilterablePropertyResponse> filterableProperties;
        private HierarchyInformationResponse hierarchyInformation;
        private List<ImageInformationResponse> imageInformation;
        private List<ProductResponse> products;

        public Builder() {
    	      // Empty
        }

        public Builder(ProductLineResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityInformation = defaults.availabilityInformation;
    	      this.costInformation = defaults.costInformation;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.filterableProperties = defaults.filterableProperties;
    	      this.hierarchyInformation = defaults.hierarchyInformation;
    	      this.imageInformation = defaults.imageInformation;
    	      this.products = defaults.products;
        }

        public Builder availabilityInformation(AvailabilityInformationResponse availabilityInformation) {
            this.availabilityInformation = Objects.requireNonNull(availabilityInformation);
            return this;
        }
        public Builder costInformation(CostInformationResponse costInformation) {
            this.costInformation = Objects.requireNonNull(costInformation);
            return this;
        }
        public Builder description(DescriptionResponse description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder filterableProperties(List<FilterablePropertyResponse> filterableProperties) {
            this.filterableProperties = Objects.requireNonNull(filterableProperties);
            return this;
        }
        public Builder filterableProperties(FilterablePropertyResponse... filterableProperties) {
            return filterableProperties(List.of(filterableProperties));
        }
        public Builder hierarchyInformation(HierarchyInformationResponse hierarchyInformation) {
            this.hierarchyInformation = Objects.requireNonNull(hierarchyInformation);
            return this;
        }
        public Builder imageInformation(List<ImageInformationResponse> imageInformation) {
            this.imageInformation = Objects.requireNonNull(imageInformation);
            return this;
        }
        public Builder imageInformation(ImageInformationResponse... imageInformation) {
            return imageInformation(List.of(imageInformation));
        }
        public Builder products(List<ProductResponse> products) {
            this.products = Objects.requireNonNull(products);
            return this;
        }
        public Builder products(ProductResponse... products) {
            return products(List.of(products));
        }        public ProductLineResponse build() {
            return new ProductLineResponse(availabilityInformation, costInformation, description, displayName, filterableProperties, hierarchyInformation, imageInformation, products);
        }
    }
}
