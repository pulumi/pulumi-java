// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.A2AReplicationDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.CurrentScenarioDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.HealthErrorResponse;
import com.pulumi.azurenative.recoveryservices.inputs.HyperVReplicaAzureReplicationDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.HyperVReplicaBaseReplicationDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.HyperVReplicaBlueReplicationDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.HyperVReplicaReplicationDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.InMageAzureV2ReplicationDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.InMageRcmReplicationDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.InMageReplicationDetailsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Replication protected item custom data details.
 * 
 */
public final class ReplicationProtectedItemPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ReplicationProtectedItemPropertiesResponse Empty = new ReplicationProtectedItemPropertiesResponse();

    /**
     * The Current active location of the PE.
     * 
     */
    @Import(name="activeLocation")
    private @Nullable String activeLocation;

    /**
     * @return The Current active location of the PE.
     * 
     */
    public Optional<String> activeLocation() {
        return Optional.ofNullable(this.activeLocation);
    }

    /**
     * The allowed operations on the Replication protected item.
     * 
     */
    @Import(name="allowedOperations")
    private @Nullable List<String> allowedOperations;

    /**
     * @return The allowed operations on the Replication protected item.
     * 
     */
    public Optional<List<String>> allowedOperations() {
        return Optional.ofNullable(this.allowedOperations);
    }

    /**
     * The current scenario.
     * 
     */
    @Import(name="currentScenario")
    private @Nullable CurrentScenarioDetailsResponse currentScenario;

    /**
     * @return The current scenario.
     * 
     */
    public Optional<CurrentScenarioDetailsResponse> currentScenario() {
        return Optional.ofNullable(this.currentScenario);
    }

    /**
     * The consolidated failover health for the VM.
     * 
     */
    @Import(name="failoverHealth")
    private @Nullable String failoverHealth;

    /**
     * @return The consolidated failover health for the VM.
     * 
     */
    public Optional<String> failoverHealth() {
        return Optional.ofNullable(this.failoverHealth);
    }

    /**
     * The recovery point ARM Id to which the Vm was failed over.
     * 
     */
    @Import(name="failoverRecoveryPointId")
    private @Nullable String failoverRecoveryPointId;

    /**
     * @return The recovery point ARM Id to which the Vm was failed over.
     * 
     */
    public Optional<String> failoverRecoveryPointId() {
        return Optional.ofNullable(this.failoverRecoveryPointId);
    }

    /**
     * The name.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable String friendlyName;

    /**
     * @return The name.
     * 
     */
    public Optional<String> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * List of health errors.
     * 
     */
    @Import(name="healthErrors")
    private @Nullable List<HealthErrorResponse> healthErrors;

    /**
     * @return List of health errors.
     * 
     */
    public Optional<List<HealthErrorResponse>> healthErrors() {
        return Optional.ofNullable(this.healthErrors);
    }

    /**
     * The Last successful failover time.
     * 
     */
    @Import(name="lastSuccessfulFailoverTime")
    private @Nullable String lastSuccessfulFailoverTime;

    /**
     * @return The Last successful failover time.
     * 
     */
    public Optional<String> lastSuccessfulFailoverTime() {
        return Optional.ofNullable(this.lastSuccessfulFailoverTime);
    }

    /**
     * The Last successful test failover time.
     * 
     */
    @Import(name="lastSuccessfulTestFailoverTime")
    private @Nullable String lastSuccessfulTestFailoverTime;

    /**
     * @return The Last successful test failover time.
     * 
     */
    public Optional<String> lastSuccessfulTestFailoverTime() {
        return Optional.ofNullable(this.lastSuccessfulTestFailoverTime);
    }

    /**
     * The name of Policy governing this PE.
     * 
     */
    @Import(name="policyFriendlyName")
    private @Nullable String policyFriendlyName;

    /**
     * @return The name of Policy governing this PE.
     * 
     */
    public Optional<String> policyFriendlyName() {
        return Optional.ofNullable(this.policyFriendlyName);
    }

    /**
     * The ID of Policy governing this PE.
     * 
     */
    @Import(name="policyId")
    private @Nullable String policyId;

    /**
     * @return The ID of Policy governing this PE.
     * 
     */
    public Optional<String> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * The friendly name of the primary fabric.
     * 
     */
    @Import(name="primaryFabricFriendlyName")
    private @Nullable String primaryFabricFriendlyName;

    /**
     * @return The friendly name of the primary fabric.
     * 
     */
    public Optional<String> primaryFabricFriendlyName() {
        return Optional.ofNullable(this.primaryFabricFriendlyName);
    }

    /**
     * The fabric provider of the primary fabric.
     * 
     */
    @Import(name="primaryFabricProvider")
    private @Nullable String primaryFabricProvider;

    /**
     * @return The fabric provider of the primary fabric.
     * 
     */
    public Optional<String> primaryFabricProvider() {
        return Optional.ofNullable(this.primaryFabricProvider);
    }

    /**
     * The name of primary protection container friendly name.
     * 
     */
    @Import(name="primaryProtectionContainerFriendlyName")
    private @Nullable String primaryProtectionContainerFriendlyName;

    /**
     * @return The name of primary protection container friendly name.
     * 
     */
    public Optional<String> primaryProtectionContainerFriendlyName() {
        return Optional.ofNullable(this.primaryProtectionContainerFriendlyName);
    }

    /**
     * The protected item ARM Id.
     * 
     */
    @Import(name="protectableItemId")
    private @Nullable String protectableItemId;

    /**
     * @return The protected item ARM Id.
     * 
     */
    public Optional<String> protectableItemId() {
        return Optional.ofNullable(this.protectableItemId);
    }

    /**
     * The type of protected item type.
     * 
     */
    @Import(name="protectedItemType")
    private @Nullable String protectedItemType;

    /**
     * @return The type of protected item type.
     * 
     */
    public Optional<String> protectedItemType() {
        return Optional.ofNullable(this.protectedItemType);
    }

    /**
     * The protection status.
     * 
     */
    @Import(name="protectionState")
    private @Nullable String protectionState;

    /**
     * @return The protection status.
     * 
     */
    public Optional<String> protectionState() {
        return Optional.ofNullable(this.protectionState);
    }

    /**
     * The protection state description.
     * 
     */
    @Import(name="protectionStateDescription")
    private @Nullable String protectionStateDescription;

    /**
     * @return The protection state description.
     * 
     */
    public Optional<String> protectionStateDescription() {
        return Optional.ofNullable(this.protectionStateDescription);
    }

    /**
     * The Replication provider custom settings.
     * 
     */
    @Import(name="providerSpecificDetails")
    private @Nullable Object providerSpecificDetails;

    /**
     * @return The Replication provider custom settings.
     * 
     */
    public Optional<Object> providerSpecificDetails() {
        return Optional.ofNullable(this.providerSpecificDetails);
    }

    /**
     * The recovery container Id.
     * 
     */
    @Import(name="recoveryContainerId")
    private @Nullable String recoveryContainerId;

    /**
     * @return The recovery container Id.
     * 
     */
    public Optional<String> recoveryContainerId() {
        return Optional.ofNullable(this.recoveryContainerId);
    }

    /**
     * The friendly name of recovery fabric.
     * 
     */
    @Import(name="recoveryFabricFriendlyName")
    private @Nullable String recoveryFabricFriendlyName;

    /**
     * @return The friendly name of recovery fabric.
     * 
     */
    public Optional<String> recoveryFabricFriendlyName() {
        return Optional.ofNullable(this.recoveryFabricFriendlyName);
    }

    /**
     * The Arm Id of recovery fabric.
     * 
     */
    @Import(name="recoveryFabricId")
    private @Nullable String recoveryFabricId;

    /**
     * @return The Arm Id of recovery fabric.
     * 
     */
    public Optional<String> recoveryFabricId() {
        return Optional.ofNullable(this.recoveryFabricId);
    }

    /**
     * The name of recovery container friendly name.
     * 
     */
    @Import(name="recoveryProtectionContainerFriendlyName")
    private @Nullable String recoveryProtectionContainerFriendlyName;

    /**
     * @return The name of recovery container friendly name.
     * 
     */
    public Optional<String> recoveryProtectionContainerFriendlyName() {
        return Optional.ofNullable(this.recoveryProtectionContainerFriendlyName);
    }

    /**
     * The recovery provider ARM Id.
     * 
     */
    @Import(name="recoveryServicesProviderId")
    private @Nullable String recoveryServicesProviderId;

    /**
     * @return The recovery provider ARM Id.
     * 
     */
    public Optional<String> recoveryServicesProviderId() {
        return Optional.ofNullable(this.recoveryServicesProviderId);
    }

    /**
     * The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM&#39;s replication group into account. This is a string representation of the ProtectionHealth enumeration.
     * 
     */
    @Import(name="replicationHealth")
    private @Nullable String replicationHealth;

    /**
     * @return The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM&#39;s replication group into account. This is a string representation of the ProtectionHealth enumeration.
     * 
     */
    public Optional<String> replicationHealth() {
        return Optional.ofNullable(this.replicationHealth);
    }

    /**
     * The Test failover state.
     * 
     */
    @Import(name="testFailoverState")
    private @Nullable String testFailoverState;

    /**
     * @return The Test failover state.
     * 
     */
    public Optional<String> testFailoverState() {
        return Optional.ofNullable(this.testFailoverState);
    }

    /**
     * The Test failover state description.
     * 
     */
    @Import(name="testFailoverStateDescription")
    private @Nullable String testFailoverStateDescription;

    /**
     * @return The Test failover state description.
     * 
     */
    public Optional<String> testFailoverStateDescription() {
        return Optional.ofNullable(this.testFailoverStateDescription);
    }

    private ReplicationProtectedItemPropertiesResponse() {}

    private ReplicationProtectedItemPropertiesResponse(ReplicationProtectedItemPropertiesResponse $) {
        this.activeLocation = $.activeLocation;
        this.allowedOperations = $.allowedOperations;
        this.currentScenario = $.currentScenario;
        this.failoverHealth = $.failoverHealth;
        this.failoverRecoveryPointId = $.failoverRecoveryPointId;
        this.friendlyName = $.friendlyName;
        this.healthErrors = $.healthErrors;
        this.lastSuccessfulFailoverTime = $.lastSuccessfulFailoverTime;
        this.lastSuccessfulTestFailoverTime = $.lastSuccessfulTestFailoverTime;
        this.policyFriendlyName = $.policyFriendlyName;
        this.policyId = $.policyId;
        this.primaryFabricFriendlyName = $.primaryFabricFriendlyName;
        this.primaryFabricProvider = $.primaryFabricProvider;
        this.primaryProtectionContainerFriendlyName = $.primaryProtectionContainerFriendlyName;
        this.protectableItemId = $.protectableItemId;
        this.protectedItemType = $.protectedItemType;
        this.protectionState = $.protectionState;
        this.protectionStateDescription = $.protectionStateDescription;
        this.providerSpecificDetails = $.providerSpecificDetails;
        this.recoveryContainerId = $.recoveryContainerId;
        this.recoveryFabricFriendlyName = $.recoveryFabricFriendlyName;
        this.recoveryFabricId = $.recoveryFabricId;
        this.recoveryProtectionContainerFriendlyName = $.recoveryProtectionContainerFriendlyName;
        this.recoveryServicesProviderId = $.recoveryServicesProviderId;
        this.replicationHealth = $.replicationHealth;
        this.testFailoverState = $.testFailoverState;
        this.testFailoverStateDescription = $.testFailoverStateDescription;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationProtectedItemPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationProtectedItemPropertiesResponse $;

        public Builder() {
            $ = new ReplicationProtectedItemPropertiesResponse();
        }

        public Builder(ReplicationProtectedItemPropertiesResponse defaults) {
            $ = new ReplicationProtectedItemPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeLocation The Current active location of the PE.
         * 
         * @return builder
         * 
         */
        public Builder activeLocation(@Nullable String activeLocation) {
            $.activeLocation = activeLocation;
            return this;
        }

        /**
         * @param allowedOperations The allowed operations on the Replication protected item.
         * 
         * @return builder
         * 
         */
        public Builder allowedOperations(@Nullable List<String> allowedOperations) {
            $.allowedOperations = allowedOperations;
            return this;
        }

        /**
         * @param allowedOperations The allowed operations on the Replication protected item.
         * 
         * @return builder
         * 
         */
        public Builder allowedOperations(String... allowedOperations) {
            return allowedOperations(List.of(allowedOperations));
        }

        /**
         * @param currentScenario The current scenario.
         * 
         * @return builder
         * 
         */
        public Builder currentScenario(@Nullable CurrentScenarioDetailsResponse currentScenario) {
            $.currentScenario = currentScenario;
            return this;
        }

        /**
         * @param failoverHealth The consolidated failover health for the VM.
         * 
         * @return builder
         * 
         */
        public Builder failoverHealth(@Nullable String failoverHealth) {
            $.failoverHealth = failoverHealth;
            return this;
        }

        /**
         * @param failoverRecoveryPointId The recovery point ARM Id to which the Vm was failed over.
         * 
         * @return builder
         * 
         */
        public Builder failoverRecoveryPointId(@Nullable String failoverRecoveryPointId) {
            $.failoverRecoveryPointId = failoverRecoveryPointId;
            return this;
        }

        /**
         * @param friendlyName The name.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable String friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param healthErrors List of health errors.
         * 
         * @return builder
         * 
         */
        public Builder healthErrors(@Nullable List<HealthErrorResponse> healthErrors) {
            $.healthErrors = healthErrors;
            return this;
        }

        /**
         * @param healthErrors List of health errors.
         * 
         * @return builder
         * 
         */
        public Builder healthErrors(HealthErrorResponse... healthErrors) {
            return healthErrors(List.of(healthErrors));
        }

        /**
         * @param lastSuccessfulFailoverTime The Last successful failover time.
         * 
         * @return builder
         * 
         */
        public Builder lastSuccessfulFailoverTime(@Nullable String lastSuccessfulFailoverTime) {
            $.lastSuccessfulFailoverTime = lastSuccessfulFailoverTime;
            return this;
        }

        /**
         * @param lastSuccessfulTestFailoverTime The Last successful test failover time.
         * 
         * @return builder
         * 
         */
        public Builder lastSuccessfulTestFailoverTime(@Nullable String lastSuccessfulTestFailoverTime) {
            $.lastSuccessfulTestFailoverTime = lastSuccessfulTestFailoverTime;
            return this;
        }

        /**
         * @param policyFriendlyName The name of Policy governing this PE.
         * 
         * @return builder
         * 
         */
        public Builder policyFriendlyName(@Nullable String policyFriendlyName) {
            $.policyFriendlyName = policyFriendlyName;
            return this;
        }

        /**
         * @param policyId The ID of Policy governing this PE.
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable String policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param primaryFabricFriendlyName The friendly name of the primary fabric.
         * 
         * @return builder
         * 
         */
        public Builder primaryFabricFriendlyName(@Nullable String primaryFabricFriendlyName) {
            $.primaryFabricFriendlyName = primaryFabricFriendlyName;
            return this;
        }

        /**
         * @param primaryFabricProvider The fabric provider of the primary fabric.
         * 
         * @return builder
         * 
         */
        public Builder primaryFabricProvider(@Nullable String primaryFabricProvider) {
            $.primaryFabricProvider = primaryFabricProvider;
            return this;
        }

        /**
         * @param primaryProtectionContainerFriendlyName The name of primary protection container friendly name.
         * 
         * @return builder
         * 
         */
        public Builder primaryProtectionContainerFriendlyName(@Nullable String primaryProtectionContainerFriendlyName) {
            $.primaryProtectionContainerFriendlyName = primaryProtectionContainerFriendlyName;
            return this;
        }

        /**
         * @param protectableItemId The protected item ARM Id.
         * 
         * @return builder
         * 
         */
        public Builder protectableItemId(@Nullable String protectableItemId) {
            $.protectableItemId = protectableItemId;
            return this;
        }

        /**
         * @param protectedItemType The type of protected item type.
         * 
         * @return builder
         * 
         */
        public Builder protectedItemType(@Nullable String protectedItemType) {
            $.protectedItemType = protectedItemType;
            return this;
        }

        /**
         * @param protectionState The protection status.
         * 
         * @return builder
         * 
         */
        public Builder protectionState(@Nullable String protectionState) {
            $.protectionState = protectionState;
            return this;
        }

        /**
         * @param protectionStateDescription The protection state description.
         * 
         * @return builder
         * 
         */
        public Builder protectionStateDescription(@Nullable String protectionStateDescription) {
            $.protectionStateDescription = protectionStateDescription;
            return this;
        }

        /**
         * @param providerSpecificDetails The Replication provider custom settings.
         * 
         * @return builder
         * 
         */
        public Builder providerSpecificDetails(@Nullable Object providerSpecificDetails) {
            $.providerSpecificDetails = providerSpecificDetails;
            return this;
        }

        /**
         * @param recoveryContainerId The recovery container Id.
         * 
         * @return builder
         * 
         */
        public Builder recoveryContainerId(@Nullable String recoveryContainerId) {
            $.recoveryContainerId = recoveryContainerId;
            return this;
        }

        /**
         * @param recoveryFabricFriendlyName The friendly name of recovery fabric.
         * 
         * @return builder
         * 
         */
        public Builder recoveryFabricFriendlyName(@Nullable String recoveryFabricFriendlyName) {
            $.recoveryFabricFriendlyName = recoveryFabricFriendlyName;
            return this;
        }

        /**
         * @param recoveryFabricId The Arm Id of recovery fabric.
         * 
         * @return builder
         * 
         */
        public Builder recoveryFabricId(@Nullable String recoveryFabricId) {
            $.recoveryFabricId = recoveryFabricId;
            return this;
        }

        /**
         * @param recoveryProtectionContainerFriendlyName The name of recovery container friendly name.
         * 
         * @return builder
         * 
         */
        public Builder recoveryProtectionContainerFriendlyName(@Nullable String recoveryProtectionContainerFriendlyName) {
            $.recoveryProtectionContainerFriendlyName = recoveryProtectionContainerFriendlyName;
            return this;
        }

        /**
         * @param recoveryServicesProviderId The recovery provider ARM Id.
         * 
         * @return builder
         * 
         */
        public Builder recoveryServicesProviderId(@Nullable String recoveryServicesProviderId) {
            $.recoveryServicesProviderId = recoveryServicesProviderId;
            return this;
        }

        /**
         * @param replicationHealth The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM&#39;s replication group into account. This is a string representation of the ProtectionHealth enumeration.
         * 
         * @return builder
         * 
         */
        public Builder replicationHealth(@Nullable String replicationHealth) {
            $.replicationHealth = replicationHealth;
            return this;
        }

        /**
         * @param testFailoverState The Test failover state.
         * 
         * @return builder
         * 
         */
        public Builder testFailoverState(@Nullable String testFailoverState) {
            $.testFailoverState = testFailoverState;
            return this;
        }

        /**
         * @param testFailoverStateDescription The Test failover state description.
         * 
         * @return builder
         * 
         */
        public Builder testFailoverStateDescription(@Nullable String testFailoverStateDescription) {
            $.testFailoverStateDescription = testFailoverStateDescription;
            return this;
        }

        public ReplicationProtectedItemPropertiesResponse build() {
            return $;
        }
    }

}
