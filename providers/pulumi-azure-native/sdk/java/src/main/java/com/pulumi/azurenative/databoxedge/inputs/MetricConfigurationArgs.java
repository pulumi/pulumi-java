// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.inputs;

import com.pulumi.azurenative.databoxedge.inputs.MetricCounterSetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Metric configuration.
 * 
 */
public final class MetricConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricConfigurationArgs Empty = new MetricConfigurationArgs();

    /**
     * Host name for the IoT hub associated to the device.
     * 
     */
    @Import(name="counterSets", required=true)
      private final Output<List<MetricCounterSetArgs>> counterSets;

    public Output<List<MetricCounterSetArgs>> counterSets() {
        return this.counterSets;
    }

    /**
     * The MDM account to which the counters should be pushed.
     * 
     */
    @Import(name="mdmAccount")
      private final @Nullable Output<String> mdmAccount;

    public Output<String> mdmAccount() {
        return this.mdmAccount == null ? Codegen.empty() : this.mdmAccount;
    }

    /**
     * The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified
     * 
     */
    @Import(name="metricNameSpace")
      private final @Nullable Output<String> metricNameSpace;

    public Output<String> metricNameSpace() {
        return this.metricNameSpace == null ? Codegen.empty() : this.metricNameSpace;
    }

    /**
     * The Resource ID on which the metrics should be pushed.
     * 
     */
    @Import(name="resourceId", required=true)
      private final Output<String> resourceId;

    public Output<String> resourceId() {
        return this.resourceId;
    }

    public MetricConfigurationArgs(
        Output<List<MetricCounterSetArgs>> counterSets,
        @Nullable Output<String> mdmAccount,
        @Nullable Output<String> metricNameSpace,
        Output<String> resourceId) {
        this.counterSets = Objects.requireNonNull(counterSets, "expected parameter 'counterSets' to be non-null");
        this.mdmAccount = mdmAccount;
        this.metricNameSpace = metricNameSpace;
        this.resourceId = Objects.requireNonNull(resourceId, "expected parameter 'resourceId' to be non-null");
    }

    private MetricConfigurationArgs() {
        this.counterSets = Codegen.empty();
        this.mdmAccount = Codegen.empty();
        this.metricNameSpace = Codegen.empty();
        this.resourceId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<MetricCounterSetArgs>> counterSets;
        private @Nullable Output<String> mdmAccount;
        private @Nullable Output<String> metricNameSpace;
        private Output<String> resourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.counterSets = defaults.counterSets;
    	      this.mdmAccount = defaults.mdmAccount;
    	      this.metricNameSpace = defaults.metricNameSpace;
    	      this.resourceId = defaults.resourceId;
        }

        public Builder counterSets(Output<List<MetricCounterSetArgs>> counterSets) {
            this.counterSets = Objects.requireNonNull(counterSets);
            return this;
        }
        public Builder counterSets(List<MetricCounterSetArgs> counterSets) {
            this.counterSets = Output.of(Objects.requireNonNull(counterSets));
            return this;
        }
        public Builder counterSets(MetricCounterSetArgs... counterSets) {
            return counterSets(List.of(counterSets));
        }
        public Builder mdmAccount(@Nullable Output<String> mdmAccount) {
            this.mdmAccount = mdmAccount;
            return this;
        }
        public Builder mdmAccount(@Nullable String mdmAccount) {
            this.mdmAccount = Codegen.ofNullable(mdmAccount);
            return this;
        }
        public Builder metricNameSpace(@Nullable Output<String> metricNameSpace) {
            this.metricNameSpace = metricNameSpace;
            return this;
        }
        public Builder metricNameSpace(@Nullable String metricNameSpace) {
            this.metricNameSpace = Codegen.ofNullable(metricNameSpace);
            return this;
        }
        public Builder resourceId(Output<String> resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }
        public Builder resourceId(String resourceId) {
            this.resourceId = Output.of(Objects.requireNonNull(resourceId));
            return this;
        }        public MetricConfigurationArgs build() {
            return new MetricConfigurationArgs(counterSets, mdmAccount, metricNameSpace, resourceId);
        }
    }
}
