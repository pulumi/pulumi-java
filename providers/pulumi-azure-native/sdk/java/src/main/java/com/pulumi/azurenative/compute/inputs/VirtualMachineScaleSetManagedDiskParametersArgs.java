// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.enums.StorageAccountTypes;
import com.pulumi.azurenative.compute.inputs.DiskEncryptionSetParametersArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Describes the parameters of a ScaleSet managed disk.
 * 
 */
public final class VirtualMachineScaleSetManagedDiskParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineScaleSetManagedDiskParametersArgs Empty = new VirtualMachineScaleSetManagedDiskParametersArgs();

    /**
     * Specifies the customer managed disk encryption set resource id for the managed disk.
     * 
     */
    @Import(name="diskEncryptionSet")
      private final @Nullable Output<DiskEncryptionSetParametersArgs> diskEncryptionSet;

    public Output<DiskEncryptionSetParametersArgs> diskEncryptionSet() {
        return this.diskEncryptionSet == null ? Codegen.empty() : this.diskEncryptionSet;
    }

    /**
     * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
     * 
     */
    @Import(name="storageAccountType")
      private final @Nullable Output<Either<String,StorageAccountTypes>> storageAccountType;

    public Output<Either<String,StorageAccountTypes>> storageAccountType() {
        return this.storageAccountType == null ? Codegen.empty() : this.storageAccountType;
    }

    public VirtualMachineScaleSetManagedDiskParametersArgs(
        @Nullable Output<DiskEncryptionSetParametersArgs> diskEncryptionSet,
        @Nullable Output<Either<String,StorageAccountTypes>> storageAccountType) {
        this.diskEncryptionSet = diskEncryptionSet;
        this.storageAccountType = storageAccountType;
    }

    private VirtualMachineScaleSetManagedDiskParametersArgs() {
        this.diskEncryptionSet = Codegen.empty();
        this.storageAccountType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineScaleSetManagedDiskParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<DiskEncryptionSetParametersArgs> diskEncryptionSet;
        private @Nullable Output<Either<String,StorageAccountTypes>> storageAccountType;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineScaleSetManagedDiskParametersArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskEncryptionSet = defaults.diskEncryptionSet;
    	      this.storageAccountType = defaults.storageAccountType;
        }

        public Builder diskEncryptionSet(@Nullable Output<DiskEncryptionSetParametersArgs> diskEncryptionSet) {
            this.diskEncryptionSet = diskEncryptionSet;
            return this;
        }
        public Builder diskEncryptionSet(@Nullable DiskEncryptionSetParametersArgs diskEncryptionSet) {
            this.diskEncryptionSet = Codegen.ofNullable(diskEncryptionSet);
            return this;
        }
        public Builder storageAccountType(@Nullable Output<Either<String,StorageAccountTypes>> storageAccountType) {
            this.storageAccountType = storageAccountType;
            return this;
        }
        public Builder storageAccountType(@Nullable Either<String,StorageAccountTypes> storageAccountType) {
            this.storageAccountType = Codegen.ofNullable(storageAccountType);
            return this;
        }        public VirtualMachineScaleSetManagedDiskParametersArgs build() {
            return new VirtualMachineScaleSetManagedDiskParametersArgs(diskEncryptionSet, storageAccountType);
        }
    }
}
