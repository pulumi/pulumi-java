// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The subscription role receiver value.
 * 
 */
public final class SubscriptionReceiverValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubscriptionReceiverValueArgs Empty = new SubscriptionReceiverValueArgs();

    /**
     * The role of the notification receiver.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return The role of the notification receiver.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * The subscription id of the notification receiver.
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return The subscription id of the notification receiver.
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    /**
     * The subscription name of the notification receiver.
     * 
     */
    @Import(name="subscriptionName")
    private @Nullable Output<String> subscriptionName;

    /**
     * @return The subscription name of the notification receiver.
     * 
     */
    public Optional<Output<String>> subscriptionName() {
        return Optional.ofNullable(this.subscriptionName);
    }

    private SubscriptionReceiverValueArgs() {}

    private SubscriptionReceiverValueArgs(SubscriptionReceiverValueArgs $) {
        this.role = $.role;
        this.subscriptionId = $.subscriptionId;
        this.subscriptionName = $.subscriptionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriptionReceiverValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriptionReceiverValueArgs $;

        public Builder() {
            $ = new SubscriptionReceiverValueArgs();
        }

        public Builder(SubscriptionReceiverValueArgs defaults) {
            $ = new SubscriptionReceiverValueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param role The role of the notification receiver.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The role of the notification receiver.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param subscriptionId The subscription id of the notification receiver.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The subscription id of the notification receiver.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param subscriptionName The subscription name of the notification receiver.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionName(@Nullable Output<String> subscriptionName) {
            $.subscriptionName = subscriptionName;
            return this;
        }

        /**
         * @param subscriptionName The subscription name of the notification receiver.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionName(String subscriptionName) {
            return subscriptionName(Output.of(subscriptionName));
        }

        public SubscriptionReceiverValueArgs build() {
            return $;
        }
    }

}
