// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databricks.outputs;

import com.pulumi.azurenative.databricks.outputs.CreatedByResponse;
import com.pulumi.azurenative.databricks.outputs.ManagedIdentityConfigurationResponse;
import com.pulumi.azurenative.databricks.outputs.SkuResponse;
import com.pulumi.azurenative.databricks.outputs.WorkspaceCustomParametersResponse;
import com.pulumi.azurenative.databricks.outputs.WorkspaceProviderAuthorizationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkspaceResult {
    /**
     * The workspace provider authorizations.
     * 
     */
    private final @Nullable List<WorkspaceProviderAuthorizationResponse> authorizations;
    /**
     * Indicates the Object ID, PUID and Application ID of entity that created the workspace.
     * 
     */
    private final @Nullable CreatedByResponse createdBy;
    /**
     * Specifies the date and time when the workspace is created.
     * 
     */
    private final String createdDateTime;
    /**
     * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * The geo-location where the resource lives
     * 
     */
    private final String location;
    /**
     * The managed resource group Id.
     * 
     */
    private final String managedResourceGroupId;
    /**
     * The name of the resource
     * 
     */
    private final String name;
    /**
     * The workspace&#39;s custom parameters.
     * 
     */
    private final @Nullable WorkspaceCustomParametersResponse parameters;
    /**
     * The workspace provisioning state.
     * 
     */
    private final String provisioningState;
    /**
     * The SKU of the resource.
     * 
     */
    private final @Nullable SkuResponse sku;
    /**
     * The details of Managed Identity of Storage Account
     * 
     */
    private final @Nullable ManagedIdentityConfigurationResponse storageAccountIdentity;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
     */
    private final String type;
    /**
     * The blob URI where the UI definition file is located.
     * 
     */
    private final @Nullable String uiDefinitionUri;
    /**
     * Indicates the Object ID, PUID and Application ID of entity that last updated the workspace.
     * 
     */
    private final @Nullable CreatedByResponse updatedBy;
    /**
     * The unique identifier of the databricks workspace in databricks control plane.
     * 
     */
    private final String workspaceId;
    /**
     * The workspace URL which is of the format &#39;adb-{workspaceId}.{random}.azuredatabricks.net&#39;
     * 
     */
    private final String workspaceUrl;

    @CustomType.Constructor
    private GetWorkspaceResult(
        @CustomType.Parameter("authorizations") @Nullable List<WorkspaceProviderAuthorizationResponse> authorizations,
        @CustomType.Parameter("createdBy") @Nullable CreatedByResponse createdBy,
        @CustomType.Parameter("createdDateTime") String createdDateTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("managedResourceGroupId") String managedResourceGroupId,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("parameters") @Nullable WorkspaceCustomParametersResponse parameters,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("sku") @Nullable SkuResponse sku,
        @CustomType.Parameter("storageAccountIdentity") @Nullable ManagedIdentityConfigurationResponse storageAccountIdentity,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uiDefinitionUri") @Nullable String uiDefinitionUri,
        @CustomType.Parameter("updatedBy") @Nullable CreatedByResponse updatedBy,
        @CustomType.Parameter("workspaceId") String workspaceId,
        @CustomType.Parameter("workspaceUrl") String workspaceUrl) {
        this.authorizations = authorizations;
        this.createdBy = createdBy;
        this.createdDateTime = createdDateTime;
        this.id = id;
        this.location = location;
        this.managedResourceGroupId = managedResourceGroupId;
        this.name = name;
        this.parameters = parameters;
        this.provisioningState = provisioningState;
        this.sku = sku;
        this.storageAccountIdentity = storageAccountIdentity;
        this.tags = tags;
        this.type = type;
        this.uiDefinitionUri = uiDefinitionUri;
        this.updatedBy = updatedBy;
        this.workspaceId = workspaceId;
        this.workspaceUrl = workspaceUrl;
    }

    /**
     * The workspace provider authorizations.
     * 
    */
    public List<WorkspaceProviderAuthorizationResponse> authorizations() {
        return this.authorizations == null ? List.of() : this.authorizations;
    }
    /**
     * Indicates the Object ID, PUID and Application ID of entity that created the workspace.
     * 
    */
    public Optional<CreatedByResponse> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    /**
     * Specifies the date and time when the workspace is created.
     * 
    */
    public String createdDateTime() {
        return this.createdDateTime;
    }
    /**
     * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * The geo-location where the resource lives
     * 
    */
    public String location() {
        return this.location;
    }
    /**
     * The managed resource group Id.
     * 
    */
    public String managedResourceGroupId() {
        return this.managedResourceGroupId;
    }
    /**
     * The name of the resource
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * The workspace&#39;s custom parameters.
     * 
    */
    public Optional<WorkspaceCustomParametersResponse> parameters() {
        return Optional.ofNullable(this.parameters);
    }
    /**
     * The workspace provisioning state.
     * 
    */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * The SKU of the resource.
     * 
    */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * The details of Managed Identity of Storage Account
     * 
    */
    public Optional<ManagedIdentityConfigurationResponse> storageAccountIdentity() {
        return Optional.ofNullable(this.storageAccountIdentity);
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * The blob URI where the UI definition file is located.
     * 
    */
    public Optional<String> uiDefinitionUri() {
        return Optional.ofNullable(this.uiDefinitionUri);
    }
    /**
     * Indicates the Object ID, PUID and Application ID of entity that last updated the workspace.
     * 
    */
    public Optional<CreatedByResponse> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }
    /**
     * The unique identifier of the databricks workspace in databricks control plane.
     * 
    */
    public String workspaceId() {
        return this.workspaceId;
    }
    /**
     * The workspace URL which is of the format &#39;adb-{workspaceId}.{random}.azuredatabricks.net&#39;
     * 
    */
    public String workspaceUrl() {
        return this.workspaceUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<WorkspaceProviderAuthorizationResponse> authorizations;
        private @Nullable CreatedByResponse createdBy;
        private String createdDateTime;
        private String id;
        private String location;
        private String managedResourceGroupId;
        private String name;
        private @Nullable WorkspaceCustomParametersResponse parameters;
        private String provisioningState;
        private @Nullable SkuResponse sku;
        private @Nullable ManagedIdentityConfigurationResponse storageAccountIdentity;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable String uiDefinitionUri;
        private @Nullable CreatedByResponse updatedBy;
        private String workspaceId;
        private String workspaceUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizations = defaults.authorizations;
    	      this.createdBy = defaults.createdBy;
    	      this.createdDateTime = defaults.createdDateTime;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.managedResourceGroupId = defaults.managedResourceGroupId;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.provisioningState = defaults.provisioningState;
    	      this.sku = defaults.sku;
    	      this.storageAccountIdentity = defaults.storageAccountIdentity;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.uiDefinitionUri = defaults.uiDefinitionUri;
    	      this.updatedBy = defaults.updatedBy;
    	      this.workspaceId = defaults.workspaceId;
    	      this.workspaceUrl = defaults.workspaceUrl;
        }

        public Builder authorizations(@Nullable List<WorkspaceProviderAuthorizationResponse> authorizations) {
            this.authorizations = authorizations;
            return this;
        }
        public Builder authorizations(WorkspaceProviderAuthorizationResponse... authorizations) {
            return authorizations(List.of(authorizations));
        }
        public Builder createdBy(@Nullable CreatedByResponse createdBy) {
            this.createdBy = createdBy;
            return this;
        }
        public Builder createdDateTime(String createdDateTime) {
            this.createdDateTime = Objects.requireNonNull(createdDateTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder managedResourceGroupId(String managedResourceGroupId) {
            this.managedResourceGroupId = Objects.requireNonNull(managedResourceGroupId);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder parameters(@Nullable WorkspaceCustomParametersResponse parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        public Builder storageAccountIdentity(@Nullable ManagedIdentityConfigurationResponse storageAccountIdentity) {
            this.storageAccountIdentity = storageAccountIdentity;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uiDefinitionUri(@Nullable String uiDefinitionUri) {
            this.uiDefinitionUri = uiDefinitionUri;
            return this;
        }
        public Builder updatedBy(@Nullable CreatedByResponse updatedBy) {
            this.updatedBy = updatedBy;
            return this;
        }
        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }
        public Builder workspaceUrl(String workspaceUrl) {
            this.workspaceUrl = Objects.requireNonNull(workspaceUrl);
            return this;
        }        public GetWorkspaceResult build() {
            return new GetWorkspaceResult(authorizations, createdBy, createdDateTime, id, location, managedResourceGroupId, name, parameters, provisioningState, sku, storageAccountIdentity, tags, type, uiDefinitionUri, updatedBy, workspaceId, workspaceUrl);
        }
    }
}
