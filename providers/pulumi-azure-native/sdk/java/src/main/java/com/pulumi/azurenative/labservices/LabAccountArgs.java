// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LabAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final LabAccountArgs Empty = new LabAccountArgs();

    /**
     * Represents if region selection is enabled
     * 
     */
    @Import(name="enabledRegionSelection")
    private @Nullable Output<Boolean> enabledRegionSelection;

    /**
     * @return Represents if region selection is enabled
     * 
     */
    public Optional<Output<Boolean>> enabledRegionSelection() {
        return Optional.ofNullable(this.enabledRegionSelection);
    }

    /**
     * The name of the lab Account.
     * 
     */
    @Import(name="labAccountName")
    private @Nullable Output<String> labAccountName;

    /**
     * @return The name of the lab Account.
     * 
     */
    public Optional<Output<String>> labAccountName() {
        return Optional.ofNullable(this.labAccountName);
    }

    /**
     * The location of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The provisioning status of the resource.
     * 
     */
    @Import(name="provisioningState")
    private @Nullable Output<String> provisioningState;

    /**
     * @return The provisioning status of the resource.
     * 
     */
    public Optional<Output<String>> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The tags of the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tags of the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The unique immutable identifier of a resource (Guid).
     * 
     */
    @Import(name="uniqueIdentifier")
    private @Nullable Output<String> uniqueIdentifier;

    /**
     * @return The unique immutable identifier of a resource (Guid).
     * 
     */
    public Optional<Output<String>> uniqueIdentifier() {
        return Optional.ofNullable(this.uniqueIdentifier);
    }

    private LabAccountArgs() {}

    private LabAccountArgs(LabAccountArgs $) {
        this.enabledRegionSelection = $.enabledRegionSelection;
        this.labAccountName = $.labAccountName;
        this.location = $.location;
        this.provisioningState = $.provisioningState;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.uniqueIdentifier = $.uniqueIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LabAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LabAccountArgs $;

        public Builder() {
            $ = new LabAccountArgs();
        }

        public Builder(LabAccountArgs defaults) {
            $ = new LabAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabledRegionSelection Represents if region selection is enabled
         * 
         * @return builder
         * 
         */
        public Builder enabledRegionSelection(@Nullable Output<Boolean> enabledRegionSelection) {
            $.enabledRegionSelection = enabledRegionSelection;
            return this;
        }

        /**
         * @param enabledRegionSelection Represents if region selection is enabled
         * 
         * @return builder
         * 
         */
        public Builder enabledRegionSelection(Boolean enabledRegionSelection) {
            return enabledRegionSelection(Output.of(enabledRegionSelection));
        }

        /**
         * @param labAccountName The name of the lab Account.
         * 
         * @return builder
         * 
         */
        public Builder labAccountName(@Nullable Output<String> labAccountName) {
            $.labAccountName = labAccountName;
            return this;
        }

        /**
         * @param labAccountName The name of the lab Account.
         * 
         * @return builder
         * 
         */
        public Builder labAccountName(String labAccountName) {
            return labAccountName(Output.of(labAccountName));
        }

        /**
         * @param location The location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param provisioningState The provisioning status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(@Nullable Output<String> provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param provisioningState The provisioning status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            return provisioningState(Output.of(provisioningState));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags The tags of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param uniqueIdentifier The unique immutable identifier of a resource (Guid).
         * 
         * @return builder
         * 
         */
        public Builder uniqueIdentifier(@Nullable Output<String> uniqueIdentifier) {
            $.uniqueIdentifier = uniqueIdentifier;
            return this;
        }

        /**
         * @param uniqueIdentifier The unique immutable identifier of a resource (Guid).
         * 
         * @return builder
         * 
         */
        public Builder uniqueIdentifier(String uniqueIdentifier) {
            return uniqueIdentifier(Output.of(uniqueIdentifier));
        }

        public LabAccountArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
