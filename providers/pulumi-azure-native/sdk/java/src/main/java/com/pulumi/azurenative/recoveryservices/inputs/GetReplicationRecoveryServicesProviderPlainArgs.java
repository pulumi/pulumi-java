// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetReplicationRecoveryServicesProviderPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetReplicationRecoveryServicesProviderPlainArgs Empty = new GetReplicationRecoveryServicesProviderPlainArgs();

    /**
     * Fabric name.
     * 
     */
    @Import(name="fabricName", required=true)
    private String fabricName;

    /**
     * @return Fabric name.
     * 
     */
    public String fabricName() {
        return this.fabricName;
    }

    /**
     * Recovery services provider name
     * 
     */
    @Import(name="providerName", required=true)
    private String providerName;

    /**
     * @return Recovery services provider name
     * 
     */
    public String providerName() {
        return this.providerName;
    }

    /**
     * The name of the resource group where the recovery services vault is present.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group where the recovery services vault is present.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the recovery services vault.
     * 
     */
    @Import(name="resourceName", required=true)
    private String resourceName;

    /**
     * @return The name of the recovery services vault.
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }

    private GetReplicationRecoveryServicesProviderPlainArgs() {}

    private GetReplicationRecoveryServicesProviderPlainArgs(GetReplicationRecoveryServicesProviderPlainArgs $) {
        this.fabricName = $.fabricName;
        this.providerName = $.providerName;
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetReplicationRecoveryServicesProviderPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetReplicationRecoveryServicesProviderPlainArgs $;

        public Builder() {
            $ = new GetReplicationRecoveryServicesProviderPlainArgs();
        }

        public Builder(GetReplicationRecoveryServicesProviderPlainArgs defaults) {
            $ = new GetReplicationRecoveryServicesProviderPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fabricName Fabric name.
         * 
         * @return builder
         * 
         */
        public Builder fabricName(String fabricName) {
            $.fabricName = fabricName;
            return this;
        }

        /**
         * @param providerName Recovery services provider name
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group where the recovery services vault is present.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceName The name of the recovery services vault.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        public GetReplicationRecoveryServicesProviderPlainArgs build() {
            $.fabricName = Objects.requireNonNull($.fabricName, "expected parameter 'fabricName' to be non-null");
            $.providerName = Objects.requireNonNull($.providerName, "expected parameter 'providerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceName = Objects.requireNonNull($.resourceName, "expected parameter 'resourceName' to be non-null");
            return $;
        }
    }

}
