// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logz.inputs;

import com.pulumi.azurenative.logz.inputs.MetricRulesResponse;
import com.pulumi.azurenative.logz.inputs.SystemDataResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Definition of the properties for a TagRules resource.
 * 
 */
public final class MetricsTagRulesPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final MetricsTagRulesPropertiesResponse Empty = new MetricsTagRulesPropertiesResponse();

    @Import(name="metricRules")
    private @Nullable List<MetricRulesResponse> metricRules;

    public Optional<List<MetricRulesResponse>> metricRules() {
        return Optional.ofNullable(this.metricRules);
    }

    /**
     * Flag specifying if the resource provisioning state as tracked by ARM.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Flag specifying if metrics from Azure resources should be sent for the Monitor resource.
     * 
     */
    @Import(name="sendMetrics")
    private @Nullable Boolean sendMetrics;

    public Optional<Boolean> sendMetrics() {
        return Optional.ofNullable(this.sendMetrics);
    }

    /**
     * Metadata pertaining to creation and last modification of the resource.
     * 
     */
    @Import(name="systemData", required=true)
    private SystemDataResponse systemData;

    public SystemDataResponse systemData() {
        return this.systemData;
    }

    private MetricsTagRulesPropertiesResponse() {}

    private MetricsTagRulesPropertiesResponse(MetricsTagRulesPropertiesResponse $) {
        this.metricRules = $.metricRules;
        this.provisioningState = $.provisioningState;
        this.sendMetrics = $.sendMetrics;
        this.systemData = $.systemData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricsTagRulesPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricsTagRulesPropertiesResponse $;

        public Builder() {
            $ = new MetricsTagRulesPropertiesResponse();
        }

        public Builder(MetricsTagRulesPropertiesResponse defaults) {
            $ = new MetricsTagRulesPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder metricRules(@Nullable List<MetricRulesResponse> metricRules) {
            $.metricRules = metricRules;
            return this;
        }

        public Builder metricRules(MetricRulesResponse... metricRules) {
            return metricRules(List.of(metricRules));
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder sendMetrics(@Nullable Boolean sendMetrics) {
            $.sendMetrics = sendMetrics;
            return this;
        }

        public Builder systemData(SystemDataResponse systemData) {
            $.systemData = systemData;
            return this;
        }

        public MetricsTagRulesPropertiesResponse build() {
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.systemData = Objects.requireNonNull($.systemData, "expected parameter 'systemData' to be non-null");
            return $;
        }
    }

}
