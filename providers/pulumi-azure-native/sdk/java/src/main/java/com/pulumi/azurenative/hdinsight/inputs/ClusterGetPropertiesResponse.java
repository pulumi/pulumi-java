// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hdinsight.inputs;

import com.pulumi.azurenative.hdinsight.inputs.ClusterDefinitionResponse;
import com.pulumi.azurenative.hdinsight.inputs.ComputeIsolationPropertiesResponse;
import com.pulumi.azurenative.hdinsight.inputs.ComputeProfileResponse;
import com.pulumi.azurenative.hdinsight.inputs.ConnectivityEndpointResponse;
import com.pulumi.azurenative.hdinsight.inputs.DiskEncryptionPropertiesResponse;
import com.pulumi.azurenative.hdinsight.inputs.EncryptionInTransitPropertiesResponse;
import com.pulumi.azurenative.hdinsight.inputs.ErrorsResponse;
import com.pulumi.azurenative.hdinsight.inputs.ExcludedServicesConfigResponse;
import com.pulumi.azurenative.hdinsight.inputs.KafkaRestPropertiesResponse;
import com.pulumi.azurenative.hdinsight.inputs.NetworkPropertiesResponse;
import com.pulumi.azurenative.hdinsight.inputs.QuotaInfoResponse;
import com.pulumi.azurenative.hdinsight.inputs.SecurityProfileResponse;
import com.pulumi.azurenative.hdinsight.inputs.StorageProfileResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties of cluster.
 * 
 */
public final class ClusterGetPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ClusterGetPropertiesResponse Empty = new ClusterGetPropertiesResponse();

    /**
     * The cluster definition.
     * 
     */
    @Import(name="clusterDefinition", required=true)
    private ClusterDefinitionResponse clusterDefinition;

    public ClusterDefinitionResponse clusterDefinition() {
        return this.clusterDefinition;
    }

    /**
     * The hdp version of the cluster.
     * 
     */
    @Import(name="clusterHdpVersion")
    private @Nullable String clusterHdpVersion;

    public Optional<String> clusterHdpVersion() {
        return Optional.ofNullable(this.clusterHdpVersion);
    }

    /**
     * The cluster id.
     * 
     */
    @Import(name="clusterId")
    private @Nullable String clusterId;

    public Optional<String> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * The state of the cluster.
     * 
     */
    @Import(name="clusterState")
    private @Nullable String clusterState;

    public Optional<String> clusterState() {
        return Optional.ofNullable(this.clusterState);
    }

    /**
     * The version of the cluster.
     * 
     */
    @Import(name="clusterVersion")
    private @Nullable String clusterVersion;

    public Optional<String> clusterVersion() {
        return Optional.ofNullable(this.clusterVersion);
    }

    /**
     * The compute isolation properties.
     * 
     */
    @Import(name="computeIsolationProperties")
    private @Nullable ComputeIsolationPropertiesResponse computeIsolationProperties;

    public Optional<ComputeIsolationPropertiesResponse> computeIsolationProperties() {
        return Optional.ofNullable(this.computeIsolationProperties);
    }

    /**
     * The compute profile.
     * 
     */
    @Import(name="computeProfile")
    private @Nullable ComputeProfileResponse computeProfile;

    public Optional<ComputeProfileResponse> computeProfile() {
        return Optional.ofNullable(this.computeProfile);
    }

    /**
     * The list of connectivity endpoints.
     * 
     */
    @Import(name="connectivityEndpoints")
    private @Nullable List<ConnectivityEndpointResponse> connectivityEndpoints;

    public Optional<List<ConnectivityEndpointResponse>> connectivityEndpoints() {
        return Optional.ofNullable(this.connectivityEndpoints);
    }

    /**
     * The date on which the cluster was created.
     * 
     */
    @Import(name="createdDate")
    private @Nullable String createdDate;

    public Optional<String> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }

    /**
     * The disk encryption properties.
     * 
     */
    @Import(name="diskEncryptionProperties")
    private @Nullable DiskEncryptionPropertiesResponse diskEncryptionProperties;

    public Optional<DiskEncryptionPropertiesResponse> diskEncryptionProperties() {
        return Optional.ofNullable(this.diskEncryptionProperties);
    }

    /**
     * The encryption-in-transit properties.
     * 
     */
    @Import(name="encryptionInTransitProperties")
    private @Nullable EncryptionInTransitPropertiesResponse encryptionInTransitProperties;

    public Optional<EncryptionInTransitPropertiesResponse> encryptionInTransitProperties() {
        return Optional.ofNullable(this.encryptionInTransitProperties);
    }

    /**
     * The list of errors.
     * 
     */
    @Import(name="errors")
    private @Nullable List<ErrorsResponse> errors;

    public Optional<List<ErrorsResponse>> errors() {
        return Optional.ofNullable(this.errors);
    }

    /**
     * The excluded services config.
     * 
     */
    @Import(name="excludedServicesConfig")
    private @Nullable ExcludedServicesConfigResponse excludedServicesConfig;

    public Optional<ExcludedServicesConfigResponse> excludedServicesConfig() {
        return Optional.ofNullable(this.excludedServicesConfig);
    }

    /**
     * The cluster kafka rest proxy configuration.
     * 
     */
    @Import(name="kafkaRestProperties")
    private @Nullable KafkaRestPropertiesResponse kafkaRestProperties;

    public Optional<KafkaRestPropertiesResponse> kafkaRestProperties() {
        return Optional.ofNullable(this.kafkaRestProperties);
    }

    /**
     * The minimal supported tls version.
     * 
     */
    @Import(name="minSupportedTlsVersion")
    private @Nullable String minSupportedTlsVersion;

    public Optional<String> minSupportedTlsVersion() {
        return Optional.ofNullable(this.minSupportedTlsVersion);
    }

    /**
     * The network properties.
     * 
     */
    @Import(name="networkProperties")
    private @Nullable NetworkPropertiesResponse networkProperties;

    public Optional<NetworkPropertiesResponse> networkProperties() {
        return Optional.ofNullable(this.networkProperties);
    }

    /**
     * The type of operating system.
     * 
     */
    @Import(name="osType")
    private @Nullable String osType;

    public Optional<String> osType() {
        return Optional.ofNullable(this.osType);
    }

    /**
     * The provisioning state, which only appears in the response.
     * 
     */
    @Import(name="provisioningState")
    private @Nullable String provisioningState;

    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    /**
     * The quota information.
     * 
     */
    @Import(name="quotaInfo")
    private @Nullable QuotaInfoResponse quotaInfo;

    public Optional<QuotaInfoResponse> quotaInfo() {
        return Optional.ofNullable(this.quotaInfo);
    }

    /**
     * The security profile.
     * 
     */
    @Import(name="securityProfile")
    private @Nullable SecurityProfileResponse securityProfile;

    public Optional<SecurityProfileResponse> securityProfile() {
        return Optional.ofNullable(this.securityProfile);
    }

    /**
     * The storage profile.
     * 
     */
    @Import(name="storageProfile")
    private @Nullable StorageProfileResponse storageProfile;

    public Optional<StorageProfileResponse> storageProfile() {
        return Optional.ofNullable(this.storageProfile);
    }

    /**
     * The cluster tier.
     * 
     */
    @Import(name="tier")
    private @Nullable String tier;

    public Optional<String> tier() {
        return Optional.ofNullable(this.tier);
    }

    private ClusterGetPropertiesResponse() {}

    private ClusterGetPropertiesResponse(ClusterGetPropertiesResponse $) {
        this.clusterDefinition = $.clusterDefinition;
        this.clusterHdpVersion = $.clusterHdpVersion;
        this.clusterId = $.clusterId;
        this.clusterState = $.clusterState;
        this.clusterVersion = $.clusterVersion;
        this.computeIsolationProperties = $.computeIsolationProperties;
        this.computeProfile = $.computeProfile;
        this.connectivityEndpoints = $.connectivityEndpoints;
        this.createdDate = $.createdDate;
        this.diskEncryptionProperties = $.diskEncryptionProperties;
        this.encryptionInTransitProperties = $.encryptionInTransitProperties;
        this.errors = $.errors;
        this.excludedServicesConfig = $.excludedServicesConfig;
        this.kafkaRestProperties = $.kafkaRestProperties;
        this.minSupportedTlsVersion = $.minSupportedTlsVersion;
        this.networkProperties = $.networkProperties;
        this.osType = $.osType;
        this.provisioningState = $.provisioningState;
        this.quotaInfo = $.quotaInfo;
        this.securityProfile = $.securityProfile;
        this.storageProfile = $.storageProfile;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterGetPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterGetPropertiesResponse $;

        public Builder() {
            $ = new ClusterGetPropertiesResponse();
        }

        public Builder(ClusterGetPropertiesResponse defaults) {
            $ = new ClusterGetPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder clusterDefinition(ClusterDefinitionResponse clusterDefinition) {
            $.clusterDefinition = clusterDefinition;
            return this;
        }

        public Builder clusterHdpVersion(@Nullable String clusterHdpVersion) {
            $.clusterHdpVersion = clusterHdpVersion;
            return this;
        }

        public Builder clusterId(@Nullable String clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterState(@Nullable String clusterState) {
            $.clusterState = clusterState;
            return this;
        }

        public Builder clusterVersion(@Nullable String clusterVersion) {
            $.clusterVersion = clusterVersion;
            return this;
        }

        public Builder computeIsolationProperties(@Nullable ComputeIsolationPropertiesResponse computeIsolationProperties) {
            $.computeIsolationProperties = computeIsolationProperties;
            return this;
        }

        public Builder computeProfile(@Nullable ComputeProfileResponse computeProfile) {
            $.computeProfile = computeProfile;
            return this;
        }

        public Builder connectivityEndpoints(@Nullable List<ConnectivityEndpointResponse> connectivityEndpoints) {
            $.connectivityEndpoints = connectivityEndpoints;
            return this;
        }

        public Builder connectivityEndpoints(ConnectivityEndpointResponse... connectivityEndpoints) {
            return connectivityEndpoints(List.of(connectivityEndpoints));
        }

        public Builder createdDate(@Nullable String createdDate) {
            $.createdDate = createdDate;
            return this;
        }

        public Builder diskEncryptionProperties(@Nullable DiskEncryptionPropertiesResponse diskEncryptionProperties) {
            $.diskEncryptionProperties = diskEncryptionProperties;
            return this;
        }

        public Builder encryptionInTransitProperties(@Nullable EncryptionInTransitPropertiesResponse encryptionInTransitProperties) {
            $.encryptionInTransitProperties = encryptionInTransitProperties;
            return this;
        }

        public Builder errors(@Nullable List<ErrorsResponse> errors) {
            $.errors = errors;
            return this;
        }

        public Builder errors(ErrorsResponse... errors) {
            return errors(List.of(errors));
        }

        public Builder excludedServicesConfig(@Nullable ExcludedServicesConfigResponse excludedServicesConfig) {
            $.excludedServicesConfig = excludedServicesConfig;
            return this;
        }

        public Builder kafkaRestProperties(@Nullable KafkaRestPropertiesResponse kafkaRestProperties) {
            $.kafkaRestProperties = kafkaRestProperties;
            return this;
        }

        public Builder minSupportedTlsVersion(@Nullable String minSupportedTlsVersion) {
            $.minSupportedTlsVersion = minSupportedTlsVersion;
            return this;
        }

        public Builder networkProperties(@Nullable NetworkPropertiesResponse networkProperties) {
            $.networkProperties = networkProperties;
            return this;
        }

        public Builder osType(@Nullable String osType) {
            $.osType = osType;
            return this;
        }

        public Builder provisioningState(@Nullable String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder quotaInfo(@Nullable QuotaInfoResponse quotaInfo) {
            $.quotaInfo = quotaInfo;
            return this;
        }

        public Builder securityProfile(@Nullable SecurityProfileResponse securityProfile) {
            $.securityProfile = securityProfile;
            return this;
        }

        public Builder storageProfile(@Nullable StorageProfileResponse storageProfile) {
            $.storageProfile = storageProfile;
            return this;
        }

        public Builder tier(@Nullable String tier) {
            $.tier = tier;
            return this;
        }

        public ClusterGetPropertiesResponse build() {
            $.clusterDefinition = Objects.requireNonNull($.clusterDefinition, "expected parameter 'clusterDefinition' to be non-null");
            return $;
        }
    }

}
