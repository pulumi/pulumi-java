// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The X12 agreement security settings.
 * 
 */
public final class X12SecuritySettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final X12SecuritySettingsArgs Empty = new X12SecuritySettingsArgs();

    /**
     * The authorization qualifier.
     * 
     */
    @Import(name="authorizationQualifier", required=true)
    private Output<String> authorizationQualifier;

    public Output<String> authorizationQualifier() {
        return this.authorizationQualifier;
    }

    /**
     * The authorization value.
     * 
     */
    @Import(name="authorizationValue")
    private @Nullable Output<String> authorizationValue;

    public Optional<Output<String>> authorizationValue() {
        return Optional.ofNullable(this.authorizationValue);
    }

    /**
     * The password value.
     * 
     */
    @Import(name="passwordValue")
    private @Nullable Output<String> passwordValue;

    public Optional<Output<String>> passwordValue() {
        return Optional.ofNullable(this.passwordValue);
    }

    /**
     * The security qualifier.
     * 
     */
    @Import(name="securityQualifier", required=true)
    private Output<String> securityQualifier;

    public Output<String> securityQualifier() {
        return this.securityQualifier;
    }

    private X12SecuritySettingsArgs() {}

    private X12SecuritySettingsArgs(X12SecuritySettingsArgs $) {
        this.authorizationQualifier = $.authorizationQualifier;
        this.authorizationValue = $.authorizationValue;
        this.passwordValue = $.passwordValue;
        this.securityQualifier = $.securityQualifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(X12SecuritySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private X12SecuritySettingsArgs $;

        public Builder() {
            $ = new X12SecuritySettingsArgs();
        }

        public Builder(X12SecuritySettingsArgs defaults) {
            $ = new X12SecuritySettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorizationQualifier(Output<String> authorizationQualifier) {
            $.authorizationQualifier = authorizationQualifier;
            return this;
        }

        public Builder authorizationQualifier(String authorizationQualifier) {
            return authorizationQualifier(Output.of(authorizationQualifier));
        }

        public Builder authorizationValue(@Nullable Output<String> authorizationValue) {
            $.authorizationValue = authorizationValue;
            return this;
        }

        public Builder authorizationValue(String authorizationValue) {
            return authorizationValue(Output.of(authorizationValue));
        }

        public Builder passwordValue(@Nullable Output<String> passwordValue) {
            $.passwordValue = passwordValue;
            return this;
        }

        public Builder passwordValue(String passwordValue) {
            return passwordValue(Output.of(passwordValue));
        }

        public Builder securityQualifier(Output<String> securityQualifier) {
            $.securityQualifier = securityQualifier;
            return this;
        }

        public Builder securityQualifier(String securityQualifier) {
            return securityQualifier(Output.of(securityQualifier));
        }

        public X12SecuritySettingsArgs build() {
            $.authorizationQualifier = Objects.requireNonNull($.authorizationQualifier, "expected parameter 'authorizationQualifier' to be non-null");
            $.securityQualifier = Objects.requireNonNull($.securityQualifier, "expected parameter 'securityQualifier' to be non-null");
            return $;
        }
    }

}
