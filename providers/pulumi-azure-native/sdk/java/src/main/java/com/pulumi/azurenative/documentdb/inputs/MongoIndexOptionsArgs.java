// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Cosmos DB MongoDB collection index options
 * 
 */
public final class MongoIndexOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MongoIndexOptionsArgs Empty = new MongoIndexOptionsArgs();

    /**
     * Expire after seconds
     * 
     */
    @Import(name="expireAfterSeconds")
    private @Nullable Output<Integer> expireAfterSeconds;

    /**
     * @return Expire after seconds
     * 
     */
    public Optional<Output<Integer>> expireAfterSeconds() {
        return Optional.ofNullable(this.expireAfterSeconds);
    }

    /**
     * Is unique or not
     * 
     */
    @Import(name="unique")
    private @Nullable Output<Boolean> unique;

    /**
     * @return Is unique or not
     * 
     */
    public Optional<Output<Boolean>> unique() {
        return Optional.ofNullable(this.unique);
    }

    private MongoIndexOptionsArgs() {}

    private MongoIndexOptionsArgs(MongoIndexOptionsArgs $) {
        this.expireAfterSeconds = $.expireAfterSeconds;
        this.unique = $.unique;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MongoIndexOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MongoIndexOptionsArgs $;

        public Builder() {
            $ = new MongoIndexOptionsArgs();
        }

        public Builder(MongoIndexOptionsArgs defaults) {
            $ = new MongoIndexOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expireAfterSeconds Expire after seconds
         * 
         * @return builder
         * 
         */
        public Builder expireAfterSeconds(@Nullable Output<Integer> expireAfterSeconds) {
            $.expireAfterSeconds = expireAfterSeconds;
            return this;
        }

        /**
         * @param expireAfterSeconds Expire after seconds
         * 
         * @return builder
         * 
         */
        public Builder expireAfterSeconds(Integer expireAfterSeconds) {
            return expireAfterSeconds(Output.of(expireAfterSeconds));
        }

        /**
         * @param unique Is unique or not
         * 
         * @return builder
         * 
         */
        public Builder unique(@Nullable Output<Boolean> unique) {
            $.unique = unique;
            return this;
        }

        /**
         * @param unique Is unique or not
         * 
         * @return builder
         * 
         */
        public Builder unique(Boolean unique) {
            return unique(Output.of(unique));
        }

        public MongoIndexOptionsArgs build() {
            return $;
        }
    }

}
