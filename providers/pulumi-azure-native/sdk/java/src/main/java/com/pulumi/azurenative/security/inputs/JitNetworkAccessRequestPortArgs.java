// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.enums.Status;
import com.pulumi.azurenative.security.enums.StatusReason;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JitNetworkAccessRequestPortArgs extends com.pulumi.resources.ResourceArgs {

    public static final JitNetworkAccessRequestPortArgs Empty = new JitNetworkAccessRequestPortArgs();

    /**
     * Mutually exclusive with the &#34;allowedSourceAddressPrefixes&#34; parameter. Should be an IP address or CIDR, for example &#34;192.168.0.3&#34; or &#34;192.168.0.0/16&#34;.
     * 
     */
    @Import(name="allowedSourceAddressPrefix")
    private @Nullable Output<String> allowedSourceAddressPrefix;

    public Optional<Output<String>> allowedSourceAddressPrefix() {
        return Optional.ofNullable(this.allowedSourceAddressPrefix);
    }

    /**
     * Mutually exclusive with the &#34;allowedSourceAddressPrefix&#34; parameter.
     * 
     */
    @Import(name="allowedSourceAddressPrefixes")
    private @Nullable Output<List<String>> allowedSourceAddressPrefixes;

    public Optional<Output<List<String>>> allowedSourceAddressPrefixes() {
        return Optional.ofNullable(this.allowedSourceAddressPrefixes);
    }

    /**
     * The date &amp; time at which the request ends in UTC
     * 
     */
    @Import(name="endTimeUtc", required=true)
    private Output<String> endTimeUtc;

    public Output<String> endTimeUtc() {
        return this.endTimeUtc;
    }

    /**
     * The port which is mapped to this port&#39;s `number` in the Azure Firewall, if applicable
     * 
     */
    @Import(name="mappedPort")
    private @Nullable Output<Integer> mappedPort;

    public Optional<Output<Integer>> mappedPort() {
        return Optional.ofNullable(this.mappedPort);
    }

    @Import(name="number", required=true)
    private Output<Integer> number;

    public Output<Integer> number() {
        return this.number;
    }

    /**
     * The status of the port
     * 
     */
    @Import(name="status", required=true)
    private Output<Either<String,Status>> status;

    public Output<Either<String,Status>> status() {
        return this.status;
    }

    /**
     * A description of why the `status` has its value
     * 
     */
    @Import(name="statusReason", required=true)
    private Output<Either<String,StatusReason>> statusReason;

    public Output<Either<String,StatusReason>> statusReason() {
        return this.statusReason;
    }

    private JitNetworkAccessRequestPortArgs() {}

    private JitNetworkAccessRequestPortArgs(JitNetworkAccessRequestPortArgs $) {
        this.allowedSourceAddressPrefix = $.allowedSourceAddressPrefix;
        this.allowedSourceAddressPrefixes = $.allowedSourceAddressPrefixes;
        this.endTimeUtc = $.endTimeUtc;
        this.mappedPort = $.mappedPort;
        this.number = $.number;
        this.status = $.status;
        this.statusReason = $.statusReason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JitNetworkAccessRequestPortArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JitNetworkAccessRequestPortArgs $;

        public Builder() {
            $ = new JitNetworkAccessRequestPortArgs();
        }

        public Builder(JitNetworkAccessRequestPortArgs defaults) {
            $ = new JitNetworkAccessRequestPortArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedSourceAddressPrefix(@Nullable Output<String> allowedSourceAddressPrefix) {
            $.allowedSourceAddressPrefix = allowedSourceAddressPrefix;
            return this;
        }

        public Builder allowedSourceAddressPrefix(String allowedSourceAddressPrefix) {
            return allowedSourceAddressPrefix(Output.of(allowedSourceAddressPrefix));
        }

        public Builder allowedSourceAddressPrefixes(@Nullable Output<List<String>> allowedSourceAddressPrefixes) {
            $.allowedSourceAddressPrefixes = allowedSourceAddressPrefixes;
            return this;
        }

        public Builder allowedSourceAddressPrefixes(List<String> allowedSourceAddressPrefixes) {
            return allowedSourceAddressPrefixes(Output.of(allowedSourceAddressPrefixes));
        }

        public Builder allowedSourceAddressPrefixes(String... allowedSourceAddressPrefixes) {
            return allowedSourceAddressPrefixes(List.of(allowedSourceAddressPrefixes));
        }

        public Builder endTimeUtc(Output<String> endTimeUtc) {
            $.endTimeUtc = endTimeUtc;
            return this;
        }

        public Builder endTimeUtc(String endTimeUtc) {
            return endTimeUtc(Output.of(endTimeUtc));
        }

        public Builder mappedPort(@Nullable Output<Integer> mappedPort) {
            $.mappedPort = mappedPort;
            return this;
        }

        public Builder mappedPort(Integer mappedPort) {
            return mappedPort(Output.of(mappedPort));
        }

        public Builder number(Output<Integer> number) {
            $.number = number;
            return this;
        }

        public Builder number(Integer number) {
            return number(Output.of(number));
        }

        public Builder status(Output<Either<String,Status>> status) {
            $.status = status;
            return this;
        }

        public Builder status(Either<String,Status> status) {
            return status(Output.of(status));
        }

        public Builder statusReason(Output<Either<String,StatusReason>> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        public Builder statusReason(Either<String,StatusReason> statusReason) {
            return statusReason(Output.of(statusReason));
        }

        public JitNetworkAccessRequestPortArgs build() {
            $.endTimeUtc = Objects.requireNonNull($.endTimeUtc, "expected parameter 'endTimeUtc' to be non-null");
            $.number = Objects.requireNonNull($.number, "expected parameter 'number' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.statusReason = Objects.requireNonNull($.statusReason, "expected parameter 'statusReason' to be non-null");
            return $;
        }
    }

}
