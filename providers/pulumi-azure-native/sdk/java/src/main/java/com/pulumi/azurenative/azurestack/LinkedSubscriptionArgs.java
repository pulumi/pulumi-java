// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurestack;

import com.pulumi.azurenative.azurestack.enums.Location;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinkedSubscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinkedSubscriptionArgs Empty = new LinkedSubscriptionArgs();

    /**
     * The identifier associated with the device subscription.
     * 
     */
    @Import(name="linkedSubscriptionId", required=true)
    private Output<String> linkedSubscriptionId;

    /**
     * @return The identifier associated with the device subscription.
     * 
     */
    public Output<String> linkedSubscriptionId() {
        return this.linkedSubscriptionId;
    }

    /**
     * Name of the Linked Subscription resource.
     * 
     */
    @Import(name="linkedSubscriptionName")
    private @Nullable Output<String> linkedSubscriptionName;

    /**
     * @return Name of the Linked Subscription resource.
     * 
     */
    public Optional<Output<String>> linkedSubscriptionName() {
        return Optional.ofNullable(this.linkedSubscriptionName);
    }

    /**
     * Location of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<Either<String,Location>> location;

    /**
     * @return Location of the resource.
     * 
     */
    public Optional<Output<Either<String,Location>>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The identifier associated with the device registration.
     * 
     */
    @Import(name="registrationResourceId", required=true)
    private Output<String> registrationResourceId;

    /**
     * @return The identifier associated with the device registration.
     * 
     */
    public Output<String> registrationResourceId() {
        return this.registrationResourceId;
    }

    /**
     * Name of the resource group.
     * 
     */
    @Import(name="resourceGroup", required=true)
    private Output<String> resourceGroup;

    /**
     * @return Name of the resource group.
     * 
     */
    public Output<String> resourceGroup() {
        return this.resourceGroup;
    }

    private LinkedSubscriptionArgs() {}

    private LinkedSubscriptionArgs(LinkedSubscriptionArgs $) {
        this.linkedSubscriptionId = $.linkedSubscriptionId;
        this.linkedSubscriptionName = $.linkedSubscriptionName;
        this.location = $.location;
        this.registrationResourceId = $.registrationResourceId;
        this.resourceGroup = $.resourceGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinkedSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinkedSubscriptionArgs $;

        public Builder() {
            $ = new LinkedSubscriptionArgs();
        }

        public Builder(LinkedSubscriptionArgs defaults) {
            $ = new LinkedSubscriptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param linkedSubscriptionId The identifier associated with the device subscription.
         * 
         * @return builder
         * 
         */
        public Builder linkedSubscriptionId(Output<String> linkedSubscriptionId) {
            $.linkedSubscriptionId = linkedSubscriptionId;
            return this;
        }

        /**
         * @param linkedSubscriptionId The identifier associated with the device subscription.
         * 
         * @return builder
         * 
         */
        public Builder linkedSubscriptionId(String linkedSubscriptionId) {
            return linkedSubscriptionId(Output.of(linkedSubscriptionId));
        }

        /**
         * @param linkedSubscriptionName Name of the Linked Subscription resource.
         * 
         * @return builder
         * 
         */
        public Builder linkedSubscriptionName(@Nullable Output<String> linkedSubscriptionName) {
            $.linkedSubscriptionName = linkedSubscriptionName;
            return this;
        }

        /**
         * @param linkedSubscriptionName Name of the Linked Subscription resource.
         * 
         * @return builder
         * 
         */
        public Builder linkedSubscriptionName(String linkedSubscriptionName) {
            return linkedSubscriptionName(Output.of(linkedSubscriptionName));
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<Either<String,Location>> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(Either<String,Location> location) {
            return location(Output.of(location));
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Either.ofLeft(location));
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(Location location) {
            return location(Either.ofRight(location));
        }

        /**
         * @param registrationResourceId The identifier associated with the device registration.
         * 
         * @return builder
         * 
         */
        public Builder registrationResourceId(Output<String> registrationResourceId) {
            $.registrationResourceId = registrationResourceId;
            return this;
        }

        /**
         * @param registrationResourceId The identifier associated with the device registration.
         * 
         * @return builder
         * 
         */
        public Builder registrationResourceId(String registrationResourceId) {
            return registrationResourceId(Output.of(registrationResourceId));
        }

        /**
         * @param resourceGroup Name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(Output<String> resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceGroup Name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(String resourceGroup) {
            return resourceGroup(Output.of(resourceGroup));
        }

        public LinkedSubscriptionArgs build() {
            $.linkedSubscriptionId = Objects.requireNonNull($.linkedSubscriptionId, "expected parameter 'linkedSubscriptionId' to be non-null");
            $.registrationResourceId = Objects.requireNonNull($.registrationResourceId, "expected parameter 'registrationResourceId' to be non-null");
            $.resourceGroup = Objects.requireNonNull($.resourceGroup, "expected parameter 'resourceGroup' to be non-null");
            return $;
        }
    }

}
