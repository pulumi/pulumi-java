// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app.outputs;

import com.pulumi.azurenative.app.outputs.DefaultAuthorizationPolicyResponse;
import com.pulumi.azurenative.app.outputs.JwtClaimChecksResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AzureActiveDirectoryValidationResponse {
    /**
     * @return The list of audiences that can make successful authentication/authorization requests.
     * 
     */
    private final @Nullable List<String> allowedAudiences;
    /**
     * @return The configuration settings of the default authorization policy.
     * 
     */
    private final @Nullable DefaultAuthorizationPolicyResponse defaultAuthorizationPolicy;
    /**
     * @return The configuration settings of the checks that should be made while validating the JWT Claims.
     * 
     */
    private final @Nullable JwtClaimChecksResponse jwtClaimChecks;

    @CustomType.Constructor
    private AzureActiveDirectoryValidationResponse(
        @CustomType.Parameter("allowedAudiences") @Nullable List<String> allowedAudiences,
        @CustomType.Parameter("defaultAuthorizationPolicy") @Nullable DefaultAuthorizationPolicyResponse defaultAuthorizationPolicy,
        @CustomType.Parameter("jwtClaimChecks") @Nullable JwtClaimChecksResponse jwtClaimChecks) {
        this.allowedAudiences = allowedAudiences;
        this.defaultAuthorizationPolicy = defaultAuthorizationPolicy;
        this.jwtClaimChecks = jwtClaimChecks;
    }

    /**
     * @return The list of audiences that can make successful authentication/authorization requests.
     * 
     */
    public List<String> allowedAudiences() {
        return this.allowedAudiences == null ? List.of() : this.allowedAudiences;
    }
    /**
     * @return The configuration settings of the default authorization policy.
     * 
     */
    public Optional<DefaultAuthorizationPolicyResponse> defaultAuthorizationPolicy() {
        return Optional.ofNullable(this.defaultAuthorizationPolicy);
    }
    /**
     * @return The configuration settings of the checks that should be made while validating the JWT Claims.
     * 
     */
    public Optional<JwtClaimChecksResponse> jwtClaimChecks() {
        return Optional.ofNullable(this.jwtClaimChecks);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureActiveDirectoryValidationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> allowedAudiences;
        private @Nullable DefaultAuthorizationPolicyResponse defaultAuthorizationPolicy;
        private @Nullable JwtClaimChecksResponse jwtClaimChecks;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureActiveDirectoryValidationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedAudiences = defaults.allowedAudiences;
    	      this.defaultAuthorizationPolicy = defaults.defaultAuthorizationPolicy;
    	      this.jwtClaimChecks = defaults.jwtClaimChecks;
        }

        public Builder allowedAudiences(@Nullable List<String> allowedAudiences) {
            this.allowedAudiences = allowedAudiences;
            return this;
        }
        public Builder allowedAudiences(String... allowedAudiences) {
            return allowedAudiences(List.of(allowedAudiences));
        }
        public Builder defaultAuthorizationPolicy(@Nullable DefaultAuthorizationPolicyResponse defaultAuthorizationPolicy) {
            this.defaultAuthorizationPolicy = defaultAuthorizationPolicy;
            return this;
        }
        public Builder jwtClaimChecks(@Nullable JwtClaimChecksResponse jwtClaimChecks) {
            this.jwtClaimChecks = jwtClaimChecks;
            return this;
        }        public AzureActiveDirectoryValidationResponse build() {
            return new AzureActiveDirectoryValidationResponse(allowedAudiences, defaultAuthorizationPolicy, jwtClaimChecks);
        }
    }
}
