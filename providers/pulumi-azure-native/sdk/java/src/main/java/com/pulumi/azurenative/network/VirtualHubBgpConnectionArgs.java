// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualHubBgpConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualHubBgpConnectionArgs Empty = new VirtualHubBgpConnectionArgs();

    /**
     * The name of the connection.
     * 
     */
    @Import(name="connectionName")
    private @Nullable Output<String> connectionName;

    public Optional<Output<String>> connectionName() {
        return Optional.ofNullable(this.connectionName);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the connection.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Peer ASN.
     * 
     */
    @Import(name="peerAsn")
    private @Nullable Output<Double> peerAsn;

    public Optional<Output<Double>> peerAsn() {
        return Optional.ofNullable(this.peerAsn);
    }

    /**
     * Peer IP.
     * 
     */
    @Import(name="peerIp")
    private @Nullable Output<String> peerIp;

    public Optional<Output<String>> peerIp() {
        return Optional.ofNullable(this.peerIp);
    }

    /**
     * The resource group name of the VirtualHub.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the VirtualHub.
     * 
     */
    @Import(name="virtualHubName", required=true)
    private Output<String> virtualHubName;

    public Output<String> virtualHubName() {
        return this.virtualHubName;
    }

    private VirtualHubBgpConnectionArgs() {}

    private VirtualHubBgpConnectionArgs(VirtualHubBgpConnectionArgs $) {
        this.connectionName = $.connectionName;
        this.id = $.id;
        this.name = $.name;
        this.peerAsn = $.peerAsn;
        this.peerIp = $.peerIp;
        this.resourceGroupName = $.resourceGroupName;
        this.virtualHubName = $.virtualHubName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualHubBgpConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualHubBgpConnectionArgs $;

        public Builder() {
            $ = new VirtualHubBgpConnectionArgs();
        }

        public Builder(VirtualHubBgpConnectionArgs defaults) {
            $ = new VirtualHubBgpConnectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectionName(@Nullable Output<String> connectionName) {
            $.connectionName = connectionName;
            return this;
        }

        public Builder connectionName(String connectionName) {
            return connectionName(Output.of(connectionName));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder peerAsn(@Nullable Output<Double> peerAsn) {
            $.peerAsn = peerAsn;
            return this;
        }

        public Builder peerAsn(Double peerAsn) {
            return peerAsn(Output.of(peerAsn));
        }

        public Builder peerIp(@Nullable Output<String> peerIp) {
            $.peerIp = peerIp;
            return this;
        }

        public Builder peerIp(String peerIp) {
            return peerIp(Output.of(peerIp));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder virtualHubName(Output<String> virtualHubName) {
            $.virtualHubName = virtualHubName;
            return this;
        }

        public Builder virtualHubName(String virtualHubName) {
            return virtualHubName(Output.of(virtualHubName));
        }

        public VirtualHubBgpConnectionArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.virtualHubName = Objects.requireNonNull($.virtualHubName, "expected parameter 'virtualHubName' to be non-null");
            return $;
        }
    }

}
