// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hdinsight.inputs;

import com.pulumi.azurenative.hdinsight.inputs.AutoscaleResponse;
import com.pulumi.azurenative.hdinsight.inputs.DataDisksGroupsResponse;
import com.pulumi.azurenative.hdinsight.inputs.HardwareProfileResponse;
import com.pulumi.azurenative.hdinsight.inputs.OsProfileResponse;
import com.pulumi.azurenative.hdinsight.inputs.ScriptActionResponse;
import com.pulumi.azurenative.hdinsight.inputs.VirtualNetworkProfileResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes a role on the cluster.
 * 
 */
public final class RoleResponse extends com.pulumi.resources.InvokeArgs {

    public static final RoleResponse Empty = new RoleResponse();

    /**
     * The autoscale configurations.
     * 
     */
    @Import(name="autoscaleConfiguration")
    private @Nullable AutoscaleResponse autoscaleConfiguration;

    /**
     * @return The autoscale configurations.
     * 
     */
    public Optional<AutoscaleResponse> autoscaleConfiguration() {
        return Optional.ofNullable(this.autoscaleConfiguration);
    }

    /**
     * The data disks groups for the role.
     * 
     */
    @Import(name="dataDisksGroups")
    private @Nullable List<DataDisksGroupsResponse> dataDisksGroups;

    /**
     * @return The data disks groups for the role.
     * 
     */
    public Optional<List<DataDisksGroupsResponse>> dataDisksGroups() {
        return Optional.ofNullable(this.dataDisksGroups);
    }

    /**
     * Indicates whether encrypt the data disks.
     * 
     */
    @Import(name="encryptDataDisks")
    private @Nullable Boolean encryptDataDisks;

    /**
     * @return Indicates whether encrypt the data disks.
     * 
     */
    public Optional<Boolean> encryptDataDisks() {
        return Optional.ofNullable(this.encryptDataDisks);
    }

    /**
     * The hardware profile.
     * 
     */
    @Import(name="hardwareProfile")
    private @Nullable HardwareProfileResponse hardwareProfile;

    /**
     * @return The hardware profile.
     * 
     */
    public Optional<HardwareProfileResponse> hardwareProfile() {
        return Optional.ofNullable(this.hardwareProfile);
    }

    /**
     * The minimum instance count of the cluster.
     * 
     */
    @Import(name="minInstanceCount")
    private @Nullable Integer minInstanceCount;

    /**
     * @return The minimum instance count of the cluster.
     * 
     */
    public Optional<Integer> minInstanceCount() {
        return Optional.ofNullable(this.minInstanceCount);
    }

    /**
     * The name of the role.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the role.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The operating system profile.
     * 
     */
    @Import(name="osProfile")
    private @Nullable OsProfileResponse osProfile;

    /**
     * @return The operating system profile.
     * 
     */
    public Optional<OsProfileResponse> osProfile() {
        return Optional.ofNullable(this.osProfile);
    }

    /**
     * The list of script actions on the role.
     * 
     */
    @Import(name="scriptActions")
    private @Nullable List<ScriptActionResponse> scriptActions;

    /**
     * @return The list of script actions on the role.
     * 
     */
    public Optional<List<ScriptActionResponse>> scriptActions() {
        return Optional.ofNullable(this.scriptActions);
    }

    /**
     * The instance count of the cluster.
     * 
     */
    @Import(name="targetInstanceCount")
    private @Nullable Integer targetInstanceCount;

    /**
     * @return The instance count of the cluster.
     * 
     */
    public Optional<Integer> targetInstanceCount() {
        return Optional.ofNullable(this.targetInstanceCount);
    }

    /**
     * The name of the virtual machine group.
     * 
     */
    @Import(name="vMGroupName")
    private @Nullable String vMGroupName;

    /**
     * @return The name of the virtual machine group.
     * 
     */
    public Optional<String> vMGroupName() {
        return Optional.ofNullable(this.vMGroupName);
    }

    /**
     * The virtual network profile.
     * 
     */
    @Import(name="virtualNetworkProfile")
    private @Nullable VirtualNetworkProfileResponse virtualNetworkProfile;

    /**
     * @return The virtual network profile.
     * 
     */
    public Optional<VirtualNetworkProfileResponse> virtualNetworkProfile() {
        return Optional.ofNullable(this.virtualNetworkProfile);
    }

    private RoleResponse() {}

    private RoleResponse(RoleResponse $) {
        this.autoscaleConfiguration = $.autoscaleConfiguration;
        this.dataDisksGroups = $.dataDisksGroups;
        this.encryptDataDisks = $.encryptDataDisks;
        this.hardwareProfile = $.hardwareProfile;
        this.minInstanceCount = $.minInstanceCount;
        this.name = $.name;
        this.osProfile = $.osProfile;
        this.scriptActions = $.scriptActions;
        this.targetInstanceCount = $.targetInstanceCount;
        this.vMGroupName = $.vMGroupName;
        this.virtualNetworkProfile = $.virtualNetworkProfile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleResponse $;

        public Builder() {
            $ = new RoleResponse();
        }

        public Builder(RoleResponse defaults) {
            $ = new RoleResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscaleConfiguration The autoscale configurations.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleConfiguration(@Nullable AutoscaleResponse autoscaleConfiguration) {
            $.autoscaleConfiguration = autoscaleConfiguration;
            return this;
        }

        /**
         * @param dataDisksGroups The data disks groups for the role.
         * 
         * @return builder
         * 
         */
        public Builder dataDisksGroups(@Nullable List<DataDisksGroupsResponse> dataDisksGroups) {
            $.dataDisksGroups = dataDisksGroups;
            return this;
        }

        /**
         * @param dataDisksGroups The data disks groups for the role.
         * 
         * @return builder
         * 
         */
        public Builder dataDisksGroups(DataDisksGroupsResponse... dataDisksGroups) {
            return dataDisksGroups(List.of(dataDisksGroups));
        }

        /**
         * @param encryptDataDisks Indicates whether encrypt the data disks.
         * 
         * @return builder
         * 
         */
        public Builder encryptDataDisks(@Nullable Boolean encryptDataDisks) {
            $.encryptDataDisks = encryptDataDisks;
            return this;
        }

        /**
         * @param hardwareProfile The hardware profile.
         * 
         * @return builder
         * 
         */
        public Builder hardwareProfile(@Nullable HardwareProfileResponse hardwareProfile) {
            $.hardwareProfile = hardwareProfile;
            return this;
        }

        /**
         * @param minInstanceCount The minimum instance count of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder minInstanceCount(@Nullable Integer minInstanceCount) {
            $.minInstanceCount = minInstanceCount;
            return this;
        }

        /**
         * @param name The name of the role.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param osProfile The operating system profile.
         * 
         * @return builder
         * 
         */
        public Builder osProfile(@Nullable OsProfileResponse osProfile) {
            $.osProfile = osProfile;
            return this;
        }

        /**
         * @param scriptActions The list of script actions on the role.
         * 
         * @return builder
         * 
         */
        public Builder scriptActions(@Nullable List<ScriptActionResponse> scriptActions) {
            $.scriptActions = scriptActions;
            return this;
        }

        /**
         * @param scriptActions The list of script actions on the role.
         * 
         * @return builder
         * 
         */
        public Builder scriptActions(ScriptActionResponse... scriptActions) {
            return scriptActions(List.of(scriptActions));
        }

        /**
         * @param targetInstanceCount The instance count of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder targetInstanceCount(@Nullable Integer targetInstanceCount) {
            $.targetInstanceCount = targetInstanceCount;
            return this;
        }

        /**
         * @param vMGroupName The name of the virtual machine group.
         * 
         * @return builder
         * 
         */
        public Builder vMGroupName(@Nullable String vMGroupName) {
            $.vMGroupName = vMGroupName;
            return this;
        }

        /**
         * @param virtualNetworkProfile The virtual network profile.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkProfile(@Nullable VirtualNetworkProfileResponse virtualNetworkProfile) {
            $.virtualNetworkProfile = virtualNetworkProfile;
            return this;
        }

        public RoleResponse build() {
            $.encryptDataDisks = Codegen.booleanProp("encryptDataDisks").arg($.encryptDataDisks).def(false).getNullable();
            return $;
        }
    }

}
