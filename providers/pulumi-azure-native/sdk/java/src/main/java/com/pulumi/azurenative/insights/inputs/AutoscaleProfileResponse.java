// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.azurenative.insights.inputs.RecurrenceResponse;
import com.pulumi.azurenative.insights.inputs.ScaleCapacityResponse;
import com.pulumi.azurenative.insights.inputs.ScaleRuleResponse;
import com.pulumi.azurenative.insights.inputs.TimeWindowResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Autoscale profile.
 * 
 */
public final class AutoscaleProfileResponse extends com.pulumi.resources.InvokeArgs {

    public static final AutoscaleProfileResponse Empty = new AutoscaleProfileResponse();

    /**
     * the number of instances that can be used during this profile.
     * 
     */
    @Import(name="capacity", required=true)
      private final ScaleCapacityResponse capacity;

    public ScaleCapacityResponse capacity() {
        return this.capacity;
    }

    /**
     * the specific date-time for the profile. This element is not used if the Recurrence element is used.
     * 
     */
    @Import(name="fixedDate")
      private final @Nullable TimeWindowResponse fixedDate;

    public Optional<TimeWindowResponse> fixedDate() {
        return this.fixedDate == null ? Optional.empty() : Optional.ofNullable(this.fixedDate);
    }

    /**
     * the name of the profile.
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String name() {
        return this.name;
    }

    /**
     * the repeating times at which this profile begins. This element is not used if the FixedDate element is used.
     * 
     */
    @Import(name="recurrence")
      private final @Nullable RecurrenceResponse recurrence;

    public Optional<RecurrenceResponse> recurrence() {
        return this.recurrence == null ? Optional.empty() : Optional.ofNullable(this.recurrence);
    }

    /**
     * the collection of rules that provide the triggers and parameters for the scaling action. A maximum of 10 rules can be specified.
     * 
     */
    @Import(name="rules", required=true)
      private final List<ScaleRuleResponse> rules;

    public List<ScaleRuleResponse> rules() {
        return this.rules;
    }

    public AutoscaleProfileResponse(
        ScaleCapacityResponse capacity,
        @Nullable TimeWindowResponse fixedDate,
        String name,
        @Nullable RecurrenceResponse recurrence,
        List<ScaleRuleResponse> rules) {
        this.capacity = Objects.requireNonNull(capacity, "expected parameter 'capacity' to be non-null");
        this.fixedDate = fixedDate;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.recurrence = recurrence;
        this.rules = Objects.requireNonNull(rules, "expected parameter 'rules' to be non-null");
    }

    private AutoscaleProfileResponse() {
        this.capacity = null;
        this.fixedDate = null;
        this.name = null;
        this.recurrence = null;
        this.rules = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoscaleProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScaleCapacityResponse capacity;
        private @Nullable TimeWindowResponse fixedDate;
        private String name;
        private @Nullable RecurrenceResponse recurrence;
        private List<ScaleRuleResponse> rules;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoscaleProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacity = defaults.capacity;
    	      this.fixedDate = defaults.fixedDate;
    	      this.name = defaults.name;
    	      this.recurrence = defaults.recurrence;
    	      this.rules = defaults.rules;
        }

        public Builder capacity(ScaleCapacityResponse capacity) {
            this.capacity = Objects.requireNonNull(capacity);
            return this;
        }
        public Builder fixedDate(@Nullable TimeWindowResponse fixedDate) {
            this.fixedDate = fixedDate;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder recurrence(@Nullable RecurrenceResponse recurrence) {
            this.recurrence = recurrence;
            return this;
        }
        public Builder rules(List<ScaleRuleResponse> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(ScaleRuleResponse... rules) {
            return rules(List.of(rules));
        }        public AutoscaleProfileResponse build() {
            return new AutoscaleProfileResponse(capacity, fixedDate, name, recurrence, rules);
        }
    }
}
