// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetGalleryApplicationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGalleryApplicationArgs Empty = new GetGalleryApplicationArgs();

    /**
     * The name of the gallery Application Definition to be retrieved.
     * 
     */
    @Import(name="galleryApplicationName", required=true)
    private Output<String> galleryApplicationName;

    /**
     * @return The name of the gallery Application Definition to be retrieved.
     * 
     */
    public Output<String> galleryApplicationName() {
        return this.galleryApplicationName;
    }

    /**
     * The name of the Shared Application Gallery from which the Application Definitions are to be retrieved.
     * 
     */
    @Import(name="galleryName", required=true)
    private Output<String> galleryName;

    /**
     * @return The name of the Shared Application Gallery from which the Application Definitions are to be retrieved.
     * 
     */
    public Output<String> galleryName() {
        return this.galleryName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetGalleryApplicationArgs() {}

    private GetGalleryApplicationArgs(GetGalleryApplicationArgs $) {
        this.galleryApplicationName = $.galleryApplicationName;
        this.galleryName = $.galleryName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGalleryApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGalleryApplicationArgs $;

        public Builder() {
            $ = new GetGalleryApplicationArgs();
        }

        public Builder(GetGalleryApplicationArgs defaults) {
            $ = new GetGalleryApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.
         * 
         * @return builder
         * 
         */
        public Builder galleryApplicationName(Output<String> galleryApplicationName) {
            $.galleryApplicationName = galleryApplicationName;
            return this;
        }

        /**
         * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.
         * 
         * @return builder
         * 
         */
        public Builder galleryApplicationName(String galleryApplicationName) {
            return galleryApplicationName(Output.of(galleryApplicationName));
        }

        /**
         * @param galleryName The name of the Shared Application Gallery from which the Application Definitions are to be retrieved.
         * 
         * @return builder
         * 
         */
        public Builder galleryName(Output<String> galleryName) {
            $.galleryName = galleryName;
            return this;
        }

        /**
         * @param galleryName The name of the Shared Application Gallery from which the Application Definitions are to be retrieved.
         * 
         * @return builder
         * 
         */
        public Builder galleryName(String galleryName) {
            return galleryName(Output.of(galleryName));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetGalleryApplicationArgs build() {
            $.galleryApplicationName = Objects.requireNonNull($.galleryApplicationName, "expected parameter 'galleryApplicationName' to be non-null");
            $.galleryName = Objects.requireNonNull($.galleryName, "expected parameter 'galleryName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
