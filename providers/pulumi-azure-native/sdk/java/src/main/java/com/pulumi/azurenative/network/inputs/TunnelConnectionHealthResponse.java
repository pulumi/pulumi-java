// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * VirtualNetworkGatewayConnection properties.
 * 
 */
public final class TunnelConnectionHealthResponse extends com.pulumi.resources.InvokeArgs {

    public static final TunnelConnectionHealthResponse Empty = new TunnelConnectionHealthResponse();

    /**
     * Virtual Network Gateway connection status.
     * 
     */
    @Import(name="connectionStatus", required=true)
    private String connectionStatus;

    public String connectionStatus() {
        return this.connectionStatus;
    }

    /**
     * The Egress Bytes Transferred in this connection.
     * 
     */
    @Import(name="egressBytesTransferred", required=true)
    private Double egressBytesTransferred;

    public Double egressBytesTransferred() {
        return this.egressBytesTransferred;
    }

    /**
     * The Ingress Bytes Transferred in this connection.
     * 
     */
    @Import(name="ingressBytesTransferred", required=true)
    private Double ingressBytesTransferred;

    public Double ingressBytesTransferred() {
        return this.ingressBytesTransferred;
    }

    /**
     * The time at which connection was established in Utc format.
     * 
     */
    @Import(name="lastConnectionEstablishedUtcTime", required=true)
    private String lastConnectionEstablishedUtcTime;

    public String lastConnectionEstablishedUtcTime() {
        return this.lastConnectionEstablishedUtcTime;
    }

    /**
     * Tunnel name.
     * 
     */
    @Import(name="tunnel", required=true)
    private String tunnel;

    public String tunnel() {
        return this.tunnel;
    }

    private TunnelConnectionHealthResponse() {}

    private TunnelConnectionHealthResponse(TunnelConnectionHealthResponse $) {
        this.connectionStatus = $.connectionStatus;
        this.egressBytesTransferred = $.egressBytesTransferred;
        this.ingressBytesTransferred = $.ingressBytesTransferred;
        this.lastConnectionEstablishedUtcTime = $.lastConnectionEstablishedUtcTime;
        this.tunnel = $.tunnel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TunnelConnectionHealthResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TunnelConnectionHealthResponse $;

        public Builder() {
            $ = new TunnelConnectionHealthResponse();
        }

        public Builder(TunnelConnectionHealthResponse defaults) {
            $ = new TunnelConnectionHealthResponse(Objects.requireNonNull(defaults));
        }

        public Builder connectionStatus(String connectionStatus) {
            $.connectionStatus = connectionStatus;
            return this;
        }

        public Builder egressBytesTransferred(Double egressBytesTransferred) {
            $.egressBytesTransferred = egressBytesTransferred;
            return this;
        }

        public Builder ingressBytesTransferred(Double ingressBytesTransferred) {
            $.ingressBytesTransferred = ingressBytesTransferred;
            return this;
        }

        public Builder lastConnectionEstablishedUtcTime(String lastConnectionEstablishedUtcTime) {
            $.lastConnectionEstablishedUtcTime = lastConnectionEstablishedUtcTime;
            return this;
        }

        public Builder tunnel(String tunnel) {
            $.tunnel = tunnel;
            return this;
        }

        public TunnelConnectionHealthResponse build() {
            $.connectionStatus = Objects.requireNonNull($.connectionStatus, "expected parameter 'connectionStatus' to be non-null");
            $.egressBytesTransferred = Objects.requireNonNull($.egressBytesTransferred, "expected parameter 'egressBytesTransferred' to be non-null");
            $.ingressBytesTransferred = Objects.requireNonNull($.ingressBytesTransferred, "expected parameter 'ingressBytesTransferred' to be non-null");
            $.lastConnectionEstablishedUtcTime = Objects.requireNonNull($.lastConnectionEstablishedUtcTime, "expected parameter 'lastConnectionEstablishedUtcTime' to be non-null");
            $.tunnel = Objects.requireNonNull($.tunnel, "expected parameter 'tunnel' to be non-null");
            return $;
        }
    }

}
