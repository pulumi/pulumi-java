// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Reference to sinks in DiagnosticsDescription.
 * 
 */
public final class DiagnosticsRefResponse extends com.pulumi.resources.InvokeArgs {

    public static final DiagnosticsRefResponse Empty = new DiagnosticsRefResponse();

    /**
     * Status of whether or not sinks are enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Boolean enabled;

    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
     * 
     */
    @Import(name="sinkRefs")
    private @Nullable List<String> sinkRefs;

    public Optional<List<String>> sinkRefs() {
        return Optional.ofNullable(this.sinkRefs);
    }

    private DiagnosticsRefResponse() {}

    private DiagnosticsRefResponse(DiagnosticsRefResponse $) {
        this.enabled = $.enabled;
        this.sinkRefs = $.sinkRefs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiagnosticsRefResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiagnosticsRefResponse $;

        public Builder() {
            $ = new DiagnosticsRefResponse();
        }

        public Builder(DiagnosticsRefResponse defaults) {
            $ = new DiagnosticsRefResponse(Objects.requireNonNull(defaults));
        }

        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder sinkRefs(@Nullable List<String> sinkRefs) {
            $.sinkRefs = sinkRefs;
            return this;
        }

        public Builder sinkRefs(String... sinkRefs) {
            return sinkRefs(List.of(sinkRefs));
        }

        public DiagnosticsRefResponse build() {
            return $;
        }
    }

}
