// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetServerVulnerabilityAssessmentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServerVulnerabilityAssessmentPlainArgs Empty = new GetServerVulnerabilityAssessmentPlainArgs();

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the resource.
     * 
     */
    @Import(name="resourceName", required=true)
    private String resourceName;

    /**
     * @return Name of the resource.
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }

    /**
     * The Namespace of the resource.
     * 
     */
    @Import(name="resourceNamespace", required=true)
    private String resourceNamespace;

    /**
     * @return The Namespace of the resource.
     * 
     */
    public String resourceNamespace() {
        return this.resourceNamespace;
    }

    /**
     * The type of the resource.
     * 
     */
    @Import(name="resourceType", required=true)
    private String resourceType;

    /**
     * @return The type of the resource.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * ServerVulnerabilityAssessment status. only a &#39;default&#39; value is supported.
     * 
     */
    @Import(name="serverVulnerabilityAssessment", required=true)
    private String serverVulnerabilityAssessment;

    /**
     * @return ServerVulnerabilityAssessment status. only a &#39;default&#39; value is supported.
     * 
     */
    public String serverVulnerabilityAssessment() {
        return this.serverVulnerabilityAssessment;
    }

    private GetServerVulnerabilityAssessmentPlainArgs() {}

    private GetServerVulnerabilityAssessmentPlainArgs(GetServerVulnerabilityAssessmentPlainArgs $) {
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
        this.resourceNamespace = $.resourceNamespace;
        this.resourceType = $.resourceType;
        this.serverVulnerabilityAssessment = $.serverVulnerabilityAssessment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServerVulnerabilityAssessmentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServerVulnerabilityAssessmentPlainArgs $;

        public Builder() {
            $ = new GetServerVulnerabilityAssessmentPlainArgs();
        }

        public Builder(GetServerVulnerabilityAssessmentPlainArgs defaults) {
            $ = new GetServerVulnerabilityAssessmentPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceName Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param resourceNamespace The Namespace of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceNamespace(String resourceNamespace) {
            $.resourceNamespace = resourceNamespace;
            return this;
        }

        /**
         * @param resourceType The type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param serverVulnerabilityAssessment ServerVulnerabilityAssessment status. only a &#39;default&#39; value is supported.
         * 
         * @return builder
         * 
         */
        public Builder serverVulnerabilityAssessment(String serverVulnerabilityAssessment) {
            $.serverVulnerabilityAssessment = serverVulnerabilityAssessment;
            return this;
        }

        public GetServerVulnerabilityAssessmentPlainArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceName = Objects.requireNonNull($.resourceName, "expected parameter 'resourceName' to be non-null");
            $.resourceNamespace = Objects.requireNonNull($.resourceNamespace, "expected parameter 'resourceNamespace' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            $.serverVulnerabilityAssessment = Objects.requireNonNull($.serverVulnerabilityAssessment, "expected parameter 'serverVulnerabilityAssessment' to be non-null");
            return $;
        }
    }

}
