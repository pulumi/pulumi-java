// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.enums.RetentionScheduleFormat;
import com.pulumi.azurenative.recoveryservices.inputs.DailyRetentionFormatArgs;
import com.pulumi.azurenative.recoveryservices.inputs.RetentionDurationArgs;
import com.pulumi.azurenative.recoveryservices.inputs.WeeklyRetentionFormatArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Monthly retention schedule.
 * 
 */
public final class MonthlyRetentionScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonthlyRetentionScheduleArgs Empty = new MonthlyRetentionScheduleArgs();

    /**
     * Retention duration of retention Policy.
     * 
     */
    @Import(name="retentionDuration")
    private @Nullable Output<RetentionDurationArgs> retentionDuration;

    /**
     * @return Retention duration of retention Policy.
     * 
     */
    public Optional<Output<RetentionDurationArgs>> retentionDuration() {
        return Optional.ofNullable(this.retentionDuration);
    }

    /**
     * Daily retention format for monthly retention policy.
     * 
     */
    @Import(name="retentionScheduleDaily")
    private @Nullable Output<DailyRetentionFormatArgs> retentionScheduleDaily;

    /**
     * @return Daily retention format for monthly retention policy.
     * 
     */
    public Optional<Output<DailyRetentionFormatArgs>> retentionScheduleDaily() {
        return Optional.ofNullable(this.retentionScheduleDaily);
    }

    /**
     * Retention schedule format type for monthly retention policy.
     * 
     */
    @Import(name="retentionScheduleFormatType")
    private @Nullable Output<Either<String,RetentionScheduleFormat>> retentionScheduleFormatType;

    /**
     * @return Retention schedule format type for monthly retention policy.
     * 
     */
    public Optional<Output<Either<String,RetentionScheduleFormat>>> retentionScheduleFormatType() {
        return Optional.ofNullable(this.retentionScheduleFormatType);
    }

    /**
     * Weekly retention format for monthly retention policy.
     * 
     */
    @Import(name="retentionScheduleWeekly")
    private @Nullable Output<WeeklyRetentionFormatArgs> retentionScheduleWeekly;

    /**
     * @return Weekly retention format for monthly retention policy.
     * 
     */
    public Optional<Output<WeeklyRetentionFormatArgs>> retentionScheduleWeekly() {
        return Optional.ofNullable(this.retentionScheduleWeekly);
    }

    /**
     * Retention times of retention policy.
     * 
     */
    @Import(name="retentionTimes")
    private @Nullable Output<List<String>> retentionTimes;

    /**
     * @return Retention times of retention policy.
     * 
     */
    public Optional<Output<List<String>>> retentionTimes() {
        return Optional.ofNullable(this.retentionTimes);
    }

    private MonthlyRetentionScheduleArgs() {}

    private MonthlyRetentionScheduleArgs(MonthlyRetentionScheduleArgs $) {
        this.retentionDuration = $.retentionDuration;
        this.retentionScheduleDaily = $.retentionScheduleDaily;
        this.retentionScheduleFormatType = $.retentionScheduleFormatType;
        this.retentionScheduleWeekly = $.retentionScheduleWeekly;
        this.retentionTimes = $.retentionTimes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonthlyRetentionScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonthlyRetentionScheduleArgs $;

        public Builder() {
            $ = new MonthlyRetentionScheduleArgs();
        }

        public Builder(MonthlyRetentionScheduleArgs defaults) {
            $ = new MonthlyRetentionScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param retentionDuration Retention duration of retention Policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionDuration(@Nullable Output<RetentionDurationArgs> retentionDuration) {
            $.retentionDuration = retentionDuration;
            return this;
        }

        /**
         * @param retentionDuration Retention duration of retention Policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionDuration(RetentionDurationArgs retentionDuration) {
            return retentionDuration(Output.of(retentionDuration));
        }

        /**
         * @param retentionScheduleDaily Daily retention format for monthly retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionScheduleDaily(@Nullable Output<DailyRetentionFormatArgs> retentionScheduleDaily) {
            $.retentionScheduleDaily = retentionScheduleDaily;
            return this;
        }

        /**
         * @param retentionScheduleDaily Daily retention format for monthly retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionScheduleDaily(DailyRetentionFormatArgs retentionScheduleDaily) {
            return retentionScheduleDaily(Output.of(retentionScheduleDaily));
        }

        /**
         * @param retentionScheduleFormatType Retention schedule format type for monthly retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionScheduleFormatType(@Nullable Output<Either<String,RetentionScheduleFormat>> retentionScheduleFormatType) {
            $.retentionScheduleFormatType = retentionScheduleFormatType;
            return this;
        }

        /**
         * @param retentionScheduleFormatType Retention schedule format type for monthly retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionScheduleFormatType(Either<String,RetentionScheduleFormat> retentionScheduleFormatType) {
            return retentionScheduleFormatType(Output.of(retentionScheduleFormatType));
        }

        /**
         * @param retentionScheduleFormatType Retention schedule format type for monthly retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionScheduleFormatType(String retentionScheduleFormatType) {
            return retentionScheduleFormatType(Either.ofLeft(retentionScheduleFormatType));
        }

        /**
         * @param retentionScheduleFormatType Retention schedule format type for monthly retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionScheduleFormatType(RetentionScheduleFormat retentionScheduleFormatType) {
            return retentionScheduleFormatType(Either.ofRight(retentionScheduleFormatType));
        }

        /**
         * @param retentionScheduleWeekly Weekly retention format for monthly retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionScheduleWeekly(@Nullable Output<WeeklyRetentionFormatArgs> retentionScheduleWeekly) {
            $.retentionScheduleWeekly = retentionScheduleWeekly;
            return this;
        }

        /**
         * @param retentionScheduleWeekly Weekly retention format for monthly retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionScheduleWeekly(WeeklyRetentionFormatArgs retentionScheduleWeekly) {
            return retentionScheduleWeekly(Output.of(retentionScheduleWeekly));
        }

        /**
         * @param retentionTimes Retention times of retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionTimes(@Nullable Output<List<String>> retentionTimes) {
            $.retentionTimes = retentionTimes;
            return this;
        }

        /**
         * @param retentionTimes Retention times of retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionTimes(List<String> retentionTimes) {
            return retentionTimes(Output.of(retentionTimes));
        }

        /**
         * @param retentionTimes Retention times of retention policy.
         * 
         * @return builder
         * 
         */
        public Builder retentionTimes(String... retentionTimes) {
            return retentionTimes(List.of(retentionTimes));
        }

        public MonthlyRetentionScheduleArgs build() {
            return $;
        }
    }

}
