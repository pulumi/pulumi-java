// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.azurenative.containerregistry.inputs.ActorResponse;
import com.pulumi.azurenative.containerregistry.inputs.RequestResponse;
import com.pulumi.azurenative.containerregistry.inputs.SourceResponse;
import com.pulumi.azurenative.containerregistry.inputs.TargetResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The content of the event request message.
 * 
 */
public final class EventContentResponse extends com.pulumi.resources.InvokeArgs {

    public static final EventContentResponse Empty = new EventContentResponse();

    /**
     * The action that encompasses the provided event.
     * 
     */
    @Import(name="action")
    private @Nullable String action;

    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * The agent that initiated the event. For most situations, this could be from the authorization context of the request.
     * 
     */
    @Import(name="actor")
    private @Nullable ActorResponse actor;

    public Optional<ActorResponse> actor() {
        return Optional.ofNullable(this.actor);
    }

    /**
     * The event ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The request that generated the event.
     * 
     */
    @Import(name="request")
    private @Nullable RequestResponse request;

    public Optional<RequestResponse> request() {
        return Optional.ofNullable(this.request);
    }

    /**
     * The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
     * 
     */
    @Import(name="source")
    private @Nullable SourceResponse source;

    public Optional<SourceResponse> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * The target of the event.
     * 
     */
    @Import(name="target")
    private @Nullable TargetResponse target;

    public Optional<TargetResponse> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * The time at which the event occurred.
     * 
     */
    @Import(name="timestamp")
    private @Nullable String timestamp;

    public Optional<String> timestamp() {
        return Optional.ofNullable(this.timestamp);
    }

    private EventContentResponse() {}

    private EventContentResponse(EventContentResponse $) {
        this.action = $.action;
        this.actor = $.actor;
        this.id = $.id;
        this.request = $.request;
        this.source = $.source;
        this.target = $.target;
        this.timestamp = $.timestamp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventContentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventContentResponse $;

        public Builder() {
            $ = new EventContentResponse();
        }

        public Builder(EventContentResponse defaults) {
            $ = new EventContentResponse(Objects.requireNonNull(defaults));
        }

        public Builder action(@Nullable String action) {
            $.action = action;
            return this;
        }

        public Builder actor(@Nullable ActorResponse actor) {
            $.actor = actor;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder request(@Nullable RequestResponse request) {
            $.request = request;
            return this;
        }

        public Builder source(@Nullable SourceResponse source) {
            $.source = source;
            return this;
        }

        public Builder target(@Nullable TargetResponse target) {
            $.target = target;
            return this;
        }

        public Builder timestamp(@Nullable String timestamp) {
            $.timestamp = timestamp;
            return this;
        }

        public EventContentResponse build() {
            return $;
        }
    }

}
