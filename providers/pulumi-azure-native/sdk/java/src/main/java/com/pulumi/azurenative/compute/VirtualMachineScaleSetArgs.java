// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute;

import com.pulumi.azurenative.compute.enums.OrchestrationMode;
import com.pulumi.azurenative.compute.inputs.AdditionalCapabilitiesArgs;
import com.pulumi.azurenative.compute.inputs.AutomaticRepairsPolicyArgs;
import com.pulumi.azurenative.compute.inputs.ExtendedLocationArgs;
import com.pulumi.azurenative.compute.inputs.PlanArgs;
import com.pulumi.azurenative.compute.inputs.ScaleInPolicyArgs;
import com.pulumi.azurenative.compute.inputs.SkuArgs;
import com.pulumi.azurenative.compute.inputs.SubResourceArgs;
import com.pulumi.azurenative.compute.inputs.UpgradePolicyArgs;
import com.pulumi.azurenative.compute.inputs.VirtualMachineScaleSetIdentityArgs;
import com.pulumi.azurenative.compute.inputs.VirtualMachineScaleSetVMProfileArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualMachineScaleSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineScaleSetArgs Empty = new VirtualMachineScaleSetArgs();

    /**
     * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
     * 
     */
    @Import(name="additionalCapabilities")
    private @Nullable Output<AdditionalCapabilitiesArgs> additionalCapabilities;

    public Optional<Output<AdditionalCapabilitiesArgs>> additionalCapabilities() {
        return Optional.ofNullable(this.additionalCapabilities);
    }

    /**
     * Policy for automatic repairs.
     * 
     */
    @Import(name="automaticRepairsPolicy")
    private @Nullable Output<AutomaticRepairsPolicyArgs> automaticRepairsPolicy;

    public Optional<Output<AutomaticRepairsPolicyArgs>> automaticRepairsPolicy() {
        return Optional.ofNullable(this.automaticRepairsPolicy);
    }

    /**
     * When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
     * 
     */
    @Import(name="doNotRunExtensionsOnOverprovisionedVMs")
    private @Nullable Output<Boolean> doNotRunExtensionsOnOverprovisionedVMs;

    public Optional<Output<Boolean>> doNotRunExtensionsOnOverprovisionedVMs() {
        return Optional.ofNullable(this.doNotRunExtensionsOnOverprovisionedVMs);
    }

    /**
     * The extended location of the Virtual Machine Scale Set.
     * 
     */
    @Import(name="extendedLocation")
    private @Nullable Output<ExtendedLocationArgs> extendedLocation;

    public Optional<Output<ExtendedLocationArgs>> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }

    /**
     * Specifies information about the dedicated host group that the virtual machine scale set resides in. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01.
     * 
     */
    @Import(name="hostGroup")
    private @Nullable Output<SubResourceArgs> hostGroup;

    public Optional<Output<SubResourceArgs>> hostGroup() {
        return Optional.ofNullable(this.hostGroup);
    }

    /**
     * The identity of the virtual machine scale set, if configured.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<VirtualMachineScaleSetIdentityArgs> identity;

    public Optional<Output<VirtualMachineScaleSetIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the orchestration mode for the virtual machine scale set.
     * 
     */
    @Import(name="orchestrationMode")
    private @Nullable Output<Either<String,OrchestrationMode>> orchestrationMode;

    public Optional<Output<Either<String,OrchestrationMode>>> orchestrationMode() {
        return Optional.ofNullable(this.orchestrationMode);
    }

    /**
     * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     * 
     */
    @Import(name="overprovision")
    private @Nullable Output<Boolean> overprovision;

    public Optional<Output<Boolean>> overprovision() {
        return Optional.ofNullable(this.overprovision);
    }

    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started -&gt;**. Enter any required information and then click **Save**.
     * 
     */
    @Import(name="plan")
    private @Nullable Output<PlanArgs> plan;

    public Optional<Output<PlanArgs>> plan() {
        return Optional.ofNullable(this.plan);
    }

    /**
     * Fault Domain count for each placement group.
     * 
     */
    @Import(name="platformFaultDomainCount")
    private @Nullable Output<Integer> platformFaultDomainCount;

    public Optional<Output<Integer>> platformFaultDomainCount() {
        return Optional.ofNullable(this.platformFaultDomainCount);
    }

    /**
     * Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
     * 
     */
    @Import(name="proximityPlacementGroup")
    private @Nullable Output<SubResourceArgs> proximityPlacementGroup;

    public Optional<Output<SubResourceArgs>> proximityPlacementGroup() {
        return Optional.ofNullable(this.proximityPlacementGroup);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
     * 
     */
    @Import(name="scaleInPolicy")
    private @Nullable Output<ScaleInPolicyArgs> scaleInPolicy;

    public Optional<Output<ScaleInPolicyArgs>> scaleInPolicy() {
        return Optional.ofNullable(this.scaleInPolicy);
    }

    /**
     * When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
     * 
     */
    @Import(name="singlePlacementGroup")
    private @Nullable Output<Boolean> singlePlacementGroup;

    public Optional<Output<Boolean>> singlePlacementGroup() {
        return Optional.ofNullable(this.singlePlacementGroup);
    }

    /**
     * The virtual machine scale set sku.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<SkuArgs> sku;

    public Optional<Output<SkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The upgrade policy.
     * 
     */
    @Import(name="upgradePolicy")
    private @Nullable Output<UpgradePolicyArgs> upgradePolicy;

    public Optional<Output<UpgradePolicyArgs>> upgradePolicy() {
        return Optional.ofNullable(this.upgradePolicy);
    }

    /**
     * The virtual machine profile.
     * 
     */
    @Import(name="virtualMachineProfile")
    private @Nullable Output<VirtualMachineScaleSetVMProfileArgs> virtualMachineProfile;

    public Optional<Output<VirtualMachineScaleSetVMProfileArgs>> virtualMachineProfile() {
        return Optional.ofNullable(this.virtualMachineProfile);
    }

    /**
     * The name of the VM scale set to create or update.
     * 
     */
    @Import(name="vmScaleSetName")
    private @Nullable Output<String> vmScaleSetName;

    public Optional<Output<String>> vmScaleSetName() {
        return Optional.ofNullable(this.vmScaleSetName);
    }

    /**
     * Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
     * 
     */
    @Import(name="zoneBalance")
    private @Nullable Output<Boolean> zoneBalance;

    public Optional<Output<Boolean>> zoneBalance() {
        return Optional.ofNullable(this.zoneBalance);
    }

    /**
     * The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private VirtualMachineScaleSetArgs() {}

    private VirtualMachineScaleSetArgs(VirtualMachineScaleSetArgs $) {
        this.additionalCapabilities = $.additionalCapabilities;
        this.automaticRepairsPolicy = $.automaticRepairsPolicy;
        this.doNotRunExtensionsOnOverprovisionedVMs = $.doNotRunExtensionsOnOverprovisionedVMs;
        this.extendedLocation = $.extendedLocation;
        this.hostGroup = $.hostGroup;
        this.identity = $.identity;
        this.location = $.location;
        this.orchestrationMode = $.orchestrationMode;
        this.overprovision = $.overprovision;
        this.plan = $.plan;
        this.platformFaultDomainCount = $.platformFaultDomainCount;
        this.proximityPlacementGroup = $.proximityPlacementGroup;
        this.resourceGroupName = $.resourceGroupName;
        this.scaleInPolicy = $.scaleInPolicy;
        this.singlePlacementGroup = $.singlePlacementGroup;
        this.sku = $.sku;
        this.tags = $.tags;
        this.upgradePolicy = $.upgradePolicy;
        this.virtualMachineProfile = $.virtualMachineProfile;
        this.vmScaleSetName = $.vmScaleSetName;
        this.zoneBalance = $.zoneBalance;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineScaleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineScaleSetArgs $;

        public Builder() {
            $ = new VirtualMachineScaleSetArgs();
        }

        public Builder(VirtualMachineScaleSetArgs defaults) {
            $ = new VirtualMachineScaleSetArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalCapabilities(@Nullable Output<AdditionalCapabilitiesArgs> additionalCapabilities) {
            $.additionalCapabilities = additionalCapabilities;
            return this;
        }

        public Builder additionalCapabilities(AdditionalCapabilitiesArgs additionalCapabilities) {
            return additionalCapabilities(Output.of(additionalCapabilities));
        }

        public Builder automaticRepairsPolicy(@Nullable Output<AutomaticRepairsPolicyArgs> automaticRepairsPolicy) {
            $.automaticRepairsPolicy = automaticRepairsPolicy;
            return this;
        }

        public Builder automaticRepairsPolicy(AutomaticRepairsPolicyArgs automaticRepairsPolicy) {
            return automaticRepairsPolicy(Output.of(automaticRepairsPolicy));
        }

        public Builder doNotRunExtensionsOnOverprovisionedVMs(@Nullable Output<Boolean> doNotRunExtensionsOnOverprovisionedVMs) {
            $.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
            return this;
        }

        public Builder doNotRunExtensionsOnOverprovisionedVMs(Boolean doNotRunExtensionsOnOverprovisionedVMs) {
            return doNotRunExtensionsOnOverprovisionedVMs(Output.of(doNotRunExtensionsOnOverprovisionedVMs));
        }

        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            $.extendedLocation = extendedLocation;
            return this;
        }

        public Builder extendedLocation(ExtendedLocationArgs extendedLocation) {
            return extendedLocation(Output.of(extendedLocation));
        }

        public Builder hostGroup(@Nullable Output<SubResourceArgs> hostGroup) {
            $.hostGroup = hostGroup;
            return this;
        }

        public Builder hostGroup(SubResourceArgs hostGroup) {
            return hostGroup(Output.of(hostGroup));
        }

        public Builder identity(@Nullable Output<VirtualMachineScaleSetIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(VirtualMachineScaleSetIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder orchestrationMode(@Nullable Output<Either<String,OrchestrationMode>> orchestrationMode) {
            $.orchestrationMode = orchestrationMode;
            return this;
        }

        public Builder orchestrationMode(Either<String,OrchestrationMode> orchestrationMode) {
            return orchestrationMode(Output.of(orchestrationMode));
        }

        public Builder orchestrationMode(String orchestrationMode) {
            return orchestrationMode(Either.ofLeft(orchestrationMode));
        }

        public Builder orchestrationMode(OrchestrationMode orchestrationMode) {
            return orchestrationMode(Either.ofRight(orchestrationMode));
        }

        public Builder overprovision(@Nullable Output<Boolean> overprovision) {
            $.overprovision = overprovision;
            return this;
        }

        public Builder overprovision(Boolean overprovision) {
            return overprovision(Output.of(overprovision));
        }

        public Builder plan(@Nullable Output<PlanArgs> plan) {
            $.plan = plan;
            return this;
        }

        public Builder plan(PlanArgs plan) {
            return plan(Output.of(plan));
        }

        public Builder platformFaultDomainCount(@Nullable Output<Integer> platformFaultDomainCount) {
            $.platformFaultDomainCount = platformFaultDomainCount;
            return this;
        }

        public Builder platformFaultDomainCount(Integer platformFaultDomainCount) {
            return platformFaultDomainCount(Output.of(platformFaultDomainCount));
        }

        public Builder proximityPlacementGroup(@Nullable Output<SubResourceArgs> proximityPlacementGroup) {
            $.proximityPlacementGroup = proximityPlacementGroup;
            return this;
        }

        public Builder proximityPlacementGroup(SubResourceArgs proximityPlacementGroup) {
            return proximityPlacementGroup(Output.of(proximityPlacementGroup));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder scaleInPolicy(@Nullable Output<ScaleInPolicyArgs> scaleInPolicy) {
            $.scaleInPolicy = scaleInPolicy;
            return this;
        }

        public Builder scaleInPolicy(ScaleInPolicyArgs scaleInPolicy) {
            return scaleInPolicy(Output.of(scaleInPolicy));
        }

        public Builder singlePlacementGroup(@Nullable Output<Boolean> singlePlacementGroup) {
            $.singlePlacementGroup = singlePlacementGroup;
            return this;
        }

        public Builder singlePlacementGroup(Boolean singlePlacementGroup) {
            return singlePlacementGroup(Output.of(singlePlacementGroup));
        }

        public Builder sku(@Nullable Output<SkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(SkuArgs sku) {
            return sku(Output.of(sku));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder upgradePolicy(@Nullable Output<UpgradePolicyArgs> upgradePolicy) {
            $.upgradePolicy = upgradePolicy;
            return this;
        }

        public Builder upgradePolicy(UpgradePolicyArgs upgradePolicy) {
            return upgradePolicy(Output.of(upgradePolicy));
        }

        public Builder virtualMachineProfile(@Nullable Output<VirtualMachineScaleSetVMProfileArgs> virtualMachineProfile) {
            $.virtualMachineProfile = virtualMachineProfile;
            return this;
        }

        public Builder virtualMachineProfile(VirtualMachineScaleSetVMProfileArgs virtualMachineProfile) {
            return virtualMachineProfile(Output.of(virtualMachineProfile));
        }

        public Builder vmScaleSetName(@Nullable Output<String> vmScaleSetName) {
            $.vmScaleSetName = vmScaleSetName;
            return this;
        }

        public Builder vmScaleSetName(String vmScaleSetName) {
            return vmScaleSetName(Output.of(vmScaleSetName));
        }

        public Builder zoneBalance(@Nullable Output<Boolean> zoneBalance) {
            $.zoneBalance = zoneBalance;
            return this;
        }

        public Builder zoneBalance(Boolean zoneBalance) {
            return zoneBalance(Output.of(zoneBalance));
        }

        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public VirtualMachineScaleSetArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
