// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.windowsesu.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMultipleActivationKeyResult {
    /**
     * Agreement number under which the key is requested.
     * 
     */
    private final @Nullable String agreementNumber;
    /**
     * End of support of security updates activated by the MAK key.
     * 
     */
    private final String expirationDate;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * Number of activations/servers using the MAK key.
     * 
     */
    private final @Nullable Integer installedServerNumber;
    /**
     * &lt;code&gt; true &lt;/code&gt; if user has eligible on-premises Windows physical or virtual machines, and that the requested key will only be used in their organization; &lt;code&gt; false &lt;/code&gt; otherwise.
     * 
     */
    private final @Nullable Boolean isEligible;
    /**
     * The geo-location where the resource lives
     * 
     */
    private final String location;
    /**
     * MAK 5x5 key.
     * 
     */
    private final String multipleActivationKey;
    /**
     * The name of the resource
     * 
     */
    private final String name;
    /**
     * Type of OS for which the key is requested.
     * 
     */
    private final @Nullable String osType;
    private final String provisioningState;
    /**
     * Type of support
     * 
     */
    private final @Nullable String supportType;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetMultipleActivationKeyResult(
        @CustomType.Parameter("agreementNumber") @Nullable String agreementNumber,
        @CustomType.Parameter("expirationDate") String expirationDate,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("installedServerNumber") @Nullable Integer installedServerNumber,
        @CustomType.Parameter("isEligible") @Nullable Boolean isEligible,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("multipleActivationKey") String multipleActivationKey,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("osType") @Nullable String osType,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("supportType") @Nullable String supportType,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.agreementNumber = agreementNumber;
        this.expirationDate = expirationDate;
        this.id = id;
        this.installedServerNumber = installedServerNumber;
        this.isEligible = isEligible;
        this.location = location;
        this.multipleActivationKey = multipleActivationKey;
        this.name = name;
        this.osType = osType;
        this.provisioningState = provisioningState;
        this.supportType = supportType;
        this.tags = tags;
        this.type = type;
    }

    /**
     * Agreement number under which the key is requested.
     * 
    */
    public Optional<String> agreementNumber() {
        return Optional.ofNullable(this.agreementNumber);
    }
    /**
     * End of support of security updates activated by the MAK key.
     * 
    */
    public String expirationDate() {
        return this.expirationDate;
    }
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * Number of activations/servers using the MAK key.
     * 
    */
    public Optional<Integer> installedServerNumber() {
        return Optional.ofNullable(this.installedServerNumber);
    }
    /**
     * &lt;code&gt; true &lt;/code&gt; if user has eligible on-premises Windows physical or virtual machines, and that the requested key will only be used in their organization; &lt;code&gt; false &lt;/code&gt; otherwise.
     * 
    */
    public Optional<Boolean> isEligible() {
        return Optional.ofNullable(this.isEligible);
    }
    /**
     * The geo-location where the resource lives
     * 
    */
    public String location() {
        return this.location;
    }
    /**
     * MAK 5x5 key.
     * 
    */
    public String multipleActivationKey() {
        return this.multipleActivationKey;
    }
    /**
     * The name of the resource
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * Type of OS for which the key is requested.
     * 
    */
    public Optional<String> osType() {
        return Optional.ofNullable(this.osType);
    }
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * Type of support
     * 
    */
    public Optional<String> supportType() {
        return Optional.ofNullable(this.supportType);
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
    */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMultipleActivationKeyResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String agreementNumber;
        private String expirationDate;
        private String id;
        private @Nullable Integer installedServerNumber;
        private @Nullable Boolean isEligible;
        private String location;
        private String multipleActivationKey;
        private String name;
        private @Nullable String osType;
        private String provisioningState;
        private @Nullable String supportType;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMultipleActivationKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agreementNumber = defaults.agreementNumber;
    	      this.expirationDate = defaults.expirationDate;
    	      this.id = defaults.id;
    	      this.installedServerNumber = defaults.installedServerNumber;
    	      this.isEligible = defaults.isEligible;
    	      this.location = defaults.location;
    	      this.multipleActivationKey = defaults.multipleActivationKey;
    	      this.name = defaults.name;
    	      this.osType = defaults.osType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.supportType = defaults.supportType;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder agreementNumber(@Nullable String agreementNumber) {
            this.agreementNumber = agreementNumber;
            return this;
        }
        public Builder expirationDate(String expirationDate) {
            this.expirationDate = Objects.requireNonNull(expirationDate);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder installedServerNumber(@Nullable Integer installedServerNumber) {
            this.installedServerNumber = installedServerNumber;
            return this;
        }
        public Builder isEligible(@Nullable Boolean isEligible) {
            this.isEligible = isEligible;
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder multipleActivationKey(String multipleActivationKey) {
            this.multipleActivationKey = Objects.requireNonNull(multipleActivationKey);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder osType(@Nullable String osType) {
            this.osType = osType;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder supportType(@Nullable String supportType) {
            this.supportType = supportType;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetMultipleActivationKeyResult build() {
            return new GetMultipleActivationKeyResult(agreementNumber, expirationDate, id, installedServerNumber, isEligible, location, multipleActivationKey, name, osType, provisioningState, supportType, tags, type);
        }
    }
}
