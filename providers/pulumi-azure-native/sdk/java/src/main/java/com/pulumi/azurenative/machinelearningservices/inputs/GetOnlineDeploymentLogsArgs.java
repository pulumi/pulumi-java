// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.enums.ContainerType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOnlineDeploymentLogsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOnlineDeploymentLogsArgs Empty = new GetOnlineDeploymentLogsArgs();

    /**
     * The type of container to retrieve logs from.
     * 
     */
    @Import(name="containerType")
    private @Nullable Output<Either<String,ContainerType>> containerType;

    /**
     * @return The type of container to retrieve logs from.
     * 
     */
    public Optional<Output<Either<String,ContainerType>>> containerType() {
        return Optional.ofNullable(this.containerType);
    }

    /**
     * The name and identifier for the endpoint.
     * 
     */
    @Import(name="deploymentName", required=true)
    private Output<String> deploymentName;

    /**
     * @return The name and identifier for the endpoint.
     * 
     */
    public Output<String> deploymentName() {
        return this.deploymentName;
    }

    /**
     * Inference endpoint name.
     * 
     */
    @Import(name="endpointName", required=true)
    private Output<String> endpointName;

    /**
     * @return Inference endpoint name.
     * 
     */
    public Output<String> endpointName() {
        return this.endpointName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The maximum number of lines to tail.
     * 
     */
    @Import(name="tail")
    private @Nullable Output<Integer> tail;

    /**
     * @return The maximum number of lines to tail.
     * 
     */
    public Optional<Output<Integer>> tail() {
        return Optional.ofNullable(this.tail);
    }

    /**
     * Name of Azure Machine Learning workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    /**
     * @return Name of Azure Machine Learning workspace.
     * 
     */
    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private GetOnlineDeploymentLogsArgs() {}

    private GetOnlineDeploymentLogsArgs(GetOnlineDeploymentLogsArgs $) {
        this.containerType = $.containerType;
        this.deploymentName = $.deploymentName;
        this.endpointName = $.endpointName;
        this.resourceGroupName = $.resourceGroupName;
        this.tail = $.tail;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOnlineDeploymentLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOnlineDeploymentLogsArgs $;

        public Builder() {
            $ = new GetOnlineDeploymentLogsArgs();
        }

        public Builder(GetOnlineDeploymentLogsArgs defaults) {
            $ = new GetOnlineDeploymentLogsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerType The type of container to retrieve logs from.
         * 
         * @return builder
         * 
         */
        public Builder containerType(@Nullable Output<Either<String,ContainerType>> containerType) {
            $.containerType = containerType;
            return this;
        }

        /**
         * @param containerType The type of container to retrieve logs from.
         * 
         * @return builder
         * 
         */
        public Builder containerType(Either<String,ContainerType> containerType) {
            return containerType(Output.of(containerType));
        }

        /**
         * @param containerType The type of container to retrieve logs from.
         * 
         * @return builder
         * 
         */
        public Builder containerType(String containerType) {
            return containerType(Either.ofLeft(containerType));
        }

        /**
         * @param containerType The type of container to retrieve logs from.
         * 
         * @return builder
         * 
         */
        public Builder containerType(ContainerType containerType) {
            return containerType(Either.ofRight(containerType));
        }

        /**
         * @param deploymentName The name and identifier for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder deploymentName(Output<String> deploymentName) {
            $.deploymentName = deploymentName;
            return this;
        }

        /**
         * @param deploymentName The name and identifier for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder deploymentName(String deploymentName) {
            return deploymentName(Output.of(deploymentName));
        }

        /**
         * @param endpointName Inference endpoint name.
         * 
         * @return builder
         * 
         */
        public Builder endpointName(Output<String> endpointName) {
            $.endpointName = endpointName;
            return this;
        }

        /**
         * @param endpointName Inference endpoint name.
         * 
         * @return builder
         * 
         */
        public Builder endpointName(String endpointName) {
            return endpointName(Output.of(endpointName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tail The maximum number of lines to tail.
         * 
         * @return builder
         * 
         */
        public Builder tail(@Nullable Output<Integer> tail) {
            $.tail = tail;
            return this;
        }

        /**
         * @param tail The maximum number of lines to tail.
         * 
         * @return builder
         * 
         */
        public Builder tail(Integer tail) {
            return tail(Output.of(tail));
        }

        /**
         * @param workspaceName Name of Azure Machine Learning workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        /**
         * @param workspaceName Name of Azure Machine Learning workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public GetOnlineDeploymentLogsArgs build() {
            $.deploymentName = Objects.requireNonNull($.deploymentName, "expected parameter 'deploymentName' to be non-null");
            $.endpointName = Objects.requireNonNull($.endpointName, "expected parameter 'endpointName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
