// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scvmm;

import com.pulumi.azurenative.scvmm.inputs.ExtendedLocationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AvailabilitySetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AvailabilitySetArgs Empty = new AvailabilitySetArgs();

    /**
     * Name of the availability set.
     * 
     */
    @Import(name="availabilitySetName")
    private @Nullable Output<String> availabilitySetName;

    /**
     * @return Name of the availability set.
     * 
     */
    public Optional<Output<String>> availabilitySetName() {
        return Optional.ofNullable(this.availabilitySetName);
    }

    /**
     * The extended location.
     * 
     */
    @Import(name="extendedLocation")
    private @Nullable Output<ExtendedLocationArgs> extendedLocation;

    /**
     * @return The extended location.
     * 
     */
    public Optional<Output<ExtendedLocationArgs>> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }

    /**
     * Gets or sets the location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Gets or sets the location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * ARM Id of the vmmServer resource in which this resource resides.
     * 
     */
    @Import(name="vmmServerId")
    private @Nullable Output<String> vmmServerId;

    /**
     * @return ARM Id of the vmmServer resource in which this resource resides.
     * 
     */
    public Optional<Output<String>> vmmServerId() {
        return Optional.ofNullable(this.vmmServerId);
    }

    private AvailabilitySetArgs() {}

    private AvailabilitySetArgs(AvailabilitySetArgs $) {
        this.availabilitySetName = $.availabilitySetName;
        this.extendedLocation = $.extendedLocation;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.vmmServerId = $.vmmServerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AvailabilitySetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AvailabilitySetArgs $;

        public Builder() {
            $ = new AvailabilitySetArgs();
        }

        public Builder(AvailabilitySetArgs defaults) {
            $ = new AvailabilitySetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilitySetName Name of the availability set.
         * 
         * @return builder
         * 
         */
        public Builder availabilitySetName(@Nullable Output<String> availabilitySetName) {
            $.availabilitySetName = availabilitySetName;
            return this;
        }

        /**
         * @param availabilitySetName Name of the availability set.
         * 
         * @return builder
         * 
         */
        public Builder availabilitySetName(String availabilitySetName) {
            return availabilitySetName(Output.of(availabilitySetName));
        }

        /**
         * @param extendedLocation The extended location.
         * 
         * @return builder
         * 
         */
        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            $.extendedLocation = extendedLocation;
            return this;
        }

        /**
         * @param extendedLocation The extended location.
         * 
         * @return builder
         * 
         */
        public Builder extendedLocation(ExtendedLocationArgs extendedLocation) {
            return extendedLocation(Output.of(extendedLocation));
        }

        /**
         * @param location Gets or sets the location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Gets or sets the location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vmmServerId ARM Id of the vmmServer resource in which this resource resides.
         * 
         * @return builder
         * 
         */
        public Builder vmmServerId(@Nullable Output<String> vmmServerId) {
            $.vmmServerId = vmmServerId;
            return this;
        }

        /**
         * @param vmmServerId ARM Id of the vmmServer resource in which this resource resides.
         * 
         * @return builder
         * 
         */
        public Builder vmmServerId(String vmmServerId) {
            return vmmServerId(Output.of(vmmServerId));
        }

        public AvailabilitySetArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
