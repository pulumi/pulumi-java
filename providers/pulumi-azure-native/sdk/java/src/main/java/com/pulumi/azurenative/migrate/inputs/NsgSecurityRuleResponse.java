// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Security Rule data model for Network Security Groups.
 * 
 */
public final class NsgSecurityRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final NsgSecurityRuleResponse Empty = new NsgSecurityRuleResponse();

    /**
     * Gets or sets whether network traffic is allowed or denied.
     * Possible values are “Allow” and “Deny”.
     * 
     */
    @Import(name="access")
    private @Nullable String access;

    public Optional<String> access() {
        return Optional.ofNullable(this.access);
    }

    /**
     * Gets or sets a description for this rule. Restricted to 140 chars.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Gets or sets destination address prefix. CIDR or source IP range.
     *  A “*” can also be used to match all source IPs. Default tags such
     * as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
     * 
     */
    @Import(name="destinationAddressPrefix")
    private @Nullable String destinationAddressPrefix;

    public Optional<String> destinationAddressPrefix() {
        return Optional.ofNullable(this.destinationAddressPrefix);
    }

    /**
     * Gets or sets Destination Port or Range. Integer or range between
     * 0 and 65535. A “*” can also be used to match all ports.
     * 
     */
    @Import(name="destinationPortRange")
    private @Nullable String destinationPortRange;

    public Optional<String> destinationPortRange() {
        return Optional.ofNullable(this.destinationPortRange);
    }

    /**
     * Gets or sets the direction of the rule.InBound or Outbound. The
     * direction specifies if rule will be evaluated on incoming or outgoing traffic.
     * 
     */
    @Import(name="direction")
    private @Nullable String direction;

    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Gets or sets the Security rule name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Gets or sets the priority of the rule. The value can be between
     * 100 and 4096. The priority number must be unique for each rule in the collection.
     * The lower the priority number, the higher the priority of the rule.
     * 
     */
    @Import(name="priority")
    private @Nullable Integer priority;

    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
     * 
     */
    @Import(name="protocol")
    private @Nullable String protocol;

    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Gets or sets source address prefix. CIDR or source IP range. A
     * “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
     * ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
     * rule, specifies where network traffic originates from.
     * 
     */
    @Import(name="sourceAddressPrefix")
    private @Nullable String sourceAddressPrefix;

    public Optional<String> sourceAddressPrefix() {
        return Optional.ofNullable(this.sourceAddressPrefix);
    }

    /**
     * Gets or sets Source Port or Range. Integer or range between 0 and
     * 65535. A “*” can also be used to match all ports.
     * 
     */
    @Import(name="sourcePortRange")
    private @Nullable String sourcePortRange;

    public Optional<String> sourcePortRange() {
        return Optional.ofNullable(this.sourcePortRange);
    }

    private NsgSecurityRuleResponse() {}

    private NsgSecurityRuleResponse(NsgSecurityRuleResponse $) {
        this.access = $.access;
        this.description = $.description;
        this.destinationAddressPrefix = $.destinationAddressPrefix;
        this.destinationPortRange = $.destinationPortRange;
        this.direction = $.direction;
        this.name = $.name;
        this.priority = $.priority;
        this.protocol = $.protocol;
        this.sourceAddressPrefix = $.sourceAddressPrefix;
        this.sourcePortRange = $.sourcePortRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NsgSecurityRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NsgSecurityRuleResponse $;

        public Builder() {
            $ = new NsgSecurityRuleResponse();
        }

        public Builder(NsgSecurityRuleResponse defaults) {
            $ = new NsgSecurityRuleResponse(Objects.requireNonNull(defaults));
        }

        public Builder access(@Nullable String access) {
            $.access = access;
            return this;
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder destinationAddressPrefix(@Nullable String destinationAddressPrefix) {
            $.destinationAddressPrefix = destinationAddressPrefix;
            return this;
        }

        public Builder destinationPortRange(@Nullable String destinationPortRange) {
            $.destinationPortRange = destinationPortRange;
            return this;
        }

        public Builder direction(@Nullable String direction) {
            $.direction = direction;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder priority(@Nullable Integer priority) {
            $.priority = priority;
            return this;
        }

        public Builder protocol(@Nullable String protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder sourceAddressPrefix(@Nullable String sourceAddressPrefix) {
            $.sourceAddressPrefix = sourceAddressPrefix;
            return this;
        }

        public Builder sourcePortRange(@Nullable String sourcePortRange) {
            $.sourcePortRange = sourcePortRange;
            return this;
        }

        public NsgSecurityRuleResponse build() {
            return $;
        }
    }

}
