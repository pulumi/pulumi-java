// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine.inputs;

import com.pulumi.azurenative.sqlvirtualmachine.enums.DayOfWeek;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Set a patching window during which Windows and SQL patches will be applied.
 * 
 */
public final class AutoPatchingSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoPatchingSettingsArgs Empty = new AutoPatchingSettingsArgs();

    /**
     * Day of week to apply the patch on.
     * 
     */
    @Import(name="dayOfWeek")
      private final @Nullable Output<DayOfWeek> dayOfWeek;

    public Output<DayOfWeek> dayOfWeek() {
        return this.dayOfWeek == null ? Codegen.empty() : this.dayOfWeek;
    }

    /**
     * Enable or disable autopatching on SQL virtual machine.
     * 
     */
    @Import(name="enable")
      private final @Nullable Output<Boolean> enable;

    public Output<Boolean> enable() {
        return this.enable == null ? Codegen.empty() : this.enable;
    }

    /**
     * Duration of patching.
     * 
     */
    @Import(name="maintenanceWindowDuration")
      private final @Nullable Output<Integer> maintenanceWindowDuration;

    public Output<Integer> maintenanceWindowDuration() {
        return this.maintenanceWindowDuration == null ? Codegen.empty() : this.maintenanceWindowDuration;
    }

    /**
     * Hour of the day when patching is initiated. Local VM time.
     * 
     */
    @Import(name="maintenanceWindowStartingHour")
      private final @Nullable Output<Integer> maintenanceWindowStartingHour;

    public Output<Integer> maintenanceWindowStartingHour() {
        return this.maintenanceWindowStartingHour == null ? Codegen.empty() : this.maintenanceWindowStartingHour;
    }

    public AutoPatchingSettingsArgs(
        @Nullable Output<DayOfWeek> dayOfWeek,
        @Nullable Output<Boolean> enable,
        @Nullable Output<Integer> maintenanceWindowDuration,
        @Nullable Output<Integer> maintenanceWindowStartingHour) {
        this.dayOfWeek = dayOfWeek;
        this.enable = enable;
        this.maintenanceWindowDuration = maintenanceWindowDuration;
        this.maintenanceWindowStartingHour = maintenanceWindowStartingHour;
    }

    private AutoPatchingSettingsArgs() {
        this.dayOfWeek = Codegen.empty();
        this.enable = Codegen.empty();
        this.maintenanceWindowDuration = Codegen.empty();
        this.maintenanceWindowStartingHour = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoPatchingSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<DayOfWeek> dayOfWeek;
        private @Nullable Output<Boolean> enable;
        private @Nullable Output<Integer> maintenanceWindowDuration;
        private @Nullable Output<Integer> maintenanceWindowStartingHour;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoPatchingSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.enable = defaults.enable;
    	      this.maintenanceWindowDuration = defaults.maintenanceWindowDuration;
    	      this.maintenanceWindowStartingHour = defaults.maintenanceWindowStartingHour;
        }

        public Builder dayOfWeek(@Nullable Output<DayOfWeek> dayOfWeek) {
            this.dayOfWeek = dayOfWeek;
            return this;
        }
        public Builder dayOfWeek(@Nullable DayOfWeek dayOfWeek) {
            this.dayOfWeek = Codegen.ofNullable(dayOfWeek);
            return this;
        }
        public Builder enable(@Nullable Output<Boolean> enable) {
            this.enable = enable;
            return this;
        }
        public Builder enable(@Nullable Boolean enable) {
            this.enable = Codegen.ofNullable(enable);
            return this;
        }
        public Builder maintenanceWindowDuration(@Nullable Output<Integer> maintenanceWindowDuration) {
            this.maintenanceWindowDuration = maintenanceWindowDuration;
            return this;
        }
        public Builder maintenanceWindowDuration(@Nullable Integer maintenanceWindowDuration) {
            this.maintenanceWindowDuration = Codegen.ofNullable(maintenanceWindowDuration);
            return this;
        }
        public Builder maintenanceWindowStartingHour(@Nullable Output<Integer> maintenanceWindowStartingHour) {
            this.maintenanceWindowStartingHour = maintenanceWindowStartingHour;
            return this;
        }
        public Builder maintenanceWindowStartingHour(@Nullable Integer maintenanceWindowStartingHour) {
            this.maintenanceWindowStartingHour = Codegen.ofNullable(maintenanceWindowStartingHour);
            return this;
        }        public AutoPatchingSettingsArgs build() {
            return new AutoPatchingSettingsArgs(dayOfWeek, enable, maintenanceWindowDuration, maintenanceWindowStartingHour);
        }
    }
}
