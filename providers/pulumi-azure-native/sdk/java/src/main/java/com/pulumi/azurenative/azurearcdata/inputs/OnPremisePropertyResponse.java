// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurearcdata.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties from the Kubernetes data controller
 * 
 */
public final class OnPremisePropertyResponse extends com.pulumi.resources.InvokeArgs {

    public static final OnPremisePropertyResponse Empty = new OnPremisePropertyResponse();

    /**
     * A globally unique ID identifying the associated Kubernetes cluster
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * Certificate that contains the Kubernetes cluster public key used to verify signing
     * 
     */
    @Import(name="publicSigningKey", required=true)
    private String publicSigningKey;

    public String publicSigningKey() {
        return this.publicSigningKey;
    }

    /**
     * Unique thumbprint returned to customer to verify the certificate being uploaded
     * 
     */
    @Import(name="signingCertificateThumbprint")
    private @Nullable String signingCertificateThumbprint;

    public Optional<String> signingCertificateThumbprint() {
        return Optional.ofNullable(this.signingCertificateThumbprint);
    }

    private OnPremisePropertyResponse() {}

    private OnPremisePropertyResponse(OnPremisePropertyResponse $) {
        this.id = $.id;
        this.publicSigningKey = $.publicSigningKey;
        this.signingCertificateThumbprint = $.signingCertificateThumbprint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnPremisePropertyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnPremisePropertyResponse $;

        public Builder() {
            $ = new OnPremisePropertyResponse();
        }

        public Builder(OnPremisePropertyResponse defaults) {
            $ = new OnPremisePropertyResponse(Objects.requireNonNull(defaults));
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder publicSigningKey(String publicSigningKey) {
            $.publicSigningKey = publicSigningKey;
            return this;
        }

        public Builder signingCertificateThumbprint(@Nullable String signingCertificateThumbprint) {
            $.signingCertificateThumbprint = signingCertificateThumbprint;
            return this;
        }

        public OnPremisePropertyResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.publicSigningKey = Objects.requireNonNull($.publicSigningKey, "expected parameter 'publicSigningKey' to be non-null");
            return $;
        }
    }

}
