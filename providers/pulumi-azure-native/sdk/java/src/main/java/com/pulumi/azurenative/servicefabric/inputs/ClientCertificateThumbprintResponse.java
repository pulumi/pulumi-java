// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Describes the client certificate details using thumbprint.
 * 
 */
public final class ClientCertificateThumbprintResponse extends com.pulumi.resources.InvokeArgs {

    public static final ClientCertificateThumbprintResponse Empty = new ClientCertificateThumbprintResponse();

    /**
     * The thumbprint of the client certificate.
     * 
     */
    @Import(name="certificateThumbprint", required=true)
    private String certificateThumbprint;

    /**
     * @return The thumbprint of the client certificate.
     * 
     */
    public String certificateThumbprint() {
        return this.certificateThumbprint;
    }

    /**
     * Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
     * 
     */
    @Import(name="isAdmin", required=true)
    private Boolean isAdmin;

    /**
     * @return Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
     * 
     */
    public Boolean isAdmin() {
        return this.isAdmin;
    }

    private ClientCertificateThumbprintResponse() {}

    private ClientCertificateThumbprintResponse(ClientCertificateThumbprintResponse $) {
        this.certificateThumbprint = $.certificateThumbprint;
        this.isAdmin = $.isAdmin;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientCertificateThumbprintResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientCertificateThumbprintResponse $;

        public Builder() {
            $ = new ClientCertificateThumbprintResponse();
        }

        public Builder(ClientCertificateThumbprintResponse defaults) {
            $ = new ClientCertificateThumbprintResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateThumbprint The thumbprint of the client certificate.
         * 
         * @return builder
         * 
         */
        public Builder certificateThumbprint(String certificateThumbprint) {
            $.certificateThumbprint = certificateThumbprint;
            return this;
        }

        /**
         * @param isAdmin Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
         * 
         * @return builder
         * 
         */
        public Builder isAdmin(Boolean isAdmin) {
            $.isAdmin = isAdmin;
            return this;
        }

        public ClientCertificateThumbprintResponse build() {
            $.certificateThumbprint = Objects.requireNonNull($.certificateThumbprint, "expected parameter 'certificateThumbprint' to be non-null");
            $.isAdmin = Objects.requireNonNull($.isAdmin, "expected parameter 'isAdmin' to be non-null");
            return $;
        }
    }

}
