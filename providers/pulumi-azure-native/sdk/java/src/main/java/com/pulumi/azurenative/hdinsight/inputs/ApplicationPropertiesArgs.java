// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hdinsight.inputs;

import com.pulumi.azurenative.hdinsight.inputs.ApplicationGetEndpointArgs;
import com.pulumi.azurenative.hdinsight.inputs.ApplicationGetHttpsEndpointArgs;
import com.pulumi.azurenative.hdinsight.inputs.ComputeProfileArgs;
import com.pulumi.azurenative.hdinsight.inputs.ErrorsArgs;
import com.pulumi.azurenative.hdinsight.inputs.RuntimeScriptActionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The HDInsight cluster application GET response.
 * 
 */
public final class ApplicationPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPropertiesArgs Empty = new ApplicationPropertiesArgs();

    /**
     * The application type.
     * 
     */
    @Import(name="applicationType")
      private final @Nullable Output<String> applicationType;

    public Output<String> applicationType() {
        return this.applicationType == null ? Codegen.empty() : this.applicationType;
    }

    /**
     * The list of roles in the cluster.
     * 
     */
    @Import(name="computeProfile")
      private final @Nullable Output<ComputeProfileArgs> computeProfile;

    public Output<ComputeProfileArgs> computeProfile() {
        return this.computeProfile == null ? Codegen.empty() : this.computeProfile;
    }

    /**
     * The list of errors.
     * 
     */
    @Import(name="errors")
      private final @Nullable Output<List<ErrorsArgs>> errors;

    public Output<List<ErrorsArgs>> errors() {
        return this.errors == null ? Codegen.empty() : this.errors;
    }

    /**
     * The list of application HTTPS endpoints.
     * 
     */
    @Import(name="httpsEndpoints")
      private final @Nullable Output<List<ApplicationGetHttpsEndpointArgs>> httpsEndpoints;

    public Output<List<ApplicationGetHttpsEndpointArgs>> httpsEndpoints() {
        return this.httpsEndpoints == null ? Codegen.empty() : this.httpsEndpoints;
    }

    /**
     * The list of install script actions.
     * 
     */
    @Import(name="installScriptActions")
      private final @Nullable Output<List<RuntimeScriptActionArgs>> installScriptActions;

    public Output<List<RuntimeScriptActionArgs>> installScriptActions() {
        return this.installScriptActions == null ? Codegen.empty() : this.installScriptActions;
    }

    /**
     * The list of application SSH endpoints.
     * 
     */
    @Import(name="sshEndpoints")
      private final @Nullable Output<List<ApplicationGetEndpointArgs>> sshEndpoints;

    public Output<List<ApplicationGetEndpointArgs>> sshEndpoints() {
        return this.sshEndpoints == null ? Codegen.empty() : this.sshEndpoints;
    }

    /**
     * The list of uninstall script actions.
     * 
     */
    @Import(name="uninstallScriptActions")
      private final @Nullable Output<List<RuntimeScriptActionArgs>> uninstallScriptActions;

    public Output<List<RuntimeScriptActionArgs>> uninstallScriptActions() {
        return this.uninstallScriptActions == null ? Codegen.empty() : this.uninstallScriptActions;
    }

    public ApplicationPropertiesArgs(
        @Nullable Output<String> applicationType,
        @Nullable Output<ComputeProfileArgs> computeProfile,
        @Nullable Output<List<ErrorsArgs>> errors,
        @Nullable Output<List<ApplicationGetHttpsEndpointArgs>> httpsEndpoints,
        @Nullable Output<List<RuntimeScriptActionArgs>> installScriptActions,
        @Nullable Output<List<ApplicationGetEndpointArgs>> sshEndpoints,
        @Nullable Output<List<RuntimeScriptActionArgs>> uninstallScriptActions) {
        this.applicationType = applicationType;
        this.computeProfile = computeProfile;
        this.errors = errors;
        this.httpsEndpoints = httpsEndpoints;
        this.installScriptActions = installScriptActions;
        this.sshEndpoints = sshEndpoints;
        this.uninstallScriptActions = uninstallScriptActions;
    }

    private ApplicationPropertiesArgs() {
        this.applicationType = Codegen.empty();
        this.computeProfile = Codegen.empty();
        this.errors = Codegen.empty();
        this.httpsEndpoints = Codegen.empty();
        this.installScriptActions = Codegen.empty();
        this.sshEndpoints = Codegen.empty();
        this.uninstallScriptActions = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> applicationType;
        private @Nullable Output<ComputeProfileArgs> computeProfile;
        private @Nullable Output<List<ErrorsArgs>> errors;
        private @Nullable Output<List<ApplicationGetHttpsEndpointArgs>> httpsEndpoints;
        private @Nullable Output<List<RuntimeScriptActionArgs>> installScriptActions;
        private @Nullable Output<List<ApplicationGetEndpointArgs>> sshEndpoints;
        private @Nullable Output<List<RuntimeScriptActionArgs>> uninstallScriptActions;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationType = defaults.applicationType;
    	      this.computeProfile = defaults.computeProfile;
    	      this.errors = defaults.errors;
    	      this.httpsEndpoints = defaults.httpsEndpoints;
    	      this.installScriptActions = defaults.installScriptActions;
    	      this.sshEndpoints = defaults.sshEndpoints;
    	      this.uninstallScriptActions = defaults.uninstallScriptActions;
        }

        public Builder applicationType(@Nullable Output<String> applicationType) {
            this.applicationType = applicationType;
            return this;
        }
        public Builder applicationType(@Nullable String applicationType) {
            this.applicationType = Codegen.ofNullable(applicationType);
            return this;
        }
        public Builder computeProfile(@Nullable Output<ComputeProfileArgs> computeProfile) {
            this.computeProfile = computeProfile;
            return this;
        }
        public Builder computeProfile(@Nullable ComputeProfileArgs computeProfile) {
            this.computeProfile = Codegen.ofNullable(computeProfile);
            return this;
        }
        public Builder errors(@Nullable Output<List<ErrorsArgs>> errors) {
            this.errors = errors;
            return this;
        }
        public Builder errors(@Nullable List<ErrorsArgs> errors) {
            this.errors = Codegen.ofNullable(errors);
            return this;
        }
        public Builder errors(ErrorsArgs... errors) {
            return errors(List.of(errors));
        }
        public Builder httpsEndpoints(@Nullable Output<List<ApplicationGetHttpsEndpointArgs>> httpsEndpoints) {
            this.httpsEndpoints = httpsEndpoints;
            return this;
        }
        public Builder httpsEndpoints(@Nullable List<ApplicationGetHttpsEndpointArgs> httpsEndpoints) {
            this.httpsEndpoints = Codegen.ofNullable(httpsEndpoints);
            return this;
        }
        public Builder httpsEndpoints(ApplicationGetHttpsEndpointArgs... httpsEndpoints) {
            return httpsEndpoints(List.of(httpsEndpoints));
        }
        public Builder installScriptActions(@Nullable Output<List<RuntimeScriptActionArgs>> installScriptActions) {
            this.installScriptActions = installScriptActions;
            return this;
        }
        public Builder installScriptActions(@Nullable List<RuntimeScriptActionArgs> installScriptActions) {
            this.installScriptActions = Codegen.ofNullable(installScriptActions);
            return this;
        }
        public Builder installScriptActions(RuntimeScriptActionArgs... installScriptActions) {
            return installScriptActions(List.of(installScriptActions));
        }
        public Builder sshEndpoints(@Nullable Output<List<ApplicationGetEndpointArgs>> sshEndpoints) {
            this.sshEndpoints = sshEndpoints;
            return this;
        }
        public Builder sshEndpoints(@Nullable List<ApplicationGetEndpointArgs> sshEndpoints) {
            this.sshEndpoints = Codegen.ofNullable(sshEndpoints);
            return this;
        }
        public Builder sshEndpoints(ApplicationGetEndpointArgs... sshEndpoints) {
            return sshEndpoints(List.of(sshEndpoints));
        }
        public Builder uninstallScriptActions(@Nullable Output<List<RuntimeScriptActionArgs>> uninstallScriptActions) {
            this.uninstallScriptActions = uninstallScriptActions;
            return this;
        }
        public Builder uninstallScriptActions(@Nullable List<RuntimeScriptActionArgs> uninstallScriptActions) {
            this.uninstallScriptActions = Codegen.ofNullable(uninstallScriptActions);
            return this;
        }
        public Builder uninstallScriptActions(RuntimeScriptActionArgs... uninstallScriptActions) {
            return uninstallScriptActions(List.of(uninstallScriptActions));
        }        public ApplicationPropertiesArgs build() {
            return new ApplicationPropertiesArgs(applicationType, computeProfile, errors, httpsEndpoints, installScriptActions, sshEndpoints, uninstallScriptActions);
        }
    }
}
