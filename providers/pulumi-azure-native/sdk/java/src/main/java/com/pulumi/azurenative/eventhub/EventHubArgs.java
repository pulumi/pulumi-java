// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventhub;

import com.pulumi.azurenative.eventhub.enums.EntityStatus;
import com.pulumi.azurenative.eventhub.inputs.CaptureDescriptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventHubArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventHubArgs Empty = new EventHubArgs();

    /**
     * Properties of capture description
     * 
     */
    @Import(name="captureDescription")
    private @Nullable Output<CaptureDescriptionArgs> captureDescription;

    /**
     * @return Properties of capture description
     * 
     */
    public Optional<Output<CaptureDescriptionArgs>> captureDescription() {
        return Optional.ofNullable(this.captureDescription);
    }

    /**
     * The Event Hub name
     * 
     */
    @Import(name="eventHubName")
    private @Nullable Output<String> eventHubName;

    /**
     * @return The Event Hub name
     * 
     */
    public Optional<Output<String>> eventHubName() {
        return Optional.ofNullable(this.eventHubName);
    }

    /**
     * Number of days to retain the events for this Event Hub, value should be 1 to 7 days
     * 
     */
    @Import(name="messageRetentionInDays")
    private @Nullable Output<Double> messageRetentionInDays;

    /**
     * @return Number of days to retain the events for this Event Hub, value should be 1 to 7 days
     * 
     */
    public Optional<Output<Double>> messageRetentionInDays() {
        return Optional.ofNullable(this.messageRetentionInDays);
    }

    /**
     * The Namespace name
     * 
     */
    @Import(name="namespaceName", required=true)
    private Output<String> namespaceName;

    /**
     * @return The Namespace name
     * 
     */
    public Output<String> namespaceName() {
        return this.namespaceName;
    }

    /**
     * Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
     * 
     */
    @Import(name="partitionCount")
    private @Nullable Output<Double> partitionCount;

    /**
     * @return Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
     * 
     */
    public Optional<Output<Double>> partitionCount() {
        return Optional.ofNullable(this.partitionCount);
    }

    /**
     * Name of the resource group within the azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group within the azure subscription.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Enumerates the possible values for the status of the Event Hub.
     * 
     */
    @Import(name="status")
    private @Nullable Output<EntityStatus> status;

    /**
     * @return Enumerates the possible values for the status of the Event Hub.
     * 
     */
    public Optional<Output<EntityStatus>> status() {
        return Optional.ofNullable(this.status);
    }

    private EventHubArgs() {}

    private EventHubArgs(EventHubArgs $) {
        this.captureDescription = $.captureDescription;
        this.eventHubName = $.eventHubName;
        this.messageRetentionInDays = $.messageRetentionInDays;
        this.namespaceName = $.namespaceName;
        this.partitionCount = $.partitionCount;
        this.resourceGroupName = $.resourceGroupName;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventHubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventHubArgs $;

        public Builder() {
            $ = new EventHubArgs();
        }

        public Builder(EventHubArgs defaults) {
            $ = new EventHubArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param captureDescription Properties of capture description
         * 
         * @return builder
         * 
         */
        public Builder captureDescription(@Nullable Output<CaptureDescriptionArgs> captureDescription) {
            $.captureDescription = captureDescription;
            return this;
        }

        /**
         * @param captureDescription Properties of capture description
         * 
         * @return builder
         * 
         */
        public Builder captureDescription(CaptureDescriptionArgs captureDescription) {
            return captureDescription(Output.of(captureDescription));
        }

        /**
         * @param eventHubName The Event Hub name
         * 
         * @return builder
         * 
         */
        public Builder eventHubName(@Nullable Output<String> eventHubName) {
            $.eventHubName = eventHubName;
            return this;
        }

        /**
         * @param eventHubName The Event Hub name
         * 
         * @return builder
         * 
         */
        public Builder eventHubName(String eventHubName) {
            return eventHubName(Output.of(eventHubName));
        }

        /**
         * @param messageRetentionInDays Number of days to retain the events for this Event Hub, value should be 1 to 7 days
         * 
         * @return builder
         * 
         */
        public Builder messageRetentionInDays(@Nullable Output<Double> messageRetentionInDays) {
            $.messageRetentionInDays = messageRetentionInDays;
            return this;
        }

        /**
         * @param messageRetentionInDays Number of days to retain the events for this Event Hub, value should be 1 to 7 days
         * 
         * @return builder
         * 
         */
        public Builder messageRetentionInDays(Double messageRetentionInDays) {
            return messageRetentionInDays(Output.of(messageRetentionInDays));
        }

        /**
         * @param namespaceName The Namespace name
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(Output<String> namespaceName) {
            $.namespaceName = namespaceName;
            return this;
        }

        /**
         * @param namespaceName The Namespace name
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(String namespaceName) {
            return namespaceName(Output.of(namespaceName));
        }

        /**
         * @param partitionCount Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
         * 
         * @return builder
         * 
         */
        public Builder partitionCount(@Nullable Output<Double> partitionCount) {
            $.partitionCount = partitionCount;
            return this;
        }

        /**
         * @param partitionCount Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
         * 
         * @return builder
         * 
         */
        public Builder partitionCount(Double partitionCount) {
            return partitionCount(Output.of(partitionCount));
        }

        /**
         * @param resourceGroupName Name of the resource group within the azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group within the azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param status Enumerates the possible values for the status of the Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<EntityStatus> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Enumerates the possible values for the status of the Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder status(EntityStatus status) {
            return status(Output.of(status));
        }

        public EventHubArgs build() {
            $.namespaceName = Objects.requireNonNull($.namespaceName, "expected parameter 'namespaceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
