// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


/**
 * This type describes the requested resources for a given container. It describes the least amount of resources required for the container. A container can consume more than requested resources up to the specified limits before being restarted. Currently, the requested resources are treated as limits.
 * 
 */
public final class ResourceRequestsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResourceRequestsResponse Empty = new ResourceRequestsResponse();

    /**
     * Requested number of CPU cores. At present, only full cores are supported.
     * 
     */
    @Import(name="cpu", required=true)
    private Double cpu;

    public Double cpu() {
        return this.cpu;
    }

    /**
     * The memory request in GB for this container.
     * 
     */
    @Import(name="memoryInGB", required=true)
    private Double memoryInGB;

    public Double memoryInGB() {
        return this.memoryInGB;
    }

    private ResourceRequestsResponse() {}

    private ResourceRequestsResponse(ResourceRequestsResponse $) {
        this.cpu = $.cpu;
        this.memoryInGB = $.memoryInGB;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceRequestsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceRequestsResponse $;

        public Builder() {
            $ = new ResourceRequestsResponse();
        }

        public Builder(ResourceRequestsResponse defaults) {
            $ = new ResourceRequestsResponse(Objects.requireNonNull(defaults));
        }

        public Builder cpu(Double cpu) {
            $.cpu = cpu;
            return this;
        }

        public Builder memoryInGB(Double memoryInGB) {
            $.memoryInGB = memoryInGB;
            return this;
        }

        public ResourceRequestsResponse build() {
            $.cpu = Objects.requireNonNull($.cpu, "expected parameter 'cpu' to be non-null");
            $.memoryInGB = Objects.requireNonNull($.memoryInGB, "expected parameter 'memoryInGB' to be non-null");
            return $;
        }
    }

}
