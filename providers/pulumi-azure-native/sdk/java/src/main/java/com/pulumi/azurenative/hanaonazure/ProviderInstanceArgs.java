// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hanaonazure;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderInstanceArgs Empty = new ProviderInstanceArgs();

    /**
     * A JSON string containing metadata of the provider instance.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<String> metadata;

    /**
     * @return A JSON string containing metadata of the provider instance.
     * 
     */
    public Optional<Output<String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * A JSON string containing the properties of the provider instance.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<String> properties;

    /**
     * @return A JSON string containing the properties of the provider instance.
     * 
     */
    public Optional<Output<String>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Name of the provider instance.
     * 
     */
    @Import(name="providerInstanceName")
    private @Nullable Output<String> providerInstanceName;

    /**
     * @return Name of the provider instance.
     * 
     */
    public Optional<Output<String>> providerInstanceName() {
        return Optional.ofNullable(this.providerInstanceName);
    }

    /**
     * Name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the SAP monitor resource.
     * 
     */
    @Import(name="sapMonitorName", required=true)
    private Output<String> sapMonitorName;

    /**
     * @return Name of the SAP monitor resource.
     * 
     */
    public Output<String> sapMonitorName() {
        return this.sapMonitorName;
    }

    /**
     * The type of provider instance.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of provider instance.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ProviderInstanceArgs() {}

    private ProviderInstanceArgs(ProviderInstanceArgs $) {
        this.metadata = $.metadata;
        this.properties = $.properties;
        this.providerInstanceName = $.providerInstanceName;
        this.resourceGroupName = $.resourceGroupName;
        this.sapMonitorName = $.sapMonitorName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderInstanceArgs $;

        public Builder() {
            $ = new ProviderInstanceArgs();
        }

        public Builder(ProviderInstanceArgs defaults) {
            $ = new ProviderInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metadata A JSON string containing metadata of the provider instance.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata A JSON string containing metadata of the provider instance.
         * 
         * @return builder
         * 
         */
        public Builder metadata(String metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param properties A JSON string containing the properties of the provider instance.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<String> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties A JSON string containing the properties of the provider instance.
         * 
         * @return builder
         * 
         */
        public Builder properties(String properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param providerInstanceName Name of the provider instance.
         * 
         * @return builder
         * 
         */
        public Builder providerInstanceName(@Nullable Output<String> providerInstanceName) {
            $.providerInstanceName = providerInstanceName;
            return this;
        }

        /**
         * @param providerInstanceName Name of the provider instance.
         * 
         * @return builder
         * 
         */
        public Builder providerInstanceName(String providerInstanceName) {
            return providerInstanceName(Output.of(providerInstanceName));
        }

        /**
         * @param resourceGroupName Name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sapMonitorName Name of the SAP monitor resource.
         * 
         * @return builder
         * 
         */
        public Builder sapMonitorName(Output<String> sapMonitorName) {
            $.sapMonitorName = sapMonitorName;
            return this;
        }

        /**
         * @param sapMonitorName Name of the SAP monitor resource.
         * 
         * @return builder
         * 
         */
        public Builder sapMonitorName(String sapMonitorName) {
            return sapMonitorName(Output.of(sapMonitorName));
        }

        /**
         * @param type The type of provider instance.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of provider instance.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ProviderInstanceArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sapMonitorName = Objects.requireNonNull($.sapMonitorName, "expected parameter 'sapMonitorName' to be non-null");
            return $;
        }
    }

}
