// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.inputs.HubRouteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HubRouteTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final HubRouteTableArgs Empty = new HubRouteTableArgs();

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * List of labels associated with this route table.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<List<String>> labels;

    public Output<List<String>> labels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The resource group name of the VirtualHub.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the RouteTable.
     * 
     */
    @Import(name="routeTableName")
      private final @Nullable Output<String> routeTableName;

    public Output<String> routeTableName() {
        return this.routeTableName == null ? Codegen.empty() : this.routeTableName;
    }

    /**
     * List of all routes.
     * 
     */
    @Import(name="routes")
      private final @Nullable Output<List<HubRouteArgs>> routes;

    public Output<List<HubRouteArgs>> routes() {
        return this.routes == null ? Codegen.empty() : this.routes;
    }

    /**
     * The name of the VirtualHub.
     * 
     */
    @Import(name="virtualHubName", required=true)
      private final Output<String> virtualHubName;

    public Output<String> virtualHubName() {
        return this.virtualHubName;
    }

    public HubRouteTableArgs(
        @Nullable Output<String> id,
        @Nullable Output<List<String>> labels,
        @Nullable Output<String> name,
        Output<String> resourceGroupName,
        @Nullable Output<String> routeTableName,
        @Nullable Output<List<HubRouteArgs>> routes,
        Output<String> virtualHubName) {
        this.id = id;
        this.labels = labels;
        this.name = name;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.routeTableName = routeTableName;
        this.routes = routes;
        this.virtualHubName = Objects.requireNonNull(virtualHubName, "expected parameter 'virtualHubName' to be non-null");
    }

    private HubRouteTableArgs() {
        this.id = Codegen.empty();
        this.labels = Codegen.empty();
        this.name = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.routeTableName = Codegen.empty();
        this.routes = Codegen.empty();
        this.virtualHubName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HubRouteTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> id;
        private @Nullable Output<List<String>> labels;
        private @Nullable Output<String> name;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> routeTableName;
        private @Nullable Output<List<HubRouteArgs>> routes;
        private Output<String> virtualHubName;

        public Builder() {
    	      // Empty
        }

        public Builder(HubRouteTableArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.routeTableName = defaults.routeTableName;
    	      this.routes = defaults.routes;
    	      this.virtualHubName = defaults.virtualHubName;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder labels(@Nullable Output<List<String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable List<String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder routeTableName(@Nullable Output<String> routeTableName) {
            this.routeTableName = routeTableName;
            return this;
        }
        public Builder routeTableName(@Nullable String routeTableName) {
            this.routeTableName = Codegen.ofNullable(routeTableName);
            return this;
        }
        public Builder routes(@Nullable Output<List<HubRouteArgs>> routes) {
            this.routes = routes;
            return this;
        }
        public Builder routes(@Nullable List<HubRouteArgs> routes) {
            this.routes = Codegen.ofNullable(routes);
            return this;
        }
        public Builder routes(HubRouteArgs... routes) {
            return routes(List.of(routes));
        }
        public Builder virtualHubName(Output<String> virtualHubName) {
            this.virtualHubName = Objects.requireNonNull(virtualHubName);
            return this;
        }
        public Builder virtualHubName(String virtualHubName) {
            this.virtualHubName = Output.of(Objects.requireNonNull(virtualHubName));
            return this;
        }        public HubRouteTableArgs build() {
            return new HubRouteTableArgs(id, labels, name, resourceGroupName, routeTableName, routes, virtualHubName);
        }
    }
}
