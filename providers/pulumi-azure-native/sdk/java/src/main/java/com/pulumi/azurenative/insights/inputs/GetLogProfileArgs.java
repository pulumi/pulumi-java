// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetLogProfileArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogProfileArgs Empty = new GetLogProfileArgs();

    /**
     * The name of the log profile.
     * 
     */
    @Import(name="logProfileName", required=true)
    private Output<String> logProfileName;

    /**
     * @return The name of the log profile.
     * 
     */
    public Output<String> logProfileName() {
        return this.logProfileName;
    }

    private GetLogProfileArgs() {}

    private GetLogProfileArgs(GetLogProfileArgs $) {
        this.logProfileName = $.logProfileName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogProfileArgs $;

        public Builder() {
            $ = new GetLogProfileArgs();
        }

        public Builder(GetLogProfileArgs defaults) {
            $ = new GetLogProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logProfileName The name of the log profile.
         * 
         * @return builder
         * 
         */
        public Builder logProfileName(Output<String> logProfileName) {
            $.logProfileName = logProfileName;
            return this;
        }

        /**
         * @param logProfileName The name of the log profile.
         * 
         * @return builder
         * 
         */
        public Builder logProfileName(String logProfileName) {
            return logProfileName(Output.of(logProfileName));
        }

        public GetLogProfileArgs build() {
            $.logProfileName = Objects.requireNonNull($.logProfileName, "expected parameter 'logProfileName' to be non-null");
            return $;
        }
    }

}
