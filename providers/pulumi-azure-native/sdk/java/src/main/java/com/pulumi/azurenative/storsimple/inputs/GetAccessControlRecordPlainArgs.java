// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetAccessControlRecordPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccessControlRecordPlainArgs Empty = new GetAccessControlRecordPlainArgs();

    /**
     * Name of access control record to be fetched.
     * 
     */
    @Import(name="accessControlRecordName", required=true)
    private String accessControlRecordName;

    /**
     * @return Name of access control record to be fetched.
     * 
     */
    public String accessControlRecordName() {
        return this.accessControlRecordName;
    }

    /**
     * The manager name
     * 
     */
    @Import(name="managerName", required=true)
    private String managerName;

    /**
     * @return The manager name
     * 
     */
    public String managerName() {
        return this.managerName;
    }

    /**
     * The resource group name
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The resource group name
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetAccessControlRecordPlainArgs() {}

    private GetAccessControlRecordPlainArgs(GetAccessControlRecordPlainArgs $) {
        this.accessControlRecordName = $.accessControlRecordName;
        this.managerName = $.managerName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccessControlRecordPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccessControlRecordPlainArgs $;

        public Builder() {
            $ = new GetAccessControlRecordPlainArgs();
        }

        public Builder(GetAccessControlRecordPlainArgs defaults) {
            $ = new GetAccessControlRecordPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessControlRecordName Name of access control record to be fetched.
         * 
         * @return builder
         * 
         */
        public Builder accessControlRecordName(String accessControlRecordName) {
            $.accessControlRecordName = accessControlRecordName;
            return this;
        }

        /**
         * @param managerName The manager name
         * 
         * @return builder
         * 
         */
        public Builder managerName(String managerName) {
            $.managerName = managerName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public GetAccessControlRecordPlainArgs build() {
            $.accessControlRecordName = Objects.requireNonNull($.accessControlRecordName, "expected parameter 'accessControlRecordName' to be non-null");
            $.managerName = Objects.requireNonNull($.managerName, "expected parameter 'managerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
