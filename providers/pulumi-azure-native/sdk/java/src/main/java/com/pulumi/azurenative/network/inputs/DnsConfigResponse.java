// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class containing DNS settings in a Traffic Manager profile.
 * 
 */
public final class DnsConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final DnsConfigResponse Empty = new DnsConfigResponse();

    /**
     * The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
     * 
     */
    @Import(name="fqdn", required=true)
    private String fqdn;

    /**
     * @return The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }

    /**
     * The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
     * 
     */
    @Import(name="relativeName")
    private @Nullable String relativeName;

    /**
     * @return The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
     * 
     */
    public Optional<String> relativeName() {
        return Optional.ofNullable(this.relativeName);
    }

    /**
     * The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
     * 
     */
    @Import(name="ttl")
    private @Nullable Double ttl;

    /**
     * @return The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
     * 
     */
    public Optional<Double> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private DnsConfigResponse() {}

    private DnsConfigResponse(DnsConfigResponse $) {
        this.fqdn = $.fqdn;
        this.relativeName = $.relativeName;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsConfigResponse $;

        public Builder() {
            $ = new DnsConfigResponse();
        }

        public Builder(DnsConfigResponse defaults) {
            $ = new DnsConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param fqdn The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(String fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        /**
         * @param relativeName The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
         * 
         * @return builder
         * 
         */
        public Builder relativeName(@Nullable String relativeName) {
            $.relativeName = relativeName;
            return this;
        }

        /**
         * @param ttl The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Double ttl) {
            $.ttl = ttl;
            return this;
        }

        public DnsConfigResponse build() {
            $.fqdn = Objects.requireNonNull($.fqdn, "expected parameter 'fqdn' to be non-null");
            return $;
        }
    }

}
