// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.SubResourceResponse;
import com.pulumi.azurenative.network.inputs.VpnNatRuleMappingResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * VpnGatewayNatRule Resource.
 * 
 */
public final class VpnGatewayNatRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final VpnGatewayNatRuleResponse Empty = new VpnGatewayNatRuleResponse();

    /**
     * List of egress VpnSiteLinkConnections.
     * 
     */
    @Import(name="egressVpnSiteLinkConnections", required=true)
    private List<SubResourceResponse> egressVpnSiteLinkConnections;

    public List<SubResourceResponse> egressVpnSiteLinkConnections() {
        return this.egressVpnSiteLinkConnections;
    }

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    public String etag() {
        return this.etag;
    }

    /**
     * The private IP address external mapping for NAT.
     * 
     */
    @Import(name="externalMappings")
    private @Nullable List<VpnNatRuleMappingResponse> externalMappings;

    public Optional<List<VpnNatRuleMappingResponse>> externalMappings() {
        return Optional.ofNullable(this.externalMappings);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * List of ingress VpnSiteLinkConnections.
     * 
     */
    @Import(name="ingressVpnSiteLinkConnections", required=true)
    private List<SubResourceResponse> ingressVpnSiteLinkConnections;

    public List<SubResourceResponse> ingressVpnSiteLinkConnections() {
        return this.ingressVpnSiteLinkConnections;
    }

    /**
     * The private IP address internal mapping for NAT.
     * 
     */
    @Import(name="internalMappings")
    private @Nullable List<VpnNatRuleMappingResponse> internalMappings;

    public Optional<List<VpnNatRuleMappingResponse>> internalMappings() {
        return Optional.ofNullable(this.internalMappings);
    }

    /**
     * The IP Configuration ID this NAT rule applies to.
     * 
     */
    @Import(name="ipConfigurationId")
    private @Nullable String ipConfigurationId;

    public Optional<String> ipConfigurationId() {
        return Optional.ofNullable(this.ipConfigurationId);
    }

    /**
     * The Source NAT direction of a VPN NAT.
     * 
     */
    @Import(name="mode")
    private @Nullable String mode;

    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The provisioning state of the NAT Rule resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private VpnGatewayNatRuleResponse() {}

    private VpnGatewayNatRuleResponse(VpnGatewayNatRuleResponse $) {
        this.egressVpnSiteLinkConnections = $.egressVpnSiteLinkConnections;
        this.etag = $.etag;
        this.externalMappings = $.externalMappings;
        this.id = $.id;
        this.ingressVpnSiteLinkConnections = $.ingressVpnSiteLinkConnections;
        this.internalMappings = $.internalMappings;
        this.ipConfigurationId = $.ipConfigurationId;
        this.mode = $.mode;
        this.name = $.name;
        this.provisioningState = $.provisioningState;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnGatewayNatRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnGatewayNatRuleResponse $;

        public Builder() {
            $ = new VpnGatewayNatRuleResponse();
        }

        public Builder(VpnGatewayNatRuleResponse defaults) {
            $ = new VpnGatewayNatRuleResponse(Objects.requireNonNull(defaults));
        }

        public Builder egressVpnSiteLinkConnections(List<SubResourceResponse> egressVpnSiteLinkConnections) {
            $.egressVpnSiteLinkConnections = egressVpnSiteLinkConnections;
            return this;
        }

        public Builder egressVpnSiteLinkConnections(SubResourceResponse... egressVpnSiteLinkConnections) {
            return egressVpnSiteLinkConnections(List.of(egressVpnSiteLinkConnections));
        }

        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        public Builder externalMappings(@Nullable List<VpnNatRuleMappingResponse> externalMappings) {
            $.externalMappings = externalMappings;
            return this;
        }

        public Builder externalMappings(VpnNatRuleMappingResponse... externalMappings) {
            return externalMappings(List.of(externalMappings));
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder ingressVpnSiteLinkConnections(List<SubResourceResponse> ingressVpnSiteLinkConnections) {
            $.ingressVpnSiteLinkConnections = ingressVpnSiteLinkConnections;
            return this;
        }

        public Builder ingressVpnSiteLinkConnections(SubResourceResponse... ingressVpnSiteLinkConnections) {
            return ingressVpnSiteLinkConnections(List.of(ingressVpnSiteLinkConnections));
        }

        public Builder internalMappings(@Nullable List<VpnNatRuleMappingResponse> internalMappings) {
            $.internalMappings = internalMappings;
            return this;
        }

        public Builder internalMappings(VpnNatRuleMappingResponse... internalMappings) {
            return internalMappings(List.of(internalMappings));
        }

        public Builder ipConfigurationId(@Nullable String ipConfigurationId) {
            $.ipConfigurationId = ipConfigurationId;
            return this;
        }

        public Builder mode(@Nullable String mode) {
            $.mode = mode;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public VpnGatewayNatRuleResponse build() {
            $.egressVpnSiteLinkConnections = Objects.requireNonNull($.egressVpnSiteLinkConnections, "expected parameter 'egressVpnSiteLinkConnections' to be non-null");
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.ingressVpnSiteLinkConnections = Objects.requireNonNull($.ingressVpnSiteLinkConnections, "expected parameter 'ingressVpnSiteLinkConnections' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
