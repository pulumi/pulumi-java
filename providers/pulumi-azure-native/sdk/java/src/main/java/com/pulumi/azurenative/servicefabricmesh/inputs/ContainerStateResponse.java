// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The container state.
 * 
 */
public final class ContainerStateResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContainerStateResponse Empty = new ContainerStateResponse();

    /**
     * Human-readable status of this state.
     * 
     */
    @Import(name="detailStatus")
    private @Nullable String detailStatus;

    public Optional<String> detailStatus() {
        return Optional.ofNullable(this.detailStatus);
    }

    /**
     * The container exit code.
     * 
     */
    @Import(name="exitCode")
    private @Nullable String exitCode;

    public Optional<String> exitCode() {
        return Optional.ofNullable(this.exitCode);
    }

    /**
     * Date/time when the container state finished.
     * 
     */
    @Import(name="finishTime")
    private @Nullable String finishTime;

    public Optional<String> finishTime() {
        return Optional.ofNullable(this.finishTime);
    }

    /**
     * Date/time when the container state started.
     * 
     */
    @Import(name="startTime")
    private @Nullable String startTime;

    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * The state of this container
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private ContainerStateResponse() {}

    private ContainerStateResponse(ContainerStateResponse $) {
        this.detailStatus = $.detailStatus;
        this.exitCode = $.exitCode;
        this.finishTime = $.finishTime;
        this.startTime = $.startTime;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerStateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerStateResponse $;

        public Builder() {
            $ = new ContainerStateResponse();
        }

        public Builder(ContainerStateResponse defaults) {
            $ = new ContainerStateResponse(Objects.requireNonNull(defaults));
        }

        public Builder detailStatus(@Nullable String detailStatus) {
            $.detailStatus = detailStatus;
            return this;
        }

        public Builder exitCode(@Nullable String exitCode) {
            $.exitCode = exitCode;
            return this;
        }

        public Builder finishTime(@Nullable String finishTime) {
            $.finishTime = finishTime;
            return this;
        }

        public Builder startTime(@Nullable String startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public ContainerStateResponse build() {
            return $;
        }
    }

}
