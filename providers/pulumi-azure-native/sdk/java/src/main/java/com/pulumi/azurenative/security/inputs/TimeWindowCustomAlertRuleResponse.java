// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * A custom alert rule that checks if the number of activities (depends on the custom alert type) in a time window is within the given range.
 * 
 */
public final class TimeWindowCustomAlertRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final TimeWindowCustomAlertRuleResponse Empty = new TimeWindowCustomAlertRuleResponse();

    /**
     * The description of the custom alert.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return The description of the custom alert.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * The display name of the custom alert.
     * 
     */
    @Import(name="displayName", required=true)
    private String displayName;

    /**
     * @return The display name of the custom alert.
     * 
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Status of the custom alert.
     * 
     */
    @Import(name="isEnabled", required=true)
    private Boolean isEnabled;

    /**
     * @return Status of the custom alert.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }

    /**
     * The maximum threshold.
     * 
     */
    @Import(name="maxThreshold", required=true)
    private Integer maxThreshold;

    /**
     * @return The maximum threshold.
     * 
     */
    public Integer maxThreshold() {
        return this.maxThreshold;
    }

    /**
     * The minimum threshold.
     * 
     */
    @Import(name="minThreshold", required=true)
    private Integer minThreshold;

    /**
     * @return The minimum threshold.
     * 
     */
    public Integer minThreshold() {
        return this.minThreshold;
    }

    /**
     * The type of the custom alert rule.
     * Expected value is &#39;TimeWindowCustomAlertRule&#39;.
     * 
     */
    @Import(name="ruleType", required=true)
    private String ruleType;

    /**
     * @return The type of the custom alert rule.
     * Expected value is &#39;TimeWindowCustomAlertRule&#39;.
     * 
     */
    public String ruleType() {
        return this.ruleType;
    }

    /**
     * The time window size in iso8601 format.
     * 
     */
    @Import(name="timeWindowSize", required=true)
    private String timeWindowSize;

    /**
     * @return The time window size in iso8601 format.
     * 
     */
    public String timeWindowSize() {
        return this.timeWindowSize;
    }

    private TimeWindowCustomAlertRuleResponse() {}

    private TimeWindowCustomAlertRuleResponse(TimeWindowCustomAlertRuleResponse $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.isEnabled = $.isEnabled;
        this.maxThreshold = $.maxThreshold;
        this.minThreshold = $.minThreshold;
        this.ruleType = $.ruleType;
        this.timeWindowSize = $.timeWindowSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TimeWindowCustomAlertRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TimeWindowCustomAlertRuleResponse $;

        public Builder() {
            $ = new TimeWindowCustomAlertRuleResponse();
        }

        public Builder(TimeWindowCustomAlertRuleResponse defaults) {
            $ = new TimeWindowCustomAlertRuleResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the custom alert.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param displayName The display name of the custom alert.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param isEnabled Status of the custom alert.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param maxThreshold The maximum threshold.
         * 
         * @return builder
         * 
         */
        public Builder maxThreshold(Integer maxThreshold) {
            $.maxThreshold = maxThreshold;
            return this;
        }

        /**
         * @param minThreshold The minimum threshold.
         * 
         * @return builder
         * 
         */
        public Builder minThreshold(Integer minThreshold) {
            $.minThreshold = minThreshold;
            return this;
        }

        /**
         * @param ruleType The type of the custom alert rule.
         * Expected value is &#39;TimeWindowCustomAlertRule&#39;.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(String ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        /**
         * @param timeWindowSize The time window size in iso8601 format.
         * 
         * @return builder
         * 
         */
        public Builder timeWindowSize(String timeWindowSize) {
            $.timeWindowSize = timeWindowSize;
            return this;
        }

        public TimeWindowCustomAlertRuleResponse build() {
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            $.maxThreshold = Objects.requireNonNull($.maxThreshold, "expected parameter 'maxThreshold' to be non-null");
            $.minThreshold = Objects.requireNonNull($.minThreshold, "expected parameter 'minThreshold' to be non-null");
            $.ruleType = Codegen.stringProp("ruleType").arg($.ruleType).require();
            $.timeWindowSize = Objects.requireNonNull($.timeWindowSize, "expected parameter 'timeWindowSize' to be non-null");
            return $;
        }
    }

}
