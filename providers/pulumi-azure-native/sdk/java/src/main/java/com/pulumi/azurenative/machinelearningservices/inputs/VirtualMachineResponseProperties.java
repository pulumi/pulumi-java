// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.VirtualMachineSshCredentialsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualMachineResponseProperties extends com.pulumi.resources.InvokeArgs {

    public static final VirtualMachineResponseProperties Empty = new VirtualMachineResponseProperties();

    /**
     * Public IP address of the virtual machine.
     * 
     */
    @Import(name="address")
    private @Nullable String address;

    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * Admin credentials for virtual machine
     * 
     */
    @Import(name="administratorAccount")
    private @Nullable VirtualMachineSshCredentialsResponse administratorAccount;

    public Optional<VirtualMachineSshCredentialsResponse> administratorAccount() {
        return Optional.ofNullable(this.administratorAccount);
    }

    /**
     * Port open for ssh connections.
     * 
     */
    @Import(name="sshPort")
    private @Nullable Integer sshPort;

    public Optional<Integer> sshPort() {
        return Optional.ofNullable(this.sshPort);
    }

    /**
     * Virtual Machine size
     * 
     */
    @Import(name="virtualMachineSize")
    private @Nullable String virtualMachineSize;

    public Optional<String> virtualMachineSize() {
        return Optional.ofNullable(this.virtualMachineSize);
    }

    private VirtualMachineResponseProperties() {}

    private VirtualMachineResponseProperties(VirtualMachineResponseProperties $) {
        this.address = $.address;
        this.administratorAccount = $.administratorAccount;
        this.sshPort = $.sshPort;
        this.virtualMachineSize = $.virtualMachineSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineResponseProperties $;

        public Builder() {
            $ = new VirtualMachineResponseProperties();
        }

        public Builder(VirtualMachineResponseProperties defaults) {
            $ = new VirtualMachineResponseProperties(Objects.requireNonNull(defaults));
        }

        public Builder address(@Nullable String address) {
            $.address = address;
            return this;
        }

        public Builder administratorAccount(@Nullable VirtualMachineSshCredentialsResponse administratorAccount) {
            $.administratorAccount = administratorAccount;
            return this;
        }

        public Builder sshPort(@Nullable Integer sshPort) {
            $.sshPort = sshPort;
            return this;
        }

        public Builder virtualMachineSize(@Nullable String virtualMachineSize) {
            $.virtualMachineSize = virtualMachineSize;
            return this;
        }

        public VirtualMachineResponseProperties build() {
            return $;
        }
    }

}
