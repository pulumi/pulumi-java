// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.azurenative.costmanagement.inputs.SourceCostAllocationResourceArgs;
import com.pulumi.azurenative.costmanagement.inputs.TargetCostAllocationResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Resource details of the cost allocation rule
 * 
 */
public final class CostAllocationRuleDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CostAllocationRuleDetailsArgs Empty = new CostAllocationRuleDetailsArgs();

    /**
     * Source resources for cost allocation. At this time, this list can contain no more than one element.
     * 
     */
    @Import(name="sourceResources")
      private final @Nullable Output<List<SourceCostAllocationResourceArgs>> sourceResources;

    public Output<List<SourceCostAllocationResourceArgs>> sourceResources() {
        return this.sourceResources == null ? Codegen.empty() : this.sourceResources;
    }

    /**
     * Target resources for cost allocation. At this time, this list can contain no more than one element.
     * 
     */
    @Import(name="targetResources")
      private final @Nullable Output<List<TargetCostAllocationResourceArgs>> targetResources;

    public Output<List<TargetCostAllocationResourceArgs>> targetResources() {
        return this.targetResources == null ? Codegen.empty() : this.targetResources;
    }

    public CostAllocationRuleDetailsArgs(
        @Nullable Output<List<SourceCostAllocationResourceArgs>> sourceResources,
        @Nullable Output<List<TargetCostAllocationResourceArgs>> targetResources) {
        this.sourceResources = sourceResources;
        this.targetResources = targetResources;
    }

    private CostAllocationRuleDetailsArgs() {
        this.sourceResources = Codegen.empty();
        this.targetResources = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CostAllocationRuleDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<SourceCostAllocationResourceArgs>> sourceResources;
        private @Nullable Output<List<TargetCostAllocationResourceArgs>> targetResources;

        public Builder() {
    	      // Empty
        }

        public Builder(CostAllocationRuleDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceResources = defaults.sourceResources;
    	      this.targetResources = defaults.targetResources;
        }

        public Builder sourceResources(@Nullable Output<List<SourceCostAllocationResourceArgs>> sourceResources) {
            this.sourceResources = sourceResources;
            return this;
        }
        public Builder sourceResources(@Nullable List<SourceCostAllocationResourceArgs> sourceResources) {
            this.sourceResources = Codegen.ofNullable(sourceResources);
            return this;
        }
        public Builder sourceResources(SourceCostAllocationResourceArgs... sourceResources) {
            return sourceResources(List.of(sourceResources));
        }
        public Builder targetResources(@Nullable Output<List<TargetCostAllocationResourceArgs>> targetResources) {
            this.targetResources = targetResources;
            return this;
        }
        public Builder targetResources(@Nullable List<TargetCostAllocationResourceArgs> targetResources) {
            this.targetResources = Codegen.ofNullable(targetResources);
            return this;
        }
        public Builder targetResources(TargetCostAllocationResourceArgs... targetResources) {
            return targetResources(List.of(targetResources));
        }        public CostAllocationRuleDetailsArgs build() {
            return new CostAllocationRuleDetailsArgs(sourceResources, targetResources);
        }
    }
}
