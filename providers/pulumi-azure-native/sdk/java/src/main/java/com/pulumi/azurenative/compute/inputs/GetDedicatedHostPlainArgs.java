// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDedicatedHostPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDedicatedHostPlainArgs Empty = new GetDedicatedHostPlainArgs();

    /**
     * The expand expression to apply on the operation.
     * 
     */
    @Import(name="expand")
    private @Nullable String expand;

    /**
     * @return The expand expression to apply on the operation.
     * 
     */
    public Optional<String> expand() {
        return Optional.ofNullable(this.expand);
    }

    /**
     * The name of the dedicated host group.
     * 
     */
    @Import(name="hostGroupName", required=true)
    private String hostGroupName;

    /**
     * @return The name of the dedicated host group.
     * 
     */
    public String hostGroupName() {
        return this.hostGroupName;
    }

    /**
     * The name of the dedicated host.
     * 
     */
    @Import(name="hostName", required=true)
    private String hostName;

    /**
     * @return The name of the dedicated host.
     * 
     */
    public String hostName() {
        return this.hostName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetDedicatedHostPlainArgs() {}

    private GetDedicatedHostPlainArgs(GetDedicatedHostPlainArgs $) {
        this.expand = $.expand;
        this.hostGroupName = $.hostGroupName;
        this.hostName = $.hostName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDedicatedHostPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDedicatedHostPlainArgs $;

        public Builder() {
            $ = new GetDedicatedHostPlainArgs();
        }

        public Builder(GetDedicatedHostPlainArgs defaults) {
            $ = new GetDedicatedHostPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expand The expand expression to apply on the operation.
         * 
         * @return builder
         * 
         */
        public Builder expand(@Nullable String expand) {
            $.expand = expand;
            return this;
        }

        /**
         * @param hostGroupName The name of the dedicated host group.
         * 
         * @return builder
         * 
         */
        public Builder hostGroupName(String hostGroupName) {
            $.hostGroupName = hostGroupName;
            return this;
        }

        /**
         * @param hostName The name of the dedicated host.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public GetDedicatedHostPlainArgs build() {
            $.hostGroupName = Objects.requireNonNull($.hostGroupName, "expected parameter 'hostGroupName' to be non-null");
            $.hostName = Objects.requireNonNull($.hostName, "expected parameter 'hostName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
