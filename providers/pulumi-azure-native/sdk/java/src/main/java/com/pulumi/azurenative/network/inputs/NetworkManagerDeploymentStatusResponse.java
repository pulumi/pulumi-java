// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Network Manager Deployment Status.
 * 
 */
public final class NetworkManagerDeploymentStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final NetworkManagerDeploymentStatusResponse Empty = new NetworkManagerDeploymentStatusResponse();

    /**
     * Commit Time.
     * 
     */
    @Import(name="commitTime")
    private @Nullable String commitTime;

    /**
     * @return Commit Time.
     * 
     */
    public Optional<String> commitTime() {
        return Optional.ofNullable(this.commitTime);
    }

    /**
     * List of configuration ids.
     * 
     */
    @Import(name="configurationIds")
    private @Nullable List<String> configurationIds;

    /**
     * @return List of configuration ids.
     * 
     */
    public Optional<List<String>> configurationIds() {
        return Optional.ofNullable(this.configurationIds);
    }

    /**
     * Deployment Status.
     * 
     */
    @Import(name="deploymentStatus")
    private @Nullable String deploymentStatus;

    /**
     * @return Deployment Status.
     * 
     */
    public Optional<String> deploymentStatus() {
        return Optional.ofNullable(this.deploymentStatus);
    }

    /**
     * Configuration Deployment Type.
     * 
     */
    @Import(name="deploymentType")
    private @Nullable String deploymentType;

    /**
     * @return Configuration Deployment Type.
     * 
     */
    public Optional<String> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }

    /**
     * Error Message.
     * 
     */
    @Import(name="errorMessage")
    private @Nullable String errorMessage;

    /**
     * @return Error Message.
     * 
     */
    public Optional<String> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }

    /**
     * Region Name.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return Region Name.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    private NetworkManagerDeploymentStatusResponse() {}

    private NetworkManagerDeploymentStatusResponse(NetworkManagerDeploymentStatusResponse $) {
        this.commitTime = $.commitTime;
        this.configurationIds = $.configurationIds;
        this.deploymentStatus = $.deploymentStatus;
        this.deploymentType = $.deploymentType;
        this.errorMessage = $.errorMessage;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagerDeploymentStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagerDeploymentStatusResponse $;

        public Builder() {
            $ = new NetworkManagerDeploymentStatusResponse();
        }

        public Builder(NetworkManagerDeploymentStatusResponse defaults) {
            $ = new NetworkManagerDeploymentStatusResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param commitTime Commit Time.
         * 
         * @return builder
         * 
         */
        public Builder commitTime(@Nullable String commitTime) {
            $.commitTime = commitTime;
            return this;
        }

        /**
         * @param configurationIds List of configuration ids.
         * 
         * @return builder
         * 
         */
        public Builder configurationIds(@Nullable List<String> configurationIds) {
            $.configurationIds = configurationIds;
            return this;
        }

        /**
         * @param configurationIds List of configuration ids.
         * 
         * @return builder
         * 
         */
        public Builder configurationIds(String... configurationIds) {
            return configurationIds(List.of(configurationIds));
        }

        /**
         * @param deploymentStatus Deployment Status.
         * 
         * @return builder
         * 
         */
        public Builder deploymentStatus(@Nullable String deploymentStatus) {
            $.deploymentStatus = deploymentStatus;
            return this;
        }

        /**
         * @param deploymentType Configuration Deployment Type.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(@Nullable String deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        /**
         * @param errorMessage Error Message.
         * 
         * @return builder
         * 
         */
        public Builder errorMessage(@Nullable String errorMessage) {
            $.errorMessage = errorMessage;
            return this;
        }

        /**
         * @param region Region Name.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        public NetworkManagerDeploymentStatusResponse build() {
            return $;
        }
    }

}
