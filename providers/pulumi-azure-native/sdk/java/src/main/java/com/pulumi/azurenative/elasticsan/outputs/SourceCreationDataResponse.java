// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.elasticsan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SourceCreationDataResponse {
    /**
     * @return This enumerates the possible sources of a volume creation.
     * 
     */
    private final String createSource;
    /**
     * @return If createOption is Copy, this is the ARM id of the source snapshot or disk. If createOption is Restore, this is the ARM-like id of the source disk restore point.
     * 
     */
    private final @Nullable String sourceUri;

    @CustomType.Constructor
    private SourceCreationDataResponse(
        @CustomType.Parameter("createSource") String createSource,
        @CustomType.Parameter("sourceUri") @Nullable String sourceUri) {
        this.createSource = createSource;
        this.sourceUri = sourceUri;
    }

    /**
     * @return This enumerates the possible sources of a volume creation.
     * 
     */
    public String createSource() {
        return this.createSource;
    }
    /**
     * @return If createOption is Copy, this is the ARM id of the source snapshot or disk. If createOption is Restore, this is the ARM-like id of the source disk restore point.
     * 
     */
    public Optional<String> sourceUri() {
        return Optional.ofNullable(this.sourceUri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SourceCreationDataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createSource;
        private @Nullable String sourceUri;

        public Builder() {
    	      // Empty
        }

        public Builder(SourceCreationDataResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createSource = defaults.createSource;
    	      this.sourceUri = defaults.sourceUri;
        }

        public Builder createSource(String createSource) {
            this.createSource = Objects.requireNonNull(createSource);
            return this;
        }
        public Builder sourceUri(@Nullable String sourceUri) {
            this.sourceUri = sourceUri;
            return this;
        }        public SourceCreationDataResponse build() {
            return new SourceCreationDataResponse(createSource, sourceUri);
        }
    }
}
