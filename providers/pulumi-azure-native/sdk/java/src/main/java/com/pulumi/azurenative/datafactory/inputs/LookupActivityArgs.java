// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.ActivityDependencyArgs;
import com.pulumi.azurenative.datafactory.inputs.ActivityPolicyArgs;
import com.pulumi.azurenative.datafactory.inputs.AmazonMWSSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AmazonRdsForOracleSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AmazonRdsForSqlServerSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AmazonRedshiftSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AvroSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AzureBlobFSSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AzureDataExplorerSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AzureDataLakeStoreSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AzureDatabricksDeltaLakeSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AzureMariaDBSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AzureMySqlSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AzurePostgreSqlSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AzureSqlSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.AzureTableSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.BinarySourceArgs;
import com.pulumi.azurenative.datafactory.inputs.BlobSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.CassandraSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.CommonDataServiceForAppsSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.ConcurSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.CosmosDbMongoDbApiSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.CosmosDbSqlApiSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.CouchbaseSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.DatasetReferenceArgs;
import com.pulumi.azurenative.datafactory.inputs.Db2SourceArgs;
import com.pulumi.azurenative.datafactory.inputs.DelimitedTextSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.DocumentDbCollectionSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.DrillSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.DynamicsAXSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.DynamicsCrmSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.DynamicsSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.EloquaSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.ExcelSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.FileSystemSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.GoogleAdWordsSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.GoogleBigQuerySourceArgs;
import com.pulumi.azurenative.datafactory.inputs.GreenplumSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.HBaseSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.HdfsSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.HiveSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.HttpSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.HubspotSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.ImpalaSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.InformixSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.JiraSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.JsonSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceArgs;
import com.pulumi.azurenative.datafactory.inputs.MagentoSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.MariaDBSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.MarketoSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.MicrosoftAccessSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.MongoDbAtlasSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.MongoDbSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.MongoDbV2SourceArgs;
import com.pulumi.azurenative.datafactory.inputs.MySqlSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.NetezzaSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.ODataSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.OdbcSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.Office365SourceArgs;
import com.pulumi.azurenative.datafactory.inputs.OracleServiceCloudSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.OracleSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.OrcSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.ParquetSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.PaypalSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.PhoenixSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.PostgreSqlSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.PrestoSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.QuickBooksSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.RelationalSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.ResponsysSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.RestSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SalesforceMarketingCloudSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SalesforceServiceCloudSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SalesforceSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SapBwSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SapCloudForCustomerSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SapEccSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SapHanaSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SapOpenHubSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SapTableSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.ServiceNowSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SharePointOnlineListSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.ShopifySourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SnowflakeSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SparkSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SqlDWSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SqlMISourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SqlServerSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SqlSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SquareSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.SybaseSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.TabularSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.TeradataSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.UserPropertyArgs;
import com.pulumi.azurenative.datafactory.inputs.VerticaSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.WebSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.XeroSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.XmlSourceArgs;
import com.pulumi.azurenative.datafactory.inputs.ZohoSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Lookup activity.
 * 
 */
public final class LookupActivityArgs extends com.pulumi.resources.ResourceArgs {

    public static final LookupActivityArgs Empty = new LookupActivityArgs();

    /**
     * Lookup activity dataset reference.
     * 
     */
    @Import(name="dataset", required=true)
    private Output<DatasetReferenceArgs> dataset;

    /**
     * @return Lookup activity dataset reference.
     * 
     */
    public Output<DatasetReferenceArgs> dataset() {
        return this.dataset;
    }

    /**
     * Activity depends on condition.
     * 
     */
    @Import(name="dependsOn")
    private @Nullable Output<List<ActivityDependencyArgs>> dependsOn;

    /**
     * @return Activity depends on condition.
     * 
     */
    public Optional<Output<List<ActivityDependencyArgs>>> dependsOn() {
        return Optional.ofNullable(this.dependsOn);
    }

    /**
     * Activity description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Activity description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
     * 
     */
    @Import(name="firstRowOnly")
    private @Nullable Output<Object> firstRowOnly;

    /**
     * @return Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Output<Object>> firstRowOnly() {
        return Optional.ofNullable(this.firstRowOnly);
    }

    /**
     * Linked service reference.
     * 
     */
    @Import(name="linkedServiceName")
    private @Nullable Output<LinkedServiceReferenceArgs> linkedServiceName;

    /**
     * @return Linked service reference.
     * 
     */
    public Optional<Output<LinkedServiceReferenceArgs>> linkedServiceName() {
        return Optional.ofNullable(this.linkedServiceName);
    }

    /**
     * Activity name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Activity name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Activity policy.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<ActivityPolicyArgs> policy;

    /**
     * @return Activity policy.
     * 
     */
    public Optional<Output<ActivityPolicyArgs>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Dataset-specific source properties, same as copy activity source.
     * 
     */
    @Import(name="source", required=true)
    private Output<Object> source;

    /**
     * @return Dataset-specific source properties, same as copy activity source.
     * 
     */
    public Output<Object> source() {
        return this.source;
    }

    /**
     * Type of activity.
     * Expected value is &#39;Lookup&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of activity.
     * Expected value is &#39;Lookup&#39;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * Activity user properties.
     * 
     */
    @Import(name="userProperties")
    private @Nullable Output<List<UserPropertyArgs>> userProperties;

    /**
     * @return Activity user properties.
     * 
     */
    public Optional<Output<List<UserPropertyArgs>>> userProperties() {
        return Optional.ofNullable(this.userProperties);
    }

    private LookupActivityArgs() {}

    private LookupActivityArgs(LookupActivityArgs $) {
        this.dataset = $.dataset;
        this.dependsOn = $.dependsOn;
        this.description = $.description;
        this.firstRowOnly = $.firstRowOnly;
        this.linkedServiceName = $.linkedServiceName;
        this.name = $.name;
        this.policy = $.policy;
        this.source = $.source;
        this.type = $.type;
        this.userProperties = $.userProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LookupActivityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LookupActivityArgs $;

        public Builder() {
            $ = new LookupActivityArgs();
        }

        public Builder(LookupActivityArgs defaults) {
            $ = new LookupActivityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataset Lookup activity dataset reference.
         * 
         * @return builder
         * 
         */
        public Builder dataset(Output<DatasetReferenceArgs> dataset) {
            $.dataset = dataset;
            return this;
        }

        /**
         * @param dataset Lookup activity dataset reference.
         * 
         * @return builder
         * 
         */
        public Builder dataset(DatasetReferenceArgs dataset) {
            return dataset(Output.of(dataset));
        }

        /**
         * @param dependsOn Activity depends on condition.
         * 
         * @return builder
         * 
         */
        public Builder dependsOn(@Nullable Output<List<ActivityDependencyArgs>> dependsOn) {
            $.dependsOn = dependsOn;
            return this;
        }

        /**
         * @param dependsOn Activity depends on condition.
         * 
         * @return builder
         * 
         */
        public Builder dependsOn(List<ActivityDependencyArgs> dependsOn) {
            return dependsOn(Output.of(dependsOn));
        }

        /**
         * @param dependsOn Activity depends on condition.
         * 
         * @return builder
         * 
         */
        public Builder dependsOn(ActivityDependencyArgs... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }

        /**
         * @param description Activity description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Activity description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param firstRowOnly Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
         * 
         * @return builder
         * 
         */
        public Builder firstRowOnly(@Nullable Output<Object> firstRowOnly) {
            $.firstRowOnly = firstRowOnly;
            return this;
        }

        /**
         * @param firstRowOnly Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
         * 
         * @return builder
         * 
         */
        public Builder firstRowOnly(Object firstRowOnly) {
            return firstRowOnly(Output.of(firstRowOnly));
        }

        /**
         * @param linkedServiceName Linked service reference.
         * 
         * @return builder
         * 
         */
        public Builder linkedServiceName(@Nullable Output<LinkedServiceReferenceArgs> linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        /**
         * @param linkedServiceName Linked service reference.
         * 
         * @return builder
         * 
         */
        public Builder linkedServiceName(LinkedServiceReferenceArgs linkedServiceName) {
            return linkedServiceName(Output.of(linkedServiceName));
        }

        /**
         * @param name Activity name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Activity name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policy Activity policy.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<ActivityPolicyArgs> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy Activity policy.
         * 
         * @return builder
         * 
         */
        public Builder policy(ActivityPolicyArgs policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param source Dataset-specific source properties, same as copy activity source.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<Object> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Dataset-specific source properties, same as copy activity source.
         * 
         * @return builder
         * 
         */
        public Builder source(Object source) {
            return source(Output.of(source));
        }

        /**
         * @param type Type of activity.
         * Expected value is &#39;Lookup&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of activity.
         * Expected value is &#39;Lookup&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param userProperties Activity user properties.
         * 
         * @return builder
         * 
         */
        public Builder userProperties(@Nullable Output<List<UserPropertyArgs>> userProperties) {
            $.userProperties = userProperties;
            return this;
        }

        /**
         * @param userProperties Activity user properties.
         * 
         * @return builder
         * 
         */
        public Builder userProperties(List<UserPropertyArgs> userProperties) {
            return userProperties(Output.of(userProperties));
        }

        /**
         * @param userProperties Activity user properties.
         * 
         * @return builder
         * 
         */
        public Builder userProperties(UserPropertyArgs... userProperties) {
            return userProperties(List.of(userProperties));
        }

        public LookupActivityArgs build() {
            $.dataset = Objects.requireNonNull($.dataset, "expected parameter 'dataset' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.source = Objects.requireNonNull($.source, "expected parameter 'source' to be non-null");
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
