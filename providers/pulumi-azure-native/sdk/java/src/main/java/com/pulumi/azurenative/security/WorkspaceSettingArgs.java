// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceSettingArgs Empty = new WorkspaceSettingArgs();

    /**
     * All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    public Output<String> scope() {
        return this.scope;
    }

    /**
     * The full Azure ID of the workspace to save the data in
     * 
     */
    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     * Name of the security setting
     * 
     */
    @Import(name="workspaceSettingName")
    private @Nullable Output<String> workspaceSettingName;

    public Optional<Output<String>> workspaceSettingName() {
        return Optional.ofNullable(this.workspaceSettingName);
    }

    private WorkspaceSettingArgs() {}

    private WorkspaceSettingArgs(WorkspaceSettingArgs $) {
        this.scope = $.scope;
        this.workspaceId = $.workspaceId;
        this.workspaceSettingName = $.workspaceSettingName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceSettingArgs $;

        public Builder() {
            $ = new WorkspaceSettingArgs();
        }

        public Builder(WorkspaceSettingArgs defaults) {
            $ = new WorkspaceSettingArgs(Objects.requireNonNull(defaults));
        }

        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public Builder workspaceSettingName(@Nullable Output<String> workspaceSettingName) {
            $.workspaceSettingName = workspaceSettingName;
            return this;
        }

        public Builder workspaceSettingName(String workspaceSettingName) {
            return workspaceSettingName(Output.of(workspaceSettingName));
        }

        public WorkspaceSettingArgs build() {
            $.scope = Objects.requireNonNull($.scope, "expected parameter 'scope' to be non-null");
            $.workspaceId = Objects.requireNonNull($.workspaceId, "expected parameter 'workspaceId' to be non-null");
            return $;
        }
    }

}
