// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.elastic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Company information of the user to be passed to partners.
 * 
 */
public final class CompanyInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final CompanyInfoArgs Empty = new CompanyInfoArgs();

    /**
     * Business of the company
     * 
     */
    @Import(name="business")
      private final @Nullable Output<String> business;

    public Output<String> business() {
        return this.business == null ? Codegen.empty() : this.business;
    }

    /**
     * Country of the company location.
     * 
     */
    @Import(name="country")
      private final @Nullable Output<String> country;

    public Output<String> country() {
        return this.country == null ? Codegen.empty() : this.country;
    }

    /**
     * Domain of the company
     * 
     */
    @Import(name="domain")
      private final @Nullable Output<String> domain;

    public Output<String> domain() {
        return this.domain == null ? Codegen.empty() : this.domain;
    }

    /**
     * Number of employees in the company
     * 
     */
    @Import(name="employeesNumber")
      private final @Nullable Output<String> employeesNumber;

    public Output<String> employeesNumber() {
        return this.employeesNumber == null ? Codegen.empty() : this.employeesNumber;
    }

    /**
     * State of the company location.
     * 
     */
    @Import(name="state")
      private final @Nullable Output<String> state;

    public Output<String> state() {
        return this.state == null ? Codegen.empty() : this.state;
    }

    public CompanyInfoArgs(
        @Nullable Output<String> business,
        @Nullable Output<String> country,
        @Nullable Output<String> domain,
        @Nullable Output<String> employeesNumber,
        @Nullable Output<String> state) {
        this.business = business;
        this.country = country;
        this.domain = domain;
        this.employeesNumber = employeesNumber;
        this.state = state;
    }

    private CompanyInfoArgs() {
        this.business = Codegen.empty();
        this.country = Codegen.empty();
        this.domain = Codegen.empty();
        this.employeesNumber = Codegen.empty();
        this.state = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CompanyInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> business;
        private @Nullable Output<String> country;
        private @Nullable Output<String> domain;
        private @Nullable Output<String> employeesNumber;
        private @Nullable Output<String> state;

        public Builder() {
    	      // Empty
        }

        public Builder(CompanyInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.business = defaults.business;
    	      this.country = defaults.country;
    	      this.domain = defaults.domain;
    	      this.employeesNumber = defaults.employeesNumber;
    	      this.state = defaults.state;
        }

        public Builder business(@Nullable Output<String> business) {
            this.business = business;
            return this;
        }
        public Builder business(@Nullable String business) {
            this.business = Codegen.ofNullable(business);
            return this;
        }
        public Builder country(@Nullable Output<String> country) {
            this.country = country;
            return this;
        }
        public Builder country(@Nullable String country) {
            this.country = Codegen.ofNullable(country);
            return this;
        }
        public Builder domain(@Nullable Output<String> domain) {
            this.domain = domain;
            return this;
        }
        public Builder domain(@Nullable String domain) {
            this.domain = Codegen.ofNullable(domain);
            return this;
        }
        public Builder employeesNumber(@Nullable Output<String> employeesNumber) {
            this.employeesNumber = employeesNumber;
            return this;
        }
        public Builder employeesNumber(@Nullable String employeesNumber) {
            this.employeesNumber = Codegen.ofNullable(employeesNumber);
            return this;
        }
        public Builder state(@Nullable Output<String> state) {
            this.state = state;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = Codegen.ofNullable(state);
            return this;
        }        public CompanyInfoArgs build() {
            return new CompanyInfoArgs(business, country, domain, employeesNumber, state);
        }
    }
}
