// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.portal.inputs;

import com.pulumi.azurenative.portal.inputs.StorageProfileResponse;
import com.pulumi.azurenative.portal.inputs.TerminalSettingsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The cloud shell user settings properties.
 * 
 */
public final class UserPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final UserPropertiesResponse Empty = new UserPropertiesResponse();

    /**
     * The preferred location of the cloud shell.
     * 
     */
    @Import(name="preferredLocation", required=true)
    private String preferredLocation;

    public String preferredLocation() {
        return this.preferredLocation;
    }

    /**
     * The operating system type of the cloud shell. Deprecated, use preferredShellType.
     * 
     */
    @Import(name="preferredOsType", required=true)
    private String preferredOsType;

    public String preferredOsType() {
        return this.preferredOsType;
    }

    /**
     * The shell type of the cloud shell.
     * 
     */
    @Import(name="preferredShellType", required=true)
    private String preferredShellType;

    public String preferredShellType() {
        return this.preferredShellType;
    }

    /**
     * The storage profile of the user settings.
     * 
     */
    @Import(name="storageProfile", required=true)
    private StorageProfileResponse storageProfile;

    public StorageProfileResponse storageProfile() {
        return this.storageProfile;
    }

    /**
     * Settings for terminal appearance.
     * 
     */
    @Import(name="terminalSettings", required=true)
    private TerminalSettingsResponse terminalSettings;

    public TerminalSettingsResponse terminalSettings() {
        return this.terminalSettings;
    }

    private UserPropertiesResponse() {}

    private UserPropertiesResponse(UserPropertiesResponse $) {
        this.preferredLocation = $.preferredLocation;
        this.preferredOsType = $.preferredOsType;
        this.preferredShellType = $.preferredShellType;
        this.storageProfile = $.storageProfile;
        this.terminalSettings = $.terminalSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPropertiesResponse $;

        public Builder() {
            $ = new UserPropertiesResponse();
        }

        public Builder(UserPropertiesResponse defaults) {
            $ = new UserPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder preferredLocation(String preferredLocation) {
            $.preferredLocation = preferredLocation;
            return this;
        }

        public Builder preferredOsType(String preferredOsType) {
            $.preferredOsType = preferredOsType;
            return this;
        }

        public Builder preferredShellType(String preferredShellType) {
            $.preferredShellType = preferredShellType;
            return this;
        }

        public Builder storageProfile(StorageProfileResponse storageProfile) {
            $.storageProfile = storageProfile;
            return this;
        }

        public Builder terminalSettings(TerminalSettingsResponse terminalSettings) {
            $.terminalSettings = terminalSettings;
            return this;
        }

        public UserPropertiesResponse build() {
            $.preferredLocation = Objects.requireNonNull($.preferredLocation, "expected parameter 'preferredLocation' to be non-null");
            $.preferredOsType = Objects.requireNonNull($.preferredOsType, "expected parameter 'preferredOsType' to be non-null");
            $.preferredShellType = Objects.requireNonNull($.preferredShellType, "expected parameter 'preferredShellType' to be non-null");
            $.storageProfile = Objects.requireNonNull($.storageProfile, "expected parameter 'storageProfile' to be non-null");
            $.terminalSettings = Objects.requireNonNull($.terminalSettings, "expected parameter 'terminalSettings' to be non-null");
            return $;
        }
    }

}
