// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.portal.inputs;

import com.pulumi.azurenative.portal.inputs.StorageProfileResponse;
import com.pulumi.azurenative.portal.inputs.TerminalSettingsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The cloud shell user settings properties.
 * 
 */
public final class UserPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final UserPropertiesResponse Empty = new UserPropertiesResponse();

    /**
     * The preferred location of the cloud shell.
     * 
     */
    @Import(name="preferredLocation", required=true)
      private final String preferredLocation;

    public String preferredLocation() {
        return this.preferredLocation;
    }

    /**
     * The operating system type of the cloud shell. Deprecated, use preferredShellType.
     * 
     */
    @Import(name="preferredOsType", required=true)
      private final String preferredOsType;

    public String preferredOsType() {
        return this.preferredOsType;
    }

    /**
     * The shell type of the cloud shell.
     * 
     */
    @Import(name="preferredShellType", required=true)
      private final String preferredShellType;

    public String preferredShellType() {
        return this.preferredShellType;
    }

    /**
     * The storage profile of the user settings.
     * 
     */
    @Import(name="storageProfile", required=true)
      private final StorageProfileResponse storageProfile;

    public StorageProfileResponse storageProfile() {
        return this.storageProfile;
    }

    /**
     * Settings for terminal appearance.
     * 
     */
    @Import(name="terminalSettings", required=true)
      private final TerminalSettingsResponse terminalSettings;

    public TerminalSettingsResponse terminalSettings() {
        return this.terminalSettings;
    }

    public UserPropertiesResponse(
        String preferredLocation,
        String preferredOsType,
        String preferredShellType,
        StorageProfileResponse storageProfile,
        TerminalSettingsResponse terminalSettings) {
        this.preferredLocation = Objects.requireNonNull(preferredLocation, "expected parameter 'preferredLocation' to be non-null");
        this.preferredOsType = Objects.requireNonNull(preferredOsType, "expected parameter 'preferredOsType' to be non-null");
        this.preferredShellType = Objects.requireNonNull(preferredShellType, "expected parameter 'preferredShellType' to be non-null");
        this.storageProfile = Objects.requireNonNull(storageProfile, "expected parameter 'storageProfile' to be non-null");
        this.terminalSettings = Objects.requireNonNull(terminalSettings, "expected parameter 'terminalSettings' to be non-null");
    }

    private UserPropertiesResponse() {
        this.preferredLocation = null;
        this.preferredOsType = null;
        this.preferredShellType = null;
        this.storageProfile = null;
        this.terminalSettings = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String preferredLocation;
        private String preferredOsType;
        private String preferredShellType;
        private StorageProfileResponse storageProfile;
        private TerminalSettingsResponse terminalSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(UserPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.preferredLocation = defaults.preferredLocation;
    	      this.preferredOsType = defaults.preferredOsType;
    	      this.preferredShellType = defaults.preferredShellType;
    	      this.storageProfile = defaults.storageProfile;
    	      this.terminalSettings = defaults.terminalSettings;
        }

        public Builder preferredLocation(String preferredLocation) {
            this.preferredLocation = Objects.requireNonNull(preferredLocation);
            return this;
        }
        public Builder preferredOsType(String preferredOsType) {
            this.preferredOsType = Objects.requireNonNull(preferredOsType);
            return this;
        }
        public Builder preferredShellType(String preferredShellType) {
            this.preferredShellType = Objects.requireNonNull(preferredShellType);
            return this;
        }
        public Builder storageProfile(StorageProfileResponse storageProfile) {
            this.storageProfile = Objects.requireNonNull(storageProfile);
            return this;
        }
        public Builder terminalSettings(TerminalSettingsResponse terminalSettings) {
            this.terminalSettings = Objects.requireNonNull(terminalSettings);
            return this;
        }        public UserPropertiesResponse build() {
            return new UserPropertiesResponse(preferredLocation, preferredOsType, preferredShellType, storageProfile, terminalSettings);
        }
    }
}
