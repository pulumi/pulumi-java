// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.enums.DiskEncryptionSetIdentityType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks.
 * 
 */
public final class EncryptionSetIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final EncryptionSetIdentityArgs Empty = new EncryptionSetIdentityArgs();

    /**
     * The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys.
     * 
     */
    @Import(name="type")
    private @Nullable Output<Either<String,DiskEncryptionSetIdentityType>> type;

    /**
     * @return The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys.
     * 
     */
    public Optional<Output<Either<String,DiskEncryptionSetIdentityType>>> type() {
        return Optional.ofNullable(this.type);
    }

    private EncryptionSetIdentityArgs() {}

    private EncryptionSetIdentityArgs(EncryptionSetIdentityArgs $) {
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionSetIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionSetIdentityArgs $;

        public Builder() {
            $ = new EncryptionSetIdentityArgs();
        }

        public Builder(EncryptionSetIdentityArgs defaults) {
            $ = new EncryptionSetIdentityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<Either<String,DiskEncryptionSetIdentityType>> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys.
         * 
         * @return builder
         * 
         */
        public Builder type(Either<String,DiskEncryptionSetIdentityType> type) {
            return type(Output.of(type));
        }

        /**
         * @param type The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Either.ofLeft(type));
        }

        /**
         * @param type The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys.
         * 
         * @return builder
         * 
         */
        public Builder type(DiskEncryptionSetIdentityType type) {
            return type(Either.ofRight(type));
        }

        public EncryptionSetIdentityArgs build() {
            return $;
        }
    }

}
