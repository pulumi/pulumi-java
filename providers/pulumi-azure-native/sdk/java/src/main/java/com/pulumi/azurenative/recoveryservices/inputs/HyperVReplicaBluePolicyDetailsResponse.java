// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Hyper-V Replica Blue specific protection profile details.
 * 
 */
public final class HyperVReplicaBluePolicyDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final HyperVReplicaBluePolicyDetailsResponse Empty = new HyperVReplicaBluePolicyDetailsResponse();

    /**
     * A value indicating the authentication type.
     * 
     */
    @Import(name="allowedAuthenticationType")
    private @Nullable Integer allowedAuthenticationType;

    public Optional<Integer> allowedAuthenticationType() {
        return Optional.ofNullable(this.allowedAuthenticationType);
    }

    /**
     * A value indicating the application consistent frequency.
     * 
     */
    @Import(name="applicationConsistentSnapshotFrequencyInHours")
    private @Nullable Integer applicationConsistentSnapshotFrequencyInHours;

    public Optional<Integer> applicationConsistentSnapshotFrequencyInHours() {
        return Optional.ofNullable(this.applicationConsistentSnapshotFrequencyInHours);
    }

    /**
     * A value indicating whether compression has to be enabled.
     * 
     */
    @Import(name="compression")
    private @Nullable String compression;

    public Optional<String> compression() {
        return Optional.ofNullable(this.compression);
    }

    /**
     * A value indicating whether IR is online.
     * 
     */
    @Import(name="initialReplicationMethod")
    private @Nullable String initialReplicationMethod;

    public Optional<String> initialReplicationMethod() {
        return Optional.ofNullable(this.initialReplicationMethod);
    }

    /**
     * Gets the class type. Overridden in derived classes.
     * Expected value is &#39;HyperVReplica2012R2&#39;.
     * 
     */
    @Import(name="instanceType", required=true)
    private String instanceType;

    public String instanceType() {
        return this.instanceType;
    }

    /**
     * A value indicating the offline IR export path.
     * 
     */
    @Import(name="offlineReplicationExportPath")
    private @Nullable String offlineReplicationExportPath;

    public Optional<String> offlineReplicationExportPath() {
        return Optional.ofNullable(this.offlineReplicationExportPath);
    }

    /**
     * A value indicating the offline IR import path.
     * 
     */
    @Import(name="offlineReplicationImportPath")
    private @Nullable String offlineReplicationImportPath;

    public Optional<String> offlineReplicationImportPath() {
        return Optional.ofNullable(this.offlineReplicationImportPath);
    }

    /**
     * A value indicating the online IR start time.
     * 
     */
    @Import(name="onlineReplicationStartTime")
    private @Nullable String onlineReplicationStartTime;

    public Optional<String> onlineReplicationStartTime() {
        return Optional.ofNullable(this.onlineReplicationStartTime);
    }

    /**
     * A value indicating the number of recovery points.
     * 
     */
    @Import(name="recoveryPoints")
    private @Nullable Integer recoveryPoints;

    public Optional<Integer> recoveryPoints() {
        return Optional.ofNullable(this.recoveryPoints);
    }

    /**
     * A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
     * 
     */
    @Import(name="replicaDeletionOption")
    private @Nullable String replicaDeletionOption;

    public Optional<String> replicaDeletionOption() {
        return Optional.ofNullable(this.replicaDeletionOption);
    }

    /**
     * A value indicating the replication interval.
     * 
     */
    @Import(name="replicationFrequencyInSeconds")
    private @Nullable Integer replicationFrequencyInSeconds;

    public Optional<Integer> replicationFrequencyInSeconds() {
        return Optional.ofNullable(this.replicationFrequencyInSeconds);
    }

    /**
     * A value indicating the recovery HTTPS port.
     * 
     */
    @Import(name="replicationPort")
    private @Nullable Integer replicationPort;

    public Optional<Integer> replicationPort() {
        return Optional.ofNullable(this.replicationPort);
    }

    private HyperVReplicaBluePolicyDetailsResponse() {}

    private HyperVReplicaBluePolicyDetailsResponse(HyperVReplicaBluePolicyDetailsResponse $) {
        this.allowedAuthenticationType = $.allowedAuthenticationType;
        this.applicationConsistentSnapshotFrequencyInHours = $.applicationConsistentSnapshotFrequencyInHours;
        this.compression = $.compression;
        this.initialReplicationMethod = $.initialReplicationMethod;
        this.instanceType = $.instanceType;
        this.offlineReplicationExportPath = $.offlineReplicationExportPath;
        this.offlineReplicationImportPath = $.offlineReplicationImportPath;
        this.onlineReplicationStartTime = $.onlineReplicationStartTime;
        this.recoveryPoints = $.recoveryPoints;
        this.replicaDeletionOption = $.replicaDeletionOption;
        this.replicationFrequencyInSeconds = $.replicationFrequencyInSeconds;
        this.replicationPort = $.replicationPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HyperVReplicaBluePolicyDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HyperVReplicaBluePolicyDetailsResponse $;

        public Builder() {
            $ = new HyperVReplicaBluePolicyDetailsResponse();
        }

        public Builder(HyperVReplicaBluePolicyDetailsResponse defaults) {
            $ = new HyperVReplicaBluePolicyDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder allowedAuthenticationType(@Nullable Integer allowedAuthenticationType) {
            $.allowedAuthenticationType = allowedAuthenticationType;
            return this;
        }

        public Builder applicationConsistentSnapshotFrequencyInHours(@Nullable Integer applicationConsistentSnapshotFrequencyInHours) {
            $.applicationConsistentSnapshotFrequencyInHours = applicationConsistentSnapshotFrequencyInHours;
            return this;
        }

        public Builder compression(@Nullable String compression) {
            $.compression = compression;
            return this;
        }

        public Builder initialReplicationMethod(@Nullable String initialReplicationMethod) {
            $.initialReplicationMethod = initialReplicationMethod;
            return this;
        }

        public Builder instanceType(String instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder offlineReplicationExportPath(@Nullable String offlineReplicationExportPath) {
            $.offlineReplicationExportPath = offlineReplicationExportPath;
            return this;
        }

        public Builder offlineReplicationImportPath(@Nullable String offlineReplicationImportPath) {
            $.offlineReplicationImportPath = offlineReplicationImportPath;
            return this;
        }

        public Builder onlineReplicationStartTime(@Nullable String onlineReplicationStartTime) {
            $.onlineReplicationStartTime = onlineReplicationStartTime;
            return this;
        }

        public Builder recoveryPoints(@Nullable Integer recoveryPoints) {
            $.recoveryPoints = recoveryPoints;
            return this;
        }

        public Builder replicaDeletionOption(@Nullable String replicaDeletionOption) {
            $.replicaDeletionOption = replicaDeletionOption;
            return this;
        }

        public Builder replicationFrequencyInSeconds(@Nullable Integer replicationFrequencyInSeconds) {
            $.replicationFrequencyInSeconds = replicationFrequencyInSeconds;
            return this;
        }

        public Builder replicationPort(@Nullable Integer replicationPort) {
            $.replicationPort = replicationPort;
            return this;
        }

        public HyperVReplicaBluePolicyDetailsResponse build() {
            $.instanceType = Codegen.stringProp("instanceType").arg($.instanceType).require();
            return $;
        }
    }

}
