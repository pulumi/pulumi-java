// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse;
import com.pulumi.azurenative.network.inputs.FirewallPolicyIntrusionDetectionSignatureSpecificationResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The operation for configuring intrusion detection.
 * 
 */
public final class FirewallPolicyIntrusionDetectionConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final FirewallPolicyIntrusionDetectionConfigurationResponse Empty = new FirewallPolicyIntrusionDetectionConfigurationResponse();

    /**
     * List of rules for traffic to bypass.
     * 
     */
    @Import(name="bypassTrafficSettings")
    private @Nullable List<FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse> bypassTrafficSettings;

    public Optional<List<FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse>> bypassTrafficSettings() {
        return Optional.ofNullable(this.bypassTrafficSettings);
    }

    /**
     * List of specific signatures states.
     * 
     */
    @Import(name="signatureOverrides")
    private @Nullable List<FirewallPolicyIntrusionDetectionSignatureSpecificationResponse> signatureOverrides;

    public Optional<List<FirewallPolicyIntrusionDetectionSignatureSpecificationResponse>> signatureOverrides() {
        return Optional.ofNullable(this.signatureOverrides);
    }

    private FirewallPolicyIntrusionDetectionConfigurationResponse() {}

    private FirewallPolicyIntrusionDetectionConfigurationResponse(FirewallPolicyIntrusionDetectionConfigurationResponse $) {
        this.bypassTrafficSettings = $.bypassTrafficSettings;
        this.signatureOverrides = $.signatureOverrides;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallPolicyIntrusionDetectionConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallPolicyIntrusionDetectionConfigurationResponse $;

        public Builder() {
            $ = new FirewallPolicyIntrusionDetectionConfigurationResponse();
        }

        public Builder(FirewallPolicyIntrusionDetectionConfigurationResponse defaults) {
            $ = new FirewallPolicyIntrusionDetectionConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder bypassTrafficSettings(@Nullable List<FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse> bypassTrafficSettings) {
            $.bypassTrafficSettings = bypassTrafficSettings;
            return this;
        }

        public Builder bypassTrafficSettings(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse... bypassTrafficSettings) {
            return bypassTrafficSettings(List.of(bypassTrafficSettings));
        }

        public Builder signatureOverrides(@Nullable List<FirewallPolicyIntrusionDetectionSignatureSpecificationResponse> signatureOverrides) {
            $.signatureOverrides = signatureOverrides;
            return this;
        }

        public Builder signatureOverrides(FirewallPolicyIntrusionDetectionSignatureSpecificationResponse... signatureOverrides) {
            return signatureOverrides(List.of(signatureOverrides));
        }

        public FirewallPolicyIntrusionDetectionConfigurationResponse build() {
            return $;
        }
    }

}
