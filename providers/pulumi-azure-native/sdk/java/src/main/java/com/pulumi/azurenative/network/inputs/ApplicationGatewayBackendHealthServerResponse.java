// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.NetworkInterfaceIPConfigurationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Application gateway backendhealth http settings.
 * 
 */
public final class ApplicationGatewayBackendHealthServerResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationGatewayBackendHealthServerResponse Empty = new ApplicationGatewayBackendHealthServerResponse();

    /**
     * IP address or FQDN of backend server.
     * 
     */
    @Import(name="address")
    private @Nullable String address;

    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * Health of backend server.
     * 
     */
    @Import(name="health")
    private @Nullable String health;

    public Optional<String> health() {
        return Optional.ofNullable(this.health);
    }

    /**
     * Health Probe Log.
     * 
     */
    @Import(name="healthProbeLog")
    private @Nullable String healthProbeLog;

    public Optional<String> healthProbeLog() {
        return Optional.ofNullable(this.healthProbeLog);
    }

    /**
     * Reference to IP configuration of backend server.
     * 
     */
    @Import(name="ipConfiguration")
    private @Nullable NetworkInterfaceIPConfigurationResponse ipConfiguration;

    public Optional<NetworkInterfaceIPConfigurationResponse> ipConfiguration() {
        return Optional.ofNullable(this.ipConfiguration);
    }

    private ApplicationGatewayBackendHealthServerResponse() {}

    private ApplicationGatewayBackendHealthServerResponse(ApplicationGatewayBackendHealthServerResponse $) {
        this.address = $.address;
        this.health = $.health;
        this.healthProbeLog = $.healthProbeLog;
        this.ipConfiguration = $.ipConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayBackendHealthServerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayBackendHealthServerResponse $;

        public Builder() {
            $ = new ApplicationGatewayBackendHealthServerResponse();
        }

        public Builder(ApplicationGatewayBackendHealthServerResponse defaults) {
            $ = new ApplicationGatewayBackendHealthServerResponse(Objects.requireNonNull(defaults));
        }

        public Builder address(@Nullable String address) {
            $.address = address;
            return this;
        }

        public Builder health(@Nullable String health) {
            $.health = health;
            return this;
        }

        public Builder healthProbeLog(@Nullable String healthProbeLog) {
            $.healthProbeLog = healthProbeLog;
            return this;
        }

        public Builder ipConfiguration(@Nullable NetworkInterfaceIPConfigurationResponse ipConfiguration) {
            $.ipConfiguration = ipConfiguration;
            return this;
        }

        public ApplicationGatewayBackendHealthServerResponse build() {
            return $;
        }
    }

}
