// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.changeanalysis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetConfigurationProfileArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConfigurationProfileArgs Empty = new GetConfigurationProfileArgs();

    /**
     * The name of the configuration profile. The profile name should be set to &#39;default&#39;, all other names will be overwritten.
     * 
     */
    @Import(name="profileName", required=true)
    private Output<String> profileName;

    /**
     * @return The name of the configuration profile. The profile name should be set to &#39;default&#39;, all other names will be overwritten.
     * 
     */
    public Output<String> profileName() {
        return this.profileName;
    }

    private GetConfigurationProfileArgs() {}

    private GetConfigurationProfileArgs(GetConfigurationProfileArgs $) {
        this.profileName = $.profileName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConfigurationProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConfigurationProfileArgs $;

        public Builder() {
            $ = new GetConfigurationProfileArgs();
        }

        public Builder(GetConfigurationProfileArgs defaults) {
            $ = new GetConfigurationProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param profileName The name of the configuration profile. The profile name should be set to &#39;default&#39;, all other names will be overwritten.
         * 
         * @return builder
         * 
         */
        public Builder profileName(Output<String> profileName) {
            $.profileName = profileName;
            return this;
        }

        /**
         * @param profileName The name of the configuration profile. The profile name should be set to &#39;default&#39;, all other names will be overwritten.
         * 
         * @return builder
         * 
         */
        public Builder profileName(String profileName) {
            return profileName(Output.of(profileName));
        }

        public GetConfigurationProfileArgs build() {
            $.profileName = Objects.requireNonNull($.profileName, "expected parameter 'profileName' to be non-null");
            return $;
        }
    }

}
