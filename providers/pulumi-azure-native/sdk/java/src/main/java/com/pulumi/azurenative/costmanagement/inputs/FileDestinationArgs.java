// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.azurenative.costmanagement.enums.FileFormat;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Destination of the view data. Currently only csv format is supported.
 * 
 */
public final class FileDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileDestinationArgs Empty = new FileDestinationArgs();

    /**
     * Destination of the view data. Currently only csv format is supported.
     * 
     */
    @Import(name="fileFormats")
    private @Nullable Output<List<Either<String,FileFormat>>> fileFormats;

    /**
     * @return Destination of the view data. Currently only csv format is supported.
     * 
     */
    public Optional<Output<List<Either<String,FileFormat>>>> fileFormats() {
        return Optional.ofNullable(this.fileFormats);
    }

    private FileDestinationArgs() {}

    private FileDestinationArgs(FileDestinationArgs $) {
        this.fileFormats = $.fileFormats;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileDestinationArgs $;

        public Builder() {
            $ = new FileDestinationArgs();
        }

        public Builder(FileDestinationArgs defaults) {
            $ = new FileDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fileFormats Destination of the view data. Currently only csv format is supported.
         * 
         * @return builder
         * 
         */
        public Builder fileFormats(@Nullable Output<List<Either<String,FileFormat>>> fileFormats) {
            $.fileFormats = fileFormats;
            return this;
        }

        /**
         * @param fileFormats Destination of the view data. Currently only csv format is supported.
         * 
         * @return builder
         * 
         */
        public Builder fileFormats(List<Either<String,FileFormat>> fileFormats) {
            return fileFormats(Output.of(fileFormats));
        }

        /**
         * @param fileFormats Destination of the view data. Currently only csv format is supported.
         * 
         * @return builder
         * 
         */
        public Builder fileFormats(Either<String,FileFormat>... fileFormats) {
            return fileFormats(List.of(fileFormats));
        }

        public FileDestinationArgs build() {
            return $;
        }
    }

}
