// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.inputs.JitNetworkAccessRequestPortArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class JitNetworkAccessRequestVirtualMachineArgs extends com.pulumi.resources.ResourceArgs {

    public static final JitNetworkAccessRequestVirtualMachineArgs Empty = new JitNetworkAccessRequestVirtualMachineArgs();

    /**
     * Resource ID of the virtual machine that is linked to this policy
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Resource ID of the virtual machine that is linked to this policy
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The ports that were opened for the virtual machine
     * 
     */
    @Import(name="ports", required=true)
    private Output<List<JitNetworkAccessRequestPortArgs>> ports;

    /**
     * @return The ports that were opened for the virtual machine
     * 
     */
    public Output<List<JitNetworkAccessRequestPortArgs>> ports() {
        return this.ports;
    }

    private JitNetworkAccessRequestVirtualMachineArgs() {}

    private JitNetworkAccessRequestVirtualMachineArgs(JitNetworkAccessRequestVirtualMachineArgs $) {
        this.id = $.id;
        this.ports = $.ports;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JitNetworkAccessRequestVirtualMachineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JitNetworkAccessRequestVirtualMachineArgs $;

        public Builder() {
            $ = new JitNetworkAccessRequestVirtualMachineArgs();
        }

        public Builder(JitNetworkAccessRequestVirtualMachineArgs defaults) {
            $ = new JitNetworkAccessRequestVirtualMachineArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Resource ID of the virtual machine that is linked to this policy
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Resource ID of the virtual machine that is linked to this policy
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param ports The ports that were opened for the virtual machine
         * 
         * @return builder
         * 
         */
        public Builder ports(Output<List<JitNetworkAccessRequestPortArgs>> ports) {
            $.ports = ports;
            return this;
        }

        /**
         * @param ports The ports that were opened for the virtual machine
         * 
         * @return builder
         * 
         */
        public Builder ports(List<JitNetworkAccessRequestPortArgs> ports) {
            return ports(Output.of(ports));
        }

        /**
         * @param ports The ports that were opened for the virtual machine
         * 
         * @return builder
         * 
         */
        public Builder ports(JitNetworkAccessRequestPortArgs... ports) {
            return ports(List.of(ports));
        }

        public JitNetworkAccessRequestVirtualMachineArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.ports = Objects.requireNonNull($.ports, "expected parameter 'ports' to be non-null");
            return $;
        }
    }

}
