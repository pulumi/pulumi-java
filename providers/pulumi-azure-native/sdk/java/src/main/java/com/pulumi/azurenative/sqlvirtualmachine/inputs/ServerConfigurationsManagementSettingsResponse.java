// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine.inputs;

import com.pulumi.azurenative.sqlvirtualmachine.inputs.AdditionalFeaturesServerConfigurationsResponse;
import com.pulumi.azurenative.sqlvirtualmachine.inputs.SqlConnectivityUpdateSettingsResponse;
import com.pulumi.azurenative.sqlvirtualmachine.inputs.SqlStorageUpdateSettingsResponse;
import com.pulumi.azurenative.sqlvirtualmachine.inputs.SqlWorkloadTypeUpdateSettingsResponse;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Set the connectivity, storage and workload settings.
 * 
 */
public final class ServerConfigurationsManagementSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServerConfigurationsManagementSettingsResponse Empty = new ServerConfigurationsManagementSettingsResponse();

    /**
     * Additional SQL feature settings.
     * 
     */
    @Import(name="additionalFeaturesServerConfigurations")
    private @Nullable AdditionalFeaturesServerConfigurationsResponse additionalFeaturesServerConfigurations;

    public Optional<AdditionalFeaturesServerConfigurationsResponse> additionalFeaturesServerConfigurations() {
        return Optional.ofNullable(this.additionalFeaturesServerConfigurations);
    }

    /**
     * SQL connectivity type settings.
     * 
     */
    @Import(name="sqlConnectivityUpdateSettings")
    private @Nullable SqlConnectivityUpdateSettingsResponse sqlConnectivityUpdateSettings;

    public Optional<SqlConnectivityUpdateSettingsResponse> sqlConnectivityUpdateSettings() {
        return Optional.ofNullable(this.sqlConnectivityUpdateSettings);
    }

    /**
     * SQL storage update settings.
     * 
     */
    @Import(name="sqlStorageUpdateSettings")
    private @Nullable SqlStorageUpdateSettingsResponse sqlStorageUpdateSettings;

    public Optional<SqlStorageUpdateSettingsResponse> sqlStorageUpdateSettings() {
        return Optional.ofNullable(this.sqlStorageUpdateSettings);
    }

    /**
     * SQL workload type settings.
     * 
     */
    @Import(name="sqlWorkloadTypeUpdateSettings")
    private @Nullable SqlWorkloadTypeUpdateSettingsResponse sqlWorkloadTypeUpdateSettings;

    public Optional<SqlWorkloadTypeUpdateSettingsResponse> sqlWorkloadTypeUpdateSettings() {
        return Optional.ofNullable(this.sqlWorkloadTypeUpdateSettings);
    }

    private ServerConfigurationsManagementSettingsResponse() {}

    private ServerConfigurationsManagementSettingsResponse(ServerConfigurationsManagementSettingsResponse $) {
        this.additionalFeaturesServerConfigurations = $.additionalFeaturesServerConfigurations;
        this.sqlConnectivityUpdateSettings = $.sqlConnectivityUpdateSettings;
        this.sqlStorageUpdateSettings = $.sqlStorageUpdateSettings;
        this.sqlWorkloadTypeUpdateSettings = $.sqlWorkloadTypeUpdateSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerConfigurationsManagementSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerConfigurationsManagementSettingsResponse $;

        public Builder() {
            $ = new ServerConfigurationsManagementSettingsResponse();
        }

        public Builder(ServerConfigurationsManagementSettingsResponse defaults) {
            $ = new ServerConfigurationsManagementSettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder additionalFeaturesServerConfigurations(@Nullable AdditionalFeaturesServerConfigurationsResponse additionalFeaturesServerConfigurations) {
            $.additionalFeaturesServerConfigurations = additionalFeaturesServerConfigurations;
            return this;
        }

        public Builder sqlConnectivityUpdateSettings(@Nullable SqlConnectivityUpdateSettingsResponse sqlConnectivityUpdateSettings) {
            $.sqlConnectivityUpdateSettings = sqlConnectivityUpdateSettings;
            return this;
        }

        public Builder sqlStorageUpdateSettings(@Nullable SqlStorageUpdateSettingsResponse sqlStorageUpdateSettings) {
            $.sqlStorageUpdateSettings = sqlStorageUpdateSettings;
            return this;
        }

        public Builder sqlWorkloadTypeUpdateSettings(@Nullable SqlWorkloadTypeUpdateSettingsResponse sqlWorkloadTypeUpdateSettings) {
            $.sqlWorkloadTypeUpdateSettings = sqlWorkloadTypeUpdateSettings;
            return this;
        }

        public ServerConfigurationsManagementSettingsResponse build() {
            return $;
        }
    }

}
