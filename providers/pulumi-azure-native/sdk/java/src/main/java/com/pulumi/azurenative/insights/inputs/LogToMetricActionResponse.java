// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.azurenative.insights.inputs.CriteriaResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Specify action need to be taken when rule type is converting log to metric
 * 
 */
public final class LogToMetricActionResponse extends com.pulumi.resources.InvokeArgs {

    public static final LogToMetricActionResponse Empty = new LogToMetricActionResponse();

    /**
     * Criteria of Metric
     * 
     */
    @Import(name="criteria", required=true)
    private List<CriteriaResponse> criteria;

    public List<CriteriaResponse> criteria() {
        return this.criteria;
    }

    /**
     * Specifies the action. Supported values - AlertingAction, LogToMetricAction
     * Expected value is &#39;Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private String odataType;

    public String odataType() {
        return this.odataType;
    }

    private LogToMetricActionResponse() {}

    private LogToMetricActionResponse(LogToMetricActionResponse $) {
        this.criteria = $.criteria;
        this.odataType = $.odataType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogToMetricActionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogToMetricActionResponse $;

        public Builder() {
            $ = new LogToMetricActionResponse();
        }

        public Builder(LogToMetricActionResponse defaults) {
            $ = new LogToMetricActionResponse(Objects.requireNonNull(defaults));
        }

        public Builder criteria(List<CriteriaResponse> criteria) {
            $.criteria = criteria;
            return this;
        }

        public Builder criteria(CriteriaResponse... criteria) {
            return criteria(List.of(criteria));
        }

        public Builder odataType(String odataType) {
            $.odataType = odataType;
            return this;
        }

        public LogToMetricActionResponse build() {
            $.criteria = Objects.requireNonNull($.criteria, "expected parameter 'criteria' to be non-null");
            $.odataType = Codegen.stringProp("odataType").arg($.odataType).require();
            return $;
        }
    }

}
