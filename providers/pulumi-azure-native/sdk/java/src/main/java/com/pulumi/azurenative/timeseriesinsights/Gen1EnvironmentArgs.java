// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.timeseriesinsights;

import com.pulumi.azurenative.timeseriesinsights.enums.StorageLimitExceededBehavior;
import com.pulumi.azurenative.timeseriesinsights.inputs.SkuArgs;
import com.pulumi.azurenative.timeseriesinsights.inputs.TimeSeriesIdPropertyArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class Gen1EnvironmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final Gen1EnvironmentArgs Empty = new Gen1EnvironmentArgs();

    /**
     * ISO8601 timespan specifying the minimum number of days the environment&#39;s events will be available for query.
     * 
     */
    @Import(name="dataRetentionTime", required=true)
    private Output<String> dataRetentionTime;

    public Output<String> dataRetentionTime() {
        return this.dataRetentionTime;
    }

    /**
     * Name of the environment
     * 
     */
    @Import(name="environmentName")
    private @Nullable Output<String> environmentName;

    public Optional<Output<String>> environmentName() {
        return Optional.ofNullable(this.environmentName);
    }

    /**
     * The kind of the environment.
     * Expected value is &#39;Gen1&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    public Output<String> kind() {
        return this.kind;
    }

    /**
     * The location of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
     * 
     */
    @Import(name="partitionKeyProperties")
    private @Nullable Output<List<TimeSeriesIdPropertyArgs>> partitionKeyProperties;

    public Optional<Output<List<TimeSeriesIdPropertyArgs>>> partitionKeyProperties() {
        return Optional.ofNullable(this.partitionKeyProperties);
    }

    /**
     * Name of an Azure Resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     * 
     */
    @Import(name="sku", required=true)
    private Output<SkuArgs> sku;

    public Output<SkuArgs> sku() {
        return this.sku;
    }

    /**
     * The behavior the Time Series Insights service should take when the environment&#39;s capacity has been exceeded. If &#34;PauseIngress&#34; is specified, new events will not be read from the event source. If &#34;PurgeOldData&#34; is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
     * 
     */
    @Import(name="storageLimitExceededBehavior")
    private @Nullable Output<Either<String,StorageLimitExceededBehavior>> storageLimitExceededBehavior;

    public Optional<Output<Either<String,StorageLimitExceededBehavior>>> storageLimitExceededBehavior() {
        return Optional.ofNullable(this.storageLimitExceededBehavior);
    }

    /**
     * Key-value pairs of additional properties for the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private Gen1EnvironmentArgs() {}

    private Gen1EnvironmentArgs(Gen1EnvironmentArgs $) {
        this.dataRetentionTime = $.dataRetentionTime;
        this.environmentName = $.environmentName;
        this.kind = $.kind;
        this.location = $.location;
        this.partitionKeyProperties = $.partitionKeyProperties;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.storageLimitExceededBehavior = $.storageLimitExceededBehavior;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Gen1EnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Gen1EnvironmentArgs $;

        public Builder() {
            $ = new Gen1EnvironmentArgs();
        }

        public Builder(Gen1EnvironmentArgs defaults) {
            $ = new Gen1EnvironmentArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataRetentionTime(Output<String> dataRetentionTime) {
            $.dataRetentionTime = dataRetentionTime;
            return this;
        }

        public Builder dataRetentionTime(String dataRetentionTime) {
            return dataRetentionTime(Output.of(dataRetentionTime));
        }

        public Builder environmentName(@Nullable Output<String> environmentName) {
            $.environmentName = environmentName;
            return this;
        }

        public Builder environmentName(String environmentName) {
            return environmentName(Output.of(environmentName));
        }

        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder partitionKeyProperties(@Nullable Output<List<TimeSeriesIdPropertyArgs>> partitionKeyProperties) {
            $.partitionKeyProperties = partitionKeyProperties;
            return this;
        }

        public Builder partitionKeyProperties(List<TimeSeriesIdPropertyArgs> partitionKeyProperties) {
            return partitionKeyProperties(Output.of(partitionKeyProperties));
        }

        public Builder partitionKeyProperties(TimeSeriesIdPropertyArgs... partitionKeyProperties) {
            return partitionKeyProperties(List.of(partitionKeyProperties));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder sku(Output<SkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(SkuArgs sku) {
            return sku(Output.of(sku));
        }

        public Builder storageLimitExceededBehavior(@Nullable Output<Either<String,StorageLimitExceededBehavior>> storageLimitExceededBehavior) {
            $.storageLimitExceededBehavior = storageLimitExceededBehavior;
            return this;
        }

        public Builder storageLimitExceededBehavior(Either<String,StorageLimitExceededBehavior> storageLimitExceededBehavior) {
            return storageLimitExceededBehavior(Output.of(storageLimitExceededBehavior));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Gen1EnvironmentArgs build() {
            $.dataRetentionTime = Objects.requireNonNull($.dataRetentionTime, "expected parameter 'dataRetentionTime' to be non-null");
            $.kind = Codegen.stringProp("kind").output().arg($.kind).require();
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sku = Objects.requireNonNull($.sku, "expected parameter 'sku' to be non-null");
            return $;
        }
    }

}
