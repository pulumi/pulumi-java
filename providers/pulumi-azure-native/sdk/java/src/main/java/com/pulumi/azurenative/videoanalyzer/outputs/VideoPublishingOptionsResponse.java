// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VideoPublishingOptionsResponse {
    /**
     * When set to 'true' content will not be archived or recorded. This is used, for example, when the topology is used only for low latency video streaming. Default is 'false'.  If set to 'true', then "disableRtspPublishing" must be set to 'false'.
     * 
     */
    private final @Nullable String disableArchive;
    /**
     * When set to 'true' the RTSP playback URL will not be published, disabling low latency streaming. This is used, for example, when the topology is used only for archiving content. Default is 'false'.  If set to 'true', then "disableArchive" must be set to 'false'.
     * 
     */
    private final @Nullable String disableRtspPublishing;

    @CustomType.Constructor
    private VideoPublishingOptionsResponse(
        @CustomType.Parameter("disableArchive") @Nullable String disableArchive,
        @CustomType.Parameter("disableRtspPublishing") @Nullable String disableRtspPublishing) {
        this.disableArchive = disableArchive;
        this.disableRtspPublishing = disableRtspPublishing;
    }

    /**
     * When set to 'true' content will not be archived or recorded. This is used, for example, when the topology is used only for low latency video streaming. Default is 'false'.  If set to 'true', then "disableRtspPublishing" must be set to 'false'.
     * 
    */
    public Optional<String> disableArchive() {
        return Optional.ofNullable(this.disableArchive);
    }
    /**
     * When set to 'true' the RTSP playback URL will not be published, disabling low latency streaming. This is used, for example, when the topology is used only for archiving content. Default is 'false'.  If set to 'true', then "disableArchive" must be set to 'false'.
     * 
    */
    public Optional<String> disableRtspPublishing() {
        return Optional.ofNullable(this.disableRtspPublishing);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VideoPublishingOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String disableArchive;
        private @Nullable String disableRtspPublishing;

        public Builder() {
    	      // Empty
        }

        public Builder(VideoPublishingOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disableArchive = defaults.disableArchive;
    	      this.disableRtspPublishing = defaults.disableRtspPublishing;
        }

        public Builder disableArchive(@Nullable String disableArchive) {
            this.disableArchive = disableArchive;
            return this;
        }
        public Builder disableRtspPublishing(@Nullable String disableRtspPublishing) {
            this.disableRtspPublishing = disableRtspPublishing;
            return this;
        }        public VideoPublishingOptionsResponse build() {
            return new VideoPublishingOptionsResponse(disableArchive, disableRtspPublishing);
        }
    }
}
