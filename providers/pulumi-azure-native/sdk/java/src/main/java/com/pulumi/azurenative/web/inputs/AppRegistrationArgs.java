// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration settings of the app registration for providers that have app ids and app secrets
 * 
 */
public final class AppRegistrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppRegistrationArgs Empty = new AppRegistrationArgs();

    /**
     * The App ID of the app used for login.
     * 
     */
    @Import(name="appId")
    private @Nullable Output<String> appId;

    /**
     * @return The App ID of the app used for login.
     * 
     */
    public Optional<Output<String>> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * The app setting name that contains the app secret.
     * 
     */
    @Import(name="appSecretSettingName")
    private @Nullable Output<String> appSecretSettingName;

    /**
     * @return The app setting name that contains the app secret.
     * 
     */
    public Optional<Output<String>> appSecretSettingName() {
        return Optional.ofNullable(this.appSecretSettingName);
    }

    private AppRegistrationArgs() {}

    private AppRegistrationArgs(AppRegistrationArgs $) {
        this.appId = $.appId;
        this.appSecretSettingName = $.appSecretSettingName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppRegistrationArgs $;

        public Builder() {
            $ = new AppRegistrationArgs();
        }

        public Builder(AppRegistrationArgs defaults) {
            $ = new AppRegistrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId The App ID of the app used for login.
         * 
         * @return builder
         * 
         */
        public Builder appId(@Nullable Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId The App ID of the app used for login.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param appSecretSettingName The app setting name that contains the app secret.
         * 
         * @return builder
         * 
         */
        public Builder appSecretSettingName(@Nullable Output<String> appSecretSettingName) {
            $.appSecretSettingName = appSecretSettingName;
            return this;
        }

        /**
         * @param appSecretSettingName The app setting name that contains the app secret.
         * 
         * @return builder
         * 
         */
        public Builder appSecretSettingName(String appSecretSettingName) {
            return appSecretSettingName(Output.of(appSecretSettingName));
        }

        public AppRegistrationArgs build() {
            return $;
        }
    }

}
