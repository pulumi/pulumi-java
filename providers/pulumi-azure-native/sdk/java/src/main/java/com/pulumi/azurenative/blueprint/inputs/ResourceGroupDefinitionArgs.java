// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.blueprint.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents an Azure resource group in a blueprint definition.
 * 
 */
public final class ResourceGroupDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceGroupDefinitionArgs Empty = new ResourceGroupDefinitionArgs();

    /**
     * Artifacts which need to be deployed before this resource group.
     * 
     */
    @Import(name="dependsOn")
    private @Nullable Output<List<String>> dependsOn;

    public Optional<Output<List<String>>> dependsOn() {
        return Optional.ofNullable(this.dependsOn);
    }

    /**
     * Description of this parameter/resourceGroup.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * DisplayName of this parameter/resourceGroup.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Location of this resourceGroup. Leave empty if the resource group location will be specified during the blueprint assignment.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of this resourceGroup. Leave empty if the resource group name will be specified during the blueprint assignment.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * StrongType for UI to render rich experience during blueprint assignment. Supported strong types are resourceType, principalId and location.
     * 
     */
    @Import(name="strongType")
    private @Nullable Output<String> strongType;

    public Optional<Output<String>> strongType() {
        return Optional.ofNullable(this.strongType);
    }

    /**
     * Tags to be assigned to this resource group.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ResourceGroupDefinitionArgs() {}

    private ResourceGroupDefinitionArgs(ResourceGroupDefinitionArgs $) {
        this.dependsOn = $.dependsOn;
        this.description = $.description;
        this.displayName = $.displayName;
        this.location = $.location;
        this.name = $.name;
        this.strongType = $.strongType;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceGroupDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceGroupDefinitionArgs $;

        public Builder() {
            $ = new ResourceGroupDefinitionArgs();
        }

        public Builder(ResourceGroupDefinitionArgs defaults) {
            $ = new ResourceGroupDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder dependsOn(@Nullable Output<List<String>> dependsOn) {
            $.dependsOn = dependsOn;
            return this;
        }

        public Builder dependsOn(List<String> dependsOn) {
            return dependsOn(Output.of(dependsOn));
        }

        public Builder dependsOn(String... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder strongType(@Nullable Output<String> strongType) {
            $.strongType = strongType;
            return this;
        }

        public Builder strongType(String strongType) {
            return strongType(Output.of(strongType));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ResourceGroupDefinitionArgs build() {
            return $;
        }
    }

}
