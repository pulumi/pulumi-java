// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetQueueServicePropertiesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetQueueServicePropertiesPlainArgs Empty = new GetQueueServicePropertiesPlainArgs();

    /**
     * The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * 
     */
    @Import(name="accountName", required=true)
    private String accountName;

    /**
     * @return The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * 
     */
    public String accountName() {
        return this.accountName;
    }

    /**
     * The name of the Queue Service within the specified storage account. Queue Service Name must be &#39;default&#39;
     * 
     */
    @Import(name="queueServiceName", required=true)
    private String queueServiceName;

    /**
     * @return The name of the Queue Service within the specified storage account. Queue Service Name must be &#39;default&#39;
     * 
     */
    public String queueServiceName() {
        return this.queueServiceName;
    }

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetQueueServicePropertiesPlainArgs() {}

    private GetQueueServicePropertiesPlainArgs(GetQueueServicePropertiesPlainArgs $) {
        this.accountName = $.accountName;
        this.queueServiceName = $.queueServiceName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetQueueServicePropertiesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetQueueServicePropertiesPlainArgs $;

        public Builder() {
            $ = new GetQueueServicePropertiesPlainArgs();
        }

        public Builder(GetQueueServicePropertiesPlainArgs defaults) {
            $ = new GetQueueServicePropertiesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param queueServiceName The name of the Queue Service within the specified storage account. Queue Service Name must be &#39;default&#39;
         * 
         * @return builder
         * 
         */
        public Builder queueServiceName(String queueServiceName) {
            $.queueServiceName = queueServiceName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public GetQueueServicePropertiesPlainArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.queueServiceName = Objects.requireNonNull($.queueServiceName, "expected parameter 'queueServiceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
