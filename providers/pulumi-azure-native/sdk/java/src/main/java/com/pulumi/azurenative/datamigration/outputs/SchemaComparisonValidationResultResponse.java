// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.azurenative.datamigration.outputs.SchemaComparisonValidationResultTypeResponse;
import com.pulumi.azurenative.datamigration.outputs.ValidationErrorResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class SchemaComparisonValidationResultResponse {
    /**
     * @return List of schema differences between the source and target databases
     * 
     */
    private final SchemaComparisonValidationResultTypeResponse schemaDifferences;
    /**
     * @return Count of source database objects
     * 
     */
    private final @Nullable Map<String,Double> sourceDatabaseObjectCount;
    /**
     * @return Count of target database objects
     * 
     */
    private final @Nullable Map<String,Double> targetDatabaseObjectCount;
    /**
     * @return List of errors that happened while performing schema compare validation
     * 
     */
    private final ValidationErrorResponse validationErrors;

    @CustomType.Constructor
    private SchemaComparisonValidationResultResponse(
        @CustomType.Parameter("schemaDifferences") SchemaComparisonValidationResultTypeResponse schemaDifferences,
        @CustomType.Parameter("sourceDatabaseObjectCount") @Nullable Map<String,Double> sourceDatabaseObjectCount,
        @CustomType.Parameter("targetDatabaseObjectCount") @Nullable Map<String,Double> targetDatabaseObjectCount,
        @CustomType.Parameter("validationErrors") ValidationErrorResponse validationErrors) {
        this.schemaDifferences = schemaDifferences;
        this.sourceDatabaseObjectCount = sourceDatabaseObjectCount;
        this.targetDatabaseObjectCount = targetDatabaseObjectCount;
        this.validationErrors = validationErrors;
    }

    /**
     * @return List of schema differences between the source and target databases
     * 
     */
    public SchemaComparisonValidationResultTypeResponse schemaDifferences() {
        return this.schemaDifferences;
    }
    /**
     * @return Count of source database objects
     * 
     */
    public Map<String,Double> sourceDatabaseObjectCount() {
        return this.sourceDatabaseObjectCount == null ? Map.of() : this.sourceDatabaseObjectCount;
    }
    /**
     * @return Count of target database objects
     * 
     */
    public Map<String,Double> targetDatabaseObjectCount() {
        return this.targetDatabaseObjectCount == null ? Map.of() : this.targetDatabaseObjectCount;
    }
    /**
     * @return List of errors that happened while performing schema compare validation
     * 
     */
    public ValidationErrorResponse validationErrors() {
        return this.validationErrors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SchemaComparisonValidationResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchemaComparisonValidationResultTypeResponse schemaDifferences;
        private @Nullable Map<String,Double> sourceDatabaseObjectCount;
        private @Nullable Map<String,Double> targetDatabaseObjectCount;
        private ValidationErrorResponse validationErrors;

        public Builder() {
    	      // Empty
        }

        public Builder(SchemaComparisonValidationResultResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.schemaDifferences = defaults.schemaDifferences;
    	      this.sourceDatabaseObjectCount = defaults.sourceDatabaseObjectCount;
    	      this.targetDatabaseObjectCount = defaults.targetDatabaseObjectCount;
    	      this.validationErrors = defaults.validationErrors;
        }

        public Builder schemaDifferences(SchemaComparisonValidationResultTypeResponse schemaDifferences) {
            this.schemaDifferences = Objects.requireNonNull(schemaDifferences);
            return this;
        }
        public Builder sourceDatabaseObjectCount(@Nullable Map<String,Double> sourceDatabaseObjectCount) {
            this.sourceDatabaseObjectCount = sourceDatabaseObjectCount;
            return this;
        }
        public Builder targetDatabaseObjectCount(@Nullable Map<String,Double> targetDatabaseObjectCount) {
            this.targetDatabaseObjectCount = targetDatabaseObjectCount;
            return this;
        }
        public Builder validationErrors(ValidationErrorResponse validationErrors) {
            this.validationErrors = Objects.requireNonNull(validationErrors);
            return this;
        }        public SchemaComparisonValidationResultResponse build() {
            return new SchemaComparisonValidationResultResponse(schemaDifferences, sourceDatabaseObjectCount, targetDatabaseObjectCount, validationErrors);
        }
    }
}
