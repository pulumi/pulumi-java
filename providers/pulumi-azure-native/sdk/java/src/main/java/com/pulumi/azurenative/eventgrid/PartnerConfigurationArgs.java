// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid;

import com.pulumi.azurenative.eventgrid.enums.PartnerConfigurationProvisioningState;
import com.pulumi.azurenative.eventgrid.inputs.PartnerAuthorizationArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PartnerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PartnerConfigurationArgs Empty = new PartnerConfigurationArgs();

    /**
     * Location of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Location of the resource.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The details of authorized partners.
     * 
     */
    @Import(name="partnerAuthorization")
    private @Nullable Output<PartnerAuthorizationArgs> partnerAuthorization;

    /**
     * @return The details of authorized partners.
     * 
     */
    public Optional<Output<PartnerAuthorizationArgs>> partnerAuthorization() {
        return Optional.ofNullable(this.partnerAuthorization);
    }

    /**
     * Provisioning state of the partner configuration.
     * 
     */
    @Import(name="provisioningState")
    private @Nullable Output<Either<String,PartnerConfigurationProvisioningState>> provisioningState;

    /**
     * @return Provisioning state of the partner configuration.
     * 
     */
    public Optional<Output<Either<String,PartnerConfigurationProvisioningState>>> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    /**
     * The name of the resource group within the user&#39;s subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Tags of the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Tags of the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private PartnerConfigurationArgs() {}

    private PartnerConfigurationArgs(PartnerConfigurationArgs $) {
        this.location = $.location;
        this.partnerAuthorization = $.partnerAuthorization;
        this.provisioningState = $.provisioningState;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PartnerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PartnerConfigurationArgs $;

        public Builder() {
            $ = new PartnerConfigurationArgs();
        }

        public Builder(PartnerConfigurationArgs defaults) {
            $ = new PartnerConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param partnerAuthorization The details of authorized partners.
         * 
         * @return builder
         * 
         */
        public Builder partnerAuthorization(@Nullable Output<PartnerAuthorizationArgs> partnerAuthorization) {
            $.partnerAuthorization = partnerAuthorization;
            return this;
        }

        /**
         * @param partnerAuthorization The details of authorized partners.
         * 
         * @return builder
         * 
         */
        public Builder partnerAuthorization(PartnerAuthorizationArgs partnerAuthorization) {
            return partnerAuthorization(Output.of(partnerAuthorization));
        }

        /**
         * @param provisioningState Provisioning state of the partner configuration.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(@Nullable Output<Either<String,PartnerConfigurationProvisioningState>> provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param provisioningState Provisioning state of the partner configuration.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(Either<String,PartnerConfigurationProvisioningState> provisioningState) {
            return provisioningState(Output.of(provisioningState));
        }

        /**
         * @param provisioningState Provisioning state of the partner configuration.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            return provisioningState(Either.ofLeft(provisioningState));
        }

        /**
         * @param provisioningState Provisioning state of the partner configuration.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(PartnerConfigurationProvisioningState provisioningState) {
            return provisioningState(Either.ofRight(provisioningState));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Tags of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public PartnerConfigurationArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
