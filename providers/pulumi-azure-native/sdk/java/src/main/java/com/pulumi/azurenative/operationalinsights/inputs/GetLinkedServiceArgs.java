// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetLinkedServiceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLinkedServiceArgs Empty = new GetLinkedServiceArgs();

    /**
     * Name of the linked service.
     * 
     */
    @Import(name="linkedServiceName", required=true)
    private String linkedServiceName;

    public String linkedServiceName() {
        return this.linkedServiceName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private String workspaceName;

    public String workspaceName() {
        return this.workspaceName;
    }

    private GetLinkedServiceArgs() {}

    private GetLinkedServiceArgs(GetLinkedServiceArgs $) {
        this.linkedServiceName = $.linkedServiceName;
        this.resourceGroupName = $.resourceGroupName;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLinkedServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLinkedServiceArgs $;

        public Builder() {
            $ = new GetLinkedServiceArgs();
        }

        public Builder(GetLinkedServiceArgs defaults) {
            $ = new GetLinkedServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder linkedServiceName(String linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        public GetLinkedServiceArgs build() {
            $.linkedServiceName = Objects.requireNonNull($.linkedServiceName, "expected parameter 'linkedServiceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
