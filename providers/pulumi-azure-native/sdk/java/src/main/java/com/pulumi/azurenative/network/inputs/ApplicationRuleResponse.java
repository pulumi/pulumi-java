// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.FirewallPolicyRuleApplicationProtocolResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Rule of type application.
 * 
 */
public final class ApplicationRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationRuleResponse Empty = new ApplicationRuleResponse();

    /**
     * Description of the rule.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * List of destination IP addresses or Service Tags.
     * 
     */
    @Import(name="destinationAddresses")
    private @Nullable List<String> destinationAddresses;

    public Optional<List<String>> destinationAddresses() {
        return Optional.ofNullable(this.destinationAddresses);
    }

    /**
     * List of FQDN Tags for this rule.
     * 
     */
    @Import(name="fqdnTags")
    private @Nullable List<String> fqdnTags;

    public Optional<List<String>> fqdnTags() {
        return Optional.ofNullable(this.fqdnTags);
    }

    /**
     * Name of the rule.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Array of Application Protocols.
     * 
     */
    @Import(name="protocols")
    private @Nullable List<FirewallPolicyRuleApplicationProtocolResponse> protocols;

    public Optional<List<FirewallPolicyRuleApplicationProtocolResponse>> protocols() {
        return Optional.ofNullable(this.protocols);
    }

    /**
     * Rule Type.
     * Expected value is &#39;ApplicationRule&#39;.
     * 
     */
    @Import(name="ruleType", required=true)
    private String ruleType;

    public String ruleType() {
        return this.ruleType;
    }

    /**
     * List of source IP addresses for this rule.
     * 
     */
    @Import(name="sourceAddresses")
    private @Nullable List<String> sourceAddresses;

    public Optional<List<String>> sourceAddresses() {
        return Optional.ofNullable(this.sourceAddresses);
    }

    /**
     * List of source IpGroups for this rule.
     * 
     */
    @Import(name="sourceIpGroups")
    private @Nullable List<String> sourceIpGroups;

    public Optional<List<String>> sourceIpGroups() {
        return Optional.ofNullable(this.sourceIpGroups);
    }

    /**
     * List of FQDNs for this rule.
     * 
     */
    @Import(name="targetFqdns")
    private @Nullable List<String> targetFqdns;

    public Optional<List<String>> targetFqdns() {
        return Optional.ofNullable(this.targetFqdns);
    }

    /**
     * List of Urls for this rule condition.
     * 
     */
    @Import(name="targetUrls")
    private @Nullable List<String> targetUrls;

    public Optional<List<String>> targetUrls() {
        return Optional.ofNullable(this.targetUrls);
    }

    /**
     * Terminate TLS connections for this rule.
     * 
     */
    @Import(name="terminateTLS")
    private @Nullable Boolean terminateTLS;

    public Optional<Boolean> terminateTLS() {
        return Optional.ofNullable(this.terminateTLS);
    }

    /**
     * List of destination azure web categories.
     * 
     */
    @Import(name="webCategories")
    private @Nullable List<String> webCategories;

    public Optional<List<String>> webCategories() {
        return Optional.ofNullable(this.webCategories);
    }

    private ApplicationRuleResponse() {}

    private ApplicationRuleResponse(ApplicationRuleResponse $) {
        this.description = $.description;
        this.destinationAddresses = $.destinationAddresses;
        this.fqdnTags = $.fqdnTags;
        this.name = $.name;
        this.protocols = $.protocols;
        this.ruleType = $.ruleType;
        this.sourceAddresses = $.sourceAddresses;
        this.sourceIpGroups = $.sourceIpGroups;
        this.targetFqdns = $.targetFqdns;
        this.targetUrls = $.targetUrls;
        this.terminateTLS = $.terminateTLS;
        this.webCategories = $.webCategories;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationRuleResponse $;

        public Builder() {
            $ = new ApplicationRuleResponse();
        }

        public Builder(ApplicationRuleResponse defaults) {
            $ = new ApplicationRuleResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder destinationAddresses(@Nullable List<String> destinationAddresses) {
            $.destinationAddresses = destinationAddresses;
            return this;
        }

        public Builder destinationAddresses(String... destinationAddresses) {
            return destinationAddresses(List.of(destinationAddresses));
        }

        public Builder fqdnTags(@Nullable List<String> fqdnTags) {
            $.fqdnTags = fqdnTags;
            return this;
        }

        public Builder fqdnTags(String... fqdnTags) {
            return fqdnTags(List.of(fqdnTags));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder protocols(@Nullable List<FirewallPolicyRuleApplicationProtocolResponse> protocols) {
            $.protocols = protocols;
            return this;
        }

        public Builder protocols(FirewallPolicyRuleApplicationProtocolResponse... protocols) {
            return protocols(List.of(protocols));
        }

        public Builder ruleType(String ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        public Builder sourceAddresses(@Nullable List<String> sourceAddresses) {
            $.sourceAddresses = sourceAddresses;
            return this;
        }

        public Builder sourceAddresses(String... sourceAddresses) {
            return sourceAddresses(List.of(sourceAddresses));
        }

        public Builder sourceIpGroups(@Nullable List<String> sourceIpGroups) {
            $.sourceIpGroups = sourceIpGroups;
            return this;
        }

        public Builder sourceIpGroups(String... sourceIpGroups) {
            return sourceIpGroups(List.of(sourceIpGroups));
        }

        public Builder targetFqdns(@Nullable List<String> targetFqdns) {
            $.targetFqdns = targetFqdns;
            return this;
        }

        public Builder targetFqdns(String... targetFqdns) {
            return targetFqdns(List.of(targetFqdns));
        }

        public Builder targetUrls(@Nullable List<String> targetUrls) {
            $.targetUrls = targetUrls;
            return this;
        }

        public Builder targetUrls(String... targetUrls) {
            return targetUrls(List.of(targetUrls));
        }

        public Builder terminateTLS(@Nullable Boolean terminateTLS) {
            $.terminateTLS = terminateTLS;
            return this;
        }

        public Builder webCategories(@Nullable List<String> webCategories) {
            $.webCategories = webCategories;
            return this;
        }

        public Builder webCategories(String... webCategories) {
            return webCategories(List.of(webCategories));
        }

        public ApplicationRuleResponse build() {
            $.ruleType = Codegen.stringProp("ruleType").arg($.ruleType).require();
            return $;
        }
    }

}
