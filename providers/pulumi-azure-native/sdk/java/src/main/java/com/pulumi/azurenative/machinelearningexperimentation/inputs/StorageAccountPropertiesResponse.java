// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningexperimentation.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The properties of a storage account for a machine learning team account.
 * 
 */
public final class StorageAccountPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final StorageAccountPropertiesResponse Empty = new StorageAccountPropertiesResponse();

    /**
     * The access key to the storage account.
     * 
     */
    @Import(name="accessKey", required=true)
    private String accessKey;

    /**
     * @return The access key to the storage account.
     * 
     */
    public String accessKey() {
        return this.accessKey;
    }

    /**
     * The fully qualified arm Id of the storage account.
     * 
     */
    @Import(name="storageAccountId", required=true)
    private String storageAccountId;

    /**
     * @return The fully qualified arm Id of the storage account.
     * 
     */
    public String storageAccountId() {
        return this.storageAccountId;
    }

    private StorageAccountPropertiesResponse() {}

    private StorageAccountPropertiesResponse(StorageAccountPropertiesResponse $) {
        this.accessKey = $.accessKey;
        this.storageAccountId = $.storageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageAccountPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageAccountPropertiesResponse $;

        public Builder() {
            $ = new StorageAccountPropertiesResponse();
        }

        public Builder(StorageAccountPropertiesResponse defaults) {
            $ = new StorageAccountPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey The access key to the storage account.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param storageAccountId The fully qualified arm Id of the storage account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(String storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        public StorageAccountPropertiesResponse build() {
            $.accessKey = Objects.requireNonNull($.accessKey, "expected parameter 'accessKey' to be non-null");
            $.storageAccountId = Objects.requireNonNull($.storageAccountId, "expected parameter 'storageAccountId' to be non-null");
            return $;
        }
    }

}
