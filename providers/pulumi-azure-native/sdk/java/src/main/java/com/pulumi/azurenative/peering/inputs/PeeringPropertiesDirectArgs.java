// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.peering.inputs;

import com.pulumi.azurenative.peering.enums.DirectPeeringType;
import com.pulumi.azurenative.peering.inputs.DirectConnectionArgs;
import com.pulumi.azurenative.peering.inputs.SubResourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties that define a direct peering.
 * 
 */
public final class PeeringPropertiesDirectArgs extends com.pulumi.resources.ResourceArgs {

    public static final PeeringPropertiesDirectArgs Empty = new PeeringPropertiesDirectArgs();

    /**
     * The set of connections that constitute a direct peering.
     * 
     */
    @Import(name="connections")
    private @Nullable Output<List<DirectConnectionArgs>> connections;

    public Optional<Output<List<DirectConnectionArgs>>> connections() {
        return Optional.ofNullable(this.connections);
    }

    /**
     * The type of direct peering.
     * 
     */
    @Import(name="directPeeringType")
    private @Nullable Output<Either<String,DirectPeeringType>> directPeeringType;

    public Optional<Output<Either<String,DirectPeeringType>>> directPeeringType() {
        return Optional.ofNullable(this.directPeeringType);
    }

    /**
     * The reference of the peer ASN.
     * 
     */
    @Import(name="peerAsn")
    private @Nullable Output<SubResourceArgs> peerAsn;

    public Optional<Output<SubResourceArgs>> peerAsn() {
        return Optional.ofNullable(this.peerAsn);
    }

    private PeeringPropertiesDirectArgs() {}

    private PeeringPropertiesDirectArgs(PeeringPropertiesDirectArgs $) {
        this.connections = $.connections;
        this.directPeeringType = $.directPeeringType;
        this.peerAsn = $.peerAsn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PeeringPropertiesDirectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PeeringPropertiesDirectArgs $;

        public Builder() {
            $ = new PeeringPropertiesDirectArgs();
        }

        public Builder(PeeringPropertiesDirectArgs defaults) {
            $ = new PeeringPropertiesDirectArgs(Objects.requireNonNull(defaults));
        }

        public Builder connections(@Nullable Output<List<DirectConnectionArgs>> connections) {
            $.connections = connections;
            return this;
        }

        public Builder connections(List<DirectConnectionArgs> connections) {
            return connections(Output.of(connections));
        }

        public Builder connections(DirectConnectionArgs... connections) {
            return connections(List.of(connections));
        }

        public Builder directPeeringType(@Nullable Output<Either<String,DirectPeeringType>> directPeeringType) {
            $.directPeeringType = directPeeringType;
            return this;
        }

        public Builder directPeeringType(Either<String,DirectPeeringType> directPeeringType) {
            return directPeeringType(Output.of(directPeeringType));
        }

        public Builder peerAsn(@Nullable Output<SubResourceArgs> peerAsn) {
            $.peerAsn = peerAsn;
            return this;
        }

        public Builder peerAsn(SubResourceArgs peerAsn) {
            return peerAsn(Output.of(peerAsn));
        }

        public PeeringPropertiesDirectArgs build() {
            return $;
        }
    }

}
