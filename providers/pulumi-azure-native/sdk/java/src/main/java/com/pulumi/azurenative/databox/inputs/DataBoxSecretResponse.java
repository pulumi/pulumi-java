// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databox.inputs;

import com.pulumi.azurenative.databox.inputs.AccountCredentialDetailsResponse;
import com.pulumi.azurenative.databox.inputs.ApplianceNetworkConfigurationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The secrets related to a DataBox.
 * 
 */
public final class DataBoxSecretResponse extends com.pulumi.resources.InvokeArgs {

    public static final DataBoxSecretResponse Empty = new DataBoxSecretResponse();

    /**
     * Per account level access credentials.
     * 
     */
    @Import(name="accountCredentialDetails", required=true)
    private List<AccountCredentialDetailsResponse> accountCredentialDetails;

    public List<AccountCredentialDetailsResponse> accountCredentialDetails() {
        return this.accountCredentialDetails;
    }

    /**
     * Password for out of the box experience on device.
     * 
     */
    @Import(name="devicePassword", required=true)
    private String devicePassword;

    public String devicePassword() {
        return this.devicePassword;
    }

    /**
     * Serial number of the assigned device.
     * 
     */
    @Import(name="deviceSerialNumber", required=true)
    private String deviceSerialNumber;

    public String deviceSerialNumber() {
        return this.deviceSerialNumber;
    }

    /**
     * The base 64 encoded public key to authenticate with the device
     * 
     */
    @Import(name="encodedValidationCertPubKey", required=true)
    private String encodedValidationCertPubKey;

    public String encodedValidationCertPubKey() {
        return this.encodedValidationCertPubKey;
    }

    /**
     * Network configuration of the appliance.
     * 
     */
    @Import(name="networkConfigurations", required=true)
    private List<ApplianceNetworkConfigurationResponse> networkConfigurations;

    public List<ApplianceNetworkConfigurationResponse> networkConfigurations() {
        return this.networkConfigurations;
    }

    private DataBoxSecretResponse() {}

    private DataBoxSecretResponse(DataBoxSecretResponse $) {
        this.accountCredentialDetails = $.accountCredentialDetails;
        this.devicePassword = $.devicePassword;
        this.deviceSerialNumber = $.deviceSerialNumber;
        this.encodedValidationCertPubKey = $.encodedValidationCertPubKey;
        this.networkConfigurations = $.networkConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataBoxSecretResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataBoxSecretResponse $;

        public Builder() {
            $ = new DataBoxSecretResponse();
        }

        public Builder(DataBoxSecretResponse defaults) {
            $ = new DataBoxSecretResponse(Objects.requireNonNull(defaults));
        }

        public Builder accountCredentialDetails(List<AccountCredentialDetailsResponse> accountCredentialDetails) {
            $.accountCredentialDetails = accountCredentialDetails;
            return this;
        }

        public Builder accountCredentialDetails(AccountCredentialDetailsResponse... accountCredentialDetails) {
            return accountCredentialDetails(List.of(accountCredentialDetails));
        }

        public Builder devicePassword(String devicePassword) {
            $.devicePassword = devicePassword;
            return this;
        }

        public Builder deviceSerialNumber(String deviceSerialNumber) {
            $.deviceSerialNumber = deviceSerialNumber;
            return this;
        }

        public Builder encodedValidationCertPubKey(String encodedValidationCertPubKey) {
            $.encodedValidationCertPubKey = encodedValidationCertPubKey;
            return this;
        }

        public Builder networkConfigurations(List<ApplianceNetworkConfigurationResponse> networkConfigurations) {
            $.networkConfigurations = networkConfigurations;
            return this;
        }

        public Builder networkConfigurations(ApplianceNetworkConfigurationResponse... networkConfigurations) {
            return networkConfigurations(List.of(networkConfigurations));
        }

        public DataBoxSecretResponse build() {
            $.accountCredentialDetails = Objects.requireNonNull($.accountCredentialDetails, "expected parameter 'accountCredentialDetails' to be non-null");
            $.devicePassword = Objects.requireNonNull($.devicePassword, "expected parameter 'devicePassword' to be non-null");
            $.deviceSerialNumber = Objects.requireNonNull($.deviceSerialNumber, "expected parameter 'deviceSerialNumber' to be non-null");
            $.encodedValidationCertPubKey = Objects.requireNonNull($.encodedValidationCertPubKey, "expected parameter 'encodedValidationCertPubKey' to be non-null");
            $.networkConfigurations = Objects.requireNonNull($.networkConfigurations, "expected parameter 'networkConfigurations' to be non-null");
            return $;
        }
    }

}
