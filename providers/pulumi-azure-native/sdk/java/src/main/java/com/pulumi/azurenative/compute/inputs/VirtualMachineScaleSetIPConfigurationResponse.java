// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.ApiEntityReferenceResponse;
import com.pulumi.azurenative.compute.inputs.SubResourceResponse;
import com.pulumi.azurenative.compute.inputs.VirtualMachineScaleSetPublicIPAddressConfigurationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes a virtual machine scale set network profile&#39;s IP configuration.
 * 
 */
public final class VirtualMachineScaleSetIPConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualMachineScaleSetIPConfigurationResponse Empty = new VirtualMachineScaleSetIPConfigurationResponse();

    /**
     * Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
     * 
     */
    @Import(name="applicationGatewayBackendAddressPools")
    private @Nullable List<SubResourceResponse> applicationGatewayBackendAddressPools;

    /**
     * @return Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
     * 
     */
    public Optional<List<SubResourceResponse>> applicationGatewayBackendAddressPools() {
        return Optional.ofNullable(this.applicationGatewayBackendAddressPools);
    }

    /**
     * Specifies an array of references to application security group.
     * 
     */
    @Import(name="applicationSecurityGroups")
    private @Nullable List<SubResourceResponse> applicationSecurityGroups;

    /**
     * @return Specifies an array of references to application security group.
     * 
     */
    public Optional<List<SubResourceResponse>> applicationSecurityGroups() {
        return Optional.ofNullable(this.applicationSecurityGroups);
    }

    /**
     * Resource Id
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return Resource Id
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
     * 
     */
    @Import(name="loadBalancerBackendAddressPools")
    private @Nullable List<SubResourceResponse> loadBalancerBackendAddressPools;

    /**
     * @return Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
     * 
     */
    public Optional<List<SubResourceResponse>> loadBalancerBackendAddressPools() {
        return Optional.ofNullable(this.loadBalancerBackendAddressPools);
    }

    /**
     * Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
     * 
     */
    @Import(name="loadBalancerInboundNatPools")
    private @Nullable List<SubResourceResponse> loadBalancerInboundNatPools;

    /**
     * @return Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
     * 
     */
    public Optional<List<SubResourceResponse>> loadBalancerInboundNatPools() {
        return Optional.ofNullable(this.loadBalancerInboundNatPools);
    }

    /**
     * The IP configuration name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The IP configuration name.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Specifies the primary network interface in case the virtual machine has more than 1 network interface.
     * 
     */
    @Import(name="primary")
    private @Nullable Boolean primary;

    /**
     * @return Specifies the primary network interface in case the virtual machine has more than 1 network interface.
     * 
     */
    public Optional<Boolean> primary() {
        return Optional.ofNullable(this.primary);
    }

    /**
     * Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: &#39;IPv4&#39; and &#39;IPv6&#39;.
     * 
     */
    @Import(name="privateIPAddressVersion")
    private @Nullable String privateIPAddressVersion;

    /**
     * @return Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: &#39;IPv4&#39; and &#39;IPv6&#39;.
     * 
     */
    public Optional<String> privateIPAddressVersion() {
        return Optional.ofNullable(this.privateIPAddressVersion);
    }

    /**
     * The publicIPAddressConfiguration.
     * 
     */
    @Import(name="publicIPAddressConfiguration")
    private @Nullable VirtualMachineScaleSetPublicIPAddressConfigurationResponse publicIPAddressConfiguration;

    /**
     * @return The publicIPAddressConfiguration.
     * 
     */
    public Optional<VirtualMachineScaleSetPublicIPAddressConfigurationResponse> publicIPAddressConfiguration() {
        return Optional.ofNullable(this.publicIPAddressConfiguration);
    }

    /**
     * Specifies the identifier of the subnet.
     * 
     */
    @Import(name="subnet")
    private @Nullable ApiEntityReferenceResponse subnet;

    /**
     * @return Specifies the identifier of the subnet.
     * 
     */
    public Optional<ApiEntityReferenceResponse> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    private VirtualMachineScaleSetIPConfigurationResponse() {}

    private VirtualMachineScaleSetIPConfigurationResponse(VirtualMachineScaleSetIPConfigurationResponse $) {
        this.applicationGatewayBackendAddressPools = $.applicationGatewayBackendAddressPools;
        this.applicationSecurityGroups = $.applicationSecurityGroups;
        this.id = $.id;
        this.loadBalancerBackendAddressPools = $.loadBalancerBackendAddressPools;
        this.loadBalancerInboundNatPools = $.loadBalancerInboundNatPools;
        this.name = $.name;
        this.primary = $.primary;
        this.privateIPAddressVersion = $.privateIPAddressVersion;
        this.publicIPAddressConfiguration = $.publicIPAddressConfiguration;
        this.subnet = $.subnet;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineScaleSetIPConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineScaleSetIPConfigurationResponse $;

        public Builder() {
            $ = new VirtualMachineScaleSetIPConfigurationResponse();
        }

        public Builder(VirtualMachineScaleSetIPConfigurationResponse defaults) {
            $ = new VirtualMachineScaleSetIPConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationGatewayBackendAddressPools Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
         * 
         * @return builder
         * 
         */
        public Builder applicationGatewayBackendAddressPools(@Nullable List<SubResourceResponse> applicationGatewayBackendAddressPools) {
            $.applicationGatewayBackendAddressPools = applicationGatewayBackendAddressPools;
            return this;
        }

        /**
         * @param applicationGatewayBackendAddressPools Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
         * 
         * @return builder
         * 
         */
        public Builder applicationGatewayBackendAddressPools(SubResourceResponse... applicationGatewayBackendAddressPools) {
            return applicationGatewayBackendAddressPools(List.of(applicationGatewayBackendAddressPools));
        }

        /**
         * @param applicationSecurityGroups Specifies an array of references to application security group.
         * 
         * @return builder
         * 
         */
        public Builder applicationSecurityGroups(@Nullable List<SubResourceResponse> applicationSecurityGroups) {
            $.applicationSecurityGroups = applicationSecurityGroups;
            return this;
        }

        /**
         * @param applicationSecurityGroups Specifies an array of references to application security group.
         * 
         * @return builder
         * 
         */
        public Builder applicationSecurityGroups(SubResourceResponse... applicationSecurityGroups) {
            return applicationSecurityGroups(List.of(applicationSecurityGroups));
        }

        /**
         * @param id Resource Id
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param loadBalancerBackendAddressPools Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerBackendAddressPools(@Nullable List<SubResourceResponse> loadBalancerBackendAddressPools) {
            $.loadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
            return this;
        }

        /**
         * @param loadBalancerBackendAddressPools Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerBackendAddressPools(SubResourceResponse... loadBalancerBackendAddressPools) {
            return loadBalancerBackendAddressPools(List.of(loadBalancerBackendAddressPools));
        }

        /**
         * @param loadBalancerInboundNatPools Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerInboundNatPools(@Nullable List<SubResourceResponse> loadBalancerInboundNatPools) {
            $.loadBalancerInboundNatPools = loadBalancerInboundNatPools;
            return this;
        }

        /**
         * @param loadBalancerInboundNatPools Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerInboundNatPools(SubResourceResponse... loadBalancerInboundNatPools) {
            return loadBalancerInboundNatPools(List.of(loadBalancerInboundNatPools));
        }

        /**
         * @param name The IP configuration name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param primary Specifies the primary network interface in case the virtual machine has more than 1 network interface.
         * 
         * @return builder
         * 
         */
        public Builder primary(@Nullable Boolean primary) {
            $.primary = primary;
            return this;
        }

        /**
         * @param privateIPAddressVersion Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: &#39;IPv4&#39; and &#39;IPv6&#39;.
         * 
         * @return builder
         * 
         */
        public Builder privateIPAddressVersion(@Nullable String privateIPAddressVersion) {
            $.privateIPAddressVersion = privateIPAddressVersion;
            return this;
        }

        /**
         * @param publicIPAddressConfiguration The publicIPAddressConfiguration.
         * 
         * @return builder
         * 
         */
        public Builder publicIPAddressConfiguration(@Nullable VirtualMachineScaleSetPublicIPAddressConfigurationResponse publicIPAddressConfiguration) {
            $.publicIPAddressConfiguration = publicIPAddressConfiguration;
            return this;
        }

        /**
         * @param subnet Specifies the identifier of the subnet.
         * 
         * @return builder
         * 
         */
        public Builder subnet(@Nullable ApiEntityReferenceResponse subnet) {
            $.subnet = subnet;
            return this;
        }

        public VirtualMachineScaleSetIPConfigurationResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
