// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetPacketCaptureArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPacketCaptureArgs Empty = new GetPacketCaptureArgs();

    /**
     * The name of the network watcher.
     * 
     */
    @Import(name="networkWatcherName", required=true)
    private Output<String> networkWatcherName;

    /**
     * @return The name of the network watcher.
     * 
     */
    public Output<String> networkWatcherName() {
        return this.networkWatcherName;
    }

    /**
     * The name of the packet capture session.
     * 
     */
    @Import(name="packetCaptureName", required=true)
    private Output<String> packetCaptureName;

    /**
     * @return The name of the packet capture session.
     * 
     */
    public Output<String> packetCaptureName() {
        return this.packetCaptureName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetPacketCaptureArgs() {}

    private GetPacketCaptureArgs(GetPacketCaptureArgs $) {
        this.networkWatcherName = $.networkWatcherName;
        this.packetCaptureName = $.packetCaptureName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPacketCaptureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPacketCaptureArgs $;

        public Builder() {
            $ = new GetPacketCaptureArgs();
        }

        public Builder(GetPacketCaptureArgs defaults) {
            $ = new GetPacketCaptureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkWatcherName The name of the network watcher.
         * 
         * @return builder
         * 
         */
        public Builder networkWatcherName(Output<String> networkWatcherName) {
            $.networkWatcherName = networkWatcherName;
            return this;
        }

        /**
         * @param networkWatcherName The name of the network watcher.
         * 
         * @return builder
         * 
         */
        public Builder networkWatcherName(String networkWatcherName) {
            return networkWatcherName(Output.of(networkWatcherName));
        }

        /**
         * @param packetCaptureName The name of the packet capture session.
         * 
         * @return builder
         * 
         */
        public Builder packetCaptureName(Output<String> packetCaptureName) {
            $.packetCaptureName = packetCaptureName;
            return this;
        }

        /**
         * @param packetCaptureName The name of the packet capture session.
         * 
         * @return builder
         * 
         */
        public Builder packetCaptureName(String packetCaptureName) {
            return packetCaptureName(Output.of(packetCaptureName));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetPacketCaptureArgs build() {
            $.networkWatcherName = Objects.requireNonNull($.networkWatcherName, "expected parameter 'networkWatcherName' to be non-null");
            $.packetCaptureName = Objects.requireNonNull($.packetCaptureName, "expected parameter 'packetCaptureName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
