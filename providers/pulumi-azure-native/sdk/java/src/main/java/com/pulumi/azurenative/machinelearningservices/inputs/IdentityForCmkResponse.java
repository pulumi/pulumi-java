// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Identity that will be used to access key vault for encryption at rest
 * 
 */
public final class IdentityForCmkResponse extends com.pulumi.resources.InvokeArgs {

    public static final IdentityForCmkResponse Empty = new IdentityForCmkResponse();

    /**
     * The ArmId of the user assigned identity that will be used to access the customer managed key vault
     * 
     */
    @Import(name="userAssignedIdentity", required=true)
    private String userAssignedIdentity;

    /**
     * @return The ArmId of the user assigned identity that will be used to access the customer managed key vault
     * 
     */
    public String userAssignedIdentity() {
        return this.userAssignedIdentity;
    }

    private IdentityForCmkResponse() {}

    private IdentityForCmkResponse(IdentityForCmkResponse $) {
        this.userAssignedIdentity = $.userAssignedIdentity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentityForCmkResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentityForCmkResponse $;

        public Builder() {
            $ = new IdentityForCmkResponse();
        }

        public Builder(IdentityForCmkResponse defaults) {
            $ = new IdentityForCmkResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param userAssignedIdentity The ArmId of the user assigned identity that will be used to access the customer managed key vault
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentity(String userAssignedIdentity) {
            $.userAssignedIdentity = userAssignedIdentity;
            return this;
        }

        public IdentityForCmkResponse build() {
            $.userAssignedIdentity = Objects.requireNonNull($.userAssignedIdentity, "expected parameter 'userAssignedIdentity' to be non-null");
            return $;
        }
    }

}
