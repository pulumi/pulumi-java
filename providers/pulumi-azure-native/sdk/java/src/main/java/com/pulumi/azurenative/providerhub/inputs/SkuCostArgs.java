// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SkuCostArgs extends com.pulumi.resources.ResourceArgs {

    public static final SkuCostArgs Empty = new SkuCostArgs();

    @Import(name="extendedUnit")
    private @Nullable Output<String> extendedUnit;

    public Optional<Output<String>> extendedUnit() {
        return Optional.ofNullable(this.extendedUnit);
    }

    @Import(name="meterId", required=true)
    private Output<String> meterId;

    public Output<String> meterId() {
        return this.meterId;
    }

    @Import(name="quantity")
    private @Nullable Output<Integer> quantity;

    public Optional<Output<Integer>> quantity() {
        return Optional.ofNullable(this.quantity);
    }

    private SkuCostArgs() {}

    private SkuCostArgs(SkuCostArgs $) {
        this.extendedUnit = $.extendedUnit;
        this.meterId = $.meterId;
        this.quantity = $.quantity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SkuCostArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SkuCostArgs $;

        public Builder() {
            $ = new SkuCostArgs();
        }

        public Builder(SkuCostArgs defaults) {
            $ = new SkuCostArgs(Objects.requireNonNull(defaults));
        }

        public Builder extendedUnit(@Nullable Output<String> extendedUnit) {
            $.extendedUnit = extendedUnit;
            return this;
        }

        public Builder extendedUnit(String extendedUnit) {
            return extendedUnit(Output.of(extendedUnit));
        }

        public Builder meterId(Output<String> meterId) {
            $.meterId = meterId;
            return this;
        }

        public Builder meterId(String meterId) {
            return meterId(Output.of(meterId));
        }

        public Builder quantity(@Nullable Output<Integer> quantity) {
            $.quantity = quantity;
            return this;
        }

        public Builder quantity(Integer quantity) {
            return quantity(Output.of(quantity));
        }

        public SkuCostArgs build() {
            $.meterId = Objects.requireNonNull($.meterId, "expected parameter 'meterId' to be non-null");
            return $;
        }
    }

}
