// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.azurenative.devtestlab.inputs.AttachNewDataDiskOptionsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Request body for adding a new or existing data disk to a virtual machine.
 * 
 */
public final class DataDiskPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final DataDiskPropertiesResponse Empty = new DataDiskPropertiesResponse();

    /**
     * Specifies options to attach a new disk to the virtual machine.
     * 
     */
    @Import(name="attachNewDataDiskOptions")
    private @Nullable AttachNewDataDiskOptionsResponse attachNewDataDiskOptions;

    /**
     * @return Specifies options to attach a new disk to the virtual machine.
     * 
     */
    public Optional<AttachNewDataDiskOptionsResponse> attachNewDataDiskOptions() {
        return Optional.ofNullable(this.attachNewDataDiskOptions);
    }

    /**
     * Specifies the existing lab disk id to attach to virtual machine.
     * 
     */
    @Import(name="existingLabDiskId")
    private @Nullable String existingLabDiskId;

    /**
     * @return Specifies the existing lab disk id to attach to virtual machine.
     * 
     */
    public Optional<String> existingLabDiskId() {
        return Optional.ofNullable(this.existingLabDiskId);
    }

    /**
     * Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
     * 
     */
    @Import(name="hostCaching")
    private @Nullable String hostCaching;

    /**
     * @return Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
     * 
     */
    public Optional<String> hostCaching() {
        return Optional.ofNullable(this.hostCaching);
    }

    private DataDiskPropertiesResponse() {}

    private DataDiskPropertiesResponse(DataDiskPropertiesResponse $) {
        this.attachNewDataDiskOptions = $.attachNewDataDiskOptions;
        this.existingLabDiskId = $.existingLabDiskId;
        this.hostCaching = $.hostCaching;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataDiskPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataDiskPropertiesResponse $;

        public Builder() {
            $ = new DataDiskPropertiesResponse();
        }

        public Builder(DataDiskPropertiesResponse defaults) {
            $ = new DataDiskPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachNewDataDiskOptions Specifies options to attach a new disk to the virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder attachNewDataDiskOptions(@Nullable AttachNewDataDiskOptionsResponse attachNewDataDiskOptions) {
            $.attachNewDataDiskOptions = attachNewDataDiskOptions;
            return this;
        }

        /**
         * @param existingLabDiskId Specifies the existing lab disk id to attach to virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder existingLabDiskId(@Nullable String existingLabDiskId) {
            $.existingLabDiskId = existingLabDiskId;
            return this;
        }

        /**
         * @param hostCaching Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
         * 
         * @return builder
         * 
         */
        public Builder hostCaching(@Nullable String hostCaching) {
            $.hostCaching = hostCaching;
            return this;
        }

        public DataDiskPropertiesResponse build() {
            return $;
        }
    }

}
