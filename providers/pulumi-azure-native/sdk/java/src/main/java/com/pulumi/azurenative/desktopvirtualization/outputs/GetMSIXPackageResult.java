// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization.outputs;

import com.pulumi.azurenative.desktopvirtualization.outputs.MsixPackageApplicationsResponse;
import com.pulumi.azurenative.desktopvirtualization.outputs.MsixPackageDependenciesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMSIXPackageResult {
    /**
     * @return User friendly Name to be displayed in the portal.
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * @return VHD/CIM image path on Network Share.
     * 
     */
    private final @Nullable String imagePath;
    /**
     * @return Make this version of the package the active one across the hostpool.
     * 
     */
    private final @Nullable Boolean isActive;
    /**
     * @return Specifies how to register Package in feed.
     * 
     */
    private final @Nullable Boolean isRegularRegistration;
    /**
     * @return Date Package was last updated, found in the appxmanifest.xml.
     * 
     */
    private final @Nullable String lastUpdated;
    /**
     * @return The name of the resource
     * 
     */
    private final String name;
    /**
     * @return List of package applications.
     * 
     */
    private final @Nullable List<MsixPackageApplicationsResponse> packageApplications;
    /**
     * @return List of package dependencies.
     * 
     */
    private final @Nullable List<MsixPackageDependenciesResponse> packageDependencies;
    /**
     * @return Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name.
     * 
     */
    private final @Nullable String packageFamilyName;
    /**
     * @return Package Name from appxmanifest.xml.
     * 
     */
    private final @Nullable String packageName;
    /**
     * @return Relative Path to the package inside the image.
     * 
     */
    private final @Nullable String packageRelativePath;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private final String type;
    /**
     * @return Package Version found in the appxmanifest.xml.
     * 
     */
    private final @Nullable String version;

    @CustomType.Constructor
    private GetMSIXPackageResult(
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("imagePath") @Nullable String imagePath,
        @CustomType.Parameter("isActive") @Nullable Boolean isActive,
        @CustomType.Parameter("isRegularRegistration") @Nullable Boolean isRegularRegistration,
        @CustomType.Parameter("lastUpdated") @Nullable String lastUpdated,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("packageApplications") @Nullable List<MsixPackageApplicationsResponse> packageApplications,
        @CustomType.Parameter("packageDependencies") @Nullable List<MsixPackageDependenciesResponse> packageDependencies,
        @CustomType.Parameter("packageFamilyName") @Nullable String packageFamilyName,
        @CustomType.Parameter("packageName") @Nullable String packageName,
        @CustomType.Parameter("packageRelativePath") @Nullable String packageRelativePath,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("version") @Nullable String version) {
        this.displayName = displayName;
        this.id = id;
        this.imagePath = imagePath;
        this.isActive = isActive;
        this.isRegularRegistration = isRegularRegistration;
        this.lastUpdated = lastUpdated;
        this.name = name;
        this.packageApplications = packageApplications;
        this.packageDependencies = packageDependencies;
        this.packageFamilyName = packageFamilyName;
        this.packageName = packageName;
        this.packageRelativePath = packageRelativePath;
        this.type = type;
        this.version = version;
    }

    /**
     * @return User friendly Name to be displayed in the portal.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return VHD/CIM image path on Network Share.
     * 
     */
    public Optional<String> imagePath() {
        return Optional.ofNullable(this.imagePath);
    }
    /**
     * @return Make this version of the package the active one across the hostpool.
     * 
     */
    public Optional<Boolean> isActive() {
        return Optional.ofNullable(this.isActive);
    }
    /**
     * @return Specifies how to register Package in feed.
     * 
     */
    public Optional<Boolean> isRegularRegistration() {
        return Optional.ofNullable(this.isRegularRegistration);
    }
    /**
     * @return Date Package was last updated, found in the appxmanifest.xml.
     * 
     */
    public Optional<String> lastUpdated() {
        return Optional.ofNullable(this.lastUpdated);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of package applications.
     * 
     */
    public List<MsixPackageApplicationsResponse> packageApplications() {
        return this.packageApplications == null ? List.of() : this.packageApplications;
    }
    /**
     * @return List of package dependencies.
     * 
     */
    public List<MsixPackageDependenciesResponse> packageDependencies() {
        return this.packageDependencies == null ? List.of() : this.packageDependencies;
    }
    /**
     * @return Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name.
     * 
     */
    public Optional<String> packageFamilyName() {
        return Optional.ofNullable(this.packageFamilyName);
    }
    /**
     * @return Package Name from appxmanifest.xml.
     * 
     */
    public Optional<String> packageName() {
        return Optional.ofNullable(this.packageName);
    }
    /**
     * @return Relative Path to the package inside the image.
     * 
     */
    public Optional<String> packageRelativePath() {
        return Optional.ofNullable(this.packageRelativePath);
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Package Version found in the appxmanifest.xml.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMSIXPackageResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String displayName;
        private String id;
        private @Nullable String imagePath;
        private @Nullable Boolean isActive;
        private @Nullable Boolean isRegularRegistration;
        private @Nullable String lastUpdated;
        private String name;
        private @Nullable List<MsixPackageApplicationsResponse> packageApplications;
        private @Nullable List<MsixPackageDependenciesResponse> packageDependencies;
        private @Nullable String packageFamilyName;
        private @Nullable String packageName;
        private @Nullable String packageRelativePath;
        private String type;
        private @Nullable String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMSIXPackageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.imagePath = defaults.imagePath;
    	      this.isActive = defaults.isActive;
    	      this.isRegularRegistration = defaults.isRegularRegistration;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.name = defaults.name;
    	      this.packageApplications = defaults.packageApplications;
    	      this.packageDependencies = defaults.packageDependencies;
    	      this.packageFamilyName = defaults.packageFamilyName;
    	      this.packageName = defaults.packageName;
    	      this.packageRelativePath = defaults.packageRelativePath;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder imagePath(@Nullable String imagePath) {
            this.imagePath = imagePath;
            return this;
        }
        public Builder isActive(@Nullable Boolean isActive) {
            this.isActive = isActive;
            return this;
        }
        public Builder isRegularRegistration(@Nullable Boolean isRegularRegistration) {
            this.isRegularRegistration = isRegularRegistration;
            return this;
        }
        public Builder lastUpdated(@Nullable String lastUpdated) {
            this.lastUpdated = lastUpdated;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder packageApplications(@Nullable List<MsixPackageApplicationsResponse> packageApplications) {
            this.packageApplications = packageApplications;
            return this;
        }
        public Builder packageApplications(MsixPackageApplicationsResponse... packageApplications) {
            return packageApplications(List.of(packageApplications));
        }
        public Builder packageDependencies(@Nullable List<MsixPackageDependenciesResponse> packageDependencies) {
            this.packageDependencies = packageDependencies;
            return this;
        }
        public Builder packageDependencies(MsixPackageDependenciesResponse... packageDependencies) {
            return packageDependencies(List.of(packageDependencies));
        }
        public Builder packageFamilyName(@Nullable String packageFamilyName) {
            this.packageFamilyName = packageFamilyName;
            return this;
        }
        public Builder packageName(@Nullable String packageName) {
            this.packageName = packageName;
            return this;
        }
        public Builder packageRelativePath(@Nullable String packageRelativePath) {
            this.packageRelativePath = packageRelativePath;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }        public GetMSIXPackageResult build() {
            return new GetMSIXPackageResult(displayName, id, imagePath, isActive, isRegularRegistration, lastUpdated, name, packageApplications, packageDependencies, packageFamilyName, packageName, packageRelativePath, type, version);
        }
    }
}
