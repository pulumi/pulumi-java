// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.inputs.CustomRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines contents of custom rules
 * 
 */
public final class CustomRuleListArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomRuleListArgs Empty = new CustomRuleListArgs();

    /**
     * List of rules
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<CustomRuleArgs>> rules;

    /**
     * @return List of rules
     * 
     */
    public Optional<Output<List<CustomRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private CustomRuleListArgs() {}

    private CustomRuleListArgs(CustomRuleListArgs $) {
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomRuleListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomRuleListArgs $;

        public Builder() {
            $ = new CustomRuleListArgs();
        }

        public Builder(CustomRuleListArgs defaults) {
            $ = new CustomRuleListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rules List of rules
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<CustomRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules List of rules
         * 
         * @return builder
         * 
         */
        public Builder rules(List<CustomRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules List of rules
         * 
         * @return builder
         * 
         */
        public Builder rules(CustomRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public CustomRuleListArgs build() {
            return $;
        }
    }

}
