// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.enums.SubscriptionState;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubscriptionStateRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubscriptionStateRuleArgs Empty = new SubscriptionStateRuleArgs();

    @Import(name="allowedActions")
    private @Nullable Output<List<String>> allowedActions;

    public Optional<Output<List<String>>> allowedActions() {
        return Optional.ofNullable(this.allowedActions);
    }

    @Import(name="state")
    private @Nullable Output<Either<String,SubscriptionState>> state;

    public Optional<Output<Either<String,SubscriptionState>>> state() {
        return Optional.ofNullable(this.state);
    }

    private SubscriptionStateRuleArgs() {}

    private SubscriptionStateRuleArgs(SubscriptionStateRuleArgs $) {
        this.allowedActions = $.allowedActions;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriptionStateRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriptionStateRuleArgs $;

        public Builder() {
            $ = new SubscriptionStateRuleArgs();
        }

        public Builder(SubscriptionStateRuleArgs defaults) {
            $ = new SubscriptionStateRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedActions(@Nullable Output<List<String>> allowedActions) {
            $.allowedActions = allowedActions;
            return this;
        }

        public Builder allowedActions(List<String> allowedActions) {
            return allowedActions(Output.of(allowedActions));
        }

        public Builder allowedActions(String... allowedActions) {
            return allowedActions(List.of(allowedActions));
        }

        public Builder state(@Nullable Output<Either<String,SubscriptionState>> state) {
            $.state = state;
            return this;
        }

        public Builder state(Either<String,SubscriptionState> state) {
            return state(Output.of(state));
        }

        public Builder state(String state) {
            return state(Either.ofLeft(state));
        }

        public Builder state(SubscriptionState state) {
            return state(Either.ofRight(state));
        }

        public SubscriptionStateRuleArgs build() {
            return $;
        }
    }

}
