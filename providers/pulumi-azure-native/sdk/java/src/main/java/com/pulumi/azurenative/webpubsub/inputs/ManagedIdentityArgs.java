// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.webpubsub.inputs;

import com.pulumi.azurenative.webpubsub.enums.ManagedIdentityType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A class represent managed identities used for request and response
 * 
 */
public final class ManagedIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedIdentityArgs Empty = new ManagedIdentityArgs();

    /**
     * Represent the identity type: systemAssigned, userAssigned, None
     * 
     */
    @Import(name="type")
    private @Nullable Output<Either<String,ManagedIdentityType>> type;

    /**
     * @return Represent the identity type: systemAssigned, userAssigned, None
     * 
     */
    public Optional<Output<Either<String,ManagedIdentityType>>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Get or set the user assigned identities
     * 
     */
    @Import(name="userAssignedIdentities")
    private @Nullable Output<Map<String,Object>> userAssignedIdentities;

    /**
     * @return Get or set the user assigned identities
     * 
     */
    public Optional<Output<Map<String,Object>>> userAssignedIdentities() {
        return Optional.ofNullable(this.userAssignedIdentities);
    }

    private ManagedIdentityArgs() {}

    private ManagedIdentityArgs(ManagedIdentityArgs $) {
        this.type = $.type;
        this.userAssignedIdentities = $.userAssignedIdentities;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedIdentityArgs $;

        public Builder() {
            $ = new ManagedIdentityArgs();
        }

        public Builder(ManagedIdentityArgs defaults) {
            $ = new ManagedIdentityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type Represent the identity type: systemAssigned, userAssigned, None
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<Either<String,ManagedIdentityType>> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Represent the identity type: systemAssigned, userAssigned, None
         * 
         * @return builder
         * 
         */
        public Builder type(Either<String,ManagedIdentityType> type) {
            return type(Output.of(type));
        }

        /**
         * @param type Represent the identity type: systemAssigned, userAssigned, None
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Either.ofLeft(type));
        }

        /**
         * @param type Represent the identity type: systemAssigned, userAssigned, None
         * 
         * @return builder
         * 
         */
        public Builder type(ManagedIdentityType type) {
            return type(Either.ofRight(type));
        }

        /**
         * @param userAssignedIdentities Get or set the user assigned identities
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentities(@Nullable Output<Map<String,Object>> userAssignedIdentities) {
            $.userAssignedIdentities = userAssignedIdentities;
            return this;
        }

        /**
         * @param userAssignedIdentities Get or set the user assigned identities
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentities(Map<String,Object> userAssignedIdentities) {
            return userAssignedIdentities(Output.of(userAssignedIdentities));
        }

        public ManagedIdentityArgs build() {
            return $;
        }
    }

}
