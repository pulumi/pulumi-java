// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.avs.outputs;

import com.pulumi.azurenative.avs.outputs.DiskPoolVolumeResponse;
import com.pulumi.azurenative.avs.outputs.NetAppVolumeResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatastoreResult {
    /**
     * @return An iSCSI volume
     * 
     */
    private final @Nullable DiskPoolVolumeResponse diskPoolVolume;
    /**
     * @return Resource ID.
     * 
     */
    private final String id;
    /**
     * @return Resource name.
     * 
     */
    private final String name;
    /**
     * @return An Azure NetApp Files volume
     * 
     */
    private final @Nullable NetAppVolumeResponse netAppVolume;
    /**
     * @return The state of the datastore provisioning
     * 
     */
    private final String provisioningState;
    /**
     * @return Resource type.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetDatastoreResult(
        @CustomType.Parameter("diskPoolVolume") @Nullable DiskPoolVolumeResponse diskPoolVolume,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("netAppVolume") @Nullable NetAppVolumeResponse netAppVolume,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("type") String type) {
        this.diskPoolVolume = diskPoolVolume;
        this.id = id;
        this.name = name;
        this.netAppVolume = netAppVolume;
        this.provisioningState = provisioningState;
        this.type = type;
    }

    /**
     * @return An iSCSI volume
     * 
     */
    public Optional<DiskPoolVolumeResponse> diskPoolVolume() {
        return Optional.ofNullable(this.diskPoolVolume);
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return An Azure NetApp Files volume
     * 
     */
    public Optional<NetAppVolumeResponse> netAppVolume() {
        return Optional.ofNullable(this.netAppVolume);
    }
    /**
     * @return The state of the datastore provisioning
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatastoreResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DiskPoolVolumeResponse diskPoolVolume;
        private String id;
        private String name;
        private @Nullable NetAppVolumeResponse netAppVolume;
        private String provisioningState;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDatastoreResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskPoolVolume = defaults.diskPoolVolume;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.netAppVolume = defaults.netAppVolume;
    	      this.provisioningState = defaults.provisioningState;
    	      this.type = defaults.type;
        }

        public Builder diskPoolVolume(@Nullable DiskPoolVolumeResponse diskPoolVolume) {
            this.diskPoolVolume = diskPoolVolume;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder netAppVolume(@Nullable NetAppVolumeResponse netAppVolume) {
            this.netAppVolume = netAppVolume;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetDatastoreResult build() {
            return new GetDatastoreResult(diskPoolVolume, id, name, netAppVolume, provisioningState, type);
        }
    }
}
