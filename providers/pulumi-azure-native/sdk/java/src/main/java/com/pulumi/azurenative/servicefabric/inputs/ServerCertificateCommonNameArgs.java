// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Describes the server certificate details using common name.
 * 
 */
public final class ServerCertificateCommonNameArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerCertificateCommonNameArgs Empty = new ServerCertificateCommonNameArgs();

    /**
     * The common name of the server certificate.
     * 
     */
    @Import(name="certificateCommonName", required=true)
    private Output<String> certificateCommonName;

    public Output<String> certificateCommonName() {
        return this.certificateCommonName;
    }

    /**
     * The issuer thumbprint of the server certificate.
     * 
     */
    @Import(name="certificateIssuerThumbprint", required=true)
    private Output<String> certificateIssuerThumbprint;

    public Output<String> certificateIssuerThumbprint() {
        return this.certificateIssuerThumbprint;
    }

    private ServerCertificateCommonNameArgs() {}

    private ServerCertificateCommonNameArgs(ServerCertificateCommonNameArgs $) {
        this.certificateCommonName = $.certificateCommonName;
        this.certificateIssuerThumbprint = $.certificateIssuerThumbprint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerCertificateCommonNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerCertificateCommonNameArgs $;

        public Builder() {
            $ = new ServerCertificateCommonNameArgs();
        }

        public Builder(ServerCertificateCommonNameArgs defaults) {
            $ = new ServerCertificateCommonNameArgs(Objects.requireNonNull(defaults));
        }

        public Builder certificateCommonName(Output<String> certificateCommonName) {
            $.certificateCommonName = certificateCommonName;
            return this;
        }

        public Builder certificateCommonName(String certificateCommonName) {
            return certificateCommonName(Output.of(certificateCommonName));
        }

        public Builder certificateIssuerThumbprint(Output<String> certificateIssuerThumbprint) {
            $.certificateIssuerThumbprint = certificateIssuerThumbprint;
            return this;
        }

        public Builder certificateIssuerThumbprint(String certificateIssuerThumbprint) {
            return certificateIssuerThumbprint(Output.of(certificateIssuerThumbprint));
        }

        public ServerCertificateCommonNameArgs build() {
            $.certificateCommonName = Objects.requireNonNull($.certificateCommonName, "expected parameter 'certificateCommonName' to be non-null");
            $.certificateIssuerThumbprint = Objects.requireNonNull($.certificateIssuerThumbprint, "expected parameter 'certificateIssuerThumbprint' to be non-null");
            return $;
        }
    }

}
