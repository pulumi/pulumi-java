// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resources.inputs;

import com.pulumi.azurenative.resources.inputs.ProviderResourceTypeResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Resource provider information.
 * 
 */
public final class ProviderResponse extends com.pulumi.resources.InvokeArgs {

    public static final ProviderResponse Empty = new ProviderResponse();

    /**
     * The provider ID.
     * 
     */
    @Import(name="id", required=true)
      private final String id;

    public String id() {
        return this.id;
    }

    /**
     * The namespace of the resource provider.
     * 
     */
    @Import(name="namespace")
      private final @Nullable String namespace;

    public Optional<String> namespace() {
        return this.namespace == null ? Optional.empty() : Optional.ofNullable(this.namespace);
    }

    /**
     * The registration policy of the resource provider.
     * 
     */
    @Import(name="registrationPolicy", required=true)
      private final String registrationPolicy;

    public String registrationPolicy() {
        return this.registrationPolicy;
    }

    /**
     * The registration state of the resource provider.
     * 
     */
    @Import(name="registrationState", required=true)
      private final String registrationState;

    public String registrationState() {
        return this.registrationState;
    }

    /**
     * The collection of provider resource types.
     * 
     */
    @Import(name="resourceTypes", required=true)
      private final List<ProviderResourceTypeResponse> resourceTypes;

    public List<ProviderResourceTypeResponse> resourceTypes() {
        return this.resourceTypes;
    }

    public ProviderResponse(
        String id,
        @Nullable String namespace,
        String registrationPolicy,
        String registrationState,
        List<ProviderResourceTypeResponse> resourceTypes) {
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.namespace = namespace;
        this.registrationPolicy = Objects.requireNonNull(registrationPolicy, "expected parameter 'registrationPolicy' to be non-null");
        this.registrationState = Objects.requireNonNull(registrationState, "expected parameter 'registrationState' to be non-null");
        this.resourceTypes = Objects.requireNonNull(resourceTypes, "expected parameter 'resourceTypes' to be non-null");
    }

    private ProviderResponse() {
        this.id = null;
        this.namespace = null;
        this.registrationPolicy = null;
        this.registrationState = null;
        this.resourceTypes = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProviderResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private @Nullable String namespace;
        private String registrationPolicy;
        private String registrationState;
        private List<ProviderResourceTypeResponse> resourceTypes;

        public Builder() {
    	      // Empty
        }

        public Builder(ProviderResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.namespace = defaults.namespace;
    	      this.registrationPolicy = defaults.registrationPolicy;
    	      this.registrationState = defaults.registrationState;
    	      this.resourceTypes = defaults.resourceTypes;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        public Builder registrationPolicy(String registrationPolicy) {
            this.registrationPolicy = Objects.requireNonNull(registrationPolicy);
            return this;
        }
        public Builder registrationState(String registrationState) {
            this.registrationState = Objects.requireNonNull(registrationState);
            return this;
        }
        public Builder resourceTypes(List<ProviderResourceTypeResponse> resourceTypes) {
            this.resourceTypes = Objects.requireNonNull(resourceTypes);
            return this;
        }
        public Builder resourceTypes(ProviderResourceTypeResponse... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }        public ProviderResponse build() {
            return new ProviderResponse(id, namespace, registrationPolicy, registrationState, resourceTypes);
        }
    }
}
