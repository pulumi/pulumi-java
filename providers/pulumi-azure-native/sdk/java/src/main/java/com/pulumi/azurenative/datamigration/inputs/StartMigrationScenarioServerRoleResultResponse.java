// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.azurenative.datamigration.inputs.ReportableExceptionResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Server role migration result
 * 
 */
public final class StartMigrationScenarioServerRoleResultResponse extends com.pulumi.resources.InvokeArgs {

    public static final StartMigrationScenarioServerRoleResultResponse Empty = new StartMigrationScenarioServerRoleResultResponse();

    /**
     * Migration exceptions and warnings.
     * 
     */
    @Import(name="exceptionsAndWarnings", required=true)
    private List<ReportableExceptionResponse> exceptionsAndWarnings;

    public List<ReportableExceptionResponse> exceptionsAndWarnings() {
        return this.exceptionsAndWarnings;
    }

    /**
     * Name of server role.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Current state of migration
     * 
     */
    @Import(name="state", required=true)
    private String state;

    public String state() {
        return this.state;
    }

    private StartMigrationScenarioServerRoleResultResponse() {}

    private StartMigrationScenarioServerRoleResultResponse(StartMigrationScenarioServerRoleResultResponse $) {
        this.exceptionsAndWarnings = $.exceptionsAndWarnings;
        this.name = $.name;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StartMigrationScenarioServerRoleResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StartMigrationScenarioServerRoleResultResponse $;

        public Builder() {
            $ = new StartMigrationScenarioServerRoleResultResponse();
        }

        public Builder(StartMigrationScenarioServerRoleResultResponse defaults) {
            $ = new StartMigrationScenarioServerRoleResultResponse(Objects.requireNonNull(defaults));
        }

        public Builder exceptionsAndWarnings(List<ReportableExceptionResponse> exceptionsAndWarnings) {
            $.exceptionsAndWarnings = exceptionsAndWarnings;
            return this;
        }

        public Builder exceptionsAndWarnings(ReportableExceptionResponse... exceptionsAndWarnings) {
            return exceptionsAndWarnings(List.of(exceptionsAndWarnings));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder state(String state) {
            $.state = state;
            return this;
        }

        public StartMigrationScenarioServerRoleResultResponse build() {
            $.exceptionsAndWarnings = Objects.requireNonNull($.exceptionsAndWarnings, "expected parameter 'exceptionsAndWarnings' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.state = Objects.requireNonNull($.state, "expected parameter 'state' to be non-null");
            return $;
        }
    }

}
