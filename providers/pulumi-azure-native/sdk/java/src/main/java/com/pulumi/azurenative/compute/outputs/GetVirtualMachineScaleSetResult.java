// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.AdditionalCapabilitiesResponse;
import com.pulumi.azurenative.compute.outputs.AutomaticRepairsPolicyResponse;
import com.pulumi.azurenative.compute.outputs.ExtendedLocationResponse;
import com.pulumi.azurenative.compute.outputs.PlanResponse;
import com.pulumi.azurenative.compute.outputs.ScaleInPolicyResponse;
import com.pulumi.azurenative.compute.outputs.SkuResponse;
import com.pulumi.azurenative.compute.outputs.SubResourceResponse;
import com.pulumi.azurenative.compute.outputs.UpgradePolicyResponse;
import com.pulumi.azurenative.compute.outputs.VirtualMachineScaleSetIdentityResponse;
import com.pulumi.azurenative.compute.outputs.VirtualMachineScaleSetVMProfileResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualMachineScaleSetResult {
    /**
     * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
     * 
     */
    private final @Nullable AdditionalCapabilitiesResponse additionalCapabilities;
    /**
     * Policy for automatic repairs.
     * 
     */
    private final @Nullable AutomaticRepairsPolicyResponse automaticRepairsPolicy;
    /**
     * When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
     * 
     */
    private final @Nullable Boolean doNotRunExtensionsOnOverprovisionedVMs;
    /**
     * The extended location of the Virtual Machine Scale Set.
     * 
     */
    private final @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * Specifies information about the dedicated host group that the virtual machine scale set resides in. <br><br>Minimum api-version: 2020-06-01.
     * 
     */
    private final @Nullable SubResourceResponse hostGroup;
    /**
     * Resource Id
     * 
     */
    private final String id;
    /**
     * The identity of the virtual machine scale set, if configured.
     * 
     */
    private final @Nullable VirtualMachineScaleSetIdentityResponse identity;
    /**
     * Resource location
     * 
     */
    private final String location;
    /**
     * Resource name
     * 
     */
    private final String name;
    /**
     * Specifies the orchestration mode for the virtual machine scale set.
     * 
     */
    private final @Nullable String orchestrationMode;
    /**
     * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     * 
     */
    private final @Nullable Boolean overprovision;
    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     * 
     */
    private final @Nullable PlanResponse plan;
    /**
     * Fault Domain count for each placement group.
     * 
     */
    private final @Nullable Integer platformFaultDomainCount;
    /**
     * The provisioning state, which only appears in the response.
     * 
     */
    private final String provisioningState;
    /**
     * Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01.
     * 
     */
    private final @Nullable SubResourceResponse proximityPlacementGroup;
    /**
     * Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
     * 
     */
    private final @Nullable ScaleInPolicyResponse scaleInPolicy;
    /**
     * When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
     * 
     */
    private final @Nullable Boolean singlePlacementGroup;
    /**
     * The virtual machine scale set sku.
     * 
     */
    private final @Nullable SkuResponse sku;
    /**
     * Resource tags
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Resource type
     * 
     */
    private final String type;
    /**
     * Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
     * 
     */
    private final String uniqueId;
    /**
     * The upgrade policy.
     * 
     */
    private final @Nullable UpgradePolicyResponse upgradePolicy;
    /**
     * The virtual machine profile.
     * 
     */
    private final @Nullable VirtualMachineScaleSetVMProfileResponse virtualMachineProfile;
    /**
     * Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
     * 
     */
    private final @Nullable Boolean zoneBalance;
    /**
     * The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
     * 
     */
    private final @Nullable List<String> zones;

    @CustomType.Constructor
    private GetVirtualMachineScaleSetResult(
        @CustomType.Parameter("additionalCapabilities") @Nullable AdditionalCapabilitiesResponse additionalCapabilities,
        @CustomType.Parameter("automaticRepairsPolicy") @Nullable AutomaticRepairsPolicyResponse automaticRepairsPolicy,
        @CustomType.Parameter("doNotRunExtensionsOnOverprovisionedVMs") @Nullable Boolean doNotRunExtensionsOnOverprovisionedVMs,
        @CustomType.Parameter("extendedLocation") @Nullable ExtendedLocationResponse extendedLocation,
        @CustomType.Parameter("hostGroup") @Nullable SubResourceResponse hostGroup,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identity") @Nullable VirtualMachineScaleSetIdentityResponse identity,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("orchestrationMode") @Nullable String orchestrationMode,
        @CustomType.Parameter("overprovision") @Nullable Boolean overprovision,
        @CustomType.Parameter("plan") @Nullable PlanResponse plan,
        @CustomType.Parameter("platformFaultDomainCount") @Nullable Integer platformFaultDomainCount,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("proximityPlacementGroup") @Nullable SubResourceResponse proximityPlacementGroup,
        @CustomType.Parameter("scaleInPolicy") @Nullable ScaleInPolicyResponse scaleInPolicy,
        @CustomType.Parameter("singlePlacementGroup") @Nullable Boolean singlePlacementGroup,
        @CustomType.Parameter("sku") @Nullable SkuResponse sku,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uniqueId") String uniqueId,
        @CustomType.Parameter("upgradePolicy") @Nullable UpgradePolicyResponse upgradePolicy,
        @CustomType.Parameter("virtualMachineProfile") @Nullable VirtualMachineScaleSetVMProfileResponse virtualMachineProfile,
        @CustomType.Parameter("zoneBalance") @Nullable Boolean zoneBalance,
        @CustomType.Parameter("zones") @Nullable List<String> zones) {
        this.additionalCapabilities = additionalCapabilities;
        this.automaticRepairsPolicy = automaticRepairsPolicy;
        this.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
        this.extendedLocation = extendedLocation;
        this.hostGroup = hostGroup;
        this.id = id;
        this.identity = identity;
        this.location = location;
        this.name = name;
        this.orchestrationMode = orchestrationMode;
        this.overprovision = overprovision;
        this.plan = plan;
        this.platformFaultDomainCount = platformFaultDomainCount;
        this.provisioningState = provisioningState;
        this.proximityPlacementGroup = proximityPlacementGroup;
        this.scaleInPolicy = scaleInPolicy;
        this.singlePlacementGroup = singlePlacementGroup;
        this.sku = sku;
        this.tags = tags;
        this.type = type;
        this.uniqueId = uniqueId;
        this.upgradePolicy = upgradePolicy;
        this.virtualMachineProfile = virtualMachineProfile;
        this.zoneBalance = zoneBalance;
        this.zones = zones;
    }

    /**
     * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
     * 
    */
    public Optional<AdditionalCapabilitiesResponse> additionalCapabilities() {
        return Optional.ofNullable(this.additionalCapabilities);
    }
    /**
     * Policy for automatic repairs.
     * 
    */
    public Optional<AutomaticRepairsPolicyResponse> automaticRepairsPolicy() {
        return Optional.ofNullable(this.automaticRepairsPolicy);
    }
    /**
     * When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
     * 
    */
    public Optional<Boolean> doNotRunExtensionsOnOverprovisionedVMs() {
        return Optional.ofNullable(this.doNotRunExtensionsOnOverprovisionedVMs);
    }
    /**
     * The extended location of the Virtual Machine Scale Set.
     * 
    */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * Specifies information about the dedicated host group that the virtual machine scale set resides in. <br><br>Minimum api-version: 2020-06-01.
     * 
    */
    public Optional<SubResourceResponse> hostGroup() {
        return Optional.ofNullable(this.hostGroup);
    }
    /**
     * Resource Id
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * The identity of the virtual machine scale set, if configured.
     * 
    */
    public Optional<VirtualMachineScaleSetIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * Resource location
     * 
    */
    public String location() {
        return this.location;
    }
    /**
     * Resource name
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * Specifies the orchestration mode for the virtual machine scale set.
     * 
    */
    public Optional<String> orchestrationMode() {
        return Optional.ofNullable(this.orchestrationMode);
    }
    /**
     * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     * 
    */
    public Optional<Boolean> overprovision() {
        return Optional.ofNullable(this.overprovision);
    }
    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     * 
    */
    public Optional<PlanResponse> plan() {
        return Optional.ofNullable(this.plan);
    }
    /**
     * Fault Domain count for each placement group.
     * 
    */
    public Optional<Integer> platformFaultDomainCount() {
        return Optional.ofNullable(this.platformFaultDomainCount);
    }
    /**
     * The provisioning state, which only appears in the response.
     * 
    */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01.
     * 
    */
    public Optional<SubResourceResponse> proximityPlacementGroup() {
        return Optional.ofNullable(this.proximityPlacementGroup);
    }
    /**
     * Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
     * 
    */
    public Optional<ScaleInPolicyResponse> scaleInPolicy() {
        return Optional.ofNullable(this.scaleInPolicy);
    }
    /**
     * When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
     * 
    */
    public Optional<Boolean> singlePlacementGroup() {
        return Optional.ofNullable(this.singlePlacementGroup);
    }
    /**
     * The virtual machine scale set sku.
     * 
    */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * Resource tags
     * 
    */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Resource type
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
     * 
    */
    public String uniqueId() {
        return this.uniqueId;
    }
    /**
     * The upgrade policy.
     * 
    */
    public Optional<UpgradePolicyResponse> upgradePolicy() {
        return Optional.ofNullable(this.upgradePolicy);
    }
    /**
     * The virtual machine profile.
     * 
    */
    public Optional<VirtualMachineScaleSetVMProfileResponse> virtualMachineProfile() {
        return Optional.ofNullable(this.virtualMachineProfile);
    }
    /**
     * Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
     * 
    */
    public Optional<Boolean> zoneBalance() {
        return Optional.ofNullable(this.zoneBalance);
    }
    /**
     * The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
     * 
    */
    public List<String> zones() {
        return this.zones == null ? List.of() : this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualMachineScaleSetResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AdditionalCapabilitiesResponse additionalCapabilities;
        private @Nullable AutomaticRepairsPolicyResponse automaticRepairsPolicy;
        private @Nullable Boolean doNotRunExtensionsOnOverprovisionedVMs;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private @Nullable SubResourceResponse hostGroup;
        private String id;
        private @Nullable VirtualMachineScaleSetIdentityResponse identity;
        private String location;
        private String name;
        private @Nullable String orchestrationMode;
        private @Nullable Boolean overprovision;
        private @Nullable PlanResponse plan;
        private @Nullable Integer platformFaultDomainCount;
        private String provisioningState;
        private @Nullable SubResourceResponse proximityPlacementGroup;
        private @Nullable ScaleInPolicyResponse scaleInPolicy;
        private @Nullable Boolean singlePlacementGroup;
        private @Nullable SkuResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;
        private String uniqueId;
        private @Nullable UpgradePolicyResponse upgradePolicy;
        private @Nullable VirtualMachineScaleSetVMProfileResponse virtualMachineProfile;
        private @Nullable Boolean zoneBalance;
        private @Nullable List<String> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualMachineScaleSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalCapabilities = defaults.additionalCapabilities;
    	      this.automaticRepairsPolicy = defaults.automaticRepairsPolicy;
    	      this.doNotRunExtensionsOnOverprovisionedVMs = defaults.doNotRunExtensionsOnOverprovisionedVMs;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.hostGroup = defaults.hostGroup;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.orchestrationMode = defaults.orchestrationMode;
    	      this.overprovision = defaults.overprovision;
    	      this.plan = defaults.plan;
    	      this.platformFaultDomainCount = defaults.platformFaultDomainCount;
    	      this.provisioningState = defaults.provisioningState;
    	      this.proximityPlacementGroup = defaults.proximityPlacementGroup;
    	      this.scaleInPolicy = defaults.scaleInPolicy;
    	      this.singlePlacementGroup = defaults.singlePlacementGroup;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.uniqueId = defaults.uniqueId;
    	      this.upgradePolicy = defaults.upgradePolicy;
    	      this.virtualMachineProfile = defaults.virtualMachineProfile;
    	      this.zoneBalance = defaults.zoneBalance;
    	      this.zones = defaults.zones;
        }

        public Builder additionalCapabilities(@Nullable AdditionalCapabilitiesResponse additionalCapabilities) {
            this.additionalCapabilities = additionalCapabilities;
            return this;
        }
        public Builder automaticRepairsPolicy(@Nullable AutomaticRepairsPolicyResponse automaticRepairsPolicy) {
            this.automaticRepairsPolicy = automaticRepairsPolicy;
            return this;
        }
        public Builder doNotRunExtensionsOnOverprovisionedVMs(@Nullable Boolean doNotRunExtensionsOnOverprovisionedVMs) {
            this.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
            return this;
        }
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        public Builder hostGroup(@Nullable SubResourceResponse hostGroup) {
            this.hostGroup = hostGroup;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identity(@Nullable VirtualMachineScaleSetIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder orchestrationMode(@Nullable String orchestrationMode) {
            this.orchestrationMode = orchestrationMode;
            return this;
        }
        public Builder overprovision(@Nullable Boolean overprovision) {
            this.overprovision = overprovision;
            return this;
        }
        public Builder plan(@Nullable PlanResponse plan) {
            this.plan = plan;
            return this;
        }
        public Builder platformFaultDomainCount(@Nullable Integer platformFaultDomainCount) {
            this.platformFaultDomainCount = platformFaultDomainCount;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder proximityPlacementGroup(@Nullable SubResourceResponse proximityPlacementGroup) {
            this.proximityPlacementGroup = proximityPlacementGroup;
            return this;
        }
        public Builder scaleInPolicy(@Nullable ScaleInPolicyResponse scaleInPolicy) {
            this.scaleInPolicy = scaleInPolicy;
            return this;
        }
        public Builder singlePlacementGroup(@Nullable Boolean singlePlacementGroup) {
            this.singlePlacementGroup = singlePlacementGroup;
            return this;
        }
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uniqueId(String uniqueId) {
            this.uniqueId = Objects.requireNonNull(uniqueId);
            return this;
        }
        public Builder upgradePolicy(@Nullable UpgradePolicyResponse upgradePolicy) {
            this.upgradePolicy = upgradePolicy;
            return this;
        }
        public Builder virtualMachineProfile(@Nullable VirtualMachineScaleSetVMProfileResponse virtualMachineProfile) {
            this.virtualMachineProfile = virtualMachineProfile;
            return this;
        }
        public Builder zoneBalance(@Nullable Boolean zoneBalance) {
            this.zoneBalance = zoneBalance;
            return this;
        }
        public Builder zones(@Nullable List<String> zones) {
            this.zones = zones;
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }        public GetVirtualMachineScaleSetResult build() {
            return new GetVirtualMachineScaleSetResult(additionalCapabilities, automaticRepairsPolicy, doNotRunExtensionsOnOverprovisionedVMs, extendedLocation, hostGroup, id, identity, location, name, orchestrationMode, overprovision, plan, platformFaultDomainCount, provisioningState, proximityPlacementGroup, scaleInPolicy, singlePlacementGroup, sku, tags, type, uniqueId, upgradePolicy, virtualMachineProfile, zoneBalance, zones);
        }
    }
}
