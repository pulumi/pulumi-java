// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FusionAlertRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FusionAlertRuleArgs Empty = new FusionAlertRuleArgs();

    /**
     * The Name of the alert rule template used to create this rule.
     * 
     */
    @Import(name="alertRuleTemplateName", required=true)
    private Output<String> alertRuleTemplateName;

    public Output<String> alertRuleTemplateName() {
        return this.alertRuleTemplateName;
    }

    /**
     * Determines whether this alert rule is enabled or disabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The kind of the alert rule
     * Expected value is &#39;Fusion&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    public Output<String> kind() {
        return this.kind;
    }

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Alert rule ID
     * 
     */
    @Import(name="ruleId")
    private @Nullable Output<String> ruleId;

    public Optional<Output<String>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private FusionAlertRuleArgs() {}

    private FusionAlertRuleArgs(FusionAlertRuleArgs $) {
        this.alertRuleTemplateName = $.alertRuleTemplateName;
        this.enabled = $.enabled;
        this.kind = $.kind;
        this.resourceGroupName = $.resourceGroupName;
        this.ruleId = $.ruleId;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FusionAlertRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FusionAlertRuleArgs $;

        public Builder() {
            $ = new FusionAlertRuleArgs();
        }

        public Builder(FusionAlertRuleArgs defaults) {
            $ = new FusionAlertRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder alertRuleTemplateName(Output<String> alertRuleTemplateName) {
            $.alertRuleTemplateName = alertRuleTemplateName;
            return this;
        }

        public Builder alertRuleTemplateName(String alertRuleTemplateName) {
            return alertRuleTemplateName(Output.of(alertRuleTemplateName));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder ruleId(@Nullable Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public FusionAlertRuleArgs build() {
            $.alertRuleTemplateName = Objects.requireNonNull($.alertRuleTemplateName, "expected parameter 'alertRuleTemplateName' to be non-null");
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.kind = Codegen.stringProp("kind").output().arg($.kind).require();
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
