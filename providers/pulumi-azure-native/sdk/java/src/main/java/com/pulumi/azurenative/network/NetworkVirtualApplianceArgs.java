// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.inputs.ManagedServiceIdentityArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.azurenative.network.inputs.VirtualApplianceSkuPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkVirtualApplianceArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkVirtualApplianceArgs Empty = new NetworkVirtualApplianceArgs();

    /**
     * BootStrapConfigurationBlobs storage URLs.
     * 
     */
    @Import(name="bootStrapConfigurationBlobs")
    private @Nullable Output<List<String>> bootStrapConfigurationBlobs;

    public Optional<Output<List<String>>> bootStrapConfigurationBlobs() {
        return Optional.ofNullable(this.bootStrapConfigurationBlobs);
    }

    /**
     * CloudInitConfiguration string in plain text.
     * 
     */
    @Import(name="cloudInitConfiguration")
    private @Nullable Output<String> cloudInitConfiguration;

    public Optional<Output<String>> cloudInitConfiguration() {
        return Optional.ofNullable(this.cloudInitConfiguration);
    }

    /**
     * CloudInitConfigurationBlob storage URLs.
     * 
     */
    @Import(name="cloudInitConfigurationBlobs")
    private @Nullable Output<List<String>> cloudInitConfigurationBlobs;

    public Optional<Output<List<String>>> cloudInitConfigurationBlobs() {
        return Optional.ofNullable(this.cloudInitConfigurationBlobs);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The service principal that has read access to cloud-init and config blob.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<ManagedServiceIdentityArgs> identity;

    public Optional<Output<ManagedServiceIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of Network Virtual Appliance.
     * 
     */
    @Import(name="networkVirtualApplianceName")
    private @Nullable Output<String> networkVirtualApplianceName;

    public Optional<Output<String>> networkVirtualApplianceName() {
        return Optional.ofNullable(this.networkVirtualApplianceName);
    }

    /**
     * Network Virtual Appliance SKU.
     * 
     */
    @Import(name="nvaSku")
    private @Nullable Output<VirtualApplianceSkuPropertiesArgs> nvaSku;

    public Optional<Output<VirtualApplianceSkuPropertiesArgs>> nvaSku() {
        return Optional.ofNullable(this.nvaSku);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * VirtualAppliance ASN.
     * 
     */
    @Import(name="virtualApplianceAsn")
    private @Nullable Output<Double> virtualApplianceAsn;

    public Optional<Output<Double>> virtualApplianceAsn() {
        return Optional.ofNullable(this.virtualApplianceAsn);
    }

    /**
     * The Virtual Hub where Network Virtual Appliance is being deployed.
     * 
     */
    @Import(name="virtualHub")
    private @Nullable Output<SubResourceArgs> virtualHub;

    public Optional<Output<SubResourceArgs>> virtualHub() {
        return Optional.ofNullable(this.virtualHub);
    }

    private NetworkVirtualApplianceArgs() {}

    private NetworkVirtualApplianceArgs(NetworkVirtualApplianceArgs $) {
        this.bootStrapConfigurationBlobs = $.bootStrapConfigurationBlobs;
        this.cloudInitConfiguration = $.cloudInitConfiguration;
        this.cloudInitConfigurationBlobs = $.cloudInitConfigurationBlobs;
        this.id = $.id;
        this.identity = $.identity;
        this.location = $.location;
        this.networkVirtualApplianceName = $.networkVirtualApplianceName;
        this.nvaSku = $.nvaSku;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.virtualApplianceAsn = $.virtualApplianceAsn;
        this.virtualHub = $.virtualHub;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkVirtualApplianceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkVirtualApplianceArgs $;

        public Builder() {
            $ = new NetworkVirtualApplianceArgs();
        }

        public Builder(NetworkVirtualApplianceArgs defaults) {
            $ = new NetworkVirtualApplianceArgs(Objects.requireNonNull(defaults));
        }

        public Builder bootStrapConfigurationBlobs(@Nullable Output<List<String>> bootStrapConfigurationBlobs) {
            $.bootStrapConfigurationBlobs = bootStrapConfigurationBlobs;
            return this;
        }

        public Builder bootStrapConfigurationBlobs(List<String> bootStrapConfigurationBlobs) {
            return bootStrapConfigurationBlobs(Output.of(bootStrapConfigurationBlobs));
        }

        public Builder bootStrapConfigurationBlobs(String... bootStrapConfigurationBlobs) {
            return bootStrapConfigurationBlobs(List.of(bootStrapConfigurationBlobs));
        }

        public Builder cloudInitConfiguration(@Nullable Output<String> cloudInitConfiguration) {
            $.cloudInitConfiguration = cloudInitConfiguration;
            return this;
        }

        public Builder cloudInitConfiguration(String cloudInitConfiguration) {
            return cloudInitConfiguration(Output.of(cloudInitConfiguration));
        }

        public Builder cloudInitConfigurationBlobs(@Nullable Output<List<String>> cloudInitConfigurationBlobs) {
            $.cloudInitConfigurationBlobs = cloudInitConfigurationBlobs;
            return this;
        }

        public Builder cloudInitConfigurationBlobs(List<String> cloudInitConfigurationBlobs) {
            return cloudInitConfigurationBlobs(Output.of(cloudInitConfigurationBlobs));
        }

        public Builder cloudInitConfigurationBlobs(String... cloudInitConfigurationBlobs) {
            return cloudInitConfigurationBlobs(List.of(cloudInitConfigurationBlobs));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder identity(@Nullable Output<ManagedServiceIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(ManagedServiceIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder networkVirtualApplianceName(@Nullable Output<String> networkVirtualApplianceName) {
            $.networkVirtualApplianceName = networkVirtualApplianceName;
            return this;
        }

        public Builder networkVirtualApplianceName(String networkVirtualApplianceName) {
            return networkVirtualApplianceName(Output.of(networkVirtualApplianceName));
        }

        public Builder nvaSku(@Nullable Output<VirtualApplianceSkuPropertiesArgs> nvaSku) {
            $.nvaSku = nvaSku;
            return this;
        }

        public Builder nvaSku(VirtualApplianceSkuPropertiesArgs nvaSku) {
            return nvaSku(Output.of(nvaSku));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder virtualApplianceAsn(@Nullable Output<Double> virtualApplianceAsn) {
            $.virtualApplianceAsn = virtualApplianceAsn;
            return this;
        }

        public Builder virtualApplianceAsn(Double virtualApplianceAsn) {
            return virtualApplianceAsn(Output.of(virtualApplianceAsn));
        }

        public Builder virtualHub(@Nullable Output<SubResourceArgs> virtualHub) {
            $.virtualHub = virtualHub;
            return this;
        }

        public Builder virtualHub(SubResourceArgs virtualHub) {
            return virtualHub(Output.of(virtualHub));
        }

        public NetworkVirtualApplianceArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
