// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * An Itsm receiver.
 * 
 */
public final class ItsmReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final ItsmReceiverArgs Empty = new ItsmReceiverArgs();

    /**
     * Unique identification of ITSM connection among multiple defined in above workspace.
     * 
     */
    @Import(name="connectionId", required=true)
    private Output<String> connectionId;

    public Output<String> connectionId() {
        return this.connectionId;
    }

    /**
     * The name of the Itsm receiver. Names must be unique across all receivers within an action group.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Region in which workspace resides. Supported values:&#39;centralindia&#39;,&#39;japaneast&#39;,&#39;southeastasia&#39;,&#39;australiasoutheast&#39;,&#39;uksouth&#39;,&#39;westcentralus&#39;,&#39;canadacentral&#39;,&#39;eastus&#39;,&#39;westeurope&#39;
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    /**
     * JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
     * 
     */
    @Import(name="ticketConfiguration", required=true)
    private Output<String> ticketConfiguration;

    public Output<String> ticketConfiguration() {
        return this.ticketConfiguration;
    }

    /**
     * OMS LA instance identifier.
     * 
     */
    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    private ItsmReceiverArgs() {}

    private ItsmReceiverArgs(ItsmReceiverArgs $) {
        this.connectionId = $.connectionId;
        this.name = $.name;
        this.region = $.region;
        this.ticketConfiguration = $.ticketConfiguration;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ItsmReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ItsmReceiverArgs $;

        public Builder() {
            $ = new ItsmReceiverArgs();
        }

        public Builder(ItsmReceiverArgs defaults) {
            $ = new ItsmReceiverArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectionId(Output<String> connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        public Builder connectionId(String connectionId) {
            return connectionId(Output.of(connectionId));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder ticketConfiguration(Output<String> ticketConfiguration) {
            $.ticketConfiguration = ticketConfiguration;
            return this;
        }

        public Builder ticketConfiguration(String ticketConfiguration) {
            return ticketConfiguration(Output.of(ticketConfiguration));
        }

        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public ItsmReceiverArgs build() {
            $.connectionId = Objects.requireNonNull($.connectionId, "expected parameter 'connectionId' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            $.ticketConfiguration = Objects.requireNonNull($.ticketConfiguration, "expected parameter 'ticketConfiguration' to be non-null");
            $.workspaceId = Objects.requireNonNull($.workspaceId, "expected parameter 'workspaceId' to be non-null");
            return $;
        }
    }

}
