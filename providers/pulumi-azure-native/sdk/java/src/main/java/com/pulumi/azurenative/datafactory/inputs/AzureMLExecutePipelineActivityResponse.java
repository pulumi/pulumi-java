// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.ActivityDependencyResponse;
import com.pulumi.azurenative.datafactory.inputs.ActivityPolicyResponse;
import com.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.UserPropertyResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Azure ML Execute Pipeline activity.
 * 
 */
public final class AzureMLExecutePipelineActivityResponse extends com.pulumi.resources.InvokeArgs {

    public static final AzureMLExecutePipelineActivityResponse Empty = new AzureMLExecutePipelineActivityResponse();

    /**
     * Whether to continue execution of other steps in the PipelineRun if a step fails. This information will be passed in the continueOnStepFailure property of the published pipeline execution request. Type: boolean (or Expression with resultType boolean).
     * 
     */
    @Import(name="continueOnStepFailure")
    private @Nullable Object continueOnStepFailure;

    public Optional<Object> continueOnStepFailure() {
        return Optional.ofNullable(this.continueOnStepFailure);
    }

    /**
     * Dictionary used for changing data path assignments without retraining. Values will be passed in the dataPathAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).
     * 
     */
    @Import(name="dataPathAssignments")
    private @Nullable Object dataPathAssignments;

    public Optional<Object> dataPathAssignments() {
        return Optional.ofNullable(this.dataPathAssignments);
    }

    /**
     * Activity depends on condition.
     * 
     */
    @Import(name="dependsOn")
    private @Nullable List<ActivityDependencyResponse> dependsOn;

    public Optional<List<ActivityDependencyResponse>> dependsOn() {
        return Optional.ofNullable(this.dependsOn);
    }

    /**
     * Activity description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Run history experiment name of the pipeline run. This information will be passed in the ExperimentName property of the published pipeline execution request. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="experimentName")
    private @Nullable Object experimentName;

    public Optional<Object> experimentName() {
        return Optional.ofNullable(this.experimentName);
    }

    /**
     * Linked service reference.
     * 
     */
    @Import(name="linkedServiceName")
    private @Nullable LinkedServiceReferenceResponse linkedServiceName;

    public Optional<LinkedServiceReferenceResponse> linkedServiceName() {
        return Optional.ofNullable(this.linkedServiceName);
    }

    /**
     * The parent Azure ML Service pipeline run id. This information will be passed in the ParentRunId property of the published pipeline execution request. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="mlParentRunId")
    private @Nullable Object mlParentRunId;

    public Optional<Object> mlParentRunId() {
        return Optional.ofNullable(this.mlParentRunId);
    }

    /**
     * ID of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="mlPipelineEndpointId")
    private @Nullable Object mlPipelineEndpointId;

    public Optional<Object> mlPipelineEndpointId() {
        return Optional.ofNullable(this.mlPipelineEndpointId);
    }

    /**
     * ID of the published Azure ML pipeline. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="mlPipelineId")
    private @Nullable Object mlPipelineId;

    public Optional<Object> mlPipelineId() {
        return Optional.ofNullable(this.mlPipelineId);
    }

    /**
     * Key,Value pairs to be passed to the published Azure ML pipeline endpoint. Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the ParameterAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).
     * 
     */
    @Import(name="mlPipelineParameters")
    private @Nullable Object mlPipelineParameters;

    public Optional<Object> mlPipelineParameters() {
        return Optional.ofNullable(this.mlPipelineParameters);
    }

    /**
     * Activity name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Activity policy.
     * 
     */
    @Import(name="policy")
    private @Nullable ActivityPolicyResponse policy;

    public Optional<ActivityPolicyResponse> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Type of activity.
     * Expected value is &#39;AzureMLExecutePipeline&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    /**
     * Activity user properties.
     * 
     */
    @Import(name="userProperties")
    private @Nullable List<UserPropertyResponse> userProperties;

    public Optional<List<UserPropertyResponse>> userProperties() {
        return Optional.ofNullable(this.userProperties);
    }

    /**
     * Version of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="version")
    private @Nullable Object version;

    public Optional<Object> version() {
        return Optional.ofNullable(this.version);
    }

    private AzureMLExecutePipelineActivityResponse() {}

    private AzureMLExecutePipelineActivityResponse(AzureMLExecutePipelineActivityResponse $) {
        this.continueOnStepFailure = $.continueOnStepFailure;
        this.dataPathAssignments = $.dataPathAssignments;
        this.dependsOn = $.dependsOn;
        this.description = $.description;
        this.experimentName = $.experimentName;
        this.linkedServiceName = $.linkedServiceName;
        this.mlParentRunId = $.mlParentRunId;
        this.mlPipelineEndpointId = $.mlPipelineEndpointId;
        this.mlPipelineId = $.mlPipelineId;
        this.mlPipelineParameters = $.mlPipelineParameters;
        this.name = $.name;
        this.policy = $.policy;
        this.type = $.type;
        this.userProperties = $.userProperties;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureMLExecutePipelineActivityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureMLExecutePipelineActivityResponse $;

        public Builder() {
            $ = new AzureMLExecutePipelineActivityResponse();
        }

        public Builder(AzureMLExecutePipelineActivityResponse defaults) {
            $ = new AzureMLExecutePipelineActivityResponse(Objects.requireNonNull(defaults));
        }

        public Builder continueOnStepFailure(@Nullable Object continueOnStepFailure) {
            $.continueOnStepFailure = continueOnStepFailure;
            return this;
        }

        public Builder dataPathAssignments(@Nullable Object dataPathAssignments) {
            $.dataPathAssignments = dataPathAssignments;
            return this;
        }

        public Builder dependsOn(@Nullable List<ActivityDependencyResponse> dependsOn) {
            $.dependsOn = dependsOn;
            return this;
        }

        public Builder dependsOn(ActivityDependencyResponse... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder experimentName(@Nullable Object experimentName) {
            $.experimentName = experimentName;
            return this;
        }

        public Builder linkedServiceName(@Nullable LinkedServiceReferenceResponse linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        public Builder mlParentRunId(@Nullable Object mlParentRunId) {
            $.mlParentRunId = mlParentRunId;
            return this;
        }

        public Builder mlPipelineEndpointId(@Nullable Object mlPipelineEndpointId) {
            $.mlPipelineEndpointId = mlPipelineEndpointId;
            return this;
        }

        public Builder mlPipelineId(@Nullable Object mlPipelineId) {
            $.mlPipelineId = mlPipelineId;
            return this;
        }

        public Builder mlPipelineParameters(@Nullable Object mlPipelineParameters) {
            $.mlPipelineParameters = mlPipelineParameters;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder policy(@Nullable ActivityPolicyResponse policy) {
            $.policy = policy;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder userProperties(@Nullable List<UserPropertyResponse> userProperties) {
            $.userProperties = userProperties;
            return this;
        }

        public Builder userProperties(UserPropertyResponse... userProperties) {
            return userProperties(List.of(userProperties));
        }

        public Builder version(@Nullable Object version) {
            $.version = version;
            return this;
        }

        public AzureMLExecutePipelineActivityResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
