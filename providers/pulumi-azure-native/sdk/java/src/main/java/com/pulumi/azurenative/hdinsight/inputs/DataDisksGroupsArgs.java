// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hdinsight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The data disks groups for the role.
 * 
 */
public final class DataDisksGroupsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataDisksGroupsArgs Empty = new DataDisksGroupsArgs();

    /**
     * The number of disks per node.
     * 
     */
    @Import(name="disksPerNode")
    private @Nullable Output<Integer> disksPerNode;

    /**
     * @return The number of disks per node.
     * 
     */
    public Optional<Output<Integer>> disksPerNode() {
        return Optional.ofNullable(this.disksPerNode);
    }

    private DataDisksGroupsArgs() {}

    private DataDisksGroupsArgs(DataDisksGroupsArgs $) {
        this.disksPerNode = $.disksPerNode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataDisksGroupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataDisksGroupsArgs $;

        public Builder() {
            $ = new DataDisksGroupsArgs();
        }

        public Builder(DataDisksGroupsArgs defaults) {
            $ = new DataDisksGroupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disksPerNode The number of disks per node.
         * 
         * @return builder
         * 
         */
        public Builder disksPerNode(@Nullable Output<Integer> disksPerNode) {
            $.disksPerNode = disksPerNode;
            return this;
        }

        /**
         * @param disksPerNode The number of disks per node.
         * 
         * @return builder
         * 
         */
        public Builder disksPerNode(Integer disksPerNode) {
            return disksPerNode(Output.of(disksPerNode));
        }

        public DataDisksGroupsArgs build() {
            return $;
        }
    }

}
