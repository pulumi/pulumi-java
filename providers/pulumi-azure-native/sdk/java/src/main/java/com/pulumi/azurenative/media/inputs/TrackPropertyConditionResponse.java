// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class to specify one track property condition
 * 
 */
public final class TrackPropertyConditionResponse extends com.pulumi.resources.InvokeArgs {

    public static final TrackPropertyConditionResponse Empty = new TrackPropertyConditionResponse();

    /**
     * Track property condition operation
     * 
     */
    @Import(name="operation", required=true)
    private String operation;

    public String operation() {
        return this.operation;
    }

    /**
     * Track property type
     * 
     */
    @Import(name="property", required=true)
    private String property;

    public String property() {
        return this.property;
    }

    /**
     * Track property value
     * 
     */
    @Import(name="value")
    private @Nullable String value;

    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    private TrackPropertyConditionResponse() {}

    private TrackPropertyConditionResponse(TrackPropertyConditionResponse $) {
        this.operation = $.operation;
        this.property = $.property;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrackPropertyConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrackPropertyConditionResponse $;

        public Builder() {
            $ = new TrackPropertyConditionResponse();
        }

        public Builder(TrackPropertyConditionResponse defaults) {
            $ = new TrackPropertyConditionResponse(Objects.requireNonNull(defaults));
        }

        public Builder operation(String operation) {
            $.operation = operation;
            return this;
        }

        public Builder property(String property) {
            $.property = property;
            return this;
        }

        public Builder value(@Nullable String value) {
            $.value = value;
            return this;
        }

        public TrackPropertyConditionResponse build() {
            $.operation = Objects.requireNonNull($.operation, "expected parameter 'operation' to be non-null");
            $.property = Objects.requireNonNull($.property, "expected parameter 'property' to be non-null");
            return $;
        }
    }

}
