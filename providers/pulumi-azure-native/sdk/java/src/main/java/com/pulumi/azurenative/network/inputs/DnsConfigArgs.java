// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class containing DNS settings in a Traffic Manager profile.
 * 
 */
public final class DnsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DnsConfigArgs Empty = new DnsConfigArgs();

    /**
     * The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
     * 
     */
    @Import(name="relativeName")
    private @Nullable Output<String> relativeName;

    /**
     * @return The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
     * 
     */
    public Optional<Output<String>> relativeName() {
        return Optional.ofNullable(this.relativeName);
    }

    /**
     * The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<Double> ttl;

    /**
     * @return The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
     * 
     */
    public Optional<Output<Double>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private DnsConfigArgs() {}

    private DnsConfigArgs(DnsConfigArgs $) {
        this.relativeName = $.relativeName;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsConfigArgs $;

        public Builder() {
            $ = new DnsConfigArgs();
        }

        public Builder(DnsConfigArgs defaults) {
            $ = new DnsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param relativeName The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
         * 
         * @return builder
         * 
         */
        public Builder relativeName(@Nullable Output<String> relativeName) {
            $.relativeName = relativeName;
            return this;
        }

        /**
         * @param relativeName The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
         * 
         * @return builder
         * 
         */
        public Builder relativeName(String relativeName) {
            return relativeName(Output.of(relativeName));
        }

        /**
         * @param ttl The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<Double> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Double ttl) {
            return ttl(Output.of(ttl));
        }

        public DnsConfigArgs build() {
            return $;
        }
    }

}
