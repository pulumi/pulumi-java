// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Identity attributes of a lab user.
 * 
 */
public final class UserIdentityResponse extends com.pulumi.resources.InvokeArgs {

    public static final UserIdentityResponse Empty = new UserIdentityResponse();

    /**
     * Set to the app Id of the client JWT making the request.
     * 
     */
    @Import(name="appId")
    private @Nullable String appId;

    /**
     * @return Set to the app Id of the client JWT making the request.
     * 
     */
    public Optional<String> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
     * 
     */
    @Import(name="objectId")
    private @Nullable String objectId;

    /**
     * @return Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
     * 
     */
    public Optional<String> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
     * 
     */
    @Import(name="principalId")
    private @Nullable String principalId;

    /**
     * @return Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
     * 
     */
    public Optional<String> principalId() {
        return Optional.ofNullable(this.principalId);
    }

    /**
     * Set to the principal name / UPN of the client JWT making the request.
     * 
     */
    @Import(name="principalName")
    private @Nullable String principalName;

    /**
     * @return Set to the principal name / UPN of the client JWT making the request.
     * 
     */
    public Optional<String> principalName() {
        return Optional.ofNullable(this.principalName);
    }

    /**
     * Set to the tenant ID of the client JWT making the request.
     * 
     */
    @Import(name="tenantId")
    private @Nullable String tenantId;

    /**
     * @return Set to the tenant ID of the client JWT making the request.
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private UserIdentityResponse() {}

    private UserIdentityResponse(UserIdentityResponse $) {
        this.appId = $.appId;
        this.objectId = $.objectId;
        this.principalId = $.principalId;
        this.principalName = $.principalName;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserIdentityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserIdentityResponse $;

        public Builder() {
            $ = new UserIdentityResponse();
        }

        public Builder(UserIdentityResponse defaults) {
            $ = new UserIdentityResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId Set to the app Id of the client JWT making the request.
         * 
         * @return builder
         * 
         */
        public Builder appId(@Nullable String appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param objectId Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable String objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param principalId Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
         * 
         * @return builder
         * 
         */
        public Builder principalId(@Nullable String principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param principalName Set to the principal name / UPN of the client JWT making the request.
         * 
         * @return builder
         * 
         */
        public Builder principalName(@Nullable String principalName) {
            $.principalName = principalName;
            return this;
        }

        /**
         * @param tenantId Set to the tenant ID of the client JWT making the request.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public UserIdentityResponse build() {
            return $;
        }
    }

}
