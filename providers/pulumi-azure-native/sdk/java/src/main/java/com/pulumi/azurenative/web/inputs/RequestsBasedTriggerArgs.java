// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Trigger based on total requests.
 * 
 */
public final class RequestsBasedTriggerArgs extends com.pulumi.resources.ResourceArgs {

    public static final RequestsBasedTriggerArgs Empty = new RequestsBasedTriggerArgs();

    /**
     * Request Count.
     * 
     */
    @Import(name="count")
    private @Nullable Output<Integer> count;

    /**
     * @return Request Count.
     * 
     */
    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    /**
     * Time interval.
     * 
     */
    @Import(name="timeInterval")
    private @Nullable Output<String> timeInterval;

    /**
     * @return Time interval.
     * 
     */
    public Optional<Output<String>> timeInterval() {
        return Optional.ofNullable(this.timeInterval);
    }

    private RequestsBasedTriggerArgs() {}

    private RequestsBasedTriggerArgs(RequestsBasedTriggerArgs $) {
        this.count = $.count;
        this.timeInterval = $.timeInterval;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestsBasedTriggerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestsBasedTriggerArgs $;

        public Builder() {
            $ = new RequestsBasedTriggerArgs();
        }

        public Builder(RequestsBasedTriggerArgs defaults) {
            $ = new RequestsBasedTriggerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param count Request Count.
         * 
         * @return builder
         * 
         */
        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        /**
         * @param count Request Count.
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        /**
         * @param timeInterval Time interval.
         * 
         * @return builder
         * 
         */
        public Builder timeInterval(@Nullable Output<String> timeInterval) {
            $.timeInterval = timeInterval;
            return this;
        }

        /**
         * @param timeInterval Time interval.
         * 
         * @return builder
         * 
         */
        public Builder timeInterval(String timeInterval) {
            return timeInterval(Output.of(timeInterval));
        }

        public RequestsBasedTriggerArgs build() {
            return $;
        }
    }

}
