// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.aadiam.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


/**
 * Specifies the retention policy for the log.
 * 
 */
public final class RetentionPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final RetentionPolicyResponse Empty = new RetentionPolicyResponse();

    /**
     * The number of days for the retention in days. A value of 0 will retain the events indefinitely.
     * 
     */
    @Import(name="days", required=true)
    private Integer days;

    /**
     * @return The number of days for the retention in days. A value of 0 will retain the events indefinitely.
     * 
     */
    public Integer days() {
        return this.days;
    }

    /**
     * A value indicating whether the retention policy is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Boolean enabled;

    /**
     * @return A value indicating whether the retention policy is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }

    private RetentionPolicyResponse() {}

    private RetentionPolicyResponse(RetentionPolicyResponse $) {
        this.days = $.days;
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RetentionPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RetentionPolicyResponse $;

        public Builder() {
            $ = new RetentionPolicyResponse();
        }

        public Builder(RetentionPolicyResponse defaults) {
            $ = new RetentionPolicyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param days The number of days for the retention in days. A value of 0 will retain the events indefinitely.
         * 
         * @return builder
         * 
         */
        public Builder days(Integer days) {
            $.days = days;
            return this;
        }

        /**
         * @param enabled A value indicating whether the retention policy is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public RetentionPolicyResponse build() {
            $.days = Objects.requireNonNull($.days, "expected parameter 'days' to be non-null");
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
