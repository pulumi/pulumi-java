// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.outputs;

import com.pulumi.azurenative.web.outputs.AppLogsConfigurationResponse;
import com.pulumi.azurenative.web.outputs.ArcConfigurationResponse;
import com.pulumi.azurenative.web.outputs.ExtendedLocationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKubeEnvironmentResult {
    private final @Nullable String aksResourceID;
    /**
     * @return Cluster configuration which enables the log daemon to export
     * app logs to a destination. Currently only &#34;log-analytics&#34; is
     * supported
     * 
     */
    private final @Nullable AppLogsConfigurationResponse appLogsConfiguration;
    /**
     * @return Cluster configuration which determines the ARC cluster
     * components types. Eg: Choosing between BuildService kind,
     * FrontEnd Service ArtifactsStorageType etc.
     * 
     */
    private final @Nullable ArcConfigurationResponse arcConfiguration;
    /**
     * @return Default Domain Name for the cluster
     * 
     */
    private final String defaultDomain;
    /**
     * @return Any errors that occurred during deployment or deployment validation
     * 
     */
    private final String deploymentErrors;
    /**
     * @return Extended Location.
     * 
     */
    private final @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * @return Resource Id.
     * 
     */
    private final String id;
    /**
     * @return Only visible within Vnet/Subnet
     * 
     */
    private final @Nullable Boolean internalLoadBalancerEnabled;
    /**
     * @return Kind of resource.
     * 
     */
    private final @Nullable String kind;
    /**
     * @return Resource Location.
     * 
     */
    private final String location;
    /**
     * @return Resource Name.
     * 
     */
    private final String name;
    /**
     * @return Provisioning state of the Kubernetes Environment.
     * 
     */
    private final String provisioningState;
    /**
     * @return Static IP of the KubeEnvironment
     * 
     */
    private final @Nullable String staticIp;
    /**
     * @return Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return Resource type.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetKubeEnvironmentResult(
        @CustomType.Parameter("aksResourceID") @Nullable String aksResourceID,
        @CustomType.Parameter("appLogsConfiguration") @Nullable AppLogsConfigurationResponse appLogsConfiguration,
        @CustomType.Parameter("arcConfiguration") @Nullable ArcConfigurationResponse arcConfiguration,
        @CustomType.Parameter("defaultDomain") String defaultDomain,
        @CustomType.Parameter("deploymentErrors") String deploymentErrors,
        @CustomType.Parameter("extendedLocation") @Nullable ExtendedLocationResponse extendedLocation,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("internalLoadBalancerEnabled") @Nullable Boolean internalLoadBalancerEnabled,
        @CustomType.Parameter("kind") @Nullable String kind,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("staticIp") @Nullable String staticIp,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.aksResourceID = aksResourceID;
        this.appLogsConfiguration = appLogsConfiguration;
        this.arcConfiguration = arcConfiguration;
        this.defaultDomain = defaultDomain;
        this.deploymentErrors = deploymentErrors;
        this.extendedLocation = extendedLocation;
        this.id = id;
        this.internalLoadBalancerEnabled = internalLoadBalancerEnabled;
        this.kind = kind;
        this.location = location;
        this.name = name;
        this.provisioningState = provisioningState;
        this.staticIp = staticIp;
        this.tags = tags;
        this.type = type;
    }

    public Optional<String> aksResourceID() {
        return Optional.ofNullable(this.aksResourceID);
    }
    /**
     * @return Cluster configuration which enables the log daemon to export
     * app logs to a destination. Currently only &#34;log-analytics&#34; is
     * supported
     * 
     */
    public Optional<AppLogsConfigurationResponse> appLogsConfiguration() {
        return Optional.ofNullable(this.appLogsConfiguration);
    }
    /**
     * @return Cluster configuration which determines the ARC cluster
     * components types. Eg: Choosing between BuildService kind,
     * FrontEnd Service ArtifactsStorageType etc.
     * 
     */
    public Optional<ArcConfigurationResponse> arcConfiguration() {
        return Optional.ofNullable(this.arcConfiguration);
    }
    /**
     * @return Default Domain Name for the cluster
     * 
     */
    public String defaultDomain() {
        return this.defaultDomain;
    }
    /**
     * @return Any errors that occurred during deployment or deployment validation
     * 
     */
    public String deploymentErrors() {
        return this.deploymentErrors;
    }
    /**
     * @return Extended Location.
     * 
     */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * @return Resource Id.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Only visible within Vnet/Subnet
     * 
     */
    public Optional<Boolean> internalLoadBalancerEnabled() {
        return Optional.ofNullable(this.internalLoadBalancerEnabled);
    }
    /**
     * @return Kind of resource.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return Resource Location.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource Name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provisioning state of the Kubernetes Environment.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Static IP of the KubeEnvironment
     * 
     */
    public Optional<String> staticIp() {
        return Optional.ofNullable(this.staticIp);
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubeEnvironmentResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String aksResourceID;
        private @Nullable AppLogsConfigurationResponse appLogsConfiguration;
        private @Nullable ArcConfigurationResponse arcConfiguration;
        private String defaultDomain;
        private String deploymentErrors;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private String id;
        private @Nullable Boolean internalLoadBalancerEnabled;
        private @Nullable String kind;
        private String location;
        private String name;
        private String provisioningState;
        private @Nullable String staticIp;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetKubeEnvironmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aksResourceID = defaults.aksResourceID;
    	      this.appLogsConfiguration = defaults.appLogsConfiguration;
    	      this.arcConfiguration = defaults.arcConfiguration;
    	      this.defaultDomain = defaults.defaultDomain;
    	      this.deploymentErrors = defaults.deploymentErrors;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.id = defaults.id;
    	      this.internalLoadBalancerEnabled = defaults.internalLoadBalancerEnabled;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.staticIp = defaults.staticIp;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder aksResourceID(@Nullable String aksResourceID) {
            this.aksResourceID = aksResourceID;
            return this;
        }
        public Builder appLogsConfiguration(@Nullable AppLogsConfigurationResponse appLogsConfiguration) {
            this.appLogsConfiguration = appLogsConfiguration;
            return this;
        }
        public Builder arcConfiguration(@Nullable ArcConfigurationResponse arcConfiguration) {
            this.arcConfiguration = arcConfiguration;
            return this;
        }
        public Builder defaultDomain(String defaultDomain) {
            this.defaultDomain = Objects.requireNonNull(defaultDomain);
            return this;
        }
        public Builder deploymentErrors(String deploymentErrors) {
            this.deploymentErrors = Objects.requireNonNull(deploymentErrors);
            return this;
        }
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder internalLoadBalancerEnabled(@Nullable Boolean internalLoadBalancerEnabled) {
            this.internalLoadBalancerEnabled = internalLoadBalancerEnabled;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder staticIp(@Nullable String staticIp) {
            this.staticIp = staticIp;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetKubeEnvironmentResult build() {
            return new GetKubeEnvironmentResult(aksResourceID, appLogsConfiguration, arcConfiguration, defaultDomain, deploymentErrors, extendedLocation, id, internalLoadBalancerEnabled, kind, location, name, provisioningState, staticIp, tags, type);
        }
    }
}
