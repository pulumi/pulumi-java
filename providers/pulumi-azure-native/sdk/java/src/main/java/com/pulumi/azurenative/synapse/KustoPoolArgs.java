// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse;

import com.pulumi.azurenative.synapse.enums.EngineType;
import com.pulumi.azurenative.synapse.inputs.AzureSkuArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KustoPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final KustoPoolArgs Empty = new KustoPoolArgs();

    /**
     * The engine type
     * 
     */
    @Import(name="engineType")
    private @Nullable Output<Either<String,EngineType>> engineType;

    /**
     * @return The engine type
     * 
     */
    public Optional<Output<Either<String,EngineType>>> engineType() {
        return Optional.ofNullable(this.engineType);
    }

    /**
     * The name of the Kusto pool.
     * 
     */
    @Import(name="kustoPoolName")
    private @Nullable Output<String> kustoPoolName;

    /**
     * @return The name of the Kusto pool.
     * 
     */
    public Optional<Output<String>> kustoPoolName() {
        return Optional.ofNullable(this.kustoPoolName);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The SKU of the kusto pool.
     * 
     */
    @Import(name="sku", required=true)
    private Output<AzureSkuArgs> sku;

    /**
     * @return The SKU of the kusto pool.
     * 
     */
    public Output<AzureSkuArgs> sku() {
        return this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The name of the workspace
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    /**
     * @return The name of the workspace
     * 
     */
    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    /**
     * The workspace unique identifier.
     * 
     */
    @Import(name="workspaceUid")
    private @Nullable Output<String> workspaceUid;

    /**
     * @return The workspace unique identifier.
     * 
     */
    public Optional<Output<String>> workspaceUid() {
        return Optional.ofNullable(this.workspaceUid);
    }

    private KustoPoolArgs() {}

    private KustoPoolArgs(KustoPoolArgs $) {
        this.engineType = $.engineType;
        this.kustoPoolName = $.kustoPoolName;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.workspaceName = $.workspaceName;
        this.workspaceUid = $.workspaceUid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KustoPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KustoPoolArgs $;

        public Builder() {
            $ = new KustoPoolArgs();
        }

        public Builder(KustoPoolArgs defaults) {
            $ = new KustoPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param engineType The engine type
         * 
         * @return builder
         * 
         */
        public Builder engineType(@Nullable Output<Either<String,EngineType>> engineType) {
            $.engineType = engineType;
            return this;
        }

        /**
         * @param engineType The engine type
         * 
         * @return builder
         * 
         */
        public Builder engineType(Either<String,EngineType> engineType) {
            return engineType(Output.of(engineType));
        }

        /**
         * @param engineType The engine type
         * 
         * @return builder
         * 
         */
        public Builder engineType(String engineType) {
            return engineType(Either.ofLeft(engineType));
        }

        /**
         * @param engineType The engine type
         * 
         * @return builder
         * 
         */
        public Builder engineType(EngineType engineType) {
            return engineType(Either.ofRight(engineType));
        }

        /**
         * @param kustoPoolName The name of the Kusto pool.
         * 
         * @return builder
         * 
         */
        public Builder kustoPoolName(@Nullable Output<String> kustoPoolName) {
            $.kustoPoolName = kustoPoolName;
            return this;
        }

        /**
         * @param kustoPoolName The name of the Kusto pool.
         * 
         * @return builder
         * 
         */
        public Builder kustoPoolName(String kustoPoolName) {
            return kustoPoolName(Output.of(kustoPoolName));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku The SKU of the kusto pool.
         * 
         * @return builder
         * 
         */
        public Builder sku(Output<AzureSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The SKU of the kusto pool.
         * 
         * @return builder
         * 
         */
        public Builder sku(AzureSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param workspaceName The name of the workspace
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        /**
         * @param workspaceName The name of the workspace
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        /**
         * @param workspaceUid The workspace unique identifier.
         * 
         * @return builder
         * 
         */
        public Builder workspaceUid(@Nullable Output<String> workspaceUid) {
            $.workspaceUid = workspaceUid;
            return this;
        }

        /**
         * @param workspaceUid The workspace unique identifier.
         * 
         * @return builder
         * 
         */
        public Builder workspaceUid(String workspaceUid) {
            return workspaceUid(Output.of(workspaceUid));
        }

        public KustoPoolArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sku = Objects.requireNonNull($.sku, "expected parameter 'sku' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
