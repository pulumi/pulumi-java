// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.network.InboundNatRuleArgs;
import com.pulumi.azurenative.network.outputs.NetworkInterfaceIPConfigurationResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Inbound NAT rule of the load balancer.
 * API Version: 2020-11-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:InboundNatRule natRule1.1 /subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/inboundNatRules/natRule1.1 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:InboundNatRule")
public class InboundNatRule extends com.pulumi.resources.CustomResource {
    /**
     * A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
     * 
     */
    @Export(name="backendIPConfiguration", type=NetworkInterfaceIPConfigurationResponse.class, parameters={})
    private Output<NetworkInterfaceIPConfigurationResponse> backendIPConfiguration;

    /**
     * @return A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
     * 
     */
    public Output<NetworkInterfaceIPConfigurationResponse> backendIPConfiguration() {
        return this.backendIPConfiguration;
    }
    /**
     * The port used for the internal endpoint. Acceptable values range from 1 to 65535.
     * 
     */
    @Export(name="backendPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> backendPort;

    /**
     * @return The port used for the internal endpoint. Acceptable values range from 1 to 65535.
     * 
     */
    public Output<Optional<Integer>> backendPort() {
        return Codegen.optional(this.backendPort);
    }
    /**
     * Configures a virtual machine&#39;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can&#39;t be changed after you create the endpoint.
     * 
     */
    @Export(name="enableFloatingIP", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableFloatingIP;

    /**
     * @return Configures a virtual machine&#39;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can&#39;t be changed after you create the endpoint.
     * 
     */
    public Output<Optional<Boolean>> enableFloatingIP() {
        return Codegen.optional(this.enableFloatingIP);
    }
    /**
     * Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
     * 
     */
    @Export(name="enableTcpReset", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableTcpReset;

    /**
     * @return Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
     * 
     */
    public Output<Optional<Boolean>> enableTcpReset() {
        return Codegen.optional(this.enableTcpReset);
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * A reference to frontend IP addresses.
     * 
     */
    @Export(name="frontendIPConfiguration", type=SubResourceResponse.class, parameters={})
    private Output</* @Nullable */ SubResourceResponse> frontendIPConfiguration;

    /**
     * @return A reference to frontend IP addresses.
     * 
     */
    public Output<Optional<SubResourceResponse>> frontendIPConfiguration() {
        return Codegen.optional(this.frontendIPConfiguration);
    }
    /**
     * The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
     * 
     */
    @Export(name="frontendPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> frontendPort;

    /**
     * @return The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
     * 
     */
    public Output<Optional<Integer>> frontendPort() {
        return Codegen.optional(this.frontendPort);
    }
    /**
     * The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
     * 
     */
    @Export(name="idleTimeoutInMinutes", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> idleTimeoutInMinutes;

    /**
     * @return The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
     * 
     */
    public Output<Optional<Integer>> idleTimeoutInMinutes() {
        return Codegen.optional(this.idleTimeoutInMinutes);
    }
    /**
     * The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    /**
     * The reference to the transport protocol used by the load balancing rule.
     * 
     */
    @Export(name="protocol", type=String.class, parameters={})
    private Output</* @Nullable */ String> protocol;

    /**
     * @return The reference to the transport protocol used by the load balancing rule.
     * 
     */
    public Output<Optional<String>> protocol() {
        return Codegen.optional(this.protocol);
    }
    /**
     * The provisioning state of the inbound NAT rule resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the inbound NAT rule resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Type of the resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of the resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InboundNatRule(String name) {
        this(name, InboundNatRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InboundNatRule(String name, InboundNatRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InboundNatRule(String name, InboundNatRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:InboundNatRule", name, args == null ? InboundNatRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InboundNatRule(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:InboundNatRule", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:network/v20170601:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20170801:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20170901:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20171001:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20171101:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180101:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180201:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180401:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180601:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180701:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180801:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181001:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181101:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181201:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190201:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190401:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190601:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190701:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190801:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190901:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191101:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191201:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200301:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200401:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200501:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200601:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200701:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200801:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20201101:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210201:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210301:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210501:InboundNatRule").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210801:InboundNatRule").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InboundNatRule get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InboundNatRule(name, id, options);
    }
}
