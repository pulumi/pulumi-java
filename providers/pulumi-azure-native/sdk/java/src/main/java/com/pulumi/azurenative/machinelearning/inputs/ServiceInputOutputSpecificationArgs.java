// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearning.inputs;

import com.pulumi.azurenative.machinelearning.inputs.TableSpecificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The swagger 2.0 schema describing the service&#39;s inputs or outputs. See Swagger specification: http://swagger.io/specification/
 * 
 */
public final class ServiceInputOutputSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceInputOutputSpecificationArgs Empty = new ServiceInputOutputSpecificationArgs();

    /**
     * The description of the Swagger schema.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Swagger schema.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
     * 
     */
    @Import(name="properties", required=true)
    private Output<Map<String,TableSpecificationArgs>> properties;

    /**
     * @return Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
     * 
     */
    public Output<Map<String,TableSpecificationArgs>> properties() {
        return this.properties;
    }

    /**
     * The title of your Swagger schema.
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    /**
     * @return The title of your Swagger schema.
     * 
     */
    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    /**
     * The type of the entity described in swagger. Always &#39;object&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the entity described in swagger. Always &#39;object&#39;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private ServiceInputOutputSpecificationArgs() {}

    private ServiceInputOutputSpecificationArgs(ServiceInputOutputSpecificationArgs $) {
        this.description = $.description;
        this.properties = $.properties;
        this.title = $.title;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceInputOutputSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceInputOutputSpecificationArgs $;

        public Builder() {
            $ = new ServiceInputOutputSpecificationArgs();
        }

        public Builder(ServiceInputOutputSpecificationArgs defaults) {
            $ = new ServiceInputOutputSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the Swagger schema.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Swagger schema.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param properties Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
         * 
         * @return builder
         * 
         */
        public Builder properties(Output<Map<String,TableSpecificationArgs>> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
         * 
         * @return builder
         * 
         */
        public Builder properties(Map<String,TableSpecificationArgs> properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param title The title of your Swagger schema.
         * 
         * @return builder
         * 
         */
        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title The title of your Swagger schema.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        /**
         * @param type The type of the entity described in swagger. Always &#39;object&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the entity described in swagger. Always &#39;object&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ServiceInputOutputSpecificationArgs build() {
            $.properties = Objects.requireNonNull($.properties, "expected parameter 'properties' to be non-null");
            $.type = Codegen.stringProp("type").output().arg($.type).def("object").require();
            return $;
        }
    }

}
