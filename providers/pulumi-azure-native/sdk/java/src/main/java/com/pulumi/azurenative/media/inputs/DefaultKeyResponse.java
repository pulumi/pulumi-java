// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class to specify properties of default content key for each encryption scheme
 * 
 */
public final class DefaultKeyResponse extends com.pulumi.resources.InvokeArgs {

    public static final DefaultKeyResponse Empty = new DefaultKeyResponse();

    /**
     * Label can be used to specify Content Key when creating a Streaming Locator
     * 
     */
    @Import(name="label")
    private @Nullable String label;

    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * Policy used by Default Key
     * 
     */
    @Import(name="policyName")
    private @Nullable String policyName;

    public Optional<String> policyName() {
        return Optional.ofNullable(this.policyName);
    }

    private DefaultKeyResponse() {}

    private DefaultKeyResponse(DefaultKeyResponse $) {
        this.label = $.label;
        this.policyName = $.policyName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultKeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultKeyResponse $;

        public Builder() {
            $ = new DefaultKeyResponse();
        }

        public Builder(DefaultKeyResponse defaults) {
            $ = new DefaultKeyResponse(Objects.requireNonNull(defaults));
        }

        public Builder label(@Nullable String label) {
            $.label = label;
            return this;
        }

        public Builder policyName(@Nullable String policyName) {
            $.policyName = policyName;
            return this;
        }

        public DefaultKeyResponse build() {
            return $;
        }
    }

}
