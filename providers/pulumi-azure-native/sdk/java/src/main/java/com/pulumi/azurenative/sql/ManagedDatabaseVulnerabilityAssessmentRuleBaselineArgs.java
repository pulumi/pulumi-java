// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql;

import com.pulumi.azurenative.sql.inputs.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs Empty = new ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs();

    /**
     * The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
     * 
     */
    @Import(name="baselineName")
    private @Nullable Output<String> baselineName;

    /**
     * @return The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
     * 
     */
    public Optional<Output<String>> baselineName() {
        return Optional.ofNullable(this.baselineName);
    }

    /**
     * The rule baseline result
     * 
     */
    @Import(name="baselineResults", required=true)
    private Output<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults;

    /**
     * @return The rule baseline result
     * 
     */
    public Output<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults() {
        return this.baselineResults;
    }

    /**
     * The name of the database for which the vulnerability assessment rule baseline is defined.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    /**
     * @return The name of the database for which the vulnerability assessment rule baseline is defined.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * The name of the managed instance.
     * 
     */
    @Import(name="managedInstanceName", required=true)
    private Output<String> managedInstanceName;

    /**
     * @return The name of the managed instance.
     * 
     */
    public Output<String> managedInstanceName() {
        return this.managedInstanceName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The vulnerability assessment rule ID.
     * 
     */
    @Import(name="ruleId", required=true)
    private Output<String> ruleId;

    /**
     * @return The vulnerability assessment rule ID.
     * 
     */
    public Output<String> ruleId() {
        return this.ruleId;
    }

    /**
     * The name of the vulnerability assessment.
     * 
     */
    @Import(name="vulnerabilityAssessmentName", required=true)
    private Output<String> vulnerabilityAssessmentName;

    /**
     * @return The name of the vulnerability assessment.
     * 
     */
    public Output<String> vulnerabilityAssessmentName() {
        return this.vulnerabilityAssessmentName;
    }

    private ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs() {}

    private ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs(ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs $) {
        this.baselineName = $.baselineName;
        this.baselineResults = $.baselineResults;
        this.databaseName = $.databaseName;
        this.managedInstanceName = $.managedInstanceName;
        this.resourceGroupName = $.resourceGroupName;
        this.ruleId = $.ruleId;
        this.vulnerabilityAssessmentName = $.vulnerabilityAssessmentName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs $;

        public Builder() {
            $ = new ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs();
        }

        public Builder(ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs defaults) {
            $ = new ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
         * 
         * @return builder
         * 
         */
        public Builder baselineName(@Nullable Output<String> baselineName) {
            $.baselineName = baselineName;
            return this;
        }

        /**
         * @param baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
         * 
         * @return builder
         * 
         */
        public Builder baselineName(String baselineName) {
            return baselineName(Output.of(baselineName));
        }

        /**
         * @param baselineResults The rule baseline result
         * 
         * @return builder
         * 
         */
        public Builder baselineResults(Output<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults) {
            $.baselineResults = baselineResults;
            return this;
        }

        /**
         * @param baselineResults The rule baseline result
         * 
         * @return builder
         * 
         */
        public Builder baselineResults(List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs> baselineResults) {
            return baselineResults(Output.of(baselineResults));
        }

        /**
         * @param baselineResults The rule baseline result
         * 
         * @return builder
         * 
         */
        public Builder baselineResults(DatabaseVulnerabilityAssessmentRuleBaselineItemArgs... baselineResults) {
            return baselineResults(List.of(baselineResults));
        }

        /**
         * @param databaseName The name of the database for which the vulnerability assessment rule baseline is defined.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName The name of the database for which the vulnerability assessment rule baseline is defined.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param managedInstanceName The name of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceName(Output<String> managedInstanceName) {
            $.managedInstanceName = managedInstanceName;
            return this;
        }

        /**
         * @param managedInstanceName The name of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceName(String managedInstanceName) {
            return managedInstanceName(Output.of(managedInstanceName));
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param ruleId The vulnerability assessment rule ID.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId The vulnerability assessment rule ID.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        /**
         * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
         * 
         * @return builder
         * 
         */
        public Builder vulnerabilityAssessmentName(Output<String> vulnerabilityAssessmentName) {
            $.vulnerabilityAssessmentName = vulnerabilityAssessmentName;
            return this;
        }

        /**
         * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
         * 
         * @return builder
         * 
         */
        public Builder vulnerabilityAssessmentName(String vulnerabilityAssessmentName) {
            return vulnerabilityAssessmentName(Output.of(vulnerabilityAssessmentName));
        }

        public ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs build() {
            $.baselineResults = Objects.requireNonNull($.baselineResults, "expected parameter 'baselineResults' to be non-null");
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.managedInstanceName = Objects.requireNonNull($.managedInstanceName, "expected parameter 'managedInstanceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.ruleId = Objects.requireNonNull($.ruleId, "expected parameter 'ruleId' to be non-null");
            $.vulnerabilityAssessmentName = Objects.requireNonNull($.vulnerabilityAssessmentName, "expected parameter 'vulnerabilityAssessmentName' to be non-null");
            return $;
        }
    }

}
