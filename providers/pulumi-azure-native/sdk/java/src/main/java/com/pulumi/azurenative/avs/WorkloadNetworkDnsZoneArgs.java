// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.avs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkloadNetworkDnsZoneArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadNetworkDnsZoneArgs Empty = new WorkloadNetworkDnsZoneArgs();

    /**
     * Display name of the DNS Zone.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * DNS Server IP array of the DNS Zone.
     * 
     */
    @Import(name="dnsServerIps")
    private @Nullable Output<List<String>> dnsServerIps;

    public Optional<Output<List<String>>> dnsServerIps() {
        return Optional.ofNullable(this.dnsServerIps);
    }

    /**
     * Number of DNS Services using the DNS zone.
     * 
     */
    @Import(name="dnsServices")
    private @Nullable Output<Double> dnsServices;

    public Optional<Output<Double>> dnsServices() {
        return Optional.ofNullable(this.dnsServices);
    }

    /**
     * NSX DNS Zone identifier. Generally the same as the DNS Zone&#39;s display name
     * 
     */
    @Import(name="dnsZoneId")
    private @Nullable Output<String> dnsZoneId;

    public Optional<Output<String>> dnsZoneId() {
        return Optional.ofNullable(this.dnsZoneId);
    }

    /**
     * Domain names of the DNS Zone.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<List<String>> domain;

    public Optional<Output<List<String>>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * Name of the private cloud
     * 
     */
    @Import(name="privateCloudName", required=true)
    private Output<String> privateCloudName;

    public Output<String> privateCloudName() {
        return this.privateCloudName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * NSX revision number.
     * 
     */
    @Import(name="revision")
    private @Nullable Output<Double> revision;

    public Optional<Output<Double>> revision() {
        return Optional.ofNullable(this.revision);
    }

    /**
     * Source IP of the DNS Zone.
     * 
     */
    @Import(name="sourceIp")
    private @Nullable Output<String> sourceIp;

    public Optional<Output<String>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    private WorkloadNetworkDnsZoneArgs() {}

    private WorkloadNetworkDnsZoneArgs(WorkloadNetworkDnsZoneArgs $) {
        this.displayName = $.displayName;
        this.dnsServerIps = $.dnsServerIps;
        this.dnsServices = $.dnsServices;
        this.dnsZoneId = $.dnsZoneId;
        this.domain = $.domain;
        this.privateCloudName = $.privateCloudName;
        this.resourceGroupName = $.resourceGroupName;
        this.revision = $.revision;
        this.sourceIp = $.sourceIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadNetworkDnsZoneArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadNetworkDnsZoneArgs $;

        public Builder() {
            $ = new WorkloadNetworkDnsZoneArgs();
        }

        public Builder(WorkloadNetworkDnsZoneArgs defaults) {
            $ = new WorkloadNetworkDnsZoneArgs(Objects.requireNonNull(defaults));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder dnsServerIps(@Nullable Output<List<String>> dnsServerIps) {
            $.dnsServerIps = dnsServerIps;
            return this;
        }

        public Builder dnsServerIps(List<String> dnsServerIps) {
            return dnsServerIps(Output.of(dnsServerIps));
        }

        public Builder dnsServerIps(String... dnsServerIps) {
            return dnsServerIps(List.of(dnsServerIps));
        }

        public Builder dnsServices(@Nullable Output<Double> dnsServices) {
            $.dnsServices = dnsServices;
            return this;
        }

        public Builder dnsServices(Double dnsServices) {
            return dnsServices(Output.of(dnsServices));
        }

        public Builder dnsZoneId(@Nullable Output<String> dnsZoneId) {
            $.dnsZoneId = dnsZoneId;
            return this;
        }

        public Builder dnsZoneId(String dnsZoneId) {
            return dnsZoneId(Output.of(dnsZoneId));
        }

        public Builder domain(@Nullable Output<List<String>> domain) {
            $.domain = domain;
            return this;
        }

        public Builder domain(List<String> domain) {
            return domain(Output.of(domain));
        }

        public Builder domain(String... domain) {
            return domain(List.of(domain));
        }

        public Builder privateCloudName(Output<String> privateCloudName) {
            $.privateCloudName = privateCloudName;
            return this;
        }

        public Builder privateCloudName(String privateCloudName) {
            return privateCloudName(Output.of(privateCloudName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder revision(@Nullable Output<Double> revision) {
            $.revision = revision;
            return this;
        }

        public Builder revision(Double revision) {
            return revision(Output.of(revision));
        }

        public Builder sourceIp(@Nullable Output<String> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        public Builder sourceIp(String sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        public WorkloadNetworkDnsZoneArgs build() {
            $.privateCloudName = Objects.requireNonNull($.privateCloudName, "expected parameter 'privateCloudName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
