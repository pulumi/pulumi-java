// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Staging info for execute data flow activity.
 * 
 */
public final class DataFlowStagingInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataFlowStagingInfoArgs Empty = new DataFlowStagingInfoArgs();

    /**
     * Folder path for staging blob. Type: string (or Expression with resultType string)
     * 
     */
    @Import(name="folderPath")
    private @Nullable Output<Object> folderPath;

    public Optional<Output<Object>> folderPath() {
        return Optional.ofNullable(this.folderPath);
    }

    /**
     * Staging linked service reference.
     * 
     */
    @Import(name="linkedService")
    private @Nullable Output<LinkedServiceReferenceArgs> linkedService;

    public Optional<Output<LinkedServiceReferenceArgs>> linkedService() {
        return Optional.ofNullable(this.linkedService);
    }

    private DataFlowStagingInfoArgs() {}

    private DataFlowStagingInfoArgs(DataFlowStagingInfoArgs $) {
        this.folderPath = $.folderPath;
        this.linkedService = $.linkedService;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataFlowStagingInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataFlowStagingInfoArgs $;

        public Builder() {
            $ = new DataFlowStagingInfoArgs();
        }

        public Builder(DataFlowStagingInfoArgs defaults) {
            $ = new DataFlowStagingInfoArgs(Objects.requireNonNull(defaults));
        }

        public Builder folderPath(@Nullable Output<Object> folderPath) {
            $.folderPath = folderPath;
            return this;
        }

        public Builder folderPath(Object folderPath) {
            return folderPath(Output.of(folderPath));
        }

        public Builder linkedService(@Nullable Output<LinkedServiceReferenceArgs> linkedService) {
            $.linkedService = linkedService;
            return this;
        }

        public Builder linkedService(LinkedServiceReferenceArgs linkedService) {
            return linkedService(Output.of(linkedService));
        }

        public DataFlowStagingInfoArgs build() {
            return $;
        }
    }

}
