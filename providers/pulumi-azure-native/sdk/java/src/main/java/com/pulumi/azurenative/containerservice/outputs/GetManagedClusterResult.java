// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.outputs;

import com.pulumi.azurenative.containerservice.outputs.ContainerServiceLinuxProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ContainerServiceNetworkProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ExtendedLocationResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterAADProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterAPIServerAccessProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterAddonProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterAgentPoolProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterAutoUpgradeProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterHTTPProxyConfigResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterIdentityResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterPodIdentityProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterPropertiesResponseAutoScalerProfile;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterPropertiesResponseIdentityProfile;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterSKUResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterServicePrincipalProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterWindowsProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.PowerStateResponse;
import com.pulumi.azurenative.containerservice.outputs.PrivateLinkResourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedClusterResult {
    /**
     * @return Profile of Azure Active Directory configuration.
     * 
     */
    private final @Nullable ManagedClusterAADProfileResponse aadProfile;
    /**
     * @return Profile of managed cluster add-on.
     * 
     */
    private final @Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles;
    /**
     * @return Properties of the agent pool.
     * 
     */
    private final @Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles;
    /**
     * @return Access profile for managed cluster API server.
     * 
     */
    private final @Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile;
    /**
     * @return Parameters to be applied to the cluster-autoscaler when enabled
     * 
     */
    private final @Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile;
    /**
     * @return Profile of auto upgrade configuration.
     * 
     */
    private final @Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile;
    /**
     * @return FQDN for the master pool which used by proxy config.
     * 
     */
    private final String azurePortalFQDN;
    /**
     * @return If set to true, getting static credential will be disabled for this cluster. Expected to only be used for AAD clusters.
     * 
     */
    private final @Nullable Boolean disableLocalAccounts;
    /**
     * @return ResourceId of the disk encryption set to use for enabling encryption at rest.
     * 
     */
    private final @Nullable String diskEncryptionSetID;
    /**
     * @return DNS prefix specified when creating the managed cluster.
     * 
     */
    private final @Nullable String dnsPrefix;
    /**
     * @return (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
     * 
     */
    private final @Nullable Boolean enablePodSecurityPolicy;
    /**
     * @return Whether to enable Kubernetes Role-Based Access Control.
     * 
     */
    private final @Nullable Boolean enableRBAC;
    /**
     * @return The extended location of the Virtual Machine.
     * 
     */
    private final @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * @return FQDN for the master pool.
     * 
     */
    private final String fqdn;
    /**
     * @return FQDN subdomain specified when creating private cluster with custom private dns zone.
     * 
     */
    private final @Nullable String fqdnSubdomain;
    /**
     * @return Configurations for provisioning the cluster with HTTP proxy servers.
     * 
     */
    private final @Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig;
    /**
     * @return Resource Id
     * 
     */
    private final String id;
    /**
     * @return The identity of the managed cluster, if configured.
     * 
     */
    private final @Nullable ManagedClusterIdentityResponse identity;
    /**
     * @return Identities associated with the cluster.
     * 
     */
    private final @Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile;
    /**
     * @return Version of Kubernetes specified when creating the managed cluster.
     * 
     */
    private final @Nullable String kubernetesVersion;
    /**
     * @return Profile for Linux VMs in the container service cluster.
     * 
     */
    private final @Nullable ContainerServiceLinuxProfileResponse linuxProfile;
    /**
     * @return Resource location
     * 
     */
    private final String location;
    /**
     * @return The max number of agent pools for the managed cluster.
     * 
     */
    private final Integer maxAgentPools;
    /**
     * @return Resource name
     * 
     */
    private final String name;
    /**
     * @return Profile of network configuration.
     * 
     */
    private final @Nullable ContainerServiceNetworkProfileResponse networkProfile;
    /**
     * @return Name of the resource group containing agent pool nodes.
     * 
     */
    private final @Nullable String nodeResourceGroup;
    /**
     * @return Profile of managed cluster pod identity.
     * 
     */
    private final @Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile;
    /**
     * @return Represents the Power State of the cluster
     * 
     */
    private final PowerStateResponse powerState;
    /**
     * @return FQDN of private cluster.
     * 
     */
    private final String privateFQDN;
    /**
     * @return Private link resources associated with the cluster.
     * 
     */
    private final @Nullable List<PrivateLinkResourceResponse> privateLinkResources;
    /**
     * @return The current deployment or provisioning state, which only appears in the response.
     * 
     */
    private final String provisioningState;
    /**
     * @return Information about a service principal identity for the cluster to use for manipulating Azure APIs.
     * 
     */
    private final @Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile;
    /**
     * @return The managed cluster SKU.
     * 
     */
    private final @Nullable ManagedClusterSKUResponse sku;
    /**
     * @return Resource tags
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private final String type;
    /**
     * @return Profile for Windows VMs in the container service cluster.
     * 
     */
    private final @Nullable ManagedClusterWindowsProfileResponse windowsProfile;

    @CustomType.Constructor
    private GetManagedClusterResult(
        @CustomType.Parameter("aadProfile") @Nullable ManagedClusterAADProfileResponse aadProfile,
        @CustomType.Parameter("addonProfiles") @Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles,
        @CustomType.Parameter("agentPoolProfiles") @Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles,
        @CustomType.Parameter("apiServerAccessProfile") @Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile,
        @CustomType.Parameter("autoScalerProfile") @Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile,
        @CustomType.Parameter("autoUpgradeProfile") @Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile,
        @CustomType.Parameter("azurePortalFQDN") String azurePortalFQDN,
        @CustomType.Parameter("disableLocalAccounts") @Nullable Boolean disableLocalAccounts,
        @CustomType.Parameter("diskEncryptionSetID") @Nullable String diskEncryptionSetID,
        @CustomType.Parameter("dnsPrefix") @Nullable String dnsPrefix,
        @CustomType.Parameter("enablePodSecurityPolicy") @Nullable Boolean enablePodSecurityPolicy,
        @CustomType.Parameter("enableRBAC") @Nullable Boolean enableRBAC,
        @CustomType.Parameter("extendedLocation") @Nullable ExtendedLocationResponse extendedLocation,
        @CustomType.Parameter("fqdn") String fqdn,
        @CustomType.Parameter("fqdnSubdomain") @Nullable String fqdnSubdomain,
        @CustomType.Parameter("httpProxyConfig") @Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identity") @Nullable ManagedClusterIdentityResponse identity,
        @CustomType.Parameter("identityProfile") @Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile,
        @CustomType.Parameter("kubernetesVersion") @Nullable String kubernetesVersion,
        @CustomType.Parameter("linuxProfile") @Nullable ContainerServiceLinuxProfileResponse linuxProfile,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("maxAgentPools") Integer maxAgentPools,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkProfile") @Nullable ContainerServiceNetworkProfileResponse networkProfile,
        @CustomType.Parameter("nodeResourceGroup") @Nullable String nodeResourceGroup,
        @CustomType.Parameter("podIdentityProfile") @Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile,
        @CustomType.Parameter("powerState") PowerStateResponse powerState,
        @CustomType.Parameter("privateFQDN") String privateFQDN,
        @CustomType.Parameter("privateLinkResources") @Nullable List<PrivateLinkResourceResponse> privateLinkResources,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("servicePrincipalProfile") @Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile,
        @CustomType.Parameter("sku") @Nullable ManagedClusterSKUResponse sku,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("windowsProfile") @Nullable ManagedClusterWindowsProfileResponse windowsProfile) {
        this.aadProfile = aadProfile;
        this.addonProfiles = addonProfiles;
        this.agentPoolProfiles = agentPoolProfiles;
        this.apiServerAccessProfile = apiServerAccessProfile;
        this.autoScalerProfile = autoScalerProfile;
        this.autoUpgradeProfile = autoUpgradeProfile;
        this.azurePortalFQDN = azurePortalFQDN;
        this.disableLocalAccounts = disableLocalAccounts;
        this.diskEncryptionSetID = diskEncryptionSetID;
        this.dnsPrefix = dnsPrefix;
        this.enablePodSecurityPolicy = enablePodSecurityPolicy;
        this.enableRBAC = enableRBAC;
        this.extendedLocation = extendedLocation;
        this.fqdn = fqdn;
        this.fqdnSubdomain = fqdnSubdomain;
        this.httpProxyConfig = httpProxyConfig;
        this.id = id;
        this.identity = identity;
        this.identityProfile = identityProfile;
        this.kubernetesVersion = kubernetesVersion;
        this.linuxProfile = linuxProfile;
        this.location = location;
        this.maxAgentPools = maxAgentPools;
        this.name = name;
        this.networkProfile = networkProfile;
        this.nodeResourceGroup = nodeResourceGroup;
        this.podIdentityProfile = podIdentityProfile;
        this.powerState = powerState;
        this.privateFQDN = privateFQDN;
        this.privateLinkResources = privateLinkResources;
        this.provisioningState = provisioningState;
        this.servicePrincipalProfile = servicePrincipalProfile;
        this.sku = sku;
        this.tags = tags;
        this.type = type;
        this.windowsProfile = windowsProfile;
    }

    /**
     * @return Profile of Azure Active Directory configuration.
     * 
     */
    public Optional<ManagedClusterAADProfileResponse> aadProfile() {
        return Optional.ofNullable(this.aadProfile);
    }
    /**
     * @return Profile of managed cluster add-on.
     * 
     */
    public Map<String,ManagedClusterAddonProfileResponse> addonProfiles() {
        return this.addonProfiles == null ? Map.of() : this.addonProfiles;
    }
    /**
     * @return Properties of the agent pool.
     * 
     */
    public List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles() {
        return this.agentPoolProfiles == null ? List.of() : this.agentPoolProfiles;
    }
    /**
     * @return Access profile for managed cluster API server.
     * 
     */
    public Optional<ManagedClusterAPIServerAccessProfileResponse> apiServerAccessProfile() {
        return Optional.ofNullable(this.apiServerAccessProfile);
    }
    /**
     * @return Parameters to be applied to the cluster-autoscaler when enabled
     * 
     */
    public Optional<ManagedClusterPropertiesResponseAutoScalerProfile> autoScalerProfile() {
        return Optional.ofNullable(this.autoScalerProfile);
    }
    /**
     * @return Profile of auto upgrade configuration.
     * 
     */
    public Optional<ManagedClusterAutoUpgradeProfileResponse> autoUpgradeProfile() {
        return Optional.ofNullable(this.autoUpgradeProfile);
    }
    /**
     * @return FQDN for the master pool which used by proxy config.
     * 
     */
    public String azurePortalFQDN() {
        return this.azurePortalFQDN;
    }
    /**
     * @return If set to true, getting static credential will be disabled for this cluster. Expected to only be used for AAD clusters.
     * 
     */
    public Optional<Boolean> disableLocalAccounts() {
        return Optional.ofNullable(this.disableLocalAccounts);
    }
    /**
     * @return ResourceId of the disk encryption set to use for enabling encryption at rest.
     * 
     */
    public Optional<String> diskEncryptionSetID() {
        return Optional.ofNullable(this.diskEncryptionSetID);
    }
    /**
     * @return DNS prefix specified when creating the managed cluster.
     * 
     */
    public Optional<String> dnsPrefix() {
        return Optional.ofNullable(this.dnsPrefix);
    }
    /**
     * @return (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
     * 
     */
    public Optional<Boolean> enablePodSecurityPolicy() {
        return Optional.ofNullable(this.enablePodSecurityPolicy);
    }
    /**
     * @return Whether to enable Kubernetes Role-Based Access Control.
     * 
     */
    public Optional<Boolean> enableRBAC() {
        return Optional.ofNullable(this.enableRBAC);
    }
    /**
     * @return The extended location of the Virtual Machine.
     * 
     */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * @return FQDN for the master pool.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return FQDN subdomain specified when creating private cluster with custom private dns zone.
     * 
     */
    public Optional<String> fqdnSubdomain() {
        return Optional.ofNullable(this.fqdnSubdomain);
    }
    /**
     * @return Configurations for provisioning the cluster with HTTP proxy servers.
     * 
     */
    public Optional<ManagedClusterHTTPProxyConfigResponse> httpProxyConfig() {
        return Optional.ofNullable(this.httpProxyConfig);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The identity of the managed cluster, if configured.
     * 
     */
    public Optional<ManagedClusterIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return Identities associated with the cluster.
     * 
     */
    public Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile() {
        return this.identityProfile == null ? Map.of() : this.identityProfile;
    }
    /**
     * @return Version of Kubernetes specified when creating the managed cluster.
     * 
     */
    public Optional<String> kubernetesVersion() {
        return Optional.ofNullable(this.kubernetesVersion);
    }
    /**
     * @return Profile for Linux VMs in the container service cluster.
     * 
     */
    public Optional<ContainerServiceLinuxProfileResponse> linuxProfile() {
        return Optional.ofNullable(this.linuxProfile);
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The max number of agent pools for the managed cluster.
     * 
     */
    public Integer maxAgentPools() {
        return this.maxAgentPools;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Profile of network configuration.
     * 
     */
    public Optional<ContainerServiceNetworkProfileResponse> networkProfile() {
        return Optional.ofNullable(this.networkProfile);
    }
    /**
     * @return Name of the resource group containing agent pool nodes.
     * 
     */
    public Optional<String> nodeResourceGroup() {
        return Optional.ofNullable(this.nodeResourceGroup);
    }
    /**
     * @return Profile of managed cluster pod identity.
     * 
     */
    public Optional<ManagedClusterPodIdentityProfileResponse> podIdentityProfile() {
        return Optional.ofNullable(this.podIdentityProfile);
    }
    /**
     * @return Represents the Power State of the cluster
     * 
     */
    public PowerStateResponse powerState() {
        return this.powerState;
    }
    /**
     * @return FQDN of private cluster.
     * 
     */
    public String privateFQDN() {
        return this.privateFQDN;
    }
    /**
     * @return Private link resources associated with the cluster.
     * 
     */
    public List<PrivateLinkResourceResponse> privateLinkResources() {
        return this.privateLinkResources == null ? List.of() : this.privateLinkResources;
    }
    /**
     * @return The current deployment or provisioning state, which only appears in the response.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Information about a service principal identity for the cluster to use for manipulating Azure APIs.
     * 
     */
    public Optional<ManagedClusterServicePrincipalProfileResponse> servicePrincipalProfile() {
        return Optional.ofNullable(this.servicePrincipalProfile);
    }
    /**
     * @return The managed cluster SKU.
     * 
     */
    public Optional<ManagedClusterSKUResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Profile for Windows VMs in the container service cluster.
     * 
     */
    public Optional<ManagedClusterWindowsProfileResponse> windowsProfile() {
        return Optional.ofNullable(this.windowsProfile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ManagedClusterAADProfileResponse aadProfile;
        private @Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles;
        private @Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles;
        private @Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile;
        private @Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile;
        private @Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile;
        private String azurePortalFQDN;
        private @Nullable Boolean disableLocalAccounts;
        private @Nullable String diskEncryptionSetID;
        private @Nullable String dnsPrefix;
        private @Nullable Boolean enablePodSecurityPolicy;
        private @Nullable Boolean enableRBAC;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private String fqdn;
        private @Nullable String fqdnSubdomain;
        private @Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig;
        private String id;
        private @Nullable ManagedClusterIdentityResponse identity;
        private @Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile;
        private @Nullable String kubernetesVersion;
        private @Nullable ContainerServiceLinuxProfileResponse linuxProfile;
        private String location;
        private Integer maxAgentPools;
        private String name;
        private @Nullable ContainerServiceNetworkProfileResponse networkProfile;
        private @Nullable String nodeResourceGroup;
        private @Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile;
        private PowerStateResponse powerState;
        private String privateFQDN;
        private @Nullable List<PrivateLinkResourceResponse> privateLinkResources;
        private String provisioningState;
        private @Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile;
        private @Nullable ManagedClusterSKUResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable ManagedClusterWindowsProfileResponse windowsProfile;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadProfile = defaults.aadProfile;
    	      this.addonProfiles = defaults.addonProfiles;
    	      this.agentPoolProfiles = defaults.agentPoolProfiles;
    	      this.apiServerAccessProfile = defaults.apiServerAccessProfile;
    	      this.autoScalerProfile = defaults.autoScalerProfile;
    	      this.autoUpgradeProfile = defaults.autoUpgradeProfile;
    	      this.azurePortalFQDN = defaults.azurePortalFQDN;
    	      this.disableLocalAccounts = defaults.disableLocalAccounts;
    	      this.diskEncryptionSetID = defaults.diskEncryptionSetID;
    	      this.dnsPrefix = defaults.dnsPrefix;
    	      this.enablePodSecurityPolicy = defaults.enablePodSecurityPolicy;
    	      this.enableRBAC = defaults.enableRBAC;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.fqdn = defaults.fqdn;
    	      this.fqdnSubdomain = defaults.fqdnSubdomain;
    	      this.httpProxyConfig = defaults.httpProxyConfig;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.identityProfile = defaults.identityProfile;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.linuxProfile = defaults.linuxProfile;
    	      this.location = defaults.location;
    	      this.maxAgentPools = defaults.maxAgentPools;
    	      this.name = defaults.name;
    	      this.networkProfile = defaults.networkProfile;
    	      this.nodeResourceGroup = defaults.nodeResourceGroup;
    	      this.podIdentityProfile = defaults.podIdentityProfile;
    	      this.powerState = defaults.powerState;
    	      this.privateFQDN = defaults.privateFQDN;
    	      this.privateLinkResources = defaults.privateLinkResources;
    	      this.provisioningState = defaults.provisioningState;
    	      this.servicePrincipalProfile = defaults.servicePrincipalProfile;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.windowsProfile = defaults.windowsProfile;
        }

        public Builder aadProfile(@Nullable ManagedClusterAADProfileResponse aadProfile) {
            this.aadProfile = aadProfile;
            return this;
        }
        public Builder addonProfiles(@Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles) {
            this.addonProfiles = addonProfiles;
            return this;
        }
        public Builder agentPoolProfiles(@Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles) {
            this.agentPoolProfiles = agentPoolProfiles;
            return this;
        }
        public Builder agentPoolProfiles(ManagedClusterAgentPoolProfileResponse... agentPoolProfiles) {
            return agentPoolProfiles(List.of(agentPoolProfiles));
        }
        public Builder apiServerAccessProfile(@Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile) {
            this.apiServerAccessProfile = apiServerAccessProfile;
            return this;
        }
        public Builder autoScalerProfile(@Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile) {
            this.autoScalerProfile = autoScalerProfile;
            return this;
        }
        public Builder autoUpgradeProfile(@Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile) {
            this.autoUpgradeProfile = autoUpgradeProfile;
            return this;
        }
        public Builder azurePortalFQDN(String azurePortalFQDN) {
            this.azurePortalFQDN = Objects.requireNonNull(azurePortalFQDN);
            return this;
        }
        public Builder disableLocalAccounts(@Nullable Boolean disableLocalAccounts) {
            this.disableLocalAccounts = disableLocalAccounts;
            return this;
        }
        public Builder diskEncryptionSetID(@Nullable String diskEncryptionSetID) {
            this.diskEncryptionSetID = diskEncryptionSetID;
            return this;
        }
        public Builder dnsPrefix(@Nullable String dnsPrefix) {
            this.dnsPrefix = dnsPrefix;
            return this;
        }
        public Builder enablePodSecurityPolicy(@Nullable Boolean enablePodSecurityPolicy) {
            this.enablePodSecurityPolicy = enablePodSecurityPolicy;
            return this;
        }
        public Builder enableRBAC(@Nullable Boolean enableRBAC) {
            this.enableRBAC = enableRBAC;
            return this;
        }
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        public Builder fqdnSubdomain(@Nullable String fqdnSubdomain) {
            this.fqdnSubdomain = fqdnSubdomain;
            return this;
        }
        public Builder httpProxyConfig(@Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig) {
            this.httpProxyConfig = httpProxyConfig;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identity(@Nullable ManagedClusterIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        public Builder identityProfile(@Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile) {
            this.identityProfile = identityProfile;
            return this;
        }
        public Builder kubernetesVersion(@Nullable String kubernetesVersion) {
            this.kubernetesVersion = kubernetesVersion;
            return this;
        }
        public Builder linuxProfile(@Nullable ContainerServiceLinuxProfileResponse linuxProfile) {
            this.linuxProfile = linuxProfile;
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder maxAgentPools(Integer maxAgentPools) {
            this.maxAgentPools = Objects.requireNonNull(maxAgentPools);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkProfile(@Nullable ContainerServiceNetworkProfileResponse networkProfile) {
            this.networkProfile = networkProfile;
            return this;
        }
        public Builder nodeResourceGroup(@Nullable String nodeResourceGroup) {
            this.nodeResourceGroup = nodeResourceGroup;
            return this;
        }
        public Builder podIdentityProfile(@Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile) {
            this.podIdentityProfile = podIdentityProfile;
            return this;
        }
        public Builder powerState(PowerStateResponse powerState) {
            this.powerState = Objects.requireNonNull(powerState);
            return this;
        }
        public Builder privateFQDN(String privateFQDN) {
            this.privateFQDN = Objects.requireNonNull(privateFQDN);
            return this;
        }
        public Builder privateLinkResources(@Nullable List<PrivateLinkResourceResponse> privateLinkResources) {
            this.privateLinkResources = privateLinkResources;
            return this;
        }
        public Builder privateLinkResources(PrivateLinkResourceResponse... privateLinkResources) {
            return privateLinkResources(List.of(privateLinkResources));
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder servicePrincipalProfile(@Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile) {
            this.servicePrincipalProfile = servicePrincipalProfile;
            return this;
        }
        public Builder sku(@Nullable ManagedClusterSKUResponse sku) {
            this.sku = sku;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder windowsProfile(@Nullable ManagedClusterWindowsProfileResponse windowsProfile) {
            this.windowsProfile = windowsProfile;
            return this;
        }        public GetManagedClusterResult build() {
            return new GetManagedClusterResult(aadProfile, addonProfiles, agentPoolProfiles, apiServerAccessProfile, autoScalerProfile, autoUpgradeProfile, azurePortalFQDN, disableLocalAccounts, diskEncryptionSetID, dnsPrefix, enablePodSecurityPolicy, enableRBAC, extendedLocation, fqdn, fqdnSubdomain, httpProxyConfig, id, identity, identityProfile, kubernetesVersion, linuxProfile, location, maxAgentPools, name, networkProfile, nodeResourceGroup, podIdentityProfile, powerState, privateFQDN, privateLinkResources, provisioningState, servicePrincipalProfile, sku, tags, type, windowsProfile);
        }
    }
}
