// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.azurenative.media.inputs.TrackPropertyConditionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class to select a track
 * 
 */
public final class TrackSelectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final TrackSelectionArgs Empty = new TrackSelectionArgs();

    /**
     * TrackSelections is a track property condition list which can specify track(s)
     * 
     */
    @Import(name="trackSelections")
    private @Nullable Output<List<TrackPropertyConditionArgs>> trackSelections;

    /**
     * @return TrackSelections is a track property condition list which can specify track(s)
     * 
     */
    public Optional<Output<List<TrackPropertyConditionArgs>>> trackSelections() {
        return Optional.ofNullable(this.trackSelections);
    }

    private TrackSelectionArgs() {}

    private TrackSelectionArgs(TrackSelectionArgs $) {
        this.trackSelections = $.trackSelections;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrackSelectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrackSelectionArgs $;

        public Builder() {
            $ = new TrackSelectionArgs();
        }

        public Builder(TrackSelectionArgs defaults) {
            $ = new TrackSelectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param trackSelections TrackSelections is a track property condition list which can specify track(s)
         * 
         * @return builder
         * 
         */
        public Builder trackSelections(@Nullable Output<List<TrackPropertyConditionArgs>> trackSelections) {
            $.trackSelections = trackSelections;
            return this;
        }

        /**
         * @param trackSelections TrackSelections is a track property condition list which can specify track(s)
         * 
         * @return builder
         * 
         */
        public Builder trackSelections(List<TrackPropertyConditionArgs> trackSelections) {
            return trackSelections(Output.of(trackSelections));
        }

        /**
         * @param trackSelections TrackSelections is a track property condition list which can specify track(s)
         * 
         * @return builder
         * 
         */
        public Builder trackSelections(TrackPropertyConditionArgs... trackSelections) {
            return trackSelections(List.of(trackSelections));
        }

        public TrackSelectionArgs build() {
            return $;
        }
    }

}
