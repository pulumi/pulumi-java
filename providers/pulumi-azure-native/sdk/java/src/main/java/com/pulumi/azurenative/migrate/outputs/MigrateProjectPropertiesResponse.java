// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.outputs;

import com.pulumi.azurenative.migrate.outputs.DatabaseProjectSummaryResponse;
import com.pulumi.azurenative.migrate.outputs.ServersProjectSummaryResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrateProjectPropertiesResponse {
    /**
     * @return Gets the last time the project summary was refreshed.
     * 
     */
    private final String lastSummaryRefreshedTime;
    /**
     * @return Provisioning state of the migrate project.
     * 
     */
    private final @Nullable String provisioningState;
    /**
     * @return Gets the refresh summary state.
     * 
     */
    private final String refreshSummaryState;
    /**
     * @return Gets or sets the list of tools registered with the migrate project.
     * 
     */
    private final @Nullable List<String> registeredTools;
    /**
     * @return Gets the summary of the migrate project.
     * 
     */
    private final Map<String,Either<DatabaseProjectSummaryResponse,ServersProjectSummaryResponse>> summary;

    @CustomType.Constructor
    private MigrateProjectPropertiesResponse(
        @CustomType.Parameter("lastSummaryRefreshedTime") String lastSummaryRefreshedTime,
        @CustomType.Parameter("provisioningState") @Nullable String provisioningState,
        @CustomType.Parameter("refreshSummaryState") String refreshSummaryState,
        @CustomType.Parameter("registeredTools") @Nullable List<String> registeredTools,
        @CustomType.Parameter("summary") Map<String,Either<DatabaseProjectSummaryResponse,ServersProjectSummaryResponse>> summary) {
        this.lastSummaryRefreshedTime = lastSummaryRefreshedTime;
        this.provisioningState = provisioningState;
        this.refreshSummaryState = refreshSummaryState;
        this.registeredTools = registeredTools;
        this.summary = summary;
    }

    /**
     * @return Gets the last time the project summary was refreshed.
     * 
     */
    public String lastSummaryRefreshedTime() {
        return this.lastSummaryRefreshedTime;
    }
    /**
     * @return Provisioning state of the migrate project.
     * 
     */
    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }
    /**
     * @return Gets the refresh summary state.
     * 
     */
    public String refreshSummaryState() {
        return this.refreshSummaryState;
    }
    /**
     * @return Gets or sets the list of tools registered with the migrate project.
     * 
     */
    public List<String> registeredTools() {
        return this.registeredTools == null ? List.of() : this.registeredTools;
    }
    /**
     * @return Gets the summary of the migrate project.
     * 
     */
    public Map<String,Either<DatabaseProjectSummaryResponse,ServersProjectSummaryResponse>> summary() {
        return this.summary;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateProjectPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String lastSummaryRefreshedTime;
        private @Nullable String provisioningState;
        private String refreshSummaryState;
        private @Nullable List<String> registeredTools;
        private Map<String,Either<DatabaseProjectSummaryResponse,ServersProjectSummaryResponse>> summary;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrateProjectPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lastSummaryRefreshedTime = defaults.lastSummaryRefreshedTime;
    	      this.provisioningState = defaults.provisioningState;
    	      this.refreshSummaryState = defaults.refreshSummaryState;
    	      this.registeredTools = defaults.registeredTools;
    	      this.summary = defaults.summary;
        }

        public Builder lastSummaryRefreshedTime(String lastSummaryRefreshedTime) {
            this.lastSummaryRefreshedTime = Objects.requireNonNull(lastSummaryRefreshedTime);
            return this;
        }
        public Builder provisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        public Builder refreshSummaryState(String refreshSummaryState) {
            this.refreshSummaryState = Objects.requireNonNull(refreshSummaryState);
            return this;
        }
        public Builder registeredTools(@Nullable List<String> registeredTools) {
            this.registeredTools = registeredTools;
            return this;
        }
        public Builder registeredTools(String... registeredTools) {
            return registeredTools(List.of(registeredTools));
        }
        public Builder summary(Map<String,Either<DatabaseProjectSummaryResponse,ServersProjectSummaryResponse>> summary) {
            this.summary = Objects.requireNonNull(summary);
            return this;
        }        public MigrateProjectPropertiesResponse build() {
            return new MigrateProjectPropertiesResponse(lastSummaryRefreshedTime, provisioningState, refreshSummaryState, registeredTools, summary);
        }
    }
}
