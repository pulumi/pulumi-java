// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.AddressPrefixItemResponse;
import com.pulumi.azurenative.network.inputs.ConfigurationGroupResponse;
import com.pulumi.azurenative.network.inputs.NetworkManagerSecurityGroupItemResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Network security user rule.
 * 
 */
public final class ActiveSecurityUserRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final ActiveSecurityUserRuleResponse Empty = new ActiveSecurityUserRuleResponse();

    /**
     * Deployment time string.
     * 
     */
    @Import(name="commitTime")
    private @Nullable String commitTime;

    /**
     * @return Deployment time string.
     * 
     */
    public Optional<String> commitTime() {
        return Optional.ofNullable(this.commitTime);
    }

    /**
     * A description of the security user configuration.
     * 
     */
    @Import(name="configurationDescription")
    private @Nullable String configurationDescription;

    /**
     * @return A description of the security user configuration.
     * 
     */
    public Optional<String> configurationDescription() {
        return Optional.ofNullable(this.configurationDescription);
    }

    /**
     * A display name of the security user configuration.
     * 
     */
    @Import(name="configurationDisplayName")
    private @Nullable String configurationDisplayName;

    /**
     * @return A display name of the security user configuration.
     * 
     */
    public Optional<String> configurationDisplayName() {
        return Optional.ofNullable(this.configurationDisplayName);
    }

    /**
     * A description for this rule.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return A description for this rule.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The destination port ranges.
     * 
     */
    @Import(name="destinationPortRanges")
    private @Nullable List<String> destinationPortRanges;

    /**
     * @return The destination port ranges.
     * 
     */
    public Optional<List<String>> destinationPortRanges() {
        return Optional.ofNullable(this.destinationPortRanges);
    }

    /**
     * The destination address prefixes. CIDR or destination IP ranges.
     * 
     */
    @Import(name="destinations")
    private @Nullable List<AddressPrefixItemResponse> destinations;

    /**
     * @return The destination address prefixes. CIDR or destination IP ranges.
     * 
     */
    public Optional<List<AddressPrefixItemResponse>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * Indicates if the traffic matched against the rule in inbound or outbound.
     * 
     */
    @Import(name="direction", required=true)
    private String direction;

    /**
     * @return Indicates if the traffic matched against the rule in inbound or outbound.
     * 
     */
    public String direction() {
        return this.direction;
    }

    /**
     * A friendly name for the rule.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A friendly name for the rule.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Whether the rule is custom or default.
     * Expected value is &#39;Custom&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private String kind;

    /**
     * @return Whether the rule is custom or default.
     * Expected value is &#39;Custom&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Network protocol this rule applies to.
     * 
     */
    @Import(name="protocol", required=true)
    private String protocol;

    /**
     * @return Network protocol this rule applies to.
     * 
     */
    public String protocol() {
        return this.protocol;
    }

    /**
     * The provisioning state of the security configuration user rule resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return The provisioning state of the security configuration user rule resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Deployment region.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return Deployment region.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Groups for rule collection
     * 
     */
    @Import(name="ruleCollectionAppliesToGroups")
    private @Nullable List<NetworkManagerSecurityGroupItemResponse> ruleCollectionAppliesToGroups;

    /**
     * @return Groups for rule collection
     * 
     */
    public Optional<List<NetworkManagerSecurityGroupItemResponse>> ruleCollectionAppliesToGroups() {
        return Optional.ofNullable(this.ruleCollectionAppliesToGroups);
    }

    /**
     * A description of the rule collection.
     * 
     */
    @Import(name="ruleCollectionDescription")
    private @Nullable String ruleCollectionDescription;

    /**
     * @return A description of the rule collection.
     * 
     */
    public Optional<String> ruleCollectionDescription() {
        return Optional.ofNullable(this.ruleCollectionDescription);
    }

    /**
     * A display name of the rule collection.
     * 
     */
    @Import(name="ruleCollectionDisplayName")
    private @Nullable String ruleCollectionDisplayName;

    /**
     * @return A display name of the rule collection.
     * 
     */
    public Optional<String> ruleCollectionDisplayName() {
        return Optional.ofNullable(this.ruleCollectionDisplayName);
    }

    /**
     * Effective configuration groups.
     * 
     */
    @Import(name="ruleGroups")
    private @Nullable List<ConfigurationGroupResponse> ruleGroups;

    /**
     * @return Effective configuration groups.
     * 
     */
    public Optional<List<ConfigurationGroupResponse>> ruleGroups() {
        return Optional.ofNullable(this.ruleGroups);
    }

    /**
     * The source port ranges.
     * 
     */
    @Import(name="sourcePortRanges")
    private @Nullable List<String> sourcePortRanges;

    /**
     * @return The source port ranges.
     * 
     */
    public Optional<List<String>> sourcePortRanges() {
        return Optional.ofNullable(this.sourcePortRanges);
    }

    /**
     * The CIDR or source IP ranges.
     * 
     */
    @Import(name="sources")
    private @Nullable List<AddressPrefixItemResponse> sources;

    /**
     * @return The CIDR or source IP ranges.
     * 
     */
    public Optional<List<AddressPrefixItemResponse>> sources() {
        return Optional.ofNullable(this.sources);
    }

    private ActiveSecurityUserRuleResponse() {}

    private ActiveSecurityUserRuleResponse(ActiveSecurityUserRuleResponse $) {
        this.commitTime = $.commitTime;
        this.configurationDescription = $.configurationDescription;
        this.configurationDisplayName = $.configurationDisplayName;
        this.description = $.description;
        this.destinationPortRanges = $.destinationPortRanges;
        this.destinations = $.destinations;
        this.direction = $.direction;
        this.displayName = $.displayName;
        this.id = $.id;
        this.kind = $.kind;
        this.protocol = $.protocol;
        this.provisioningState = $.provisioningState;
        this.region = $.region;
        this.ruleCollectionAppliesToGroups = $.ruleCollectionAppliesToGroups;
        this.ruleCollectionDescription = $.ruleCollectionDescription;
        this.ruleCollectionDisplayName = $.ruleCollectionDisplayName;
        this.ruleGroups = $.ruleGroups;
        this.sourcePortRanges = $.sourcePortRanges;
        this.sources = $.sources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActiveSecurityUserRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActiveSecurityUserRuleResponse $;

        public Builder() {
            $ = new ActiveSecurityUserRuleResponse();
        }

        public Builder(ActiveSecurityUserRuleResponse defaults) {
            $ = new ActiveSecurityUserRuleResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param commitTime Deployment time string.
         * 
         * @return builder
         * 
         */
        public Builder commitTime(@Nullable String commitTime) {
            $.commitTime = commitTime;
            return this;
        }

        /**
         * @param configurationDescription A description of the security user configuration.
         * 
         * @return builder
         * 
         */
        public Builder configurationDescription(@Nullable String configurationDescription) {
            $.configurationDescription = configurationDescription;
            return this;
        }

        /**
         * @param configurationDisplayName A display name of the security user configuration.
         * 
         * @return builder
         * 
         */
        public Builder configurationDisplayName(@Nullable String configurationDisplayName) {
            $.configurationDisplayName = configurationDisplayName;
            return this;
        }

        /**
         * @param description A description for this rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param destinationPortRanges The destination port ranges.
         * 
         * @return builder
         * 
         */
        public Builder destinationPortRanges(@Nullable List<String> destinationPortRanges) {
            $.destinationPortRanges = destinationPortRanges;
            return this;
        }

        /**
         * @param destinationPortRanges The destination port ranges.
         * 
         * @return builder
         * 
         */
        public Builder destinationPortRanges(String... destinationPortRanges) {
            return destinationPortRanges(List.of(destinationPortRanges));
        }

        /**
         * @param destinations The destination address prefixes. CIDR or destination IP ranges.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable List<AddressPrefixItemResponse> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations The destination address prefixes. CIDR or destination IP ranges.
         * 
         * @return builder
         * 
         */
        public Builder destinations(AddressPrefixItemResponse... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param direction Indicates if the traffic matched against the rule in inbound or outbound.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param displayName A friendly name for the rule.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param kind Whether the rule is custom or default.
         * Expected value is &#39;Custom&#39;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param protocol Network protocol this rule applies to.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param provisioningState The provisioning state of the security configuration user rule resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param region Deployment region.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param ruleCollectionAppliesToGroups Groups for rule collection
         * 
         * @return builder
         * 
         */
        public Builder ruleCollectionAppliesToGroups(@Nullable List<NetworkManagerSecurityGroupItemResponse> ruleCollectionAppliesToGroups) {
            $.ruleCollectionAppliesToGroups = ruleCollectionAppliesToGroups;
            return this;
        }

        /**
         * @param ruleCollectionAppliesToGroups Groups for rule collection
         * 
         * @return builder
         * 
         */
        public Builder ruleCollectionAppliesToGroups(NetworkManagerSecurityGroupItemResponse... ruleCollectionAppliesToGroups) {
            return ruleCollectionAppliesToGroups(List.of(ruleCollectionAppliesToGroups));
        }

        /**
         * @param ruleCollectionDescription A description of the rule collection.
         * 
         * @return builder
         * 
         */
        public Builder ruleCollectionDescription(@Nullable String ruleCollectionDescription) {
            $.ruleCollectionDescription = ruleCollectionDescription;
            return this;
        }

        /**
         * @param ruleCollectionDisplayName A display name of the rule collection.
         * 
         * @return builder
         * 
         */
        public Builder ruleCollectionDisplayName(@Nullable String ruleCollectionDisplayName) {
            $.ruleCollectionDisplayName = ruleCollectionDisplayName;
            return this;
        }

        /**
         * @param ruleGroups Effective configuration groups.
         * 
         * @return builder
         * 
         */
        public Builder ruleGroups(@Nullable List<ConfigurationGroupResponse> ruleGroups) {
            $.ruleGroups = ruleGroups;
            return this;
        }

        /**
         * @param ruleGroups Effective configuration groups.
         * 
         * @return builder
         * 
         */
        public Builder ruleGroups(ConfigurationGroupResponse... ruleGroups) {
            return ruleGroups(List.of(ruleGroups));
        }

        /**
         * @param sourcePortRanges The source port ranges.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRanges(@Nullable List<String> sourcePortRanges) {
            $.sourcePortRanges = sourcePortRanges;
            return this;
        }

        /**
         * @param sourcePortRanges The source port ranges.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRanges(String... sourcePortRanges) {
            return sourcePortRanges(List.of(sourcePortRanges));
        }

        /**
         * @param sources The CIDR or source IP ranges.
         * 
         * @return builder
         * 
         */
        public Builder sources(@Nullable List<AddressPrefixItemResponse> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @param sources The CIDR or source IP ranges.
         * 
         * @return builder
         * 
         */
        public Builder sources(AddressPrefixItemResponse... sources) {
            return sources(List.of(sources));
        }

        public ActiveSecurityUserRuleResponse build() {
            $.direction = Objects.requireNonNull($.direction, "expected parameter 'direction' to be non-null");
            $.kind = Codegen.stringProp("kind").arg($.kind).require();
            $.protocol = Objects.requireNonNull($.protocol, "expected parameter 'protocol' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
