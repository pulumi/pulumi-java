// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.avs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * a powershell credential object
 * 
 */
public final class PSCredentialExecutionParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final PSCredentialExecutionParameterArgs Empty = new PSCredentialExecutionParameterArgs();

    /**
     * The parameter name
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * password for login
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The type of execution parameter
     * Expected value is &#39;Credential&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    /**
     * username for login
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private PSCredentialExecutionParameterArgs() {}

    private PSCredentialExecutionParameterArgs(PSCredentialExecutionParameterArgs $) {
        this.name = $.name;
        this.password = $.password;
        this.type = $.type;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PSCredentialExecutionParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PSCredentialExecutionParameterArgs $;

        public Builder() {
            $ = new PSCredentialExecutionParameterArgs();
        }

        public Builder(PSCredentialExecutionParameterArgs defaults) {
            $ = new PSCredentialExecutionParameterArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public PSCredentialExecutionParameterArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
