// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.enums.AssociationAccessMode;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NspAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final NspAssociationArgs Empty = new NspAssociationArgs();

    /**
     * Access mode on the association.
     * 
     */
    @Import(name="accessMode")
    private @Nullable Output<Either<String,AssociationAccessMode>> accessMode;

    /**
     * @return Access mode on the association.
     * 
     */
    public Optional<Output<Either<String,AssociationAccessMode>>> accessMode() {
        return Optional.ofNullable(this.accessMode);
    }

    /**
     * The name of the NSP association.
     * 
     */
    @Import(name="associationName")
    private @Nullable Output<String> associationName;

    /**
     * @return The name of the NSP association.
     * 
     */
    public Optional<Output<String>> associationName() {
        return Optional.ofNullable(this.associationName);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the network security perimeter.
     * 
     */
    @Import(name="networkSecurityPerimeterName", required=true)
    private Output<String> networkSecurityPerimeterName;

    /**
     * @return The name of the network security perimeter.
     * 
     */
    public Output<String> networkSecurityPerimeterName() {
        return this.networkSecurityPerimeterName;
    }

    /**
     * The PaaS resource to be associated.
     * 
     */
    @Import(name="privateLinkResource")
    private @Nullable Output<SubResourceArgs> privateLinkResource;

    /**
     * @return The PaaS resource to be associated.
     * 
     */
    public Optional<Output<SubResourceArgs>> privateLinkResource() {
        return Optional.ofNullable(this.privateLinkResource);
    }

    /**
     * Profile id to which the PaaS resource is associated.
     * 
     */
    @Import(name="profile")
    private @Nullable Output<SubResourceArgs> profile;

    /**
     * @return Profile id to which the PaaS resource is associated.
     * 
     */
    public Optional<Output<SubResourceArgs>> profile() {
        return Optional.ofNullable(this.profile);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private NspAssociationArgs() {}

    private NspAssociationArgs(NspAssociationArgs $) {
        this.accessMode = $.accessMode;
        this.associationName = $.associationName;
        this.id = $.id;
        this.location = $.location;
        this.name = $.name;
        this.networkSecurityPerimeterName = $.networkSecurityPerimeterName;
        this.privateLinkResource = $.privateLinkResource;
        this.profile = $.profile;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NspAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NspAssociationArgs $;

        public Builder() {
            $ = new NspAssociationArgs();
        }

        public Builder(NspAssociationArgs defaults) {
            $ = new NspAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessMode Access mode on the association.
         * 
         * @return builder
         * 
         */
        public Builder accessMode(@Nullable Output<Either<String,AssociationAccessMode>> accessMode) {
            $.accessMode = accessMode;
            return this;
        }

        /**
         * @param accessMode Access mode on the association.
         * 
         * @return builder
         * 
         */
        public Builder accessMode(Either<String,AssociationAccessMode> accessMode) {
            return accessMode(Output.of(accessMode));
        }

        /**
         * @param accessMode Access mode on the association.
         * 
         * @return builder
         * 
         */
        public Builder accessMode(String accessMode) {
            return accessMode(Either.ofLeft(accessMode));
        }

        /**
         * @param accessMode Access mode on the association.
         * 
         * @return builder
         * 
         */
        public Builder accessMode(AssociationAccessMode accessMode) {
            return accessMode(Either.ofRight(accessMode));
        }

        /**
         * @param associationName The name of the NSP association.
         * 
         * @return builder
         * 
         */
        public Builder associationName(@Nullable Output<String> associationName) {
            $.associationName = associationName;
            return this;
        }

        /**
         * @param associationName The name of the NSP association.
         * 
         * @return builder
         * 
         */
        public Builder associationName(String associationName) {
            return associationName(Output.of(associationName));
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param location Resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the resource that is unique within a resource group. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the resource that is unique within a resource group. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkSecurityPerimeterName The name of the network security perimeter.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityPerimeterName(Output<String> networkSecurityPerimeterName) {
            $.networkSecurityPerimeterName = networkSecurityPerimeterName;
            return this;
        }

        /**
         * @param networkSecurityPerimeterName The name of the network security perimeter.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityPerimeterName(String networkSecurityPerimeterName) {
            return networkSecurityPerimeterName(Output.of(networkSecurityPerimeterName));
        }

        /**
         * @param privateLinkResource The PaaS resource to be associated.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkResource(@Nullable Output<SubResourceArgs> privateLinkResource) {
            $.privateLinkResource = privateLinkResource;
            return this;
        }

        /**
         * @param privateLinkResource The PaaS resource to be associated.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkResource(SubResourceArgs privateLinkResource) {
            return privateLinkResource(Output.of(privateLinkResource));
        }

        /**
         * @param profile Profile id to which the PaaS resource is associated.
         * 
         * @return builder
         * 
         */
        public Builder profile(@Nullable Output<SubResourceArgs> profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param profile Profile id to which the PaaS resource is associated.
         * 
         * @return builder
         * 
         */
        public Builder profile(SubResourceArgs profile) {
            return profile(Output.of(profile));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public NspAssociationArgs build() {
            $.networkSecurityPerimeterName = Objects.requireNonNull($.networkSecurityPerimeterName, "expected parameter 'networkSecurityPerimeterName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
