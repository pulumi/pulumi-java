// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties related to service bus queue endpoint types.
 * 
 */
public final class RoutingServiceBusQueueEndpointPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final RoutingServiceBusQueueEndpointPropertiesResponse Empty = new RoutingServiceBusQueueEndpointPropertiesResponse();

    /**
     * Method used to authenticate against the service bus queue endpoint
     * 
     */
    @Import(name="authenticationType")
    private @Nullable String authenticationType;

    public Optional<String> authenticationType() {
        return Optional.ofNullable(this.authenticationType);
    }

    /**
     * The connection string of the service bus queue endpoint.
     * 
     */
    @Import(name="connectionString")
    private @Nullable String connectionString;

    public Optional<String> connectionString() {
        return Optional.ofNullable(this.connectionString);
    }

    /**
     * The url of the service bus queue endpoint. It must include the protocol sb://
     * 
     */
    @Import(name="endpointUri")
    private @Nullable String endpointUri;

    public Optional<String> endpointUri() {
        return Optional.ofNullable(this.endpointUri);
    }

    /**
     * Queue name on the service bus namespace
     * 
     */
    @Import(name="entityPath")
    private @Nullable String entityPath;

    public Optional<String> entityPath() {
        return Optional.ofNullable(this.entityPath);
    }

    /**
     * Id of the service bus queue endpoint
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * The name of the resource group of the service bus queue endpoint.
     * 
     */
    @Import(name="resourceGroup")
    private @Nullable String resourceGroup;

    public Optional<String> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }

    /**
     * The subscription identifier of the service bus queue endpoint.
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable String subscriptionId;

    public Optional<String> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    private RoutingServiceBusQueueEndpointPropertiesResponse() {}

    private RoutingServiceBusQueueEndpointPropertiesResponse(RoutingServiceBusQueueEndpointPropertiesResponse $) {
        this.authenticationType = $.authenticationType;
        this.connectionString = $.connectionString;
        this.endpointUri = $.endpointUri;
        this.entityPath = $.entityPath;
        this.id = $.id;
        this.name = $.name;
        this.resourceGroup = $.resourceGroup;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutingServiceBusQueueEndpointPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutingServiceBusQueueEndpointPropertiesResponse $;

        public Builder() {
            $ = new RoutingServiceBusQueueEndpointPropertiesResponse();
        }

        public Builder(RoutingServiceBusQueueEndpointPropertiesResponse defaults) {
            $ = new RoutingServiceBusQueueEndpointPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder authenticationType(@Nullable String authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        public Builder connectionString(@Nullable String connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        public Builder endpointUri(@Nullable String endpointUri) {
            $.endpointUri = endpointUri;
            return this;
        }

        public Builder entityPath(@Nullable String entityPath) {
            $.entityPath = entityPath;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder resourceGroup(@Nullable String resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        public Builder subscriptionId(@Nullable String subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        public RoutingServiceBusQueueEndpointPropertiesResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
