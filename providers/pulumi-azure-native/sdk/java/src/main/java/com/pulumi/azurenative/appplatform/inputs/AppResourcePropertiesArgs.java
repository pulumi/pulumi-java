// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.azurenative.appplatform.inputs.PersistentDiskArgs;
import com.pulumi.azurenative.appplatform.inputs.TemporaryDiskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * App resource properties payload
 * 
 */
public final class AppResourcePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppResourcePropertiesArgs Empty = new AppResourcePropertiesArgs();

    /**
     * Name of the active deployment of the App
     * 
     */
    @Import(name="activeDeploymentName")
    private @Nullable Output<String> activeDeploymentName;

    /**
     * @return Name of the active deployment of the App
     * 
     */
    public Optional<Output<String>> activeDeploymentName() {
        return Optional.ofNullable(this.activeDeploymentName);
    }

    /**
     * Fully qualified dns Name.
     * 
     */
    @Import(name="fqdn")
    private @Nullable Output<String> fqdn;

    /**
     * @return Fully qualified dns Name.
     * 
     */
    public Optional<Output<String>> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }

    /**
     * Indicate if only https is allowed.
     * 
     */
    @Import(name="httpsOnly")
    private @Nullable Output<Boolean> httpsOnly;

    /**
     * @return Indicate if only https is allowed.
     * 
     */
    public Optional<Output<Boolean>> httpsOnly() {
        return Optional.ofNullable(this.httpsOnly);
    }

    /**
     * Persistent disk settings
     * 
     */
    @Import(name="persistentDisk")
    private @Nullable Output<PersistentDiskArgs> persistentDisk;

    /**
     * @return Persistent disk settings
     * 
     */
    public Optional<Output<PersistentDiskArgs>> persistentDisk() {
        return Optional.ofNullable(this.persistentDisk);
    }

    /**
     * Indicates whether the App exposes public endpoint
     * 
     */
    @Import(name="public")
    private @Nullable Output<Boolean> public_;

    /**
     * @return Indicates whether the App exposes public endpoint
     * 
     */
    public Optional<Output<Boolean>> public_() {
        return Optional.ofNullable(this.public_);
    }

    /**
     * Temporary disk settings
     * 
     */
    @Import(name="temporaryDisk")
    private @Nullable Output<TemporaryDiskArgs> temporaryDisk;

    /**
     * @return Temporary disk settings
     * 
     */
    public Optional<Output<TemporaryDiskArgs>> temporaryDisk() {
        return Optional.ofNullable(this.temporaryDisk);
    }

    private AppResourcePropertiesArgs() {}

    private AppResourcePropertiesArgs(AppResourcePropertiesArgs $) {
        this.activeDeploymentName = $.activeDeploymentName;
        this.fqdn = $.fqdn;
        this.httpsOnly = $.httpsOnly;
        this.persistentDisk = $.persistentDisk;
        this.public_ = $.public_;
        this.temporaryDisk = $.temporaryDisk;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppResourcePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppResourcePropertiesArgs $;

        public Builder() {
            $ = new AppResourcePropertiesArgs();
        }

        public Builder(AppResourcePropertiesArgs defaults) {
            $ = new AppResourcePropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeDeploymentName Name of the active deployment of the App
         * 
         * @return builder
         * 
         */
        public Builder activeDeploymentName(@Nullable Output<String> activeDeploymentName) {
            $.activeDeploymentName = activeDeploymentName;
            return this;
        }

        /**
         * @param activeDeploymentName Name of the active deployment of the App
         * 
         * @return builder
         * 
         */
        public Builder activeDeploymentName(String activeDeploymentName) {
            return activeDeploymentName(Output.of(activeDeploymentName));
        }

        /**
         * @param fqdn Fully qualified dns Name.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(@Nullable Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        /**
         * @param fqdn Fully qualified dns Name.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        /**
         * @param httpsOnly Indicate if only https is allowed.
         * 
         * @return builder
         * 
         */
        public Builder httpsOnly(@Nullable Output<Boolean> httpsOnly) {
            $.httpsOnly = httpsOnly;
            return this;
        }

        /**
         * @param httpsOnly Indicate if only https is allowed.
         * 
         * @return builder
         * 
         */
        public Builder httpsOnly(Boolean httpsOnly) {
            return httpsOnly(Output.of(httpsOnly));
        }

        /**
         * @param persistentDisk Persistent disk settings
         * 
         * @return builder
         * 
         */
        public Builder persistentDisk(@Nullable Output<PersistentDiskArgs> persistentDisk) {
            $.persistentDisk = persistentDisk;
            return this;
        }

        /**
         * @param persistentDisk Persistent disk settings
         * 
         * @return builder
         * 
         */
        public Builder persistentDisk(PersistentDiskArgs persistentDisk) {
            return persistentDisk(Output.of(persistentDisk));
        }

        /**
         * @param public_ Indicates whether the App exposes public endpoint
         * 
         * @return builder
         * 
         */
        public Builder public_(@Nullable Output<Boolean> public_) {
            $.public_ = public_;
            return this;
        }

        /**
         * @param public_ Indicates whether the App exposes public endpoint
         * 
         * @return builder
         * 
         */
        public Builder public_(Boolean public_) {
            return public_(Output.of(public_));
        }

        /**
         * @param temporaryDisk Temporary disk settings
         * 
         * @return builder
         * 
         */
        public Builder temporaryDisk(@Nullable Output<TemporaryDiskArgs> temporaryDisk) {
            $.temporaryDisk = temporaryDisk;
            return this;
        }

        /**
         * @param temporaryDisk Temporary disk settings
         * 
         * @return builder
         * 
         */
        public Builder temporaryDisk(TemporaryDiskArgs temporaryDisk) {
            return temporaryDisk(Output.of(temporaryDisk));
        }

        public AppResourcePropertiesArgs build() {
            $.httpsOnly = Codegen.booleanProp("httpsOnly").output().arg($.httpsOnly).def(false).getNullable();
            return $;
        }
    }

}
