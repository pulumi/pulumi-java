// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.sqlvirtualmachine.AvailabilityGroupListenerArgs;
import com.pulumi.azurenative.sqlvirtualmachine.outputs.LoadBalancerConfigurationResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A SQL Server availability group listener.
 * API Version: 2017-03-01-preview.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:sqlvirtualmachine:AvailabilityGroupListener agl-test /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/testvmgroup/availabilityGroupListeners/agl-test 
 * ```
 * 
 */
@ResourceType(type="azure-native:sqlvirtualmachine:AvailabilityGroupListener")
public class AvailabilityGroupListener extends com.pulumi.resources.CustomResource {
    /**
     * Name of the availability group.
     * 
     */
    @Export(name="availabilityGroupName", type=String.class, parameters={})
    private Output</* @Nullable */ String> availabilityGroupName;

    /**
     * @return Name of the availability group.
     * 
     */
    public Output<Optional<String>> availabilityGroupName() {
        return Codegen.optional(this.availabilityGroupName);
    }
    /**
     * Create a default availability group if it does not exist.
     * 
     */
    @Export(name="createDefaultAvailabilityGroupIfNotExist", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> createDefaultAvailabilityGroupIfNotExist;

    /**
     * @return Create a default availability group if it does not exist.
     * 
     */
    public Output<Optional<Boolean>> createDefaultAvailabilityGroupIfNotExist() {
        return Codegen.optional(this.createDefaultAvailabilityGroupIfNotExist);
    }
    /**
     * List of load balancer configurations for an availability group listener.
     * 
     */
    @Export(name="loadBalancerConfigurations", type=List.class, parameters={LoadBalancerConfigurationResponse.class})
    private Output</* @Nullable */ List<LoadBalancerConfigurationResponse>> loadBalancerConfigurations;

    /**
     * @return List of load balancer configurations for an availability group listener.
     * 
     */
    public Output<Optional<List<LoadBalancerConfigurationResponse>>> loadBalancerConfigurations() {
        return Codegen.optional(this.loadBalancerConfigurations);
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Listener port.
     * 
     */
    @Export(name="port", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> port;

    /**
     * @return Listener port.
     * 
     */
    public Output<Optional<Integer>> port() {
        return Codegen.optional(this.port);
    }
    /**
     * Provisioning state to track the async operation status.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return Provisioning state to track the async operation status.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AvailabilityGroupListener(String name) {
        this(name, AvailabilityGroupListenerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AvailabilityGroupListener(String name, AvailabilityGroupListenerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AvailabilityGroupListener(String name, AvailabilityGroupListenerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sqlvirtualmachine:AvailabilityGroupListener", name, args == null ? AvailabilityGroupListenerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AvailabilityGroupListener(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sqlvirtualmachine:AvailabilityGroupListener", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:sqlvirtualmachine/v20170301preview:AvailabilityGroupListener").build()),
                Output.of(Alias.builder().type("azure-native:sqlvirtualmachine/v20211101preview:AvailabilityGroupListener").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AvailabilityGroupListener get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AvailabilityGroupListener(name, id, options);
    }
}
