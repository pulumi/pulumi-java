// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The details of the error.
 * 
 */
public final class ErrorDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ErrorDetailsResponse Empty = new ErrorDetailsResponse();

    /**
     * Error code.
     * 
     */
    @Import(name="code", required=true)
    private String code;

    /**
     * @return Error code.
     * 
     */
    public String code() {
        return this.code;
    }

    /**
     * Error message indicating why the operation failed.
     * 
     */
    @Import(name="message", required=true)
    private String message;

    /**
     * @return Error message indicating why the operation failed.
     * 
     */
    public String message() {
        return this.message;
    }

    private ErrorDetailsResponse() {}

    private ErrorDetailsResponse(ErrorDetailsResponse $) {
        this.code = $.code;
        this.message = $.message;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ErrorDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ErrorDetailsResponse $;

        public Builder() {
            $ = new ErrorDetailsResponse();
        }

        public Builder(ErrorDetailsResponse defaults) {
            $ = new ErrorDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param code Error code.
         * 
         * @return builder
         * 
         */
        public Builder code(String code) {
            $.code = code;
            return this;
        }

        /**
         * @param message Error message indicating why the operation failed.
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            $.message = message;
            return this;
        }

        public ErrorDetailsResponse build() {
            $.code = Objects.requireNonNull($.code, "expected parameter 'code' to be non-null");
            $.message = Objects.requireNonNull($.message, "expected parameter 'message' to be non-null");
            return $;
        }
    }

}
