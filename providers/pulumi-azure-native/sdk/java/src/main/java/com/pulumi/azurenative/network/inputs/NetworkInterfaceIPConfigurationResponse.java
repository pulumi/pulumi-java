// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.ApplicationGatewayBackendAddressPoolResponse;
import com.pulumi.azurenative.network.inputs.ApplicationSecurityGroupResponse;
import com.pulumi.azurenative.network.inputs.BackendAddressPoolResponse;
import com.pulumi.azurenative.network.inputs.InboundNatRuleResponse;
import com.pulumi.azurenative.network.inputs.NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse;
import com.pulumi.azurenative.network.inputs.PublicIPAddressResponse;
import com.pulumi.azurenative.network.inputs.SubnetResponse;
import com.pulumi.azurenative.network.inputs.VirtualNetworkTapResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * IPConfiguration in a network interface.
 * 
 */
public final class NetworkInterfaceIPConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final NetworkInterfaceIPConfigurationResponse Empty = new NetworkInterfaceIPConfigurationResponse();

    /**
     * The reference to ApplicationGatewayBackendAddressPool resource.
     * 
     */
    @Import(name="applicationGatewayBackendAddressPools")
    private @Nullable List<ApplicationGatewayBackendAddressPoolResponse> applicationGatewayBackendAddressPools;

    public Optional<List<ApplicationGatewayBackendAddressPoolResponse>> applicationGatewayBackendAddressPools() {
        return Optional.ofNullable(this.applicationGatewayBackendAddressPools);
    }

    /**
     * Application security groups in which the IP configuration is included.
     * 
     */
    @Import(name="applicationSecurityGroups")
    private @Nullable List<ApplicationSecurityGroupResponse> applicationSecurityGroups;

    public Optional<List<ApplicationSecurityGroupResponse>> applicationSecurityGroups() {
        return Optional.ofNullable(this.applicationSecurityGroups);
    }

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    public String etag() {
        return this.etag;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The reference to LoadBalancerBackendAddressPool resource.
     * 
     */
    @Import(name="loadBalancerBackendAddressPools")
    private @Nullable List<BackendAddressPoolResponse> loadBalancerBackendAddressPools;

    public Optional<List<BackendAddressPoolResponse>> loadBalancerBackendAddressPools() {
        return Optional.ofNullable(this.loadBalancerBackendAddressPools);
    }

    /**
     * A list of references of LoadBalancerInboundNatRules.
     * 
     */
    @Import(name="loadBalancerInboundNatRules")
    private @Nullable List<InboundNatRuleResponse> loadBalancerInboundNatRules;

    public Optional<List<InboundNatRuleResponse>> loadBalancerInboundNatRules() {
        return Optional.ofNullable(this.loadBalancerInboundNatRules);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Whether this is a primary customer address on the network interface.
     * 
     */
    @Import(name="primary")
    private @Nullable Boolean primary;

    public Optional<Boolean> primary() {
        return Optional.ofNullable(this.primary);
    }

    /**
     * Private IP address of the IP configuration.
     * 
     */
    @Import(name="privateIPAddress")
    private @Nullable String privateIPAddress;

    public Optional<String> privateIPAddress() {
        return Optional.ofNullable(this.privateIPAddress);
    }

    /**
     * Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
     * 
     */
    @Import(name="privateIPAddressVersion")
    private @Nullable String privateIPAddressVersion;

    public Optional<String> privateIPAddressVersion() {
        return Optional.ofNullable(this.privateIPAddressVersion);
    }

    /**
     * The private IP address allocation method.
     * 
     */
    @Import(name="privateIPAllocationMethod")
    private @Nullable String privateIPAllocationMethod;

    public Optional<String> privateIPAllocationMethod() {
        return Optional.ofNullable(this.privateIPAllocationMethod);
    }

    /**
     * PrivateLinkConnection properties for the network interface.
     * 
     */
    @Import(name="privateLinkConnectionProperties", required=true)
    private NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse privateLinkConnectionProperties;

    public NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse privateLinkConnectionProperties() {
        return this.privateLinkConnectionProperties;
    }

    /**
     * The provisioning state of the network interface IP configuration.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Public IP address bound to the IP configuration.
     * 
     */
    @Import(name="publicIPAddress")
    private @Nullable PublicIPAddressResponse publicIPAddress;

    public Optional<PublicIPAddressResponse> publicIPAddress() {
        return Optional.ofNullable(this.publicIPAddress);
    }

    /**
     * Subnet bound to the IP configuration.
     * 
     */
    @Import(name="subnet")
    private @Nullable SubnetResponse subnet;

    public Optional<SubnetResponse> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The reference to Virtual Network Taps.
     * 
     */
    @Import(name="virtualNetworkTaps")
    private @Nullable List<VirtualNetworkTapResponse> virtualNetworkTaps;

    public Optional<List<VirtualNetworkTapResponse>> virtualNetworkTaps() {
        return Optional.ofNullable(this.virtualNetworkTaps);
    }

    private NetworkInterfaceIPConfigurationResponse() {}

    private NetworkInterfaceIPConfigurationResponse(NetworkInterfaceIPConfigurationResponse $) {
        this.applicationGatewayBackendAddressPools = $.applicationGatewayBackendAddressPools;
        this.applicationSecurityGroups = $.applicationSecurityGroups;
        this.etag = $.etag;
        this.id = $.id;
        this.loadBalancerBackendAddressPools = $.loadBalancerBackendAddressPools;
        this.loadBalancerInboundNatRules = $.loadBalancerInboundNatRules;
        this.name = $.name;
        this.primary = $.primary;
        this.privateIPAddress = $.privateIPAddress;
        this.privateIPAddressVersion = $.privateIPAddressVersion;
        this.privateIPAllocationMethod = $.privateIPAllocationMethod;
        this.privateLinkConnectionProperties = $.privateLinkConnectionProperties;
        this.provisioningState = $.provisioningState;
        this.publicIPAddress = $.publicIPAddress;
        this.subnet = $.subnet;
        this.type = $.type;
        this.virtualNetworkTaps = $.virtualNetworkTaps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkInterfaceIPConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkInterfaceIPConfigurationResponse $;

        public Builder() {
            $ = new NetworkInterfaceIPConfigurationResponse();
        }

        public Builder(NetworkInterfaceIPConfigurationResponse defaults) {
            $ = new NetworkInterfaceIPConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder applicationGatewayBackendAddressPools(@Nullable List<ApplicationGatewayBackendAddressPoolResponse> applicationGatewayBackendAddressPools) {
            $.applicationGatewayBackendAddressPools = applicationGatewayBackendAddressPools;
            return this;
        }

        public Builder applicationGatewayBackendAddressPools(ApplicationGatewayBackendAddressPoolResponse... applicationGatewayBackendAddressPools) {
            return applicationGatewayBackendAddressPools(List.of(applicationGatewayBackendAddressPools));
        }

        public Builder applicationSecurityGroups(@Nullable List<ApplicationSecurityGroupResponse> applicationSecurityGroups) {
            $.applicationSecurityGroups = applicationSecurityGroups;
            return this;
        }

        public Builder applicationSecurityGroups(ApplicationSecurityGroupResponse... applicationSecurityGroups) {
            return applicationSecurityGroups(List.of(applicationSecurityGroups));
        }

        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder loadBalancerBackendAddressPools(@Nullable List<BackendAddressPoolResponse> loadBalancerBackendAddressPools) {
            $.loadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
            return this;
        }

        public Builder loadBalancerBackendAddressPools(BackendAddressPoolResponse... loadBalancerBackendAddressPools) {
            return loadBalancerBackendAddressPools(List.of(loadBalancerBackendAddressPools));
        }

        public Builder loadBalancerInboundNatRules(@Nullable List<InboundNatRuleResponse> loadBalancerInboundNatRules) {
            $.loadBalancerInboundNatRules = loadBalancerInboundNatRules;
            return this;
        }

        public Builder loadBalancerInboundNatRules(InboundNatRuleResponse... loadBalancerInboundNatRules) {
            return loadBalancerInboundNatRules(List.of(loadBalancerInboundNatRules));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder primary(@Nullable Boolean primary) {
            $.primary = primary;
            return this;
        }

        public Builder privateIPAddress(@Nullable String privateIPAddress) {
            $.privateIPAddress = privateIPAddress;
            return this;
        }

        public Builder privateIPAddressVersion(@Nullable String privateIPAddressVersion) {
            $.privateIPAddressVersion = privateIPAddressVersion;
            return this;
        }

        public Builder privateIPAllocationMethod(@Nullable String privateIPAllocationMethod) {
            $.privateIPAllocationMethod = privateIPAllocationMethod;
            return this;
        }

        public Builder privateLinkConnectionProperties(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse privateLinkConnectionProperties) {
            $.privateLinkConnectionProperties = privateLinkConnectionProperties;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder publicIPAddress(@Nullable PublicIPAddressResponse publicIPAddress) {
            $.publicIPAddress = publicIPAddress;
            return this;
        }

        public Builder subnet(@Nullable SubnetResponse subnet) {
            $.subnet = subnet;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public Builder virtualNetworkTaps(@Nullable List<VirtualNetworkTapResponse> virtualNetworkTaps) {
            $.virtualNetworkTaps = virtualNetworkTaps;
            return this;
        }

        public Builder virtualNetworkTaps(VirtualNetworkTapResponse... virtualNetworkTaps) {
            return virtualNetworkTaps(List.of(virtualNetworkTaps));
        }

        public NetworkInterfaceIPConfigurationResponse build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.privateLinkConnectionProperties = Objects.requireNonNull($.privateLinkConnectionProperties, "expected parameter 'privateLinkConnectionProperties' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
