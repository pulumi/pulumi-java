// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTestBaseAccountFileUploadUrlResult {
    /**
     * The blob path of the uploaded package. It will be used as the &#39;blobPath&#39; property of PackageResource.
     * 
     */
    private final String blobPath;
    /**
     * The URL used for uploading the package.
     * 
     */
    private final String uploadUrl;

    @CustomType.Constructor
    private GetTestBaseAccountFileUploadUrlResult(
        @CustomType.Parameter("blobPath") String blobPath,
        @CustomType.Parameter("uploadUrl") String uploadUrl) {
        this.blobPath = blobPath;
        this.uploadUrl = uploadUrl;
    }

    /**
     * The blob path of the uploaded package. It will be used as the &#39;blobPath&#39; property of PackageResource.
     * 
    */
    public String blobPath() {
        return this.blobPath;
    }
    /**
     * The URL used for uploading the package.
     * 
    */
    public String uploadUrl() {
        return this.uploadUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTestBaseAccountFileUploadUrlResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String blobPath;
        private String uploadUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTestBaseAccountFileUploadUrlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blobPath = defaults.blobPath;
    	      this.uploadUrl = defaults.uploadUrl;
        }

        public Builder blobPath(String blobPath) {
            this.blobPath = Objects.requireNonNull(blobPath);
            return this;
        }
        public Builder uploadUrl(String uploadUrl) {
            this.uploadUrl = Objects.requireNonNull(uploadUrl);
            return this;
        }        public GetTestBaseAccountFileUploadUrlResult build() {
            return new GetTestBaseAccountFileUploadUrlResult(blobPath, uploadUrl);
        }
    }
}
