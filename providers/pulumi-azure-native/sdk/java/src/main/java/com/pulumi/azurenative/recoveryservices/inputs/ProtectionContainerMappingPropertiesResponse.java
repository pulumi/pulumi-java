// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.A2AProtectionContainerMappingDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.HealthErrorResponse;
import com.pulumi.azurenative.recoveryservices.inputs.VMwareCbtProtectionContainerMappingDetailsResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Protection container mapping properties.
 * 
 */
public final class ProtectionContainerMappingPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ProtectionContainerMappingPropertiesResponse Empty = new ProtectionContainerMappingPropertiesResponse();

    /**
     * Health of pairing.
     * 
     */
    @Import(name="health")
    private @Nullable String health;

    /**
     * @return Health of pairing.
     * 
     */
    public Optional<String> health() {
        return Optional.ofNullable(this.health);
    }

    /**
     * Health error.
     * 
     */
    @Import(name="healthErrorDetails")
    private @Nullable List<HealthErrorResponse> healthErrorDetails;

    /**
     * @return Health error.
     * 
     */
    public Optional<List<HealthErrorResponse>> healthErrorDetails() {
        return Optional.ofNullable(this.healthErrorDetails);
    }

    /**
     * Friendly name of replication policy.
     * 
     */
    @Import(name="policyFriendlyName")
    private @Nullable String policyFriendlyName;

    /**
     * @return Friendly name of replication policy.
     * 
     */
    public Optional<String> policyFriendlyName() {
        return Optional.ofNullable(this.policyFriendlyName);
    }

    /**
     * Policy ARM Id.
     * 
     */
    @Import(name="policyId")
    private @Nullable String policyId;

    /**
     * @return Policy ARM Id.
     * 
     */
    public Optional<String> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * Provider specific provider details.
     * 
     */
    @Import(name="providerSpecificDetails")
    private @Nullable Either<A2AProtectionContainerMappingDetailsResponse,VMwareCbtProtectionContainerMappingDetailsResponse> providerSpecificDetails;

    /**
     * @return Provider specific provider details.
     * 
     */
    public Optional<Either<A2AProtectionContainerMappingDetailsResponse,VMwareCbtProtectionContainerMappingDetailsResponse>> providerSpecificDetails() {
        return Optional.ofNullable(this.providerSpecificDetails);
    }

    /**
     * Friendly name of source fabric.
     * 
     */
    @Import(name="sourceFabricFriendlyName")
    private @Nullable String sourceFabricFriendlyName;

    /**
     * @return Friendly name of source fabric.
     * 
     */
    public Optional<String> sourceFabricFriendlyName() {
        return Optional.ofNullable(this.sourceFabricFriendlyName);
    }

    /**
     * Friendly name of source protection container.
     * 
     */
    @Import(name="sourceProtectionContainerFriendlyName")
    private @Nullable String sourceProtectionContainerFriendlyName;

    /**
     * @return Friendly name of source protection container.
     * 
     */
    public Optional<String> sourceProtectionContainerFriendlyName() {
        return Optional.ofNullable(this.sourceProtectionContainerFriendlyName);
    }

    /**
     * Association Status
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return Association Status
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Friendly name of target fabric.
     * 
     */
    @Import(name="targetFabricFriendlyName")
    private @Nullable String targetFabricFriendlyName;

    /**
     * @return Friendly name of target fabric.
     * 
     */
    public Optional<String> targetFabricFriendlyName() {
        return Optional.ofNullable(this.targetFabricFriendlyName);
    }

    /**
     * Friendly name of paired container.
     * 
     */
    @Import(name="targetProtectionContainerFriendlyName")
    private @Nullable String targetProtectionContainerFriendlyName;

    /**
     * @return Friendly name of paired container.
     * 
     */
    public Optional<String> targetProtectionContainerFriendlyName() {
        return Optional.ofNullable(this.targetProtectionContainerFriendlyName);
    }

    /**
     * Paired protection container ARM ID.
     * 
     */
    @Import(name="targetProtectionContainerId")
    private @Nullable String targetProtectionContainerId;

    /**
     * @return Paired protection container ARM ID.
     * 
     */
    public Optional<String> targetProtectionContainerId() {
        return Optional.ofNullable(this.targetProtectionContainerId);
    }

    private ProtectionContainerMappingPropertiesResponse() {}

    private ProtectionContainerMappingPropertiesResponse(ProtectionContainerMappingPropertiesResponse $) {
        this.health = $.health;
        this.healthErrorDetails = $.healthErrorDetails;
        this.policyFriendlyName = $.policyFriendlyName;
        this.policyId = $.policyId;
        this.providerSpecificDetails = $.providerSpecificDetails;
        this.sourceFabricFriendlyName = $.sourceFabricFriendlyName;
        this.sourceProtectionContainerFriendlyName = $.sourceProtectionContainerFriendlyName;
        this.state = $.state;
        this.targetFabricFriendlyName = $.targetFabricFriendlyName;
        this.targetProtectionContainerFriendlyName = $.targetProtectionContainerFriendlyName;
        this.targetProtectionContainerId = $.targetProtectionContainerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProtectionContainerMappingPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProtectionContainerMappingPropertiesResponse $;

        public Builder() {
            $ = new ProtectionContainerMappingPropertiesResponse();
        }

        public Builder(ProtectionContainerMappingPropertiesResponse defaults) {
            $ = new ProtectionContainerMappingPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param health Health of pairing.
         * 
         * @return builder
         * 
         */
        public Builder health(@Nullable String health) {
            $.health = health;
            return this;
        }

        /**
         * @param healthErrorDetails Health error.
         * 
         * @return builder
         * 
         */
        public Builder healthErrorDetails(@Nullable List<HealthErrorResponse> healthErrorDetails) {
            $.healthErrorDetails = healthErrorDetails;
            return this;
        }

        /**
         * @param healthErrorDetails Health error.
         * 
         * @return builder
         * 
         */
        public Builder healthErrorDetails(HealthErrorResponse... healthErrorDetails) {
            return healthErrorDetails(List.of(healthErrorDetails));
        }

        /**
         * @param policyFriendlyName Friendly name of replication policy.
         * 
         * @return builder
         * 
         */
        public Builder policyFriendlyName(@Nullable String policyFriendlyName) {
            $.policyFriendlyName = policyFriendlyName;
            return this;
        }

        /**
         * @param policyId Policy ARM Id.
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable String policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param providerSpecificDetails Provider specific provider details.
         * 
         * @return builder
         * 
         */
        public Builder providerSpecificDetails(@Nullable Either<A2AProtectionContainerMappingDetailsResponse,VMwareCbtProtectionContainerMappingDetailsResponse> providerSpecificDetails) {
            $.providerSpecificDetails = providerSpecificDetails;
            return this;
        }

        /**
         * @param providerSpecificDetails Provider specific provider details.
         * 
         * @return builder
         * 
         */
        public Builder providerSpecificDetails(A2AProtectionContainerMappingDetailsResponse providerSpecificDetails) {
            return providerSpecificDetails(Either.ofLeft(providerSpecificDetails));
        }

        /**
         * @param providerSpecificDetails Provider specific provider details.
         * 
         * @return builder
         * 
         */
        public Builder providerSpecificDetails(VMwareCbtProtectionContainerMappingDetailsResponse providerSpecificDetails) {
            return providerSpecificDetails(Either.ofRight(providerSpecificDetails));
        }

        /**
         * @param sourceFabricFriendlyName Friendly name of source fabric.
         * 
         * @return builder
         * 
         */
        public Builder sourceFabricFriendlyName(@Nullable String sourceFabricFriendlyName) {
            $.sourceFabricFriendlyName = sourceFabricFriendlyName;
            return this;
        }

        /**
         * @param sourceProtectionContainerFriendlyName Friendly name of source protection container.
         * 
         * @return builder
         * 
         */
        public Builder sourceProtectionContainerFriendlyName(@Nullable String sourceProtectionContainerFriendlyName) {
            $.sourceProtectionContainerFriendlyName = sourceProtectionContainerFriendlyName;
            return this;
        }

        /**
         * @param state Association Status
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param targetFabricFriendlyName Friendly name of target fabric.
         * 
         * @return builder
         * 
         */
        public Builder targetFabricFriendlyName(@Nullable String targetFabricFriendlyName) {
            $.targetFabricFriendlyName = targetFabricFriendlyName;
            return this;
        }

        /**
         * @param targetProtectionContainerFriendlyName Friendly name of paired container.
         * 
         * @return builder
         * 
         */
        public Builder targetProtectionContainerFriendlyName(@Nullable String targetProtectionContainerFriendlyName) {
            $.targetProtectionContainerFriendlyName = targetProtectionContainerFriendlyName;
            return this;
        }

        /**
         * @param targetProtectionContainerId Paired protection container ARM ID.
         * 
         * @return builder
         * 
         */
        public Builder targetProtectionContainerId(@Nullable String targetProtectionContainerId) {
            $.targetProtectionContainerId = targetProtectionContainerId;
            return this;
        }

        public ProtectionContainerMappingPropertiesResponse build() {
            return $;
        }
    }

}
