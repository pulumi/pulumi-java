// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.iotsecurity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OnPremiseSensorArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnPremiseSensorArgs Empty = new OnPremiseSensorArgs();

    /**
     * Name of the on-premise IoT sensor
     * 
     */
    @Import(name="onPremiseSensorName")
      private final @Nullable Output<String> onPremiseSensorName;

    public Output<String> onPremiseSensorName() {
        return this.onPremiseSensorName == null ? Codegen.empty() : this.onPremiseSensorName;
    }

    public OnPremiseSensorArgs(@Nullable Output<String> onPremiseSensorName) {
        this.onPremiseSensorName = onPremiseSensorName;
    }

    private OnPremiseSensorArgs() {
        this.onPremiseSensorName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OnPremiseSensorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> onPremiseSensorName;

        public Builder() {
    	      // Empty
        }

        public Builder(OnPremiseSensorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.onPremiseSensorName = defaults.onPremiseSensorName;
        }

        public Builder onPremiseSensorName(@Nullable Output<String> onPremiseSensorName) {
            this.onPremiseSensorName = onPremiseSensorName;
            return this;
        }
        public Builder onPremiseSensorName(@Nullable String onPremiseSensorName) {
            this.onPremiseSensorName = Codegen.ofNullable(onPremiseSensorName);
            return this;
        }        public OnPremiseSensorArgs build() {
            return new OnPremiseSensorArgs(onPremiseSensorName);
        }
    }
}
