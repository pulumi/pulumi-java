// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security;

import com.pulumi.azurenative.security.inputs.JitNetworkAccessPolicyVirtualMachineArgs;
import com.pulumi.azurenative.security.inputs.JitNetworkAccessRequestArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JitNetworkAccessPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final JitNetworkAccessPolicyArgs Empty = new JitNetworkAccessPolicyArgs();

    /**
     * The location where ASC stores the data of the subscription. can be retrieved from Get locations
     * 
     */
    @Import(name="ascLocation", required=true)
    private Output<String> ascLocation;

    public Output<String> ascLocation() {
        return this.ascLocation;
    }

    /**
     * Name of a Just-in-Time access configuration policy.
     * 
     */
    @Import(name="jitNetworkAccessPolicyName")
    private @Nullable Output<String> jitNetworkAccessPolicyName;

    public Optional<Output<String>> jitNetworkAccessPolicyName() {
        return Optional.ofNullable(this.jitNetworkAccessPolicyName);
    }

    /**
     * Kind of the resource
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    @Import(name="requests")
    private @Nullable Output<List<JitNetworkAccessRequestArgs>> requests;

    public Optional<Output<List<JitNetworkAccessRequestArgs>>> requests() {
        return Optional.ofNullable(this.requests);
    }

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Configurations for Microsoft.Compute/virtualMachines resource type.
     * 
     */
    @Import(name="virtualMachines", required=true)
    private Output<List<JitNetworkAccessPolicyVirtualMachineArgs>> virtualMachines;

    public Output<List<JitNetworkAccessPolicyVirtualMachineArgs>> virtualMachines() {
        return this.virtualMachines;
    }

    private JitNetworkAccessPolicyArgs() {}

    private JitNetworkAccessPolicyArgs(JitNetworkAccessPolicyArgs $) {
        this.ascLocation = $.ascLocation;
        this.jitNetworkAccessPolicyName = $.jitNetworkAccessPolicyName;
        this.kind = $.kind;
        this.requests = $.requests;
        this.resourceGroupName = $.resourceGroupName;
        this.virtualMachines = $.virtualMachines;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JitNetworkAccessPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JitNetworkAccessPolicyArgs $;

        public Builder() {
            $ = new JitNetworkAccessPolicyArgs();
        }

        public Builder(JitNetworkAccessPolicyArgs defaults) {
            $ = new JitNetworkAccessPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder ascLocation(Output<String> ascLocation) {
            $.ascLocation = ascLocation;
            return this;
        }

        public Builder ascLocation(String ascLocation) {
            return ascLocation(Output.of(ascLocation));
        }

        public Builder jitNetworkAccessPolicyName(@Nullable Output<String> jitNetworkAccessPolicyName) {
            $.jitNetworkAccessPolicyName = jitNetworkAccessPolicyName;
            return this;
        }

        public Builder jitNetworkAccessPolicyName(String jitNetworkAccessPolicyName) {
            return jitNetworkAccessPolicyName(Output.of(jitNetworkAccessPolicyName));
        }

        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder requests(@Nullable Output<List<JitNetworkAccessRequestArgs>> requests) {
            $.requests = requests;
            return this;
        }

        public Builder requests(List<JitNetworkAccessRequestArgs> requests) {
            return requests(Output.of(requests));
        }

        public Builder requests(JitNetworkAccessRequestArgs... requests) {
            return requests(List.of(requests));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder virtualMachines(Output<List<JitNetworkAccessPolicyVirtualMachineArgs>> virtualMachines) {
            $.virtualMachines = virtualMachines;
            return this;
        }

        public Builder virtualMachines(List<JitNetworkAccessPolicyVirtualMachineArgs> virtualMachines) {
            return virtualMachines(Output.of(virtualMachines));
        }

        public Builder virtualMachines(JitNetworkAccessPolicyVirtualMachineArgs... virtualMachines) {
            return virtualMachines(List.of(virtualMachines));
        }

        public JitNetworkAccessPolicyArgs build() {
            $.ascLocation = Objects.requireNonNull($.ascLocation, "expected parameter 'ascLocation' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.virtualMachines = Objects.requireNonNull($.virtualMachines, "expected parameter 'virtualMachines' to be non-null");
            return $;
        }
    }

}
