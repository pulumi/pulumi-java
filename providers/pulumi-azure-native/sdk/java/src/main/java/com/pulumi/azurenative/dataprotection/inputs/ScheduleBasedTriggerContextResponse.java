// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dataprotection.inputs;

import com.pulumi.azurenative.dataprotection.inputs.BackupScheduleResponse;
import com.pulumi.azurenative.dataprotection.inputs.TaggingCriteriaResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Schedule based trigger context
 * 
 */
public final class ScheduleBasedTriggerContextResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScheduleBasedTriggerContextResponse Empty = new ScheduleBasedTriggerContextResponse();

    /**
     * Type of the specific object - used for deserializing
     * Expected value is &#39;ScheduleBasedTriggerContext&#39;.
     * 
     */
    @Import(name="objectType", required=true)
    private String objectType;

    /**
     * @return Type of the specific object - used for deserializing
     * Expected value is &#39;ScheduleBasedTriggerContext&#39;.
     * 
     */
    public String objectType() {
        return this.objectType;
    }

    /**
     * Schedule for this backup
     * 
     */
    @Import(name="schedule", required=true)
    private BackupScheduleResponse schedule;

    /**
     * @return Schedule for this backup
     * 
     */
    public BackupScheduleResponse schedule() {
        return this.schedule;
    }

    /**
     * List of tags that can be applicable for given schedule.
     * 
     */
    @Import(name="taggingCriteria", required=true)
    private List<TaggingCriteriaResponse> taggingCriteria;

    /**
     * @return List of tags that can be applicable for given schedule.
     * 
     */
    public List<TaggingCriteriaResponse> taggingCriteria() {
        return this.taggingCriteria;
    }

    private ScheduleBasedTriggerContextResponse() {}

    private ScheduleBasedTriggerContextResponse(ScheduleBasedTriggerContextResponse $) {
        this.objectType = $.objectType;
        this.schedule = $.schedule;
        this.taggingCriteria = $.taggingCriteria;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleBasedTriggerContextResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleBasedTriggerContextResponse $;

        public Builder() {
            $ = new ScheduleBasedTriggerContextResponse();
        }

        public Builder(ScheduleBasedTriggerContextResponse defaults) {
            $ = new ScheduleBasedTriggerContextResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param objectType Type of the specific object - used for deserializing
         * Expected value is &#39;ScheduleBasedTriggerContext&#39;.
         * 
         * @return builder
         * 
         */
        public Builder objectType(String objectType) {
            $.objectType = objectType;
            return this;
        }

        /**
         * @param schedule Schedule for this backup
         * 
         * @return builder
         * 
         */
        public Builder schedule(BackupScheduleResponse schedule) {
            $.schedule = schedule;
            return this;
        }

        /**
         * @param taggingCriteria List of tags that can be applicable for given schedule.
         * 
         * @return builder
         * 
         */
        public Builder taggingCriteria(List<TaggingCriteriaResponse> taggingCriteria) {
            $.taggingCriteria = taggingCriteria;
            return this;
        }

        /**
         * @param taggingCriteria List of tags that can be applicable for given schedule.
         * 
         * @return builder
         * 
         */
        public Builder taggingCriteria(TaggingCriteriaResponse... taggingCriteria) {
            return taggingCriteria(List.of(taggingCriteria));
        }

        public ScheduleBasedTriggerContextResponse build() {
            $.objectType = Codegen.stringProp("objectType").arg($.objectType).require();
            $.schedule = Objects.requireNonNull($.schedule, "expected parameter 'schedule' to be non-null");
            $.taggingCriteria = Objects.requireNonNull($.taggingCriteria, "expected parameter 'taggingCriteria' to be non-null");
            return $;
        }
    }

}
