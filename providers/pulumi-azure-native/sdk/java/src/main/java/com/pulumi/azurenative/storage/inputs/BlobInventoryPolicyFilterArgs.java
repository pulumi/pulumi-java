// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * An object that defines the blob inventory rule filter conditions.
 * 
 */
public final class BlobInventoryPolicyFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlobInventoryPolicyFilterArgs Empty = new BlobInventoryPolicyFilterArgs();

    /**
     * An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
     * 
     */
    @Import(name="blobTypes", required=true)
    private Output<List<String>> blobTypes;

    /**
     * @return An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
     * 
     */
    public Output<List<String>> blobTypes() {
        return this.blobTypes;
    }

    /**
     * Includes blob versions in blob inventory when value set to true.
     * 
     */
    @Import(name="includeBlobVersions")
    private @Nullable Output<Boolean> includeBlobVersions;

    /**
     * @return Includes blob versions in blob inventory when value set to true.
     * 
     */
    public Optional<Output<Boolean>> includeBlobVersions() {
        return Optional.ofNullable(this.includeBlobVersions);
    }

    /**
     * Includes blob snapshots in blob inventory when value set to true.
     * 
     */
    @Import(name="includeSnapshots")
    private @Nullable Output<Boolean> includeSnapshots;

    /**
     * @return Includes blob snapshots in blob inventory when value set to true.
     * 
     */
    public Optional<Output<Boolean>> includeSnapshots() {
        return Optional.ofNullable(this.includeSnapshots);
    }

    /**
     * An array of strings for blob prefixes to be matched.
     * 
     */
    @Import(name="prefixMatch")
    private @Nullable Output<List<String>> prefixMatch;

    /**
     * @return An array of strings for blob prefixes to be matched.
     * 
     */
    public Optional<Output<List<String>>> prefixMatch() {
        return Optional.ofNullable(this.prefixMatch);
    }

    private BlobInventoryPolicyFilterArgs() {}

    private BlobInventoryPolicyFilterArgs(BlobInventoryPolicyFilterArgs $) {
        this.blobTypes = $.blobTypes;
        this.includeBlobVersions = $.includeBlobVersions;
        this.includeSnapshots = $.includeSnapshots;
        this.prefixMatch = $.prefixMatch;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlobInventoryPolicyFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlobInventoryPolicyFilterArgs $;

        public Builder() {
            $ = new BlobInventoryPolicyFilterArgs();
        }

        public Builder(BlobInventoryPolicyFilterArgs defaults) {
            $ = new BlobInventoryPolicyFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param blobTypes An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
         * 
         * @return builder
         * 
         */
        public Builder blobTypes(Output<List<String>> blobTypes) {
            $.blobTypes = blobTypes;
            return this;
        }

        /**
         * @param blobTypes An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
         * 
         * @return builder
         * 
         */
        public Builder blobTypes(List<String> blobTypes) {
            return blobTypes(Output.of(blobTypes));
        }

        /**
         * @param blobTypes An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
         * 
         * @return builder
         * 
         */
        public Builder blobTypes(String... blobTypes) {
            return blobTypes(List.of(blobTypes));
        }

        /**
         * @param includeBlobVersions Includes blob versions in blob inventory when value set to true.
         * 
         * @return builder
         * 
         */
        public Builder includeBlobVersions(@Nullable Output<Boolean> includeBlobVersions) {
            $.includeBlobVersions = includeBlobVersions;
            return this;
        }

        /**
         * @param includeBlobVersions Includes blob versions in blob inventory when value set to true.
         * 
         * @return builder
         * 
         */
        public Builder includeBlobVersions(Boolean includeBlobVersions) {
            return includeBlobVersions(Output.of(includeBlobVersions));
        }

        /**
         * @param includeSnapshots Includes blob snapshots in blob inventory when value set to true.
         * 
         * @return builder
         * 
         */
        public Builder includeSnapshots(@Nullable Output<Boolean> includeSnapshots) {
            $.includeSnapshots = includeSnapshots;
            return this;
        }

        /**
         * @param includeSnapshots Includes blob snapshots in blob inventory when value set to true.
         * 
         * @return builder
         * 
         */
        public Builder includeSnapshots(Boolean includeSnapshots) {
            return includeSnapshots(Output.of(includeSnapshots));
        }

        /**
         * @param prefixMatch An array of strings for blob prefixes to be matched.
         * 
         * @return builder
         * 
         */
        public Builder prefixMatch(@Nullable Output<List<String>> prefixMatch) {
            $.prefixMatch = prefixMatch;
            return this;
        }

        /**
         * @param prefixMatch An array of strings for blob prefixes to be matched.
         * 
         * @return builder
         * 
         */
        public Builder prefixMatch(List<String> prefixMatch) {
            return prefixMatch(Output.of(prefixMatch));
        }

        /**
         * @param prefixMatch An array of strings for blob prefixes to be matched.
         * 
         * @return builder
         * 
         */
        public Builder prefixMatch(String... prefixMatch) {
            return prefixMatch(List.of(prefixMatch));
        }

        public BlobInventoryPolicyFilterArgs build() {
            $.blobTypes = Objects.requireNonNull($.blobTypes, "expected parameter 'blobTypes' to be non-null");
            return $;
        }
    }

}
