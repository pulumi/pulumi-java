// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.IdentityResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.PrivateEndpointResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.PrivateLinkServiceConnectionStateResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.SkuResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.SystemDataResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The Private Endpoint Connection resource.
 * 
 */
public final class PrivateEndpointConnectionResponse extends com.pulumi.resources.InvokeArgs {

    public static final PrivateEndpointConnectionResponse Empty = new PrivateEndpointConnectionResponse();

    /**
     * Specifies the resource ID.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return Specifies the resource ID.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * The identity of the resource.
     * 
     */
    @Import(name="identity")
    private @Nullable IdentityResponse identity;

    /**
     * @return The identity of the resource.
     * 
     */
    public Optional<IdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Specifies the location of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    /**
     * @return Specifies the location of the resource.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the resource.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Specifies the name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The resource of private end point.
     * 
     */
    @Import(name="privateEndpoint")
    private @Nullable PrivateEndpointResponse privateEndpoint;

    /**
     * @return The resource of private end point.
     * 
     */
    public Optional<PrivateEndpointResponse> privateEndpoint() {
        return Optional.ofNullable(this.privateEndpoint);
    }

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     * 
     */
    @Import(name="privateLinkServiceConnectionState", required=true)
    private PrivateLinkServiceConnectionStateResponse privateLinkServiceConnectionState;

    /**
     * @return A collection of information about the state of the connection between service consumer and provider.
     * 
     */
    public PrivateLinkServiceConnectionStateResponse privateLinkServiceConnectionState() {
        return this.privateLinkServiceConnectionState;
    }

    /**
     * The provisioning state of the private endpoint connection resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return The provisioning state of the private endpoint connection resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * The sku of the workspace.
     * 
     */
    @Import(name="sku")
    private @Nullable SkuResponse sku;

    /**
     * @return The sku of the workspace.
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Read only system data
     * 
     */
    @Import(name="systemData", required=true)
    private SystemDataResponse systemData;

    /**
     * @return Read only system data
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }

    /**
     * Contains resource tags defined as key/value pairs.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Contains resource tags defined as key/value pairs.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies the type of the resource.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Specifies the type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    private PrivateEndpointConnectionResponse() {}

    private PrivateEndpointConnectionResponse(PrivateEndpointConnectionResponse $) {
        this.id = $.id;
        this.identity = $.identity;
        this.location = $.location;
        this.name = $.name;
        this.privateEndpoint = $.privateEndpoint;
        this.privateLinkServiceConnectionState = $.privateLinkServiceConnectionState;
        this.provisioningState = $.provisioningState;
        this.sku = $.sku;
        this.systemData = $.systemData;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateEndpointConnectionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateEndpointConnectionResponse $;

        public Builder() {
            $ = new PrivateEndpointConnectionResponse();
        }

        public Builder(PrivateEndpointConnectionResponse defaults) {
            $ = new PrivateEndpointConnectionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Specifies the resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param identity The identity of the resource.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable IdentityResponse identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param location Specifies the location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        /**
         * @param name Specifies the name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param privateEndpoint The resource of private end point.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpoint(@Nullable PrivateEndpointResponse privateEndpoint) {
            $.privateEndpoint = privateEndpoint;
            return this;
        }

        /**
         * @param privateLinkServiceConnectionState A collection of information about the state of the connection between service consumer and provider.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceConnectionState(PrivateLinkServiceConnectionStateResponse privateLinkServiceConnectionState) {
            $.privateLinkServiceConnectionState = privateLinkServiceConnectionState;
            return this;
        }

        /**
         * @param provisioningState The provisioning state of the private endpoint connection resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param sku The sku of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable SkuResponse sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param systemData Read only system data
         * 
         * @return builder
         * 
         */
        public Builder systemData(SystemDataResponse systemData) {
            $.systemData = systemData;
            return this;
        }

        /**
         * @param tags Contains resource tags defined as key/value pairs.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param type Specifies the type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public PrivateEndpointConnectionResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.privateLinkServiceConnectionState = Objects.requireNonNull($.privateLinkServiceConnectionState, "expected parameter 'privateLinkServiceConnectionState' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.systemData = Objects.requireNonNull($.systemData, "expected parameter 'systemData' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
