// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessReviewHistoryInstanceResponse {
    /**
     * The display name for the parent history definition.
     * 
     */
    private final @Nullable String displayName;
    /**
     * Uri which can be used to retrieve review history data. To generate this Uri, generateDownloadUri() must be called for a specific accessReviewHistoryDefinitionInstance. The link expires after a 24 hour period. Callers can see the expiration date time by looking at the 'se' parameter in the generated uri.
     * 
     */
    private final String downloadUri;
    /**
     * Date time when history data report expires and the associated data is deleted.
     * 
     */
    private final @Nullable String expiration;
    /**
     * Date time when the history data report is scheduled to be generated.
     * 
     */
    private final @Nullable String fulfilledDateTime;
    /**
     * The access review history definition instance id.
     * 
     */
    private final String id;
    /**
     * The access review history definition instance unique id.
     * 
     */
    private final String name;
    /**
     * Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.
     * 
     */
    private final @Nullable String reviewHistoryPeriodEndDateTime;
    /**
     * Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.
     * 
     */
    private final @Nullable String reviewHistoryPeriodStartDateTime;
    /**
     * Date time when the history data report is scheduled to be generated.
     * 
     */
    private final @Nullable String runDateTime;
    /**
     * Status of the requested review history instance data. This is either requested, in-progress, done or error. The state transitions are as follows - Requested -> InProgress -> Done -> Expired
     * 
     */
    private final String status;
    /**
     * The resource type.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private AccessReviewHistoryInstanceResponse(
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("downloadUri") String downloadUri,
        @CustomType.Parameter("expiration") @Nullable String expiration,
        @CustomType.Parameter("fulfilledDateTime") @Nullable String fulfilledDateTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("reviewHistoryPeriodEndDateTime") @Nullable String reviewHistoryPeriodEndDateTime,
        @CustomType.Parameter("reviewHistoryPeriodStartDateTime") @Nullable String reviewHistoryPeriodStartDateTime,
        @CustomType.Parameter("runDateTime") @Nullable String runDateTime,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("type") String type) {
        this.displayName = displayName;
        this.downloadUri = downloadUri;
        this.expiration = expiration;
        this.fulfilledDateTime = fulfilledDateTime;
        this.id = id;
        this.name = name;
        this.reviewHistoryPeriodEndDateTime = reviewHistoryPeriodEndDateTime;
        this.reviewHistoryPeriodStartDateTime = reviewHistoryPeriodStartDateTime;
        this.runDateTime = runDateTime;
        this.status = status;
        this.type = type;
    }

    /**
     * The display name for the parent history definition.
     * 
    */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * Uri which can be used to retrieve review history data. To generate this Uri, generateDownloadUri() must be called for a specific accessReviewHistoryDefinitionInstance. The link expires after a 24 hour period. Callers can see the expiration date time by looking at the 'se' parameter in the generated uri.
     * 
    */
    public String downloadUri() {
        return this.downloadUri;
    }
    /**
     * Date time when history data report expires and the associated data is deleted.
     * 
    */
    public Optional<String> expiration() {
        return Optional.ofNullable(this.expiration);
    }
    /**
     * Date time when the history data report is scheduled to be generated.
     * 
    */
    public Optional<String> fulfilledDateTime() {
        return Optional.ofNullable(this.fulfilledDateTime);
    }
    /**
     * The access review history definition instance id.
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * The access review history definition instance unique id.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.
     * 
    */
    public Optional<String> reviewHistoryPeriodEndDateTime() {
        return Optional.ofNullable(this.reviewHistoryPeriodEndDateTime);
    }
    /**
     * Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.
     * 
    */
    public Optional<String> reviewHistoryPeriodStartDateTime() {
        return Optional.ofNullable(this.reviewHistoryPeriodStartDateTime);
    }
    /**
     * Date time when the history data report is scheduled to be generated.
     * 
    */
    public Optional<String> runDateTime() {
        return Optional.ofNullable(this.runDateTime);
    }
    /**
     * Status of the requested review history instance data. This is either requested, in-progress, done or error. The state transitions are as follows - Requested -> InProgress -> Done -> Expired
     * 
    */
    public String status() {
        return this.status;
    }
    /**
     * The resource type.
     * 
    */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessReviewHistoryInstanceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String displayName;
        private String downloadUri;
        private @Nullable String expiration;
        private @Nullable String fulfilledDateTime;
        private String id;
        private String name;
        private @Nullable String reviewHistoryPeriodEndDateTime;
        private @Nullable String reviewHistoryPeriodStartDateTime;
        private @Nullable String runDateTime;
        private String status;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessReviewHistoryInstanceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.downloadUri = defaults.downloadUri;
    	      this.expiration = defaults.expiration;
    	      this.fulfilledDateTime = defaults.fulfilledDateTime;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.reviewHistoryPeriodEndDateTime = defaults.reviewHistoryPeriodEndDateTime;
    	      this.reviewHistoryPeriodStartDateTime = defaults.reviewHistoryPeriodStartDateTime;
    	      this.runDateTime = defaults.runDateTime;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder downloadUri(String downloadUri) {
            this.downloadUri = Objects.requireNonNull(downloadUri);
            return this;
        }
        public Builder expiration(@Nullable String expiration) {
            this.expiration = expiration;
            return this;
        }
        public Builder fulfilledDateTime(@Nullable String fulfilledDateTime) {
            this.fulfilledDateTime = fulfilledDateTime;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder reviewHistoryPeriodEndDateTime(@Nullable String reviewHistoryPeriodEndDateTime) {
            this.reviewHistoryPeriodEndDateTime = reviewHistoryPeriodEndDateTime;
            return this;
        }
        public Builder reviewHistoryPeriodStartDateTime(@Nullable String reviewHistoryPeriodStartDateTime) {
            this.reviewHistoryPeriodStartDateTime = reviewHistoryPeriodStartDateTime;
            return this;
        }
        public Builder runDateTime(@Nullable String runDateTime) {
            this.runDateTime = runDateTime;
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public AccessReviewHistoryInstanceResponse build() {
            return new AccessReviewHistoryInstanceResponse(displayName, downloadUri, expiration, fulfilledDateTime, id, name, reviewHistoryPeriodEndDateTime, reviewHistoryPeriodStartDateTime, runDateTime, status, type);
        }
    }
}
