// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.CurrentScenarioDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.RecoveryPlanA2ADetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.RecoveryPlanGroupResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Recovery plan custom details.
 * 
 */
public final class RecoveryPlanPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final RecoveryPlanPropertiesResponse Empty = new RecoveryPlanPropertiesResponse();

    /**
     * The list of allowed operations.
     * 
     */
    @Import(name="allowedOperations")
    private @Nullable List<String> allowedOperations;

    /**
     * @return The list of allowed operations.
     * 
     */
    public Optional<List<String>> allowedOperations() {
        return Optional.ofNullable(this.allowedOperations);
    }

    /**
     * The current scenario details.
     * 
     */
    @Import(name="currentScenario")
    private @Nullable CurrentScenarioDetailsResponse currentScenario;

    /**
     * @return The current scenario details.
     * 
     */
    public Optional<CurrentScenarioDetailsResponse> currentScenario() {
        return Optional.ofNullable(this.currentScenario);
    }

    /**
     * The recovery plan status.
     * 
     */
    @Import(name="currentScenarioStatus")
    private @Nullable String currentScenarioStatus;

    /**
     * @return The recovery plan status.
     * 
     */
    public Optional<String> currentScenarioStatus() {
        return Optional.ofNullable(this.currentScenarioStatus);
    }

    /**
     * The recovery plan status description.
     * 
     */
    @Import(name="currentScenarioStatusDescription")
    private @Nullable String currentScenarioStatusDescription;

    /**
     * @return The recovery plan status description.
     * 
     */
    public Optional<String> currentScenarioStatusDescription() {
        return Optional.ofNullable(this.currentScenarioStatusDescription);
    }

    /**
     * The failover deployment model.
     * 
     */
    @Import(name="failoverDeploymentModel")
    private @Nullable String failoverDeploymentModel;

    /**
     * @return The failover deployment model.
     * 
     */
    public Optional<String> failoverDeploymentModel() {
        return Optional.ofNullable(this.failoverDeploymentModel);
    }

    /**
     * The friendly name.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable String friendlyName;

    /**
     * @return The friendly name.
     * 
     */
    public Optional<String> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * The recovery plan groups.
     * 
     */
    @Import(name="groups")
    private @Nullable List<RecoveryPlanGroupResponse> groups;

    /**
     * @return The recovery plan groups.
     * 
     */
    public Optional<List<RecoveryPlanGroupResponse>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * The start time of the last planned failover.
     * 
     */
    @Import(name="lastPlannedFailoverTime")
    private @Nullable String lastPlannedFailoverTime;

    /**
     * @return The start time of the last planned failover.
     * 
     */
    public Optional<String> lastPlannedFailoverTime() {
        return Optional.ofNullable(this.lastPlannedFailoverTime);
    }

    /**
     * The start time of the last test failover.
     * 
     */
    @Import(name="lastTestFailoverTime")
    private @Nullable String lastTestFailoverTime;

    /**
     * @return The start time of the last test failover.
     * 
     */
    public Optional<String> lastTestFailoverTime() {
        return Optional.ofNullable(this.lastTestFailoverTime);
    }

    /**
     * The start time of the last unplanned failover.
     * 
     */
    @Import(name="lastUnplannedFailoverTime")
    private @Nullable String lastUnplannedFailoverTime;

    /**
     * @return The start time of the last unplanned failover.
     * 
     */
    public Optional<String> lastUnplannedFailoverTime() {
        return Optional.ofNullable(this.lastUnplannedFailoverTime);
    }

    /**
     * The primary fabric friendly name.
     * 
     */
    @Import(name="primaryFabricFriendlyName")
    private @Nullable String primaryFabricFriendlyName;

    /**
     * @return The primary fabric friendly name.
     * 
     */
    public Optional<String> primaryFabricFriendlyName() {
        return Optional.ofNullable(this.primaryFabricFriendlyName);
    }

    /**
     * The primary fabric Id.
     * 
     */
    @Import(name="primaryFabricId")
    private @Nullable String primaryFabricId;

    /**
     * @return The primary fabric Id.
     * 
     */
    public Optional<String> primaryFabricId() {
        return Optional.ofNullable(this.primaryFabricId);
    }

    /**
     * The provider id and provider specific details.
     * 
     */
    @Import(name="providerSpecificDetails", required=true)
    private List<RecoveryPlanA2ADetailsResponse> providerSpecificDetails;

    /**
     * @return The provider id and provider specific details.
     * 
     */
    public List<RecoveryPlanA2ADetailsResponse> providerSpecificDetails() {
        return this.providerSpecificDetails;
    }

    /**
     * The recovery fabric friendly name.
     * 
     */
    @Import(name="recoveryFabricFriendlyName")
    private @Nullable String recoveryFabricFriendlyName;

    /**
     * @return The recovery fabric friendly name.
     * 
     */
    public Optional<String> recoveryFabricFriendlyName() {
        return Optional.ofNullable(this.recoveryFabricFriendlyName);
    }

    /**
     * The recovery fabric Id.
     * 
     */
    @Import(name="recoveryFabricId")
    private @Nullable String recoveryFabricId;

    /**
     * @return The recovery fabric Id.
     * 
     */
    public Optional<String> recoveryFabricId() {
        return Optional.ofNullable(this.recoveryFabricId);
    }

    /**
     * The list of replication providers.
     * 
     */
    @Import(name="replicationProviders")
    private @Nullable List<String> replicationProviders;

    /**
     * @return The list of replication providers.
     * 
     */
    public Optional<List<String>> replicationProviders() {
        return Optional.ofNullable(this.replicationProviders);
    }

    private RecoveryPlanPropertiesResponse() {}

    private RecoveryPlanPropertiesResponse(RecoveryPlanPropertiesResponse $) {
        this.allowedOperations = $.allowedOperations;
        this.currentScenario = $.currentScenario;
        this.currentScenarioStatus = $.currentScenarioStatus;
        this.currentScenarioStatusDescription = $.currentScenarioStatusDescription;
        this.failoverDeploymentModel = $.failoverDeploymentModel;
        this.friendlyName = $.friendlyName;
        this.groups = $.groups;
        this.lastPlannedFailoverTime = $.lastPlannedFailoverTime;
        this.lastTestFailoverTime = $.lastTestFailoverTime;
        this.lastUnplannedFailoverTime = $.lastUnplannedFailoverTime;
        this.primaryFabricFriendlyName = $.primaryFabricFriendlyName;
        this.primaryFabricId = $.primaryFabricId;
        this.providerSpecificDetails = $.providerSpecificDetails;
        this.recoveryFabricFriendlyName = $.recoveryFabricFriendlyName;
        this.recoveryFabricId = $.recoveryFabricId;
        this.replicationProviders = $.replicationProviders;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecoveryPlanPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecoveryPlanPropertiesResponse $;

        public Builder() {
            $ = new RecoveryPlanPropertiesResponse();
        }

        public Builder(RecoveryPlanPropertiesResponse defaults) {
            $ = new RecoveryPlanPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedOperations The list of allowed operations.
         * 
         * @return builder
         * 
         */
        public Builder allowedOperations(@Nullable List<String> allowedOperations) {
            $.allowedOperations = allowedOperations;
            return this;
        }

        /**
         * @param allowedOperations The list of allowed operations.
         * 
         * @return builder
         * 
         */
        public Builder allowedOperations(String... allowedOperations) {
            return allowedOperations(List.of(allowedOperations));
        }

        /**
         * @param currentScenario The current scenario details.
         * 
         * @return builder
         * 
         */
        public Builder currentScenario(@Nullable CurrentScenarioDetailsResponse currentScenario) {
            $.currentScenario = currentScenario;
            return this;
        }

        /**
         * @param currentScenarioStatus The recovery plan status.
         * 
         * @return builder
         * 
         */
        public Builder currentScenarioStatus(@Nullable String currentScenarioStatus) {
            $.currentScenarioStatus = currentScenarioStatus;
            return this;
        }

        /**
         * @param currentScenarioStatusDescription The recovery plan status description.
         * 
         * @return builder
         * 
         */
        public Builder currentScenarioStatusDescription(@Nullable String currentScenarioStatusDescription) {
            $.currentScenarioStatusDescription = currentScenarioStatusDescription;
            return this;
        }

        /**
         * @param failoverDeploymentModel The failover deployment model.
         * 
         * @return builder
         * 
         */
        public Builder failoverDeploymentModel(@Nullable String failoverDeploymentModel) {
            $.failoverDeploymentModel = failoverDeploymentModel;
            return this;
        }

        /**
         * @param friendlyName The friendly name.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable String friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param groups The recovery plan groups.
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable List<RecoveryPlanGroupResponse> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups The recovery plan groups.
         * 
         * @return builder
         * 
         */
        public Builder groups(RecoveryPlanGroupResponse... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param lastPlannedFailoverTime The start time of the last planned failover.
         * 
         * @return builder
         * 
         */
        public Builder lastPlannedFailoverTime(@Nullable String lastPlannedFailoverTime) {
            $.lastPlannedFailoverTime = lastPlannedFailoverTime;
            return this;
        }

        /**
         * @param lastTestFailoverTime The start time of the last test failover.
         * 
         * @return builder
         * 
         */
        public Builder lastTestFailoverTime(@Nullable String lastTestFailoverTime) {
            $.lastTestFailoverTime = lastTestFailoverTime;
            return this;
        }

        /**
         * @param lastUnplannedFailoverTime The start time of the last unplanned failover.
         * 
         * @return builder
         * 
         */
        public Builder lastUnplannedFailoverTime(@Nullable String lastUnplannedFailoverTime) {
            $.lastUnplannedFailoverTime = lastUnplannedFailoverTime;
            return this;
        }

        /**
         * @param primaryFabricFriendlyName The primary fabric friendly name.
         * 
         * @return builder
         * 
         */
        public Builder primaryFabricFriendlyName(@Nullable String primaryFabricFriendlyName) {
            $.primaryFabricFriendlyName = primaryFabricFriendlyName;
            return this;
        }

        /**
         * @param primaryFabricId The primary fabric Id.
         * 
         * @return builder
         * 
         */
        public Builder primaryFabricId(@Nullable String primaryFabricId) {
            $.primaryFabricId = primaryFabricId;
            return this;
        }

        /**
         * @param providerSpecificDetails The provider id and provider specific details.
         * 
         * @return builder
         * 
         */
        public Builder providerSpecificDetails(List<RecoveryPlanA2ADetailsResponse> providerSpecificDetails) {
            $.providerSpecificDetails = providerSpecificDetails;
            return this;
        }

        /**
         * @param providerSpecificDetails The provider id and provider specific details.
         * 
         * @return builder
         * 
         */
        public Builder providerSpecificDetails(RecoveryPlanA2ADetailsResponse... providerSpecificDetails) {
            return providerSpecificDetails(List.of(providerSpecificDetails));
        }

        /**
         * @param recoveryFabricFriendlyName The recovery fabric friendly name.
         * 
         * @return builder
         * 
         */
        public Builder recoveryFabricFriendlyName(@Nullable String recoveryFabricFriendlyName) {
            $.recoveryFabricFriendlyName = recoveryFabricFriendlyName;
            return this;
        }

        /**
         * @param recoveryFabricId The recovery fabric Id.
         * 
         * @return builder
         * 
         */
        public Builder recoveryFabricId(@Nullable String recoveryFabricId) {
            $.recoveryFabricId = recoveryFabricId;
            return this;
        }

        /**
         * @param replicationProviders The list of replication providers.
         * 
         * @return builder
         * 
         */
        public Builder replicationProviders(@Nullable List<String> replicationProviders) {
            $.replicationProviders = replicationProviders;
            return this;
        }

        /**
         * @param replicationProviders The list of replication providers.
         * 
         * @return builder
         * 
         */
        public Builder replicationProviders(String... replicationProviders) {
            return replicationProviders(List.of(replicationProviders));
        }

        public RecoveryPlanPropertiesResponse build() {
            $.providerSpecificDetails = Objects.requireNonNull($.providerSpecificDetails, "expected parameter 'providerSpecificDetails' to be non-null");
            return $;
        }
    }

}
