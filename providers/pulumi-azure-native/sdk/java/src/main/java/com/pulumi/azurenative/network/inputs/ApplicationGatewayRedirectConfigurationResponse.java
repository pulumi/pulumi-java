// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.SubResourceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Redirect configuration of an application gateway.
 * 
 */
public final class ApplicationGatewayRedirectConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationGatewayRedirectConfigurationResponse Empty = new ApplicationGatewayRedirectConfigurationResponse();

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    public String etag() {
        return this.etag;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Include path in the redirected url.
     * 
     */
    @Import(name="includePath")
    private @Nullable Boolean includePath;

    public Optional<Boolean> includePath() {
        return Optional.ofNullable(this.includePath);
    }

    /**
     * Include query string in the redirected url.
     * 
     */
    @Import(name="includeQueryString")
    private @Nullable Boolean includeQueryString;

    public Optional<Boolean> includeQueryString() {
        return Optional.ofNullable(this.includeQueryString);
    }

    /**
     * Name of the redirect configuration that is unique within an Application Gateway.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Path rules specifying redirect configuration.
     * 
     */
    @Import(name="pathRules")
    private @Nullable List<SubResourceResponse> pathRules;

    public Optional<List<SubResourceResponse>> pathRules() {
        return Optional.ofNullable(this.pathRules);
    }

    /**
     * HTTP redirection type.
     * 
     */
    @Import(name="redirectType")
    private @Nullable String redirectType;

    public Optional<String> redirectType() {
        return Optional.ofNullable(this.redirectType);
    }

    /**
     * Request routing specifying redirect configuration.
     * 
     */
    @Import(name="requestRoutingRules")
    private @Nullable List<SubResourceResponse> requestRoutingRules;

    public Optional<List<SubResourceResponse>> requestRoutingRules() {
        return Optional.ofNullable(this.requestRoutingRules);
    }

    /**
     * Reference to a listener to redirect the request to.
     * 
     */
    @Import(name="targetListener")
    private @Nullable SubResourceResponse targetListener;

    public Optional<SubResourceResponse> targetListener() {
        return Optional.ofNullable(this.targetListener);
    }

    /**
     * Url to redirect the request to.
     * 
     */
    @Import(name="targetUrl")
    private @Nullable String targetUrl;

    public Optional<String> targetUrl() {
        return Optional.ofNullable(this.targetUrl);
    }

    /**
     * Type of the resource.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    /**
     * Url path maps specifying default redirect configuration.
     * 
     */
    @Import(name="urlPathMaps")
    private @Nullable List<SubResourceResponse> urlPathMaps;

    public Optional<List<SubResourceResponse>> urlPathMaps() {
        return Optional.ofNullable(this.urlPathMaps);
    }

    private ApplicationGatewayRedirectConfigurationResponse() {}

    private ApplicationGatewayRedirectConfigurationResponse(ApplicationGatewayRedirectConfigurationResponse $) {
        this.etag = $.etag;
        this.id = $.id;
        this.includePath = $.includePath;
        this.includeQueryString = $.includeQueryString;
        this.name = $.name;
        this.pathRules = $.pathRules;
        this.redirectType = $.redirectType;
        this.requestRoutingRules = $.requestRoutingRules;
        this.targetListener = $.targetListener;
        this.targetUrl = $.targetUrl;
        this.type = $.type;
        this.urlPathMaps = $.urlPathMaps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayRedirectConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayRedirectConfigurationResponse $;

        public Builder() {
            $ = new ApplicationGatewayRedirectConfigurationResponse();
        }

        public Builder(ApplicationGatewayRedirectConfigurationResponse defaults) {
            $ = new ApplicationGatewayRedirectConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder includePath(@Nullable Boolean includePath) {
            $.includePath = includePath;
            return this;
        }

        public Builder includeQueryString(@Nullable Boolean includeQueryString) {
            $.includeQueryString = includeQueryString;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder pathRules(@Nullable List<SubResourceResponse> pathRules) {
            $.pathRules = pathRules;
            return this;
        }

        public Builder pathRules(SubResourceResponse... pathRules) {
            return pathRules(List.of(pathRules));
        }

        public Builder redirectType(@Nullable String redirectType) {
            $.redirectType = redirectType;
            return this;
        }

        public Builder requestRoutingRules(@Nullable List<SubResourceResponse> requestRoutingRules) {
            $.requestRoutingRules = requestRoutingRules;
            return this;
        }

        public Builder requestRoutingRules(SubResourceResponse... requestRoutingRules) {
            return requestRoutingRules(List.of(requestRoutingRules));
        }

        public Builder targetListener(@Nullable SubResourceResponse targetListener) {
            $.targetListener = targetListener;
            return this;
        }

        public Builder targetUrl(@Nullable String targetUrl) {
            $.targetUrl = targetUrl;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder urlPathMaps(@Nullable List<SubResourceResponse> urlPathMaps) {
            $.urlPathMaps = urlPathMaps;
            return this;
        }

        public Builder urlPathMaps(SubResourceResponse... urlPathMaps) {
            return urlPathMaps(List.of(urlPathMaps));
        }

        public ApplicationGatewayRedirectConfigurationResponse build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
