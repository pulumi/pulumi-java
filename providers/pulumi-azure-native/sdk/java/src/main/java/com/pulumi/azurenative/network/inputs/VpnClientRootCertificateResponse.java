// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * VPN client root certificate of virtual network gateway.
 * 
 */
public final class VpnClientRootCertificateResponse extends com.pulumi.resources.InvokeArgs {

    public static final VpnClientRootCertificateResponse Empty = new VpnClientRootCertificateResponse();

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    public String etag() {
        return this.etag;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The provisioning state of the VPN client root certificate resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * The certificate public data.
     * 
     */
    @Import(name="publicCertData", required=true)
    private String publicCertData;

    public String publicCertData() {
        return this.publicCertData;
    }

    private VpnClientRootCertificateResponse() {}

    private VpnClientRootCertificateResponse(VpnClientRootCertificateResponse $) {
        this.etag = $.etag;
        this.id = $.id;
        this.name = $.name;
        this.provisioningState = $.provisioningState;
        this.publicCertData = $.publicCertData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnClientRootCertificateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnClientRootCertificateResponse $;

        public Builder() {
            $ = new VpnClientRootCertificateResponse();
        }

        public Builder(VpnClientRootCertificateResponse defaults) {
            $ = new VpnClientRootCertificateResponse(Objects.requireNonNull(defaults));
        }

        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder publicCertData(String publicCertData) {
            $.publicCertData = publicCertData;
            return this;
        }

        public VpnClientRootCertificateResponse build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.publicCertData = Objects.requireNonNull($.publicCertData, "expected parameter 'publicCertData' to be non-null");
            return $;
        }
    }

}
