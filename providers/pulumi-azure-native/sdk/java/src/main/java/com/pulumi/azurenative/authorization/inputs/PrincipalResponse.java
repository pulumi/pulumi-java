// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The name of the entity last modified it
 * 
 */
public final class PrincipalResponse extends com.pulumi.resources.InvokeArgs {

    public static final PrincipalResponse Empty = new PrincipalResponse();

    /**
     * The name of the principal made changes
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Email of principal
     * 
     */
    @Import(name="email")
    private @Nullable String email;

    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * The id of the principal made changes
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Type of principal such as user , group etc
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private PrincipalResponse() {}

    private PrincipalResponse(PrincipalResponse $) {
        this.displayName = $.displayName;
        this.email = $.email;
        this.id = $.id;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrincipalResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrincipalResponse $;

        public Builder() {
            $ = new PrincipalResponse();
        }

        public Builder(PrincipalResponse defaults) {
            $ = new PrincipalResponse(Objects.requireNonNull(defaults));
        }

        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder email(@Nullable String email) {
            $.email = email;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public PrincipalResponse build() {
            return $;
        }
    }

}
