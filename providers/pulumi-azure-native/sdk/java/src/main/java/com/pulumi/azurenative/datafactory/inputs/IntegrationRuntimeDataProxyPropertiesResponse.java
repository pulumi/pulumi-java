// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.EntityReferenceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Data proxy properties for a managed dedicated integration runtime.
 * 
 */
public final class IntegrationRuntimeDataProxyPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final IntegrationRuntimeDataProxyPropertiesResponse Empty = new IntegrationRuntimeDataProxyPropertiesResponse();

    /**
     * The self-hosted integration runtime reference.
     * 
     */
    @Import(name="connectVia")
    private @Nullable EntityReferenceResponse connectVia;

    public Optional<EntityReferenceResponse> connectVia() {
        return Optional.ofNullable(this.connectVia);
    }

    /**
     * The path to contain the staged data in the Blob storage.
     * 
     */
    @Import(name="path")
    private @Nullable String path;

    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * The staging linked service reference.
     * 
     */
    @Import(name="stagingLinkedService")
    private @Nullable EntityReferenceResponse stagingLinkedService;

    public Optional<EntityReferenceResponse> stagingLinkedService() {
        return Optional.ofNullable(this.stagingLinkedService);
    }

    private IntegrationRuntimeDataProxyPropertiesResponse() {}

    private IntegrationRuntimeDataProxyPropertiesResponse(IntegrationRuntimeDataProxyPropertiesResponse $) {
        this.connectVia = $.connectVia;
        this.path = $.path;
        this.stagingLinkedService = $.stagingLinkedService;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationRuntimeDataProxyPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationRuntimeDataProxyPropertiesResponse $;

        public Builder() {
            $ = new IntegrationRuntimeDataProxyPropertiesResponse();
        }

        public Builder(IntegrationRuntimeDataProxyPropertiesResponse defaults) {
            $ = new IntegrationRuntimeDataProxyPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder connectVia(@Nullable EntityReferenceResponse connectVia) {
            $.connectVia = connectVia;
            return this;
        }

        public Builder path(@Nullable String path) {
            $.path = path;
            return this;
        }

        public Builder stagingLinkedService(@Nullable EntityReferenceResponse stagingLinkedService) {
            $.stagingLinkedService = stagingLinkedService;
            return this;
        }

        public IntegrationRuntimeDataProxyPropertiesResponse build() {
            return $;
        }
    }

}
