// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.PerimeterBasedAccessRuleResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNspAccessRuleResult {
    /**
     * @return Inbound address prefixes (IPv4/IPv6)
     * 
     */
    private final @Nullable List<String> addressPrefixes;
    /**
     * @return Direction that specifies whether the access rules is inbound/outbound.
     * 
     */
    private final @Nullable String direction;
    /**
     * @return Outbound rules fully qualified domain name format.
     * 
     */
    private final @Nullable List<String> fullyQualifiedDomainNames;
    /**
     * @return Resource ID.
     * 
     */
    private final String id;
    /**
     * @return Resource location.
     * 
     */
    private final @Nullable String location;
    /**
     * @return Resource name.
     * 
     */
    private final String name;
    /**
     * @return Inbound rule specified by the perimeter id.
     * 
     */
    private final @Nullable List<PerimeterBasedAccessRuleResponse> networkSecurityPerimeters;
    /**
     * @return The provisioning state of the scope assignment resource.
     * 
     */
    private final String provisioningState;
    /**
     * @return Subscription id in the ARM id format.
     * 
     */
    private final @Nullable List<String> subscriptions;
    /**
     * @return Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return Resource type.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetNspAccessRuleResult(
        @CustomType.Parameter("addressPrefixes") @Nullable List<String> addressPrefixes,
        @CustomType.Parameter("direction") @Nullable String direction,
        @CustomType.Parameter("fullyQualifiedDomainNames") @Nullable List<String> fullyQualifiedDomainNames,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkSecurityPerimeters") @Nullable List<PerimeterBasedAccessRuleResponse> networkSecurityPerimeters,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("subscriptions") @Nullable List<String> subscriptions,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.addressPrefixes = addressPrefixes;
        this.direction = direction;
        this.fullyQualifiedDomainNames = fullyQualifiedDomainNames;
        this.id = id;
        this.location = location;
        this.name = name;
        this.networkSecurityPerimeters = networkSecurityPerimeters;
        this.provisioningState = provisioningState;
        this.subscriptions = subscriptions;
        this.tags = tags;
        this.type = type;
    }

    /**
     * @return Inbound address prefixes (IPv4/IPv6)
     * 
     */
    public List<String> addressPrefixes() {
        return this.addressPrefixes == null ? List.of() : this.addressPrefixes;
    }
    /**
     * @return Direction that specifies whether the access rules is inbound/outbound.
     * 
     */
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }
    /**
     * @return Outbound rules fully qualified domain name format.
     * 
     */
    public List<String> fullyQualifiedDomainNames() {
        return this.fullyQualifiedDomainNames == null ? List.of() : this.fullyQualifiedDomainNames;
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Inbound rule specified by the perimeter id.
     * 
     */
    public List<PerimeterBasedAccessRuleResponse> networkSecurityPerimeters() {
        return this.networkSecurityPerimeters == null ? List.of() : this.networkSecurityPerimeters;
    }
    /**
     * @return The provisioning state of the scope assignment resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Subscription id in the ARM id format.
     * 
     */
    public List<String> subscriptions() {
        return this.subscriptions == null ? List.of() : this.subscriptions;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNspAccessRuleResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> addressPrefixes;
        private @Nullable String direction;
        private @Nullable List<String> fullyQualifiedDomainNames;
        private String id;
        private @Nullable String location;
        private String name;
        private @Nullable List<PerimeterBasedAccessRuleResponse> networkSecurityPerimeters;
        private String provisioningState;
        private @Nullable List<String> subscriptions;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNspAccessRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressPrefixes = defaults.addressPrefixes;
    	      this.direction = defaults.direction;
    	      this.fullyQualifiedDomainNames = defaults.fullyQualifiedDomainNames;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.networkSecurityPerimeters = defaults.networkSecurityPerimeters;
    	      this.provisioningState = defaults.provisioningState;
    	      this.subscriptions = defaults.subscriptions;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder addressPrefixes(@Nullable List<String> addressPrefixes) {
            this.addressPrefixes = addressPrefixes;
            return this;
        }
        public Builder addressPrefixes(String... addressPrefixes) {
            return addressPrefixes(List.of(addressPrefixes));
        }
        public Builder direction(@Nullable String direction) {
            this.direction = direction;
            return this;
        }
        public Builder fullyQualifiedDomainNames(@Nullable List<String> fullyQualifiedDomainNames) {
            this.fullyQualifiedDomainNames = fullyQualifiedDomainNames;
            return this;
        }
        public Builder fullyQualifiedDomainNames(String... fullyQualifiedDomainNames) {
            return fullyQualifiedDomainNames(List.of(fullyQualifiedDomainNames));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkSecurityPerimeters(@Nullable List<PerimeterBasedAccessRuleResponse> networkSecurityPerimeters) {
            this.networkSecurityPerimeters = networkSecurityPerimeters;
            return this;
        }
        public Builder networkSecurityPerimeters(PerimeterBasedAccessRuleResponse... networkSecurityPerimeters) {
            return networkSecurityPerimeters(List.of(networkSecurityPerimeters));
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder subscriptions(@Nullable List<String> subscriptions) {
            this.subscriptions = subscriptions;
            return this;
        }
        public Builder subscriptions(String... subscriptions) {
            return subscriptions(List.of(subscriptions));
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetNspAccessRuleResult build() {
            return new GetNspAccessRuleResult(addressPrefixes, direction, fullyQualifiedDomainNames, id, location, name, networkSecurityPerimeters, provisioningState, subscriptions, tags, type);
        }
    }
}
