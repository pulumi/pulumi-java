// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.chaos.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Model that represents the Capability properties model.
 * 
 */
public final class CapabilityPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final CapabilityPropertiesResponse Empty = new CapabilityPropertiesResponse();

    /**
     * Localized string of the description.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return Localized string of the description.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * URL to retrieve JSON schema of the Capability parameters.
     * 
     */
    @Import(name="parametersSchema", required=true)
    private String parametersSchema;

    /**
     * @return URL to retrieve JSON schema of the Capability parameters.
     * 
     */
    public String parametersSchema() {
        return this.parametersSchema;
    }

    /**
     * String of the Publisher that this Capability extends.
     * 
     */
    @Import(name="publisher", required=true)
    private String publisher;

    /**
     * @return String of the Publisher that this Capability extends.
     * 
     */
    public String publisher() {
        return this.publisher;
    }

    /**
     * String of the Target Type that this Capability extends.
     * 
     */
    @Import(name="targetType", required=true)
    private String targetType;

    /**
     * @return String of the Target Type that this Capability extends.
     * 
     */
    public String targetType() {
        return this.targetType;
    }

    /**
     * String of the URN for this Capability Type.
     * 
     */
    @Import(name="urn", required=true)
    private String urn;

    /**
     * @return String of the URN for this Capability Type.
     * 
     */
    public String urn() {
        return this.urn;
    }

    private CapabilityPropertiesResponse() {}

    private CapabilityPropertiesResponse(CapabilityPropertiesResponse $) {
        this.description = $.description;
        this.parametersSchema = $.parametersSchema;
        this.publisher = $.publisher;
        this.targetType = $.targetType;
        this.urn = $.urn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapabilityPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapabilityPropertiesResponse $;

        public Builder() {
            $ = new CapabilityPropertiesResponse();
        }

        public Builder(CapabilityPropertiesResponse defaults) {
            $ = new CapabilityPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Localized string of the description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param parametersSchema URL to retrieve JSON schema of the Capability parameters.
         * 
         * @return builder
         * 
         */
        public Builder parametersSchema(String parametersSchema) {
            $.parametersSchema = parametersSchema;
            return this;
        }

        /**
         * @param publisher String of the Publisher that this Capability extends.
         * 
         * @return builder
         * 
         */
        public Builder publisher(String publisher) {
            $.publisher = publisher;
            return this;
        }

        /**
         * @param targetType String of the Target Type that this Capability extends.
         * 
         * @return builder
         * 
         */
        public Builder targetType(String targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param urn String of the URN for this Capability Type.
         * 
         * @return builder
         * 
         */
        public Builder urn(String urn) {
            $.urn = urn;
            return this;
        }

        public CapabilityPropertiesResponse build() {
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.parametersSchema = Objects.requireNonNull($.parametersSchema, "expected parameter 'parametersSchema' to be non-null");
            $.publisher = Objects.requireNonNull($.publisher, "expected parameter 'publisher' to be non-null");
            $.targetType = Objects.requireNonNull($.targetType, "expected parameter 'targetType' to be non-null");
            $.urn = Objects.requireNonNull($.urn, "expected parameter 'urn' to be non-null");
            return $;
        }
    }

}
