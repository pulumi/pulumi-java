// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.enums.EncryptionType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Encryption at rest settings for disk or snapshot
 * 
 */
public final class EncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final EncryptionArgs Empty = new EncryptionArgs();

    /**
     * ResourceId of the disk encryption set to use for enabling encryption at rest.
     * 
     */
    @Import(name="diskEncryptionSetId")
      private final @Nullable Output<String> diskEncryptionSetId;

    public Output<String> diskEncryptionSetId() {
        return this.diskEncryptionSetId == null ? Codegen.empty() : this.diskEncryptionSetId;
    }

    /**
     * The type of key used to encrypt the data of the disk.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<Either<String,EncryptionType>> type;

    public Output<Either<String,EncryptionType>> type() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    public EncryptionArgs(
        @Nullable Output<String> diskEncryptionSetId,
        @Nullable Output<Either<String,EncryptionType>> type) {
        this.diskEncryptionSetId = diskEncryptionSetId;
        this.type = type;
    }

    private EncryptionArgs() {
        this.diskEncryptionSetId = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> diskEncryptionSetId;
        private @Nullable Output<Either<String,EncryptionType>> type;

        public Builder() {
    	      // Empty
        }

        public Builder(EncryptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskEncryptionSetId = defaults.diskEncryptionSetId;
    	      this.type = defaults.type;
        }

        public Builder diskEncryptionSetId(@Nullable Output<String> diskEncryptionSetId) {
            this.diskEncryptionSetId = diskEncryptionSetId;
            return this;
        }
        public Builder diskEncryptionSetId(@Nullable String diskEncryptionSetId) {
            this.diskEncryptionSetId = Codegen.ofNullable(diskEncryptionSetId);
            return this;
        }
        public Builder type(@Nullable Output<Either<String,EncryptionType>> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable Either<String,EncryptionType> type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }        public EncryptionArgs build() {
            return new EncryptionArgs(diskEncryptionSetId, type);
        }
    }
}
