// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The JSON object that contains the properties to send health probes to origin.
 * 
 */
public final class HealthProbeParametersResponse extends com.pulumi.resources.InvokeArgs {

    public static final HealthProbeParametersResponse Empty = new HealthProbeParametersResponse();

    /**
     * The number of seconds between health probes.Default is 240sec.
     * 
     */
    @Import(name="probeIntervalInSeconds")
    private @Nullable Integer probeIntervalInSeconds;

    public Optional<Integer> probeIntervalInSeconds() {
        return Optional.ofNullable(this.probeIntervalInSeconds);
    }

    /**
     * The path relative to the origin that is used to determine the health of the origin.
     * 
     */
    @Import(name="probePath")
    private @Nullable String probePath;

    public Optional<String> probePath() {
        return Optional.ofNullable(this.probePath);
    }

    /**
     * Protocol to use for health probe.
     * 
     */
    @Import(name="probeProtocol")
    private @Nullable String probeProtocol;

    public Optional<String> probeProtocol() {
        return Optional.ofNullable(this.probeProtocol);
    }

    /**
     * The type of health probe request that is made.
     * 
     */
    @Import(name="probeRequestType")
    private @Nullable String probeRequestType;

    public Optional<String> probeRequestType() {
        return Optional.ofNullable(this.probeRequestType);
    }

    private HealthProbeParametersResponse() {}

    private HealthProbeParametersResponse(HealthProbeParametersResponse $) {
        this.probeIntervalInSeconds = $.probeIntervalInSeconds;
        this.probePath = $.probePath;
        this.probeProtocol = $.probeProtocol;
        this.probeRequestType = $.probeRequestType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HealthProbeParametersResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HealthProbeParametersResponse $;

        public Builder() {
            $ = new HealthProbeParametersResponse();
        }

        public Builder(HealthProbeParametersResponse defaults) {
            $ = new HealthProbeParametersResponse(Objects.requireNonNull(defaults));
        }

        public Builder probeIntervalInSeconds(@Nullable Integer probeIntervalInSeconds) {
            $.probeIntervalInSeconds = probeIntervalInSeconds;
            return this;
        }

        public Builder probePath(@Nullable String probePath) {
            $.probePath = probePath;
            return this;
        }

        public Builder probeProtocol(@Nullable String probeProtocol) {
            $.probeProtocol = probeProtocol;
            return this;
        }

        public Builder probeRequestType(@Nullable String probeRequestType) {
            $.probeRequestType = probeRequestType;
            return this;
        }

        public HealthProbeParametersResponse build() {
            return $;
        }
    }

}
