// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Resource for a regional service location.
 * 
 */
public final class SqlDedicatedGatewayRegionalServiceResourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final SqlDedicatedGatewayRegionalServiceResourceResponse Empty = new SqlDedicatedGatewayRegionalServiceResourceResponse();

    /**
     * The location name.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return The location name.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * The regional service name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The regional service name.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The regional endpoint for SqlDedicatedGateway.
     * 
     */
    @Import(name="sqlDedicatedGatewayEndpoint", required=true)
    private String sqlDedicatedGatewayEndpoint;

    /**
     * @return The regional endpoint for SqlDedicatedGateway.
     * 
     */
    public String sqlDedicatedGatewayEndpoint() {
        return this.sqlDedicatedGatewayEndpoint;
    }

    /**
     * Describes the status of a service.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Describes the status of a service.
     * 
     */
    public String status() {
        return this.status;
    }

    private SqlDedicatedGatewayRegionalServiceResourceResponse() {}

    private SqlDedicatedGatewayRegionalServiceResourceResponse(SqlDedicatedGatewayRegionalServiceResourceResponse $) {
        this.location = $.location;
        this.name = $.name;
        this.sqlDedicatedGatewayEndpoint = $.sqlDedicatedGatewayEndpoint;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlDedicatedGatewayRegionalServiceResourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlDedicatedGatewayRegionalServiceResourceResponse $;

        public Builder() {
            $ = new SqlDedicatedGatewayRegionalServiceResourceResponse();
        }

        public Builder(SqlDedicatedGatewayRegionalServiceResourceResponse defaults) {
            $ = new SqlDedicatedGatewayRegionalServiceResourceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The location name.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param name The regional service name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param sqlDedicatedGatewayEndpoint The regional endpoint for SqlDedicatedGateway.
         * 
         * @return builder
         * 
         */
        public Builder sqlDedicatedGatewayEndpoint(String sqlDedicatedGatewayEndpoint) {
            $.sqlDedicatedGatewayEndpoint = sqlDedicatedGatewayEndpoint;
            return this;
        }

        /**
         * @param status Describes the status of a service.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public SqlDedicatedGatewayRegionalServiceResourceResponse build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.sqlDedicatedGatewayEndpoint = Objects.requireNonNull($.sqlDedicatedGatewayEndpoint, "expected parameter 'sqlDedicatedGatewayEndpoint' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
