// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.LinuxConfigurationArgs;
import com.pulumi.azurenative.compute.inputs.VaultSecretGroupArgs;
import com.pulumi.azurenative.compute.inputs.WindowsConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Describes a virtual machine scale set OS profile.
 * 
 */
public final class VirtualMachineScaleSetOSProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineScaleSetOSProfileArgs Empty = new VirtualMachineScaleSetOSProfileArgs();

    /**
     * Specifies the password of the administrator account. &lt;br&gt;&lt;br&gt; **Minimum-length (Windows):** 8 characters &lt;br&gt;&lt;br&gt; **Minimum-length (Linux):** 6 characters &lt;br&gt;&lt;br&gt; **Max-length (Windows):** 123 characters &lt;br&gt;&lt;br&gt; **Max-length (Linux):** 72 characters &lt;br&gt;&lt;br&gt; **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled &lt;br&gt; Has lower characters &lt;br&gt;Has upper characters &lt;br&gt; Has a digit &lt;br&gt; Has a special character (Regex match [\W_]) &lt;br&gt;&lt;br&gt; **Disallowed values:** &#34;abc@123&#34;, &#34;P@$$w0rd&#34;, &#34;P@ssw0rd&#34;, &#34;P@ssword123&#34;, &#34;Pa$$word&#34;, &#34;pass@word1&#34;, &#34;Password!&#34;, &#34;Password1&#34;, &#34;Password22&#34;, &#34;iloveyou!&#34; &lt;br&gt;&lt;br&gt; For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) &lt;br&gt;&lt;br&gt; For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
     * 
     */
    @Import(name="adminPassword")
      private final @Nullable Output<String> adminPassword;

    public Output<String> adminPassword() {
        return this.adminPassword == null ? Codegen.empty() : this.adminPassword;
    }

    /**
     * Specifies the name of the administrator account. &lt;br&gt;&lt;br&gt; **Windows-only restriction:** Cannot end in &#34;.&#34; &lt;br&gt;&lt;br&gt; **Disallowed values:** &#34;administrator&#34;, &#34;admin&#34;, &#34;user&#34;, &#34;user1&#34;, &#34;test&#34;, &#34;user2&#34;, &#34;test1&#34;, &#34;user3&#34;, &#34;admin1&#34;, &#34;1&#34;, &#34;123&#34;, &#34;a&#34;, &#34;actuser&#34;, &#34;adm&#34;, &#34;admin2&#34;, &#34;aspnet&#34;, &#34;backup&#34;, &#34;console&#34;, &#34;david&#34;, &#34;guest&#34;, &#34;john&#34;, &#34;owner&#34;, &#34;root&#34;, &#34;server&#34;, &#34;sql&#34;, &#34;support&#34;, &#34;support_388945a0&#34;, &#34;sys&#34;, &#34;test2&#34;, &#34;test3&#34;, &#34;user4&#34;, &#34;user5&#34;. &lt;br&gt;&lt;br&gt; **Minimum-length (Linux):** 1  character &lt;br&gt;&lt;br&gt; **Max-length (Linux):** 64 characters &lt;br&gt;&lt;br&gt; **Max-length (Windows):** 20 characters
     * 
     */
    @Import(name="adminUsername")
      private final @Nullable Output<String> adminUsername;

    public Output<String> adminUsername() {
        return this.adminUsername == null ? Codegen.empty() : this.adminUsername;
    }

    /**
     * Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
     * 
     */
    @Import(name="computerNamePrefix")
      private final @Nullable Output<String> computerNamePrefix;

    public Output<String> computerNamePrefix() {
        return this.computerNamePrefix == null ? Codegen.empty() : this.computerNamePrefix;
    }

    /**
     * Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. &lt;br&gt;&lt;br&gt; For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
     * 
     */
    @Import(name="customData")
      private final @Nullable Output<String> customData;

    public Output<String> customData() {
        return this.customData == null ? Codegen.empty() : this.customData;
    }

    /**
     * Specifies the Linux operating system settings on the virtual machine. &lt;br&gt;&lt;br&gt;For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
     * 
     */
    @Import(name="linuxConfiguration")
      private final @Nullable Output<LinuxConfigurationArgs> linuxConfiguration;

    public Output<LinuxConfigurationArgs> linuxConfiguration() {
        return this.linuxConfiguration == null ? Codegen.empty() : this.linuxConfiguration;
    }

    /**
     * Specifies set of certificates that should be installed onto the virtual machines in the scale set. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
     * 
     */
    @Import(name="secrets")
      private final @Nullable Output<List<VaultSecretGroupArgs>> secrets;

    public Output<List<VaultSecretGroupArgs>> secrets() {
        return this.secrets == null ? Codegen.empty() : this.secrets;
    }

    /**
     * Specifies Windows operating system settings on the virtual machine.
     * 
     */
    @Import(name="windowsConfiguration")
      private final @Nullable Output<WindowsConfigurationArgs> windowsConfiguration;

    public Output<WindowsConfigurationArgs> windowsConfiguration() {
        return this.windowsConfiguration == null ? Codegen.empty() : this.windowsConfiguration;
    }

    public VirtualMachineScaleSetOSProfileArgs(
        @Nullable Output<String> adminPassword,
        @Nullable Output<String> adminUsername,
        @Nullable Output<String> computerNamePrefix,
        @Nullable Output<String> customData,
        @Nullable Output<LinuxConfigurationArgs> linuxConfiguration,
        @Nullable Output<List<VaultSecretGroupArgs>> secrets,
        @Nullable Output<WindowsConfigurationArgs> windowsConfiguration) {
        this.adminPassword = adminPassword;
        this.adminUsername = adminUsername;
        this.computerNamePrefix = computerNamePrefix;
        this.customData = customData;
        this.linuxConfiguration = linuxConfiguration;
        this.secrets = secrets;
        this.windowsConfiguration = windowsConfiguration;
    }

    private VirtualMachineScaleSetOSProfileArgs() {
        this.adminPassword = Codegen.empty();
        this.adminUsername = Codegen.empty();
        this.computerNamePrefix = Codegen.empty();
        this.customData = Codegen.empty();
        this.linuxConfiguration = Codegen.empty();
        this.secrets = Codegen.empty();
        this.windowsConfiguration = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineScaleSetOSProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> adminPassword;
        private @Nullable Output<String> adminUsername;
        private @Nullable Output<String> computerNamePrefix;
        private @Nullable Output<String> customData;
        private @Nullable Output<LinuxConfigurationArgs> linuxConfiguration;
        private @Nullable Output<List<VaultSecretGroupArgs>> secrets;
        private @Nullable Output<WindowsConfigurationArgs> windowsConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineScaleSetOSProfileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminPassword = defaults.adminPassword;
    	      this.adminUsername = defaults.adminUsername;
    	      this.computerNamePrefix = defaults.computerNamePrefix;
    	      this.customData = defaults.customData;
    	      this.linuxConfiguration = defaults.linuxConfiguration;
    	      this.secrets = defaults.secrets;
    	      this.windowsConfiguration = defaults.windowsConfiguration;
        }

        public Builder adminPassword(@Nullable Output<String> adminPassword) {
            this.adminPassword = adminPassword;
            return this;
        }
        public Builder adminPassword(@Nullable String adminPassword) {
            this.adminPassword = Codegen.ofNullable(adminPassword);
            return this;
        }
        public Builder adminUsername(@Nullable Output<String> adminUsername) {
            this.adminUsername = adminUsername;
            return this;
        }
        public Builder adminUsername(@Nullable String adminUsername) {
            this.adminUsername = Codegen.ofNullable(adminUsername);
            return this;
        }
        public Builder computerNamePrefix(@Nullable Output<String> computerNamePrefix) {
            this.computerNamePrefix = computerNamePrefix;
            return this;
        }
        public Builder computerNamePrefix(@Nullable String computerNamePrefix) {
            this.computerNamePrefix = Codegen.ofNullable(computerNamePrefix);
            return this;
        }
        public Builder customData(@Nullable Output<String> customData) {
            this.customData = customData;
            return this;
        }
        public Builder customData(@Nullable String customData) {
            this.customData = Codegen.ofNullable(customData);
            return this;
        }
        public Builder linuxConfiguration(@Nullable Output<LinuxConfigurationArgs> linuxConfiguration) {
            this.linuxConfiguration = linuxConfiguration;
            return this;
        }
        public Builder linuxConfiguration(@Nullable LinuxConfigurationArgs linuxConfiguration) {
            this.linuxConfiguration = Codegen.ofNullable(linuxConfiguration);
            return this;
        }
        public Builder secrets(@Nullable Output<List<VaultSecretGroupArgs>> secrets) {
            this.secrets = secrets;
            return this;
        }
        public Builder secrets(@Nullable List<VaultSecretGroupArgs> secrets) {
            this.secrets = Codegen.ofNullable(secrets);
            return this;
        }
        public Builder secrets(VaultSecretGroupArgs... secrets) {
            return secrets(List.of(secrets));
        }
        public Builder windowsConfiguration(@Nullable Output<WindowsConfigurationArgs> windowsConfiguration) {
            this.windowsConfiguration = windowsConfiguration;
            return this;
        }
        public Builder windowsConfiguration(@Nullable WindowsConfigurationArgs windowsConfiguration) {
            this.windowsConfiguration = Codegen.ofNullable(windowsConfiguration);
            return this;
        }        public VirtualMachineScaleSetOSProfileArgs build() {
            return new VirtualMachineScaleSetOSProfileArgs(adminPassword, adminUsername, computerNamePrefix, customData, linuxConfiguration, secrets, windowsConfiguration);
        }
    }
}
