// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.engagementfabric.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * EngagementFabric channel description
 * 
 */
public final class ChannelTypeDescriptionResponse extends com.pulumi.resources.InvokeArgs {

    public static final ChannelTypeDescriptionResponse Empty = new ChannelTypeDescriptionResponse();

    /**
     * Text description for the channel
     * 
     */
    @Import(name="channelDescription")
    private @Nullable String channelDescription;

    /**
     * @return Text description for the channel
     * 
     */
    public Optional<String> channelDescription() {
        return Optional.ofNullable(this.channelDescription);
    }

    /**
     * All the available functions for the channel
     * 
     */
    @Import(name="channelFunctions")
    private @Nullable List<String> channelFunctions;

    /**
     * @return All the available functions for the channel
     * 
     */
    public Optional<List<String>> channelFunctions() {
        return Optional.ofNullable(this.channelFunctions);
    }

    /**
     * Channel type
     * 
     */
    @Import(name="channelType")
    private @Nullable String channelType;

    /**
     * @return Channel type
     * 
     */
    public Optional<String> channelType() {
        return Optional.ofNullable(this.channelType);
    }

    private ChannelTypeDescriptionResponse() {}

    private ChannelTypeDescriptionResponse(ChannelTypeDescriptionResponse $) {
        this.channelDescription = $.channelDescription;
        this.channelFunctions = $.channelFunctions;
        this.channelType = $.channelType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelTypeDescriptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelTypeDescriptionResponse $;

        public Builder() {
            $ = new ChannelTypeDescriptionResponse();
        }

        public Builder(ChannelTypeDescriptionResponse defaults) {
            $ = new ChannelTypeDescriptionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param channelDescription Text description for the channel
         * 
         * @return builder
         * 
         */
        public Builder channelDescription(@Nullable String channelDescription) {
            $.channelDescription = channelDescription;
            return this;
        }

        /**
         * @param channelFunctions All the available functions for the channel
         * 
         * @return builder
         * 
         */
        public Builder channelFunctions(@Nullable List<String> channelFunctions) {
            $.channelFunctions = channelFunctions;
            return this;
        }

        /**
         * @param channelFunctions All the available functions for the channel
         * 
         * @return builder
         * 
         */
        public Builder channelFunctions(String... channelFunctions) {
            return channelFunctions(List.of(channelFunctions));
        }

        /**
         * @param channelType Channel type
         * 
         * @return builder
         * 
         */
        public Builder channelType(@Nullable String channelType) {
            $.channelType = channelType;
            return this;
        }

        public ChannelTypeDescriptionResponse build() {
            return $;
        }
    }

}
