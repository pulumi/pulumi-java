// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.ActivityDependencyArgs;
import com.pulumi.azurenative.datafactory.inputs.ActivityPolicyArgs;
import com.pulumi.azurenative.datafactory.inputs.AzureMLWebServiceFileArgs;
import com.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceArgs;
import com.pulumi.azurenative.datafactory.inputs.UserPropertyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Azure ML Batch Execution activity.
 * 
 */
public final class AzureMLBatchExecutionActivityArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureMLBatchExecutionActivityArgs Empty = new AzureMLBatchExecutionActivityArgs();

    /**
     * Activity depends on condition.
     * 
     */
    @Import(name="dependsOn")
    private @Nullable Output<List<ActivityDependencyArgs>> dependsOn;

    public Optional<Output<List<ActivityDependencyArgs>>> dependsOn() {
        return Optional.ofNullable(this.dependsOn);
    }

    /**
     * Activity description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
     * 
     */
    @Import(name="globalParameters")
    private @Nullable Output<Map<String,Object>> globalParameters;

    public Optional<Output<Map<String,Object>>> globalParameters() {
        return Optional.ofNullable(this.globalParameters);
    }

    /**
     * Linked service reference.
     * 
     */
    @Import(name="linkedServiceName")
    private @Nullable Output<LinkedServiceReferenceArgs> linkedServiceName;

    public Optional<Output<LinkedServiceReferenceArgs>> linkedServiceName() {
        return Optional.ofNullable(this.linkedServiceName);
    }

    /**
     * Activity name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Activity policy.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<ActivityPolicyArgs> policy;

    public Optional<Output<ActivityPolicyArgs>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Type of activity.
     * Expected value is &#39;AzureMLBatchExecution&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    /**
     * Activity user properties.
     * 
     */
    @Import(name="userProperties")
    private @Nullable Output<List<UserPropertyArgs>> userProperties;

    public Optional<Output<List<UserPropertyArgs>>> userProperties() {
        return Optional.ofNullable(this.userProperties);
    }

    /**
     * Key,Value pairs, mapping the names of Azure ML endpoint&#39;s Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
     * 
     */
    @Import(name="webServiceInputs")
    private @Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceInputs;

    public Optional<Output<Map<String,AzureMLWebServiceFileArgs>>> webServiceInputs() {
        return Optional.ofNullable(this.webServiceInputs);
    }

    /**
     * Key,Value pairs, mapping the names of Azure ML endpoint&#39;s Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
     * 
     */
    @Import(name="webServiceOutputs")
    private @Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceOutputs;

    public Optional<Output<Map<String,AzureMLWebServiceFileArgs>>> webServiceOutputs() {
        return Optional.ofNullable(this.webServiceOutputs);
    }

    private AzureMLBatchExecutionActivityArgs() {}

    private AzureMLBatchExecutionActivityArgs(AzureMLBatchExecutionActivityArgs $) {
        this.dependsOn = $.dependsOn;
        this.description = $.description;
        this.globalParameters = $.globalParameters;
        this.linkedServiceName = $.linkedServiceName;
        this.name = $.name;
        this.policy = $.policy;
        this.type = $.type;
        this.userProperties = $.userProperties;
        this.webServiceInputs = $.webServiceInputs;
        this.webServiceOutputs = $.webServiceOutputs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureMLBatchExecutionActivityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureMLBatchExecutionActivityArgs $;

        public Builder() {
            $ = new AzureMLBatchExecutionActivityArgs();
        }

        public Builder(AzureMLBatchExecutionActivityArgs defaults) {
            $ = new AzureMLBatchExecutionActivityArgs(Objects.requireNonNull(defaults));
        }

        public Builder dependsOn(@Nullable Output<List<ActivityDependencyArgs>> dependsOn) {
            $.dependsOn = dependsOn;
            return this;
        }

        public Builder dependsOn(List<ActivityDependencyArgs> dependsOn) {
            return dependsOn(Output.of(dependsOn));
        }

        public Builder dependsOn(ActivityDependencyArgs... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder globalParameters(@Nullable Output<Map<String,Object>> globalParameters) {
            $.globalParameters = globalParameters;
            return this;
        }

        public Builder globalParameters(Map<String,Object> globalParameters) {
            return globalParameters(Output.of(globalParameters));
        }

        public Builder linkedServiceName(@Nullable Output<LinkedServiceReferenceArgs> linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        public Builder linkedServiceName(LinkedServiceReferenceArgs linkedServiceName) {
            return linkedServiceName(Output.of(linkedServiceName));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder policy(@Nullable Output<ActivityPolicyArgs> policy) {
            $.policy = policy;
            return this;
        }

        public Builder policy(ActivityPolicyArgs policy) {
            return policy(Output.of(policy));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder userProperties(@Nullable Output<List<UserPropertyArgs>> userProperties) {
            $.userProperties = userProperties;
            return this;
        }

        public Builder userProperties(List<UserPropertyArgs> userProperties) {
            return userProperties(Output.of(userProperties));
        }

        public Builder userProperties(UserPropertyArgs... userProperties) {
            return userProperties(List.of(userProperties));
        }

        public Builder webServiceInputs(@Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceInputs) {
            $.webServiceInputs = webServiceInputs;
            return this;
        }

        public Builder webServiceInputs(Map<String,AzureMLWebServiceFileArgs> webServiceInputs) {
            return webServiceInputs(Output.of(webServiceInputs));
        }

        public Builder webServiceOutputs(@Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceOutputs) {
            $.webServiceOutputs = webServiceOutputs;
            return this;
        }

        public Builder webServiceOutputs(Map<String,AzureMLWebServiceFileArgs> webServiceOutputs) {
            return webServiceOutputs(Output.of(webServiceOutputs));
        }

        public AzureMLBatchExecutionActivityArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
