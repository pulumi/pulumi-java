// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ShareInfoElementResponse extends com.pulumi.resources.InvokeArgs {

    public static final ShareInfoElementResponse Empty = new ShareInfoElementResponse();

    /**
     * A relative URI containing the ID of the VM that has the disk attached.
     * 
     */
    @Import(name="vmUri", required=true)
    private String vmUri;

    /**
     * @return A relative URI containing the ID of the VM that has the disk attached.
     * 
     */
    public String vmUri() {
        return this.vmUri;
    }

    private ShareInfoElementResponse() {}

    private ShareInfoElementResponse(ShareInfoElementResponse $) {
        this.vmUri = $.vmUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShareInfoElementResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShareInfoElementResponse $;

        public Builder() {
            $ = new ShareInfoElementResponse();
        }

        public Builder(ShareInfoElementResponse defaults) {
            $ = new ShareInfoElementResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param vmUri A relative URI containing the ID of the VM that has the disk attached.
         * 
         * @return builder
         * 
         */
        public Builder vmUri(String vmUri) {
            $.vmUri = vmUri;
            return this;
        }

        public ShareInfoElementResponse build() {
            $.vmUri = Objects.requireNonNull($.vmUri, "expected parameter 'vmUri' to be non-null");
            return $;
        }
    }

}
