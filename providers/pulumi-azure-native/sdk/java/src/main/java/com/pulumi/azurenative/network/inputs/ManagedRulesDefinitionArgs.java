// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.ManagedRuleSetArgs;
import com.pulumi.azurenative.network.inputs.OwaspCrsExclusionEntryArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Allow to exclude some variable satisfy the condition for the WAF check.
 * 
 */
public final class ManagedRulesDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedRulesDefinitionArgs Empty = new ManagedRulesDefinitionArgs();

    /**
     * The Exclusions that are applied on the policy.
     * 
     */
    @Import(name="exclusions")
    private @Nullable Output<List<OwaspCrsExclusionEntryArgs>> exclusions;

    /**
     * @return The Exclusions that are applied on the policy.
     * 
     */
    public Optional<Output<List<OwaspCrsExclusionEntryArgs>>> exclusions() {
        return Optional.ofNullable(this.exclusions);
    }

    /**
     * The managed rule sets that are associated with the policy.
     * 
     */
    @Import(name="managedRuleSets", required=true)
    private Output<List<ManagedRuleSetArgs>> managedRuleSets;

    /**
     * @return The managed rule sets that are associated with the policy.
     * 
     */
    public Output<List<ManagedRuleSetArgs>> managedRuleSets() {
        return this.managedRuleSets;
    }

    private ManagedRulesDefinitionArgs() {}

    private ManagedRulesDefinitionArgs(ManagedRulesDefinitionArgs $) {
        this.exclusions = $.exclusions;
        this.managedRuleSets = $.managedRuleSets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedRulesDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedRulesDefinitionArgs $;

        public Builder() {
            $ = new ManagedRulesDefinitionArgs();
        }

        public Builder(ManagedRulesDefinitionArgs defaults) {
            $ = new ManagedRulesDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exclusions The Exclusions that are applied on the policy.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(@Nullable Output<List<OwaspCrsExclusionEntryArgs>> exclusions) {
            $.exclusions = exclusions;
            return this;
        }

        /**
         * @param exclusions The Exclusions that are applied on the policy.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(List<OwaspCrsExclusionEntryArgs> exclusions) {
            return exclusions(Output.of(exclusions));
        }

        /**
         * @param exclusions The Exclusions that are applied on the policy.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(OwaspCrsExclusionEntryArgs... exclusions) {
            return exclusions(List.of(exclusions));
        }

        /**
         * @param managedRuleSets The managed rule sets that are associated with the policy.
         * 
         * @return builder
         * 
         */
        public Builder managedRuleSets(Output<List<ManagedRuleSetArgs>> managedRuleSets) {
            $.managedRuleSets = managedRuleSets;
            return this;
        }

        /**
         * @param managedRuleSets The managed rule sets that are associated with the policy.
         * 
         * @return builder
         * 
         */
        public Builder managedRuleSets(List<ManagedRuleSetArgs> managedRuleSets) {
            return managedRuleSets(Output.of(managedRuleSets));
        }

        /**
         * @param managedRuleSets The managed rule sets that are associated with the policy.
         * 
         * @return builder
         * 
         */
        public Builder managedRuleSets(ManagedRuleSetArgs... managedRuleSets) {
            return managedRuleSets(List.of(managedRuleSets));
        }

        public ManagedRulesDefinitionArgs build() {
            $.managedRuleSets = Objects.requireNonNull($.managedRuleSets, "expected parameter 'managedRuleSets' to be non-null");
            return $;
        }
    }

}
