// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.avs;

import com.pulumi.azurenative.avs.enums.PortMirroringDirectionEnum;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkloadNetworkPortMirroringArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadNetworkPortMirroringArgs Empty = new WorkloadNetworkPortMirroringArgs();

    /**
     * Destination VM Group.
     * 
     */
    @Import(name="destination")
    private @Nullable Output<String> destination;

    public Optional<Output<String>> destination() {
        return Optional.ofNullable(this.destination);
    }

    /**
     * Direction of port mirroring profile.
     * 
     */
    @Import(name="direction")
    private @Nullable Output<Either<String,PortMirroringDirectionEnum>> direction;

    public Optional<Output<Either<String,PortMirroringDirectionEnum>>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Display name of the port mirroring profile.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * NSX Port Mirroring identifier. Generally the same as the Port Mirroring display name
     * 
     */
    @Import(name="portMirroringId")
    private @Nullable Output<String> portMirroringId;

    public Optional<Output<String>> portMirroringId() {
        return Optional.ofNullable(this.portMirroringId);
    }

    /**
     * Name of the private cloud
     * 
     */
    @Import(name="privateCloudName", required=true)
    private Output<String> privateCloudName;

    public Output<String> privateCloudName() {
        return this.privateCloudName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * NSX revision number.
     * 
     */
    @Import(name="revision")
    private @Nullable Output<Double> revision;

    public Optional<Output<Double>> revision() {
        return Optional.ofNullable(this.revision);
    }

    /**
     * Source VM Group.
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    private WorkloadNetworkPortMirroringArgs() {}

    private WorkloadNetworkPortMirroringArgs(WorkloadNetworkPortMirroringArgs $) {
        this.destination = $.destination;
        this.direction = $.direction;
        this.displayName = $.displayName;
        this.portMirroringId = $.portMirroringId;
        this.privateCloudName = $.privateCloudName;
        this.resourceGroupName = $.resourceGroupName;
        this.revision = $.revision;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadNetworkPortMirroringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadNetworkPortMirroringArgs $;

        public Builder() {
            $ = new WorkloadNetworkPortMirroringArgs();
        }

        public Builder(WorkloadNetworkPortMirroringArgs defaults) {
            $ = new WorkloadNetworkPortMirroringArgs(Objects.requireNonNull(defaults));
        }

        public Builder destination(@Nullable Output<String> destination) {
            $.destination = destination;
            return this;
        }

        public Builder destination(String destination) {
            return destination(Output.of(destination));
        }

        public Builder direction(@Nullable Output<Either<String,PortMirroringDirectionEnum>> direction) {
            $.direction = direction;
            return this;
        }

        public Builder direction(Either<String,PortMirroringDirectionEnum> direction) {
            return direction(Output.of(direction));
        }

        public Builder direction(String direction) {
            return direction(Either.ofLeft(direction));
        }

        public Builder direction(PortMirroringDirectionEnum direction) {
            return direction(Either.ofRight(direction));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder portMirroringId(@Nullable Output<String> portMirroringId) {
            $.portMirroringId = portMirroringId;
            return this;
        }

        public Builder portMirroringId(String portMirroringId) {
            return portMirroringId(Output.of(portMirroringId));
        }

        public Builder privateCloudName(Output<String> privateCloudName) {
            $.privateCloudName = privateCloudName;
            return this;
        }

        public Builder privateCloudName(String privateCloudName) {
            return privateCloudName(Output.of(privateCloudName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder revision(@Nullable Output<Double> revision) {
            $.revision = revision;
            return this;
        }

        public Builder revision(Double revision) {
            return revision(Output.of(revision));
        }

        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        public Builder source(String source) {
            return source(Output.of(source));
        }

        public WorkloadNetworkPortMirroringArgs build() {
            $.privateCloudName = Objects.requireNonNull($.privateCloudName, "expected parameter 'privateCloudName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
