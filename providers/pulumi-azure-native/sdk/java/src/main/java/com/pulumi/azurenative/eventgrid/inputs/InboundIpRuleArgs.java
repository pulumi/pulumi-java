// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.inputs;

import com.pulumi.azurenative.eventgrid.enums.IpActionType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InboundIpRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final InboundIpRuleArgs Empty = new InboundIpRuleArgs();

    /**
     * Action to perform based on the match or no match of the IpMask.
     * 
     */
    @Import(name="action")
    private @Nullable Output<Either<String,IpActionType>> action;

    /**
     * @return Action to perform based on the match or no match of the IpMask.
     * 
     */
    public Optional<Output<Either<String,IpActionType>>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * IP Address in CIDR notation e.g., 10.0.0.0/8.
     * 
     */
    @Import(name="ipMask")
    private @Nullable Output<String> ipMask;

    /**
     * @return IP Address in CIDR notation e.g., 10.0.0.0/8.
     * 
     */
    public Optional<Output<String>> ipMask() {
        return Optional.ofNullable(this.ipMask);
    }

    private InboundIpRuleArgs() {}

    private InboundIpRuleArgs(InboundIpRuleArgs $) {
        this.action = $.action;
        this.ipMask = $.ipMask;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InboundIpRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InboundIpRuleArgs $;

        public Builder() {
            $ = new InboundIpRuleArgs();
        }

        public Builder(InboundIpRuleArgs defaults) {
            $ = new InboundIpRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Action to perform based on the match or no match of the IpMask.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<Either<String,IpActionType>> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Action to perform based on the match or no match of the IpMask.
         * 
         * @return builder
         * 
         */
        public Builder action(Either<String,IpActionType> action) {
            return action(Output.of(action));
        }

        /**
         * @param action Action to perform based on the match or no match of the IpMask.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Either.ofLeft(action));
        }

        /**
         * @param action Action to perform based on the match or no match of the IpMask.
         * 
         * @return builder
         * 
         */
        public Builder action(IpActionType action) {
            return action(Either.ofRight(action));
        }

        /**
         * @param ipMask IP Address in CIDR notation e.g., 10.0.0.0/8.
         * 
         * @return builder
         * 
         */
        public Builder ipMask(@Nullable Output<String> ipMask) {
            $.ipMask = ipMask;
            return this;
        }

        /**
         * @param ipMask IP Address in CIDR notation e.g., 10.0.0.0/8.
         * 
         * @return builder
         * 
         */
        public Builder ipMask(String ipMask) {
            return ipMask(Output.of(ipMask));
        }

        public InboundIpRuleArgs build() {
            return $;
        }
    }

}
