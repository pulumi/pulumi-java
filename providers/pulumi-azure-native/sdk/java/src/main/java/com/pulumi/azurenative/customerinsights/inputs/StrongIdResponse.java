// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Property/Properties which represent a unique ID.
 * 
 */
public final class StrongIdResponse extends com.pulumi.resources.InvokeArgs {

    public static final StrongIdResponse Empty = new StrongIdResponse();

    /**
     * Localized descriptions.
     * 
     */
    @Import(name="description")
    private @Nullable Map<String,String> description;

    public Optional<Map<String,String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Localized display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Map<String,String> displayName;

    public Optional<Map<String,String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The properties which make up the unique ID.
     * 
     */
    @Import(name="keyPropertyNames", required=true)
    private List<String> keyPropertyNames;

    public List<String> keyPropertyNames() {
        return this.keyPropertyNames;
    }

    /**
     * The Name identifying the strong ID.
     * 
     */
    @Import(name="strongIdName", required=true)
    private String strongIdName;

    public String strongIdName() {
        return this.strongIdName;
    }

    private StrongIdResponse() {}

    private StrongIdResponse(StrongIdResponse $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.keyPropertyNames = $.keyPropertyNames;
        this.strongIdName = $.strongIdName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StrongIdResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StrongIdResponse $;

        public Builder() {
            $ = new StrongIdResponse();
        }

        public Builder(StrongIdResponse defaults) {
            $ = new StrongIdResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Map<String,String> description) {
            $.description = description;
            return this;
        }

        public Builder displayName(@Nullable Map<String,String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder keyPropertyNames(List<String> keyPropertyNames) {
            $.keyPropertyNames = keyPropertyNames;
            return this;
        }

        public Builder keyPropertyNames(String... keyPropertyNames) {
            return keyPropertyNames(List.of(keyPropertyNames));
        }

        public Builder strongIdName(String strongIdName) {
            $.strongIdName = strongIdName;
            return this;
        }

        public StrongIdResponse build() {
            $.keyPropertyNames = Objects.requireNonNull($.keyPropertyNames, "expected parameter 'keyPropertyNames' to be non-null");
            $.strongIdName = Objects.requireNonNull($.strongIdName, "expected parameter 'strongIdName' to be non-null");
            return $;
        }
    }

}
