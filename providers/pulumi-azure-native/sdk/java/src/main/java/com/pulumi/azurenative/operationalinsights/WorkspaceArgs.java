// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights;

import com.pulumi.azurenative.operationalinsights.enums.PublicNetworkAccessType;
import com.pulumi.azurenative.operationalinsights.enums.WorkspaceEntityStatus;
import com.pulumi.azurenative.operationalinsights.inputs.WorkspaceCappingArgs;
import com.pulumi.azurenative.operationalinsights.inputs.WorkspaceFeaturesArgs;
import com.pulumi.azurenative.operationalinsights.inputs.WorkspaceSkuArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceArgs Empty = new WorkspaceArgs();

    /**
     * The ETag of the workspace.
     * 
     */
    @Import(name="eTag")
    private @Nullable Output<String> eTag;

    public Optional<Output<String>> eTag() {
        return Optional.ofNullable(this.eTag);
    }

    /**
     * Workspace features.
     * 
     */
    @Import(name="features")
    private @Nullable Output<WorkspaceFeaturesArgs> features;

    public Optional<Output<WorkspaceFeaturesArgs>> features() {
        return Optional.ofNullable(this.features);
    }

    /**
     * Indicates whether customer managed storage is mandatory for query management.
     * 
     */
    @Import(name="forceCmkForQuery")
    private @Nullable Output<Boolean> forceCmkForQuery;

    public Optional<Output<Boolean>> forceCmkForQuery() {
        return Optional.ofNullable(this.forceCmkForQuery);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The provisioning state of the workspace.
     * 
     */
    @Import(name="provisioningState")
    private @Nullable Output<Either<String,WorkspaceEntityStatus>> provisioningState;

    public Optional<Output<Either<String,WorkspaceEntityStatus>>> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    /**
     * The network access type for accessing Log Analytics ingestion.
     * 
     */
    @Import(name="publicNetworkAccessForIngestion")
    private @Nullable Output<Either<String,PublicNetworkAccessType>> publicNetworkAccessForIngestion;

    public Optional<Output<Either<String,PublicNetworkAccessType>>> publicNetworkAccessForIngestion() {
        return Optional.ofNullable(this.publicNetworkAccessForIngestion);
    }

    /**
     * The network access type for accessing Log Analytics query.
     * 
     */
    @Import(name="publicNetworkAccessForQuery")
    private @Nullable Output<Either<String,PublicNetworkAccessType>> publicNetworkAccessForQuery;

    public Optional<Output<Either<String,PublicNetworkAccessType>>> publicNetworkAccessForQuery() {
        return Optional.ofNullable(this.publicNetworkAccessForQuery);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.
     * 
     */
    @Import(name="retentionInDays")
    private @Nullable Output<Integer> retentionInDays;

    public Optional<Output<Integer>> retentionInDays() {
        return Optional.ofNullable(this.retentionInDays);
    }

    /**
     * The SKU of the workspace.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<WorkspaceSkuArgs> sku;

    public Optional<Output<WorkspaceSkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The daily volume cap for ingestion.
     * 
     */
    @Import(name="workspaceCapping")
    private @Nullable Output<WorkspaceCappingArgs> workspaceCapping;

    public Optional<Output<WorkspaceCappingArgs>> workspaceCapping() {
        return Optional.ofNullable(this.workspaceCapping);
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName")
    private @Nullable Output<String> workspaceName;

    public Optional<Output<String>> workspaceName() {
        return Optional.ofNullable(this.workspaceName);
    }

    private WorkspaceArgs() {}

    private WorkspaceArgs(WorkspaceArgs $) {
        this.eTag = $.eTag;
        this.features = $.features;
        this.forceCmkForQuery = $.forceCmkForQuery;
        this.location = $.location;
        this.provisioningState = $.provisioningState;
        this.publicNetworkAccessForIngestion = $.publicNetworkAccessForIngestion;
        this.publicNetworkAccessForQuery = $.publicNetworkAccessForQuery;
        this.resourceGroupName = $.resourceGroupName;
        this.retentionInDays = $.retentionInDays;
        this.sku = $.sku;
        this.tags = $.tags;
        this.workspaceCapping = $.workspaceCapping;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceArgs $;

        public Builder() {
            $ = new WorkspaceArgs();
        }

        public Builder(WorkspaceArgs defaults) {
            $ = new WorkspaceArgs(Objects.requireNonNull(defaults));
        }

        public Builder eTag(@Nullable Output<String> eTag) {
            $.eTag = eTag;
            return this;
        }

        public Builder eTag(String eTag) {
            return eTag(Output.of(eTag));
        }

        public Builder features(@Nullable Output<WorkspaceFeaturesArgs> features) {
            $.features = features;
            return this;
        }

        public Builder features(WorkspaceFeaturesArgs features) {
            return features(Output.of(features));
        }

        public Builder forceCmkForQuery(@Nullable Output<Boolean> forceCmkForQuery) {
            $.forceCmkForQuery = forceCmkForQuery;
            return this;
        }

        public Builder forceCmkForQuery(Boolean forceCmkForQuery) {
            return forceCmkForQuery(Output.of(forceCmkForQuery));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder provisioningState(@Nullable Output<Either<String,WorkspaceEntityStatus>> provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder provisioningState(Either<String,WorkspaceEntityStatus> provisioningState) {
            return provisioningState(Output.of(provisioningState));
        }

        public Builder publicNetworkAccessForIngestion(@Nullable Output<Either<String,PublicNetworkAccessType>> publicNetworkAccessForIngestion) {
            $.publicNetworkAccessForIngestion = publicNetworkAccessForIngestion;
            return this;
        }

        public Builder publicNetworkAccessForIngestion(Either<String,PublicNetworkAccessType> publicNetworkAccessForIngestion) {
            return publicNetworkAccessForIngestion(Output.of(publicNetworkAccessForIngestion));
        }

        public Builder publicNetworkAccessForQuery(@Nullable Output<Either<String,PublicNetworkAccessType>> publicNetworkAccessForQuery) {
            $.publicNetworkAccessForQuery = publicNetworkAccessForQuery;
            return this;
        }

        public Builder publicNetworkAccessForQuery(Either<String,PublicNetworkAccessType> publicNetworkAccessForQuery) {
            return publicNetworkAccessForQuery(Output.of(publicNetworkAccessForQuery));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder retentionInDays(@Nullable Output<Integer> retentionInDays) {
            $.retentionInDays = retentionInDays;
            return this;
        }

        public Builder retentionInDays(Integer retentionInDays) {
            return retentionInDays(Output.of(retentionInDays));
        }

        public Builder sku(@Nullable Output<WorkspaceSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(WorkspaceSkuArgs sku) {
            return sku(Output.of(sku));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder workspaceCapping(@Nullable Output<WorkspaceCappingArgs> workspaceCapping) {
            $.workspaceCapping = workspaceCapping;
            return this;
        }

        public Builder workspaceCapping(WorkspaceCappingArgs workspaceCapping) {
            return workspaceCapping(Output.of(workspaceCapping));
        }

        public Builder workspaceName(@Nullable Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public WorkspaceArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
