// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.webpubsub.inputs;

import com.pulumi.azurenative.webpubsub.inputs.SystemDataResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes a Shared Private Link Resource
 * 
 */
public final class SharedPrivateLinkResourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final SharedPrivateLinkResourceResponse Empty = new SharedPrivateLinkResourceResponse();

    /**
     * The group id from the provider of resource the shared private link resource is for
     * 
     */
    @Import(name="groupId", required=true)
    private String groupId;

    /**
     * @return The group id from the provider of resource the shared private link resource is for
     * 
     */
    public String groupId() {
        return this.groupId;
    }

    /**
     * Fully qualified resource Id for the resource.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return Fully qualified resource Id for the resource.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The resource id of the resource the shared private link resource is for
     * 
     */
    @Import(name="privateLinkResourceId", required=true)
    private String privateLinkResourceId;

    /**
     * @return The resource id of the resource the shared private link resource is for
     * 
     */
    public String privateLinkResourceId() {
        return this.privateLinkResourceId;
    }

    /**
     * Provisioning state of the shared private link resource
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return Provisioning state of the shared private link resource
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * The request message for requesting approval of the shared private link resource
     * 
     */
    @Import(name="requestMessage")
    private @Nullable String requestMessage;

    /**
     * @return The request message for requesting approval of the shared private link resource
     * 
     */
    public Optional<String> requestMessage() {
        return Optional.ofNullable(this.requestMessage);
    }

    /**
     * Status of the shared private link resource
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Status of the shared private link resource
     * 
     */
    public String status() {
        return this.status;
    }

    /**
     * Metadata pertaining to creation and last modification of the resource.
     * 
     */
    @Import(name="systemData", required=true)
    private SystemDataResponse systemData;

    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }

    /**
     * The type of the resource - e.g. &#34;Microsoft.SignalRService/SignalR&#34;
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of the resource - e.g. &#34;Microsoft.SignalRService/SignalR&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    private SharedPrivateLinkResourceResponse() {}

    private SharedPrivateLinkResourceResponse(SharedPrivateLinkResourceResponse $) {
        this.groupId = $.groupId;
        this.id = $.id;
        this.name = $.name;
        this.privateLinkResourceId = $.privateLinkResourceId;
        this.provisioningState = $.provisioningState;
        this.requestMessage = $.requestMessage;
        this.status = $.status;
        this.systemData = $.systemData;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SharedPrivateLinkResourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SharedPrivateLinkResourceResponse $;

        public Builder() {
            $ = new SharedPrivateLinkResourceResponse();
        }

        public Builder(SharedPrivateLinkResourceResponse defaults) {
            $ = new SharedPrivateLinkResourceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupId The group id from the provider of resource the shared private link resource is for
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param id Fully qualified resource Id for the resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param name The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param privateLinkResourceId The resource id of the resource the shared private link resource is for
         * 
         * @return builder
         * 
         */
        public Builder privateLinkResourceId(String privateLinkResourceId) {
            $.privateLinkResourceId = privateLinkResourceId;
            return this;
        }

        /**
         * @param provisioningState Provisioning state of the shared private link resource
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param requestMessage The request message for requesting approval of the shared private link resource
         * 
         * @return builder
         * 
         */
        public Builder requestMessage(@Nullable String requestMessage) {
            $.requestMessage = requestMessage;
            return this;
        }

        /**
         * @param status Status of the shared private link resource
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        /**
         * @param systemData Metadata pertaining to creation and last modification of the resource.
         * 
         * @return builder
         * 
         */
        public Builder systemData(SystemDataResponse systemData) {
            $.systemData = systemData;
            return this;
        }

        /**
         * @param type The type of the resource - e.g. &#34;Microsoft.SignalRService/SignalR&#34;
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public SharedPrivateLinkResourceResponse build() {
            $.groupId = Objects.requireNonNull($.groupId, "expected parameter 'groupId' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.privateLinkResourceId = Objects.requireNonNull($.privateLinkResourceId, "expected parameter 'privateLinkResourceId' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.systemData = Objects.requireNonNull($.systemData, "expected parameter 'systemData' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
