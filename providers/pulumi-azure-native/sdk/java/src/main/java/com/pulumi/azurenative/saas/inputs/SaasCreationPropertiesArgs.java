// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.saas.inputs;

import com.pulumi.azurenative.saas.enums.PaymentChannelType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * properties for creation saas
 * 
 */
public final class SaasCreationPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final SaasCreationPropertiesArgs Empty = new SaasCreationPropertiesArgs();

    /**
     * Whether the SaaS subscription will auto renew upon term end.
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * The offer id.
     * 
     */
    @Import(name="offerId")
    private @Nullable Output<String> offerId;

    public Optional<Output<String>> offerId() {
        return Optional.ofNullable(this.offerId);
    }

    /**
     * The metadata about the SaaS subscription such as the AzureSubscriptionId and ResourceUri.
     * 
     */
    @Import(name="paymentChannelMetadata")
    private @Nullable Output<Map<String,String>> paymentChannelMetadata;

    public Optional<Output<Map<String,String>>> paymentChannelMetadata() {
        return Optional.ofNullable(this.paymentChannelMetadata);
    }

    /**
     * The Payment channel for the SaasSubscription.
     * 
     */
    @Import(name="paymentChannelType")
    private @Nullable Output<Either<String,PaymentChannelType>> paymentChannelType;

    public Optional<Output<Either<String,PaymentChannelType>>> paymentChannelType() {
        return Optional.ofNullable(this.paymentChannelType);
    }

    /**
     * The publisher id.
     * 
     */
    @Import(name="publisherId")
    private @Nullable Output<String> publisherId;

    public Optional<Output<String>> publisherId() {
        return Optional.ofNullable(this.publisherId);
    }

    /**
     * The environment in the publisher side for this resource.
     * 
     */
    @Import(name="publisherTestEnvironment")
    private @Nullable Output<String> publisherTestEnvironment;

    public Optional<Output<String>> publisherTestEnvironment() {
        return Optional.ofNullable(this.publisherTestEnvironment);
    }

    /**
     * The seat count.
     * 
     */
    @Import(name="quantity")
    private @Nullable Output<Double> quantity;

    public Optional<Output<Double>> quantity() {
        return Optional.ofNullable(this.quantity);
    }

    /**
     * The SaaS resource name.
     * 
     */
    @Import(name="saasResourceName")
    private @Nullable Output<String> saasResourceName;

    public Optional<Output<String>> saasResourceName() {
        return Optional.ofNullable(this.saasResourceName);
    }

    /**
     * The saas session id used for dev service migration request.
     * 
     */
    @Import(name="saasSessionId")
    private @Nullable Output<String> saasSessionId;

    public Optional<Output<String>> saasSessionId() {
        return Optional.ofNullable(this.saasSessionId);
    }

    /**
     * The saas subscription id used for tenant to subscription level migration request.
     * 
     */
    @Import(name="saasSubscriptionId")
    private @Nullable Output<String> saasSubscriptionId;

    public Optional<Output<String>> saasSubscriptionId() {
        return Optional.ofNullable(this.saasSubscriptionId);
    }

    /**
     * The plan id.
     * 
     */
    @Import(name="skuId")
    private @Nullable Output<String> skuId;

    public Optional<Output<String>> skuId() {
        return Optional.ofNullable(this.skuId);
    }

    /**
     * The current Term id.
     * 
     */
    @Import(name="termId")
    private @Nullable Output<String> termId;

    public Optional<Output<String>> termId() {
        return Optional.ofNullable(this.termId);
    }

    private SaasCreationPropertiesArgs() {}

    private SaasCreationPropertiesArgs(SaasCreationPropertiesArgs $) {
        this.autoRenew = $.autoRenew;
        this.offerId = $.offerId;
        this.paymentChannelMetadata = $.paymentChannelMetadata;
        this.paymentChannelType = $.paymentChannelType;
        this.publisherId = $.publisherId;
        this.publisherTestEnvironment = $.publisherTestEnvironment;
        this.quantity = $.quantity;
        this.saasResourceName = $.saasResourceName;
        this.saasSessionId = $.saasSessionId;
        this.saasSubscriptionId = $.saasSubscriptionId;
        this.skuId = $.skuId;
        this.termId = $.termId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SaasCreationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SaasCreationPropertiesArgs $;

        public Builder() {
            $ = new SaasCreationPropertiesArgs();
        }

        public Builder(SaasCreationPropertiesArgs defaults) {
            $ = new SaasCreationPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        public Builder offerId(@Nullable Output<String> offerId) {
            $.offerId = offerId;
            return this;
        }

        public Builder offerId(String offerId) {
            return offerId(Output.of(offerId));
        }

        public Builder paymentChannelMetadata(@Nullable Output<Map<String,String>> paymentChannelMetadata) {
            $.paymentChannelMetadata = paymentChannelMetadata;
            return this;
        }

        public Builder paymentChannelMetadata(Map<String,String> paymentChannelMetadata) {
            return paymentChannelMetadata(Output.of(paymentChannelMetadata));
        }

        public Builder paymentChannelType(@Nullable Output<Either<String,PaymentChannelType>> paymentChannelType) {
            $.paymentChannelType = paymentChannelType;
            return this;
        }

        public Builder paymentChannelType(Either<String,PaymentChannelType> paymentChannelType) {
            return paymentChannelType(Output.of(paymentChannelType));
        }

        public Builder publisherId(@Nullable Output<String> publisherId) {
            $.publisherId = publisherId;
            return this;
        }

        public Builder publisherId(String publisherId) {
            return publisherId(Output.of(publisherId));
        }

        public Builder publisherTestEnvironment(@Nullable Output<String> publisherTestEnvironment) {
            $.publisherTestEnvironment = publisherTestEnvironment;
            return this;
        }

        public Builder publisherTestEnvironment(String publisherTestEnvironment) {
            return publisherTestEnvironment(Output.of(publisherTestEnvironment));
        }

        public Builder quantity(@Nullable Output<Double> quantity) {
            $.quantity = quantity;
            return this;
        }

        public Builder quantity(Double quantity) {
            return quantity(Output.of(quantity));
        }

        public Builder saasResourceName(@Nullable Output<String> saasResourceName) {
            $.saasResourceName = saasResourceName;
            return this;
        }

        public Builder saasResourceName(String saasResourceName) {
            return saasResourceName(Output.of(saasResourceName));
        }

        public Builder saasSessionId(@Nullable Output<String> saasSessionId) {
            $.saasSessionId = saasSessionId;
            return this;
        }

        public Builder saasSessionId(String saasSessionId) {
            return saasSessionId(Output.of(saasSessionId));
        }

        public Builder saasSubscriptionId(@Nullable Output<String> saasSubscriptionId) {
            $.saasSubscriptionId = saasSubscriptionId;
            return this;
        }

        public Builder saasSubscriptionId(String saasSubscriptionId) {
            return saasSubscriptionId(Output.of(saasSubscriptionId));
        }

        public Builder skuId(@Nullable Output<String> skuId) {
            $.skuId = skuId;
            return this;
        }

        public Builder skuId(String skuId) {
            return skuId(Output.of(skuId));
        }

        public Builder termId(@Nullable Output<String> termId) {
            $.termId = termId;
            return this;
        }

        public Builder termId(String termId) {
            return termId(Output.of(termId));
        }

        public SaasCreationPropertiesArgs build() {
            return $;
        }
    }

}
