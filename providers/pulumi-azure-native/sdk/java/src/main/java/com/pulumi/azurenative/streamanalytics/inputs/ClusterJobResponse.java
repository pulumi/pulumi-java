// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * A streaming job.
 * 
 */
public final class ClusterJobResponse extends com.pulumi.resources.InvokeArgs {

    public static final ClusterJobResponse Empty = new ClusterJobResponse();

    /**
     * Resource ID of the streaming job.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * The current execution state of the streaming job.
     * 
     */
    @Import(name="jobState", required=true)
    private String jobState;

    public String jobState() {
        return this.jobState;
    }

    /**
     * The number of streaming units that are used by the streaming job.
     * 
     */
    @Import(name="streamingUnits", required=true)
    private Integer streamingUnits;

    public Integer streamingUnits() {
        return this.streamingUnits;
    }

    private ClusterJobResponse() {}

    private ClusterJobResponse(ClusterJobResponse $) {
        this.id = $.id;
        this.jobState = $.jobState;
        this.streamingUnits = $.streamingUnits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterJobResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterJobResponse $;

        public Builder() {
            $ = new ClusterJobResponse();
        }

        public Builder(ClusterJobResponse defaults) {
            $ = new ClusterJobResponse(Objects.requireNonNull(defaults));
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder jobState(String jobState) {
            $.jobState = jobState;
            return this;
        }

        public Builder streamingUnits(Integer streamingUnits) {
            $.streamingUnits = streamingUnits;
            return this;
        }

        public ClusterJobResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.jobState = Objects.requireNonNull($.jobState, "expected parameter 'jobState' to be non-null");
            $.streamingUnits = Objects.requireNonNull($.streamingUnits, "expected parameter 'streamingUnits' to be non-null");
            return $;
        }
    }

}
