// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.peering.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRegisteredAsnResult {
    /**
     * @return The customer&#39;s ASN from which traffic originates.
     * 
     */
    private final @Nullable Integer asn;
    /**
     * @return The ID of the resource.
     * 
     */
    private final String id;
    /**
     * @return The name of the resource.
     * 
     */
    private final String name;
    /**
     * @return The peering service prefix key that is to be shared with the customer.
     * 
     */
    private final String peeringServicePrefixKey;
    /**
     * @return The provisioning state of the resource.
     * 
     */
    private final String provisioningState;
    /**
     * @return The type of the resource.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetRegisteredAsnResult(
        @CustomType.Parameter("asn") @Nullable Integer asn,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("peeringServicePrefixKey") String peeringServicePrefixKey,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("type") String type) {
        this.asn = asn;
        this.id = id;
        this.name = name;
        this.peeringServicePrefixKey = peeringServicePrefixKey;
        this.provisioningState = provisioningState;
        this.type = type;
    }

    /**
     * @return The customer&#39;s ASN from which traffic originates.
     * 
     */
    public Optional<Integer> asn() {
        return Optional.ofNullable(this.asn);
    }
    /**
     * @return The ID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The peering service prefix key that is to be shared with the customer.
     * 
     */
    public String peeringServicePrefixKey() {
        return this.peeringServicePrefixKey;
    }
    /**
     * @return The provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegisteredAsnResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer asn;
        private String id;
        private String name;
        private String peeringServicePrefixKey;
        private String provisioningState;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRegisteredAsnResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asn = defaults.asn;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.peeringServicePrefixKey = defaults.peeringServicePrefixKey;
    	      this.provisioningState = defaults.provisioningState;
    	      this.type = defaults.type;
        }

        public Builder asn(@Nullable Integer asn) {
            this.asn = asn;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder peeringServicePrefixKey(String peeringServicePrefixKey) {
            this.peeringServicePrefixKey = Objects.requireNonNull(peeringServicePrefixKey);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetRegisteredAsnResult build() {
            return new GetRegisteredAsnResult(asn, id, name, peeringServicePrefixKey, provisioningState, type);
        }
    }
}
