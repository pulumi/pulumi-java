// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.inputs.ContentLinkResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The assembly properties definition.
 * 
 */
public final class AssemblyPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final AssemblyPropertiesResponse Empty = new AssemblyPropertiesResponse();

    /**
     * The assembly culture.
     * 
     */
    @Import(name="assemblyCulture")
    private @Nullable String assemblyCulture;

    /**
     * @return The assembly culture.
     * 
     */
    public Optional<String> assemblyCulture() {
        return Optional.ofNullable(this.assemblyCulture);
    }

    /**
     * The assembly name.
     * 
     */
    @Import(name="assemblyName", required=true)
    private String assemblyName;

    /**
     * @return The assembly name.
     * 
     */
    public String assemblyName() {
        return this.assemblyName;
    }

    /**
     * The assembly public key token.
     * 
     */
    @Import(name="assemblyPublicKeyToken")
    private @Nullable String assemblyPublicKeyToken;

    /**
     * @return The assembly public key token.
     * 
     */
    public Optional<String> assemblyPublicKeyToken() {
        return Optional.ofNullable(this.assemblyPublicKeyToken);
    }

    /**
     * The assembly version.
     * 
     */
    @Import(name="assemblyVersion")
    private @Nullable String assemblyVersion;

    /**
     * @return The assembly version.
     * 
     */
    public Optional<String> assemblyVersion() {
        return Optional.ofNullable(this.assemblyVersion);
    }

    /**
     * The artifact changed time.
     * 
     */
    @Import(name="changedTime")
    private @Nullable String changedTime;

    /**
     * @return The artifact changed time.
     * 
     */
    public Optional<String> changedTime() {
        return Optional.ofNullable(this.changedTime);
    }

    @Import(name="content")
    private @Nullable Object content;

    public Optional<Object> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * The content link.
     * 
     */
    @Import(name="contentLink")
    private @Nullable ContentLinkResponse contentLink;

    /**
     * @return The content link.
     * 
     */
    public Optional<ContentLinkResponse> contentLink() {
        return Optional.ofNullable(this.contentLink);
    }

    /**
     * The content type.
     * 
     */
    @Import(name="contentType")
    private @Nullable String contentType;

    /**
     * @return The content type.
     * 
     */
    public Optional<String> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    /**
     * The artifact creation time.
     * 
     */
    @Import(name="createdTime")
    private @Nullable String createdTime;

    /**
     * @return The artifact creation time.
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    @Import(name="metadata")
    private @Nullable Object metadata;

    public Optional<Object> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    private AssemblyPropertiesResponse() {}

    private AssemblyPropertiesResponse(AssemblyPropertiesResponse $) {
        this.assemblyCulture = $.assemblyCulture;
        this.assemblyName = $.assemblyName;
        this.assemblyPublicKeyToken = $.assemblyPublicKeyToken;
        this.assemblyVersion = $.assemblyVersion;
        this.changedTime = $.changedTime;
        this.content = $.content;
        this.contentLink = $.contentLink;
        this.contentType = $.contentType;
        this.createdTime = $.createdTime;
        this.metadata = $.metadata;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssemblyPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssemblyPropertiesResponse $;

        public Builder() {
            $ = new AssemblyPropertiesResponse();
        }

        public Builder(AssemblyPropertiesResponse defaults) {
            $ = new AssemblyPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param assemblyCulture The assembly culture.
         * 
         * @return builder
         * 
         */
        public Builder assemblyCulture(@Nullable String assemblyCulture) {
            $.assemblyCulture = assemblyCulture;
            return this;
        }

        /**
         * @param assemblyName The assembly name.
         * 
         * @return builder
         * 
         */
        public Builder assemblyName(String assemblyName) {
            $.assemblyName = assemblyName;
            return this;
        }

        /**
         * @param assemblyPublicKeyToken The assembly public key token.
         * 
         * @return builder
         * 
         */
        public Builder assemblyPublicKeyToken(@Nullable String assemblyPublicKeyToken) {
            $.assemblyPublicKeyToken = assemblyPublicKeyToken;
            return this;
        }

        /**
         * @param assemblyVersion The assembly version.
         * 
         * @return builder
         * 
         */
        public Builder assemblyVersion(@Nullable String assemblyVersion) {
            $.assemblyVersion = assemblyVersion;
            return this;
        }

        /**
         * @param changedTime The artifact changed time.
         * 
         * @return builder
         * 
         */
        public Builder changedTime(@Nullable String changedTime) {
            $.changedTime = changedTime;
            return this;
        }

        public Builder content(@Nullable Object content) {
            $.content = content;
            return this;
        }

        /**
         * @param contentLink The content link.
         * 
         * @return builder
         * 
         */
        public Builder contentLink(@Nullable ContentLinkResponse contentLink) {
            $.contentLink = contentLink;
            return this;
        }

        /**
         * @param contentType The content type.
         * 
         * @return builder
         * 
         */
        public Builder contentType(@Nullable String contentType) {
            $.contentType = contentType;
            return this;
        }

        /**
         * @param createdTime The artifact creation time.
         * 
         * @return builder
         * 
         */
        public Builder createdTime(@Nullable String createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        public Builder metadata(@Nullable Object metadata) {
            $.metadata = metadata;
            return this;
        }

        public AssemblyPropertiesResponse build() {
            $.assemblyName = Objects.requireNonNull($.assemblyName, "expected parameter 'assemblyName' to be non-null");
            return $;
        }
    }

}
