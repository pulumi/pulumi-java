// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.enums.Goal;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Optimization objective.
 * 
 */
public final class ObjectiveArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObjectiveArgs Empty = new ObjectiveArgs();

    /**
     * [Required] Defines supported metric goals for hyperparameter tuning
     * 
     */
    @Import(name="goal", required=true)
    private Output<Either<String,Goal>> goal;

    /**
     * @return [Required] Defines supported metric goals for hyperparameter tuning
     * 
     */
    public Output<Either<String,Goal>> goal() {
        return this.goal;
    }

    /**
     * [Required] Name of the metric to optimize.
     * 
     */
    @Import(name="primaryMetric", required=true)
    private Output<String> primaryMetric;

    /**
     * @return [Required] Name of the metric to optimize.
     * 
     */
    public Output<String> primaryMetric() {
        return this.primaryMetric;
    }

    private ObjectiveArgs() {}

    private ObjectiveArgs(ObjectiveArgs $) {
        this.goal = $.goal;
        this.primaryMetric = $.primaryMetric;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectiveArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectiveArgs $;

        public Builder() {
            $ = new ObjectiveArgs();
        }

        public Builder(ObjectiveArgs defaults) {
            $ = new ObjectiveArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param goal [Required] Defines supported metric goals for hyperparameter tuning
         * 
         * @return builder
         * 
         */
        public Builder goal(Output<Either<String,Goal>> goal) {
            $.goal = goal;
            return this;
        }

        /**
         * @param goal [Required] Defines supported metric goals for hyperparameter tuning
         * 
         * @return builder
         * 
         */
        public Builder goal(Either<String,Goal> goal) {
            return goal(Output.of(goal));
        }

        /**
         * @param goal [Required] Defines supported metric goals for hyperparameter tuning
         * 
         * @return builder
         * 
         */
        public Builder goal(String goal) {
            return goal(Either.ofLeft(goal));
        }

        /**
         * @param goal [Required] Defines supported metric goals for hyperparameter tuning
         * 
         * @return builder
         * 
         */
        public Builder goal(Goal goal) {
            return goal(Either.ofRight(goal));
        }

        /**
         * @param primaryMetric [Required] Name of the metric to optimize.
         * 
         * @return builder
         * 
         */
        public Builder primaryMetric(Output<String> primaryMetric) {
            $.primaryMetric = primaryMetric;
            return this;
        }

        /**
         * @param primaryMetric [Required] Name of the metric to optimize.
         * 
         * @return builder
         * 
         */
        public Builder primaryMetric(String primaryMetric) {
            return primaryMetric(Output.of(primaryMetric));
        }

        public ObjectiveArgs build() {
            $.goal = Objects.requireNonNull($.goal, "expected parameter 'goal' to be non-null");
            $.primaryMetric = Objects.requireNonNull($.primaryMetric, "expected parameter 'primaryMetric' to be non-null");
            return $;
        }
    }

}
