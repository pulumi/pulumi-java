// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicebus;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.servicebus.QueueArgs;
import com.pulumi.azurenative.servicebus.outputs.MessageCountDetailsResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Description of queue Resource.
 * API Version: 2017-04-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:servicebus:Queue sdk-Queues-5647 /subscriptions/5f750a97-50d9-4e36-8081-c9ee4c0210d4/resourceGroups/ArunMonocle/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-3174/queues/sdk-Queues-5647 
 * ```
 * 
 */
@ResourceType(type="azure-native:servicebus:Queue")
public class Queue extends com.pulumi.resources.CustomResource {
    /**
     * Last time a message was sent, or the last time there was a receive request to this queue.
     * 
     */
    @Export(name="accessedAt", type=String.class, parameters={})
    private Output<String> accessedAt;

    /**
     * @return Last time a message was sent, or the last time there was a receive request to this queue.
     * 
     */
    public Output<String> accessedAt() {
        return this.accessedAt;
    }
    /**
     * ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
     * 
     */
    @Export(name="autoDeleteOnIdle", type=String.class, parameters={})
    private Output</* @Nullable */ String> autoDeleteOnIdle;

    /**
     * @return ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
     * 
     */
    public Output<Optional<String>> autoDeleteOnIdle() {
        return Codegen.optional(this.autoDeleteOnIdle);
    }
    /**
     * Message Count Details.
     * 
     */
    @Export(name="countDetails", type=MessageCountDetailsResponse.class, parameters={})
    private Output<MessageCountDetailsResponse> countDetails;

    /**
     * @return Message Count Details.
     * 
     */
    public Output<MessageCountDetailsResponse> countDetails() {
        return this.countDetails;
    }
    /**
     * The exact time the message was created.
     * 
     */
    @Export(name="createdAt", type=String.class, parameters={})
    private Output<String> createdAt;

    /**
     * @return The exact time the message was created.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * A value that indicates whether this queue has dead letter support when a message expires.
     * 
     */
    @Export(name="deadLetteringOnMessageExpiration", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deadLetteringOnMessageExpiration;

    /**
     * @return A value that indicates whether this queue has dead letter support when a message expires.
     * 
     */
    public Output<Optional<Boolean>> deadLetteringOnMessageExpiration() {
        return Codegen.optional(this.deadLetteringOnMessageExpiration);
    }
    /**
     * ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
     * 
     */
    @Export(name="defaultMessageTimeToLive", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultMessageTimeToLive;

    /**
     * @return ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
     * 
     */
    public Output<Optional<String>> defaultMessageTimeToLive() {
        return Codegen.optional(this.defaultMessageTimeToLive);
    }
    /**
     * ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
     * 
     */
    @Export(name="duplicateDetectionHistoryTimeWindow", type=String.class, parameters={})
    private Output</* @Nullable */ String> duplicateDetectionHistoryTimeWindow;

    /**
     * @return ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
     * 
     */
    public Output<Optional<String>> duplicateDetectionHistoryTimeWindow() {
        return Codegen.optional(this.duplicateDetectionHistoryTimeWindow);
    }
    /**
     * Value that indicates whether server-side batched operations are enabled.
     * 
     */
    @Export(name="enableBatchedOperations", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableBatchedOperations;

    /**
     * @return Value that indicates whether server-side batched operations are enabled.
     * 
     */
    public Output<Optional<Boolean>> enableBatchedOperations() {
        return Codegen.optional(this.enableBatchedOperations);
    }
    /**
     * A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.
     * 
     */
    @Export(name="enableExpress", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableExpress;

    /**
     * @return A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.
     * 
     */
    public Output<Optional<Boolean>> enableExpress() {
        return Codegen.optional(this.enableExpress);
    }
    /**
     * A value that indicates whether the queue is to be partitioned across multiple message brokers.
     * 
     */
    @Export(name="enablePartitioning", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enablePartitioning;

    /**
     * @return A value that indicates whether the queue is to be partitioned across multiple message brokers.
     * 
     */
    public Output<Optional<Boolean>> enablePartitioning() {
        return Codegen.optional(this.enablePartitioning);
    }
    /**
     * Queue/Topic name to forward the Dead Letter message
     * 
     */
    @Export(name="forwardDeadLetteredMessagesTo", type=String.class, parameters={})
    private Output</* @Nullable */ String> forwardDeadLetteredMessagesTo;

    /**
     * @return Queue/Topic name to forward the Dead Letter message
     * 
     */
    public Output<Optional<String>> forwardDeadLetteredMessagesTo() {
        return Codegen.optional(this.forwardDeadLetteredMessagesTo);
    }
    /**
     * Queue/Topic name to forward the messages
     * 
     */
    @Export(name="forwardTo", type=String.class, parameters={})
    private Output</* @Nullable */ String> forwardTo;

    /**
     * @return Queue/Topic name to forward the messages
     * 
     */
    public Output<Optional<String>> forwardTo() {
        return Codegen.optional(this.forwardTo);
    }
    /**
     * ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
     * 
     */
    @Export(name="lockDuration", type=String.class, parameters={})
    private Output</* @Nullable */ String> lockDuration;

    /**
     * @return ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
     * 
     */
    public Output<Optional<String>> lockDuration() {
        return Codegen.optional(this.lockDuration);
    }
    /**
     * The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.
     * 
     */
    @Export(name="maxDeliveryCount", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxDeliveryCount;

    /**
     * @return The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.
     * 
     */
    public Output<Optional<Integer>> maxDeliveryCount() {
        return Codegen.optional(this.maxDeliveryCount);
    }
    /**
     * The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.
     * 
     */
    @Export(name="maxSizeInMegabytes", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxSizeInMegabytes;

    /**
     * @return The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.
     * 
     */
    public Output<Optional<Integer>> maxSizeInMegabytes() {
        return Codegen.optional(this.maxSizeInMegabytes);
    }
    /**
     * The number of messages in the queue.
     * 
     */
    @Export(name="messageCount", type=Double.class, parameters={})
    private Output<Double> messageCount;

    /**
     * @return The number of messages in the queue.
     * 
     */
    public Output<Double> messageCount() {
        return this.messageCount;
    }
    /**
     * Resource name
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A value indicating if this queue requires duplicate detection.
     * 
     */
    @Export(name="requiresDuplicateDetection", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requiresDuplicateDetection;

    /**
     * @return A value indicating if this queue requires duplicate detection.
     * 
     */
    public Output<Optional<Boolean>> requiresDuplicateDetection() {
        return Codegen.optional(this.requiresDuplicateDetection);
    }
    /**
     * A value that indicates whether the queue supports the concept of sessions.
     * 
     */
    @Export(name="requiresSession", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requiresSession;

    /**
     * @return A value that indicates whether the queue supports the concept of sessions.
     * 
     */
    public Output<Optional<Boolean>> requiresSession() {
        return Codegen.optional(this.requiresSession);
    }
    /**
     * The size of the queue, in bytes.
     * 
     */
    @Export(name="sizeInBytes", type=Double.class, parameters={})
    private Output<Double> sizeInBytes;

    /**
     * @return The size of the queue, in bytes.
     * 
     */
    public Output<Double> sizeInBytes() {
        return this.sizeInBytes;
    }
    /**
     * Enumerates the possible values for the status of a messaging entity.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    /**
     * @return Enumerates the possible values for the status of a messaging entity.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * Resource type
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The exact time the message was updated.
     * 
     */
    @Export(name="updatedAt", type=String.class, parameters={})
    private Output<String> updatedAt;

    /**
     * @return The exact time the message was updated.
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Queue(String name) {
        this(name, QueueArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Queue(String name, QueueArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Queue(String name, QueueArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicebus:Queue", name, args == null ? QueueArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Queue(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicebus:Queue", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:servicebus/v20140901:Queue").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20150801:Queue").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20170401:Queue").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20180101preview:Queue").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20210101preview:Queue").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20210601preview:Queue").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20211101:Queue").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Queue get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Queue(name, id, options);
    }
}
