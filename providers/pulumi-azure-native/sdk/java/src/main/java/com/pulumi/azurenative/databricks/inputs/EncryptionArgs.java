// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databricks.inputs;

import com.pulumi.azurenative.databricks.enums.KeySource;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The object that contains details of encryption used on the workspace.
 * 
 */
public final class EncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final EncryptionArgs Empty = new EncryptionArgs();

    /**
     * The name of KeyVault key.
     * 
     */
    @Import(name="keyName")
    private @Nullable Output<String> keyName;

    public Optional<Output<String>> keyName() {
        return Optional.ofNullable(this.keyName);
    }

    /**
     * The encryption keySource (provider). Possible values (case-insensitive):  Default, Microsoft.Keyvault
     * 
     */
    @Import(name="keySource")
    private @Nullable Output<Either<String,KeySource>> keySource;

    public Optional<Output<Either<String,KeySource>>> keySource() {
        return Optional.ofNullable(this.keySource);
    }

    /**
     * The Uri of KeyVault.
     * 
     */
    @Import(name="keyVaultUri")
    private @Nullable Output<String> keyVaultUri;

    public Optional<Output<String>> keyVaultUri() {
        return Optional.ofNullable(this.keyVaultUri);
    }

    /**
     * The version of KeyVault key.
     * 
     */
    @Import(name="keyVersion")
    private @Nullable Output<String> keyVersion;

    public Optional<Output<String>> keyVersion() {
        return Optional.ofNullable(this.keyVersion);
    }

    private EncryptionArgs() {}

    private EncryptionArgs(EncryptionArgs $) {
        this.keyName = $.keyName;
        this.keySource = $.keySource;
        this.keyVaultUri = $.keyVaultUri;
        this.keyVersion = $.keyVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionArgs $;

        public Builder() {
            $ = new EncryptionArgs();
        }

        public Builder(EncryptionArgs defaults) {
            $ = new EncryptionArgs(Objects.requireNonNull(defaults));
        }

        public Builder keyName(@Nullable Output<String> keyName) {
            $.keyName = keyName;
            return this;
        }

        public Builder keyName(String keyName) {
            return keyName(Output.of(keyName));
        }

        public Builder keySource(@Nullable Output<Either<String,KeySource>> keySource) {
            $.keySource = keySource;
            return this;
        }

        public Builder keySource(Either<String,KeySource> keySource) {
            return keySource(Output.of(keySource));
        }

        public Builder keySource(String keySource) {
            return keySource(Either.ofLeft(keySource));
        }

        public Builder keySource(KeySource keySource) {
            return keySource(Either.ofRight(keySource));
        }

        public Builder keyVaultUri(@Nullable Output<String> keyVaultUri) {
            $.keyVaultUri = keyVaultUri;
            return this;
        }

        public Builder keyVaultUri(String keyVaultUri) {
            return keyVaultUri(Output.of(keyVaultUri));
        }

        public Builder keyVersion(@Nullable Output<String> keyVersion) {
            $.keyVersion = keyVersion;
            return this;
        }

        public Builder keyVersion(String keyVersion) {
            return keyVersion(Output.of(keyVersion));
        }

        public EncryptionArgs build() {
            $.keySource = Codegen.stringProp("keySource").left(KeySource.class).output().arg($.keySource).def("Default").getNullable();
            return $;
        }
    }

}
