// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.enums.Operator;
import com.pulumi.azurenative.security.enums.PropertyType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A rule which is evaluated upon event interception. The rule is configured by comparing a specific value from the event model to an expected value. This comparison is done by using one of the supported operators set.
 * 
 */
public final class AutomationTriggeringRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomationTriggeringRuleArgs Empty = new AutomationTriggeringRuleArgs();

    /**
     * The expected value.
     * 
     */
    @Import(name="expectedValue")
    private @Nullable Output<String> expectedValue;

    public Optional<Output<String>> expectedValue() {
        return Optional.ofNullable(this.expectedValue);
    }

    /**
     * A valid comparer operator to use. A case-insensitive comparison will be applied for String PropertyType.
     * 
     */
    @Import(name="operator")
    private @Nullable Output<Either<String,Operator>> operator;

    public Optional<Output<Either<String,Operator>>> operator() {
        return Optional.ofNullable(this.operator);
    }

    /**
     * The JPath of the entity model property that should be checked.
     * 
     */
    @Import(name="propertyJPath")
    private @Nullable Output<String> propertyJPath;

    public Optional<Output<String>> propertyJPath() {
        return Optional.ofNullable(this.propertyJPath);
    }

    /**
     * The data type of the compared operands (string, integer, floating point number or a boolean [true/false]]
     * 
     */
    @Import(name="propertyType")
    private @Nullable Output<Either<String,PropertyType>> propertyType;

    public Optional<Output<Either<String,PropertyType>>> propertyType() {
        return Optional.ofNullable(this.propertyType);
    }

    private AutomationTriggeringRuleArgs() {}

    private AutomationTriggeringRuleArgs(AutomationTriggeringRuleArgs $) {
        this.expectedValue = $.expectedValue;
        this.operator = $.operator;
        this.propertyJPath = $.propertyJPath;
        this.propertyType = $.propertyType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationTriggeringRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationTriggeringRuleArgs $;

        public Builder() {
            $ = new AutomationTriggeringRuleArgs();
        }

        public Builder(AutomationTriggeringRuleArgs defaults) {
            $ = new AutomationTriggeringRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder expectedValue(@Nullable Output<String> expectedValue) {
            $.expectedValue = expectedValue;
            return this;
        }

        public Builder expectedValue(String expectedValue) {
            return expectedValue(Output.of(expectedValue));
        }

        public Builder operator(@Nullable Output<Either<String,Operator>> operator) {
            $.operator = operator;
            return this;
        }

        public Builder operator(Either<String,Operator> operator) {
            return operator(Output.of(operator));
        }

        public Builder propertyJPath(@Nullable Output<String> propertyJPath) {
            $.propertyJPath = propertyJPath;
            return this;
        }

        public Builder propertyJPath(String propertyJPath) {
            return propertyJPath(Output.of(propertyJPath));
        }

        public Builder propertyType(@Nullable Output<Either<String,PropertyType>> propertyType) {
            $.propertyType = propertyType;
            return this;
        }

        public Builder propertyType(Either<String,PropertyType> propertyType) {
            return propertyType(Output.of(propertyType));
        }

        public AutomationTriggeringRuleArgs build() {
            return $;
        }
    }

}
