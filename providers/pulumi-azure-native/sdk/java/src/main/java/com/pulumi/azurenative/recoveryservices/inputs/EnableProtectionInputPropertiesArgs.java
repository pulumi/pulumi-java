// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.A2AEnableProtectionInputArgs;
import com.pulumi.azurenative.recoveryservices.inputs.HyperVReplicaAzureEnableProtectionInputArgs;
import com.pulumi.azurenative.recoveryservices.inputs.InMageAzureV2EnableProtectionInputArgs;
import com.pulumi.azurenative.recoveryservices.inputs.InMageEnableProtectionInputArgs;
import com.pulumi.azurenative.recoveryservices.inputs.InMageRcmEnableProtectionInputArgs;
import com.pulumi.azurenative.recoveryservices.inputs.SanEnableProtectionInputArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Enable protection input properties.
 * 
 */
public final class EnableProtectionInputPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnableProtectionInputPropertiesArgs Empty = new EnableProtectionInputPropertiesArgs();

    /**
     * The Policy Id.
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * The protectable item Id.
     * 
     */
    @Import(name="protectableItemId")
    private @Nullable Output<String> protectableItemId;

    public Optional<Output<String>> protectableItemId() {
        return Optional.ofNullable(this.protectableItemId);
    }

    /**
     * The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
     * 
     */
    @Import(name="providerSpecificDetails")
    private @Nullable Output<Object> providerSpecificDetails;

    public Optional<Output<Object>> providerSpecificDetails() {
        return Optional.ofNullable(this.providerSpecificDetails);
    }

    private EnableProtectionInputPropertiesArgs() {}

    private EnableProtectionInputPropertiesArgs(EnableProtectionInputPropertiesArgs $) {
        this.policyId = $.policyId;
        this.protectableItemId = $.protectableItemId;
        this.providerSpecificDetails = $.providerSpecificDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnableProtectionInputPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnableProtectionInputPropertiesArgs $;

        public Builder() {
            $ = new EnableProtectionInputPropertiesArgs();
        }

        public Builder(EnableProtectionInputPropertiesArgs defaults) {
            $ = new EnableProtectionInputPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        public Builder protectableItemId(@Nullable Output<String> protectableItemId) {
            $.protectableItemId = protectableItemId;
            return this;
        }

        public Builder protectableItemId(String protectableItemId) {
            return protectableItemId(Output.of(protectableItemId));
        }

        public Builder providerSpecificDetails(@Nullable Output<Object> providerSpecificDetails) {
            $.providerSpecificDetails = providerSpecificDetails;
            return this;
        }

        public Builder providerSpecificDetails(Object providerSpecificDetails) {
            return providerSpecificDetails(Output.of(providerSpecificDetails));
        }

        public EnableProtectionInputPropertiesArgs build() {
            return $;
        }
    }

}
