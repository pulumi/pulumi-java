// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The parameters to provide for the Email channel.
 * 
 */
public final class EmailChannelPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailChannelPropertiesArgs Empty = new EmailChannelPropertiesArgs();

    /**
     * The email address
     * 
     */
    @Import(name="emailAddress", required=true)
    private Output<String> emailAddress;

    /**
     * @return The email address
     * 
     */
    public Output<String> emailAddress() {
        return this.emailAddress;
    }

    /**
     * Whether this channel is enabled for the bot
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return Whether this channel is enabled for the bot
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    private EmailChannelPropertiesArgs() {}

    private EmailChannelPropertiesArgs(EmailChannelPropertiesArgs $) {
        this.emailAddress = $.emailAddress;
        this.isEnabled = $.isEnabled;
        this.password = $.password;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailChannelPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailChannelPropertiesArgs $;

        public Builder() {
            $ = new EmailChannelPropertiesArgs();
        }

        public Builder(EmailChannelPropertiesArgs defaults) {
            $ = new EmailChannelPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param emailAddress The email address
         * 
         * @return builder
         * 
         */
        public Builder emailAddress(Output<String> emailAddress) {
            $.emailAddress = emailAddress;
            return this;
        }

        /**
         * @param emailAddress The email address
         * 
         * @return builder
         * 
         */
        public Builder emailAddress(String emailAddress) {
            return emailAddress(Output.of(emailAddress));
        }

        /**
         * @param isEnabled Whether this channel is enabled for the bot
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Whether this channel is enabled for the bot
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param password The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        public EmailChannelPropertiesArgs build() {
            $.emailAddress = Objects.requireNonNull($.emailAddress, "expected parameter 'emailAddress' to be non-null");
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            return $;
        }
    }

}
