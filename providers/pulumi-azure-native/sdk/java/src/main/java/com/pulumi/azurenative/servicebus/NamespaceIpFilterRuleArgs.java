// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicebus;

import com.pulumi.azurenative.servicebus.enums.IPAction;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamespaceIpFilterRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceIpFilterRuleArgs Empty = new NamespaceIpFilterRuleArgs();

    /**
     * The IP Filter Action
     * 
     */
    @Import(name="action")
    private @Nullable Output<Either<String,IPAction>> action;

    /**
     * @return The IP Filter Action
     * 
     */
    public Optional<Output<Either<String,IPAction>>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * IP Filter name
     * 
     */
    @Import(name="filterName")
    private @Nullable Output<String> filterName;

    /**
     * @return IP Filter name
     * 
     */
    public Optional<Output<String>> filterName() {
        return Optional.ofNullable(this.filterName);
    }

    /**
     * The IP Filter Rule name.
     * 
     */
    @Import(name="ipFilterRuleName")
    private @Nullable Output<String> ipFilterRuleName;

    /**
     * @return The IP Filter Rule name.
     * 
     */
    public Optional<Output<String>> ipFilterRuleName() {
        return Optional.ofNullable(this.ipFilterRuleName);
    }

    /**
     * IP Mask
     * 
     */
    @Import(name="ipMask")
    private @Nullable Output<String> ipMask;

    /**
     * @return IP Mask
     * 
     */
    public Optional<Output<String>> ipMask() {
        return Optional.ofNullable(this.ipMask);
    }

    /**
     * The namespace name
     * 
     */
    @Import(name="namespaceName", required=true)
    private Output<String> namespaceName;

    /**
     * @return The namespace name
     * 
     */
    public Output<String> namespaceName() {
        return this.namespaceName;
    }

    /**
     * Name of the Resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the Resource group within the Azure subscription.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private NamespaceIpFilterRuleArgs() {}

    private NamespaceIpFilterRuleArgs(NamespaceIpFilterRuleArgs $) {
        this.action = $.action;
        this.filterName = $.filterName;
        this.ipFilterRuleName = $.ipFilterRuleName;
        this.ipMask = $.ipMask;
        this.namespaceName = $.namespaceName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceIpFilterRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceIpFilterRuleArgs $;

        public Builder() {
            $ = new NamespaceIpFilterRuleArgs();
        }

        public Builder(NamespaceIpFilterRuleArgs defaults) {
            $ = new NamespaceIpFilterRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The IP Filter Action
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<Either<String,IPAction>> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The IP Filter Action
         * 
         * @return builder
         * 
         */
        public Builder action(Either<String,IPAction> action) {
            return action(Output.of(action));
        }

        /**
         * @param action The IP Filter Action
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Either.ofLeft(action));
        }

        /**
         * @param action The IP Filter Action
         * 
         * @return builder
         * 
         */
        public Builder action(IPAction action) {
            return action(Either.ofRight(action));
        }

        /**
         * @param filterName IP Filter name
         * 
         * @return builder
         * 
         */
        public Builder filterName(@Nullable Output<String> filterName) {
            $.filterName = filterName;
            return this;
        }

        /**
         * @param filterName IP Filter name
         * 
         * @return builder
         * 
         */
        public Builder filterName(String filterName) {
            return filterName(Output.of(filterName));
        }

        /**
         * @param ipFilterRuleName The IP Filter Rule name.
         * 
         * @return builder
         * 
         */
        public Builder ipFilterRuleName(@Nullable Output<String> ipFilterRuleName) {
            $.ipFilterRuleName = ipFilterRuleName;
            return this;
        }

        /**
         * @param ipFilterRuleName The IP Filter Rule name.
         * 
         * @return builder
         * 
         */
        public Builder ipFilterRuleName(String ipFilterRuleName) {
            return ipFilterRuleName(Output.of(ipFilterRuleName));
        }

        /**
         * @param ipMask IP Mask
         * 
         * @return builder
         * 
         */
        public Builder ipMask(@Nullable Output<String> ipMask) {
            $.ipMask = ipMask;
            return this;
        }

        /**
         * @param ipMask IP Mask
         * 
         * @return builder
         * 
         */
        public Builder ipMask(String ipMask) {
            return ipMask(Output.of(ipMask));
        }

        /**
         * @param namespaceName The namespace name
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(Output<String> namespaceName) {
            $.namespaceName = namespaceName;
            return this;
        }

        /**
         * @param namespaceName The namespace name
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(String namespaceName) {
            return namespaceName(Output.of(namespaceName));
        }

        /**
         * @param resourceGroupName Name of the Resource group within the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the Resource group within the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public NamespaceIpFilterRuleArgs build() {
            $.namespaceName = Objects.requireNonNull($.namespaceName, "expected parameter 'namespaceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
