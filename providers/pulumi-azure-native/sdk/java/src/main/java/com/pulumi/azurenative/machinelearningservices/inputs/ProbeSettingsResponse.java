// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Deployment container liveness/readiness probe configuration.
 * 
 */
public final class ProbeSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ProbeSettingsResponse Empty = new ProbeSettingsResponse();

    /**
     * The number of failures to allow before returning an unhealthy status.
     * 
     */
    @Import(name="failureThreshold")
    private @Nullable Integer failureThreshold;

    /**
     * @return The number of failures to allow before returning an unhealthy status.
     * 
     */
    public Optional<Integer> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }

    /**
     * The delay before the first probe in ISO 8601 format.
     * 
     */
    @Import(name="initialDelay")
    private @Nullable String initialDelay;

    /**
     * @return The delay before the first probe in ISO 8601 format.
     * 
     */
    public Optional<String> initialDelay() {
        return Optional.ofNullable(this.initialDelay);
    }

    /**
     * The length of time between probes in ISO 8601 format.
     * 
     */
    @Import(name="period")
    private @Nullable String period;

    /**
     * @return The length of time between probes in ISO 8601 format.
     * 
     */
    public Optional<String> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * The number of successful probes before returning a healthy status.
     * 
     */
    @Import(name="successThreshold")
    private @Nullable Integer successThreshold;

    /**
     * @return The number of successful probes before returning a healthy status.
     * 
     */
    public Optional<Integer> successThreshold() {
        return Optional.ofNullable(this.successThreshold);
    }

    /**
     * The probe timeout in ISO 8601 format.
     * 
     */
    @Import(name="timeout")
    private @Nullable String timeout;

    /**
     * @return The probe timeout in ISO 8601 format.
     * 
     */
    public Optional<String> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private ProbeSettingsResponse() {}

    private ProbeSettingsResponse(ProbeSettingsResponse $) {
        this.failureThreshold = $.failureThreshold;
        this.initialDelay = $.initialDelay;
        this.period = $.period;
        this.successThreshold = $.successThreshold;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProbeSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProbeSettingsResponse $;

        public Builder() {
            $ = new ProbeSettingsResponse();
        }

        public Builder(ProbeSettingsResponse defaults) {
            $ = new ProbeSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param failureThreshold The number of failures to allow before returning an unhealthy status.
         * 
         * @return builder
         * 
         */
        public Builder failureThreshold(@Nullable Integer failureThreshold) {
            $.failureThreshold = failureThreshold;
            return this;
        }

        /**
         * @param initialDelay The delay before the first probe in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder initialDelay(@Nullable String initialDelay) {
            $.initialDelay = initialDelay;
            return this;
        }

        /**
         * @param period The length of time between probes in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable String period) {
            $.period = period;
            return this;
        }

        /**
         * @param successThreshold The number of successful probes before returning a healthy status.
         * 
         * @return builder
         * 
         */
        public Builder successThreshold(@Nullable Integer successThreshold) {
            $.successThreshold = successThreshold;
            return this;
        }

        /**
         * @param timeout The probe timeout in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable String timeout) {
            $.timeout = timeout;
            return this;
        }

        public ProbeSettingsResponse build() {
            return $;
        }
    }

}
