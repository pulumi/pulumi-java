// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementGroupNetworkManagerConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementGroupNetworkManagerConnectionArgs Empty = new ManagementGroupNetworkManagerConnectionArgs();

    /**
     * A description of the scope connection.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The management group Id which uniquely identify the Microsoft Azure management group.
     * 
     */
    @Import(name="managementGroupId", required=true)
    private Output<String> managementGroupId;

    public Output<String> managementGroupId() {
        return this.managementGroupId;
    }

    /**
     * Name for the network manager connection.
     * 
     */
    @Import(name="networkManagerConnectionName")
    private @Nullable Output<String> networkManagerConnectionName;

    public Optional<Output<String>> networkManagerConnectionName() {
        return Optional.ofNullable(this.networkManagerConnectionName);
    }

    /**
     * Network Manager Id.
     * 
     */
    @Import(name="networkManagerId")
    private @Nullable Output<String> networkManagerId;

    public Optional<Output<String>> networkManagerId() {
        return Optional.ofNullable(this.networkManagerId);
    }

    private ManagementGroupNetworkManagerConnectionArgs() {}

    private ManagementGroupNetworkManagerConnectionArgs(ManagementGroupNetworkManagerConnectionArgs $) {
        this.description = $.description;
        this.managementGroupId = $.managementGroupId;
        this.networkManagerConnectionName = $.networkManagerConnectionName;
        this.networkManagerId = $.networkManagerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementGroupNetworkManagerConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementGroupNetworkManagerConnectionArgs $;

        public Builder() {
            $ = new ManagementGroupNetworkManagerConnectionArgs();
        }

        public Builder(ManagementGroupNetworkManagerConnectionArgs defaults) {
            $ = new ManagementGroupNetworkManagerConnectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder managementGroupId(Output<String> managementGroupId) {
            $.managementGroupId = managementGroupId;
            return this;
        }

        public Builder managementGroupId(String managementGroupId) {
            return managementGroupId(Output.of(managementGroupId));
        }

        public Builder networkManagerConnectionName(@Nullable Output<String> networkManagerConnectionName) {
            $.networkManagerConnectionName = networkManagerConnectionName;
            return this;
        }

        public Builder networkManagerConnectionName(String networkManagerConnectionName) {
            return networkManagerConnectionName(Output.of(networkManagerConnectionName));
        }

        public Builder networkManagerId(@Nullable Output<String> networkManagerId) {
            $.networkManagerId = networkManagerId;
            return this;
        }

        public Builder networkManagerId(String networkManagerId) {
            return networkManagerId(Output.of(networkManagerId));
        }

        public ManagementGroupNetworkManagerConnectionArgs build() {
            $.managementGroupId = Objects.requireNonNull($.managementGroupId, "expected parameter 'managementGroupId' to be non-null");
            return $;
        }
    }

}
