// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.ApiConnectionTestLinkResponse;
import com.pulumi.azurenative.web.inputs.ApiReferenceResponse;
import com.pulumi.azurenative.web.inputs.ConnectionStatusDefinitionResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiConnectionDefinitionResponseProperties extends com.pulumi.resources.InvokeArgs {

    public static final ApiConnectionDefinitionResponseProperties Empty = new ApiConnectionDefinitionResponseProperties();

    @Import(name="api")
    private @Nullable ApiReferenceResponse api;

    public Optional<ApiReferenceResponse> api() {
        return Optional.ofNullable(this.api);
    }

    /**
     * Timestamp of last connection change
     * 
     */
    @Import(name="changedTime")
    private @Nullable String changedTime;

    /**
     * @return Timestamp of last connection change
     * 
     */
    public Optional<String> changedTime() {
        return Optional.ofNullable(this.changedTime);
    }

    /**
     * Timestamp of the connection creation
     * 
     */
    @Import(name="createdTime")
    private @Nullable String createdTime;

    /**
     * @return Timestamp of the connection creation
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    /**
     * Dictionary of custom parameter values
     * 
     */
    @Import(name="customParameterValues")
    private @Nullable Map<String,String> customParameterValues;

    /**
     * @return Dictionary of custom parameter values
     * 
     */
    public Optional<Map<String,String>> customParameterValues() {
        return Optional.ofNullable(this.customParameterValues);
    }

    /**
     * Display name
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return Display name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Dictionary of nonsecret parameter values
     * 
     */
    @Import(name="nonSecretParameterValues")
    private @Nullable Map<String,String> nonSecretParameterValues;

    /**
     * @return Dictionary of nonsecret parameter values
     * 
     */
    public Optional<Map<String,String>> nonSecretParameterValues() {
        return Optional.ofNullable(this.nonSecretParameterValues);
    }

    /**
     * Dictionary of parameter values
     * 
     */
    @Import(name="parameterValues")
    private @Nullable Map<String,String> parameterValues;

    /**
     * @return Dictionary of parameter values
     * 
     */
    public Optional<Map<String,String>> parameterValues() {
        return Optional.ofNullable(this.parameterValues);
    }

    /**
     * Status of the connection
     * 
     */
    @Import(name="statuses")
    private @Nullable List<ConnectionStatusDefinitionResponse> statuses;

    /**
     * @return Status of the connection
     * 
     */
    public Optional<List<ConnectionStatusDefinitionResponse>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    /**
     * Links to test the API connection
     * 
     */
    @Import(name="testLinks")
    private @Nullable List<ApiConnectionTestLinkResponse> testLinks;

    /**
     * @return Links to test the API connection
     * 
     */
    public Optional<List<ApiConnectionTestLinkResponse>> testLinks() {
        return Optional.ofNullable(this.testLinks);
    }

    private ApiConnectionDefinitionResponseProperties() {}

    private ApiConnectionDefinitionResponseProperties(ApiConnectionDefinitionResponseProperties $) {
        this.api = $.api;
        this.changedTime = $.changedTime;
        this.createdTime = $.createdTime;
        this.customParameterValues = $.customParameterValues;
        this.displayName = $.displayName;
        this.nonSecretParameterValues = $.nonSecretParameterValues;
        this.parameterValues = $.parameterValues;
        this.statuses = $.statuses;
        this.testLinks = $.testLinks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiConnectionDefinitionResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiConnectionDefinitionResponseProperties $;

        public Builder() {
            $ = new ApiConnectionDefinitionResponseProperties();
        }

        public Builder(ApiConnectionDefinitionResponseProperties defaults) {
            $ = new ApiConnectionDefinitionResponseProperties(Objects.requireNonNull(defaults));
        }

        public Builder api(@Nullable ApiReferenceResponse api) {
            $.api = api;
            return this;
        }

        /**
         * @param changedTime Timestamp of last connection change
         * 
         * @return builder
         * 
         */
        public Builder changedTime(@Nullable String changedTime) {
            $.changedTime = changedTime;
            return this;
        }

        /**
         * @param createdTime Timestamp of the connection creation
         * 
         * @return builder
         * 
         */
        public Builder createdTime(@Nullable String createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        /**
         * @param customParameterValues Dictionary of custom parameter values
         * 
         * @return builder
         * 
         */
        public Builder customParameterValues(@Nullable Map<String,String> customParameterValues) {
            $.customParameterValues = customParameterValues;
            return this;
        }

        /**
         * @param displayName Display name
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param nonSecretParameterValues Dictionary of nonsecret parameter values
         * 
         * @return builder
         * 
         */
        public Builder nonSecretParameterValues(@Nullable Map<String,String> nonSecretParameterValues) {
            $.nonSecretParameterValues = nonSecretParameterValues;
            return this;
        }

        /**
         * @param parameterValues Dictionary of parameter values
         * 
         * @return builder
         * 
         */
        public Builder parameterValues(@Nullable Map<String,String> parameterValues) {
            $.parameterValues = parameterValues;
            return this;
        }

        /**
         * @param statuses Status of the connection
         * 
         * @return builder
         * 
         */
        public Builder statuses(@Nullable List<ConnectionStatusDefinitionResponse> statuses) {
            $.statuses = statuses;
            return this;
        }

        /**
         * @param statuses Status of the connection
         * 
         * @return builder
         * 
         */
        public Builder statuses(ConnectionStatusDefinitionResponse... statuses) {
            return statuses(List.of(statuses));
        }

        /**
         * @param testLinks Links to test the API connection
         * 
         * @return builder
         * 
         */
        public Builder testLinks(@Nullable List<ApiConnectionTestLinkResponse> testLinks) {
            $.testLinks = testLinks;
            return this;
        }

        /**
         * @param testLinks Links to test the API connection
         * 
         * @return builder
         * 
         */
        public Builder testLinks(ApiConnectionTestLinkResponse... testLinks) {
            return testLinks(List.of(testLinks));
        }

        public ApiConnectionDefinitionResponseProperties build() {
            return $;
        }
    }

}
