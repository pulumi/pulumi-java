// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic;

import com.pulumi.azurenative.logic.inputs.RosettaNetPipActivitySettingsArgs;
import com.pulumi.azurenative.logic.inputs.RosettaNetPipRoleSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RosettaNetProcessConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RosettaNetProcessConfigurationArgs Empty = new RosettaNetProcessConfigurationArgs();

    /**
     * The RosettaNet process configuration activity settings.
     * 
     */
    @Import(name="activitySettings", required=true)
    private Output<RosettaNetPipActivitySettingsArgs> activitySettings;

    public Output<RosettaNetPipActivitySettingsArgs> activitySettings() {
        return this.activitySettings;
    }

    /**
     * The integration account RosettaNet ProcessConfiguration properties.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The RosettaNet initiator role settings.
     * 
     */
    @Import(name="initiatorRoleSettings", required=true)
    private Output<RosettaNetPipRoleSettingsArgs> initiatorRoleSettings;

    public Output<RosettaNetPipRoleSettingsArgs> initiatorRoleSettings() {
        return this.initiatorRoleSettings;
    }

    /**
     * The integration account name.
     * 
     */
    @Import(name="integrationAccountName", required=true)
    private Output<String> integrationAccountName;

    public Output<String> integrationAccountName() {
        return this.integrationAccountName;
    }

    /**
     * The resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The metadata.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,String>> metadata;

    public Optional<Output<Map<String,String>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The integration account RosettaNet process code.
     * 
     */
    @Import(name="processCode", required=true)
    private Output<String> processCode;

    public Output<String> processCode() {
        return this.processCode;
    }

    /**
     * The integration account RosettaNet process name.
     * 
     */
    @Import(name="processName", required=true)
    private Output<String> processName;

    public Output<String> processName() {
        return this.processName;
    }

    /**
     * The integration account RosettaNet process version.
     * 
     */
    @Import(name="processVersion", required=true)
    private Output<String> processVersion;

    public Output<String> processVersion() {
        return this.processVersion;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The RosettaNet responder role settings.
     * 
     */
    @Import(name="responderRoleSettings", required=true)
    private Output<RosettaNetPipRoleSettingsArgs> responderRoleSettings;

    public Output<RosettaNetPipRoleSettingsArgs> responderRoleSettings() {
        return this.responderRoleSettings;
    }

    /**
     * The integration account RosettaNet ProcessConfiguration name.
     * 
     */
    @Import(name="rosettaNetProcessConfigurationName")
    private @Nullable Output<String> rosettaNetProcessConfigurationName;

    public Optional<Output<String>> rosettaNetProcessConfigurationName() {
        return Optional.ofNullable(this.rosettaNetProcessConfigurationName);
    }

    /**
     * The resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private RosettaNetProcessConfigurationArgs() {}

    private RosettaNetProcessConfigurationArgs(RosettaNetProcessConfigurationArgs $) {
        this.activitySettings = $.activitySettings;
        this.description = $.description;
        this.initiatorRoleSettings = $.initiatorRoleSettings;
        this.integrationAccountName = $.integrationAccountName;
        this.location = $.location;
        this.metadata = $.metadata;
        this.processCode = $.processCode;
        this.processName = $.processName;
        this.processVersion = $.processVersion;
        this.resourceGroupName = $.resourceGroupName;
        this.responderRoleSettings = $.responderRoleSettings;
        this.rosettaNetProcessConfigurationName = $.rosettaNetProcessConfigurationName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RosettaNetProcessConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RosettaNetProcessConfigurationArgs $;

        public Builder() {
            $ = new RosettaNetProcessConfigurationArgs();
        }

        public Builder(RosettaNetProcessConfigurationArgs defaults) {
            $ = new RosettaNetProcessConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder activitySettings(Output<RosettaNetPipActivitySettingsArgs> activitySettings) {
            $.activitySettings = activitySettings;
            return this;
        }

        public Builder activitySettings(RosettaNetPipActivitySettingsArgs activitySettings) {
            return activitySettings(Output.of(activitySettings));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder initiatorRoleSettings(Output<RosettaNetPipRoleSettingsArgs> initiatorRoleSettings) {
            $.initiatorRoleSettings = initiatorRoleSettings;
            return this;
        }

        public Builder initiatorRoleSettings(RosettaNetPipRoleSettingsArgs initiatorRoleSettings) {
            return initiatorRoleSettings(Output.of(initiatorRoleSettings));
        }

        public Builder integrationAccountName(Output<String> integrationAccountName) {
            $.integrationAccountName = integrationAccountName;
            return this;
        }

        public Builder integrationAccountName(String integrationAccountName) {
            return integrationAccountName(Output.of(integrationAccountName));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            $.metadata = metadata;
            return this;
        }

        public Builder metadata(Map<String,String> metadata) {
            return metadata(Output.of(metadata));
        }

        public Builder processCode(Output<String> processCode) {
            $.processCode = processCode;
            return this;
        }

        public Builder processCode(String processCode) {
            return processCode(Output.of(processCode));
        }

        public Builder processName(Output<String> processName) {
            $.processName = processName;
            return this;
        }

        public Builder processName(String processName) {
            return processName(Output.of(processName));
        }

        public Builder processVersion(Output<String> processVersion) {
            $.processVersion = processVersion;
            return this;
        }

        public Builder processVersion(String processVersion) {
            return processVersion(Output.of(processVersion));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder responderRoleSettings(Output<RosettaNetPipRoleSettingsArgs> responderRoleSettings) {
            $.responderRoleSettings = responderRoleSettings;
            return this;
        }

        public Builder responderRoleSettings(RosettaNetPipRoleSettingsArgs responderRoleSettings) {
            return responderRoleSettings(Output.of(responderRoleSettings));
        }

        public Builder rosettaNetProcessConfigurationName(@Nullable Output<String> rosettaNetProcessConfigurationName) {
            $.rosettaNetProcessConfigurationName = rosettaNetProcessConfigurationName;
            return this;
        }

        public Builder rosettaNetProcessConfigurationName(String rosettaNetProcessConfigurationName) {
            return rosettaNetProcessConfigurationName(Output.of(rosettaNetProcessConfigurationName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public RosettaNetProcessConfigurationArgs build() {
            $.activitySettings = Objects.requireNonNull($.activitySettings, "expected parameter 'activitySettings' to be non-null");
            $.initiatorRoleSettings = Objects.requireNonNull($.initiatorRoleSettings, "expected parameter 'initiatorRoleSettings' to be non-null");
            $.integrationAccountName = Objects.requireNonNull($.integrationAccountName, "expected parameter 'integrationAccountName' to be non-null");
            $.processCode = Objects.requireNonNull($.processCode, "expected parameter 'processCode' to be non-null");
            $.processName = Objects.requireNonNull($.processName, "expected parameter 'processName' to be non-null");
            $.processVersion = Objects.requireNonNull($.processVersion, "expected parameter 'processVersion' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.responderRoleSettings = Objects.requireNonNull($.responderRoleSettings, "expected parameter 'responderRoleSettings' to be non-null");
            return $;
        }
    }

}
