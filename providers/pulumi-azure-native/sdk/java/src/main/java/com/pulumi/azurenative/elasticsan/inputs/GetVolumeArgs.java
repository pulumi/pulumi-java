// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.elasticsan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetVolumeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVolumeArgs Empty = new GetVolumeArgs();

    /**
     * The name of the ElasticSan.
     * 
     */
    @Import(name="elasticSanName", required=true)
    private Output<String> elasticSanName;

    /**
     * @return The name of the ElasticSan.
     * 
     */
    public Output<String> elasticSanName() {
        return this.elasticSanName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the VolumeGroup.
     * 
     */
    @Import(name="volumeGroupName", required=true)
    private Output<String> volumeGroupName;

    /**
     * @return The name of the VolumeGroup.
     * 
     */
    public Output<String> volumeGroupName() {
        return this.volumeGroupName;
    }

    /**
     * The name of the Volume.
     * 
     */
    @Import(name="volumeName", required=true)
    private Output<String> volumeName;

    /**
     * @return The name of the Volume.
     * 
     */
    public Output<String> volumeName() {
        return this.volumeName;
    }

    private GetVolumeArgs() {}

    private GetVolumeArgs(GetVolumeArgs $) {
        this.elasticSanName = $.elasticSanName;
        this.resourceGroupName = $.resourceGroupName;
        this.volumeGroupName = $.volumeGroupName;
        this.volumeName = $.volumeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVolumeArgs $;

        public Builder() {
            $ = new GetVolumeArgs();
        }

        public Builder(GetVolumeArgs defaults) {
            $ = new GetVolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param elasticSanName The name of the ElasticSan.
         * 
         * @return builder
         * 
         */
        public Builder elasticSanName(Output<String> elasticSanName) {
            $.elasticSanName = elasticSanName;
            return this;
        }

        /**
         * @param elasticSanName The name of the ElasticSan.
         * 
         * @return builder
         * 
         */
        public Builder elasticSanName(String elasticSanName) {
            return elasticSanName(Output.of(elasticSanName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param volumeGroupName The name of the VolumeGroup.
         * 
         * @return builder
         * 
         */
        public Builder volumeGroupName(Output<String> volumeGroupName) {
            $.volumeGroupName = volumeGroupName;
            return this;
        }

        /**
         * @param volumeGroupName The name of the VolumeGroup.
         * 
         * @return builder
         * 
         */
        public Builder volumeGroupName(String volumeGroupName) {
            return volumeGroupName(Output.of(volumeGroupName));
        }

        /**
         * @param volumeName The name of the Volume.
         * 
         * @return builder
         * 
         */
        public Builder volumeName(Output<String> volumeName) {
            $.volumeName = volumeName;
            return this;
        }

        /**
         * @param volumeName The name of the Volume.
         * 
         * @return builder
         * 
         */
        public Builder volumeName(String volumeName) {
            return volumeName(Output.of(volumeName));
        }

        public GetVolumeArgs build() {
            $.elasticSanName = Objects.requireNonNull($.elasticSanName, "expected parameter 'elasticSanName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.volumeGroupName = Objects.requireNonNull($.volumeGroupName, "expected parameter 'volumeGroupName' to be non-null");
            $.volumeName = Objects.requireNonNull($.volumeName, "expected parameter 'volumeName' to be non-null");
            return $;
        }
    }

}
