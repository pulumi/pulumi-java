// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JitNetworkAccessRequestPortResponse extends com.pulumi.resources.InvokeArgs {

    public static final JitNetworkAccessRequestPortResponse Empty = new JitNetworkAccessRequestPortResponse();

    /**
     * Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16".
     * 
     */
    @Import(name="allowedSourceAddressPrefix")
      private final @Nullable String allowedSourceAddressPrefix;

    public Optional<String> allowedSourceAddressPrefix() {
        return this.allowedSourceAddressPrefix == null ? Optional.empty() : Optional.ofNullable(this.allowedSourceAddressPrefix);
    }

    /**
     * Mutually exclusive with the "allowedSourceAddressPrefix" parameter.
     * 
     */
    @Import(name="allowedSourceAddressPrefixes")
      private final @Nullable List<String> allowedSourceAddressPrefixes;

    public List<String> allowedSourceAddressPrefixes() {
        return this.allowedSourceAddressPrefixes == null ? List.of() : this.allowedSourceAddressPrefixes;
    }

    /**
     * The date & time at which the request ends in UTC
     * 
     */
    @Import(name="endTimeUtc", required=true)
      private final String endTimeUtc;

    public String endTimeUtc() {
        return this.endTimeUtc;
    }

    /**
     * The port which is mapped to this port's `number` in the Azure Firewall, if applicable
     * 
     */
    @Import(name="mappedPort")
      private final @Nullable Integer mappedPort;

    public Optional<Integer> mappedPort() {
        return this.mappedPort == null ? Optional.empty() : Optional.ofNullable(this.mappedPort);
    }

    @Import(name="number", required=true)
      private final Integer number;

    public Integer number() {
        return this.number;
    }

    /**
     * The status of the port
     * 
     */
    @Import(name="status", required=true)
      private final String status;

    public String status() {
        return this.status;
    }

    /**
     * A description of why the `status` has its value
     * 
     */
    @Import(name="statusReason", required=true)
      private final String statusReason;

    public String statusReason() {
        return this.statusReason;
    }

    public JitNetworkAccessRequestPortResponse(
        @Nullable String allowedSourceAddressPrefix,
        @Nullable List<String> allowedSourceAddressPrefixes,
        String endTimeUtc,
        @Nullable Integer mappedPort,
        Integer number,
        String status,
        String statusReason) {
        this.allowedSourceAddressPrefix = allowedSourceAddressPrefix;
        this.allowedSourceAddressPrefixes = allowedSourceAddressPrefixes;
        this.endTimeUtc = Objects.requireNonNull(endTimeUtc, "expected parameter 'endTimeUtc' to be non-null");
        this.mappedPort = mappedPort;
        this.number = Objects.requireNonNull(number, "expected parameter 'number' to be non-null");
        this.status = Objects.requireNonNull(status, "expected parameter 'status' to be non-null");
        this.statusReason = Objects.requireNonNull(statusReason, "expected parameter 'statusReason' to be non-null");
    }

    private JitNetworkAccessRequestPortResponse() {
        this.allowedSourceAddressPrefix = null;
        this.allowedSourceAddressPrefixes = List.of();
        this.endTimeUtc = null;
        this.mappedPort = null;
        this.number = null;
        this.status = null;
        this.statusReason = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JitNetworkAccessRequestPortResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String allowedSourceAddressPrefix;
        private @Nullable List<String> allowedSourceAddressPrefixes;
        private String endTimeUtc;
        private @Nullable Integer mappedPort;
        private Integer number;
        private String status;
        private String statusReason;

        public Builder() {
    	      // Empty
        }

        public Builder(JitNetworkAccessRequestPortResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedSourceAddressPrefix = defaults.allowedSourceAddressPrefix;
    	      this.allowedSourceAddressPrefixes = defaults.allowedSourceAddressPrefixes;
    	      this.endTimeUtc = defaults.endTimeUtc;
    	      this.mappedPort = defaults.mappedPort;
    	      this.number = defaults.number;
    	      this.status = defaults.status;
    	      this.statusReason = defaults.statusReason;
        }

        public Builder allowedSourceAddressPrefix(@Nullable String allowedSourceAddressPrefix) {
            this.allowedSourceAddressPrefix = allowedSourceAddressPrefix;
            return this;
        }
        public Builder allowedSourceAddressPrefixes(@Nullable List<String> allowedSourceAddressPrefixes) {
            this.allowedSourceAddressPrefixes = allowedSourceAddressPrefixes;
            return this;
        }
        public Builder allowedSourceAddressPrefixes(String... allowedSourceAddressPrefixes) {
            return allowedSourceAddressPrefixes(List.of(allowedSourceAddressPrefixes));
        }
        public Builder endTimeUtc(String endTimeUtc) {
            this.endTimeUtc = Objects.requireNonNull(endTimeUtc);
            return this;
        }
        public Builder mappedPort(@Nullable Integer mappedPort) {
            this.mappedPort = mappedPort;
            return this;
        }
        public Builder number(Integer number) {
            this.number = Objects.requireNonNull(number);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder statusReason(String statusReason) {
            this.statusReason = Objects.requireNonNull(statusReason);
            return this;
        }        public JitNetworkAccessRequestPortResponse build() {
            return new JitNetworkAccessRequestPortResponse(allowedSourceAddressPrefix, allowedSourceAddressPrefixes, endTimeUtc, mappedPort, number, status, statusReason);
        }
    }
}
