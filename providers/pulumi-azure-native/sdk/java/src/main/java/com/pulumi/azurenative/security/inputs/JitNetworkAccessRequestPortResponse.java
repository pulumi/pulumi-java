// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JitNetworkAccessRequestPortResponse extends com.pulumi.resources.InvokeArgs {

    public static final JitNetworkAccessRequestPortResponse Empty = new JitNetworkAccessRequestPortResponse();

    /**
     * Mutually exclusive with the &#34;allowedSourceAddressPrefixes&#34; parameter. Should be an IP address or CIDR, for example &#34;192.168.0.3&#34; or &#34;192.168.0.0/16&#34;.
     * 
     */
    @Import(name="allowedSourceAddressPrefix")
    private @Nullable String allowedSourceAddressPrefix;

    /**
     * @return Mutually exclusive with the &#34;allowedSourceAddressPrefixes&#34; parameter. Should be an IP address or CIDR, for example &#34;192.168.0.3&#34; or &#34;192.168.0.0/16&#34;.
     * 
     */
    public Optional<String> allowedSourceAddressPrefix() {
        return Optional.ofNullable(this.allowedSourceAddressPrefix);
    }

    /**
     * Mutually exclusive with the &#34;allowedSourceAddressPrefix&#34; parameter.
     * 
     */
    @Import(name="allowedSourceAddressPrefixes")
    private @Nullable List<String> allowedSourceAddressPrefixes;

    /**
     * @return Mutually exclusive with the &#34;allowedSourceAddressPrefix&#34; parameter.
     * 
     */
    public Optional<List<String>> allowedSourceAddressPrefixes() {
        return Optional.ofNullable(this.allowedSourceAddressPrefixes);
    }

    /**
     * The date &amp; time at which the request ends in UTC
     * 
     */
    @Import(name="endTimeUtc", required=true)
    private String endTimeUtc;

    /**
     * @return The date &amp; time at which the request ends in UTC
     * 
     */
    public String endTimeUtc() {
        return this.endTimeUtc;
    }

    /**
     * The port which is mapped to this port&#39;s `number` in the Azure Firewall, if applicable
     * 
     */
    @Import(name="mappedPort")
    private @Nullable Integer mappedPort;

    /**
     * @return The port which is mapped to this port&#39;s `number` in the Azure Firewall, if applicable
     * 
     */
    public Optional<Integer> mappedPort() {
        return Optional.ofNullable(this.mappedPort);
    }

    @Import(name="number", required=true)
    private Integer number;

    public Integer number() {
        return this.number;
    }

    /**
     * The status of the port
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return The status of the port
     * 
     */
    public String status() {
        return this.status;
    }

    /**
     * A description of why the `status` has its value
     * 
     */
    @Import(name="statusReason", required=true)
    private String statusReason;

    /**
     * @return A description of why the `status` has its value
     * 
     */
    public String statusReason() {
        return this.statusReason;
    }

    private JitNetworkAccessRequestPortResponse() {}

    private JitNetworkAccessRequestPortResponse(JitNetworkAccessRequestPortResponse $) {
        this.allowedSourceAddressPrefix = $.allowedSourceAddressPrefix;
        this.allowedSourceAddressPrefixes = $.allowedSourceAddressPrefixes;
        this.endTimeUtc = $.endTimeUtc;
        this.mappedPort = $.mappedPort;
        this.number = $.number;
        this.status = $.status;
        this.statusReason = $.statusReason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JitNetworkAccessRequestPortResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JitNetworkAccessRequestPortResponse $;

        public Builder() {
            $ = new JitNetworkAccessRequestPortResponse();
        }

        public Builder(JitNetworkAccessRequestPortResponse defaults) {
            $ = new JitNetworkAccessRequestPortResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedSourceAddressPrefix Mutually exclusive with the &#34;allowedSourceAddressPrefixes&#34; parameter. Should be an IP address or CIDR, for example &#34;192.168.0.3&#34; or &#34;192.168.0.0/16&#34;.
         * 
         * @return builder
         * 
         */
        public Builder allowedSourceAddressPrefix(@Nullable String allowedSourceAddressPrefix) {
            $.allowedSourceAddressPrefix = allowedSourceAddressPrefix;
            return this;
        }

        /**
         * @param allowedSourceAddressPrefixes Mutually exclusive with the &#34;allowedSourceAddressPrefix&#34; parameter.
         * 
         * @return builder
         * 
         */
        public Builder allowedSourceAddressPrefixes(@Nullable List<String> allowedSourceAddressPrefixes) {
            $.allowedSourceAddressPrefixes = allowedSourceAddressPrefixes;
            return this;
        }

        /**
         * @param allowedSourceAddressPrefixes Mutually exclusive with the &#34;allowedSourceAddressPrefix&#34; parameter.
         * 
         * @return builder
         * 
         */
        public Builder allowedSourceAddressPrefixes(String... allowedSourceAddressPrefixes) {
            return allowedSourceAddressPrefixes(List.of(allowedSourceAddressPrefixes));
        }

        /**
         * @param endTimeUtc The date &amp; time at which the request ends in UTC
         * 
         * @return builder
         * 
         */
        public Builder endTimeUtc(String endTimeUtc) {
            $.endTimeUtc = endTimeUtc;
            return this;
        }

        /**
         * @param mappedPort The port which is mapped to this port&#39;s `number` in the Azure Firewall, if applicable
         * 
         * @return builder
         * 
         */
        public Builder mappedPort(@Nullable Integer mappedPort) {
            $.mappedPort = mappedPort;
            return this;
        }

        public Builder number(Integer number) {
            $.number = number;
            return this;
        }

        /**
         * @param status The status of the port
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        /**
         * @param statusReason A description of why the `status` has its value
         * 
         * @return builder
         * 
         */
        public Builder statusReason(String statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        public JitNetworkAccessRequestPortResponse build() {
            $.endTimeUtc = Objects.requireNonNull($.endTimeUtc, "expected parameter 'endTimeUtc' to be non-null");
            $.number = Objects.requireNonNull($.number, "expected parameter 'number' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.statusReason = Objects.requireNonNull($.statusReason, "expected parameter 'statusReason' to be non-null");
            return $;
        }
    }

}
