// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class representing the details of the solution.
 * 
 */
public final class SolutionDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final SolutionDetailsResponse Empty = new SolutionDetailsResponse();

    /**
     * Gets or sets the count of assessments reported by the solution.
     * 
     */
    @Import(name="assessmentCount")
    private @Nullable Integer assessmentCount;

    /**
     * @return Gets or sets the count of assessments reported by the solution.
     * 
     */
    public Optional<Integer> assessmentCount() {
        return Optional.ofNullable(this.assessmentCount);
    }

    /**
     * Gets or sets the extended details reported by the solution.
     * 
     */
    @Import(name="extendedDetails")
    private @Nullable Map<String,String> extendedDetails;

    /**
     * @return Gets or sets the extended details reported by the solution.
     * 
     */
    public Optional<Map<String,String>> extendedDetails() {
        return Optional.ofNullable(this.extendedDetails);
    }

    /**
     * Gets or sets the count of groups reported by the solution.
     * 
     */
    @Import(name="groupCount")
    private @Nullable Integer groupCount;

    /**
     * @return Gets or sets the count of groups reported by the solution.
     * 
     */
    public Optional<Integer> groupCount() {
        return Optional.ofNullable(this.groupCount);
    }

    private SolutionDetailsResponse() {}

    private SolutionDetailsResponse(SolutionDetailsResponse $) {
        this.assessmentCount = $.assessmentCount;
        this.extendedDetails = $.extendedDetails;
        this.groupCount = $.groupCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SolutionDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SolutionDetailsResponse $;

        public Builder() {
            $ = new SolutionDetailsResponse();
        }

        public Builder(SolutionDetailsResponse defaults) {
            $ = new SolutionDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param assessmentCount Gets or sets the count of assessments reported by the solution.
         * 
         * @return builder
         * 
         */
        public Builder assessmentCount(@Nullable Integer assessmentCount) {
            $.assessmentCount = assessmentCount;
            return this;
        }

        /**
         * @param extendedDetails Gets or sets the extended details reported by the solution.
         * 
         * @return builder
         * 
         */
        public Builder extendedDetails(@Nullable Map<String,String> extendedDetails) {
            $.extendedDetails = extendedDetails;
            return this;
        }

        /**
         * @param groupCount Gets or sets the count of groups reported by the solution.
         * 
         * @return builder
         * 
         */
        public Builder groupCount(@Nullable Integer groupCount) {
            $.groupCount = groupCount;
            return this;
        }

        public SolutionDetailsResponse build() {
            return $;
        }
    }

}
