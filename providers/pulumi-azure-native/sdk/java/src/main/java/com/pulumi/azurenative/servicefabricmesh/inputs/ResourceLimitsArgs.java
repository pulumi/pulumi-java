// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * This type describes the resource limits for a given container. It describes the most amount of resources a container is allowed to use before being restarted.
 * 
 */
public final class ResourceLimitsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceLimitsArgs Empty = new ResourceLimitsArgs();

    /**
     * CPU limits in cores. At present, only full cores are supported.
     * 
     */
    @Import(name="cpu")
    private @Nullable Output<Double> cpu;

    /**
     * @return CPU limits in cores. At present, only full cores are supported.
     * 
     */
    public Optional<Output<Double>> cpu() {
        return Optional.ofNullable(this.cpu);
    }

    /**
     * The memory limit in GB.
     * 
     */
    @Import(name="memoryInGB")
    private @Nullable Output<Double> memoryInGB;

    /**
     * @return The memory limit in GB.
     * 
     */
    public Optional<Output<Double>> memoryInGB() {
        return Optional.ofNullable(this.memoryInGB);
    }

    private ResourceLimitsArgs() {}

    private ResourceLimitsArgs(ResourceLimitsArgs $) {
        this.cpu = $.cpu;
        this.memoryInGB = $.memoryInGB;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceLimitsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceLimitsArgs $;

        public Builder() {
            $ = new ResourceLimitsArgs();
        }

        public Builder(ResourceLimitsArgs defaults) {
            $ = new ResourceLimitsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpu CPU limits in cores. At present, only full cores are supported.
         * 
         * @return builder
         * 
         */
        public Builder cpu(@Nullable Output<Double> cpu) {
            $.cpu = cpu;
            return this;
        }

        /**
         * @param cpu CPU limits in cores. At present, only full cores are supported.
         * 
         * @return builder
         * 
         */
        public Builder cpu(Double cpu) {
            return cpu(Output.of(cpu));
        }

        /**
         * @param memoryInGB The memory limit in GB.
         * 
         * @return builder
         * 
         */
        public Builder memoryInGB(@Nullable Output<Double> memoryInGB) {
            $.memoryInGB = memoryInGB;
            return this;
        }

        /**
         * @param memoryInGB The memory limit in GB.
         * 
         * @return builder
         * 
         */
        public Builder memoryInGB(Double memoryInGB) {
            return memoryInGB(Output.of(memoryInGB));
        }

        public ResourceLimitsArgs build() {
            return $;
        }
    }

}
