// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.azurenative.storage.inputs.BlobInventoryPolicyRuleResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The storage account blob inventory policy rules.
 * 
 */
public final class BlobInventoryPolicySchemaResponse extends com.pulumi.resources.InvokeArgs {

    public static final BlobInventoryPolicySchemaResponse Empty = new BlobInventoryPolicySchemaResponse();

    /**
     * Container name where blob inventory files are stored. Must be pre-created.
     * 
     */
    @Import(name="destination", required=true)
    private String destination;

    /**
     * @return Container name where blob inventory files are stored. Must be pre-created.
     * 
     */
    public String destination() {
        return this.destination;
    }

    /**
     * Policy is enabled if set to true.
     * 
     */
    @Import(name="enabled", required=true)
    private Boolean enabled;

    /**
     * @return Policy is enabled if set to true.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * The storage account blob inventory policy rules. The rule is applied when it is enabled.
     * 
     */
    @Import(name="rules", required=true)
    private List<BlobInventoryPolicyRuleResponse> rules;

    /**
     * @return The storage account blob inventory policy rules. The rule is applied when it is enabled.
     * 
     */
    public List<BlobInventoryPolicyRuleResponse> rules() {
        return this.rules;
    }

    /**
     * The valid value is Inventory
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The valid value is Inventory
     * 
     */
    public String type() {
        return this.type;
    }

    private BlobInventoryPolicySchemaResponse() {}

    private BlobInventoryPolicySchemaResponse(BlobInventoryPolicySchemaResponse $) {
        this.destination = $.destination;
        this.enabled = $.enabled;
        this.rules = $.rules;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlobInventoryPolicySchemaResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlobInventoryPolicySchemaResponse $;

        public Builder() {
            $ = new BlobInventoryPolicySchemaResponse();
        }

        public Builder(BlobInventoryPolicySchemaResponse defaults) {
            $ = new BlobInventoryPolicySchemaResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param destination Container name where blob inventory files are stored. Must be pre-created.
         * 
         * @return builder
         * 
         */
        public Builder destination(String destination) {
            $.destination = destination;
            return this;
        }

        /**
         * @param enabled Policy is enabled if set to true.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param rules The storage account blob inventory policy rules. The rule is applied when it is enabled.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<BlobInventoryPolicyRuleResponse> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules The storage account blob inventory policy rules. The rule is applied when it is enabled.
         * 
         * @return builder
         * 
         */
        public Builder rules(BlobInventoryPolicyRuleResponse... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param type The valid value is Inventory
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public BlobInventoryPolicySchemaResponse build() {
            $.destination = Objects.requireNonNull($.destination, "expected parameter 'destination' to be non-null");
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.rules = Objects.requireNonNull($.rules, "expected parameter 'rules' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
