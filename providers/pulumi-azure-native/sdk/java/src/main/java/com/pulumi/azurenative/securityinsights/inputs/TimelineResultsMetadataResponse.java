// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.inputs;

import com.pulumi.azurenative.securityinsights.inputs.TimelineAggregationResponse;
import com.pulumi.azurenative.securityinsights.inputs.TimelineErrorResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Expansion result metadata.
 * 
 */
public final class TimelineResultsMetadataResponse extends com.pulumi.resources.InvokeArgs {

    public static final TimelineResultsMetadataResponse Empty = new TimelineResultsMetadataResponse();

    /**
     * timeline aggregation per kind
     * 
     */
    @Import(name="aggregations", required=true)
    private List<TimelineAggregationResponse> aggregations;

    public List<TimelineAggregationResponse> aggregations() {
        return this.aggregations;
    }

    /**
     * information about the failure queries
     * 
     */
    @Import(name="errors")
    private @Nullable List<TimelineErrorResponse> errors;

    public Optional<List<TimelineErrorResponse>> errors() {
        return Optional.ofNullable(this.errors);
    }

    /**
     * the total items found for the timeline request
     * 
     */
    @Import(name="totalCount", required=true)
    private Integer totalCount;

    public Integer totalCount() {
        return this.totalCount;
    }

    private TimelineResultsMetadataResponse() {}

    private TimelineResultsMetadataResponse(TimelineResultsMetadataResponse $) {
        this.aggregations = $.aggregations;
        this.errors = $.errors;
        this.totalCount = $.totalCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TimelineResultsMetadataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TimelineResultsMetadataResponse $;

        public Builder() {
            $ = new TimelineResultsMetadataResponse();
        }

        public Builder(TimelineResultsMetadataResponse defaults) {
            $ = new TimelineResultsMetadataResponse(Objects.requireNonNull(defaults));
        }

        public Builder aggregations(List<TimelineAggregationResponse> aggregations) {
            $.aggregations = aggregations;
            return this;
        }

        public Builder aggregations(TimelineAggregationResponse... aggregations) {
            return aggregations(List.of(aggregations));
        }

        public Builder errors(@Nullable List<TimelineErrorResponse> errors) {
            $.errors = errors;
            return this;
        }

        public Builder errors(TimelineErrorResponse... errors) {
            return errors(List.of(errors));
        }

        public Builder totalCount(Integer totalCount) {
            $.totalCount = totalCount;
            return this;
        }

        public TimelineResultsMetadataResponse build() {
            $.aggregations = Objects.requireNonNull($.aggregations, "expected parameter 'aggregations' to be non-null");
            $.totalCount = Objects.requireNonNull($.totalCount, "expected parameter 'totalCount' to be non-null");
            return $;
        }
    }

}
