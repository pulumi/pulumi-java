// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.confluent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Confluent offer detail
 * 
 */
public final class OrganizationResourcePropertiesOfferDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationResourcePropertiesOfferDetailArgs Empty = new OrganizationResourcePropertiesOfferDetailArgs();

    /**
     * Offer Id
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Offer Plan Id
     * 
     */
    @Import(name="planId")
    private @Nullable Output<String> planId;

    public Optional<Output<String>> planId() {
        return Optional.ofNullable(this.planId);
    }

    /**
     * Offer Plan Name
     * 
     */
    @Import(name="planName")
    private @Nullable Output<String> planName;

    public Optional<Output<String>> planName() {
        return Optional.ofNullable(this.planName);
    }

    /**
     * Publisher Id
     * 
     */
    @Import(name="publisherId")
    private @Nullable Output<String> publisherId;

    public Optional<Output<String>> publisherId() {
        return Optional.ofNullable(this.publisherId);
    }

    /**
     * Offer Plan Term unit
     * 
     */
    @Import(name="termUnit")
    private @Nullable Output<String> termUnit;

    public Optional<Output<String>> termUnit() {
        return Optional.ofNullable(this.termUnit);
    }

    private OrganizationResourcePropertiesOfferDetailArgs() {}

    private OrganizationResourcePropertiesOfferDetailArgs(OrganizationResourcePropertiesOfferDetailArgs $) {
        this.id = $.id;
        this.planId = $.planId;
        this.planName = $.planName;
        this.publisherId = $.publisherId;
        this.termUnit = $.termUnit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationResourcePropertiesOfferDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationResourcePropertiesOfferDetailArgs $;

        public Builder() {
            $ = new OrganizationResourcePropertiesOfferDetailArgs();
        }

        public Builder(OrganizationResourcePropertiesOfferDetailArgs defaults) {
            $ = new OrganizationResourcePropertiesOfferDetailArgs(Objects.requireNonNull(defaults));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder planId(@Nullable Output<String> planId) {
            $.planId = planId;
            return this;
        }

        public Builder planId(String planId) {
            return planId(Output.of(planId));
        }

        public Builder planName(@Nullable Output<String> planName) {
            $.planName = planName;
            return this;
        }

        public Builder planName(String planName) {
            return planName(Output.of(planName));
        }

        public Builder publisherId(@Nullable Output<String> publisherId) {
            $.publisherId = publisherId;
            return this;
        }

        public Builder publisherId(String publisherId) {
            return publisherId(Output.of(publisherId));
        }

        public Builder termUnit(@Nullable Output<String> termUnit) {
            $.termUnit = termUnit;
            return this;
        }

        public Builder termUnit(String termUnit) {
            return termUnit(Output.of(termUnit));
        }

        public OrganizationResourcePropertiesOfferDetailArgs build() {
            return $;
        }
    }

}
