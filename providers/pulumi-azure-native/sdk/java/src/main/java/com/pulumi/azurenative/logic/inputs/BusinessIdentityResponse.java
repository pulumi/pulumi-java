// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The integration account partner&#39;s business identity.
 * 
 */
public final class BusinessIdentityResponse extends com.pulumi.resources.InvokeArgs {

    public static final BusinessIdentityResponse Empty = new BusinessIdentityResponse();

    /**
     * The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
     * 
     */
    @Import(name="qualifier", required=true)
    private String qualifier;

    public String qualifier() {
        return this.qualifier;
    }

    /**
     * The user defined business identity value.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    public String value() {
        return this.value;
    }

    private BusinessIdentityResponse() {}

    private BusinessIdentityResponse(BusinessIdentityResponse $) {
        this.qualifier = $.qualifier;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BusinessIdentityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BusinessIdentityResponse $;

        public Builder() {
            $ = new BusinessIdentityResponse();
        }

        public Builder(BusinessIdentityResponse defaults) {
            $ = new BusinessIdentityResponse(Objects.requireNonNull(defaults));
        }

        public Builder qualifier(String qualifier) {
            $.qualifier = qualifier;
            return this;
        }

        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public BusinessIdentityResponse build() {
            $.qualifier = Objects.requireNonNull($.qualifier, "expected parameter 'qualifier' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
