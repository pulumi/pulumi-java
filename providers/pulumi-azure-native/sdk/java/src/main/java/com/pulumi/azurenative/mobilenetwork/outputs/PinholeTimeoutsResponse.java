// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.mobilenetwork.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PinholeTimeoutsResponse {
    /**
     * @return Pinhole timeout for ICMP pinholes in seconds. Default for ICMP Echo is 60 seconds per RFC 5508 section 3.2.
     * 
     */
    private final @Nullable Integer icmp;
    /**
     * @return Pinhole timeout for TCP pinholes in seconds. Default for TCP is 2 hours 4 minutes per RFC 5382 section 5.
     * 
     */
    private final @Nullable Integer tcp;
    /**
     * @return Pinhole timeout for UDP pinholes in seconds. Default for UDP is 5 minutes per RFC 4787 section 4.3.
     * 
     */
    private final @Nullable Integer udp;

    @CustomType.Constructor
    private PinholeTimeoutsResponse(
        @CustomType.Parameter("icmp") @Nullable Integer icmp,
        @CustomType.Parameter("tcp") @Nullable Integer tcp,
        @CustomType.Parameter("udp") @Nullable Integer udp) {
        this.icmp = icmp;
        this.tcp = tcp;
        this.udp = udp;
    }

    /**
     * @return Pinhole timeout for ICMP pinholes in seconds. Default for ICMP Echo is 60 seconds per RFC 5508 section 3.2.
     * 
     */
    public Optional<Integer> icmp() {
        return Optional.ofNullable(this.icmp);
    }
    /**
     * @return Pinhole timeout for TCP pinholes in seconds. Default for TCP is 2 hours 4 minutes per RFC 5382 section 5.
     * 
     */
    public Optional<Integer> tcp() {
        return Optional.ofNullable(this.tcp);
    }
    /**
     * @return Pinhole timeout for UDP pinholes in seconds. Default for UDP is 5 minutes per RFC 4787 section 4.3.
     * 
     */
    public Optional<Integer> udp() {
        return Optional.ofNullable(this.udp);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PinholeTimeoutsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer icmp;
        private @Nullable Integer tcp;
        private @Nullable Integer udp;

        public Builder() {
    	      // Empty
        }

        public Builder(PinholeTimeoutsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.icmp = defaults.icmp;
    	      this.tcp = defaults.tcp;
    	      this.udp = defaults.udp;
        }

        public Builder icmp(@Nullable Integer icmp) {
            this.icmp = icmp;
            return this;
        }
        public Builder tcp(@Nullable Integer tcp) {
            this.tcp = tcp;
            return this;
        }
        public Builder udp(@Nullable Integer udp) {
            this.udp = udp;
            return this;
        }        public PinholeTimeoutsResponse build() {
            return new PinholeTimeoutsResponse(icmp, tcp, udp);
        }
    }
}
