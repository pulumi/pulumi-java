// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.enums.VpnGatewayTunnelingProtocol;
import com.pulumi.azurenative.network.inputs.IpsecPolicyArgs;
import com.pulumi.azurenative.network.inputs.P2SVpnServerConfigRadiusClientRootCertificateArgs;
import com.pulumi.azurenative.network.inputs.P2SVpnServerConfigRadiusServerRootCertificateArgs;
import com.pulumi.azurenative.network.inputs.P2SVpnServerConfigVpnClientRevokedCertificateArgs;
import com.pulumi.azurenative.network.inputs.P2SVpnServerConfigVpnClientRootCertificateArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class P2sVpnServerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final P2sVpnServerConfigurationArgs Empty = new P2sVpnServerConfigurationArgs();

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Radius client root certificate of P2SVpnServerConfiguration.
     * 
     */
    @Import(name="p2SVpnServerConfigRadiusClientRootCertificates")
    private @Nullable Output<List<P2SVpnServerConfigRadiusClientRootCertificateArgs>> p2SVpnServerConfigRadiusClientRootCertificates;

    public Optional<Output<List<P2SVpnServerConfigRadiusClientRootCertificateArgs>>> p2SVpnServerConfigRadiusClientRootCertificates() {
        return Optional.ofNullable(this.p2SVpnServerConfigRadiusClientRootCertificates);
    }

    /**
     * Radius Server root certificate of P2SVpnServerConfiguration.
     * 
     */
    @Import(name="p2SVpnServerConfigRadiusServerRootCertificates")
    private @Nullable Output<List<P2SVpnServerConfigRadiusServerRootCertificateArgs>> p2SVpnServerConfigRadiusServerRootCertificates;

    public Optional<Output<List<P2SVpnServerConfigRadiusServerRootCertificateArgs>>> p2SVpnServerConfigRadiusServerRootCertificates() {
        return Optional.ofNullable(this.p2SVpnServerConfigRadiusServerRootCertificates);
    }

    /**
     * VPN client revoked certificate of P2SVpnServerConfiguration.
     * 
     */
    @Import(name="p2SVpnServerConfigVpnClientRevokedCertificates")
    private @Nullable Output<List<P2SVpnServerConfigVpnClientRevokedCertificateArgs>> p2SVpnServerConfigVpnClientRevokedCertificates;

    public Optional<Output<List<P2SVpnServerConfigVpnClientRevokedCertificateArgs>>> p2SVpnServerConfigVpnClientRevokedCertificates() {
        return Optional.ofNullable(this.p2SVpnServerConfigVpnClientRevokedCertificates);
    }

    /**
     * VPN client root certificate of P2SVpnServerConfiguration.
     * 
     */
    @Import(name="p2SVpnServerConfigVpnClientRootCertificates")
    private @Nullable Output<List<P2SVpnServerConfigVpnClientRootCertificateArgs>> p2SVpnServerConfigVpnClientRootCertificates;

    public Optional<Output<List<P2SVpnServerConfigVpnClientRootCertificateArgs>>> p2SVpnServerConfigVpnClientRootCertificates() {
        return Optional.ofNullable(this.p2SVpnServerConfigVpnClientRootCertificates);
    }

    /**
     * The name of the P2SVpnServerConfiguration.
     * 
     */
    @Import(name="p2SVpnServerConfigurationName")
    private @Nullable Output<String> p2SVpnServerConfigurationName;

    public Optional<Output<String>> p2SVpnServerConfigurationName() {
        return Optional.ofNullable(this.p2SVpnServerConfigurationName);
    }

    /**
     * The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
     * 
     */
    @Import(name="radiusServerAddress")
    private @Nullable Output<String> radiusServerAddress;

    public Optional<Output<String>> radiusServerAddress() {
        return Optional.ofNullable(this.radiusServerAddress);
    }

    /**
     * The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
     * 
     */
    @Import(name="radiusServerSecret")
    private @Nullable Output<String> radiusServerSecret;

    public Optional<Output<String>> radiusServerSecret() {
        return Optional.ofNullable(this.radiusServerSecret);
    }

    /**
     * The resource group name of the VirtualWan.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the VirtualWan.
     * 
     */
    @Import(name="virtualWanName", required=true)
    private Output<String> virtualWanName;

    public Output<String> virtualWanName() {
        return this.virtualWanName;
    }

    /**
     * VpnClientIpsecPolicies for P2SVpnServerConfiguration.
     * 
     */
    @Import(name="vpnClientIpsecPolicies")
    private @Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies;

    public Optional<Output<List<IpsecPolicyArgs>>> vpnClientIpsecPolicies() {
        return Optional.ofNullable(this.vpnClientIpsecPolicies);
    }

    /**
     * VPN protocols for the P2SVpnServerConfiguration.
     * 
     */
    @Import(name="vpnProtocols")
    private @Nullable Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols;

    public Optional<Output<List<Either<String,VpnGatewayTunnelingProtocol>>>> vpnProtocols() {
        return Optional.ofNullable(this.vpnProtocols);
    }

    private P2sVpnServerConfigurationArgs() {}

    private P2sVpnServerConfigurationArgs(P2sVpnServerConfigurationArgs $) {
        this.id = $.id;
        this.name = $.name;
        this.p2SVpnServerConfigRadiusClientRootCertificates = $.p2SVpnServerConfigRadiusClientRootCertificates;
        this.p2SVpnServerConfigRadiusServerRootCertificates = $.p2SVpnServerConfigRadiusServerRootCertificates;
        this.p2SVpnServerConfigVpnClientRevokedCertificates = $.p2SVpnServerConfigVpnClientRevokedCertificates;
        this.p2SVpnServerConfigVpnClientRootCertificates = $.p2SVpnServerConfigVpnClientRootCertificates;
        this.p2SVpnServerConfigurationName = $.p2SVpnServerConfigurationName;
        this.radiusServerAddress = $.radiusServerAddress;
        this.radiusServerSecret = $.radiusServerSecret;
        this.resourceGroupName = $.resourceGroupName;
        this.virtualWanName = $.virtualWanName;
        this.vpnClientIpsecPolicies = $.vpnClientIpsecPolicies;
        this.vpnProtocols = $.vpnProtocols;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(P2sVpnServerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private P2sVpnServerConfigurationArgs $;

        public Builder() {
            $ = new P2sVpnServerConfigurationArgs();
        }

        public Builder(P2sVpnServerConfigurationArgs defaults) {
            $ = new P2sVpnServerConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder p2SVpnServerConfigRadiusClientRootCertificates(@Nullable Output<List<P2SVpnServerConfigRadiusClientRootCertificateArgs>> p2SVpnServerConfigRadiusClientRootCertificates) {
            $.p2SVpnServerConfigRadiusClientRootCertificates = p2SVpnServerConfigRadiusClientRootCertificates;
            return this;
        }

        public Builder p2SVpnServerConfigRadiusClientRootCertificates(List<P2SVpnServerConfigRadiusClientRootCertificateArgs> p2SVpnServerConfigRadiusClientRootCertificates) {
            return p2SVpnServerConfigRadiusClientRootCertificates(Output.of(p2SVpnServerConfigRadiusClientRootCertificates));
        }

        public Builder p2SVpnServerConfigRadiusClientRootCertificates(P2SVpnServerConfigRadiusClientRootCertificateArgs... p2SVpnServerConfigRadiusClientRootCertificates) {
            return p2SVpnServerConfigRadiusClientRootCertificates(List.of(p2SVpnServerConfigRadiusClientRootCertificates));
        }

        public Builder p2SVpnServerConfigRadiusServerRootCertificates(@Nullable Output<List<P2SVpnServerConfigRadiusServerRootCertificateArgs>> p2SVpnServerConfigRadiusServerRootCertificates) {
            $.p2SVpnServerConfigRadiusServerRootCertificates = p2SVpnServerConfigRadiusServerRootCertificates;
            return this;
        }

        public Builder p2SVpnServerConfigRadiusServerRootCertificates(List<P2SVpnServerConfigRadiusServerRootCertificateArgs> p2SVpnServerConfigRadiusServerRootCertificates) {
            return p2SVpnServerConfigRadiusServerRootCertificates(Output.of(p2SVpnServerConfigRadiusServerRootCertificates));
        }

        public Builder p2SVpnServerConfigRadiusServerRootCertificates(P2SVpnServerConfigRadiusServerRootCertificateArgs... p2SVpnServerConfigRadiusServerRootCertificates) {
            return p2SVpnServerConfigRadiusServerRootCertificates(List.of(p2SVpnServerConfigRadiusServerRootCertificates));
        }

        public Builder p2SVpnServerConfigVpnClientRevokedCertificates(@Nullable Output<List<P2SVpnServerConfigVpnClientRevokedCertificateArgs>> p2SVpnServerConfigVpnClientRevokedCertificates) {
            $.p2SVpnServerConfigVpnClientRevokedCertificates = p2SVpnServerConfigVpnClientRevokedCertificates;
            return this;
        }

        public Builder p2SVpnServerConfigVpnClientRevokedCertificates(List<P2SVpnServerConfigVpnClientRevokedCertificateArgs> p2SVpnServerConfigVpnClientRevokedCertificates) {
            return p2SVpnServerConfigVpnClientRevokedCertificates(Output.of(p2SVpnServerConfigVpnClientRevokedCertificates));
        }

        public Builder p2SVpnServerConfigVpnClientRevokedCertificates(P2SVpnServerConfigVpnClientRevokedCertificateArgs... p2SVpnServerConfigVpnClientRevokedCertificates) {
            return p2SVpnServerConfigVpnClientRevokedCertificates(List.of(p2SVpnServerConfigVpnClientRevokedCertificates));
        }

        public Builder p2SVpnServerConfigVpnClientRootCertificates(@Nullable Output<List<P2SVpnServerConfigVpnClientRootCertificateArgs>> p2SVpnServerConfigVpnClientRootCertificates) {
            $.p2SVpnServerConfigVpnClientRootCertificates = p2SVpnServerConfigVpnClientRootCertificates;
            return this;
        }

        public Builder p2SVpnServerConfigVpnClientRootCertificates(List<P2SVpnServerConfigVpnClientRootCertificateArgs> p2SVpnServerConfigVpnClientRootCertificates) {
            return p2SVpnServerConfigVpnClientRootCertificates(Output.of(p2SVpnServerConfigVpnClientRootCertificates));
        }

        public Builder p2SVpnServerConfigVpnClientRootCertificates(P2SVpnServerConfigVpnClientRootCertificateArgs... p2SVpnServerConfigVpnClientRootCertificates) {
            return p2SVpnServerConfigVpnClientRootCertificates(List.of(p2SVpnServerConfigVpnClientRootCertificates));
        }

        public Builder p2SVpnServerConfigurationName(@Nullable Output<String> p2SVpnServerConfigurationName) {
            $.p2SVpnServerConfigurationName = p2SVpnServerConfigurationName;
            return this;
        }

        public Builder p2SVpnServerConfigurationName(String p2SVpnServerConfigurationName) {
            return p2SVpnServerConfigurationName(Output.of(p2SVpnServerConfigurationName));
        }

        public Builder radiusServerAddress(@Nullable Output<String> radiusServerAddress) {
            $.radiusServerAddress = radiusServerAddress;
            return this;
        }

        public Builder radiusServerAddress(String radiusServerAddress) {
            return radiusServerAddress(Output.of(radiusServerAddress));
        }

        public Builder radiusServerSecret(@Nullable Output<String> radiusServerSecret) {
            $.radiusServerSecret = radiusServerSecret;
            return this;
        }

        public Builder radiusServerSecret(String radiusServerSecret) {
            return radiusServerSecret(Output.of(radiusServerSecret));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder virtualWanName(Output<String> virtualWanName) {
            $.virtualWanName = virtualWanName;
            return this;
        }

        public Builder virtualWanName(String virtualWanName) {
            return virtualWanName(Output.of(virtualWanName));
        }

        public Builder vpnClientIpsecPolicies(@Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies) {
            $.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
            return this;
        }

        public Builder vpnClientIpsecPolicies(List<IpsecPolicyArgs> vpnClientIpsecPolicies) {
            return vpnClientIpsecPolicies(Output.of(vpnClientIpsecPolicies));
        }

        public Builder vpnClientIpsecPolicies(IpsecPolicyArgs... vpnClientIpsecPolicies) {
            return vpnClientIpsecPolicies(List.of(vpnClientIpsecPolicies));
        }

        public Builder vpnProtocols(@Nullable Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols) {
            $.vpnProtocols = vpnProtocols;
            return this;
        }

        public Builder vpnProtocols(List<Either<String,VpnGatewayTunnelingProtocol>> vpnProtocols) {
            return vpnProtocols(Output.of(vpnProtocols));
        }

        public Builder vpnProtocols(Either<String,VpnGatewayTunnelingProtocol>... vpnProtocols) {
            return vpnProtocols(List.of(vpnProtocols));
        }

        public P2sVpnServerConfigurationArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.virtualWanName = Objects.requireNonNull($.virtualWanName, "expected parameter 'virtualWanName' to be non-null");
            return $;
        }
    }

}
