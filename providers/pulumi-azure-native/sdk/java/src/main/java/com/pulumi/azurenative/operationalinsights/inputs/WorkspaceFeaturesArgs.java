// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Workspace features.
 * 
 */
public final class WorkspaceFeaturesArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceFeaturesArgs Empty = new WorkspaceFeaturesArgs();

    /**
     * Dedicated LA cluster resourceId that is linked to the workspaces.
     * 
     */
    @Import(name="clusterResourceId")
    private @Nullable Output<String> clusterResourceId;

    /**
     * @return Dedicated LA cluster resourceId that is linked to the workspaces.
     * 
     */
    public Optional<Output<String>> clusterResourceId() {
        return Optional.ofNullable(this.clusterResourceId);
    }

    /**
     * Disable Non-AAD based Auth.
     * 
     */
    @Import(name="disableLocalAuth")
    private @Nullable Output<Boolean> disableLocalAuth;

    /**
     * @return Disable Non-AAD based Auth.
     * 
     */
    public Optional<Output<Boolean>> disableLocalAuth() {
        return Optional.ofNullable(this.disableLocalAuth);
    }

    /**
     * Flag that indicate if data should be exported.
     * 
     */
    @Import(name="enableDataExport")
    private @Nullable Output<Boolean> enableDataExport;

    /**
     * @return Flag that indicate if data should be exported.
     * 
     */
    public Optional<Output<Boolean>> enableDataExport() {
        return Optional.ofNullable(this.enableDataExport);
    }

    /**
     * Flag that indicate which permission to use - resource or workspace or both.
     * 
     */
    @Import(name="enableLogAccessUsingOnlyResourcePermissions")
    private @Nullable Output<Boolean> enableLogAccessUsingOnlyResourcePermissions;

    /**
     * @return Flag that indicate which permission to use - resource or workspace or both.
     * 
     */
    public Optional<Output<Boolean>> enableLogAccessUsingOnlyResourcePermissions() {
        return Optional.ofNullable(this.enableLogAccessUsingOnlyResourcePermissions);
    }

    /**
     * Flag that describes if we want to remove the data after 30 days.
     * 
     */
    @Import(name="immediatePurgeDataOn30Days")
    private @Nullable Output<Boolean> immediatePurgeDataOn30Days;

    /**
     * @return Flag that describes if we want to remove the data after 30 days.
     * 
     */
    public Optional<Output<Boolean>> immediatePurgeDataOn30Days() {
        return Optional.ofNullable(this.immediatePurgeDataOn30Days);
    }

    private WorkspaceFeaturesArgs() {}

    private WorkspaceFeaturesArgs(WorkspaceFeaturesArgs $) {
        this.clusterResourceId = $.clusterResourceId;
        this.disableLocalAuth = $.disableLocalAuth;
        this.enableDataExport = $.enableDataExport;
        this.enableLogAccessUsingOnlyResourcePermissions = $.enableLogAccessUsingOnlyResourcePermissions;
        this.immediatePurgeDataOn30Days = $.immediatePurgeDataOn30Days;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceFeaturesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceFeaturesArgs $;

        public Builder() {
            $ = new WorkspaceFeaturesArgs();
        }

        public Builder(WorkspaceFeaturesArgs defaults) {
            $ = new WorkspaceFeaturesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterResourceId Dedicated LA cluster resourceId that is linked to the workspaces.
         * 
         * @return builder
         * 
         */
        public Builder clusterResourceId(@Nullable Output<String> clusterResourceId) {
            $.clusterResourceId = clusterResourceId;
            return this;
        }

        /**
         * @param clusterResourceId Dedicated LA cluster resourceId that is linked to the workspaces.
         * 
         * @return builder
         * 
         */
        public Builder clusterResourceId(String clusterResourceId) {
            return clusterResourceId(Output.of(clusterResourceId));
        }

        /**
         * @param disableLocalAuth Disable Non-AAD based Auth.
         * 
         * @return builder
         * 
         */
        public Builder disableLocalAuth(@Nullable Output<Boolean> disableLocalAuth) {
            $.disableLocalAuth = disableLocalAuth;
            return this;
        }

        /**
         * @param disableLocalAuth Disable Non-AAD based Auth.
         * 
         * @return builder
         * 
         */
        public Builder disableLocalAuth(Boolean disableLocalAuth) {
            return disableLocalAuth(Output.of(disableLocalAuth));
        }

        /**
         * @param enableDataExport Flag that indicate if data should be exported.
         * 
         * @return builder
         * 
         */
        public Builder enableDataExport(@Nullable Output<Boolean> enableDataExport) {
            $.enableDataExport = enableDataExport;
            return this;
        }

        /**
         * @param enableDataExport Flag that indicate if data should be exported.
         * 
         * @return builder
         * 
         */
        public Builder enableDataExport(Boolean enableDataExport) {
            return enableDataExport(Output.of(enableDataExport));
        }

        /**
         * @param enableLogAccessUsingOnlyResourcePermissions Flag that indicate which permission to use - resource or workspace or both.
         * 
         * @return builder
         * 
         */
        public Builder enableLogAccessUsingOnlyResourcePermissions(@Nullable Output<Boolean> enableLogAccessUsingOnlyResourcePermissions) {
            $.enableLogAccessUsingOnlyResourcePermissions = enableLogAccessUsingOnlyResourcePermissions;
            return this;
        }

        /**
         * @param enableLogAccessUsingOnlyResourcePermissions Flag that indicate which permission to use - resource or workspace or both.
         * 
         * @return builder
         * 
         */
        public Builder enableLogAccessUsingOnlyResourcePermissions(Boolean enableLogAccessUsingOnlyResourcePermissions) {
            return enableLogAccessUsingOnlyResourcePermissions(Output.of(enableLogAccessUsingOnlyResourcePermissions));
        }

        /**
         * @param immediatePurgeDataOn30Days Flag that describes if we want to remove the data after 30 days.
         * 
         * @return builder
         * 
         */
        public Builder immediatePurgeDataOn30Days(@Nullable Output<Boolean> immediatePurgeDataOn30Days) {
            $.immediatePurgeDataOn30Days = immediatePurgeDataOn30Days;
            return this;
        }

        /**
         * @param immediatePurgeDataOn30Days Flag that describes if we want to remove the data after 30 days.
         * 
         * @return builder
         * 
         */
        public Builder immediatePurgeDataOn30Days(Boolean immediatePurgeDataOn30Days) {
            return immediatePurgeDataOn30Days(Output.of(immediatePurgeDataOn30Days));
        }

        public WorkspaceFeaturesArgs build() {
            return $;
        }
    }

}
