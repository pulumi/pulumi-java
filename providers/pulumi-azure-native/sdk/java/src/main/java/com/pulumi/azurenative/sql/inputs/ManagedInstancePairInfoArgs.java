// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Pairs of Managed Instances in the failover group.
 * 
 */
public final class ManagedInstancePairInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstancePairInfoArgs Empty = new ManagedInstancePairInfoArgs();

    /**
     * Id of Partner Managed Instance in pair.
     * 
     */
    @Import(name="partnerManagedInstanceId")
    private @Nullable Output<String> partnerManagedInstanceId;

    /**
     * @return Id of Partner Managed Instance in pair.
     * 
     */
    public Optional<Output<String>> partnerManagedInstanceId() {
        return Optional.ofNullable(this.partnerManagedInstanceId);
    }

    /**
     * Id of Primary Managed Instance in pair.
     * 
     */
    @Import(name="primaryManagedInstanceId")
    private @Nullable Output<String> primaryManagedInstanceId;

    /**
     * @return Id of Primary Managed Instance in pair.
     * 
     */
    public Optional<Output<String>> primaryManagedInstanceId() {
        return Optional.ofNullable(this.primaryManagedInstanceId);
    }

    private ManagedInstancePairInfoArgs() {}

    private ManagedInstancePairInfoArgs(ManagedInstancePairInfoArgs $) {
        this.partnerManagedInstanceId = $.partnerManagedInstanceId;
        this.primaryManagedInstanceId = $.primaryManagedInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstancePairInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstancePairInfoArgs $;

        public Builder() {
            $ = new ManagedInstancePairInfoArgs();
        }

        public Builder(ManagedInstancePairInfoArgs defaults) {
            $ = new ManagedInstancePairInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param partnerManagedInstanceId Id of Partner Managed Instance in pair.
         * 
         * @return builder
         * 
         */
        public Builder partnerManagedInstanceId(@Nullable Output<String> partnerManagedInstanceId) {
            $.partnerManagedInstanceId = partnerManagedInstanceId;
            return this;
        }

        /**
         * @param partnerManagedInstanceId Id of Partner Managed Instance in pair.
         * 
         * @return builder
         * 
         */
        public Builder partnerManagedInstanceId(String partnerManagedInstanceId) {
            return partnerManagedInstanceId(Output.of(partnerManagedInstanceId));
        }

        /**
         * @param primaryManagedInstanceId Id of Primary Managed Instance in pair.
         * 
         * @return builder
         * 
         */
        public Builder primaryManagedInstanceId(@Nullable Output<String> primaryManagedInstanceId) {
            $.primaryManagedInstanceId = primaryManagedInstanceId;
            return this;
        }

        /**
         * @param primaryManagedInstanceId Id of Primary Managed Instance in pair.
         * 
         * @return builder
         * 
         */
        public Builder primaryManagedInstanceId(String primaryManagedInstanceId) {
            return primaryManagedInstanceId(Output.of(primaryManagedInstanceId));
        }

        public ManagedInstancePairInfoArgs build() {
            return $;
        }
    }

}
