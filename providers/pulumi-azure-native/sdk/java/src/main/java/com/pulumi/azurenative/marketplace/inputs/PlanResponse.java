// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.marketplace.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PlanResponse extends com.pulumi.resources.InvokeArgs {

    public static final PlanResponse Empty = new PlanResponse();

    /**
     * Plan accessibility
     * 
     */
    @Import(name="accessibility")
    private @Nullable String accessibility;

    public Optional<String> accessibility() {
        return Optional.ofNullable(this.accessibility);
    }

    /**
     * Alternative stack type
     * 
     */
    @Import(name="altStackReference", required=true)
    private String altStackReference;

    public String altStackReference() {
        return this.altStackReference;
    }

    /**
     * Friendly name for the plan for display in the marketplace
     * 
     */
    @Import(name="planDisplayName", required=true)
    private String planDisplayName;

    public String planDisplayName() {
        return this.planDisplayName;
    }

    /**
     * Text identifier for this plan
     * 
     */
    @Import(name="planId", required=true)
    private String planId;

    public String planId() {
        return this.planId;
    }

    /**
     * Identifier for this plan
     * 
     */
    @Import(name="skuId", required=true)
    private String skuId;

    public String skuId() {
        return this.skuId;
    }

    /**
     * Stack type (classic or arm)
     * 
     */
    @Import(name="stackType", required=true)
    private String stackType;

    public String stackType() {
        return this.stackType;
    }

    private PlanResponse() {}

    private PlanResponse(PlanResponse $) {
        this.accessibility = $.accessibility;
        this.altStackReference = $.altStackReference;
        this.planDisplayName = $.planDisplayName;
        this.planId = $.planId;
        this.skuId = $.skuId;
        this.stackType = $.stackType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlanResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlanResponse $;

        public Builder() {
            $ = new PlanResponse();
        }

        public Builder(PlanResponse defaults) {
            $ = new PlanResponse(Objects.requireNonNull(defaults));
        }

        public Builder accessibility(@Nullable String accessibility) {
            $.accessibility = accessibility;
            return this;
        }

        public Builder altStackReference(String altStackReference) {
            $.altStackReference = altStackReference;
            return this;
        }

        public Builder planDisplayName(String planDisplayName) {
            $.planDisplayName = planDisplayName;
            return this;
        }

        public Builder planId(String planId) {
            $.planId = planId;
            return this;
        }

        public Builder skuId(String skuId) {
            $.skuId = skuId;
            return this;
        }

        public Builder stackType(String stackType) {
            $.stackType = stackType;
            return this;
        }

        public PlanResponse build() {
            $.altStackReference = Objects.requireNonNull($.altStackReference, "expected parameter 'altStackReference' to be non-null");
            $.planDisplayName = Objects.requireNonNull($.planDisplayName, "expected parameter 'planDisplayName' to be non-null");
            $.planId = Objects.requireNonNull($.planId, "expected parameter 'planId' to be non-null");
            $.skuId = Objects.requireNonNull($.skuId, "expected parameter 'skuId' to be non-null");
            $.stackType = Objects.requireNonNull($.stackType, "expected parameter 'stackType' to be non-null");
            return $;
        }
    }

}
