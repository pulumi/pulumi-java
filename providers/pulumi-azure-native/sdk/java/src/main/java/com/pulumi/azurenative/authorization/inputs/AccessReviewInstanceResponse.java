// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Access Review Instance.
 * 
 */
public final class AccessReviewInstanceResponse extends com.pulumi.resources.InvokeArgs {

    public static final AccessReviewInstanceResponse Empty = new AccessReviewInstanceResponse();

    /**
     * The DateTime when the review instance is scheduled to end.
     * 
     */
    @Import(name="endDateTime")
    private @Nullable String endDateTime;

    public Optional<String> endDateTime() {
        return Optional.ofNullable(this.endDateTime);
    }

    /**
     * The access review instance id.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * The access review instance name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * The DateTime when the review instance is scheduled to be start.
     * 
     */
    @Import(name="startDateTime")
    private @Nullable String startDateTime;

    public Optional<String> startDateTime() {
        return Optional.ofNullable(this.startDateTime);
    }

    /**
     * This read-only field specifies the status of an access review instance.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    public String status() {
        return this.status;
    }

    /**
     * The resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private AccessReviewInstanceResponse() {}

    private AccessReviewInstanceResponse(AccessReviewInstanceResponse $) {
        this.endDateTime = $.endDateTime;
        this.id = $.id;
        this.name = $.name;
        this.startDateTime = $.startDateTime;
        this.status = $.status;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessReviewInstanceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessReviewInstanceResponse $;

        public Builder() {
            $ = new AccessReviewInstanceResponse();
        }

        public Builder(AccessReviewInstanceResponse defaults) {
            $ = new AccessReviewInstanceResponse(Objects.requireNonNull(defaults));
        }

        public Builder endDateTime(@Nullable String endDateTime) {
            $.endDateTime = endDateTime;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder startDateTime(@Nullable String startDateTime) {
            $.startDateTime = startDateTime;
            return this;
        }

        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public AccessReviewInstanceResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
