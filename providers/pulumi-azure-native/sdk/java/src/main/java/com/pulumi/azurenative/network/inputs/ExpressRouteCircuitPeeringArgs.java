// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.ExpressRoutePeeringState;
import com.pulumi.azurenative.network.enums.ExpressRoutePeeringType;
import com.pulumi.azurenative.network.inputs.ExpressRouteCircuitConnectionArgs;
import com.pulumi.azurenative.network.inputs.ExpressRouteCircuitPeeringConfigArgs;
import com.pulumi.azurenative.network.inputs.ExpressRouteCircuitStatsArgs;
import com.pulumi.azurenative.network.inputs.Ipv6ExpressRouteCircuitPeeringConfigArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Peering in an ExpressRouteCircuit resource.
 * 
 */
public final class ExpressRouteCircuitPeeringArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExpressRouteCircuitPeeringArgs Empty = new ExpressRouteCircuitPeeringArgs();

    /**
     * The Azure ASN.
     * 
     */
    @Import(name="azureASN")
    private @Nullable Output<Integer> azureASN;

    public Optional<Output<Integer>> azureASN() {
        return Optional.ofNullable(this.azureASN);
    }

    /**
     * The list of circuit connections associated with Azure Private Peering for this circuit.
     * 
     */
    @Import(name="connections")
    private @Nullable Output<List<ExpressRouteCircuitConnectionArgs>> connections;

    public Optional<Output<List<ExpressRouteCircuitConnectionArgs>>> connections() {
        return Optional.ofNullable(this.connections);
    }

    /**
     * The GatewayManager Etag.
     * 
     */
    @Import(name="gatewayManagerEtag")
    private @Nullable Output<String> gatewayManagerEtag;

    public Optional<Output<String>> gatewayManagerEtag() {
        return Optional.ofNullable(this.gatewayManagerEtag);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The IPv6 peering configuration.
     * 
     */
    @Import(name="ipv6PeeringConfig")
    private @Nullable Output<Ipv6ExpressRouteCircuitPeeringConfigArgs> ipv6PeeringConfig;

    public Optional<Output<Ipv6ExpressRouteCircuitPeeringConfigArgs>> ipv6PeeringConfig() {
        return Optional.ofNullable(this.ipv6PeeringConfig);
    }

    /**
     * The Microsoft peering configuration.
     * 
     */
    @Import(name="microsoftPeeringConfig")
    private @Nullable Output<ExpressRouteCircuitPeeringConfigArgs> microsoftPeeringConfig;

    public Optional<Output<ExpressRouteCircuitPeeringConfigArgs>> microsoftPeeringConfig() {
        return Optional.ofNullable(this.microsoftPeeringConfig);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The peer ASN.
     * 
     */
    @Import(name="peerASN")
    private @Nullable Output<Double> peerASN;

    public Optional<Output<Double>> peerASN() {
        return Optional.ofNullable(this.peerASN);
    }

    /**
     * The peering type.
     * 
     */
    @Import(name="peeringType")
    private @Nullable Output<Either<String,ExpressRoutePeeringType>> peeringType;

    public Optional<Output<Either<String,ExpressRoutePeeringType>>> peeringType() {
        return Optional.ofNullable(this.peeringType);
    }

    /**
     * The primary port.
     * 
     */
    @Import(name="primaryAzurePort")
    private @Nullable Output<String> primaryAzurePort;

    public Optional<Output<String>> primaryAzurePort() {
        return Optional.ofNullable(this.primaryAzurePort);
    }

    /**
     * The primary address prefix.
     * 
     */
    @Import(name="primaryPeerAddressPrefix")
    private @Nullable Output<String> primaryPeerAddressPrefix;

    public Optional<Output<String>> primaryPeerAddressPrefix() {
        return Optional.ofNullable(this.primaryPeerAddressPrefix);
    }

    /**
     * The reference to the RouteFilter resource.
     * 
     */
    @Import(name="routeFilter")
    private @Nullable Output<SubResourceArgs> routeFilter;

    public Optional<Output<SubResourceArgs>> routeFilter() {
        return Optional.ofNullable(this.routeFilter);
    }

    /**
     * The secondary port.
     * 
     */
    @Import(name="secondaryAzurePort")
    private @Nullable Output<String> secondaryAzurePort;

    public Optional<Output<String>> secondaryAzurePort() {
        return Optional.ofNullable(this.secondaryAzurePort);
    }

    /**
     * The secondary address prefix.
     * 
     */
    @Import(name="secondaryPeerAddressPrefix")
    private @Nullable Output<String> secondaryPeerAddressPrefix;

    public Optional<Output<String>> secondaryPeerAddressPrefix() {
        return Optional.ofNullable(this.secondaryPeerAddressPrefix);
    }

    /**
     * The shared key.
     * 
     */
    @Import(name="sharedKey")
    private @Nullable Output<String> sharedKey;

    public Optional<Output<String>> sharedKey() {
        return Optional.ofNullable(this.sharedKey);
    }

    /**
     * The peering state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<Either<String,ExpressRoutePeeringState>> state;

    public Optional<Output<Either<String,ExpressRoutePeeringState>>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The peering stats of express route circuit.
     * 
     */
    @Import(name="stats")
    private @Nullable Output<ExpressRouteCircuitStatsArgs> stats;

    public Optional<Output<ExpressRouteCircuitStatsArgs>> stats() {
        return Optional.ofNullable(this.stats);
    }

    /**
     * The VLAN ID.
     * 
     */
    @Import(name="vlanId")
    private @Nullable Output<Integer> vlanId;

    public Optional<Output<Integer>> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    private ExpressRouteCircuitPeeringArgs() {}

    private ExpressRouteCircuitPeeringArgs(ExpressRouteCircuitPeeringArgs $) {
        this.azureASN = $.azureASN;
        this.connections = $.connections;
        this.gatewayManagerEtag = $.gatewayManagerEtag;
        this.id = $.id;
        this.ipv6PeeringConfig = $.ipv6PeeringConfig;
        this.microsoftPeeringConfig = $.microsoftPeeringConfig;
        this.name = $.name;
        this.peerASN = $.peerASN;
        this.peeringType = $.peeringType;
        this.primaryAzurePort = $.primaryAzurePort;
        this.primaryPeerAddressPrefix = $.primaryPeerAddressPrefix;
        this.routeFilter = $.routeFilter;
        this.secondaryAzurePort = $.secondaryAzurePort;
        this.secondaryPeerAddressPrefix = $.secondaryPeerAddressPrefix;
        this.sharedKey = $.sharedKey;
        this.state = $.state;
        this.stats = $.stats;
        this.vlanId = $.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExpressRouteCircuitPeeringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExpressRouteCircuitPeeringArgs $;

        public Builder() {
            $ = new ExpressRouteCircuitPeeringArgs();
        }

        public Builder(ExpressRouteCircuitPeeringArgs defaults) {
            $ = new ExpressRouteCircuitPeeringArgs(Objects.requireNonNull(defaults));
        }

        public Builder azureASN(@Nullable Output<Integer> azureASN) {
            $.azureASN = azureASN;
            return this;
        }

        public Builder azureASN(Integer azureASN) {
            return azureASN(Output.of(azureASN));
        }

        public Builder connections(@Nullable Output<List<ExpressRouteCircuitConnectionArgs>> connections) {
            $.connections = connections;
            return this;
        }

        public Builder connections(List<ExpressRouteCircuitConnectionArgs> connections) {
            return connections(Output.of(connections));
        }

        public Builder connections(ExpressRouteCircuitConnectionArgs... connections) {
            return connections(List.of(connections));
        }

        public Builder gatewayManagerEtag(@Nullable Output<String> gatewayManagerEtag) {
            $.gatewayManagerEtag = gatewayManagerEtag;
            return this;
        }

        public Builder gatewayManagerEtag(String gatewayManagerEtag) {
            return gatewayManagerEtag(Output.of(gatewayManagerEtag));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder ipv6PeeringConfig(@Nullable Output<Ipv6ExpressRouteCircuitPeeringConfigArgs> ipv6PeeringConfig) {
            $.ipv6PeeringConfig = ipv6PeeringConfig;
            return this;
        }

        public Builder ipv6PeeringConfig(Ipv6ExpressRouteCircuitPeeringConfigArgs ipv6PeeringConfig) {
            return ipv6PeeringConfig(Output.of(ipv6PeeringConfig));
        }

        public Builder microsoftPeeringConfig(@Nullable Output<ExpressRouteCircuitPeeringConfigArgs> microsoftPeeringConfig) {
            $.microsoftPeeringConfig = microsoftPeeringConfig;
            return this;
        }

        public Builder microsoftPeeringConfig(ExpressRouteCircuitPeeringConfigArgs microsoftPeeringConfig) {
            return microsoftPeeringConfig(Output.of(microsoftPeeringConfig));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder peerASN(@Nullable Output<Double> peerASN) {
            $.peerASN = peerASN;
            return this;
        }

        public Builder peerASN(Double peerASN) {
            return peerASN(Output.of(peerASN));
        }

        public Builder peeringType(@Nullable Output<Either<String,ExpressRoutePeeringType>> peeringType) {
            $.peeringType = peeringType;
            return this;
        }

        public Builder peeringType(Either<String,ExpressRoutePeeringType> peeringType) {
            return peeringType(Output.of(peeringType));
        }

        public Builder primaryAzurePort(@Nullable Output<String> primaryAzurePort) {
            $.primaryAzurePort = primaryAzurePort;
            return this;
        }

        public Builder primaryAzurePort(String primaryAzurePort) {
            return primaryAzurePort(Output.of(primaryAzurePort));
        }

        public Builder primaryPeerAddressPrefix(@Nullable Output<String> primaryPeerAddressPrefix) {
            $.primaryPeerAddressPrefix = primaryPeerAddressPrefix;
            return this;
        }

        public Builder primaryPeerAddressPrefix(String primaryPeerAddressPrefix) {
            return primaryPeerAddressPrefix(Output.of(primaryPeerAddressPrefix));
        }

        public Builder routeFilter(@Nullable Output<SubResourceArgs> routeFilter) {
            $.routeFilter = routeFilter;
            return this;
        }

        public Builder routeFilter(SubResourceArgs routeFilter) {
            return routeFilter(Output.of(routeFilter));
        }

        public Builder secondaryAzurePort(@Nullable Output<String> secondaryAzurePort) {
            $.secondaryAzurePort = secondaryAzurePort;
            return this;
        }

        public Builder secondaryAzurePort(String secondaryAzurePort) {
            return secondaryAzurePort(Output.of(secondaryAzurePort));
        }

        public Builder secondaryPeerAddressPrefix(@Nullable Output<String> secondaryPeerAddressPrefix) {
            $.secondaryPeerAddressPrefix = secondaryPeerAddressPrefix;
            return this;
        }

        public Builder secondaryPeerAddressPrefix(String secondaryPeerAddressPrefix) {
            return secondaryPeerAddressPrefix(Output.of(secondaryPeerAddressPrefix));
        }

        public Builder sharedKey(@Nullable Output<String> sharedKey) {
            $.sharedKey = sharedKey;
            return this;
        }

        public Builder sharedKey(String sharedKey) {
            return sharedKey(Output.of(sharedKey));
        }

        public Builder state(@Nullable Output<Either<String,ExpressRoutePeeringState>> state) {
            $.state = state;
            return this;
        }

        public Builder state(Either<String,ExpressRoutePeeringState> state) {
            return state(Output.of(state));
        }

        public Builder stats(@Nullable Output<ExpressRouteCircuitStatsArgs> stats) {
            $.stats = stats;
            return this;
        }

        public Builder stats(ExpressRouteCircuitStatsArgs stats) {
            return stats(Output.of(stats));
        }

        public Builder vlanId(@Nullable Output<Integer> vlanId) {
            $.vlanId = vlanId;
            return this;
        }

        public Builder vlanId(Integer vlanId) {
            return vlanId(Output.of(vlanId));
        }

        public ExpressRouteCircuitPeeringArgs build() {
            return $;
        }
    }

}
