// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetProductPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProductPolicyArgs Empty = new GetProductPolicyArgs();

    /**
     * Policy Export Format.
     * 
     */
    @Import(name="format")
    private @Nullable String format;

    public Optional<String> format() {
        return Optional.ofNullable(this.format);
    }

    /**
     * The identifier of the Policy.
     * 
     */
    @Import(name="policyId", required=true)
    private String policyId;

    public String policyId() {
        return this.policyId;
    }

    /**
     * Product identifier. Must be unique in the current API Management service instance.
     * 
     */
    @Import(name="productId", required=true)
    private String productId;

    public String productId() {
        return this.productId;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    public String serviceName() {
        return this.serviceName;
    }

    private GetProductPolicyArgs() {}

    private GetProductPolicyArgs(GetProductPolicyArgs $) {
        this.format = $.format;
        this.policyId = $.policyId;
        this.productId = $.productId;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProductPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProductPolicyArgs $;

        public Builder() {
            $ = new GetProductPolicyArgs();
        }

        public Builder(GetProductPolicyArgs defaults) {
            $ = new GetProductPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder format(@Nullable String format) {
            $.format = format;
            return this;
        }

        public Builder policyId(String policyId) {
            $.policyId = policyId;
            return this;
        }

        public Builder productId(String productId) {
            $.productId = productId;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public GetProductPolicyArgs build() {
            $.policyId = Objects.requireNonNull($.policyId, "expected parameter 'policyId' to be non-null");
            $.productId = Objects.requireNonNull($.productId, "expected parameter 'productId' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
