// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPolicyResult {
    /**
     * @return The creation date of the policy.
     * 
     */
    private final String createdDate;
    /**
     * @return The description of the policy.
     * 
     */
    private final @Nullable String description;
    /**
     * @return The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
     * 
     */
    private final @Nullable String evaluatorType;
    /**
     * @return The fact data of the policy.
     * 
     */
    private final @Nullable String factData;
    /**
     * @return The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
     * 
     */
    private final @Nullable String factName;
    /**
     * @return The identifier of the resource.
     * 
     */
    private final String id;
    /**
     * @return The location of the resource.
     * 
     */
    private final @Nullable String location;
    /**
     * @return The name of the resource.
     * 
     */
    private final String name;
    /**
     * @return The provisioning status of the resource.
     * 
     */
    private final String provisioningState;
    /**
     * @return The status of the policy.
     * 
     */
    private final @Nullable String status;
    /**
     * @return The tags of the resource.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
     * 
     */
    private final @Nullable String threshold;
    /**
     * @return The type of the resource.
     * 
     */
    private final String type;
    /**
     * @return The unique immutable identifier of a resource (Guid).
     * 
     */
    private final String uniqueIdentifier;

    @CustomType.Constructor
    private GetPolicyResult(
        @CustomType.Parameter("createdDate") String createdDate,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("evaluatorType") @Nullable String evaluatorType,
        @CustomType.Parameter("factData") @Nullable String factData,
        @CustomType.Parameter("factName") @Nullable String factName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("threshold") @Nullable String threshold,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uniqueIdentifier") String uniqueIdentifier) {
        this.createdDate = createdDate;
        this.description = description;
        this.evaluatorType = evaluatorType;
        this.factData = factData;
        this.factName = factName;
        this.id = id;
        this.location = location;
        this.name = name;
        this.provisioningState = provisioningState;
        this.status = status;
        this.tags = tags;
        this.threshold = threshold;
        this.type = type;
        this.uniqueIdentifier = uniqueIdentifier;
    }

    /**
     * @return The creation date of the policy.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * @return The description of the policy.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
     * 
     */
    public Optional<String> evaluatorType() {
        return Optional.ofNullable(this.evaluatorType);
    }
    /**
     * @return The fact data of the policy.
     * 
     */
    public Optional<String> factData() {
        return Optional.ofNullable(this.factData);
    }
    /**
     * @return The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
     * 
     */
    public Optional<String> factName() {
        return Optional.ofNullable(this.factName);
    }
    /**
     * @return The identifier of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The location of the resource.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioning status of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The status of the policy.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The tags of the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
     * 
     */
    public Optional<String> threshold() {
        return Optional.ofNullable(this.threshold);
    }
    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The unique immutable identifier of a resource (Guid).
     * 
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createdDate;
        private @Nullable String description;
        private @Nullable String evaluatorType;
        private @Nullable String factData;
        private @Nullable String factName;
        private String id;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private @Nullable String status;
        private @Nullable Map<String,String> tags;
        private @Nullable String threshold;
        private String type;
        private String uniqueIdentifier;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.evaluatorType = defaults.evaluatorType;
    	      this.factData = defaults.factData;
    	      this.factName = defaults.factName;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.threshold = defaults.threshold;
    	      this.type = defaults.type;
    	      this.uniqueIdentifier = defaults.uniqueIdentifier;
        }

        public Builder createdDate(String createdDate) {
            this.createdDate = Objects.requireNonNull(createdDate);
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder evaluatorType(@Nullable String evaluatorType) {
            this.evaluatorType = evaluatorType;
            return this;
        }
        public Builder factData(@Nullable String factData) {
            this.factData = factData;
            return this;
        }
        public Builder factName(@Nullable String factName) {
            this.factName = factName;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder threshold(@Nullable String threshold) {
            this.threshold = threshold;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uniqueIdentifier(String uniqueIdentifier) {
            this.uniqueIdentifier = Objects.requireNonNull(uniqueIdentifier);
            return this;
        }        public GetPolicyResult build() {
            return new GetPolicyResult(createdDate, description, evaluatorType, factData, factName, id, location, name, provisioningState, status, tags, threshold, type, uniqueIdentifier);
        }
    }
}
