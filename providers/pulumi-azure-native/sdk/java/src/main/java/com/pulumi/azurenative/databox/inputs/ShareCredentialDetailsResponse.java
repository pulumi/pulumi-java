// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databox.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Credential details of the shares in account.
 * 
 */
public final class ShareCredentialDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ShareCredentialDetailsResponse Empty = new ShareCredentialDetailsResponse();

    /**
     * Password for the share.
     * 
     */
    @Import(name="password", required=true)
    private String password;

    /**
     * @return Password for the share.
     * 
     */
    public String password() {
        return this.password;
    }

    /**
     * Name of the share.
     * 
     */
    @Import(name="shareName", required=true)
    private String shareName;

    /**
     * @return Name of the share.
     * 
     */
    public String shareName() {
        return this.shareName;
    }

    /**
     * Type of the share.
     * 
     */
    @Import(name="shareType", required=true)
    private String shareType;

    /**
     * @return Type of the share.
     * 
     */
    public String shareType() {
        return this.shareType;
    }

    /**
     * Access protocols supported on the device.
     * 
     */
    @Import(name="supportedAccessProtocols", required=true)
    private List<String> supportedAccessProtocols;

    /**
     * @return Access protocols supported on the device.
     * 
     */
    public List<String> supportedAccessProtocols() {
        return this.supportedAccessProtocols;
    }

    /**
     * User name for the share.
     * 
     */
    @Import(name="userName", required=true)
    private String userName;

    /**
     * @return User name for the share.
     * 
     */
    public String userName() {
        return this.userName;
    }

    private ShareCredentialDetailsResponse() {}

    private ShareCredentialDetailsResponse(ShareCredentialDetailsResponse $) {
        this.password = $.password;
        this.shareName = $.shareName;
        this.shareType = $.shareType;
        this.supportedAccessProtocols = $.supportedAccessProtocols;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShareCredentialDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShareCredentialDetailsResponse $;

        public Builder() {
            $ = new ShareCredentialDetailsResponse();
        }

        public Builder(ShareCredentialDetailsResponse defaults) {
            $ = new ShareCredentialDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param password Password for the share.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            $.password = password;
            return this;
        }

        /**
         * @param shareName Name of the share.
         * 
         * @return builder
         * 
         */
        public Builder shareName(String shareName) {
            $.shareName = shareName;
            return this;
        }

        /**
         * @param shareType Type of the share.
         * 
         * @return builder
         * 
         */
        public Builder shareType(String shareType) {
            $.shareType = shareType;
            return this;
        }

        /**
         * @param supportedAccessProtocols Access protocols supported on the device.
         * 
         * @return builder
         * 
         */
        public Builder supportedAccessProtocols(List<String> supportedAccessProtocols) {
            $.supportedAccessProtocols = supportedAccessProtocols;
            return this;
        }

        /**
         * @param supportedAccessProtocols Access protocols supported on the device.
         * 
         * @return builder
         * 
         */
        public Builder supportedAccessProtocols(String... supportedAccessProtocols) {
            return supportedAccessProtocols(List.of(supportedAccessProtocols));
        }

        /**
         * @param userName User name for the share.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            $.userName = userName;
            return this;
        }

        public ShareCredentialDetailsResponse build() {
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.shareName = Objects.requireNonNull($.shareName, "expected parameter 'shareName' to be non-null");
            $.shareType = Objects.requireNonNull($.shareType, "expected parameter 'shareType' to be non-null");
            $.supportedAccessProtocols = Objects.requireNonNull($.supportedAccessProtocols, "expected parameter 'supportedAccessProtocols' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
