// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resources.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Deployment on error behavior with additional details.
 * 
 */
public final class OnErrorDeploymentExtendedResponse extends com.pulumi.resources.InvokeArgs {

    public static final OnErrorDeploymentExtendedResponse Empty = new OnErrorDeploymentExtendedResponse();

    /**
     * The deployment to be used on error case.
     * 
     */
    @Import(name="deploymentName")
    private @Nullable String deploymentName;

    public Optional<String> deploymentName() {
        return Optional.ofNullable(this.deploymentName);
    }

    /**
     * The state of the provisioning for the on error deployment.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private OnErrorDeploymentExtendedResponse() {}

    private OnErrorDeploymentExtendedResponse(OnErrorDeploymentExtendedResponse $) {
        this.deploymentName = $.deploymentName;
        this.provisioningState = $.provisioningState;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnErrorDeploymentExtendedResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnErrorDeploymentExtendedResponse $;

        public Builder() {
            $ = new OnErrorDeploymentExtendedResponse();
        }

        public Builder(OnErrorDeploymentExtendedResponse defaults) {
            $ = new OnErrorDeploymentExtendedResponse(Objects.requireNonNull(defaults));
        }

        public Builder deploymentName(@Nullable String deploymentName) {
            $.deploymentName = deploymentName;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public OnErrorDeploymentExtendedResponse build() {
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
