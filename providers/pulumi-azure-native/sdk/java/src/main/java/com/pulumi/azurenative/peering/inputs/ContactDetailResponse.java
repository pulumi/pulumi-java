// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.peering.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The contact detail class.
 * 
 */
public final class ContactDetailResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContactDetailResponse Empty = new ContactDetailResponse();

    /**
     * The e-mail address of the contact.
     * 
     */
    @Import(name="email")
    private @Nullable String email;

    /**
     * @return The e-mail address of the contact.
     * 
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * The phone number of the contact.
     * 
     */
    @Import(name="phone")
    private @Nullable String phone;

    /**
     * @return The phone number of the contact.
     * 
     */
    public Optional<String> phone() {
        return Optional.ofNullable(this.phone);
    }

    /**
     * The role of the contact.
     * 
     */
    @Import(name="role")
    private @Nullable String role;

    /**
     * @return The role of the contact.
     * 
     */
    public Optional<String> role() {
        return Optional.ofNullable(this.role);
    }

    private ContactDetailResponse() {}

    private ContactDetailResponse(ContactDetailResponse $) {
        this.email = $.email;
        this.phone = $.phone;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContactDetailResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContactDetailResponse $;

        public Builder() {
            $ = new ContactDetailResponse();
        }

        public Builder(ContactDetailResponse defaults) {
            $ = new ContactDetailResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param email The e-mail address of the contact.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable String email) {
            $.email = email;
            return this;
        }

        /**
         * @param phone The phone number of the contact.
         * 
         * @return builder
         * 
         */
        public Builder phone(@Nullable String phone) {
            $.phone = phone;
            return this;
        }

        /**
         * @param role The role of the contact.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable String role) {
            $.role = role;
            return this;
        }

        public ContactDetailResponse build() {
            return $;
        }
    }

}
