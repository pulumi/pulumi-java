// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.ScaleRuleAuthResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Container App container Azure Queue based scaling rule.
 * 
 */
public final class QueueScaleRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final QueueScaleRuleResponse Empty = new QueueScaleRuleResponse();

    /**
     * Authentication secrets for the queue scale rule.
     * 
     */
    @Import(name="auth")
    private @Nullable List<ScaleRuleAuthResponse> auth;

    /**
     * @return Authentication secrets for the queue scale rule.
     * 
     */
    public Optional<List<ScaleRuleAuthResponse>> auth() {
        return Optional.ofNullable(this.auth);
    }

    /**
     * Queue length.
     * 
     */
    @Import(name="queueLength")
    private @Nullable Integer queueLength;

    /**
     * @return Queue length.
     * 
     */
    public Optional<Integer> queueLength() {
        return Optional.ofNullable(this.queueLength);
    }

    /**
     * Queue name.
     * 
     */
    @Import(name="queueName")
    private @Nullable String queueName;

    /**
     * @return Queue name.
     * 
     */
    public Optional<String> queueName() {
        return Optional.ofNullable(this.queueName);
    }

    private QueueScaleRuleResponse() {}

    private QueueScaleRuleResponse(QueueScaleRuleResponse $) {
        this.auth = $.auth;
        this.queueLength = $.queueLength;
        this.queueName = $.queueName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueueScaleRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueueScaleRuleResponse $;

        public Builder() {
            $ = new QueueScaleRuleResponse();
        }

        public Builder(QueueScaleRuleResponse defaults) {
            $ = new QueueScaleRuleResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param auth Authentication secrets for the queue scale rule.
         * 
         * @return builder
         * 
         */
        public Builder auth(@Nullable List<ScaleRuleAuthResponse> auth) {
            $.auth = auth;
            return this;
        }

        /**
         * @param auth Authentication secrets for the queue scale rule.
         * 
         * @return builder
         * 
         */
        public Builder auth(ScaleRuleAuthResponse... auth) {
            return auth(List.of(auth));
        }

        /**
         * @param queueLength Queue length.
         * 
         * @return builder
         * 
         */
        public Builder queueLength(@Nullable Integer queueLength) {
            $.queueLength = queueLength;
            return this;
        }

        /**
         * @param queueName Queue name.
         * 
         * @return builder
         * 
         */
        public Builder queueName(@Nullable String queueName) {
            $.queueName = queueName;
            return this;
        }

        public QueueScaleRuleResponse build() {
            return $;
        }
    }

}
