// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.azurenative.authorization.outputs.RoleManagementPolicyRuleTargetResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RoleManagementPolicyNotificationRuleResponse {
    /**
     * @return The id of the rule.
     * 
     */
    private final @Nullable String id;
    /**
     * @return Determines if the notification will be sent to the recipient type specified in the policy rule.
     * 
     */
    private final @Nullable Boolean isDefaultRecipientsEnabled;
    /**
     * @return The notification level.
     * 
     */
    private final @Nullable String notificationLevel;
    /**
     * @return The list of notification recipients.
     * 
     */
    private final @Nullable List<String> notificationRecipients;
    /**
     * @return The type of notification.
     * 
     */
    private final @Nullable String notificationType;
    /**
     * @return The recipient type.
     * 
     */
    private final @Nullable String recipientType;
    /**
     * @return The type of rule
     * Expected value is &#39;RoleManagementPolicyNotificationRule&#39;.
     * 
     */
    private final String ruleType;
    /**
     * @return The target of the current rule.
     * 
     */
    private final @Nullable RoleManagementPolicyRuleTargetResponse target;

    @CustomType.Constructor
    private RoleManagementPolicyNotificationRuleResponse(
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("isDefaultRecipientsEnabled") @Nullable Boolean isDefaultRecipientsEnabled,
        @CustomType.Parameter("notificationLevel") @Nullable String notificationLevel,
        @CustomType.Parameter("notificationRecipients") @Nullable List<String> notificationRecipients,
        @CustomType.Parameter("notificationType") @Nullable String notificationType,
        @CustomType.Parameter("recipientType") @Nullable String recipientType,
        @CustomType.Parameter("ruleType") String ruleType,
        @CustomType.Parameter("target") @Nullable RoleManagementPolicyRuleTargetResponse target) {
        this.id = id;
        this.isDefaultRecipientsEnabled = isDefaultRecipientsEnabled;
        this.notificationLevel = notificationLevel;
        this.notificationRecipients = notificationRecipients;
        this.notificationType = notificationType;
        this.recipientType = recipientType;
        this.ruleType = ruleType;
        this.target = target;
    }

    /**
     * @return The id of the rule.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Determines if the notification will be sent to the recipient type specified in the policy rule.
     * 
     */
    public Optional<Boolean> isDefaultRecipientsEnabled() {
        return Optional.ofNullable(this.isDefaultRecipientsEnabled);
    }
    /**
     * @return The notification level.
     * 
     */
    public Optional<String> notificationLevel() {
        return Optional.ofNullable(this.notificationLevel);
    }
    /**
     * @return The list of notification recipients.
     * 
     */
    public List<String> notificationRecipients() {
        return this.notificationRecipients == null ? List.of() : this.notificationRecipients;
    }
    /**
     * @return The type of notification.
     * 
     */
    public Optional<String> notificationType() {
        return Optional.ofNullable(this.notificationType);
    }
    /**
     * @return The recipient type.
     * 
     */
    public Optional<String> recipientType() {
        return Optional.ofNullable(this.recipientType);
    }
    /**
     * @return The type of rule
     * Expected value is &#39;RoleManagementPolicyNotificationRule&#39;.
     * 
     */
    public String ruleType() {
        return this.ruleType;
    }
    /**
     * @return The target of the current rule.
     * 
     */
    public Optional<RoleManagementPolicyRuleTargetResponse> target() {
        return Optional.ofNullable(this.target);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoleManagementPolicyNotificationRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String id;
        private @Nullable Boolean isDefaultRecipientsEnabled;
        private @Nullable String notificationLevel;
        private @Nullable List<String> notificationRecipients;
        private @Nullable String notificationType;
        private @Nullable String recipientType;
        private String ruleType;
        private @Nullable RoleManagementPolicyRuleTargetResponse target;

        public Builder() {
    	      // Empty
        }

        public Builder(RoleManagementPolicyNotificationRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.isDefaultRecipientsEnabled = defaults.isDefaultRecipientsEnabled;
    	      this.notificationLevel = defaults.notificationLevel;
    	      this.notificationRecipients = defaults.notificationRecipients;
    	      this.notificationType = defaults.notificationType;
    	      this.recipientType = defaults.recipientType;
    	      this.ruleType = defaults.ruleType;
    	      this.target = defaults.target;
        }

        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder isDefaultRecipientsEnabled(@Nullable Boolean isDefaultRecipientsEnabled) {
            this.isDefaultRecipientsEnabled = isDefaultRecipientsEnabled;
            return this;
        }
        public Builder notificationLevel(@Nullable String notificationLevel) {
            this.notificationLevel = notificationLevel;
            return this;
        }
        public Builder notificationRecipients(@Nullable List<String> notificationRecipients) {
            this.notificationRecipients = notificationRecipients;
            return this;
        }
        public Builder notificationRecipients(String... notificationRecipients) {
            return notificationRecipients(List.of(notificationRecipients));
        }
        public Builder notificationType(@Nullable String notificationType) {
            this.notificationType = notificationType;
            return this;
        }
        public Builder recipientType(@Nullable String recipientType) {
            this.recipientType = recipientType;
            return this;
        }
        public Builder ruleType(String ruleType) {
            this.ruleType = Objects.requireNonNull(ruleType);
            return this;
        }
        public Builder target(@Nullable RoleManagementPolicyRuleTargetResponse target) {
            this.target = target;
            return this;
        }        public RoleManagementPolicyNotificationRuleResponse build() {
            return new RoleManagementPolicyNotificationRuleResponse(id, isDefaultRecipientsEnabled, notificationLevel, notificationRecipients, notificationType, recipientType, ruleType, target);
        }
    }
}
