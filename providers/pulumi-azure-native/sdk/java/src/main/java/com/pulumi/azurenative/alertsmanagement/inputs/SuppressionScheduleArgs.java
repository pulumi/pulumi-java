// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.alertsmanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Schedule for a given suppression configuration.
 * 
 */
public final class SuppressionScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SuppressionScheduleArgs Empty = new SuppressionScheduleArgs();

    /**
     * End date for suppression
     * 
     */
    @Import(name="endDate")
    private @Nullable Output<String> endDate;

    public Optional<Output<String>> endDate() {
        return Optional.ofNullable(this.endDate);
    }

    /**
     * End date for suppression
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * Specifies the values for recurrence pattern
     * 
     */
    @Import(name="recurrenceValues")
    private @Nullable Output<List<Integer>> recurrenceValues;

    public Optional<Output<List<Integer>>> recurrenceValues() {
        return Optional.ofNullable(this.recurrenceValues);
    }

    /**
     * Start date for suppression
     * 
     */
    @Import(name="startDate")
    private @Nullable Output<String> startDate;

    public Optional<Output<String>> startDate() {
        return Optional.ofNullable(this.startDate);
    }

    /**
     * Start time for suppression
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    private SuppressionScheduleArgs() {}

    private SuppressionScheduleArgs(SuppressionScheduleArgs $) {
        this.endDate = $.endDate;
        this.endTime = $.endTime;
        this.recurrenceValues = $.recurrenceValues;
        this.startDate = $.startDate;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SuppressionScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SuppressionScheduleArgs $;

        public Builder() {
            $ = new SuppressionScheduleArgs();
        }

        public Builder(SuppressionScheduleArgs defaults) {
            $ = new SuppressionScheduleArgs(Objects.requireNonNull(defaults));
        }

        public Builder endDate(@Nullable Output<String> endDate) {
            $.endDate = endDate;
            return this;
        }

        public Builder endDate(String endDate) {
            return endDate(Output.of(endDate));
        }

        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        public Builder recurrenceValues(@Nullable Output<List<Integer>> recurrenceValues) {
            $.recurrenceValues = recurrenceValues;
            return this;
        }

        public Builder recurrenceValues(List<Integer> recurrenceValues) {
            return recurrenceValues(Output.of(recurrenceValues));
        }

        public Builder recurrenceValues(Integer... recurrenceValues) {
            return recurrenceValues(List.of(recurrenceValues));
        }

        public Builder startDate(@Nullable Output<String> startDate) {
            $.startDate = startDate;
            return this;
        }

        public Builder startDate(String startDate) {
            return startDate(Output.of(startDate));
        }

        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public SuppressionScheduleArgs build() {
            return $;
        }
    }

}
