// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.search.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Describes an API key for a given Azure Cognitive Search service that has permissions for query operations only.
 * 
 */
public final class QueryKeyResponse extends com.pulumi.resources.InvokeArgs {

    public static final QueryKeyResponse Empty = new QueryKeyResponse();

    /**
     * The value of the query API key.
     * 
     */
    @Import(name="key", required=true)
    private String key;

    /**
     * @return The value of the query API key.
     * 
     */
    public String key() {
        return this.key;
    }

    /**
     * The name of the query API key; may be empty.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the query API key; may be empty.
     * 
     */
    public String name() {
        return this.name;
    }

    private QueryKeyResponse() {}

    private QueryKeyResponse(QueryKeyResponse $) {
        this.key = $.key;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueryKeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueryKeyResponse $;

        public Builder() {
            $ = new QueryKeyResponse();
        }

        public Builder(QueryKeyResponse defaults) {
            $ = new QueryKeyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param key The value of the query API key.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            $.key = key;
            return this;
        }

        /**
         * @param name The name of the query API key; may be empty.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public QueryKeyResponse build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
