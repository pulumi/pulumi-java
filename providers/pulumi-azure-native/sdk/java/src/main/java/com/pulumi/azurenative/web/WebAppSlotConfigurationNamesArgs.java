// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAppSlotConfigurationNamesArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAppSlotConfigurationNamesArgs Empty = new WebAppSlotConfigurationNamesArgs();

    /**
     * List of application settings names.
     * 
     */
    @Import(name="appSettingNames")
    private @Nullable Output<List<String>> appSettingNames;

    /**
     * @return List of application settings names.
     * 
     */
    public Optional<Output<List<String>>> appSettingNames() {
        return Optional.ofNullable(this.appSettingNames);
    }

    /**
     * List of external Azure storage account identifiers.
     * 
     */
    @Import(name="azureStorageConfigNames")
    private @Nullable Output<List<String>> azureStorageConfigNames;

    /**
     * @return List of external Azure storage account identifiers.
     * 
     */
    public Optional<Output<List<String>>> azureStorageConfigNames() {
        return Optional.ofNullable(this.azureStorageConfigNames);
    }

    /**
     * List of connection string names.
     * 
     */
    @Import(name="connectionStringNames")
    private @Nullable Output<List<String>> connectionStringNames;

    /**
     * @return List of connection string names.
     * 
     */
    public Optional<Output<List<String>>> connectionStringNames() {
        return Optional.ofNullable(this.connectionStringNames);
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Kind of resource.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Name of the app.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the app.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group to which the resource belongs.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private WebAppSlotConfigurationNamesArgs() {}

    private WebAppSlotConfigurationNamesArgs(WebAppSlotConfigurationNamesArgs $) {
        this.appSettingNames = $.appSettingNames;
        this.azureStorageConfigNames = $.azureStorageConfigNames;
        this.connectionStringNames = $.connectionStringNames;
        this.kind = $.kind;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppSlotConfigurationNamesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppSlotConfigurationNamesArgs $;

        public Builder() {
            $ = new WebAppSlotConfigurationNamesArgs();
        }

        public Builder(WebAppSlotConfigurationNamesArgs defaults) {
            $ = new WebAppSlotConfigurationNamesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appSettingNames List of application settings names.
         * 
         * @return builder
         * 
         */
        public Builder appSettingNames(@Nullable Output<List<String>> appSettingNames) {
            $.appSettingNames = appSettingNames;
            return this;
        }

        /**
         * @param appSettingNames List of application settings names.
         * 
         * @return builder
         * 
         */
        public Builder appSettingNames(List<String> appSettingNames) {
            return appSettingNames(Output.of(appSettingNames));
        }

        /**
         * @param appSettingNames List of application settings names.
         * 
         * @return builder
         * 
         */
        public Builder appSettingNames(String... appSettingNames) {
            return appSettingNames(List.of(appSettingNames));
        }

        /**
         * @param azureStorageConfigNames List of external Azure storage account identifiers.
         * 
         * @return builder
         * 
         */
        public Builder azureStorageConfigNames(@Nullable Output<List<String>> azureStorageConfigNames) {
            $.azureStorageConfigNames = azureStorageConfigNames;
            return this;
        }

        /**
         * @param azureStorageConfigNames List of external Azure storage account identifiers.
         * 
         * @return builder
         * 
         */
        public Builder azureStorageConfigNames(List<String> azureStorageConfigNames) {
            return azureStorageConfigNames(Output.of(azureStorageConfigNames));
        }

        /**
         * @param azureStorageConfigNames List of external Azure storage account identifiers.
         * 
         * @return builder
         * 
         */
        public Builder azureStorageConfigNames(String... azureStorageConfigNames) {
            return azureStorageConfigNames(List.of(azureStorageConfigNames));
        }

        /**
         * @param connectionStringNames List of connection string names.
         * 
         * @return builder
         * 
         */
        public Builder connectionStringNames(@Nullable Output<List<String>> connectionStringNames) {
            $.connectionStringNames = connectionStringNames;
            return this;
        }

        /**
         * @param connectionStringNames List of connection string names.
         * 
         * @return builder
         * 
         */
        public Builder connectionStringNames(List<String> connectionStringNames) {
            return connectionStringNames(Output.of(connectionStringNames));
        }

        /**
         * @param connectionStringNames List of connection string names.
         * 
         * @return builder
         * 
         */
        public Builder connectionStringNames(String... connectionStringNames) {
            return connectionStringNames(List.of(connectionStringNames));
        }

        /**
         * @param kind Kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name Name of the app.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the app.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Name of the resource group to which the resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group to which the resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public WebAppSlotConfigurationNamesArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
