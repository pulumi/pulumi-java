// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.netapp;

import com.pulumi.azurenative.netapp.inputs.DailyScheduleArgs;
import com.pulumi.azurenative.netapp.inputs.HourlyScheduleArgs;
import com.pulumi.azurenative.netapp.inputs.MonthlyScheduleArgs;
import com.pulumi.azurenative.netapp.inputs.WeeklyScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SnapshotPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SnapshotPolicyArgs Empty = new SnapshotPolicyArgs();

    /**
     * The name of the NetApp account
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * Schedule for daily snapshots
     * 
     */
    @Import(name="dailySchedule")
    private @Nullable Output<DailyScheduleArgs> dailySchedule;

    public Optional<Output<DailyScheduleArgs>> dailySchedule() {
        return Optional.ofNullable(this.dailySchedule);
    }

    /**
     * The property to decide policy is enabled or not
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Schedule for hourly snapshots
     * 
     */
    @Import(name="hourlySchedule")
    private @Nullable Output<HourlyScheduleArgs> hourlySchedule;

    public Optional<Output<HourlyScheduleArgs>> hourlySchedule() {
        return Optional.ofNullable(this.hourlySchedule);
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Schedule for monthly snapshots
     * 
     */
    @Import(name="monthlySchedule")
    private @Nullable Output<MonthlyScheduleArgs> monthlySchedule;

    public Optional<Output<MonthlyScheduleArgs>> monthlySchedule() {
        return Optional.ofNullable(this.monthlySchedule);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the snapshot policy
     * 
     */
    @Import(name="snapshotPolicyName")
    private @Nullable Output<String> snapshotPolicyName;

    public Optional<Output<String>> snapshotPolicyName() {
        return Optional.ofNullable(this.snapshotPolicyName);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Schedule for weekly snapshots
     * 
     */
    @Import(name="weeklySchedule")
    private @Nullable Output<WeeklyScheduleArgs> weeklySchedule;

    public Optional<Output<WeeklyScheduleArgs>> weeklySchedule() {
        return Optional.ofNullable(this.weeklySchedule);
    }

    private SnapshotPolicyArgs() {}

    private SnapshotPolicyArgs(SnapshotPolicyArgs $) {
        this.accountName = $.accountName;
        this.dailySchedule = $.dailySchedule;
        this.enabled = $.enabled;
        this.hourlySchedule = $.hourlySchedule;
        this.location = $.location;
        this.monthlySchedule = $.monthlySchedule;
        this.resourceGroupName = $.resourceGroupName;
        this.snapshotPolicyName = $.snapshotPolicyName;
        this.tags = $.tags;
        this.weeklySchedule = $.weeklySchedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnapshotPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnapshotPolicyArgs $;

        public Builder() {
            $ = new SnapshotPolicyArgs();
        }

        public Builder(SnapshotPolicyArgs defaults) {
            $ = new SnapshotPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        public Builder dailySchedule(@Nullable Output<DailyScheduleArgs> dailySchedule) {
            $.dailySchedule = dailySchedule;
            return this;
        }

        public Builder dailySchedule(DailyScheduleArgs dailySchedule) {
            return dailySchedule(Output.of(dailySchedule));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder hourlySchedule(@Nullable Output<HourlyScheduleArgs> hourlySchedule) {
            $.hourlySchedule = hourlySchedule;
            return this;
        }

        public Builder hourlySchedule(HourlyScheduleArgs hourlySchedule) {
            return hourlySchedule(Output.of(hourlySchedule));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder monthlySchedule(@Nullable Output<MonthlyScheduleArgs> monthlySchedule) {
            $.monthlySchedule = monthlySchedule;
            return this;
        }

        public Builder monthlySchedule(MonthlyScheduleArgs monthlySchedule) {
            return monthlySchedule(Output.of(monthlySchedule));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder snapshotPolicyName(@Nullable Output<String> snapshotPolicyName) {
            $.snapshotPolicyName = snapshotPolicyName;
            return this;
        }

        public Builder snapshotPolicyName(String snapshotPolicyName) {
            return snapshotPolicyName(Output.of(snapshotPolicyName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder weeklySchedule(@Nullable Output<WeeklyScheduleArgs> weeklySchedule) {
            $.weeklySchedule = weeklySchedule;
            return this;
        }

        public Builder weeklySchedule(WeeklyScheduleArgs weeklySchedule) {
            return weeklySchedule(Output.of(weeklySchedule));
        }

        public SnapshotPolicyArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
