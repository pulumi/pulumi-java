// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningcompute.inputs;

import com.pulumi.azurenative.machinelearningcompute.enums.SystemServiceType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Information about a system service deployed in the cluster
 * 
 */
public final class SystemServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final SystemServiceArgs Empty = new SystemServiceArgs();

    /**
     * The system service type
     * 
     */
    @Import(name="systemServiceType", required=true)
      private final Output<Either<String,SystemServiceType>> systemServiceType;

    public Output<Either<String,SystemServiceType>> systemServiceType() {
        return this.systemServiceType;
    }

    public SystemServiceArgs(Output<Either<String,SystemServiceType>> systemServiceType) {
        this.systemServiceType = Objects.requireNonNull(systemServiceType, "expected parameter 'systemServiceType' to be non-null");
    }

    private SystemServiceArgs() {
        this.systemServiceType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SystemServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Either<String,SystemServiceType>> systemServiceType;

        public Builder() {
    	      // Empty
        }

        public Builder(SystemServiceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.systemServiceType = defaults.systemServiceType;
        }

        public Builder systemServiceType(Output<Either<String,SystemServiceType>> systemServiceType) {
            this.systemServiceType = Objects.requireNonNull(systemServiceType);
            return this;
        }
        public Builder systemServiceType(Either<String,SystemServiceType> systemServiceType) {
            this.systemServiceType = Output.of(Objects.requireNonNull(systemServiceType));
            return this;
        }        public SystemServiceArgs build() {
            return new SystemServiceArgs(systemServiceType);
        }
    }
}
