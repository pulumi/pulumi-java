// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningcompute.inputs;

import com.pulumi.azurenative.machinelearningcompute.enums.SystemServiceType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Information about a system service deployed in the cluster
 * 
 */
public final class SystemServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final SystemServiceArgs Empty = new SystemServiceArgs();

    /**
     * The system service type
     * 
     */
    @Import(name="systemServiceType", required=true)
    private Output<Either<String,SystemServiceType>> systemServiceType;

    /**
     * @return The system service type
     * 
     */
    public Output<Either<String,SystemServiceType>> systemServiceType() {
        return this.systemServiceType;
    }

    private SystemServiceArgs() {}

    private SystemServiceArgs(SystemServiceArgs $) {
        this.systemServiceType = $.systemServiceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemServiceArgs $;

        public Builder() {
            $ = new SystemServiceArgs();
        }

        public Builder(SystemServiceArgs defaults) {
            $ = new SystemServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param systemServiceType The system service type
         * 
         * @return builder
         * 
         */
        public Builder systemServiceType(Output<Either<String,SystemServiceType>> systemServiceType) {
            $.systemServiceType = systemServiceType;
            return this;
        }

        /**
         * @param systemServiceType The system service type
         * 
         * @return builder
         * 
         */
        public Builder systemServiceType(Either<String,SystemServiceType> systemServiceType) {
            return systemServiceType(Output.of(systemServiceType));
        }

        /**
         * @param systemServiceType The system service type
         * 
         * @return builder
         * 
         */
        public Builder systemServiceType(String systemServiceType) {
            return systemServiceType(Either.ofLeft(systemServiceType));
        }

        /**
         * @param systemServiceType The system service type
         * 
         * @return builder
         * 
         */
        public Builder systemServiceType(SystemServiceType systemServiceType) {
            return systemServiceType(Either.ofRight(systemServiceType));
        }

        public SystemServiceArgs build() {
            $.systemServiceType = Objects.requireNonNull($.systemServiceType, "expected parameter 'systemServiceType' to be non-null");
            return $;
        }
    }

}
