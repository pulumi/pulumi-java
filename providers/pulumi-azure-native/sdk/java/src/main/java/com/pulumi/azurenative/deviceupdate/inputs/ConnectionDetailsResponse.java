// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deviceupdate.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Private endpoint connection proxy object properties.
 * 
 */
public final class ConnectionDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ConnectionDetailsResponse Empty = new ConnectionDetailsResponse();

    /**
     * Group ID.
     * 
     */
    @Import(name="groupId", required=true)
    private String groupId;

    /**
     * @return Group ID.
     * 
     */
    public String groupId() {
        return this.groupId;
    }

    /**
     * Connection details ID.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return Connection details ID.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * Link ID.
     * 
     */
    @Import(name="linkIdentifier", required=true)
    private String linkIdentifier;

    /**
     * @return Link ID.
     * 
     */
    public String linkIdentifier() {
        return this.linkIdentifier;
    }

    /**
     * Member name.
     * 
     */
    @Import(name="memberName", required=true)
    private String memberName;

    /**
     * @return Member name.
     * 
     */
    public String memberName() {
        return this.memberName;
    }

    /**
     * Private IP address.
     * 
     */
    @Import(name="privateIpAddress", required=true)
    private String privateIpAddress;

    /**
     * @return Private IP address.
     * 
     */
    public String privateIpAddress() {
        return this.privateIpAddress;
    }

    private ConnectionDetailsResponse() {}

    private ConnectionDetailsResponse(ConnectionDetailsResponse $) {
        this.groupId = $.groupId;
        this.id = $.id;
        this.linkIdentifier = $.linkIdentifier;
        this.memberName = $.memberName;
        this.privateIpAddress = $.privateIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionDetailsResponse $;

        public Builder() {
            $ = new ConnectionDetailsResponse();
        }

        public Builder(ConnectionDetailsResponse defaults) {
            $ = new ConnectionDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupId Group ID.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param id Connection details ID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param linkIdentifier Link ID.
         * 
         * @return builder
         * 
         */
        public Builder linkIdentifier(String linkIdentifier) {
            $.linkIdentifier = linkIdentifier;
            return this;
        }

        /**
         * @param memberName Member name.
         * 
         * @return builder
         * 
         */
        public Builder memberName(String memberName) {
            $.memberName = memberName;
            return this;
        }

        /**
         * @param privateIpAddress Private IP address.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        public ConnectionDetailsResponse build() {
            $.groupId = Objects.requireNonNull($.groupId, "expected parameter 'groupId' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.linkIdentifier = Objects.requireNonNull($.linkIdentifier, "expected parameter 'linkIdentifier' to be non-null");
            $.memberName = Objects.requireNonNull($.memberName, "expected parameter 'memberName' to be non-null");
            $.privateIpAddress = Objects.requireNonNull($.privateIpAddress, "expected parameter 'privateIpAddress' to be non-null");
            return $;
        }
    }

}
