// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Day of the week.
 * 
 */
public final class DayArgs extends com.pulumi.resources.ResourceArgs {

    public static final DayArgs Empty = new DayArgs();

    /**
     * Date of the month
     * 
     */
    @Import(name="date")
    private @Nullable Output<Integer> date;

    /**
     * @return Date of the month
     * 
     */
    public Optional<Output<Integer>> date() {
        return Optional.ofNullable(this.date);
    }

    /**
     * Whether Date is last date of month
     * 
     */
    @Import(name="isLast")
    private @Nullable Output<Boolean> isLast;

    /**
     * @return Whether Date is last date of month
     * 
     */
    public Optional<Output<Boolean>> isLast() {
        return Optional.ofNullable(this.isLast);
    }

    private DayArgs() {}

    private DayArgs(DayArgs $) {
        this.date = $.date;
        this.isLast = $.isLast;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DayArgs $;

        public Builder() {
            $ = new DayArgs();
        }

        public Builder(DayArgs defaults) {
            $ = new DayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param date Date of the month
         * 
         * @return builder
         * 
         */
        public Builder date(@Nullable Output<Integer> date) {
            $.date = date;
            return this;
        }

        /**
         * @param date Date of the month
         * 
         * @return builder
         * 
         */
        public Builder date(Integer date) {
            return date(Output.of(date));
        }

        /**
         * @param isLast Whether Date is last date of month
         * 
         * @return builder
         * 
         */
        public Builder isLast(@Nullable Output<Boolean> isLast) {
            $.isLast = isLast;
            return this;
        }

        /**
         * @param isLast Whether Date is last date of month
         * 
         * @return builder
         * 
         */
        public Builder isLast(Boolean isLast) {
            return isLast(Output.of(isLast));
        }

        public DayArgs build() {
            return $;
        }
    }

}
