// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.AzureKeyVaultSecretReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.SSISAccessCredentialResponse;
import com.pulumi.azurenative.datafactory.inputs.SSISChildPackageResponse;
import com.pulumi.azurenative.datafactory.inputs.SecureStringResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SSIS package location.
 * 
 */
public final class SSISPackageLocationResponse extends com.pulumi.resources.InvokeArgs {

    public static final SSISPackageLocationResponse Empty = new SSISPackageLocationResponse();

    /**
     * The package access credential.
     * 
     */
    @Import(name="accessCredential")
    private @Nullable SSISAccessCredentialResponse accessCredential;

    public Optional<SSISAccessCredentialResponse> accessCredential() {
        return Optional.ofNullable(this.accessCredential);
    }

    /**
     * The embedded child package list.
     * 
     */
    @Import(name="childPackages")
    private @Nullable List<SSISChildPackageResponse> childPackages;

    public Optional<List<SSISChildPackageResponse>> childPackages() {
        return Optional.ofNullable(this.childPackages);
    }

    /**
     * The configuration file access credential.
     * 
     */
    @Import(name="configurationAccessCredential")
    private @Nullable SSISAccessCredentialResponse configurationAccessCredential;

    public Optional<SSISAccessCredentialResponse> configurationAccessCredential() {
        return Optional.ofNullable(this.configurationAccessCredential);
    }

    /**
     * The configuration file of the package execution. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="configurationPath")
    private @Nullable Object configurationPath;

    public Optional<Object> configurationPath() {
        return Optional.ofNullable(this.configurationPath);
    }

    /**
     * The embedded package content. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="packageContent")
    private @Nullable Object packageContent;

    public Optional<Object> packageContent() {
        return Optional.ofNullable(this.packageContent);
    }

    /**
     * The embedded package last modified date.
     * 
     */
    @Import(name="packageLastModifiedDate")
    private @Nullable String packageLastModifiedDate;

    public Optional<String> packageLastModifiedDate() {
        return Optional.ofNullable(this.packageLastModifiedDate);
    }

    /**
     * The package name.
     * 
     */
    @Import(name="packageName")
    private @Nullable String packageName;

    public Optional<String> packageName() {
        return Optional.ofNullable(this.packageName);
    }

    /**
     * Password of the package.
     * 
     */
    @Import(name="packagePassword")
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> packagePassword;

    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> packagePassword() {
        return Optional.ofNullable(this.packagePassword);
    }

    /**
     * The SSIS package path. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="packagePath")
    private @Nullable Object packagePath;

    public Optional<Object> packagePath() {
        return Optional.ofNullable(this.packagePath);
    }

    /**
     * The type of SSIS package location.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private SSISPackageLocationResponse() {}

    private SSISPackageLocationResponse(SSISPackageLocationResponse $) {
        this.accessCredential = $.accessCredential;
        this.childPackages = $.childPackages;
        this.configurationAccessCredential = $.configurationAccessCredential;
        this.configurationPath = $.configurationPath;
        this.packageContent = $.packageContent;
        this.packageLastModifiedDate = $.packageLastModifiedDate;
        this.packageName = $.packageName;
        this.packagePassword = $.packagePassword;
        this.packagePath = $.packagePath;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SSISPackageLocationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SSISPackageLocationResponse $;

        public Builder() {
            $ = new SSISPackageLocationResponse();
        }

        public Builder(SSISPackageLocationResponse defaults) {
            $ = new SSISPackageLocationResponse(Objects.requireNonNull(defaults));
        }

        public Builder accessCredential(@Nullable SSISAccessCredentialResponse accessCredential) {
            $.accessCredential = accessCredential;
            return this;
        }

        public Builder childPackages(@Nullable List<SSISChildPackageResponse> childPackages) {
            $.childPackages = childPackages;
            return this;
        }

        public Builder childPackages(SSISChildPackageResponse... childPackages) {
            return childPackages(List.of(childPackages));
        }

        public Builder configurationAccessCredential(@Nullable SSISAccessCredentialResponse configurationAccessCredential) {
            $.configurationAccessCredential = configurationAccessCredential;
            return this;
        }

        public Builder configurationPath(@Nullable Object configurationPath) {
            $.configurationPath = configurationPath;
            return this;
        }

        public Builder packageContent(@Nullable Object packageContent) {
            $.packageContent = packageContent;
            return this;
        }

        public Builder packageLastModifiedDate(@Nullable String packageLastModifiedDate) {
            $.packageLastModifiedDate = packageLastModifiedDate;
            return this;
        }

        public Builder packageName(@Nullable String packageName) {
            $.packageName = packageName;
            return this;
        }

        public Builder packagePassword(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> packagePassword) {
            $.packagePassword = packagePassword;
            return this;
        }

        public Builder packagePassword(AzureKeyVaultSecretReferenceResponse packagePassword) {
            return packagePassword(Either.ofLeft(packagePassword));
        }

        public Builder packagePassword(SecureStringResponse packagePassword) {
            return packagePassword(Either.ofRight(packagePassword));
        }

        public Builder packagePath(@Nullable Object packagePath) {
            $.packagePath = packagePath;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public SSISPackageLocationResponse build() {
            return $;
        }
    }

}
