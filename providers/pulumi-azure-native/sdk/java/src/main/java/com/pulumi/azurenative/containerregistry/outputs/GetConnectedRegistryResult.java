// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.outputs;

import com.pulumi.azurenative.containerregistry.outputs.ActivationPropertiesResponse;
import com.pulumi.azurenative.containerregistry.outputs.LoggingPropertiesResponse;
import com.pulumi.azurenative.containerregistry.outputs.LoginServerPropertiesResponse;
import com.pulumi.azurenative.containerregistry.outputs.ParentPropertiesResponse;
import com.pulumi.azurenative.containerregistry.outputs.StatusDetailPropertiesResponse;
import com.pulumi.azurenative.containerregistry.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectedRegistryResult {
    /**
     * The activation properties of the connected registry.
     * 
     */
    private final ActivationPropertiesResponse activation;
    /**
     * The list of the ACR token resource IDs used to authenticate clients to the connected registry.
     * 
     */
    private final @Nullable List<String> clientTokenIds;
    /**
     * The current connection state of the connected registry.
     * 
     */
    private final String connectionState;
    /**
     * The resource ID.
     * 
     */
    private final String id;
    /**
     * The last activity time of the connected registry.
     * 
     */
    private final String lastActivityTime;
    /**
     * The logging properties of the connected registry.
     * 
     */
    private final @Nullable LoggingPropertiesResponse logging;
    /**
     * The login server properties of the connected registry.
     * 
     */
    private final @Nullable LoginServerPropertiesResponse loginServer;
    /**
     * The mode of the connected registry resource that indicates the permissions of the registry.
     * 
     */
    private final String mode;
    /**
     * The name of the resource.
     * 
     */
    private final String name;
    /**
     * The parent of the connected registry.
     * 
     */
    private final ParentPropertiesResponse parent;
    /**
     * Provisioning state of the resource.
     * 
     */
    private final String provisioningState;
    /**
     * The list of current statuses of the connected registry.
     * 
     */
    private final List<StatusDetailPropertiesResponse> statusDetails;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * The type of the resource.
     * 
     */
    private final String type;
    /**
     * The current version of ACR runtime on the connected registry.
     * 
     */
    private final String version;

    @CustomType.Constructor
    private GetConnectedRegistryResult(
        @CustomType.Parameter("activation") ActivationPropertiesResponse activation,
        @CustomType.Parameter("clientTokenIds") @Nullable List<String> clientTokenIds,
        @CustomType.Parameter("connectionState") String connectionState,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lastActivityTime") String lastActivityTime,
        @CustomType.Parameter("logging") @Nullable LoggingPropertiesResponse logging,
        @CustomType.Parameter("loginServer") @Nullable LoginServerPropertiesResponse loginServer,
        @CustomType.Parameter("mode") String mode,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("parent") ParentPropertiesResponse parent,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("statusDetails") List<StatusDetailPropertiesResponse> statusDetails,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("version") String version) {
        this.activation = activation;
        this.clientTokenIds = clientTokenIds;
        this.connectionState = connectionState;
        this.id = id;
        this.lastActivityTime = lastActivityTime;
        this.logging = logging;
        this.loginServer = loginServer;
        this.mode = mode;
        this.name = name;
        this.parent = parent;
        this.provisioningState = provisioningState;
        this.statusDetails = statusDetails;
        this.systemData = systemData;
        this.type = type;
        this.version = version;
    }

    /**
     * The activation properties of the connected registry.
     * 
    */
    public ActivationPropertiesResponse activation() {
        return this.activation;
    }
    /**
     * The list of the ACR token resource IDs used to authenticate clients to the connected registry.
     * 
    */
    public List<String> clientTokenIds() {
        return this.clientTokenIds == null ? List.of() : this.clientTokenIds;
    }
    /**
     * The current connection state of the connected registry.
     * 
    */
    public String connectionState() {
        return this.connectionState;
    }
    /**
     * The resource ID.
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * The last activity time of the connected registry.
     * 
    */
    public String lastActivityTime() {
        return this.lastActivityTime;
    }
    /**
     * The logging properties of the connected registry.
     * 
    */
    public Optional<LoggingPropertiesResponse> logging() {
        return Optional.ofNullable(this.logging);
    }
    /**
     * The login server properties of the connected registry.
     * 
    */
    public Optional<LoginServerPropertiesResponse> loginServer() {
        return Optional.ofNullable(this.loginServer);
    }
    /**
     * The mode of the connected registry resource that indicates the permissions of the registry.
     * 
    */
    public String mode() {
        return this.mode;
    }
    /**
     * The name of the resource.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * The parent of the connected registry.
     * 
    */
    public ParentPropertiesResponse parent() {
        return this.parent;
    }
    /**
     * Provisioning state of the resource.
     * 
    */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * The list of current statuses of the connected registry.
     * 
    */
    public List<StatusDetailPropertiesResponse> statusDetails() {
        return this.statusDetails;
    }
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * 
    */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * The type of the resource.
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * The current version of ACR runtime on the connected registry.
     * 
    */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectedRegistryResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActivationPropertiesResponse activation;
        private @Nullable List<String> clientTokenIds;
        private String connectionState;
        private String id;
        private String lastActivityTime;
        private @Nullable LoggingPropertiesResponse logging;
        private @Nullable LoginServerPropertiesResponse loginServer;
        private String mode;
        private String name;
        private ParentPropertiesResponse parent;
        private String provisioningState;
        private List<StatusDetailPropertiesResponse> statusDetails;
        private SystemDataResponse systemData;
        private String type;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetConnectedRegistryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activation = defaults.activation;
    	      this.clientTokenIds = defaults.clientTokenIds;
    	      this.connectionState = defaults.connectionState;
    	      this.id = defaults.id;
    	      this.lastActivityTime = defaults.lastActivityTime;
    	      this.logging = defaults.logging;
    	      this.loginServer = defaults.loginServer;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
    	      this.parent = defaults.parent;
    	      this.provisioningState = defaults.provisioningState;
    	      this.statusDetails = defaults.statusDetails;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        public Builder activation(ActivationPropertiesResponse activation) {
            this.activation = Objects.requireNonNull(activation);
            return this;
        }
        public Builder clientTokenIds(@Nullable List<String> clientTokenIds) {
            this.clientTokenIds = clientTokenIds;
            return this;
        }
        public Builder clientTokenIds(String... clientTokenIds) {
            return clientTokenIds(List.of(clientTokenIds));
        }
        public Builder connectionState(String connectionState) {
            this.connectionState = Objects.requireNonNull(connectionState);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lastActivityTime(String lastActivityTime) {
            this.lastActivityTime = Objects.requireNonNull(lastActivityTime);
            return this;
        }
        public Builder logging(@Nullable LoggingPropertiesResponse logging) {
            this.logging = logging;
            return this;
        }
        public Builder loginServer(@Nullable LoginServerPropertiesResponse loginServer) {
            this.loginServer = loginServer;
            return this;
        }
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder parent(ParentPropertiesResponse parent) {
            this.parent = Objects.requireNonNull(parent);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder statusDetails(List<StatusDetailPropertiesResponse> statusDetails) {
            this.statusDetails = Objects.requireNonNull(statusDetails);
            return this;
        }
        public Builder statusDetails(StatusDetailPropertiesResponse... statusDetails) {
            return statusDetails(List.of(statusDetails));
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public GetConnectedRegistryResult build() {
            return new GetConnectedRegistryResult(activation, clientTokenIds, connectionState, id, lastActivityTime, logging, loginServer, mode, name, parent, provisioningState, statusDetails, systemData, type, version);
        }
    }
}
