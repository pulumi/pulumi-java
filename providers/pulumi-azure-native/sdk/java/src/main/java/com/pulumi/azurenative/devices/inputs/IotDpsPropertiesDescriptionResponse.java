// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devices.inputs;

import com.pulumi.azurenative.devices.inputs.IotHubDefinitionDescriptionResponse;
import com.pulumi.azurenative.devices.inputs.PrivateEndpointConnectionResponse;
import com.pulumi.azurenative.devices.inputs.SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse;
import com.pulumi.azurenative.devices.inputs.TargetIpFilterRuleResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
 * 
 */
public final class IotDpsPropertiesDescriptionResponse extends com.pulumi.resources.InvokeArgs {

    public static final IotDpsPropertiesDescriptionResponse Empty = new IotDpsPropertiesDescriptionResponse();

    /**
     * Allocation policy to be used by this provisioning service.
     * 
     */
    @Import(name="allocationPolicy")
    private @Nullable String allocationPolicy;

    /**
     * @return Allocation policy to be used by this provisioning service.
     * 
     */
    public Optional<String> allocationPolicy() {
        return Optional.ofNullable(this.allocationPolicy);
    }

    /**
     * List of authorization keys for a provisioning service.
     * 
     */
    @Import(name="authorizationPolicies")
    private @Nullable List<SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse> authorizationPolicies;

    /**
     * @return List of authorization keys for a provisioning service.
     * 
     */
    public Optional<List<SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse>> authorizationPolicies() {
        return Optional.ofNullable(this.authorizationPolicies);
    }

    /**
     * Device endpoint for this provisioning service.
     * 
     */
    @Import(name="deviceProvisioningHostName", required=true)
    private String deviceProvisioningHostName;

    /**
     * @return Device endpoint for this provisioning service.
     * 
     */
    public String deviceProvisioningHostName() {
        return this.deviceProvisioningHostName;
    }

    /**
     * Unique identifier of this provisioning service.
     * 
     */
    @Import(name="idScope", required=true)
    private String idScope;

    /**
     * @return Unique identifier of this provisioning service.
     * 
     */
    public String idScope() {
        return this.idScope;
    }

    /**
     * List of IoT hubs associated with this provisioning service.
     * 
     */
    @Import(name="iotHubs")
    private @Nullable List<IotHubDefinitionDescriptionResponse> iotHubs;

    /**
     * @return List of IoT hubs associated with this provisioning service.
     * 
     */
    public Optional<List<IotHubDefinitionDescriptionResponse>> iotHubs() {
        return Optional.ofNullable(this.iotHubs);
    }

    /**
     * The IP filter rules.
     * 
     */
    @Import(name="ipFilterRules")
    private @Nullable List<TargetIpFilterRuleResponse> ipFilterRules;

    /**
     * @return The IP filter rules.
     * 
     */
    public Optional<List<TargetIpFilterRuleResponse>> ipFilterRules() {
        return Optional.ofNullable(this.ipFilterRules);
    }

    /**
     * Private endpoint connections created on this IotHub
     * 
     */
    @Import(name="privateEndpointConnections")
    private @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;

    /**
     * @return Private endpoint connections created on this IotHub
     * 
     */
    public Optional<List<PrivateEndpointConnectionResponse>> privateEndpointConnections() {
        return Optional.ofNullable(this.privateEndpointConnections);
    }

    /**
     * The ARM provisioning state of the provisioning service.
     * 
     */
    @Import(name="provisioningState")
    private @Nullable String provisioningState;

    /**
     * @return The ARM provisioning state of the provisioning service.
     * 
     */
    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    /**
     * Whether requests from Public Network are allowed
     * 
     */
    @Import(name="publicNetworkAccess")
    private @Nullable String publicNetworkAccess;

    /**
     * @return Whether requests from Public Network are allowed
     * 
     */
    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }

    /**
     * Service endpoint for provisioning service.
     * 
     */
    @Import(name="serviceOperationsHostName", required=true)
    private String serviceOperationsHostName;

    /**
     * @return Service endpoint for provisioning service.
     * 
     */
    public String serviceOperationsHostName() {
        return this.serviceOperationsHostName;
    }

    /**
     * Current state of the provisioning service.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return Current state of the provisioning service.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private IotDpsPropertiesDescriptionResponse() {}

    private IotDpsPropertiesDescriptionResponse(IotDpsPropertiesDescriptionResponse $) {
        this.allocationPolicy = $.allocationPolicy;
        this.authorizationPolicies = $.authorizationPolicies;
        this.deviceProvisioningHostName = $.deviceProvisioningHostName;
        this.idScope = $.idScope;
        this.iotHubs = $.iotHubs;
        this.ipFilterRules = $.ipFilterRules;
        this.privateEndpointConnections = $.privateEndpointConnections;
        this.provisioningState = $.provisioningState;
        this.publicNetworkAccess = $.publicNetworkAccess;
        this.serviceOperationsHostName = $.serviceOperationsHostName;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IotDpsPropertiesDescriptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IotDpsPropertiesDescriptionResponse $;

        public Builder() {
            $ = new IotDpsPropertiesDescriptionResponse();
        }

        public Builder(IotDpsPropertiesDescriptionResponse defaults) {
            $ = new IotDpsPropertiesDescriptionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocationPolicy Allocation policy to be used by this provisioning service.
         * 
         * @return builder
         * 
         */
        public Builder allocationPolicy(@Nullable String allocationPolicy) {
            $.allocationPolicy = allocationPolicy;
            return this;
        }

        /**
         * @param authorizationPolicies List of authorization keys for a provisioning service.
         * 
         * @return builder
         * 
         */
        public Builder authorizationPolicies(@Nullable List<SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse> authorizationPolicies) {
            $.authorizationPolicies = authorizationPolicies;
            return this;
        }

        /**
         * @param authorizationPolicies List of authorization keys for a provisioning service.
         * 
         * @return builder
         * 
         */
        public Builder authorizationPolicies(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse... authorizationPolicies) {
            return authorizationPolicies(List.of(authorizationPolicies));
        }

        /**
         * @param deviceProvisioningHostName Device endpoint for this provisioning service.
         * 
         * @return builder
         * 
         */
        public Builder deviceProvisioningHostName(String deviceProvisioningHostName) {
            $.deviceProvisioningHostName = deviceProvisioningHostName;
            return this;
        }

        /**
         * @param idScope Unique identifier of this provisioning service.
         * 
         * @return builder
         * 
         */
        public Builder idScope(String idScope) {
            $.idScope = idScope;
            return this;
        }

        /**
         * @param iotHubs List of IoT hubs associated with this provisioning service.
         * 
         * @return builder
         * 
         */
        public Builder iotHubs(@Nullable List<IotHubDefinitionDescriptionResponse> iotHubs) {
            $.iotHubs = iotHubs;
            return this;
        }

        /**
         * @param iotHubs List of IoT hubs associated with this provisioning service.
         * 
         * @return builder
         * 
         */
        public Builder iotHubs(IotHubDefinitionDescriptionResponse... iotHubs) {
            return iotHubs(List.of(iotHubs));
        }

        /**
         * @param ipFilterRules The IP filter rules.
         * 
         * @return builder
         * 
         */
        public Builder ipFilterRules(@Nullable List<TargetIpFilterRuleResponse> ipFilterRules) {
            $.ipFilterRules = ipFilterRules;
            return this;
        }

        /**
         * @param ipFilterRules The IP filter rules.
         * 
         * @return builder
         * 
         */
        public Builder ipFilterRules(TargetIpFilterRuleResponse... ipFilterRules) {
            return ipFilterRules(List.of(ipFilterRules));
        }

        /**
         * @param privateEndpointConnections Private endpoint connections created on this IotHub
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointConnections(@Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            $.privateEndpointConnections = privateEndpointConnections;
            return this;
        }

        /**
         * @param privateEndpointConnections Private endpoint connections created on this IotHub
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointConnections(PrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }

        /**
         * @param provisioningState The ARM provisioning state of the provisioning service.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(@Nullable String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param publicNetworkAccess Whether requests from Public Network are allowed
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            $.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        /**
         * @param serviceOperationsHostName Service endpoint for provisioning service.
         * 
         * @return builder
         * 
         */
        public Builder serviceOperationsHostName(String serviceOperationsHostName) {
            $.serviceOperationsHostName = serviceOperationsHostName;
            return this;
        }

        /**
         * @param state Current state of the provisioning service.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public IotDpsPropertiesDescriptionResponse build() {
            $.deviceProvisioningHostName = Objects.requireNonNull($.deviceProvisioningHostName, "expected parameter 'deviceProvisioningHostName' to be non-null");
            $.idScope = Objects.requireNonNull($.idScope, "expected parameter 'idScope' to be non-null");
            $.serviceOperationsHostName = Objects.requireNonNull($.serviceOperationsHostName, "expected parameter 'serviceOperationsHostName' to be non-null");
            return $;
        }
    }

}
