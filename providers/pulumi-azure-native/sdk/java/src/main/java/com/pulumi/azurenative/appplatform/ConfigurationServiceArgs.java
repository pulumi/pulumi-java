// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform;

import com.pulumi.azurenative.appplatform.inputs.ConfigurationServicePropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationServiceArgs Empty = new ConfigurationServiceArgs();

    /**
     * The name of Application Configuration Service.
     * 
     */
    @Import(name="configurationServiceName")
    private @Nullable Output<String> configurationServiceName;

    /**
     * @return The name of Application Configuration Service.
     * 
     */
    public Optional<Output<String>> configurationServiceName() {
        return Optional.ofNullable(this.configurationServiceName);
    }

    /**
     * Application Configuration Service properties payload
     * 
     */
    @Import(name="properties")
    private @Nullable Output<ConfigurationServicePropertiesArgs> properties;

    /**
     * @return Application Configuration Service properties payload
     * 
     */
    public Optional<Output<ConfigurationServicePropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Service resource.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the Service resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private ConfigurationServiceArgs() {}

    private ConfigurationServiceArgs(ConfigurationServiceArgs $) {
        this.configurationServiceName = $.configurationServiceName;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationServiceArgs $;

        public Builder() {
            $ = new ConfigurationServiceArgs();
        }

        public Builder(ConfigurationServiceArgs defaults) {
            $ = new ConfigurationServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationServiceName The name of Application Configuration Service.
         * 
         * @return builder
         * 
         */
        public Builder configurationServiceName(@Nullable Output<String> configurationServiceName) {
            $.configurationServiceName = configurationServiceName;
            return this;
        }

        /**
         * @param configurationServiceName The name of Application Configuration Service.
         * 
         * @return builder
         * 
         */
        public Builder configurationServiceName(String configurationServiceName) {
            return configurationServiceName(Output.of(configurationServiceName));
        }

        /**
         * @param properties Application Configuration Service properties payload
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<ConfigurationServicePropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Application Configuration Service properties payload
         * 
         * @return builder
         * 
         */
        public Builder properties(ConfigurationServicePropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serviceName The name of the Service resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the Service resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public ConfigurationServiceArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
