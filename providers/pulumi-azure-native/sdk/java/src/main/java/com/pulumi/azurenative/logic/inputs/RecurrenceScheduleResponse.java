// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.inputs.RecurrenceScheduleOccurrenceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The recurrence schedule.
 * 
 */
public final class RecurrenceScheduleResponse extends com.pulumi.resources.InvokeArgs {

    public static final RecurrenceScheduleResponse Empty = new RecurrenceScheduleResponse();

    /**
     * The hours.
     * 
     */
    @Import(name="hours")
    private @Nullable List<Integer> hours;

    public Optional<List<Integer>> hours() {
        return Optional.ofNullable(this.hours);
    }

    /**
     * The minutes.
     * 
     */
    @Import(name="minutes")
    private @Nullable List<Integer> minutes;

    public Optional<List<Integer>> minutes() {
        return Optional.ofNullable(this.minutes);
    }

    /**
     * The month days.
     * 
     */
    @Import(name="monthDays")
    private @Nullable List<Integer> monthDays;

    public Optional<List<Integer>> monthDays() {
        return Optional.ofNullable(this.monthDays);
    }

    /**
     * The monthly occurrences.
     * 
     */
    @Import(name="monthlyOccurrences")
    private @Nullable List<RecurrenceScheduleOccurrenceResponse> monthlyOccurrences;

    public Optional<List<RecurrenceScheduleOccurrenceResponse>> monthlyOccurrences() {
        return Optional.ofNullable(this.monthlyOccurrences);
    }

    /**
     * The days of the week.
     * 
     */
    @Import(name="weekDays")
    private @Nullable List<String> weekDays;

    public Optional<List<String>> weekDays() {
        return Optional.ofNullable(this.weekDays);
    }

    private RecurrenceScheduleResponse() {}

    private RecurrenceScheduleResponse(RecurrenceScheduleResponse $) {
        this.hours = $.hours;
        this.minutes = $.minutes;
        this.monthDays = $.monthDays;
        this.monthlyOccurrences = $.monthlyOccurrences;
        this.weekDays = $.weekDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecurrenceScheduleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecurrenceScheduleResponse $;

        public Builder() {
            $ = new RecurrenceScheduleResponse();
        }

        public Builder(RecurrenceScheduleResponse defaults) {
            $ = new RecurrenceScheduleResponse(Objects.requireNonNull(defaults));
        }

        public Builder hours(@Nullable List<Integer> hours) {
            $.hours = hours;
            return this;
        }

        public Builder hours(Integer... hours) {
            return hours(List.of(hours));
        }

        public Builder minutes(@Nullable List<Integer> minutes) {
            $.minutes = minutes;
            return this;
        }

        public Builder minutes(Integer... minutes) {
            return minutes(List.of(minutes));
        }

        public Builder monthDays(@Nullable List<Integer> monthDays) {
            $.monthDays = monthDays;
            return this;
        }

        public Builder monthDays(Integer... monthDays) {
            return monthDays(List.of(monthDays));
        }

        public Builder monthlyOccurrences(@Nullable List<RecurrenceScheduleOccurrenceResponse> monthlyOccurrences) {
            $.monthlyOccurrences = monthlyOccurrences;
            return this;
        }

        public Builder monthlyOccurrences(RecurrenceScheduleOccurrenceResponse... monthlyOccurrences) {
            return monthlyOccurrences(List.of(monthlyOccurrences));
        }

        public Builder weekDays(@Nullable List<String> weekDays) {
            $.weekDays = weekDays;
            return this;
        }

        public Builder weekDays(String... weekDays) {
            return weekDays(List.of(weekDays));
        }

        public RecurrenceScheduleResponse build() {
            return $;
        }
    }

}
