// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.enums.AllowedEndpointRecordType;
import com.pulumi.azurenative.network.enums.ProfileStatus;
import com.pulumi.azurenative.network.enums.TrafficRoutingMethod;
import com.pulumi.azurenative.network.enums.TrafficViewEnrollmentStatus;
import com.pulumi.azurenative.network.inputs.DnsConfigArgs;
import com.pulumi.azurenative.network.inputs.EndpointArgs;
import com.pulumi.azurenative.network.inputs.MonitorConfigArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProfileArgs Empty = new ProfileArgs();

    /**
     * The list of allowed endpoint record types.
     * 
     */
    @Import(name="allowedEndpointRecordTypes")
    private @Nullable Output<List<Either<String,AllowedEndpointRecordType>>> allowedEndpointRecordTypes;

    public Optional<Output<List<Either<String,AllowedEndpointRecordType>>>> allowedEndpointRecordTypes() {
        return Optional.ofNullable(this.allowedEndpointRecordTypes);
    }

    /**
     * The DNS settings of the Traffic Manager profile.
     * 
     */
    @Import(name="dnsConfig")
    private @Nullable Output<DnsConfigArgs> dnsConfig;

    public Optional<Output<DnsConfigArgs>> dnsConfig() {
        return Optional.ofNullable(this.dnsConfig);
    }

    /**
     * The list of endpoints in the Traffic Manager profile.
     * 
     */
    @Import(name="endpoints")
    private @Nullable Output<List<EndpointArgs>> endpoints;

    public Optional<Output<List<EndpointArgs>>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The Azure Region where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Maximum number of endpoints to be returned for MultiValue routing type.
     * 
     */
    @Import(name="maxReturn")
    private @Nullable Output<Double> maxReturn;

    public Optional<Output<Double>> maxReturn() {
        return Optional.ofNullable(this.maxReturn);
    }

    /**
     * The endpoint monitoring settings of the Traffic Manager profile.
     * 
     */
    @Import(name="monitorConfig")
    private @Nullable Output<MonitorConfigArgs> monitorConfig;

    public Optional<Output<MonitorConfigArgs>> monitorConfig() {
        return Optional.ofNullable(this.monitorConfig);
    }

    /**
     * The name of the resource
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Traffic Manager profile.
     * 
     */
    @Import(name="profileName")
    private @Nullable Output<String> profileName;

    public Optional<Output<String>> profileName() {
        return Optional.ofNullable(this.profileName);
    }

    /**
     * The status of the Traffic Manager profile.
     * 
     */
    @Import(name="profileStatus")
    private @Nullable Output<Either<String,ProfileStatus>> profileStatus;

    public Optional<Output<Either<String,ProfileStatus>>> profileStatus() {
        return Optional.ofNullable(this.profileStatus);
    }

    /**
     * The name of the resource group containing the Traffic Manager profile.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The traffic routing method of the Traffic Manager profile.
     * 
     */
    @Import(name="trafficRoutingMethod")
    private @Nullable Output<Either<String,TrafficRoutingMethod>> trafficRoutingMethod;

    public Optional<Output<Either<String,TrafficRoutingMethod>>> trafficRoutingMethod() {
        return Optional.ofNullable(this.trafficRoutingMethod);
    }

    /**
     * Indicates whether Traffic View is &#39;Enabled&#39; or &#39;Disabled&#39; for the Traffic Manager profile. Null, indicates &#39;Disabled&#39;. Enabling this feature will increase the cost of the Traffic Manage profile.
     * 
     */
    @Import(name="trafficViewEnrollmentStatus")
    private @Nullable Output<Either<String,TrafficViewEnrollmentStatus>> trafficViewEnrollmentStatus;

    public Optional<Output<Either<String,TrafficViewEnrollmentStatus>>> trafficViewEnrollmentStatus() {
        return Optional.ofNullable(this.trafficViewEnrollmentStatus);
    }

    /**
     * The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ProfileArgs() {}

    private ProfileArgs(ProfileArgs $) {
        this.allowedEndpointRecordTypes = $.allowedEndpointRecordTypes;
        this.dnsConfig = $.dnsConfig;
        this.endpoints = $.endpoints;
        this.id = $.id;
        this.location = $.location;
        this.maxReturn = $.maxReturn;
        this.monitorConfig = $.monitorConfig;
        this.name = $.name;
        this.profileName = $.profileName;
        this.profileStatus = $.profileStatus;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.trafficRoutingMethod = $.trafficRoutingMethod;
        this.trafficViewEnrollmentStatus = $.trafficViewEnrollmentStatus;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfileArgs $;

        public Builder() {
            $ = new ProfileArgs();
        }

        public Builder(ProfileArgs defaults) {
            $ = new ProfileArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedEndpointRecordTypes(@Nullable Output<List<Either<String,AllowedEndpointRecordType>>> allowedEndpointRecordTypes) {
            $.allowedEndpointRecordTypes = allowedEndpointRecordTypes;
            return this;
        }

        public Builder allowedEndpointRecordTypes(List<Either<String,AllowedEndpointRecordType>> allowedEndpointRecordTypes) {
            return allowedEndpointRecordTypes(Output.of(allowedEndpointRecordTypes));
        }

        public Builder allowedEndpointRecordTypes(Either<String,AllowedEndpointRecordType>... allowedEndpointRecordTypes) {
            return allowedEndpointRecordTypes(List.of(allowedEndpointRecordTypes));
        }

        public Builder dnsConfig(@Nullable Output<DnsConfigArgs> dnsConfig) {
            $.dnsConfig = dnsConfig;
            return this;
        }

        public Builder dnsConfig(DnsConfigArgs dnsConfig) {
            return dnsConfig(Output.of(dnsConfig));
        }

        public Builder endpoints(@Nullable Output<List<EndpointArgs>> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        public Builder endpoints(List<EndpointArgs> endpoints) {
            return endpoints(Output.of(endpoints));
        }

        public Builder endpoints(EndpointArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder maxReturn(@Nullable Output<Double> maxReturn) {
            $.maxReturn = maxReturn;
            return this;
        }

        public Builder maxReturn(Double maxReturn) {
            return maxReturn(Output.of(maxReturn));
        }

        public Builder monitorConfig(@Nullable Output<MonitorConfigArgs> monitorConfig) {
            $.monitorConfig = monitorConfig;
            return this;
        }

        public Builder monitorConfig(MonitorConfigArgs monitorConfig) {
            return monitorConfig(Output.of(monitorConfig));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder profileName(@Nullable Output<String> profileName) {
            $.profileName = profileName;
            return this;
        }

        public Builder profileName(String profileName) {
            return profileName(Output.of(profileName));
        }

        public Builder profileStatus(@Nullable Output<Either<String,ProfileStatus>> profileStatus) {
            $.profileStatus = profileStatus;
            return this;
        }

        public Builder profileStatus(Either<String,ProfileStatus> profileStatus) {
            return profileStatus(Output.of(profileStatus));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder trafficRoutingMethod(@Nullable Output<Either<String,TrafficRoutingMethod>> trafficRoutingMethod) {
            $.trafficRoutingMethod = trafficRoutingMethod;
            return this;
        }

        public Builder trafficRoutingMethod(Either<String,TrafficRoutingMethod> trafficRoutingMethod) {
            return trafficRoutingMethod(Output.of(trafficRoutingMethod));
        }

        public Builder trafficViewEnrollmentStatus(@Nullable Output<Either<String,TrafficViewEnrollmentStatus>> trafficViewEnrollmentStatus) {
            $.trafficViewEnrollmentStatus = trafficViewEnrollmentStatus;
            return this;
        }

        public Builder trafficViewEnrollmentStatus(Either<String,TrafficViewEnrollmentStatus> trafficViewEnrollmentStatus) {
            return trafficViewEnrollmentStatus(Output.of(trafficViewEnrollmentStatus));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ProfileArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
