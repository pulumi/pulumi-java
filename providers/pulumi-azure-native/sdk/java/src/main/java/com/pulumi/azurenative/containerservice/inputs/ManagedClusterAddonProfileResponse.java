// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.inputs;

import com.pulumi.azurenative.containerservice.inputs.ManagedClusterAddonProfileResponseIdentity;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A Kubernetes add-on profile for a managed cluster.
 * 
 */
public final class ManagedClusterAddonProfileResponse extends com.pulumi.resources.InvokeArgs {

    public static final ManagedClusterAddonProfileResponse Empty = new ManagedClusterAddonProfileResponse();

    /**
     * Key-value pairs for configuring an add-on.
     * 
     */
    @Import(name="config")
    private @Nullable Map<String,String> config;

    /**
     * @return Key-value pairs for configuring an add-on.
     * 
     */
    public Optional<Map<String,String>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * Whether the add-on is enabled or not.
     * 
     */
    @Import(name="enabled", required=true)
    private Boolean enabled;

    /**
     * @return Whether the add-on is enabled or not.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Information of user assigned identity used by this add-on.
     * 
     */
    @Import(name="identity", required=true)
    private ManagedClusterAddonProfileResponseIdentity identity;

    /**
     * @return Information of user assigned identity used by this add-on.
     * 
     */
    public ManagedClusterAddonProfileResponseIdentity identity() {
        return this.identity;
    }

    private ManagedClusterAddonProfileResponse() {}

    private ManagedClusterAddonProfileResponse(ManagedClusterAddonProfileResponse $) {
        this.config = $.config;
        this.enabled = $.enabled;
        this.identity = $.identity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedClusterAddonProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedClusterAddonProfileResponse $;

        public Builder() {
            $ = new ManagedClusterAddonProfileResponse();
        }

        public Builder(ManagedClusterAddonProfileResponse defaults) {
            $ = new ManagedClusterAddonProfileResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param config Key-value pairs for configuring an add-on.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Map<String,String> config) {
            $.config = config;
            return this;
        }

        /**
         * @param enabled Whether the add-on is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param identity Information of user assigned identity used by this add-on.
         * 
         * @return builder
         * 
         */
        public Builder identity(ManagedClusterAddonProfileResponseIdentity identity) {
            $.identity = identity;
            return this;
        }

        public ManagedClusterAddonProfileResponse build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.identity = Objects.requireNonNull($.identity, "expected parameter 'identity' to be non-null");
            return $;
        }
    }

}
