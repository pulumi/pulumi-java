// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.media.LiveOutputArgs;
import com.pulumi.azurenative.media.outputs.HlsResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Live Output.
 * API Version: 2020-05-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:media:LiveOutput myLiveOutput1 /subscriptions/0a6ec948-5a62-437d-b9df-934dc7c1b722/resourceGroups/mediaresources/providers/Microsoft.Media/mediaservices/slitestmedia10/liveevents/myLiveEvent1/liveoutputs/myLiveOutput1 
 * ```
 * 
 */
@ResourceType(type="azure-native:media:LiveOutput")
public class LiveOutput extends com.pulumi.resources.CustomResource {
    /**
     * ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate 1 hour and 30 minutes of archive window.
     * 
     */
    @Export(name="archiveWindowLength", type=String.class, parameters={})
    private Output<String> archiveWindowLength;

    /**
     * @return ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate 1 hour and 30 minutes of archive window.
     * 
     */
    public Output<String> archiveWindowLength() {
        return this.archiveWindowLength;
    }
    /**
     * The asset that the live output will write to.
     * 
     */
    @Export(name="assetName", type=String.class, parameters={})
    private Output<String> assetName;

    /**
     * @return The asset that the live output will write to.
     * 
     */
    public Output<String> assetName() {
        return this.assetName;
    }
    /**
     * The creation time the live output.
     * 
     */
    @Export(name="created", type=String.class, parameters={})
    private Output<String> created;

    /**
     * @return The creation time the live output.
     * 
     */
    public Output<String> created() {
        return this.created;
    }
    /**
     * The description of the live output.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the live output.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * HTTP Live Streaming (HLS) packing setting for the live output.
     * 
     */
    @Export(name="hls", type=HlsResponse.class, parameters={})
    private Output</* @Nullable */ HlsResponse> hls;

    /**
     * @return HTTP Live Streaming (HLS) packing setting for the live output.
     * 
     */
    public Output<Optional<HlsResponse>> hls() {
        return Codegen.optional(this.hls);
    }
    /**
     * The time the live output was last modified.
     * 
     */
    @Export(name="lastModified", type=String.class, parameters={})
    private Output<String> lastModified;

    /**
     * @return The time the live output was last modified.
     * 
     */
    public Output<String> lastModified() {
        return this.lastModified;
    }
    /**
     * The manifest file name. If not provided, the service will generate one automatically.
     * 
     */
    @Export(name="manifestName", type=String.class, parameters={})
    private Output</* @Nullable */ String> manifestName;

    /**
     * @return The manifest file name. If not provided, the service will generate one automatically.
     * 
     */
    public Output<Optional<String>> manifestName() {
        return Codegen.optional(this.manifestName);
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The initial timestamp that the live output will start at, any content before this value will not be archived.
     * 
     */
    @Export(name="outputSnapTime", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> outputSnapTime;

    /**
     * @return The initial timestamp that the live output will start at, any content before this value will not be archived.
     * 
     */
    public Output<Optional<Double>> outputSnapTime() {
        return Codegen.optional(this.outputSnapTime);
    }
    /**
     * The provisioning state of the live output.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the live output.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * The resource state of the live output.
     * 
     */
    @Export(name="resourceState", type=String.class, parameters={})
    private Output<String> resourceState;

    /**
     * @return The resource state of the live output.
     * 
     */
    public Output<String> resourceState() {
        return this.resourceState;
    }
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LiveOutput(String name) {
        this(name, LiveOutputArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LiveOutput(String name, LiveOutputArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LiveOutput(String name, LiveOutputArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:media:LiveOutput", name, args == null ? LiveOutputArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LiveOutput(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:media:LiveOutput", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:media/v20180330preview:LiveOutput").build()),
                Output.of(Alias.builder().type("azure-native:media/v20180601preview:LiveOutput").build()),
                Output.of(Alias.builder().type("azure-native:media/v20180701:LiveOutput").build()),
                Output.of(Alias.builder().type("azure-native:media/v20190501preview:LiveOutput").build()),
                Output.of(Alias.builder().type("azure-native:media/v20200501:LiveOutput").build()),
                Output.of(Alias.builder().type("azure-native:media/v20210601:LiveOutput").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LiveOutput get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LiveOutput(name, id, options);
    }
}
