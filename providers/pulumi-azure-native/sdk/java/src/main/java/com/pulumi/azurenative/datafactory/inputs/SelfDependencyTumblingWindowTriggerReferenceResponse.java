// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Self referenced tumbling window trigger dependency.
 * 
 */
public final class SelfDependencyTumblingWindowTriggerReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final SelfDependencyTumblingWindowTriggerReferenceResponse Empty = new SelfDependencyTumblingWindowTriggerReferenceResponse();

    /**
     * Timespan applied to the start time of a tumbling window when evaluating dependency.
     * 
     */
    @Import(name="offset", required=true)
    private String offset;

    public String offset() {
        return this.offset;
    }

    /**
     * The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used.
     * 
     */
    @Import(name="size")
    private @Nullable String size;

    public Optional<String> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * The type of dependency reference.
     * Expected value is &#39;SelfDependencyTumblingWindowTriggerReference&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private SelfDependencyTumblingWindowTriggerReferenceResponse() {}

    private SelfDependencyTumblingWindowTriggerReferenceResponse(SelfDependencyTumblingWindowTriggerReferenceResponse $) {
        this.offset = $.offset;
        this.size = $.size;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SelfDependencyTumblingWindowTriggerReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SelfDependencyTumblingWindowTriggerReferenceResponse $;

        public Builder() {
            $ = new SelfDependencyTumblingWindowTriggerReferenceResponse();
        }

        public Builder(SelfDependencyTumblingWindowTriggerReferenceResponse defaults) {
            $ = new SelfDependencyTumblingWindowTriggerReferenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder offset(String offset) {
            $.offset = offset;
            return this;
        }

        public Builder size(@Nullable String size) {
            $.size = size;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public SelfDependencyTumblingWindowTriggerReferenceResponse build() {
            $.offset = Objects.requireNonNull($.offset, "expected parameter 'offset' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
