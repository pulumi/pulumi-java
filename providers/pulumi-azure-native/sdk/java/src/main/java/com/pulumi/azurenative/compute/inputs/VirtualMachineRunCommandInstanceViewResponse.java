// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.InstanceViewStatusResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The instance view of a virtual machine run command.
 * 
 */
public final class VirtualMachineRunCommandInstanceViewResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualMachineRunCommandInstanceViewResponse Empty = new VirtualMachineRunCommandInstanceViewResponse();

    /**
     * Script end time.
     * 
     */
    @Import(name="endTime")
    private @Nullable String endTime;

    /**
     * @return Script end time.
     * 
     */
    public Optional<String> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * Script error stream.
     * 
     */
    @Import(name="error")
    private @Nullable String error;

    /**
     * @return Script error stream.
     * 
     */
    public Optional<String> error() {
        return Optional.ofNullable(this.error);
    }

    /**
     * Communicate script configuration errors or execution messages.
     * 
     */
    @Import(name="executionMessage")
    private @Nullable String executionMessage;

    /**
     * @return Communicate script configuration errors or execution messages.
     * 
     */
    public Optional<String> executionMessage() {
        return Optional.ofNullable(this.executionMessage);
    }

    /**
     * Script execution status.
     * 
     */
    @Import(name="executionState")
    private @Nullable String executionState;

    /**
     * @return Script execution status.
     * 
     */
    public Optional<String> executionState() {
        return Optional.ofNullable(this.executionState);
    }

    /**
     * Exit code returned from script execution.
     * 
     */
    @Import(name="exitCode")
    private @Nullable Integer exitCode;

    /**
     * @return Exit code returned from script execution.
     * 
     */
    public Optional<Integer> exitCode() {
        return Optional.ofNullable(this.exitCode);
    }

    /**
     * Script output stream.
     * 
     */
    @Import(name="output")
    private @Nullable String output;

    /**
     * @return Script output stream.
     * 
     */
    public Optional<String> output() {
        return Optional.ofNullable(this.output);
    }

    /**
     * Script start time.
     * 
     */
    @Import(name="startTime")
    private @Nullable String startTime;

    /**
     * @return Script start time.
     * 
     */
    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * The resource status information.
     * 
     */
    @Import(name="statuses")
    private @Nullable List<InstanceViewStatusResponse> statuses;

    /**
     * @return The resource status information.
     * 
     */
    public Optional<List<InstanceViewStatusResponse>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    private VirtualMachineRunCommandInstanceViewResponse() {}

    private VirtualMachineRunCommandInstanceViewResponse(VirtualMachineRunCommandInstanceViewResponse $) {
        this.endTime = $.endTime;
        this.error = $.error;
        this.executionMessage = $.executionMessage;
        this.executionState = $.executionState;
        this.exitCode = $.exitCode;
        this.output = $.output;
        this.startTime = $.startTime;
        this.statuses = $.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineRunCommandInstanceViewResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineRunCommandInstanceViewResponse $;

        public Builder() {
            $ = new VirtualMachineRunCommandInstanceViewResponse();
        }

        public Builder(VirtualMachineRunCommandInstanceViewResponse defaults) {
            $ = new VirtualMachineRunCommandInstanceViewResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param endTime Script end time.
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable String endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param error Script error stream.
         * 
         * @return builder
         * 
         */
        public Builder error(@Nullable String error) {
            $.error = error;
            return this;
        }

        /**
         * @param executionMessage Communicate script configuration errors or execution messages.
         * 
         * @return builder
         * 
         */
        public Builder executionMessage(@Nullable String executionMessage) {
            $.executionMessage = executionMessage;
            return this;
        }

        /**
         * @param executionState Script execution status.
         * 
         * @return builder
         * 
         */
        public Builder executionState(@Nullable String executionState) {
            $.executionState = executionState;
            return this;
        }

        /**
         * @param exitCode Exit code returned from script execution.
         * 
         * @return builder
         * 
         */
        public Builder exitCode(@Nullable Integer exitCode) {
            $.exitCode = exitCode;
            return this;
        }

        /**
         * @param output Script output stream.
         * 
         * @return builder
         * 
         */
        public Builder output(@Nullable String output) {
            $.output = output;
            return this;
        }

        /**
         * @param startTime Script start time.
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable String startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param statuses The resource status information.
         * 
         * @return builder
         * 
         */
        public Builder statuses(@Nullable List<InstanceViewStatusResponse> statuses) {
            $.statuses = statuses;
            return this;
        }

        /**
         * @param statuses The resource status information.
         * 
         * @return builder
         * 
         */
        public Builder statuses(InstanceViewStatusResponse... statuses) {
            return statuses(List.of(statuses));
        }

        public VirtualMachineRunCommandInstanceViewResponse build() {
            return $;
        }
    }

}
