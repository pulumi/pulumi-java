// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.enums.IPVersion;
import com.pulumi.azurenative.network.inputs.ExtendedLocationArgs;
import com.pulumi.azurenative.network.inputs.IpTagArgs;
import com.pulumi.azurenative.network.inputs.NatGatewayArgs;
import com.pulumi.azurenative.network.inputs.PublicIPPrefixSkuArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PublicIPPrefixArgs extends com.pulumi.resources.ResourceArgs {

    public static final PublicIPPrefixArgs Empty = new PublicIPPrefixArgs();

    /**
     * The customIpPrefix that this prefix is associated with.
     * 
     */
    @Import(name="customIPPrefix")
    private @Nullable Output<SubResourceArgs> customIPPrefix;

    /**
     * @return The customIpPrefix that this prefix is associated with.
     * 
     */
    public Optional<Output<SubResourceArgs>> customIPPrefix() {
        return Optional.ofNullable(this.customIPPrefix);
    }

    /**
     * The extended location of the public ip address.
     * 
     */
    @Import(name="extendedLocation")
    private @Nullable Output<ExtendedLocationArgs> extendedLocation;

    /**
     * @return The extended location of the public ip address.
     * 
     */
    public Optional<Output<ExtendedLocationArgs>> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The list of tags associated with the public IP prefix.
     * 
     */
    @Import(name="ipTags")
    private @Nullable Output<List<IpTagArgs>> ipTags;

    /**
     * @return The list of tags associated with the public IP prefix.
     * 
     */
    public Optional<Output<List<IpTagArgs>>> ipTags() {
        return Optional.ofNullable(this.ipTags);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * NatGateway of Public IP Prefix.
     * 
     */
    @Import(name="natGateway")
    private @Nullable Output<NatGatewayArgs> natGateway;

    /**
     * @return NatGateway of Public IP Prefix.
     * 
     */
    public Optional<Output<NatGatewayArgs>> natGateway() {
        return Optional.ofNullable(this.natGateway);
    }

    /**
     * The Length of the Public IP Prefix.
     * 
     */
    @Import(name="prefixLength")
    private @Nullable Output<Integer> prefixLength;

    /**
     * @return The Length of the Public IP Prefix.
     * 
     */
    public Optional<Output<Integer>> prefixLength() {
        return Optional.ofNullable(this.prefixLength);
    }

    /**
     * The public IP address version.
     * 
     */
    @Import(name="publicIPAddressVersion")
    private @Nullable Output<Either<String,IPVersion>> publicIPAddressVersion;

    /**
     * @return The public IP address version.
     * 
     */
    public Optional<Output<Either<String,IPVersion>>> publicIPAddressVersion() {
        return Optional.ofNullable(this.publicIPAddressVersion);
    }

    /**
     * The name of the public IP prefix.
     * 
     */
    @Import(name="publicIpPrefixName")
    private @Nullable Output<String> publicIpPrefixName;

    /**
     * @return The name of the public IP prefix.
     * 
     */
    public Optional<Output<String>> publicIpPrefixName() {
        return Optional.ofNullable(this.publicIpPrefixName);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The public IP prefix SKU.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<PublicIPPrefixSkuArgs> sku;

    /**
     * @return The public IP prefix SKU.
     * 
     */
    public Optional<Output<PublicIPPrefixSkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A list of availability zones denoting the IP allocated for the resource needs to come from.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    /**
     * @return A list of availability zones denoting the IP allocated for the resource needs to come from.
     * 
     */
    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private PublicIPPrefixArgs() {}

    private PublicIPPrefixArgs(PublicIPPrefixArgs $) {
        this.customIPPrefix = $.customIPPrefix;
        this.extendedLocation = $.extendedLocation;
        this.id = $.id;
        this.ipTags = $.ipTags;
        this.location = $.location;
        this.natGateway = $.natGateway;
        this.prefixLength = $.prefixLength;
        this.publicIPAddressVersion = $.publicIPAddressVersion;
        this.publicIpPrefixName = $.publicIpPrefixName;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicIPPrefixArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicIPPrefixArgs $;

        public Builder() {
            $ = new PublicIPPrefixArgs();
        }

        public Builder(PublicIPPrefixArgs defaults) {
            $ = new PublicIPPrefixArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customIPPrefix The customIpPrefix that this prefix is associated with.
         * 
         * @return builder
         * 
         */
        public Builder customIPPrefix(@Nullable Output<SubResourceArgs> customIPPrefix) {
            $.customIPPrefix = customIPPrefix;
            return this;
        }

        /**
         * @param customIPPrefix The customIpPrefix that this prefix is associated with.
         * 
         * @return builder
         * 
         */
        public Builder customIPPrefix(SubResourceArgs customIPPrefix) {
            return customIPPrefix(Output.of(customIPPrefix));
        }

        /**
         * @param extendedLocation The extended location of the public ip address.
         * 
         * @return builder
         * 
         */
        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            $.extendedLocation = extendedLocation;
            return this;
        }

        /**
         * @param extendedLocation The extended location of the public ip address.
         * 
         * @return builder
         * 
         */
        public Builder extendedLocation(ExtendedLocationArgs extendedLocation) {
            return extendedLocation(Output.of(extendedLocation));
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param ipTags The list of tags associated with the public IP prefix.
         * 
         * @return builder
         * 
         */
        public Builder ipTags(@Nullable Output<List<IpTagArgs>> ipTags) {
            $.ipTags = ipTags;
            return this;
        }

        /**
         * @param ipTags The list of tags associated with the public IP prefix.
         * 
         * @return builder
         * 
         */
        public Builder ipTags(List<IpTagArgs> ipTags) {
            return ipTags(Output.of(ipTags));
        }

        /**
         * @param ipTags The list of tags associated with the public IP prefix.
         * 
         * @return builder
         * 
         */
        public Builder ipTags(IpTagArgs... ipTags) {
            return ipTags(List.of(ipTags));
        }

        /**
         * @param location Resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param natGateway NatGateway of Public IP Prefix.
         * 
         * @return builder
         * 
         */
        public Builder natGateway(@Nullable Output<NatGatewayArgs> natGateway) {
            $.natGateway = natGateway;
            return this;
        }

        /**
         * @param natGateway NatGateway of Public IP Prefix.
         * 
         * @return builder
         * 
         */
        public Builder natGateway(NatGatewayArgs natGateway) {
            return natGateway(Output.of(natGateway));
        }

        /**
         * @param prefixLength The Length of the Public IP Prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefixLength(@Nullable Output<Integer> prefixLength) {
            $.prefixLength = prefixLength;
            return this;
        }

        /**
         * @param prefixLength The Length of the Public IP Prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefixLength(Integer prefixLength) {
            return prefixLength(Output.of(prefixLength));
        }

        /**
         * @param publicIPAddressVersion The public IP address version.
         * 
         * @return builder
         * 
         */
        public Builder publicIPAddressVersion(@Nullable Output<Either<String,IPVersion>> publicIPAddressVersion) {
            $.publicIPAddressVersion = publicIPAddressVersion;
            return this;
        }

        /**
         * @param publicIPAddressVersion The public IP address version.
         * 
         * @return builder
         * 
         */
        public Builder publicIPAddressVersion(Either<String,IPVersion> publicIPAddressVersion) {
            return publicIPAddressVersion(Output.of(publicIPAddressVersion));
        }

        /**
         * @param publicIPAddressVersion The public IP address version.
         * 
         * @return builder
         * 
         */
        public Builder publicIPAddressVersion(String publicIPAddressVersion) {
            return publicIPAddressVersion(Either.ofLeft(publicIPAddressVersion));
        }

        /**
         * @param publicIPAddressVersion The public IP address version.
         * 
         * @return builder
         * 
         */
        public Builder publicIPAddressVersion(IPVersion publicIPAddressVersion) {
            return publicIPAddressVersion(Either.ofRight(publicIPAddressVersion));
        }

        /**
         * @param publicIpPrefixName The name of the public IP prefix.
         * 
         * @return builder
         * 
         */
        public Builder publicIpPrefixName(@Nullable Output<String> publicIpPrefixName) {
            $.publicIpPrefixName = publicIpPrefixName;
            return this;
        }

        /**
         * @param publicIpPrefixName The name of the public IP prefix.
         * 
         * @return builder
         * 
         */
        public Builder publicIpPrefixName(String publicIpPrefixName) {
            return publicIpPrefixName(Output.of(publicIpPrefixName));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku The public IP prefix SKU.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<PublicIPPrefixSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The public IP prefix SKU.
         * 
         * @return builder
         * 
         */
        public Builder sku(PublicIPPrefixSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param zones A list of availability zones denoting the IP allocated for the resource needs to come from.
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones A list of availability zones denoting the IP allocated for the resource needs to come from.
         * 
         * @return builder
         * 
         */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones A list of availability zones denoting the IP allocated for the resource needs to come from.
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public PublicIPPrefixArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
