// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.healthcareapis.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Authentication configuration information
 * 
 */
public final class DicomServiceAuthenticationConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final DicomServiceAuthenticationConfigurationResponse Empty = new DicomServiceAuthenticationConfigurationResponse();

    /**
     * The audiences for the service
     * 
     */
    @Import(name="audiences", required=true)
    private List<String> audiences;

    /**
     * @return The audiences for the service
     * 
     */
    public List<String> audiences() {
        return this.audiences;
    }

    /**
     * The authority url for the service
     * 
     */
    @Import(name="authority", required=true)
    private String authority;

    /**
     * @return The authority url for the service
     * 
     */
    public String authority() {
        return this.authority;
    }

    private DicomServiceAuthenticationConfigurationResponse() {}

    private DicomServiceAuthenticationConfigurationResponse(DicomServiceAuthenticationConfigurationResponse $) {
        this.audiences = $.audiences;
        this.authority = $.authority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DicomServiceAuthenticationConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DicomServiceAuthenticationConfigurationResponse $;

        public Builder() {
            $ = new DicomServiceAuthenticationConfigurationResponse();
        }

        public Builder(DicomServiceAuthenticationConfigurationResponse defaults) {
            $ = new DicomServiceAuthenticationConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param audiences The audiences for the service
         * 
         * @return builder
         * 
         */
        public Builder audiences(List<String> audiences) {
            $.audiences = audiences;
            return this;
        }

        /**
         * @param audiences The audiences for the service
         * 
         * @return builder
         * 
         */
        public Builder audiences(String... audiences) {
            return audiences(List.of(audiences));
        }

        /**
         * @param authority The authority url for the service
         * 
         * @return builder
         * 
         */
        public Builder authority(String authority) {
            $.authority = authority;
            return this;
        }

        public DicomServiceAuthenticationConfigurationResponse build() {
            $.audiences = Objects.requireNonNull($.audiences, "expected parameter 'audiences' to be non-null");
            $.authority = Objects.requireNonNull($.authority, "expected parameter 'authority' to be non-null");
            return $;
        }
    }

}
