// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The destination information for the delivery of the report.
 * 
 */
public final class ReportDeliveryDestinationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ReportDeliveryDestinationResponse Empty = new ReportDeliveryDestinationResponse();

    /**
     * The name of the container where reports will be uploaded.
     * 
     */
    @Import(name="container", required=true)
    private String container;

    public String container() {
        return this.container;
    }

    /**
     * The resource id of the storage account where reports will be delivered.
     * 
     */
    @Import(name="resourceId", required=true)
    private String resourceId;

    public String resourceId() {
        return this.resourceId;
    }

    /**
     * The name of the directory where reports will be uploaded.
     * 
     */
    @Import(name="rootFolderPath")
    private @Nullable String rootFolderPath;

    public Optional<String> rootFolderPath() {
        return Optional.ofNullable(this.rootFolderPath);
    }

    private ReportDeliveryDestinationResponse() {}

    private ReportDeliveryDestinationResponse(ReportDeliveryDestinationResponse $) {
        this.container = $.container;
        this.resourceId = $.resourceId;
        this.rootFolderPath = $.rootFolderPath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReportDeliveryDestinationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReportDeliveryDestinationResponse $;

        public Builder() {
            $ = new ReportDeliveryDestinationResponse();
        }

        public Builder(ReportDeliveryDestinationResponse defaults) {
            $ = new ReportDeliveryDestinationResponse(Objects.requireNonNull(defaults));
        }

        public Builder container(String container) {
            $.container = container;
            return this;
        }

        public Builder resourceId(String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public Builder rootFolderPath(@Nullable String rootFolderPath) {
            $.rootFolderPath = rootFolderPath;
            return this;
        }

        public ReportDeliveryDestinationResponse build() {
            $.container = Objects.requireNonNull($.container, "expected parameter 'container' to be non-null");
            $.resourceId = Objects.requireNonNull($.resourceId, "expected parameter 'resourceId' to be non-null");
            return $;
        }
    }

}
