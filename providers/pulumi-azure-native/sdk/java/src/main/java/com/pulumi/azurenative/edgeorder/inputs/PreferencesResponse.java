// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.inputs;

import com.pulumi.azurenative.edgeorder.inputs.EncryptionPreferencesResponse;
import com.pulumi.azurenative.edgeorder.inputs.ManagementResourcePreferencesResponse;
import com.pulumi.azurenative.edgeorder.inputs.NotificationPreferenceResponse;
import com.pulumi.azurenative.edgeorder.inputs.TransportPreferencesResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Preferences related to the order
 * 
 */
public final class PreferencesResponse extends com.pulumi.resources.InvokeArgs {

    public static final PreferencesResponse Empty = new PreferencesResponse();

    /**
     * Preferences related to the Encryption.
     * 
     */
    @Import(name="encryptionPreferences")
    private @Nullable EncryptionPreferencesResponse encryptionPreferences;

    public Optional<EncryptionPreferencesResponse> encryptionPreferences() {
        return Optional.ofNullable(this.encryptionPreferences);
    }

    /**
     * Preferences related to the Management resource.
     * 
     */
    @Import(name="managementResourcePreferences")
    private @Nullable ManagementResourcePreferencesResponse managementResourcePreferences;

    public Optional<ManagementResourcePreferencesResponse> managementResourcePreferences() {
        return Optional.ofNullable(this.managementResourcePreferences);
    }

    /**
     * Notification preferences.
     * 
     */
    @Import(name="notificationPreferences")
    private @Nullable List<NotificationPreferenceResponse> notificationPreferences;

    public Optional<List<NotificationPreferenceResponse>> notificationPreferences() {
        return Optional.ofNullable(this.notificationPreferences);
    }

    /**
     * Preferences related to the shipment logistics of the order.
     * 
     */
    @Import(name="transportPreferences")
    private @Nullable TransportPreferencesResponse transportPreferences;

    public Optional<TransportPreferencesResponse> transportPreferences() {
        return Optional.ofNullable(this.transportPreferences);
    }

    private PreferencesResponse() {}

    private PreferencesResponse(PreferencesResponse $) {
        this.encryptionPreferences = $.encryptionPreferences;
        this.managementResourcePreferences = $.managementResourcePreferences;
        this.notificationPreferences = $.notificationPreferences;
        this.transportPreferences = $.transportPreferences;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreferencesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreferencesResponse $;

        public Builder() {
            $ = new PreferencesResponse();
        }

        public Builder(PreferencesResponse defaults) {
            $ = new PreferencesResponse(Objects.requireNonNull(defaults));
        }

        public Builder encryptionPreferences(@Nullable EncryptionPreferencesResponse encryptionPreferences) {
            $.encryptionPreferences = encryptionPreferences;
            return this;
        }

        public Builder managementResourcePreferences(@Nullable ManagementResourcePreferencesResponse managementResourcePreferences) {
            $.managementResourcePreferences = managementResourcePreferences;
            return this;
        }

        public Builder notificationPreferences(@Nullable List<NotificationPreferenceResponse> notificationPreferences) {
            $.notificationPreferences = notificationPreferences;
            return this;
        }

        public Builder notificationPreferences(NotificationPreferenceResponse... notificationPreferences) {
            return notificationPreferences(List.of(notificationPreferences));
        }

        public Builder transportPreferences(@Nullable TransportPreferencesResponse transportPreferences) {
            $.transportPreferences = transportPreferences;
            return this;
        }

        public PreferencesResponse build() {
            return $;
        }
    }

}
