// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.inputs;

import com.pulumi.azurenative.eventgrid.inputs.JsonFieldResponse;
import com.pulumi.azurenative.eventgrid.inputs.JsonFieldWithDefaultResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema.
 * 
 */
public final class JsonInputSchemaMappingResponse extends com.pulumi.resources.InvokeArgs {

    public static final JsonInputSchemaMappingResponse Empty = new JsonInputSchemaMappingResponse();

    /**
     * The mapping information for the DataVersion property of the Event Grid Event.
     * 
     */
    @Import(name="dataVersion")
    private @Nullable JsonFieldWithDefaultResponse dataVersion;

    /**
     * @return The mapping information for the DataVersion property of the Event Grid Event.
     * 
     */
    public Optional<JsonFieldWithDefaultResponse> dataVersion() {
        return Optional.ofNullable(this.dataVersion);
    }

    /**
     * The mapping information for the EventTime property of the Event Grid Event.
     * 
     */
    @Import(name="eventTime")
    private @Nullable JsonFieldResponse eventTime;

    /**
     * @return The mapping information for the EventTime property of the Event Grid Event.
     * 
     */
    public Optional<JsonFieldResponse> eventTime() {
        return Optional.ofNullable(this.eventTime);
    }

    /**
     * The mapping information for the EventType property of the Event Grid Event.
     * 
     */
    @Import(name="eventType")
    private @Nullable JsonFieldWithDefaultResponse eventType;

    /**
     * @return The mapping information for the EventType property of the Event Grid Event.
     * 
     */
    public Optional<JsonFieldWithDefaultResponse> eventType() {
        return Optional.ofNullable(this.eventType);
    }

    /**
     * The mapping information for the Id property of the Event Grid Event.
     * 
     */
    @Import(name="id")
    private @Nullable JsonFieldResponse id;

    /**
     * @return The mapping information for the Id property of the Event Grid Event.
     * 
     */
    public Optional<JsonFieldResponse> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Type of the custom mapping
     * Expected value is &#39;Json&#39;.
     * 
     */
    @Import(name="inputSchemaMappingType", required=true)
    private String inputSchemaMappingType;

    /**
     * @return Type of the custom mapping
     * Expected value is &#39;Json&#39;.
     * 
     */
    public String inputSchemaMappingType() {
        return this.inputSchemaMappingType;
    }

    /**
     * The mapping information for the Subject property of the Event Grid Event.
     * 
     */
    @Import(name="subject")
    private @Nullable JsonFieldWithDefaultResponse subject;

    /**
     * @return The mapping information for the Subject property of the Event Grid Event.
     * 
     */
    public Optional<JsonFieldWithDefaultResponse> subject() {
        return Optional.ofNullable(this.subject);
    }

    /**
     * The mapping information for the Topic property of the Event Grid Event.
     * 
     */
    @Import(name="topic")
    private @Nullable JsonFieldResponse topic;

    /**
     * @return The mapping information for the Topic property of the Event Grid Event.
     * 
     */
    public Optional<JsonFieldResponse> topic() {
        return Optional.ofNullable(this.topic);
    }

    private JsonInputSchemaMappingResponse() {}

    private JsonInputSchemaMappingResponse(JsonInputSchemaMappingResponse $) {
        this.dataVersion = $.dataVersion;
        this.eventTime = $.eventTime;
        this.eventType = $.eventType;
        this.id = $.id;
        this.inputSchemaMappingType = $.inputSchemaMappingType;
        this.subject = $.subject;
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JsonInputSchemaMappingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JsonInputSchemaMappingResponse $;

        public Builder() {
            $ = new JsonInputSchemaMappingResponse();
        }

        public Builder(JsonInputSchemaMappingResponse defaults) {
            $ = new JsonInputSchemaMappingResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataVersion The mapping information for the DataVersion property of the Event Grid Event.
         * 
         * @return builder
         * 
         */
        public Builder dataVersion(@Nullable JsonFieldWithDefaultResponse dataVersion) {
            $.dataVersion = dataVersion;
            return this;
        }

        /**
         * @param eventTime The mapping information for the EventTime property of the Event Grid Event.
         * 
         * @return builder
         * 
         */
        public Builder eventTime(@Nullable JsonFieldResponse eventTime) {
            $.eventTime = eventTime;
            return this;
        }

        /**
         * @param eventType The mapping information for the EventType property of the Event Grid Event.
         * 
         * @return builder
         * 
         */
        public Builder eventType(@Nullable JsonFieldWithDefaultResponse eventType) {
            $.eventType = eventType;
            return this;
        }

        /**
         * @param id The mapping information for the Id property of the Event Grid Event.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable JsonFieldResponse id) {
            $.id = id;
            return this;
        }

        /**
         * @param inputSchemaMappingType Type of the custom mapping
         * Expected value is &#39;Json&#39;.
         * 
         * @return builder
         * 
         */
        public Builder inputSchemaMappingType(String inputSchemaMappingType) {
            $.inputSchemaMappingType = inputSchemaMappingType;
            return this;
        }

        /**
         * @param subject The mapping information for the Subject property of the Event Grid Event.
         * 
         * @return builder
         * 
         */
        public Builder subject(@Nullable JsonFieldWithDefaultResponse subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param topic The mapping information for the Topic property of the Event Grid Event.
         * 
         * @return builder
         * 
         */
        public Builder topic(@Nullable JsonFieldResponse topic) {
            $.topic = topic;
            return this;
        }

        public JsonInputSchemaMappingResponse build() {
            $.inputSchemaMappingType = Codegen.stringProp("inputSchemaMappingType").arg($.inputSchemaMappingType).require();
            return $;
        }
    }

}
