// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics;

import com.pulumi.azurenative.streamanalytics.inputs.AvroSerializationArgs;
import com.pulumi.azurenative.streamanalytics.inputs.AzureDataLakeStoreOutputDataSourceArgs;
import com.pulumi.azurenative.streamanalytics.inputs.AzureSqlDatabaseOutputDataSourceArgs;
import com.pulumi.azurenative.streamanalytics.inputs.AzureTableOutputDataSourceArgs;
import com.pulumi.azurenative.streamanalytics.inputs.BlobOutputDataSourceArgs;
import com.pulumi.azurenative.streamanalytics.inputs.CsvSerializationArgs;
import com.pulumi.azurenative.streamanalytics.inputs.DocumentDbOutputDataSourceArgs;
import com.pulumi.azurenative.streamanalytics.inputs.EventHubOutputDataSourceArgs;
import com.pulumi.azurenative.streamanalytics.inputs.JsonSerializationArgs;
import com.pulumi.azurenative.streamanalytics.inputs.PowerBIOutputDataSourceArgs;
import com.pulumi.azurenative.streamanalytics.inputs.ServiceBusQueueOutputDataSourceArgs;
import com.pulumi.azurenative.streamanalytics.inputs.ServiceBusTopicOutputDataSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final OutputArgs Empty = new OutputArgs();

    /**
     * Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="datasource")
    private @Nullable Output<Object> datasource;

    public Optional<Output<Object>> datasource() {
        return Optional.ofNullable(this.datasource);
    }

    /**
     * The name of the streaming job.
     * 
     */
    @Import(name="jobName", required=true)
    private Output<String> jobName;

    public Output<String> jobName() {
        return this.jobName;
    }

    /**
     * Resource name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the output.
     * 
     */
    @Import(name="outputName")
    private @Nullable Output<String> outputName;

    public Optional<Output<String>> outputName() {
        return Optional.ofNullable(this.outputName);
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="serialization")
    private @Nullable Output<Object> serialization;

    public Optional<Output<Object>> serialization() {
        return Optional.ofNullable(this.serialization);
    }

    private OutputArgs() {}

    private OutputArgs(OutputArgs $) {
        this.datasource = $.datasource;
        this.jobName = $.jobName;
        this.name = $.name;
        this.outputName = $.outputName;
        this.resourceGroupName = $.resourceGroupName;
        this.serialization = $.serialization;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OutputArgs $;

        public Builder() {
            $ = new OutputArgs();
        }

        public Builder(OutputArgs defaults) {
            $ = new OutputArgs(Objects.requireNonNull(defaults));
        }

        public Builder datasource(@Nullable Output<Object> datasource) {
            $.datasource = datasource;
            return this;
        }

        public Builder datasource(Object datasource) {
            return datasource(Output.of(datasource));
        }

        public Builder jobName(Output<String> jobName) {
            $.jobName = jobName;
            return this;
        }

        public Builder jobName(String jobName) {
            return jobName(Output.of(jobName));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder outputName(@Nullable Output<String> outputName) {
            $.outputName = outputName;
            return this;
        }

        public Builder outputName(String outputName) {
            return outputName(Output.of(outputName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder serialization(@Nullable Output<Object> serialization) {
            $.serialization = serialization;
            return this;
        }

        public Builder serialization(Object serialization) {
            return serialization(Output.of(serialization));
        }

        public OutputArgs build() {
            $.jobName = Objects.requireNonNull($.jobName, "expected parameter 'jobName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
