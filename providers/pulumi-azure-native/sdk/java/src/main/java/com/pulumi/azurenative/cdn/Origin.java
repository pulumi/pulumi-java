// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.cdn.OriginArgs;
import com.pulumi.azurenative.cdn.outputs.SystemDataResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins.
 * API Version: 2020-09-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:cdn:Origin www-someDomain-net /subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/origins/www-someDomain-net 
 * ```
 * 
 */
@ResourceType(type="azure-native:cdn:Origin")
public class Origin extends com.pulumi.resources.CustomResource {
    /**
     * Origin is enabled for load balancing or not
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Origin is enabled for load balancing or not
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.
     * 
     */
    @Export(name="hostName", type=String.class, parameters={})
    private Output<String> hostName;

    /**
     * @return The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.
     * 
     */
    public Output<String> hostName() {
        return this.hostName;
    }
    /**
     * The value of the HTTP port. Must be between 1 and 65535.
     * 
     */
    @Export(name="httpPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> httpPort;

    /**
     * @return The value of the HTTP port. Must be between 1 and 65535.
     * 
     */
    public Output<Optional<Integer>> httpPort() {
        return Codegen.optional(this.httpPort);
    }
    /**
     * The value of the HTTPS port. Must be between 1 and 65535.
     * 
     */
    @Export(name="httpsPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> httpsPort;

    /**
     * @return The value of the HTTPS port. Must be between 1 and 65535.
     * 
     */
    public Output<Optional<Integer>> httpsPort() {
        return Codegen.optional(this.httpsPort);
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
     * 
     */
    @Export(name="originHostHeader", type=String.class, parameters={})
    private Output</* @Nullable */ String> originHostHeader;

    /**
     * @return The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
     * 
     */
    public Output<Optional<String>> originHostHeader() {
        return Codegen.optional(this.originHostHeader);
    }
    /**
     * Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
     * 
     */
    @Export(name="priority", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> priority;

    /**
     * @return Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
     * 
     */
    public Output<Optional<Integer>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * The approval status for the connection to the Private Link
     * 
     */
    @Export(name="privateEndpointStatus", type=String.class, parameters={})
    private Output<String> privateEndpointStatus;

    /**
     * @return The approval status for the connection to the Private Link
     * 
     */
    public Output<String> privateEndpointStatus() {
        return this.privateEndpointStatus;
    }
    /**
     * The Alias of the Private Link resource. Populating this optional field indicates that this origin is &#39;Private&#39;
     * 
     */
    @Export(name="privateLinkAlias", type=String.class, parameters={})
    private Output</* @Nullable */ String> privateLinkAlias;

    /**
     * @return The Alias of the Private Link resource. Populating this optional field indicates that this origin is &#39;Private&#39;
     * 
     */
    public Output<Optional<String>> privateLinkAlias() {
        return Codegen.optional(this.privateLinkAlias);
    }
    /**
     * A custom message to be included in the approval request to connect to the Private Link.
     * 
     */
    @Export(name="privateLinkApprovalMessage", type=String.class, parameters={})
    private Output</* @Nullable */ String> privateLinkApprovalMessage;

    /**
     * @return A custom message to be included in the approval request to connect to the Private Link.
     * 
     */
    public Output<Optional<String>> privateLinkApprovalMessage() {
        return Codegen.optional(this.privateLinkApprovalMessage);
    }
    /**
     * The location of the Private Link resource. Required only if &#39;privateLinkResourceId&#39; is populated
     * 
     */
    @Export(name="privateLinkLocation", type=String.class, parameters={})
    private Output</* @Nullable */ String> privateLinkLocation;

    /**
     * @return The location of the Private Link resource. Required only if &#39;privateLinkResourceId&#39; is populated
     * 
     */
    public Output<Optional<String>> privateLinkLocation() {
        return Codegen.optional(this.privateLinkLocation);
    }
    /**
     * The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is &#39;Private&#39;
     * 
     */
    @Export(name="privateLinkResourceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> privateLinkResourceId;

    /**
     * @return The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is &#39;Private&#39;
     * 
     */
    public Output<Optional<String>> privateLinkResourceId() {
        return Codegen.optional(this.privateLinkResourceId);
    }
    /**
     * Provisioning status of the origin.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return Provisioning status of the origin.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Resource status of the origin.
     * 
     */
    @Export(name="resourceState", type=String.class, parameters={})
    private Output<String> resourceState;

    /**
     * @return Resource status of the origin.
     * 
     */
    public Output<String> resourceState() {
        return this.resourceState;
    }
    /**
     * Read only system data
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Read only system data
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
     * 
     */
    @Export(name="weight", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> weight;

    /**
     * @return Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
     * 
     */
    public Output<Optional<Integer>> weight() {
        return Codegen.optional(this.weight);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Origin(String name) {
        this(name, OriginArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Origin(String name, OriginArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Origin(String name, OriginArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:cdn:Origin", name, args == null ? OriginArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Origin(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:cdn:Origin", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:cdn/v20150601:Origin").build()),
                Output.of(Alias.builder().type("azure-native:cdn/v20160402:Origin").build()),
                Output.of(Alias.builder().type("azure-native:cdn/v20191231:Origin").build()),
                Output.of(Alias.builder().type("azure-native:cdn/v20200331:Origin").build()),
                Output.of(Alias.builder().type("azure-native:cdn/v20200415:Origin").build()),
                Output.of(Alias.builder().type("azure-native:cdn/v20200901:Origin").build()),
                Output.of(Alias.builder().type("azure-native:cdn/v20210601:Origin").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Origin get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Origin(name, id, options);
    }
}
