// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Description of the IoT hub.
 * 
 */
public final class IotHubDefinitionDescriptionResponse extends com.pulumi.resources.InvokeArgs {

    public static final IotHubDefinitionDescriptionResponse Empty = new IotHubDefinitionDescriptionResponse();

    /**
     * weight to apply for a given iot h.
     * 
     */
    @Import(name="allocationWeight")
    private @Nullable Integer allocationWeight;

    public Optional<Integer> allocationWeight() {
        return Optional.ofNullable(this.allocationWeight);
    }

    /**
     * flag for applying allocationPolicy or not for a given iot hub.
     * 
     */
    @Import(name="applyAllocationPolicy")
    private @Nullable Boolean applyAllocationPolicy;

    public Optional<Boolean> applyAllocationPolicy() {
        return Optional.ofNullable(this.applyAllocationPolicy);
    }

    /**
     * Connection string of the IoT hub.
     * 
     */
    @Import(name="connectionString", required=true)
    private String connectionString;

    public String connectionString() {
        return this.connectionString;
    }

    /**
     * ARM region of the IoT hub.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    /**
     * Host name of the IoT hub.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    private IotHubDefinitionDescriptionResponse() {}

    private IotHubDefinitionDescriptionResponse(IotHubDefinitionDescriptionResponse $) {
        this.allocationWeight = $.allocationWeight;
        this.applyAllocationPolicy = $.applyAllocationPolicy;
        this.connectionString = $.connectionString;
        this.location = $.location;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IotHubDefinitionDescriptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IotHubDefinitionDescriptionResponse $;

        public Builder() {
            $ = new IotHubDefinitionDescriptionResponse();
        }

        public Builder(IotHubDefinitionDescriptionResponse defaults) {
            $ = new IotHubDefinitionDescriptionResponse(Objects.requireNonNull(defaults));
        }

        public Builder allocationWeight(@Nullable Integer allocationWeight) {
            $.allocationWeight = allocationWeight;
            return this;
        }

        public Builder applyAllocationPolicy(@Nullable Boolean applyAllocationPolicy) {
            $.applyAllocationPolicy = applyAllocationPolicy;
            return this;
        }

        public Builder connectionString(String connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public IotHubDefinitionDescriptionResponse build() {
            $.connectionString = Objects.requireNonNull($.connectionString, "expected parameter 'connectionString' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
