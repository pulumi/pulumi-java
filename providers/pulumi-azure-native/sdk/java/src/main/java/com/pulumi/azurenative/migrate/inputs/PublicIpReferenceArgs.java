// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Defines reference to a public IP.
 * 
 */
public final class PublicIpReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PublicIpReferenceArgs Empty = new PublicIpReferenceArgs();

    /**
     * Gets the ARM resource ID of the tracked resource being referenced.
     * 
     */
    @Import(name="sourceArmResourceId", required=true)
    private Output<String> sourceArmResourceId;

    /**
     * @return Gets the ARM resource ID of the tracked resource being referenced.
     * 
     */
    public Output<String> sourceArmResourceId() {
        return this.sourceArmResourceId;
    }

    private PublicIpReferenceArgs() {}

    private PublicIpReferenceArgs(PublicIpReferenceArgs $) {
        this.sourceArmResourceId = $.sourceArmResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicIpReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicIpReferenceArgs $;

        public Builder() {
            $ = new PublicIpReferenceArgs();
        }

        public Builder(PublicIpReferenceArgs defaults) {
            $ = new PublicIpReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceArmResourceId Gets the ARM resource ID of the tracked resource being referenced.
         * 
         * @return builder
         * 
         */
        public Builder sourceArmResourceId(Output<String> sourceArmResourceId) {
            $.sourceArmResourceId = sourceArmResourceId;
            return this;
        }

        /**
         * @param sourceArmResourceId Gets the ARM resource ID of the tracked resource being referenced.
         * 
         * @return builder
         * 
         */
        public Builder sourceArmResourceId(String sourceArmResourceId) {
            return sourceArmResourceId(Output.of(sourceArmResourceId));
        }

        public PublicIpReferenceArgs build() {
            $.sourceArmResourceId = Objects.requireNonNull($.sourceArmResourceId, "expected parameter 'sourceArmResourceId' to be non-null");
            return $;
        }
    }

}
