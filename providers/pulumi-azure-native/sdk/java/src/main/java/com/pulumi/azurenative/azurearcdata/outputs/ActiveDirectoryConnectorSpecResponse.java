// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurearcdata.outputs;

import com.pulumi.azurenative.azurearcdata.outputs.ActiveDirectoryConnectorDNSDetailsResponse;
import com.pulumi.azurenative.azurearcdata.outputs.ActiveDirectoryConnectorDomainDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;

@CustomType
public final class ActiveDirectoryConnectorSpecResponse {
    /**
     * @return null
     * 
     */
    private final ActiveDirectoryConnectorDomainDetailsResponse activeDirectory;
    /**
     * @return null
     * 
     */
    private final ActiveDirectoryConnectorDNSDetailsResponse dns;

    @CustomType.Constructor
    private ActiveDirectoryConnectorSpecResponse(
        @CustomType.Parameter("activeDirectory") ActiveDirectoryConnectorDomainDetailsResponse activeDirectory,
        @CustomType.Parameter("dns") ActiveDirectoryConnectorDNSDetailsResponse dns) {
        this.activeDirectory = activeDirectory;
        this.dns = dns;
    }

    /**
     * @return null
     * 
     */
    public ActiveDirectoryConnectorDomainDetailsResponse activeDirectory() {
        return this.activeDirectory;
    }
    /**
     * @return null
     * 
     */
    public ActiveDirectoryConnectorDNSDetailsResponse dns() {
        return this.dns;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActiveDirectoryConnectorSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActiveDirectoryConnectorDomainDetailsResponse activeDirectory;
        private ActiveDirectoryConnectorDNSDetailsResponse dns;

        public Builder() {
    	      // Empty
        }

        public Builder(ActiveDirectoryConnectorSpecResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectory = defaults.activeDirectory;
    	      this.dns = defaults.dns;
        }

        public Builder activeDirectory(ActiveDirectoryConnectorDomainDetailsResponse activeDirectory) {
            this.activeDirectory = Objects.requireNonNull(activeDirectory);
            return this;
        }
        public Builder dns(ActiveDirectoryConnectorDNSDetailsResponse dns) {
            this.dns = Objects.requireNonNull(dns);
            return this;
        }        public ActiveDirectoryConnectorSpecResponse build() {
            return new ActiveDirectoryConnectorSpecResponse(activeDirectory, dns);
        }
    }
}
