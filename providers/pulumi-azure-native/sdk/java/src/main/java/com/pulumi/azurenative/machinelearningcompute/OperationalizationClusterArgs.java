// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningcompute;

import com.pulumi.azurenative.machinelearningcompute.enums.ClusterType;
import com.pulumi.azurenative.machinelearningcompute.inputs.AcsClusterPropertiesArgs;
import com.pulumi.azurenative.machinelearningcompute.inputs.AppInsightsPropertiesArgs;
import com.pulumi.azurenative.machinelearningcompute.inputs.ContainerRegistryPropertiesArgs;
import com.pulumi.azurenative.machinelearningcompute.inputs.GlobalServiceConfigurationArgs;
import com.pulumi.azurenative.machinelearningcompute.inputs.StorageAccountPropertiesArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OperationalizationClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final OperationalizationClusterArgs Empty = new OperationalizationClusterArgs();

    /**
     * AppInsights configuration.
     * 
     */
    @Import(name="appInsights")
      private final @Nullable Output<AppInsightsPropertiesArgs> appInsights;

    public Output<AppInsightsPropertiesArgs> appInsights() {
        return this.appInsights == null ? Codegen.empty() : this.appInsights;
    }

    /**
     * The name of the cluster.
     * 
     */
    @Import(name="clusterName")
      private final @Nullable Output<String> clusterName;

    public Output<String> clusterName() {
        return this.clusterName == null ? Codegen.empty() : this.clusterName;
    }

    /**
     * The cluster type.
     * 
     */
    @Import(name="clusterType", required=true)
      private final Output<Either<String,ClusterType>> clusterType;

    public Output<Either<String,ClusterType>> clusterType() {
        return this.clusterType;
    }

    /**
     * Container Registry properties.
     * 
     */
    @Import(name="containerRegistry")
      private final @Nullable Output<ContainerRegistryPropertiesArgs> containerRegistry;

    public Output<ContainerRegistryPropertiesArgs> containerRegistry() {
        return this.containerRegistry == null ? Codegen.empty() : this.containerRegistry;
    }

    /**
     * Parameters for the Azure Container Service cluster.
     * 
     */
    @Import(name="containerService")
      private final @Nullable Output<AcsClusterPropertiesArgs> containerService;

    public Output<AcsClusterPropertiesArgs> containerService() {
        return this.containerService == null ? Codegen.empty() : this.containerService;
    }

    /**
     * The description of the cluster.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Contains global configuration for the web services in the cluster.
     * 
     */
    @Import(name="globalServiceConfiguration")
      private final @Nullable Output<GlobalServiceConfigurationArgs> globalServiceConfiguration;

    public Output<GlobalServiceConfigurationArgs> globalServiceConfiguration() {
        return this.globalServiceConfiguration == null ? Codegen.empty() : this.globalServiceConfiguration;
    }

    /**
     * Specifies the location of the resource.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Name of the resource group in which the cluster is located.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Storage Account properties.
     * 
     */
    @Import(name="storageAccount")
      private final @Nullable Output<StorageAccountPropertiesArgs> storageAccount;

    public Output<StorageAccountPropertiesArgs> storageAccount() {
        return this.storageAccount == null ? Codegen.empty() : this.storageAccount;
    }

    /**
     * Contains resource tags defined as key/value pairs.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public OperationalizationClusterArgs(
        @Nullable Output<AppInsightsPropertiesArgs> appInsights,
        @Nullable Output<String> clusterName,
        Output<Either<String,ClusterType>> clusterType,
        @Nullable Output<ContainerRegistryPropertiesArgs> containerRegistry,
        @Nullable Output<AcsClusterPropertiesArgs> containerService,
        @Nullable Output<String> description,
        @Nullable Output<GlobalServiceConfigurationArgs> globalServiceConfiguration,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<StorageAccountPropertiesArgs> storageAccount,
        @Nullable Output<Map<String,String>> tags) {
        this.appInsights = appInsights;
        this.clusterName = clusterName;
        this.clusterType = Objects.requireNonNull(clusterType, "expected parameter 'clusterType' to be non-null");
        this.containerRegistry = containerRegistry;
        this.containerService = containerService;
        this.description = description;
        this.globalServiceConfiguration = globalServiceConfiguration;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.storageAccount = storageAccount;
        this.tags = tags;
    }

    private OperationalizationClusterArgs() {
        this.appInsights = Codegen.empty();
        this.clusterName = Codegen.empty();
        this.clusterType = Codegen.empty();
        this.containerRegistry = Codegen.empty();
        this.containerService = Codegen.empty();
        this.description = Codegen.empty();
        this.globalServiceConfiguration = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.storageAccount = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OperationalizationClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AppInsightsPropertiesArgs> appInsights;
        private @Nullable Output<String> clusterName;
        private Output<Either<String,ClusterType>> clusterType;
        private @Nullable Output<ContainerRegistryPropertiesArgs> containerRegistry;
        private @Nullable Output<AcsClusterPropertiesArgs> containerService;
        private @Nullable Output<String> description;
        private @Nullable Output<GlobalServiceConfigurationArgs> globalServiceConfiguration;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<StorageAccountPropertiesArgs> storageAccount;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(OperationalizationClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appInsights = defaults.appInsights;
    	      this.clusterName = defaults.clusterName;
    	      this.clusterType = defaults.clusterType;
    	      this.containerRegistry = defaults.containerRegistry;
    	      this.containerService = defaults.containerService;
    	      this.description = defaults.description;
    	      this.globalServiceConfiguration = defaults.globalServiceConfiguration;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.storageAccount = defaults.storageAccount;
    	      this.tags = defaults.tags;
        }

        public Builder appInsights(@Nullable Output<AppInsightsPropertiesArgs> appInsights) {
            this.appInsights = appInsights;
            return this;
        }
        public Builder appInsights(@Nullable AppInsightsPropertiesArgs appInsights) {
            this.appInsights = Codegen.ofNullable(appInsights);
            return this;
        }
        public Builder clusterName(@Nullable Output<String> clusterName) {
            this.clusterName = clusterName;
            return this;
        }
        public Builder clusterName(@Nullable String clusterName) {
            this.clusterName = Codegen.ofNullable(clusterName);
            return this;
        }
        public Builder clusterType(Output<Either<String,ClusterType>> clusterType) {
            this.clusterType = Objects.requireNonNull(clusterType);
            return this;
        }
        public Builder clusterType(Either<String,ClusterType> clusterType) {
            this.clusterType = Output.of(Objects.requireNonNull(clusterType));
            return this;
        }
        public Builder containerRegistry(@Nullable Output<ContainerRegistryPropertiesArgs> containerRegistry) {
            this.containerRegistry = containerRegistry;
            return this;
        }
        public Builder containerRegistry(@Nullable ContainerRegistryPropertiesArgs containerRegistry) {
            this.containerRegistry = Codegen.ofNullable(containerRegistry);
            return this;
        }
        public Builder containerService(@Nullable Output<AcsClusterPropertiesArgs> containerService) {
            this.containerService = containerService;
            return this;
        }
        public Builder containerService(@Nullable AcsClusterPropertiesArgs containerService) {
            this.containerService = Codegen.ofNullable(containerService);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder globalServiceConfiguration(@Nullable Output<GlobalServiceConfigurationArgs> globalServiceConfiguration) {
            this.globalServiceConfiguration = globalServiceConfiguration;
            return this;
        }
        public Builder globalServiceConfiguration(@Nullable GlobalServiceConfigurationArgs globalServiceConfiguration) {
            this.globalServiceConfiguration = Codegen.ofNullable(globalServiceConfiguration);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder storageAccount(@Nullable Output<StorageAccountPropertiesArgs> storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }
        public Builder storageAccount(@Nullable StorageAccountPropertiesArgs storageAccount) {
            this.storageAccount = Codegen.ofNullable(storageAccount);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public OperationalizationClusterArgs build() {
            return new OperationalizationClusterArgs(appInsights, clusterName, clusterType, containerRegistry, containerService, description, globalServiceConfiguration, location, resourceGroupName, storageAccount, tags);
        }
    }
}
