// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.inputs;

import com.pulumi.azurenative.synapse.enums.DataFlowComputeType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Data flow properties for managed integration runtime.
 * 
 */
public final class IntegrationRuntimeDataFlowPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationRuntimeDataFlowPropertiesArgs Empty = new IntegrationRuntimeDataFlowPropertiesArgs();

    /**
     * Compute type of the cluster which will execute data flow job.
     * 
     */
    @Import(name="computeType")
    private @Nullable Output<Either<String,DataFlowComputeType>> computeType;

    public Optional<Output<Either<String,DataFlowComputeType>>> computeType() {
        return Optional.ofNullable(this.computeType);
    }

    /**
     * Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.
     * 
     */
    @Import(name="coreCount")
    private @Nullable Output<Integer> coreCount;

    public Optional<Output<Integer>> coreCount() {
        return Optional.ofNullable(this.coreCount);
    }

    /**
     * Time to live (in minutes) setting of the cluster which will execute data flow job.
     * 
     */
    @Import(name="timeToLive")
    private @Nullable Output<Integer> timeToLive;

    public Optional<Output<Integer>> timeToLive() {
        return Optional.ofNullable(this.timeToLive);
    }

    private IntegrationRuntimeDataFlowPropertiesArgs() {}

    private IntegrationRuntimeDataFlowPropertiesArgs(IntegrationRuntimeDataFlowPropertiesArgs $) {
        this.computeType = $.computeType;
        this.coreCount = $.coreCount;
        this.timeToLive = $.timeToLive;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationRuntimeDataFlowPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationRuntimeDataFlowPropertiesArgs $;

        public Builder() {
            $ = new IntegrationRuntimeDataFlowPropertiesArgs();
        }

        public Builder(IntegrationRuntimeDataFlowPropertiesArgs defaults) {
            $ = new IntegrationRuntimeDataFlowPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder computeType(@Nullable Output<Either<String,DataFlowComputeType>> computeType) {
            $.computeType = computeType;
            return this;
        }

        public Builder computeType(Either<String,DataFlowComputeType> computeType) {
            return computeType(Output.of(computeType));
        }

        public Builder coreCount(@Nullable Output<Integer> coreCount) {
            $.coreCount = coreCount;
            return this;
        }

        public Builder coreCount(Integer coreCount) {
            return coreCount(Output.of(coreCount));
        }

        public Builder timeToLive(@Nullable Output<Integer> timeToLive) {
            $.timeToLive = timeToLive;
            return this;
        }

        public Builder timeToLive(Integer timeToLive) {
            return timeToLive(Output.of(timeToLive));
        }

        public IntegrationRuntimeDataFlowPropertiesArgs build() {
            return $;
        }
    }

}
