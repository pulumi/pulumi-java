// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.ApplicationGatewayFirewallDisabledRuleGroupResponse;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayFirewallExclusionResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Application gateway web application firewall configuration.
 * 
 */
public final class ApplicationGatewayWebApplicationFirewallConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationGatewayWebApplicationFirewallConfigurationResponse Empty = new ApplicationGatewayWebApplicationFirewallConfigurationResponse();

    /**
     * The disabled rule groups.
     * 
     */
    @Import(name="disabledRuleGroups")
    private @Nullable List<ApplicationGatewayFirewallDisabledRuleGroupResponse> disabledRuleGroups;

    public Optional<List<ApplicationGatewayFirewallDisabledRuleGroupResponse>> disabledRuleGroups() {
        return Optional.ofNullable(this.disabledRuleGroups);
    }

    /**
     * Whether the web application firewall is enabled or not.
     * 
     */
    @Import(name="enabled", required=true)
    private Boolean enabled;

    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * The exclusion list.
     * 
     */
    @Import(name="exclusions")
    private @Nullable List<ApplicationGatewayFirewallExclusionResponse> exclusions;

    public Optional<List<ApplicationGatewayFirewallExclusionResponse>> exclusions() {
        return Optional.ofNullable(this.exclusions);
    }

    /**
     * Maximum file upload size in Mb for WAF.
     * 
     */
    @Import(name="fileUploadLimitInMb")
    private @Nullable Integer fileUploadLimitInMb;

    public Optional<Integer> fileUploadLimitInMb() {
        return Optional.ofNullable(this.fileUploadLimitInMb);
    }

    /**
     * Web application firewall mode.
     * 
     */
    @Import(name="firewallMode", required=true)
    private String firewallMode;

    public String firewallMode() {
        return this.firewallMode;
    }

    /**
     * Maximum request body size for WAF.
     * 
     */
    @Import(name="maxRequestBodySize")
    private @Nullable Integer maxRequestBodySize;

    public Optional<Integer> maxRequestBodySize() {
        return Optional.ofNullable(this.maxRequestBodySize);
    }

    /**
     * Maximum request body size in Kb for WAF.
     * 
     */
    @Import(name="maxRequestBodySizeInKb")
    private @Nullable Integer maxRequestBodySizeInKb;

    public Optional<Integer> maxRequestBodySizeInKb() {
        return Optional.ofNullable(this.maxRequestBodySizeInKb);
    }

    /**
     * Whether allow WAF to check request Body.
     * 
     */
    @Import(name="requestBodyCheck")
    private @Nullable Boolean requestBodyCheck;

    public Optional<Boolean> requestBodyCheck() {
        return Optional.ofNullable(this.requestBodyCheck);
    }

    /**
     * The type of the web application firewall rule set. Possible values are: &#39;OWASP&#39;.
     * 
     */
    @Import(name="ruleSetType", required=true)
    private String ruleSetType;

    public String ruleSetType() {
        return this.ruleSetType;
    }

    /**
     * The version of the rule set type.
     * 
     */
    @Import(name="ruleSetVersion", required=true)
    private String ruleSetVersion;

    public String ruleSetVersion() {
        return this.ruleSetVersion;
    }

    private ApplicationGatewayWebApplicationFirewallConfigurationResponse() {}

    private ApplicationGatewayWebApplicationFirewallConfigurationResponse(ApplicationGatewayWebApplicationFirewallConfigurationResponse $) {
        this.disabledRuleGroups = $.disabledRuleGroups;
        this.enabled = $.enabled;
        this.exclusions = $.exclusions;
        this.fileUploadLimitInMb = $.fileUploadLimitInMb;
        this.firewallMode = $.firewallMode;
        this.maxRequestBodySize = $.maxRequestBodySize;
        this.maxRequestBodySizeInKb = $.maxRequestBodySizeInKb;
        this.requestBodyCheck = $.requestBodyCheck;
        this.ruleSetType = $.ruleSetType;
        this.ruleSetVersion = $.ruleSetVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayWebApplicationFirewallConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayWebApplicationFirewallConfigurationResponse $;

        public Builder() {
            $ = new ApplicationGatewayWebApplicationFirewallConfigurationResponse();
        }

        public Builder(ApplicationGatewayWebApplicationFirewallConfigurationResponse defaults) {
            $ = new ApplicationGatewayWebApplicationFirewallConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder disabledRuleGroups(@Nullable List<ApplicationGatewayFirewallDisabledRuleGroupResponse> disabledRuleGroups) {
            $.disabledRuleGroups = disabledRuleGroups;
            return this;
        }

        public Builder disabledRuleGroups(ApplicationGatewayFirewallDisabledRuleGroupResponse... disabledRuleGroups) {
            return disabledRuleGroups(List.of(disabledRuleGroups));
        }

        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder exclusions(@Nullable List<ApplicationGatewayFirewallExclusionResponse> exclusions) {
            $.exclusions = exclusions;
            return this;
        }

        public Builder exclusions(ApplicationGatewayFirewallExclusionResponse... exclusions) {
            return exclusions(List.of(exclusions));
        }

        public Builder fileUploadLimitInMb(@Nullable Integer fileUploadLimitInMb) {
            $.fileUploadLimitInMb = fileUploadLimitInMb;
            return this;
        }

        public Builder firewallMode(String firewallMode) {
            $.firewallMode = firewallMode;
            return this;
        }

        public Builder maxRequestBodySize(@Nullable Integer maxRequestBodySize) {
            $.maxRequestBodySize = maxRequestBodySize;
            return this;
        }

        public Builder maxRequestBodySizeInKb(@Nullable Integer maxRequestBodySizeInKb) {
            $.maxRequestBodySizeInKb = maxRequestBodySizeInKb;
            return this;
        }

        public Builder requestBodyCheck(@Nullable Boolean requestBodyCheck) {
            $.requestBodyCheck = requestBodyCheck;
            return this;
        }

        public Builder ruleSetType(String ruleSetType) {
            $.ruleSetType = ruleSetType;
            return this;
        }

        public Builder ruleSetVersion(String ruleSetVersion) {
            $.ruleSetVersion = ruleSetVersion;
            return this;
        }

        public ApplicationGatewayWebApplicationFirewallConfigurationResponse build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.firewallMode = Objects.requireNonNull($.firewallMode, "expected parameter 'firewallMode' to be non-null");
            $.ruleSetType = Objects.requireNonNull($.ruleSetType, "expected parameter 'ruleSetType' to be non-null");
            $.ruleSetVersion = Objects.requireNonNull($.ruleSetVersion, "expected parameter 'ruleSetVersion' to be non-null");
            return $;
        }
    }

}
