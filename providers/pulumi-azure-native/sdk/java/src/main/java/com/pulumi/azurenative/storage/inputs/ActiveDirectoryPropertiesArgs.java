// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Settings properties for Active Directory (AD).
 * 
 */
public final class ActiveDirectoryPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActiveDirectoryPropertiesArgs Empty = new ActiveDirectoryPropertiesArgs();

    /**
     * Specifies the security identifier (SID) for Azure Storage.
     * 
     */
    @Import(name="azureStorageSid", required=true)
    private Output<String> azureStorageSid;

    /**
     * @return Specifies the security identifier (SID) for Azure Storage.
     * 
     */
    public Output<String> azureStorageSid() {
        return this.azureStorageSid;
    }

    /**
     * Specifies the domain GUID.
     * 
     */
    @Import(name="domainGuid", required=true)
    private Output<String> domainGuid;

    /**
     * @return Specifies the domain GUID.
     * 
     */
    public Output<String> domainGuid() {
        return this.domainGuid;
    }

    /**
     * Specifies the primary domain that the AD DNS server is authoritative for.
     * 
     */
    @Import(name="domainName", required=true)
    private Output<String> domainName;

    /**
     * @return Specifies the primary domain that the AD DNS server is authoritative for.
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }

    /**
     * Specifies the security identifier (SID).
     * 
     */
    @Import(name="domainSid", required=true)
    private Output<String> domainSid;

    /**
     * @return Specifies the security identifier (SID).
     * 
     */
    public Output<String> domainSid() {
        return this.domainSid;
    }

    /**
     * Specifies the Active Directory forest to get.
     * 
     */
    @Import(name="forestName", required=true)
    private Output<String> forestName;

    /**
     * @return Specifies the Active Directory forest to get.
     * 
     */
    public Output<String> forestName() {
        return this.forestName;
    }

    /**
     * Specifies the NetBIOS domain name.
     * 
     */
    @Import(name="netBiosDomainName", required=true)
    private Output<String> netBiosDomainName;

    /**
     * @return Specifies the NetBIOS domain name.
     * 
     */
    public Output<String> netBiosDomainName() {
        return this.netBiosDomainName;
    }

    private ActiveDirectoryPropertiesArgs() {}

    private ActiveDirectoryPropertiesArgs(ActiveDirectoryPropertiesArgs $) {
        this.azureStorageSid = $.azureStorageSid;
        this.domainGuid = $.domainGuid;
        this.domainName = $.domainName;
        this.domainSid = $.domainSid;
        this.forestName = $.forestName;
        this.netBiosDomainName = $.netBiosDomainName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActiveDirectoryPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActiveDirectoryPropertiesArgs $;

        public Builder() {
            $ = new ActiveDirectoryPropertiesArgs();
        }

        public Builder(ActiveDirectoryPropertiesArgs defaults) {
            $ = new ActiveDirectoryPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureStorageSid Specifies the security identifier (SID) for Azure Storage.
         * 
         * @return builder
         * 
         */
        public Builder azureStorageSid(Output<String> azureStorageSid) {
            $.azureStorageSid = azureStorageSid;
            return this;
        }

        /**
         * @param azureStorageSid Specifies the security identifier (SID) for Azure Storage.
         * 
         * @return builder
         * 
         */
        public Builder azureStorageSid(String azureStorageSid) {
            return azureStorageSid(Output.of(azureStorageSid));
        }

        /**
         * @param domainGuid Specifies the domain GUID.
         * 
         * @return builder
         * 
         */
        public Builder domainGuid(Output<String> domainGuid) {
            $.domainGuid = domainGuid;
            return this;
        }

        /**
         * @param domainGuid Specifies the domain GUID.
         * 
         * @return builder
         * 
         */
        public Builder domainGuid(String domainGuid) {
            return domainGuid(Output.of(domainGuid));
        }

        /**
         * @param domainName Specifies the primary domain that the AD DNS server is authoritative for.
         * 
         * @return builder
         * 
         */
        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName Specifies the primary domain that the AD DNS server is authoritative for.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param domainSid Specifies the security identifier (SID).
         * 
         * @return builder
         * 
         */
        public Builder domainSid(Output<String> domainSid) {
            $.domainSid = domainSid;
            return this;
        }

        /**
         * @param domainSid Specifies the security identifier (SID).
         * 
         * @return builder
         * 
         */
        public Builder domainSid(String domainSid) {
            return domainSid(Output.of(domainSid));
        }

        /**
         * @param forestName Specifies the Active Directory forest to get.
         * 
         * @return builder
         * 
         */
        public Builder forestName(Output<String> forestName) {
            $.forestName = forestName;
            return this;
        }

        /**
         * @param forestName Specifies the Active Directory forest to get.
         * 
         * @return builder
         * 
         */
        public Builder forestName(String forestName) {
            return forestName(Output.of(forestName));
        }

        /**
         * @param netBiosDomainName Specifies the NetBIOS domain name.
         * 
         * @return builder
         * 
         */
        public Builder netBiosDomainName(Output<String> netBiosDomainName) {
            $.netBiosDomainName = netBiosDomainName;
            return this;
        }

        /**
         * @param netBiosDomainName Specifies the NetBIOS domain name.
         * 
         * @return builder
         * 
         */
        public Builder netBiosDomainName(String netBiosDomainName) {
            return netBiosDomainName(Output.of(netBiosDomainName));
        }

        public ActiveDirectoryPropertiesArgs build() {
            $.azureStorageSid = Objects.requireNonNull($.azureStorageSid, "expected parameter 'azureStorageSid' to be non-null");
            $.domainGuid = Objects.requireNonNull($.domainGuid, "expected parameter 'domainGuid' to be non-null");
            $.domainName = Objects.requireNonNull($.domainName, "expected parameter 'domainName' to be non-null");
            $.domainSid = Objects.requireNonNull($.domainSid, "expected parameter 'domainSid' to be non-null");
            $.forestName = Objects.requireNonNull($.forestName, "expected parameter 'forestName' to be non-null");
            $.netBiosDomainName = Objects.requireNonNull($.netBiosDomainName, "expected parameter 'netBiosDomainName' to be non-null");
            return $;
        }
    }

}
