// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Description of the IoT hub.
 * 
 */
public final class IotHubDefinitionDescriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final IotHubDefinitionDescriptionArgs Empty = new IotHubDefinitionDescriptionArgs();

    /**
     * weight to apply for a given iot h.
     * 
     */
    @Import(name="allocationWeight")
    private @Nullable Output<Integer> allocationWeight;

    /**
     * @return weight to apply for a given iot h.
     * 
     */
    public Optional<Output<Integer>> allocationWeight() {
        return Optional.ofNullable(this.allocationWeight);
    }

    /**
     * flag for applying allocationPolicy or not for a given iot hub.
     * 
     */
    @Import(name="applyAllocationPolicy")
    private @Nullable Output<Boolean> applyAllocationPolicy;

    /**
     * @return flag for applying allocationPolicy or not for a given iot hub.
     * 
     */
    public Optional<Output<Boolean>> applyAllocationPolicy() {
        return Optional.ofNullable(this.applyAllocationPolicy);
    }

    /**
     * Connection string of the IoT hub.
     * 
     */
    @Import(name="connectionString", required=true)
    private Output<String> connectionString;

    /**
     * @return Connection string of the IoT hub.
     * 
     */
    public Output<String> connectionString() {
        return this.connectionString;
    }

    /**
     * ARM region of the IoT hub.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return ARM region of the IoT hub.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    private IotHubDefinitionDescriptionArgs() {}

    private IotHubDefinitionDescriptionArgs(IotHubDefinitionDescriptionArgs $) {
        this.allocationWeight = $.allocationWeight;
        this.applyAllocationPolicy = $.applyAllocationPolicy;
        this.connectionString = $.connectionString;
        this.location = $.location;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IotHubDefinitionDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IotHubDefinitionDescriptionArgs $;

        public Builder() {
            $ = new IotHubDefinitionDescriptionArgs();
        }

        public Builder(IotHubDefinitionDescriptionArgs defaults) {
            $ = new IotHubDefinitionDescriptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocationWeight weight to apply for a given iot h.
         * 
         * @return builder
         * 
         */
        public Builder allocationWeight(@Nullable Output<Integer> allocationWeight) {
            $.allocationWeight = allocationWeight;
            return this;
        }

        /**
         * @param allocationWeight weight to apply for a given iot h.
         * 
         * @return builder
         * 
         */
        public Builder allocationWeight(Integer allocationWeight) {
            return allocationWeight(Output.of(allocationWeight));
        }

        /**
         * @param applyAllocationPolicy flag for applying allocationPolicy or not for a given iot hub.
         * 
         * @return builder
         * 
         */
        public Builder applyAllocationPolicy(@Nullable Output<Boolean> applyAllocationPolicy) {
            $.applyAllocationPolicy = applyAllocationPolicy;
            return this;
        }

        /**
         * @param applyAllocationPolicy flag for applying allocationPolicy or not for a given iot hub.
         * 
         * @return builder
         * 
         */
        public Builder applyAllocationPolicy(Boolean applyAllocationPolicy) {
            return applyAllocationPolicy(Output.of(applyAllocationPolicy));
        }

        /**
         * @param connectionString Connection string of the IoT hub.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(Output<String> connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        /**
         * @param connectionString Connection string of the IoT hub.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(String connectionString) {
            return connectionString(Output.of(connectionString));
        }

        /**
         * @param location ARM region of the IoT hub.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location ARM region of the IoT hub.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public IotHubDefinitionDescriptionArgs build() {
            $.connectionString = Objects.requireNonNull($.connectionString, "expected parameter 'connectionString' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
