// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties of the Azure File volume. Azure File shares are mounted as volumes.
 * 
 */
public final class AzureFileVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureFileVolumeArgs Empty = new AzureFileVolumeArgs();

    /**
     * The flag indicating whether the Azure File shared mounted as a volume is read-only.
     * 
     */
    @Import(name="readOnly")
    private @Nullable Output<Boolean> readOnly;

    public Optional<Output<Boolean>> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    /**
     * The name of the Azure File share to be mounted as a volume.
     * 
     */
    @Import(name="shareName", required=true)
    private Output<String> shareName;

    public Output<String> shareName() {
        return this.shareName;
    }

    /**
     * The storage account access key used to access the Azure File share.
     * 
     */
    @Import(name="storageAccountKey")
    private @Nullable Output<String> storageAccountKey;

    public Optional<Output<String>> storageAccountKey() {
        return Optional.ofNullable(this.storageAccountKey);
    }

    /**
     * The name of the storage account that contains the Azure File share.
     * 
     */
    @Import(name="storageAccountName", required=true)
    private Output<String> storageAccountName;

    public Output<String> storageAccountName() {
        return this.storageAccountName;
    }

    private AzureFileVolumeArgs() {}

    private AzureFileVolumeArgs(AzureFileVolumeArgs $) {
        this.readOnly = $.readOnly;
        this.shareName = $.shareName;
        this.storageAccountKey = $.storageAccountKey;
        this.storageAccountName = $.storageAccountName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureFileVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureFileVolumeArgs $;

        public Builder() {
            $ = new AzureFileVolumeArgs();
        }

        public Builder(AzureFileVolumeArgs defaults) {
            $ = new AzureFileVolumeArgs(Objects.requireNonNull(defaults));
        }

        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        public Builder readOnly(Boolean readOnly) {
            return readOnly(Output.of(readOnly));
        }

        public Builder shareName(Output<String> shareName) {
            $.shareName = shareName;
            return this;
        }

        public Builder shareName(String shareName) {
            return shareName(Output.of(shareName));
        }

        public Builder storageAccountKey(@Nullable Output<String> storageAccountKey) {
            $.storageAccountKey = storageAccountKey;
            return this;
        }

        public Builder storageAccountKey(String storageAccountKey) {
            return storageAccountKey(Output.of(storageAccountKey));
        }

        public Builder storageAccountName(Output<String> storageAccountName) {
            $.storageAccountName = storageAccountName;
            return this;
        }

        public Builder storageAccountName(String storageAccountName) {
            return storageAccountName(Output.of(storageAccountName));
        }

        public AzureFileVolumeArgs build() {
            $.shareName = Objects.requireNonNull($.shareName, "expected parameter 'shareName' to be non-null");
            $.storageAccountName = Objects.requireNonNull($.storageAccountName, "expected parameter 'storageAccountName' to be non-null");
            return $;
        }
    }

}
