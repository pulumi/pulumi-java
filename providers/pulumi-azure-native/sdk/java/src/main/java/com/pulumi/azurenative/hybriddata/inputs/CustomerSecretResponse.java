// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybriddata.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The pair of customer secret.
 * 
 */
public final class CustomerSecretResponse extends com.pulumi.resources.InvokeArgs {

    public static final CustomerSecretResponse Empty = new CustomerSecretResponse();

    /**
     * The encryption algorithm used to encrypt data.
     * 
     */
    @Import(name="algorithm", required=true)
    private String algorithm;

    public String algorithm() {
        return this.algorithm;
    }

    /**
     * The identifier to the data service input object which this secret corresponds to.
     * 
     */
    @Import(name="keyIdentifier", required=true)
    private String keyIdentifier;

    public String keyIdentifier() {
        return this.keyIdentifier;
    }

    /**
     * It contains the encrypted customer secret.
     * 
     */
    @Import(name="keyValue", required=true)
    private String keyValue;

    public String keyValue() {
        return this.keyValue;
    }

    private CustomerSecretResponse() {}

    private CustomerSecretResponse(CustomerSecretResponse $) {
        this.algorithm = $.algorithm;
        this.keyIdentifier = $.keyIdentifier;
        this.keyValue = $.keyValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomerSecretResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomerSecretResponse $;

        public Builder() {
            $ = new CustomerSecretResponse();
        }

        public Builder(CustomerSecretResponse defaults) {
            $ = new CustomerSecretResponse(Objects.requireNonNull(defaults));
        }

        public Builder algorithm(String algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        public Builder keyIdentifier(String keyIdentifier) {
            $.keyIdentifier = keyIdentifier;
            return this;
        }

        public Builder keyValue(String keyValue) {
            $.keyValue = keyValue;
            return this;
        }

        public CustomerSecretResponse build() {
            $.algorithm = Objects.requireNonNull($.algorithm, "expected parameter 'algorithm' to be non-null");
            $.keyIdentifier = Objects.requireNonNull($.keyIdentifier, "expected parameter 'keyIdentifier' to be non-null");
            $.keyValue = Objects.requireNonNull($.keyValue, "expected parameter 'keyValue' to be non-null");
            return $;
        }
    }

}
