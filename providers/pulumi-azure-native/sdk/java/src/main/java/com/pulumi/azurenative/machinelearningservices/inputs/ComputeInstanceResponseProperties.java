// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.ComputeInstanceApplicationResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.ComputeInstanceConnectivityEndpointsResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.ComputeInstanceCreatedByResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.ComputeInstanceLastOperationResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.ComputeInstanceSshSettingsResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.MachineLearningServiceErrorResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.PersonalComputeInstanceSettingsResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.ResourceIdResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.SetupScriptsResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Compute Instance properties
 * 
 */
public final class ComputeInstanceResponseProperties extends com.pulumi.resources.InvokeArgs {

    public static final ComputeInstanceResponseProperties Empty = new ComputeInstanceResponseProperties();

    /**
     * Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
     * 
     */
    @Import(name="applicationSharingPolicy")
    private @Nullable String applicationSharingPolicy;

    public Optional<String> applicationSharingPolicy() {
        return Optional.ofNullable(this.applicationSharingPolicy);
    }

    /**
     * Describes available applications and their endpoints on this ComputeInstance.
     * 
     */
    @Import(name="applications", required=true)
    private List<ComputeInstanceApplicationResponse> applications;

    public List<ComputeInstanceApplicationResponse> applications() {
        return this.applications;
    }

    /**
     * The Compute Instance Authorization type. Available values are personal (default).
     * 
     */
    @Import(name="computeInstanceAuthorizationType")
    private @Nullable String computeInstanceAuthorizationType;

    public Optional<String> computeInstanceAuthorizationType() {
        return Optional.ofNullable(this.computeInstanceAuthorizationType);
    }

    /**
     * Describes all connectivity endpoints available for this ComputeInstance.
     * 
     */
    @Import(name="connectivityEndpoints", required=true)
    private ComputeInstanceConnectivityEndpointsResponse connectivityEndpoints;

    public ComputeInstanceConnectivityEndpointsResponse connectivityEndpoints() {
        return this.connectivityEndpoints;
    }

    /**
     * Describes information on user who created this ComputeInstance.
     * 
     */
    @Import(name="createdBy", required=true)
    private ComputeInstanceCreatedByResponse createdBy;

    public ComputeInstanceCreatedByResponse createdBy() {
        return this.createdBy;
    }

    /**
     * Collection of errors encountered on this ComputeInstance.
     * 
     */
    @Import(name="errors", required=true)
    private List<MachineLearningServiceErrorResponse> errors;

    public List<MachineLearningServiceErrorResponse> errors() {
        return this.errors;
    }

    /**
     * The last operation on ComputeInstance.
     * 
     */
    @Import(name="lastOperation", required=true)
    private ComputeInstanceLastOperationResponse lastOperation;

    public ComputeInstanceLastOperationResponse lastOperation() {
        return this.lastOperation;
    }

    /**
     * Settings for a personal compute instance.
     * 
     */
    @Import(name="personalComputeInstanceSettings")
    private @Nullable PersonalComputeInstanceSettingsResponse personalComputeInstanceSettings;

    public Optional<PersonalComputeInstanceSettingsResponse> personalComputeInstanceSettings() {
        return Optional.ofNullable(this.personalComputeInstanceSettings);
    }

    /**
     * Details of customized scripts to execute for setting up the cluster.
     * 
     */
    @Import(name="setupScripts")
    private @Nullable SetupScriptsResponse setupScripts;

    public Optional<SetupScriptsResponse> setupScripts() {
        return Optional.ofNullable(this.setupScripts);
    }

    /**
     * Specifies policy and settings for SSH access.
     * 
     */
    @Import(name="sshSettings")
    private @Nullable ComputeInstanceSshSettingsResponse sshSettings;

    public Optional<ComputeInstanceSshSettingsResponse> sshSettings() {
        return Optional.ofNullable(this.sshSettings);
    }

    /**
     * The current state of this ComputeInstance.
     * 
     */
    @Import(name="state", required=true)
    private String state;

    public String state() {
        return this.state;
    }

    /**
     * Virtual network subnet resource ID the compute nodes belong to.
     * 
     */
    @Import(name="subnet")
    private @Nullable ResourceIdResponse subnet;

    public Optional<ResourceIdResponse> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    /**
     * Virtual Machine Size
     * 
     */
    @Import(name="vmSize")
    private @Nullable String vmSize;

    public Optional<String> vmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    private ComputeInstanceResponseProperties() {}

    private ComputeInstanceResponseProperties(ComputeInstanceResponseProperties $) {
        this.applicationSharingPolicy = $.applicationSharingPolicy;
        this.applications = $.applications;
        this.computeInstanceAuthorizationType = $.computeInstanceAuthorizationType;
        this.connectivityEndpoints = $.connectivityEndpoints;
        this.createdBy = $.createdBy;
        this.errors = $.errors;
        this.lastOperation = $.lastOperation;
        this.personalComputeInstanceSettings = $.personalComputeInstanceSettings;
        this.setupScripts = $.setupScripts;
        this.sshSettings = $.sshSettings;
        this.state = $.state;
        this.subnet = $.subnet;
        this.vmSize = $.vmSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComputeInstanceResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeInstanceResponseProperties $;

        public Builder() {
            $ = new ComputeInstanceResponseProperties();
        }

        public Builder(ComputeInstanceResponseProperties defaults) {
            $ = new ComputeInstanceResponseProperties(Objects.requireNonNull(defaults));
        }

        public Builder applicationSharingPolicy(@Nullable String applicationSharingPolicy) {
            $.applicationSharingPolicy = applicationSharingPolicy;
            return this;
        }

        public Builder applications(List<ComputeInstanceApplicationResponse> applications) {
            $.applications = applications;
            return this;
        }

        public Builder applications(ComputeInstanceApplicationResponse... applications) {
            return applications(List.of(applications));
        }

        public Builder computeInstanceAuthorizationType(@Nullable String computeInstanceAuthorizationType) {
            $.computeInstanceAuthorizationType = computeInstanceAuthorizationType;
            return this;
        }

        public Builder connectivityEndpoints(ComputeInstanceConnectivityEndpointsResponse connectivityEndpoints) {
            $.connectivityEndpoints = connectivityEndpoints;
            return this;
        }

        public Builder createdBy(ComputeInstanceCreatedByResponse createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        public Builder errors(List<MachineLearningServiceErrorResponse> errors) {
            $.errors = errors;
            return this;
        }

        public Builder errors(MachineLearningServiceErrorResponse... errors) {
            return errors(List.of(errors));
        }

        public Builder lastOperation(ComputeInstanceLastOperationResponse lastOperation) {
            $.lastOperation = lastOperation;
            return this;
        }

        public Builder personalComputeInstanceSettings(@Nullable PersonalComputeInstanceSettingsResponse personalComputeInstanceSettings) {
            $.personalComputeInstanceSettings = personalComputeInstanceSettings;
            return this;
        }

        public Builder setupScripts(@Nullable SetupScriptsResponse setupScripts) {
            $.setupScripts = setupScripts;
            return this;
        }

        public Builder sshSettings(@Nullable ComputeInstanceSshSettingsResponse sshSettings) {
            $.sshSettings = sshSettings;
            return this;
        }

        public Builder state(String state) {
            $.state = state;
            return this;
        }

        public Builder subnet(@Nullable ResourceIdResponse subnet) {
            $.subnet = subnet;
            return this;
        }

        public Builder vmSize(@Nullable String vmSize) {
            $.vmSize = vmSize;
            return this;
        }

        public ComputeInstanceResponseProperties build() {
            $.applicationSharingPolicy = Codegen.stringProp("applicationSharingPolicy").arg($.applicationSharingPolicy).def("Shared").getNullable();
            $.applications = Objects.requireNonNull($.applications, "expected parameter 'applications' to be non-null");
            $.computeInstanceAuthorizationType = Codegen.stringProp("computeInstanceAuthorizationType").arg($.computeInstanceAuthorizationType).def("personal").getNullable();
            $.connectivityEndpoints = Objects.requireNonNull($.connectivityEndpoints, "expected parameter 'connectivityEndpoints' to be non-null");
            $.createdBy = Objects.requireNonNull($.createdBy, "expected parameter 'createdBy' to be non-null");
            $.errors = Objects.requireNonNull($.errors, "expected parameter 'errors' to be non-null");
            $.lastOperation = Objects.requireNonNull($.lastOperation, "expected parameter 'lastOperation' to be non-null");
            $.state = Objects.requireNonNull($.state, "expected parameter 'state' to be non-null");
            return $;
        }
    }

}
