// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class of paths for streaming
 * 
 */
public final class StreamingPathResponse extends com.pulumi.resources.InvokeArgs {

    public static final StreamingPathResponse Empty = new StreamingPathResponse();

    /**
     * Encryption scheme
     * 
     */
    @Import(name="encryptionScheme", required=true)
    private String encryptionScheme;

    public String encryptionScheme() {
        return this.encryptionScheme;
    }

    /**
     * Streaming paths for each protocol and encryptionScheme pair
     * 
     */
    @Import(name="paths")
    private @Nullable List<String> paths;

    public Optional<List<String>> paths() {
        return Optional.ofNullable(this.paths);
    }

    /**
     * Streaming protocol
     * 
     */
    @Import(name="streamingProtocol", required=true)
    private String streamingProtocol;

    public String streamingProtocol() {
        return this.streamingProtocol;
    }

    private StreamingPathResponse() {}

    private StreamingPathResponse(StreamingPathResponse $) {
        this.encryptionScheme = $.encryptionScheme;
        this.paths = $.paths;
        this.streamingProtocol = $.streamingProtocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamingPathResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamingPathResponse $;

        public Builder() {
            $ = new StreamingPathResponse();
        }

        public Builder(StreamingPathResponse defaults) {
            $ = new StreamingPathResponse(Objects.requireNonNull(defaults));
        }

        public Builder encryptionScheme(String encryptionScheme) {
            $.encryptionScheme = encryptionScheme;
            return this;
        }

        public Builder paths(@Nullable List<String> paths) {
            $.paths = paths;
            return this;
        }

        public Builder paths(String... paths) {
            return paths(List.of(paths));
        }

        public Builder streamingProtocol(String streamingProtocol) {
            $.streamingProtocol = streamingProtocol;
            return this;
        }

        public StreamingPathResponse build() {
            $.encryptionScheme = Objects.requireNonNull($.encryptionScheme, "expected parameter 'encryptionScheme' to be non-null");
            $.streamingProtocol = Objects.requireNonNull($.streamingProtocol, "expected parameter 'streamingProtocol' to be non-null");
            return $;
        }
    }

}
