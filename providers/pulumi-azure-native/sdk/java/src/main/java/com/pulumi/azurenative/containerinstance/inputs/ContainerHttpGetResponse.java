// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.inputs;

import com.pulumi.azurenative.containerinstance.inputs.HttpHeadersResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The container Http Get settings, for liveness or readiness probe
 * 
 */
public final class ContainerHttpGetResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContainerHttpGetResponse Empty = new ContainerHttpGetResponse();

    /**
     * The HTTP headers.
     * 
     */
    @Import(name="httpHeaders")
    private @Nullable HttpHeadersResponse httpHeaders;

    public Optional<HttpHeadersResponse> httpHeaders() {
        return Optional.ofNullable(this.httpHeaders);
    }

    /**
     * The path to probe.
     * 
     */
    @Import(name="path")
    private @Nullable String path;

    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * The port number to probe.
     * 
     */
    @Import(name="port", required=true)
    private Integer port;

    public Integer port() {
        return this.port;
    }

    /**
     * The scheme.
     * 
     */
    @Import(name="scheme")
    private @Nullable String scheme;

    public Optional<String> scheme() {
        return Optional.ofNullable(this.scheme);
    }

    private ContainerHttpGetResponse() {}

    private ContainerHttpGetResponse(ContainerHttpGetResponse $) {
        this.httpHeaders = $.httpHeaders;
        this.path = $.path;
        this.port = $.port;
        this.scheme = $.scheme;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerHttpGetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerHttpGetResponse $;

        public Builder() {
            $ = new ContainerHttpGetResponse();
        }

        public Builder(ContainerHttpGetResponse defaults) {
            $ = new ContainerHttpGetResponse(Objects.requireNonNull(defaults));
        }

        public Builder httpHeaders(@Nullable HttpHeadersResponse httpHeaders) {
            $.httpHeaders = httpHeaders;
            return this;
        }

        public Builder path(@Nullable String path) {
            $.path = path;
            return this;
        }

        public Builder port(Integer port) {
            $.port = port;
            return this;
        }

        public Builder scheme(@Nullable String scheme) {
            $.scheme = scheme;
            return this;
        }

        public ContainerHttpGetResponse build() {
            $.port = Objects.requireNonNull($.port, "expected parameter 'port' to be non-null");
            return $;
        }
    }

}
