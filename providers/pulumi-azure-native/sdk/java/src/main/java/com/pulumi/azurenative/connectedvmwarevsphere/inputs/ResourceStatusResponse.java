// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The resource status information.
 * 
 */
public final class ResourceStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResourceStatusResponse Empty = new ResourceStatusResponse();

    /**
     * The last update time for this condition.
     * 
     */
    @Import(name="lastUpdatedAt", required=true)
    private String lastUpdatedAt;

    /**
     * @return The last update time for this condition.
     * 
     */
    public String lastUpdatedAt() {
        return this.lastUpdatedAt;
    }

    /**
     * A human readable message indicating details about the status.
     * 
     */
    @Import(name="message", required=true)
    private String message;

    /**
     * @return A human readable message indicating details about the status.
     * 
     */
    public String message() {
        return this.message;
    }

    /**
     * The reason for the condition&#39;s status.
     * 
     */
    @Import(name="reason", required=true)
    private String reason;

    /**
     * @return The reason for the condition&#39;s status.
     * 
     */
    public String reason() {
        return this.reason;
    }

    /**
     * Severity with which to treat failures of this type of condition.
     * 
     */
    @Import(name="severity", required=true)
    private String severity;

    /**
     * @return Severity with which to treat failures of this type of condition.
     * 
     */
    public String severity() {
        return this.severity;
    }

    /**
     * Status of the condition.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Status of the condition.
     * 
     */
    public String status() {
        return this.status;
    }

    /**
     * The type of the condition.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of the condition.
     * 
     */
    public String type() {
        return this.type;
    }

    private ResourceStatusResponse() {}

    private ResourceStatusResponse(ResourceStatusResponse $) {
        this.lastUpdatedAt = $.lastUpdatedAt;
        this.message = $.message;
        this.reason = $.reason;
        this.severity = $.severity;
        this.status = $.status;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceStatusResponse $;

        public Builder() {
            $ = new ResourceStatusResponse();
        }

        public Builder(ResourceStatusResponse defaults) {
            $ = new ResourceStatusResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param lastUpdatedAt The last update time for this condition.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedAt(String lastUpdatedAt) {
            $.lastUpdatedAt = lastUpdatedAt;
            return this;
        }

        /**
         * @param message A human readable message indicating details about the status.
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            $.message = message;
            return this;
        }

        /**
         * @param reason The reason for the condition&#39;s status.
         * 
         * @return builder
         * 
         */
        public Builder reason(String reason) {
            $.reason = reason;
            return this;
        }

        /**
         * @param severity Severity with which to treat failures of this type of condition.
         * 
         * @return builder
         * 
         */
        public Builder severity(String severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param status Status of the condition.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        /**
         * @param type The type of the condition.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public ResourceStatusResponse build() {
            $.lastUpdatedAt = Objects.requireNonNull($.lastUpdatedAt, "expected parameter 'lastUpdatedAt' to be non-null");
            $.message = Objects.requireNonNull($.message, "expected parameter 'message' to be non-null");
            $.reason = Objects.requireNonNull($.reason, "expected parameter 'reason' to be non-null");
            $.severity = Objects.requireNonNull($.severity, "expected parameter 'severity' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
