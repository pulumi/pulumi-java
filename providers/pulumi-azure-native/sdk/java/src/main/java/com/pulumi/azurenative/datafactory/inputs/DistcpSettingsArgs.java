// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Distcp settings.
 * 
 */
public final class DistcpSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DistcpSettingsArgs Empty = new DistcpSettingsArgs();

    /**
     * Specifies the Distcp options. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="distcpOptions")
      private final @Nullable Output<Object> distcpOptions;

    public Output<Object> distcpOptions() {
        return this.distcpOptions == null ? Codegen.empty() : this.distcpOptions;
    }

    /**
     * Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="resourceManagerEndpoint", required=true)
      private final Output<Object> resourceManagerEndpoint;

    public Output<Object> resourceManagerEndpoint() {
        return this.resourceManagerEndpoint;
    }

    /**
     * Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="tempScriptPath", required=true)
      private final Output<Object> tempScriptPath;

    public Output<Object> tempScriptPath() {
        return this.tempScriptPath;
    }

    public DistcpSettingsArgs(
        @Nullable Output<Object> distcpOptions,
        Output<Object> resourceManagerEndpoint,
        Output<Object> tempScriptPath) {
        this.distcpOptions = distcpOptions;
        this.resourceManagerEndpoint = Objects.requireNonNull(resourceManagerEndpoint, "expected parameter 'resourceManagerEndpoint' to be non-null");
        this.tempScriptPath = Objects.requireNonNull(tempScriptPath, "expected parameter 'tempScriptPath' to be non-null");
    }

    private DistcpSettingsArgs() {
        this.distcpOptions = Codegen.empty();
        this.resourceManagerEndpoint = Codegen.empty();
        this.tempScriptPath = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistcpSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> distcpOptions;
        private Output<Object> resourceManagerEndpoint;
        private Output<Object> tempScriptPath;

        public Builder() {
    	      // Empty
        }

        public Builder(DistcpSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.distcpOptions = defaults.distcpOptions;
    	      this.resourceManagerEndpoint = defaults.resourceManagerEndpoint;
    	      this.tempScriptPath = defaults.tempScriptPath;
        }

        public Builder distcpOptions(@Nullable Output<Object> distcpOptions) {
            this.distcpOptions = distcpOptions;
            return this;
        }
        public Builder distcpOptions(@Nullable Object distcpOptions) {
            this.distcpOptions = Codegen.ofNullable(distcpOptions);
            return this;
        }
        public Builder resourceManagerEndpoint(Output<Object> resourceManagerEndpoint) {
            this.resourceManagerEndpoint = Objects.requireNonNull(resourceManagerEndpoint);
            return this;
        }
        public Builder resourceManagerEndpoint(Object resourceManagerEndpoint) {
            this.resourceManagerEndpoint = Output.of(Objects.requireNonNull(resourceManagerEndpoint));
            return this;
        }
        public Builder tempScriptPath(Output<Object> tempScriptPath) {
            this.tempScriptPath = Objects.requireNonNull(tempScriptPath);
            return this;
        }
        public Builder tempScriptPath(Object tempScriptPath) {
            this.tempScriptPath = Output.of(Objects.requireNonNull(tempScriptPath));
            return this;
        }        public DistcpSettingsArgs build() {
            return new DistcpSettingsArgs(distcpOptions, resourceManagerEndpoint, tempScriptPath);
        }
    }
}
