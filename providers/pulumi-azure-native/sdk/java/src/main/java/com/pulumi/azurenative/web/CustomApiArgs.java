// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web;

import com.pulumi.azurenative.web.inputs.CustomApiPropertiesDefinitionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomApiArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomApiArgs Empty = new CustomApiArgs();

    /**
     * API name
     * 
     */
    @Import(name="apiName")
    private @Nullable Output<String> apiName;

    /**
     * @return API name
     * 
     */
    public Optional<Output<String>> apiName() {
        return Optional.ofNullable(this.apiName);
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource location
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Custom API properties
     * 
     */
    @Import(name="properties")
    private @Nullable Output<CustomApiPropertiesDefinitionArgs> properties;

    /**
     * @return Custom API properties
     * 
     */
    public Optional<Output<CustomApiPropertiesDefinitionArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The resource group
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Subscription Id
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return Subscription Id
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CustomApiArgs() {}

    private CustomApiArgs(CustomApiArgs $) {
        this.apiName = $.apiName;
        this.location = $.location;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
        this.subscriptionId = $.subscriptionId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomApiArgs $;

        public Builder() {
            $ = new CustomApiArgs();
        }

        public Builder(CustomApiArgs defaults) {
            $ = new CustomApiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiName API name
         * 
         * @return builder
         * 
         */
        public Builder apiName(@Nullable Output<String> apiName) {
            $.apiName = apiName;
            return this;
        }

        /**
         * @param apiName API name
         * 
         * @return builder
         * 
         */
        public Builder apiName(String apiName) {
            return apiName(Output.of(apiName));
        }

        /**
         * @param location Resource location
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource location
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param properties Custom API properties
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<CustomApiPropertiesDefinitionArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Custom API properties
         * 
         * @return builder
         * 
         */
        public Builder properties(CustomApiPropertiesDefinitionArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroupName The resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param subscriptionId Subscription Id
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId Subscription Id
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public CustomApiArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
