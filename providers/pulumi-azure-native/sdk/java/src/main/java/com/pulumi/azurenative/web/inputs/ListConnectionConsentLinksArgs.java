// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.ConsentLinkParameterDefinition;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListConnectionConsentLinksArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListConnectionConsentLinksArgs Empty = new ListConnectionConsentLinksArgs();

    /**
     * Connection name
     * 
     */
    @Import(name="connectionName", required=true)
    private String connectionName;

    public String connectionName() {
        return this.connectionName;
    }

    /**
     * Collection of resources
     * 
     */
    @Import(name="parameters")
    private @Nullable List<ConsentLinkParameterDefinition> parameters;

    public Optional<List<ConsentLinkParameterDefinition>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The resource group
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Subscription Id
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable String subscriptionId;

    public Optional<String> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    private ListConnectionConsentLinksArgs() {}

    private ListConnectionConsentLinksArgs(ListConnectionConsentLinksArgs $) {
        this.connectionName = $.connectionName;
        this.parameters = $.parameters;
        this.resourceGroupName = $.resourceGroupName;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListConnectionConsentLinksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListConnectionConsentLinksArgs $;

        public Builder() {
            $ = new ListConnectionConsentLinksArgs();
        }

        public Builder(ListConnectionConsentLinksArgs defaults) {
            $ = new ListConnectionConsentLinksArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectionName(String connectionName) {
            $.connectionName = connectionName;
            return this;
        }

        public Builder parameters(@Nullable List<ConsentLinkParameterDefinition> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(ConsentLinkParameterDefinition... parameters) {
            return parameters(List.of(parameters));
        }

        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder subscriptionId(@Nullable String subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        public ListConnectionConsentLinksArgs build() {
            $.connectionName = Objects.requireNonNull($.connectionName, "expected parameter 'connectionName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
