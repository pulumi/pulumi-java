// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.ConnectionStatePropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of a managed private endpoint
 * 
 */
public final class ManagedPrivateEndpointResponse extends com.pulumi.resources.InvokeArgs {

    public static final ManagedPrivateEndpointResponse Empty = new ManagedPrivateEndpointResponse();

    /**
     * The managed private endpoint connection state
     * 
     */
    @Import(name="connectionState")
    private @Nullable ConnectionStatePropertiesResponse connectionState;

    public Optional<ConnectionStatePropertiesResponse> connectionState() {
        return Optional.ofNullable(this.connectionState);
    }

    /**
     * Fully qualified domain names
     * 
     */
    @Import(name="fqdns")
    private @Nullable List<String> fqdns;

    public Optional<List<String>> fqdns() {
        return Optional.ofNullable(this.fqdns);
    }

    /**
     * The groupId to which the managed private endpoint is created
     * 
     */
    @Import(name="groupId")
    private @Nullable String groupId;

    public Optional<String> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * Denotes whether the managed private endpoint is reserved
     * 
     */
    @Import(name="isReserved", required=true)
    private Boolean isReserved;

    public Boolean isReserved() {
        return this.isReserved;
    }

    /**
     * The ARM resource ID of the resource to which the managed private endpoint is created
     * 
     */
    @Import(name="privateLinkResourceId")
    private @Nullable String privateLinkResourceId;

    public Optional<String> privateLinkResourceId() {
        return Optional.ofNullable(this.privateLinkResourceId);
    }

    /**
     * The managed private endpoint provisioning state
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    private ManagedPrivateEndpointResponse() {}

    private ManagedPrivateEndpointResponse(ManagedPrivateEndpointResponse $) {
        this.connectionState = $.connectionState;
        this.fqdns = $.fqdns;
        this.groupId = $.groupId;
        this.isReserved = $.isReserved;
        this.privateLinkResourceId = $.privateLinkResourceId;
        this.provisioningState = $.provisioningState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedPrivateEndpointResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedPrivateEndpointResponse $;

        public Builder() {
            $ = new ManagedPrivateEndpointResponse();
        }

        public Builder(ManagedPrivateEndpointResponse defaults) {
            $ = new ManagedPrivateEndpointResponse(Objects.requireNonNull(defaults));
        }

        public Builder connectionState(@Nullable ConnectionStatePropertiesResponse connectionState) {
            $.connectionState = connectionState;
            return this;
        }

        public Builder fqdns(@Nullable List<String> fqdns) {
            $.fqdns = fqdns;
            return this;
        }

        public Builder fqdns(String... fqdns) {
            return fqdns(List.of(fqdns));
        }

        public Builder groupId(@Nullable String groupId) {
            $.groupId = groupId;
            return this;
        }

        public Builder isReserved(Boolean isReserved) {
            $.isReserved = isReserved;
            return this;
        }

        public Builder privateLinkResourceId(@Nullable String privateLinkResourceId) {
            $.privateLinkResourceId = privateLinkResourceId;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public ManagedPrivateEndpointResponse build() {
            $.isReserved = Objects.requireNonNull($.isReserved, "expected parameter 'isReserved' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
