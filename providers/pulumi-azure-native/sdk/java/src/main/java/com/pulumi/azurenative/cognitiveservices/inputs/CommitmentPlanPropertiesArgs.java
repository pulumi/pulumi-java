// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cognitiveservices.inputs;

import com.pulumi.azurenative.cognitiveservices.enums.HostingModel;
import com.pulumi.azurenative.cognitiveservices.inputs.CommitmentPeriodArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of Cognitive Services account commitment plan.
 * 
 */
public final class CommitmentPlanPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final CommitmentPlanPropertiesArgs Empty = new CommitmentPlanPropertiesArgs();

    /**
     * AutoRenew commitment plan.
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * Cognitive Services account commitment period.
     * 
     */
    @Import(name="current")
    private @Nullable Output<CommitmentPeriodArgs> current;

    public Optional<Output<CommitmentPeriodArgs>> current() {
        return Optional.ofNullable(this.current);
    }

    /**
     * Account hosting model.
     * 
     */
    @Import(name="hostingModel")
    private @Nullable Output<Either<String,HostingModel>> hostingModel;

    public Optional<Output<Either<String,HostingModel>>> hostingModel() {
        return Optional.ofNullable(this.hostingModel);
    }

    /**
     * Cognitive Services account commitment period.
     * 
     */
    @Import(name="next")
    private @Nullable Output<CommitmentPeriodArgs> next;

    public Optional<Output<CommitmentPeriodArgs>> next() {
        return Optional.ofNullable(this.next);
    }

    /**
     * Commitment plan type.
     * 
     */
    @Import(name="planType")
    private @Nullable Output<String> planType;

    public Optional<Output<String>> planType() {
        return Optional.ofNullable(this.planType);
    }

    private CommitmentPlanPropertiesArgs() {}

    private CommitmentPlanPropertiesArgs(CommitmentPlanPropertiesArgs $) {
        this.autoRenew = $.autoRenew;
        this.current = $.current;
        this.hostingModel = $.hostingModel;
        this.next = $.next;
        this.planType = $.planType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CommitmentPlanPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CommitmentPlanPropertiesArgs $;

        public Builder() {
            $ = new CommitmentPlanPropertiesArgs();
        }

        public Builder(CommitmentPlanPropertiesArgs defaults) {
            $ = new CommitmentPlanPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        public Builder current(@Nullable Output<CommitmentPeriodArgs> current) {
            $.current = current;
            return this;
        }

        public Builder current(CommitmentPeriodArgs current) {
            return current(Output.of(current));
        }

        public Builder hostingModel(@Nullable Output<Either<String,HostingModel>> hostingModel) {
            $.hostingModel = hostingModel;
            return this;
        }

        public Builder hostingModel(Either<String,HostingModel> hostingModel) {
            return hostingModel(Output.of(hostingModel));
        }

        public Builder hostingModel(String hostingModel) {
            return hostingModel(Either.ofLeft(hostingModel));
        }

        public Builder hostingModel(HostingModel hostingModel) {
            return hostingModel(Either.ofRight(hostingModel));
        }

        public Builder next(@Nullable Output<CommitmentPeriodArgs> next) {
            $.next = next;
            return this;
        }

        public Builder next(CommitmentPeriodArgs next) {
            return next(Output.of(next));
        }

        public Builder planType(@Nullable Output<String> planType) {
            $.planType = planType;
            return this;
        }

        public Builder planType(String planType) {
            return planType(Output.of(planType));
        }

        public CommitmentPlanPropertiesArgs build() {
            return $;
        }
    }

}
