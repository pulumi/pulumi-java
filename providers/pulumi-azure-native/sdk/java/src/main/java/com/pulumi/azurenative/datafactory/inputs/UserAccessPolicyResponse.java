// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Get Data Plane read only token request definition.
 * 
 */
public final class UserAccessPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final UserAccessPolicyResponse Empty = new UserAccessPolicyResponse();

    /**
     * The resource path to get access relative to factory. Currently only empty string is supported which corresponds to the factory resource.
     * 
     */
    @Import(name="accessResourcePath")
    private @Nullable String accessResourcePath;

    public Optional<String> accessResourcePath() {
        return Optional.ofNullable(this.accessResourcePath);
    }

    /**
     * Expiration time for the token. Maximum duration for the token is eight hours and by default the token will expire in eight hours.
     * 
     */
    @Import(name="expireTime")
    private @Nullable String expireTime;

    public Optional<String> expireTime() {
        return Optional.ofNullable(this.expireTime);
    }

    /**
     * The string with permissions for Data Plane access. Currently only &#39;r&#39; is supported which grants read only access.
     * 
     */
    @Import(name="permissions")
    private @Nullable String permissions;

    public Optional<String> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    /**
     * The name of the profile. Currently only the default is supported. The default value is DefaultProfile.
     * 
     */
    @Import(name="profileName")
    private @Nullable String profileName;

    public Optional<String> profileName() {
        return Optional.ofNullable(this.profileName);
    }

    /**
     * Start time for the token. If not specified the current time will be used.
     * 
     */
    @Import(name="startTime")
    private @Nullable String startTime;

    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    private UserAccessPolicyResponse() {}

    private UserAccessPolicyResponse(UserAccessPolicyResponse $) {
        this.accessResourcePath = $.accessResourcePath;
        this.expireTime = $.expireTime;
        this.permissions = $.permissions;
        this.profileName = $.profileName;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAccessPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAccessPolicyResponse $;

        public Builder() {
            $ = new UserAccessPolicyResponse();
        }

        public Builder(UserAccessPolicyResponse defaults) {
            $ = new UserAccessPolicyResponse(Objects.requireNonNull(defaults));
        }

        public Builder accessResourcePath(@Nullable String accessResourcePath) {
            $.accessResourcePath = accessResourcePath;
            return this;
        }

        public Builder expireTime(@Nullable String expireTime) {
            $.expireTime = expireTime;
            return this;
        }

        public Builder permissions(@Nullable String permissions) {
            $.permissions = permissions;
            return this;
        }

        public Builder profileName(@Nullable String profileName) {
            $.profileName = profileName;
            return this;
        }

        public Builder startTime(@Nullable String startTime) {
            $.startTime = startTime;
            return this;
        }

        public UserAccessPolicyResponse build() {
            return $;
        }
    }

}
