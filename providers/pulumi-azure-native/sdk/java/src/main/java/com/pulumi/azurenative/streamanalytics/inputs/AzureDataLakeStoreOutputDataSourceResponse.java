// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes an Azure Data Lake Store output data source.
 * 
 */
public final class AzureDataLakeStoreOutputDataSourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final AzureDataLakeStoreOutputDataSourceResponse Empty = new AzureDataLakeStoreOutputDataSourceResponse();

    /**
     * The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="accountName")
    private @Nullable String accountName;

    /**
     * @return The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> accountName() {
        return Optional.ofNullable(this.accountName);
    }

    /**
     * The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.
     * 
     */
    @Import(name="dateFormat")
    private @Nullable String dateFormat;

    /**
     * @return The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.
     * 
     */
    public Optional<String> dateFormat() {
        return Optional.ofNullable(this.dateFormat);
    }

    /**
     * The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="filePathPrefix")
    private @Nullable String filePathPrefix;

    /**
     * @return The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> filePathPrefix() {
        return Optional.ofNullable(this.filePathPrefix);
    }

    /**
     * A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="refreshToken")
    private @Nullable String refreshToken;

    /**
     * @return A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> refreshToken() {
        return Optional.ofNullable(this.refreshToken);
    }

    /**
     * The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="tenantId")
    private @Nullable String tenantId;

    /**
     * @return The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    /**
     * The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.
     * 
     */
    @Import(name="timeFormat")
    private @Nullable String timeFormat;

    /**
     * @return The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.
     * 
     */
    public Optional<String> timeFormat() {
        return Optional.ofNullable(this.timeFormat);
    }

    /**
     * The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
     * 
     */
    @Import(name="tokenUserDisplayName")
    private @Nullable String tokenUserDisplayName;

    /**
     * @return The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
     * 
     */
    public Optional<String> tokenUserDisplayName() {
        return Optional.ofNullable(this.tokenUserDisplayName);
    }

    /**
     * The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
     * 
     */
    @Import(name="tokenUserPrincipalName")
    private @Nullable String tokenUserPrincipalName;

    /**
     * @return The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
     * 
     */
    public Optional<String> tokenUserPrincipalName() {
        return Optional.ofNullable(this.tokenUserPrincipalName);
    }

    /**
     * Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Microsoft.DataLake/Accounts&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Microsoft.DataLake/Accounts&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    private AzureDataLakeStoreOutputDataSourceResponse() {}

    private AzureDataLakeStoreOutputDataSourceResponse(AzureDataLakeStoreOutputDataSourceResponse $) {
        this.accountName = $.accountName;
        this.dateFormat = $.dateFormat;
        this.filePathPrefix = $.filePathPrefix;
        this.refreshToken = $.refreshToken;
        this.tenantId = $.tenantId;
        this.timeFormat = $.timeFormat;
        this.tokenUserDisplayName = $.tokenUserDisplayName;
        this.tokenUserPrincipalName = $.tokenUserPrincipalName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureDataLakeStoreOutputDataSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureDataLakeStoreOutputDataSourceResponse $;

        public Builder() {
            $ = new AzureDataLakeStoreOutputDataSourceResponse();
        }

        public Builder(AzureDataLakeStoreOutputDataSourceResponse defaults) {
            $ = new AzureDataLakeStoreOutputDataSourceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder accountName(@Nullable String accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param dateFormat The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.
         * 
         * @return builder
         * 
         */
        public Builder dateFormat(@Nullable String dateFormat) {
            $.dateFormat = dateFormat;
            return this;
        }

        /**
         * @param filePathPrefix The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder filePathPrefix(@Nullable String filePathPrefix) {
            $.filePathPrefix = filePathPrefix;
            return this;
        }

        /**
         * @param refreshToken A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder refreshToken(@Nullable String refreshToken) {
            $.refreshToken = refreshToken;
            return this;
        }

        /**
         * @param tenantId The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param timeFormat The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.
         * 
         * @return builder
         * 
         */
        public Builder timeFormat(@Nullable String timeFormat) {
            $.timeFormat = timeFormat;
            return this;
        }

        /**
         * @param tokenUserDisplayName The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
         * 
         * @return builder
         * 
         */
        public Builder tokenUserDisplayName(@Nullable String tokenUserDisplayName) {
            $.tokenUserDisplayName = tokenUserDisplayName;
            return this;
        }

        /**
         * @param tokenUserPrincipalName The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
         * 
         * @return builder
         * 
         */
        public Builder tokenUserPrincipalName(@Nullable String tokenUserPrincipalName) {
            $.tokenUserPrincipalName = tokenUserPrincipalName;
            return this;
        }

        /**
         * @param type Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
         * Expected value is &#39;Microsoft.DataLake/Accounts&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public AzureDataLakeStoreOutputDataSourceResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
