// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.ScaleRuleAuthArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Container App container Azure Queue based scaling rule.
 * 
 */
public final class QueueScaleRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final QueueScaleRuleArgs Empty = new QueueScaleRuleArgs();

    /**
     * Authentication secrets for the queue scale rule.
     * 
     */
    @Import(name="auth")
    private @Nullable Output<List<ScaleRuleAuthArgs>> auth;

    /**
     * @return Authentication secrets for the queue scale rule.
     * 
     */
    public Optional<Output<List<ScaleRuleAuthArgs>>> auth() {
        return Optional.ofNullable(this.auth);
    }

    /**
     * Queue length.
     * 
     */
    @Import(name="queueLength")
    private @Nullable Output<Integer> queueLength;

    /**
     * @return Queue length.
     * 
     */
    public Optional<Output<Integer>> queueLength() {
        return Optional.ofNullable(this.queueLength);
    }

    /**
     * Queue name.
     * 
     */
    @Import(name="queueName")
    private @Nullable Output<String> queueName;

    /**
     * @return Queue name.
     * 
     */
    public Optional<Output<String>> queueName() {
        return Optional.ofNullable(this.queueName);
    }

    private QueueScaleRuleArgs() {}

    private QueueScaleRuleArgs(QueueScaleRuleArgs $) {
        this.auth = $.auth;
        this.queueLength = $.queueLength;
        this.queueName = $.queueName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueueScaleRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueueScaleRuleArgs $;

        public Builder() {
            $ = new QueueScaleRuleArgs();
        }

        public Builder(QueueScaleRuleArgs defaults) {
            $ = new QueueScaleRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auth Authentication secrets for the queue scale rule.
         * 
         * @return builder
         * 
         */
        public Builder auth(@Nullable Output<List<ScaleRuleAuthArgs>> auth) {
            $.auth = auth;
            return this;
        }

        /**
         * @param auth Authentication secrets for the queue scale rule.
         * 
         * @return builder
         * 
         */
        public Builder auth(List<ScaleRuleAuthArgs> auth) {
            return auth(Output.of(auth));
        }

        /**
         * @param auth Authentication secrets for the queue scale rule.
         * 
         * @return builder
         * 
         */
        public Builder auth(ScaleRuleAuthArgs... auth) {
            return auth(List.of(auth));
        }

        /**
         * @param queueLength Queue length.
         * 
         * @return builder
         * 
         */
        public Builder queueLength(@Nullable Output<Integer> queueLength) {
            $.queueLength = queueLength;
            return this;
        }

        /**
         * @param queueLength Queue length.
         * 
         * @return builder
         * 
         */
        public Builder queueLength(Integer queueLength) {
            return queueLength(Output.of(queueLength));
        }

        /**
         * @param queueName Queue name.
         * 
         * @return builder
         * 
         */
        public Builder queueName(@Nullable Output<String> queueName) {
            $.queueName = queueName;
            return this;
        }

        /**
         * @param queueName Queue name.
         * 
         * @return builder
         * 
         */
        public Builder queueName(String queueName) {
            return queueName(Output.of(queueName));
        }

        public QueueScaleRuleArgs build() {
            return $;
        }
    }

}
