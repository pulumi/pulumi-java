// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.ApiEntityReferenceResponse;
import com.pulumi.azurenative.compute.inputs.RestorePointSourceMetadataResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Restore Point details.
 * 
 */
public final class RestorePointResponse extends com.pulumi.resources.InvokeArgs {

    public static final RestorePointResponse Empty = new RestorePointResponse();

    /**
     * Gets the consistency mode for the restore point. Please refer to https://aka.ms/RestorePoints for more details.
     * 
     */
    @Import(name="consistencyMode", required=true)
    private String consistencyMode;

    public String consistencyMode() {
        return this.consistencyMode;
    }

    /**
     * List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
     * 
     */
    @Import(name="excludeDisks")
    private @Nullable List<ApiEntityReferenceResponse> excludeDisks;

    public Optional<List<ApiEntityReferenceResponse>> excludeDisks() {
        return Optional.ofNullable(this.excludeDisks);
    }

    /**
     * Resource Id
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * Resource name
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Gets the provisioning state of the restore point.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Gets the details of the VM captured at the time of the restore point creation.
     * 
     */
    @Import(name="sourceMetadata", required=true)
    private RestorePointSourceMetadataResponse sourceMetadata;

    public RestorePointSourceMetadataResponse sourceMetadata() {
        return this.sourceMetadata;
    }

    /**
     * Gets the creation time of the restore point.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable String timeCreated;

    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * Resource type
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private RestorePointResponse() {}

    private RestorePointResponse(RestorePointResponse $) {
        this.consistencyMode = $.consistencyMode;
        this.excludeDisks = $.excludeDisks;
        this.id = $.id;
        this.name = $.name;
        this.provisioningState = $.provisioningState;
        this.sourceMetadata = $.sourceMetadata;
        this.timeCreated = $.timeCreated;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RestorePointResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RestorePointResponse $;

        public Builder() {
            $ = new RestorePointResponse();
        }

        public Builder(RestorePointResponse defaults) {
            $ = new RestorePointResponse(Objects.requireNonNull(defaults));
        }

        public Builder consistencyMode(String consistencyMode) {
            $.consistencyMode = consistencyMode;
            return this;
        }

        public Builder excludeDisks(@Nullable List<ApiEntityReferenceResponse> excludeDisks) {
            $.excludeDisks = excludeDisks;
            return this;
        }

        public Builder excludeDisks(ApiEntityReferenceResponse... excludeDisks) {
            return excludeDisks(List.of(excludeDisks));
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder sourceMetadata(RestorePointSourceMetadataResponse sourceMetadata) {
            $.sourceMetadata = sourceMetadata;
            return this;
        }

        public Builder timeCreated(@Nullable String timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public RestorePointResponse build() {
            $.consistencyMode = Objects.requireNonNull($.consistencyMode, "expected parameter 'consistencyMode' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.sourceMetadata = Objects.requireNonNull($.sourceMetadata, "expected parameter 'sourceMetadata' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
