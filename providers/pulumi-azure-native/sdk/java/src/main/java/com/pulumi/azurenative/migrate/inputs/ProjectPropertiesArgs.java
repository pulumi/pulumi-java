// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.azurenative.migrate.enums.ProjectStatus;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Properties of a project.
 * 
 */
public final class ProjectPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectPropertiesArgs Empty = new ProjectPropertiesArgs();

    /**
     * Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
     * 
     */
    @Import(name="assessmentSolutionId")
      private final @Nullable Output<String> assessmentSolutionId;

    public Output<String> assessmentSolutionId() {
        return this.assessmentSolutionId == null ? Codegen.empty() : this.assessmentSolutionId;
    }

    /**
     * The ARM id of the storage account used for interactions when public access is disabled.
     * 
     */
    @Import(name="customerStorageAccountArmId")
      private final @Nullable Output<String> customerStorageAccountArmId;

    public Output<String> customerStorageAccountArmId() {
        return this.customerStorageAccountArmId == null ? Codegen.empty() : this.customerStorageAccountArmId;
    }

    /**
     * The ARM id of service map workspace created by customer.
     * 
     */
    @Import(name="customerWorkspaceId")
      private final @Nullable Output<String> customerWorkspaceId;

    public Output<String> customerWorkspaceId() {
        return this.customerWorkspaceId == null ? Codegen.empty() : this.customerWorkspaceId;
    }

    /**
     * Location of service map workspace created by customer.
     * 
     */
    @Import(name="customerWorkspaceLocation")
      private final @Nullable Output<String> customerWorkspaceLocation;

    public Output<String> customerWorkspaceLocation() {
        return this.customerWorkspaceLocation == null ? Codegen.empty() : this.customerWorkspaceLocation;
    }

    /**
     * Assessment project status.
     * 
     */
    @Import(name="projectStatus")
      private final @Nullable Output<Either<String,ProjectStatus>> projectStatus;

    public Output<Either<String,ProjectStatus>> projectStatus() {
        return this.projectStatus == null ? Codegen.empty() : this.projectStatus;
    }

    /**
     * This value can be set to &#39;enabled&#39; to avoid breaking changes on existing customer resources and templates. If set to &#39;disabled&#39;, traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
     * 
     */
    @Import(name="publicNetworkAccess")
      private final @Nullable Output<String> publicNetworkAccess;

    public Output<String> publicNetworkAccess() {
        return this.publicNetworkAccess == null ? Codegen.empty() : this.publicNetworkAccess;
    }

    public ProjectPropertiesArgs(
        @Nullable Output<String> assessmentSolutionId,
        @Nullable Output<String> customerStorageAccountArmId,
        @Nullable Output<String> customerWorkspaceId,
        @Nullable Output<String> customerWorkspaceLocation,
        @Nullable Output<Either<String,ProjectStatus>> projectStatus,
        @Nullable Output<String> publicNetworkAccess) {
        this.assessmentSolutionId = assessmentSolutionId;
        this.customerStorageAccountArmId = customerStorageAccountArmId;
        this.customerWorkspaceId = customerWorkspaceId;
        this.customerWorkspaceLocation = customerWorkspaceLocation;
        this.projectStatus = projectStatus;
        this.publicNetworkAccess = publicNetworkAccess;
    }

    private ProjectPropertiesArgs() {
        this.assessmentSolutionId = Codegen.empty();
        this.customerStorageAccountArmId = Codegen.empty();
        this.customerWorkspaceId = Codegen.empty();
        this.customerWorkspaceLocation = Codegen.empty();
        this.projectStatus = Codegen.empty();
        this.publicNetworkAccess = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> assessmentSolutionId;
        private @Nullable Output<String> customerStorageAccountArmId;
        private @Nullable Output<String> customerWorkspaceId;
        private @Nullable Output<String> customerWorkspaceLocation;
        private @Nullable Output<Either<String,ProjectStatus>> projectStatus;
        private @Nullable Output<String> publicNetworkAccess;

        public Builder() {
    	      // Empty
        }

        public Builder(ProjectPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assessmentSolutionId = defaults.assessmentSolutionId;
    	      this.customerStorageAccountArmId = defaults.customerStorageAccountArmId;
    	      this.customerWorkspaceId = defaults.customerWorkspaceId;
    	      this.customerWorkspaceLocation = defaults.customerWorkspaceLocation;
    	      this.projectStatus = defaults.projectStatus;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
        }

        public Builder assessmentSolutionId(@Nullable Output<String> assessmentSolutionId) {
            this.assessmentSolutionId = assessmentSolutionId;
            return this;
        }
        public Builder assessmentSolutionId(@Nullable String assessmentSolutionId) {
            this.assessmentSolutionId = Codegen.ofNullable(assessmentSolutionId);
            return this;
        }
        public Builder customerStorageAccountArmId(@Nullable Output<String> customerStorageAccountArmId) {
            this.customerStorageAccountArmId = customerStorageAccountArmId;
            return this;
        }
        public Builder customerStorageAccountArmId(@Nullable String customerStorageAccountArmId) {
            this.customerStorageAccountArmId = Codegen.ofNullable(customerStorageAccountArmId);
            return this;
        }
        public Builder customerWorkspaceId(@Nullable Output<String> customerWorkspaceId) {
            this.customerWorkspaceId = customerWorkspaceId;
            return this;
        }
        public Builder customerWorkspaceId(@Nullable String customerWorkspaceId) {
            this.customerWorkspaceId = Codegen.ofNullable(customerWorkspaceId);
            return this;
        }
        public Builder customerWorkspaceLocation(@Nullable Output<String> customerWorkspaceLocation) {
            this.customerWorkspaceLocation = customerWorkspaceLocation;
            return this;
        }
        public Builder customerWorkspaceLocation(@Nullable String customerWorkspaceLocation) {
            this.customerWorkspaceLocation = Codegen.ofNullable(customerWorkspaceLocation);
            return this;
        }
        public Builder projectStatus(@Nullable Output<Either<String,ProjectStatus>> projectStatus) {
            this.projectStatus = projectStatus;
            return this;
        }
        public Builder projectStatus(@Nullable Either<String,ProjectStatus> projectStatus) {
            this.projectStatus = Codegen.ofNullable(projectStatus);
            return this;
        }
        public Builder publicNetworkAccess(@Nullable Output<String> publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = Codegen.ofNullable(publicNetworkAccess);
            return this;
        }        public ProjectPropertiesArgs build() {
            return new ProjectPropertiesArgs(assessmentSolutionId, customerStorageAccountArmId, customerWorkspaceId, customerWorkspaceLocation, projectStatus, publicNetworkAccess);
        }
    }
}
