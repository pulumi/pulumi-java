// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.keyvault.inputs;

import com.pulumi.azurenative.keyvault.inputs.SecretAttributesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of the secret
 * 
 */
public final class SecretPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecretPropertiesResponse Empty = new SecretPropertiesResponse();

    /**
     * The attributes of the secret.
     * 
     */
    @Import(name="attributes")
    private @Nullable SecretAttributesResponse attributes;

    /**
     * @return The attributes of the secret.
     * 
     */
    public Optional<SecretAttributesResponse> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * The content type of the secret.
     * 
     */
    @Import(name="contentType")
    private @Nullable String contentType;

    /**
     * @return The content type of the secret.
     * 
     */
    public Optional<String> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    /**
     * The URI to retrieve the current version of the secret.
     * 
     */
    @Import(name="secretUri", required=true)
    private String secretUri;

    /**
     * @return The URI to retrieve the current version of the secret.
     * 
     */
    public String secretUri() {
        return this.secretUri;
    }

    /**
     * The URI to retrieve the specific version of the secret.
     * 
     */
    @Import(name="secretUriWithVersion", required=true)
    private String secretUriWithVersion;

    /**
     * @return The URI to retrieve the specific version of the secret.
     * 
     */
    public String secretUriWithVersion() {
        return this.secretUriWithVersion;
    }

    /**
     * The value of the secret. NOTE: &#39;value&#39; will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.
     * 
     */
    @Import(name="value")
    private @Nullable String value;

    /**
     * @return The value of the secret. NOTE: &#39;value&#39; will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    private SecretPropertiesResponse() {}

    private SecretPropertiesResponse(SecretPropertiesResponse $) {
        this.attributes = $.attributes;
        this.contentType = $.contentType;
        this.secretUri = $.secretUri;
        this.secretUriWithVersion = $.secretUriWithVersion;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretPropertiesResponse $;

        public Builder() {
            $ = new SecretPropertiesResponse();
        }

        public Builder(SecretPropertiesResponse defaults) {
            $ = new SecretPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributes The attributes of the secret.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable SecretAttributesResponse attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param contentType The content type of the secret.
         * 
         * @return builder
         * 
         */
        public Builder contentType(@Nullable String contentType) {
            $.contentType = contentType;
            return this;
        }

        /**
         * @param secretUri The URI to retrieve the current version of the secret.
         * 
         * @return builder
         * 
         */
        public Builder secretUri(String secretUri) {
            $.secretUri = secretUri;
            return this;
        }

        /**
         * @param secretUriWithVersion The URI to retrieve the specific version of the secret.
         * 
         * @return builder
         * 
         */
        public Builder secretUriWithVersion(String secretUriWithVersion) {
            $.secretUriWithVersion = secretUriWithVersion;
            return this;
        }

        /**
         * @param value The value of the secret. NOTE: &#39;value&#39; will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable String value) {
            $.value = value;
            return this;
        }

        public SecretPropertiesResponse build() {
            $.secretUri = Objects.requireNonNull($.secretUri, "expected parameter 'secretUri' to be non-null");
            $.secretUriWithVersion = Objects.requireNonNull($.secretUriWithVersion, "expected parameter 'secretUriWithVersion' to be non-null");
            return $;
        }
    }

}
