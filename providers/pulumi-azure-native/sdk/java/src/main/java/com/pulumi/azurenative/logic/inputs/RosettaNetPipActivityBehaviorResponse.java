// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * The integration account RosettaNet ProcessConfiguration activity behavior.
 * 
 */
public final class RosettaNetPipActivityBehaviorResponse extends com.pulumi.resources.InvokeArgs {

    public static final RosettaNetPipActivityBehaviorResponse Empty = new RosettaNetPipActivityBehaviorResponse();

    /**
     * The value indicating whether the RosettaNet PIP is used for a single action.
     * 
     */
    @Import(name="actionType", required=true)
    private String actionType;

    public String actionType() {
        return this.actionType;
    }

    /**
     * The value indicating whether authorization is required.
     * 
     */
    @Import(name="isAuthorizationRequired", required=true)
    private Boolean isAuthorizationRequired;

    public Boolean isAuthorizationRequired() {
        return this.isAuthorizationRequired;
    }

    /**
     * The value indicating whether secured transport is required.
     * 
     */
    @Import(name="isSecuredTransportRequired", required=true)
    private Boolean isSecuredTransportRequired;

    public Boolean isSecuredTransportRequired() {
        return this.isSecuredTransportRequired;
    }

    /**
     * The value indicating whether non-repudiation is for origin and content.
     * 
     */
    @Import(name="nonRepudiationOfOriginAndContent", required=true)
    private Boolean nonRepudiationOfOriginAndContent;

    public Boolean nonRepudiationOfOriginAndContent() {
        return this.nonRepudiationOfOriginAndContent;
    }

    /**
     * The persistent confidentiality encryption scope.
     * 
     */
    @Import(name="persistentConfidentialityScope", required=true)
    private String persistentConfidentialityScope;

    public String persistentConfidentialityScope() {
        return this.persistentConfidentialityScope;
    }

    /**
     * The value indicating whether the RosettaNet PIP communication is synchronous.
     * 
     */
    @Import(name="responseType", required=true)
    private String responseType;

    public String responseType() {
        return this.responseType;
    }

    /**
     * The value indicating retry count.
     * 
     */
    @Import(name="retryCount", required=true)
    private Integer retryCount;

    public Integer retryCount() {
        return this.retryCount;
    }

    /**
     * The time to perform in seconds.
     * 
     */
    @Import(name="timeToPerformInSeconds", required=true)
    private Integer timeToPerformInSeconds;

    public Integer timeToPerformInSeconds() {
        return this.timeToPerformInSeconds;
    }

    private RosettaNetPipActivityBehaviorResponse() {}

    private RosettaNetPipActivityBehaviorResponse(RosettaNetPipActivityBehaviorResponse $) {
        this.actionType = $.actionType;
        this.isAuthorizationRequired = $.isAuthorizationRequired;
        this.isSecuredTransportRequired = $.isSecuredTransportRequired;
        this.nonRepudiationOfOriginAndContent = $.nonRepudiationOfOriginAndContent;
        this.persistentConfidentialityScope = $.persistentConfidentialityScope;
        this.responseType = $.responseType;
        this.retryCount = $.retryCount;
        this.timeToPerformInSeconds = $.timeToPerformInSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RosettaNetPipActivityBehaviorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RosettaNetPipActivityBehaviorResponse $;

        public Builder() {
            $ = new RosettaNetPipActivityBehaviorResponse();
        }

        public Builder(RosettaNetPipActivityBehaviorResponse defaults) {
            $ = new RosettaNetPipActivityBehaviorResponse(Objects.requireNonNull(defaults));
        }

        public Builder actionType(String actionType) {
            $.actionType = actionType;
            return this;
        }

        public Builder isAuthorizationRequired(Boolean isAuthorizationRequired) {
            $.isAuthorizationRequired = isAuthorizationRequired;
            return this;
        }

        public Builder isSecuredTransportRequired(Boolean isSecuredTransportRequired) {
            $.isSecuredTransportRequired = isSecuredTransportRequired;
            return this;
        }

        public Builder nonRepudiationOfOriginAndContent(Boolean nonRepudiationOfOriginAndContent) {
            $.nonRepudiationOfOriginAndContent = nonRepudiationOfOriginAndContent;
            return this;
        }

        public Builder persistentConfidentialityScope(String persistentConfidentialityScope) {
            $.persistentConfidentialityScope = persistentConfidentialityScope;
            return this;
        }

        public Builder responseType(String responseType) {
            $.responseType = responseType;
            return this;
        }

        public Builder retryCount(Integer retryCount) {
            $.retryCount = retryCount;
            return this;
        }

        public Builder timeToPerformInSeconds(Integer timeToPerformInSeconds) {
            $.timeToPerformInSeconds = timeToPerformInSeconds;
            return this;
        }

        public RosettaNetPipActivityBehaviorResponse build() {
            $.actionType = Objects.requireNonNull($.actionType, "expected parameter 'actionType' to be non-null");
            $.isAuthorizationRequired = Objects.requireNonNull($.isAuthorizationRequired, "expected parameter 'isAuthorizationRequired' to be non-null");
            $.isSecuredTransportRequired = Objects.requireNonNull($.isSecuredTransportRequired, "expected parameter 'isSecuredTransportRequired' to be non-null");
            $.nonRepudiationOfOriginAndContent = Objects.requireNonNull($.nonRepudiationOfOriginAndContent, "expected parameter 'nonRepudiationOfOriginAndContent' to be non-null");
            $.persistentConfidentialityScope = Objects.requireNonNull($.persistentConfidentialityScope, "expected parameter 'persistentConfidentialityScope' to be non-null");
            $.responseType = Objects.requireNonNull($.responseType, "expected parameter 'responseType' to be non-null");
            $.retryCount = Objects.requireNonNull($.retryCount, "expected parameter 'retryCount' to be non-null");
            $.timeToPerformInSeconds = Objects.requireNonNull($.timeToPerformInSeconds, "expected parameter 'timeToPerformInSeconds' to be non-null");
            return $;
        }
    }

}
