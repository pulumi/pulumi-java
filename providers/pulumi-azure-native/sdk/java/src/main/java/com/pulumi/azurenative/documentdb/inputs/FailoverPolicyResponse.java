// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The failover policy for a given region of a database account.
 * 
 */
public final class FailoverPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final FailoverPolicyResponse Empty = new FailoverPolicyResponse();

    /**
     * The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
     * 
     */
    @Import(name="failoverPriority")
    private @Nullable Integer failoverPriority;

    /**
     * @return The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
     * 
     */
    public Optional<Integer> failoverPriority() {
        return Optional.ofNullable(this.failoverPriority);
    }

    /**
     * The unique identifier of the region in which the database account replicates to. Example: &amp;lt;accountName&amp;gt;-&amp;lt;locationName&amp;gt;.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The unique identifier of the region in which the database account replicates to. Example: &amp;lt;accountName&amp;gt;-&amp;lt;locationName&amp;gt;.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * The name of the region in which the database account exists.
     * 
     */
    @Import(name="locationName")
    private @Nullable String locationName;

    /**
     * @return The name of the region in which the database account exists.
     * 
     */
    public Optional<String> locationName() {
        return Optional.ofNullable(this.locationName);
    }

    private FailoverPolicyResponse() {}

    private FailoverPolicyResponse(FailoverPolicyResponse $) {
        this.failoverPriority = $.failoverPriority;
        this.id = $.id;
        this.locationName = $.locationName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FailoverPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FailoverPolicyResponse $;

        public Builder() {
            $ = new FailoverPolicyResponse();
        }

        public Builder(FailoverPolicyResponse defaults) {
            $ = new FailoverPolicyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param failoverPriority The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
         * 
         * @return builder
         * 
         */
        public Builder failoverPriority(@Nullable Integer failoverPriority) {
            $.failoverPriority = failoverPriority;
            return this;
        }

        /**
         * @param id The unique identifier of the region in which the database account replicates to. Example: &amp;lt;accountName&amp;gt;-&amp;lt;locationName&amp;gt;.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param locationName The name of the region in which the database account exists.
         * 
         * @return builder
         * 
         */
        public Builder locationName(@Nullable String locationName) {
            $.locationName = locationName;
            return this;
        }

        public FailoverPolicyResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
