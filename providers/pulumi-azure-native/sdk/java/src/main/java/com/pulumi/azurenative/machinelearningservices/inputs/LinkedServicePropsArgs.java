// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.enums.LinkedServiceLinkType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * LinkedService specific properties.
 * 
 */
public final class LinkedServicePropsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinkedServicePropsArgs Empty = new LinkedServicePropsArgs();

    /**
     * The creation time of the linked service.
     * 
     */
    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    /**
     * @return The creation time of the linked service.
     * 
     */
    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    /**
     * Type of the link target.
     * 
     */
    @Import(name="linkType")
    private @Nullable Output<LinkedServiceLinkType> linkType;

    /**
     * @return Type of the link target.
     * 
     */
    public Optional<Output<LinkedServiceLinkType>> linkType() {
        return Optional.ofNullable(this.linkType);
    }

    /**
     * ResourceId of the link target of the linked service.
     * 
     */
    @Import(name="linkedServiceResourceId", required=true)
    private Output<String> linkedServiceResourceId;

    /**
     * @return ResourceId of the link target of the linked service.
     * 
     */
    public Output<String> linkedServiceResourceId() {
        return this.linkedServiceResourceId;
    }

    /**
     * The last modified time of the linked service.
     * 
     */
    @Import(name="modifiedTime")
    private @Nullable Output<String> modifiedTime;

    /**
     * @return The last modified time of the linked service.
     * 
     */
    public Optional<Output<String>> modifiedTime() {
        return Optional.ofNullable(this.modifiedTime);
    }

    private LinkedServicePropsArgs() {}

    private LinkedServicePropsArgs(LinkedServicePropsArgs $) {
        this.createdTime = $.createdTime;
        this.linkType = $.linkType;
        this.linkedServiceResourceId = $.linkedServiceResourceId;
        this.modifiedTime = $.modifiedTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinkedServicePropsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinkedServicePropsArgs $;

        public Builder() {
            $ = new LinkedServicePropsArgs();
        }

        public Builder(LinkedServicePropsArgs defaults) {
            $ = new LinkedServicePropsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdTime The creation time of the linked service.
         * 
         * @return builder
         * 
         */
        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        /**
         * @param createdTime The creation time of the linked service.
         * 
         * @return builder
         * 
         */
        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        /**
         * @param linkType Type of the link target.
         * 
         * @return builder
         * 
         */
        public Builder linkType(@Nullable Output<LinkedServiceLinkType> linkType) {
            $.linkType = linkType;
            return this;
        }

        /**
         * @param linkType Type of the link target.
         * 
         * @return builder
         * 
         */
        public Builder linkType(LinkedServiceLinkType linkType) {
            return linkType(Output.of(linkType));
        }

        /**
         * @param linkedServiceResourceId ResourceId of the link target of the linked service.
         * 
         * @return builder
         * 
         */
        public Builder linkedServiceResourceId(Output<String> linkedServiceResourceId) {
            $.linkedServiceResourceId = linkedServiceResourceId;
            return this;
        }

        /**
         * @param linkedServiceResourceId ResourceId of the link target of the linked service.
         * 
         * @return builder
         * 
         */
        public Builder linkedServiceResourceId(String linkedServiceResourceId) {
            return linkedServiceResourceId(Output.of(linkedServiceResourceId));
        }

        /**
         * @param modifiedTime The last modified time of the linked service.
         * 
         * @return builder
         * 
         */
        public Builder modifiedTime(@Nullable Output<String> modifiedTime) {
            $.modifiedTime = modifiedTime;
            return this;
        }

        /**
         * @param modifiedTime The last modified time of the linked service.
         * 
         * @return builder
         * 
         */
        public Builder modifiedTime(String modifiedTime) {
            return modifiedTime(Output.of(modifiedTime));
        }

        public LinkedServicePropsArgs build() {
            $.linkedServiceResourceId = Objects.requireNonNull($.linkedServiceResourceId, "expected parameter 'linkedServiceResourceId' to be non-null");
            return $;
        }
    }

}
