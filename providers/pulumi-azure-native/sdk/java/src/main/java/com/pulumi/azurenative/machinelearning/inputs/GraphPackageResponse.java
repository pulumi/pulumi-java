// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearning.inputs;

import com.pulumi.azurenative.machinelearning.inputs.GraphEdgeResponse;
import com.pulumi.azurenative.machinelearning.inputs.GraphNodeResponse;
import com.pulumi.azurenative.machinelearning.inputs.GraphParameterResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the graph of modules making up the machine learning solution.
 * 
 */
public final class GraphPackageResponse extends com.pulumi.resources.InvokeArgs {

    public static final GraphPackageResponse Empty = new GraphPackageResponse();

    /**
     * The list of edges making up the graph.
     * 
     */
    @Import(name="edges")
    private @Nullable List<GraphEdgeResponse> edges;

    /**
     * @return The list of edges making up the graph.
     * 
     */
    public Optional<List<GraphEdgeResponse>> edges() {
        return Optional.ofNullable(this.edges);
    }

    /**
     * The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
     * 
     */
    @Import(name="graphParameters")
    private @Nullable Map<String,GraphParameterResponse> graphParameters;

    /**
     * @return The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
     * 
     */
    public Optional<Map<String,GraphParameterResponse>> graphParameters() {
        return Optional.ofNullable(this.graphParameters);
    }

    /**
     * The set of nodes making up the graph, provided as a nodeId to GraphNode map
     * 
     */
    @Import(name="nodes")
    private @Nullable Map<String,GraphNodeResponse> nodes;

    /**
     * @return The set of nodes making up the graph, provided as a nodeId to GraphNode map
     * 
     */
    public Optional<Map<String,GraphNodeResponse>> nodes() {
        return Optional.ofNullable(this.nodes);
    }

    private GraphPackageResponse() {}

    private GraphPackageResponse(GraphPackageResponse $) {
        this.edges = $.edges;
        this.graphParameters = $.graphParameters;
        this.nodes = $.nodes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GraphPackageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GraphPackageResponse $;

        public Builder() {
            $ = new GraphPackageResponse();
        }

        public Builder(GraphPackageResponse defaults) {
            $ = new GraphPackageResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param edges The list of edges making up the graph.
         * 
         * @return builder
         * 
         */
        public Builder edges(@Nullable List<GraphEdgeResponse> edges) {
            $.edges = edges;
            return this;
        }

        /**
         * @param edges The list of edges making up the graph.
         * 
         * @return builder
         * 
         */
        public Builder edges(GraphEdgeResponse... edges) {
            return edges(List.of(edges));
        }

        /**
         * @param graphParameters The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
         * 
         * @return builder
         * 
         */
        public Builder graphParameters(@Nullable Map<String,GraphParameterResponse> graphParameters) {
            $.graphParameters = graphParameters;
            return this;
        }

        /**
         * @param nodes The set of nodes making up the graph, provided as a nodeId to GraphNode map
         * 
         * @return builder
         * 
         */
        public Builder nodes(@Nullable Map<String,GraphNodeResponse> nodes) {
            $.nodes = nodes;
            return this;
        }

        public GraphPackageResponse build() {
            return $;
        }
    }

}
