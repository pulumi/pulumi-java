// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.managednetwork.inputs;

import com.pulumi.azurenative.managednetwork.inputs.ResourceIdResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Scope of a Managed Network
 * 
 */
public final class ScopeResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScopeResponse Empty = new ScopeResponse();

    /**
     * The collection of management groups covered by the Managed Network
     * 
     */
    @Import(name="managementGroups")
    private @Nullable List<ResourceIdResponse> managementGroups;

    public Optional<List<ResourceIdResponse>> managementGroups() {
        return Optional.ofNullable(this.managementGroups);
    }

    /**
     * The collection of  subnets covered by the Managed Network
     * 
     */
    @Import(name="subnets")
    private @Nullable List<ResourceIdResponse> subnets;

    public Optional<List<ResourceIdResponse>> subnets() {
        return Optional.ofNullable(this.subnets);
    }

    /**
     * The collection of subscriptions covered by the Managed Network
     * 
     */
    @Import(name="subscriptions")
    private @Nullable List<ResourceIdResponse> subscriptions;

    public Optional<List<ResourceIdResponse>> subscriptions() {
        return Optional.ofNullable(this.subscriptions);
    }

    /**
     * The collection of virtual nets covered by the Managed Network
     * 
     */
    @Import(name="virtualNetworks")
    private @Nullable List<ResourceIdResponse> virtualNetworks;

    public Optional<List<ResourceIdResponse>> virtualNetworks() {
        return Optional.ofNullable(this.virtualNetworks);
    }

    private ScopeResponse() {}

    private ScopeResponse(ScopeResponse $) {
        this.managementGroups = $.managementGroups;
        this.subnets = $.subnets;
        this.subscriptions = $.subscriptions;
        this.virtualNetworks = $.virtualNetworks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScopeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScopeResponse $;

        public Builder() {
            $ = new ScopeResponse();
        }

        public Builder(ScopeResponse defaults) {
            $ = new ScopeResponse(Objects.requireNonNull(defaults));
        }

        public Builder managementGroups(@Nullable List<ResourceIdResponse> managementGroups) {
            $.managementGroups = managementGroups;
            return this;
        }

        public Builder managementGroups(ResourceIdResponse... managementGroups) {
            return managementGroups(List.of(managementGroups));
        }

        public Builder subnets(@Nullable List<ResourceIdResponse> subnets) {
            $.subnets = subnets;
            return this;
        }

        public Builder subnets(ResourceIdResponse... subnets) {
            return subnets(List.of(subnets));
        }

        public Builder subscriptions(@Nullable List<ResourceIdResponse> subscriptions) {
            $.subscriptions = subscriptions;
            return this;
        }

        public Builder subscriptions(ResourceIdResponse... subscriptions) {
            return subscriptions(List.of(subscriptions));
        }

        public Builder virtualNetworks(@Nullable List<ResourceIdResponse> virtualNetworks) {
            $.virtualNetworks = virtualNetworks;
            return this;
        }

        public Builder virtualNetworks(ResourceIdResponse... virtualNetworks) {
            return virtualNetworks(List.of(virtualNetworks));
        }

        public ScopeResponse build() {
            return $;
        }
    }

}
