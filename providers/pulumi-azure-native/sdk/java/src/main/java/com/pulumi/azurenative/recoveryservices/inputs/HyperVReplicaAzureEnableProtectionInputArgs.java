// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Azure specific enable protection input.
 * 
 */
public final class HyperVReplicaAzureEnableProtectionInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final HyperVReplicaAzureEnableProtectionInputArgs Empty = new HyperVReplicaAzureEnableProtectionInputArgs();

    /**
     * The list of VHD IDs of disks to be protected.
     * 
     */
    @Import(name="disksToInclude")
    private @Nullable Output<List<String>> disksToInclude;

    public Optional<Output<List<String>>> disksToInclude() {
        return Optional.ofNullable(this.disksToInclude);
    }

    /**
     * The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     * 
     */
    @Import(name="enableRdpOnTargetOption")
    private @Nullable Output<String> enableRdpOnTargetOption;

    public Optional<Output<String>> enableRdpOnTargetOption() {
        return Optional.ofNullable(this.enableRdpOnTargetOption);
    }

    /**
     * The Hyper-V host Vm Id.
     * 
     */
    @Import(name="hvHostVmId")
    private @Nullable Output<String> hvHostVmId;

    public Optional<Output<String>> hvHostVmId() {
        return Optional.ofNullable(this.hvHostVmId);
    }

    /**
     * The class type.
     * Expected value is &#39;HyperVReplicaAzure&#39;.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * The storage account to be used for logging during replication.
     * 
     */
    @Import(name="logStorageAccountId")
    private @Nullable Output<String> logStorageAccountId;

    public Optional<Output<String>> logStorageAccountId() {
        return Optional.ofNullable(this.logStorageAccountId);
    }

    /**
     * The OS type associated with vm.
     * 
     */
    @Import(name="osType")
    private @Nullable Output<String> osType;

    public Optional<Output<String>> osType() {
        return Optional.ofNullable(this.osType);
    }

    /**
     * The availability set ARM Id.
     * 
     */
    @Import(name="targetAvailabilitySetId")
    private @Nullable Output<String> targetAvailabilitySetId;

    public Optional<Output<String>> targetAvailabilitySetId() {
        return Optional.ofNullable(this.targetAvailabilitySetId);
    }

    /**
     * The target availability zone.
     * 
     */
    @Import(name="targetAvailabilityZone")
    private @Nullable Output<String> targetAvailabilityZone;

    public Optional<Output<String>> targetAvailabilityZone() {
        return Optional.ofNullable(this.targetAvailabilityZone);
    }

    /**
     * The selected target Azure network Id.
     * 
     */
    @Import(name="targetAzureNetworkId")
    private @Nullable Output<String> targetAzureNetworkId;

    public Optional<Output<String>> targetAzureNetworkId() {
        return Optional.ofNullable(this.targetAzureNetworkId);
    }

    /**
     * The selected target Azure subnet Id.
     * 
     */
    @Import(name="targetAzureSubnetId")
    private @Nullable Output<String> targetAzureSubnetId;

    public Optional<Output<String>> targetAzureSubnetId() {
        return Optional.ofNullable(this.targetAzureSubnetId);
    }

    /**
     * The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
     * 
     */
    @Import(name="targetAzureV1ResourceGroupId")
    private @Nullable Output<String> targetAzureV1ResourceGroupId;

    public Optional<Output<String>> targetAzureV1ResourceGroupId() {
        return Optional.ofNullable(this.targetAzureV1ResourceGroupId);
    }

    /**
     * The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
     * 
     */
    @Import(name="targetAzureV2ResourceGroupId")
    private @Nullable Output<String> targetAzureV2ResourceGroupId;

    public Optional<Output<String>> targetAzureV2ResourceGroupId() {
        return Optional.ofNullable(this.targetAzureV2ResourceGroupId);
    }

    /**
     * The target azure Vm Name.
     * 
     */
    @Import(name="targetAzureVmName")
    private @Nullable Output<String> targetAzureVmName;

    public Optional<Output<String>> targetAzureVmName() {
        return Optional.ofNullable(this.targetAzureVmName);
    }

    /**
     * The proximity placement group ARM Id.
     * 
     */
    @Import(name="targetProximityPlacementGroupId")
    private @Nullable Output<String> targetProximityPlacementGroupId;

    public Optional<Output<String>> targetProximityPlacementGroupId() {
        return Optional.ofNullable(this.targetProximityPlacementGroupId);
    }

    /**
     * The storage account name.
     * 
     */
    @Import(name="targetStorageAccountId")
    private @Nullable Output<String> targetStorageAccountId;

    public Optional<Output<String>> targetStorageAccountId() {
        return Optional.ofNullable(this.targetStorageAccountId);
    }

    /**
     * The target VM size.
     * 
     */
    @Import(name="targetVmSize")
    private @Nullable Output<String> targetVmSize;

    public Optional<Output<String>> targetVmSize() {
        return Optional.ofNullable(this.targetVmSize);
    }

    /**
     * A value indicating whether managed disks should be used during failover.
     * 
     */
    @Import(name="useManagedDisks")
    private @Nullable Output<String> useManagedDisks;

    public Optional<Output<String>> useManagedDisks() {
        return Optional.ofNullable(this.useManagedDisks);
    }

    /**
     * The OS disk VHD id associated with vm.
     * 
     */
    @Import(name="vhdId")
    private @Nullable Output<String> vhdId;

    public Optional<Output<String>> vhdId() {
        return Optional.ofNullable(this.vhdId);
    }

    /**
     * The Vm Name.
     * 
     */
    @Import(name="vmName")
    private @Nullable Output<String> vmName;

    public Optional<Output<String>> vmName() {
        return Optional.ofNullable(this.vmName);
    }

    private HyperVReplicaAzureEnableProtectionInputArgs() {}

    private HyperVReplicaAzureEnableProtectionInputArgs(HyperVReplicaAzureEnableProtectionInputArgs $) {
        this.disksToInclude = $.disksToInclude;
        this.enableRdpOnTargetOption = $.enableRdpOnTargetOption;
        this.hvHostVmId = $.hvHostVmId;
        this.instanceType = $.instanceType;
        this.logStorageAccountId = $.logStorageAccountId;
        this.osType = $.osType;
        this.targetAvailabilitySetId = $.targetAvailabilitySetId;
        this.targetAvailabilityZone = $.targetAvailabilityZone;
        this.targetAzureNetworkId = $.targetAzureNetworkId;
        this.targetAzureSubnetId = $.targetAzureSubnetId;
        this.targetAzureV1ResourceGroupId = $.targetAzureV1ResourceGroupId;
        this.targetAzureV2ResourceGroupId = $.targetAzureV2ResourceGroupId;
        this.targetAzureVmName = $.targetAzureVmName;
        this.targetProximityPlacementGroupId = $.targetProximityPlacementGroupId;
        this.targetStorageAccountId = $.targetStorageAccountId;
        this.targetVmSize = $.targetVmSize;
        this.useManagedDisks = $.useManagedDisks;
        this.vhdId = $.vhdId;
        this.vmName = $.vmName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HyperVReplicaAzureEnableProtectionInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HyperVReplicaAzureEnableProtectionInputArgs $;

        public Builder() {
            $ = new HyperVReplicaAzureEnableProtectionInputArgs();
        }

        public Builder(HyperVReplicaAzureEnableProtectionInputArgs defaults) {
            $ = new HyperVReplicaAzureEnableProtectionInputArgs(Objects.requireNonNull(defaults));
        }

        public Builder disksToInclude(@Nullable Output<List<String>> disksToInclude) {
            $.disksToInclude = disksToInclude;
            return this;
        }

        public Builder disksToInclude(List<String> disksToInclude) {
            return disksToInclude(Output.of(disksToInclude));
        }

        public Builder disksToInclude(String... disksToInclude) {
            return disksToInclude(List.of(disksToInclude));
        }

        public Builder enableRdpOnTargetOption(@Nullable Output<String> enableRdpOnTargetOption) {
            $.enableRdpOnTargetOption = enableRdpOnTargetOption;
            return this;
        }

        public Builder enableRdpOnTargetOption(String enableRdpOnTargetOption) {
            return enableRdpOnTargetOption(Output.of(enableRdpOnTargetOption));
        }

        public Builder hvHostVmId(@Nullable Output<String> hvHostVmId) {
            $.hvHostVmId = hvHostVmId;
            return this;
        }

        public Builder hvHostVmId(String hvHostVmId) {
            return hvHostVmId(Output.of(hvHostVmId));
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder logStorageAccountId(@Nullable Output<String> logStorageAccountId) {
            $.logStorageAccountId = logStorageAccountId;
            return this;
        }

        public Builder logStorageAccountId(String logStorageAccountId) {
            return logStorageAccountId(Output.of(logStorageAccountId));
        }

        public Builder osType(@Nullable Output<String> osType) {
            $.osType = osType;
            return this;
        }

        public Builder osType(String osType) {
            return osType(Output.of(osType));
        }

        public Builder targetAvailabilitySetId(@Nullable Output<String> targetAvailabilitySetId) {
            $.targetAvailabilitySetId = targetAvailabilitySetId;
            return this;
        }

        public Builder targetAvailabilitySetId(String targetAvailabilitySetId) {
            return targetAvailabilitySetId(Output.of(targetAvailabilitySetId));
        }

        public Builder targetAvailabilityZone(@Nullable Output<String> targetAvailabilityZone) {
            $.targetAvailabilityZone = targetAvailabilityZone;
            return this;
        }

        public Builder targetAvailabilityZone(String targetAvailabilityZone) {
            return targetAvailabilityZone(Output.of(targetAvailabilityZone));
        }

        public Builder targetAzureNetworkId(@Nullable Output<String> targetAzureNetworkId) {
            $.targetAzureNetworkId = targetAzureNetworkId;
            return this;
        }

        public Builder targetAzureNetworkId(String targetAzureNetworkId) {
            return targetAzureNetworkId(Output.of(targetAzureNetworkId));
        }

        public Builder targetAzureSubnetId(@Nullable Output<String> targetAzureSubnetId) {
            $.targetAzureSubnetId = targetAzureSubnetId;
            return this;
        }

        public Builder targetAzureSubnetId(String targetAzureSubnetId) {
            return targetAzureSubnetId(Output.of(targetAzureSubnetId));
        }

        public Builder targetAzureV1ResourceGroupId(@Nullable Output<String> targetAzureV1ResourceGroupId) {
            $.targetAzureV1ResourceGroupId = targetAzureV1ResourceGroupId;
            return this;
        }

        public Builder targetAzureV1ResourceGroupId(String targetAzureV1ResourceGroupId) {
            return targetAzureV1ResourceGroupId(Output.of(targetAzureV1ResourceGroupId));
        }

        public Builder targetAzureV2ResourceGroupId(@Nullable Output<String> targetAzureV2ResourceGroupId) {
            $.targetAzureV2ResourceGroupId = targetAzureV2ResourceGroupId;
            return this;
        }

        public Builder targetAzureV2ResourceGroupId(String targetAzureV2ResourceGroupId) {
            return targetAzureV2ResourceGroupId(Output.of(targetAzureV2ResourceGroupId));
        }

        public Builder targetAzureVmName(@Nullable Output<String> targetAzureVmName) {
            $.targetAzureVmName = targetAzureVmName;
            return this;
        }

        public Builder targetAzureVmName(String targetAzureVmName) {
            return targetAzureVmName(Output.of(targetAzureVmName));
        }

        public Builder targetProximityPlacementGroupId(@Nullable Output<String> targetProximityPlacementGroupId) {
            $.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
            return this;
        }

        public Builder targetProximityPlacementGroupId(String targetProximityPlacementGroupId) {
            return targetProximityPlacementGroupId(Output.of(targetProximityPlacementGroupId));
        }

        public Builder targetStorageAccountId(@Nullable Output<String> targetStorageAccountId) {
            $.targetStorageAccountId = targetStorageAccountId;
            return this;
        }

        public Builder targetStorageAccountId(String targetStorageAccountId) {
            return targetStorageAccountId(Output.of(targetStorageAccountId));
        }

        public Builder targetVmSize(@Nullable Output<String> targetVmSize) {
            $.targetVmSize = targetVmSize;
            return this;
        }

        public Builder targetVmSize(String targetVmSize) {
            return targetVmSize(Output.of(targetVmSize));
        }

        public Builder useManagedDisks(@Nullable Output<String> useManagedDisks) {
            $.useManagedDisks = useManagedDisks;
            return this;
        }

        public Builder useManagedDisks(String useManagedDisks) {
            return useManagedDisks(Output.of(useManagedDisks));
        }

        public Builder vhdId(@Nullable Output<String> vhdId) {
            $.vhdId = vhdId;
            return this;
        }

        public Builder vhdId(String vhdId) {
            return vhdId(Output.of(vhdId));
        }

        public Builder vmName(@Nullable Output<String> vmName) {
            $.vmName = vmName;
            return this;
        }

        public Builder vmName(String vmName) {
            return vmName(Output.of(vmName));
        }

        public HyperVReplicaAzureEnableProtectionInputArgs build() {
            $.instanceType = Codegen.stringProp("instanceType").output().arg($.instanceType).getNullable();
            return $;
        }
    }

}
