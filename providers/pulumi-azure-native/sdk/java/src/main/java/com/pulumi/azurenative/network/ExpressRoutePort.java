// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.network.ExpressRoutePortArgs;
import com.pulumi.azurenative.network.outputs.ExpressRouteLinkResponse;
import com.pulumi.azurenative.network.outputs.ManagedServiceIdentityResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ExpressRoutePort resource definition.
 * API Version: 2020-11-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:ExpressRoutePort portName /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:ExpressRoutePort")
public class ExpressRoutePort extends com.pulumi.resources.CustomResource {
    /**
     * Date of the physical port allocation to be used in Letter of Authorization.
     * 
     */
    @Export(name="allocationDate", type=String.class, parameters={})
    private Output<String> allocationDate;

    /**
     * @return Date of the physical port allocation to be used in Letter of Authorization.
     * 
     */
    public Output<String> allocationDate() {
        return this.allocationDate;
    }
    /**
     * Bandwidth of procured ports in Gbps.
     * 
     */
    @Export(name="bandwidthInGbps", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> bandwidthInGbps;

    /**
     * @return Bandwidth of procured ports in Gbps.
     * 
     */
    public Output<Optional<Integer>> bandwidthInGbps() {
        return Codegen.optional(this.bandwidthInGbps);
    }
    /**
     * Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.
     * 
     */
    @Export(name="circuits", type=List.class, parameters={SubResourceResponse.class})
    private Output<List<SubResourceResponse>> circuits;

    /**
     * @return Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.
     * 
     */
    public Output<List<SubResourceResponse>> circuits() {
        return this.circuits;
    }
    /**
     * Encapsulation method on physical ports.
     * 
     */
    @Export(name="encapsulation", type=String.class, parameters={})
    private Output</* @Nullable */ String> encapsulation;

    /**
     * @return Encapsulation method on physical ports.
     * 
     */
    public Output<Optional<String>> encapsulation() {
        return Codegen.optional(this.encapsulation);
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Ether type of the physical port.
     * 
     */
    @Export(name="etherType", type=String.class, parameters={})
    private Output<String> etherType;

    /**
     * @return Ether type of the physical port.
     * 
     */
    public Output<String> etherType() {
        return this.etherType;
    }
    /**
     * The identity of ExpressRoutePort, if configured.
     * 
     */
    @Export(name="identity", type=ManagedServiceIdentityResponse.class, parameters={})
    private Output</* @Nullable */ ManagedServiceIdentityResponse> identity;

    /**
     * @return The identity of ExpressRoutePort, if configured.
     * 
     */
    public Output<Optional<ManagedServiceIdentityResponse>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The set of physical links of the ExpressRoutePort resource.
     * 
     */
    @Export(name="links", type=List.class, parameters={ExpressRouteLinkResponse.class})
    private Output</* @Nullable */ List<ExpressRouteLinkResponse>> links;

    /**
     * @return The set of physical links of the ExpressRoutePort resource.
     * 
     */
    public Output<Optional<List<ExpressRouteLinkResponse>>> links() {
        return Codegen.optional(this.links);
    }
    /**
     * Resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Maximum transmission unit of the physical port pair(s).
     * 
     */
    @Export(name="mtu", type=String.class, parameters={})
    private Output<String> mtu;

    /**
     * @return Maximum transmission unit of the physical port pair(s).
     * 
     */
    public Output<String> mtu() {
        return this.mtu;
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the peering location that the ExpressRoutePort is mapped to physically.
     * 
     */
    @Export(name="peeringLocation", type=String.class, parameters={})
    private Output</* @Nullable */ String> peeringLocation;

    /**
     * @return The name of the peering location that the ExpressRoutePort is mapped to physically.
     * 
     */
    public Output<Optional<String>> peeringLocation() {
        return Codegen.optional(this.peeringLocation);
    }
    /**
     * Aggregate Gbps of associated circuit bandwidths.
     * 
     */
    @Export(name="provisionedBandwidthInGbps", type=Double.class, parameters={})
    private Output<Double> provisionedBandwidthInGbps;

    /**
     * @return Aggregate Gbps of associated circuit bandwidths.
     * 
     */
    public Output<Double> provisionedBandwidthInGbps() {
        return this.provisionedBandwidthInGbps;
    }
    /**
     * The provisioning state of the express route port resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the express route port resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * The resource GUID property of the express route port resource.
     * 
     */
    @Export(name="resourceGuid", type=String.class, parameters={})
    private Output<String> resourceGuid;

    /**
     * @return The resource GUID property of the express route port resource.
     * 
     */
    public Output<String> resourceGuid() {
        return this.resourceGuid;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExpressRoutePort(String name) {
        this(name, ExpressRoutePortArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExpressRoutePort(String name, ExpressRoutePortArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExpressRoutePort(String name, ExpressRoutePortArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:ExpressRoutePort", name, args == null ? ExpressRoutePortArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExpressRoutePort(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:ExpressRoutePort", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:network/v20180801:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181001:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181101:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181201:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190201:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190401:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190601:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190701:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190801:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190901:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191101:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191201:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200301:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200401:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200501:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200601:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200701:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200801:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20201101:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210201:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210301:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210501:ExpressRoutePort").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210801:ExpressRoutePort").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExpressRoutePort get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExpressRoutePort(name, id, options);
    }
}
