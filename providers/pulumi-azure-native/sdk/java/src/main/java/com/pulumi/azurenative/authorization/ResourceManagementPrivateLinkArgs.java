// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceManagementPrivateLinkArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceManagementPrivateLinkArgs Empty = new ResourceManagementPrivateLinkArgs();

    /**
     * the region to create private link association.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return the region to create private link association.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the resource management private link.
     * 
     */
    @Import(name="rmplName")
    private @Nullable Output<String> rmplName;

    /**
     * @return The name of the resource management private link.
     * 
     */
    public Optional<Output<String>> rmplName() {
        return Optional.ofNullable(this.rmplName);
    }

    private ResourceManagementPrivateLinkArgs() {}

    private ResourceManagementPrivateLinkArgs(ResourceManagementPrivateLinkArgs $) {
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.rmplName = $.rmplName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceManagementPrivateLinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceManagementPrivateLinkArgs $;

        public Builder() {
            $ = new ResourceManagementPrivateLinkArgs();
        }

        public Builder(ResourceManagementPrivateLinkArgs defaults) {
            $ = new ResourceManagementPrivateLinkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location the region to create private link association.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location the region to create private link association.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param rmplName The name of the resource management private link.
         * 
         * @return builder
         * 
         */
        public Builder rmplName(@Nullable Output<String> rmplName) {
            $.rmplName = rmplName;
            return this;
        }

        /**
         * @param rmplName The name of the resource management private link.
         * 
         * @return builder
         * 
         */
        public Builder rmplName(String rmplName) {
            return rmplName(Output.of(rmplName));
        }

        public ResourceManagementPrivateLinkArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
