// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagesync.inputs;

import com.pulumi.azurenative.storagesync.inputs.ServerEndpointFilesNotSyncingErrorResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Sync Session status object.
 * 
 */
public final class ServerEndpointSyncSessionStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServerEndpointSyncSessionStatusResponse Empty = new ServerEndpointSyncSessionStatusResponse();

    /**
     * Array of per-item errors coming from the last sync session.
     * 
     */
    @Import(name="filesNotSyncingErrors", required=true)
    private List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors;

    /**
     * @return Array of per-item errors coming from the last sync session.
     * 
     */
    public List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors() {
        return this.filesNotSyncingErrors;
    }

    /**
     * Sync mode
     * 
     */
    @Import(name="lastSyncMode", required=true)
    private String lastSyncMode;

    /**
     * @return Sync mode
     * 
     */
    public String lastSyncMode() {
        return this.lastSyncMode;
    }

    /**
     * Last sync per item error count.
     * 
     */
    @Import(name="lastSyncPerItemErrorCount", required=true)
    private Double lastSyncPerItemErrorCount;

    /**
     * @return Last sync per item error count.
     * 
     */
    public Double lastSyncPerItemErrorCount() {
        return this.lastSyncPerItemErrorCount;
    }

    /**
     * Last sync result (HResult)
     * 
     */
    @Import(name="lastSyncResult", required=true)
    private Integer lastSyncResult;

    /**
     * @return Last sync result (HResult)
     * 
     */
    public Integer lastSyncResult() {
        return this.lastSyncResult;
    }

    /**
     * Last sync success timestamp
     * 
     */
    @Import(name="lastSyncSuccessTimestamp", required=true)
    private String lastSyncSuccessTimestamp;

    /**
     * @return Last sync success timestamp
     * 
     */
    public String lastSyncSuccessTimestamp() {
        return this.lastSyncSuccessTimestamp;
    }

    /**
     * Last sync timestamp
     * 
     */
    @Import(name="lastSyncTimestamp", required=true)
    private String lastSyncTimestamp;

    /**
     * @return Last sync timestamp
     * 
     */
    public String lastSyncTimestamp() {
        return this.lastSyncTimestamp;
    }

    /**
     * Count of persistent files not syncing.
     * 
     */
    @Import(name="persistentFilesNotSyncingCount", required=true)
    private Double persistentFilesNotSyncingCount;

    /**
     * @return Count of persistent files not syncing.
     * 
     */
    public Double persistentFilesNotSyncingCount() {
        return this.persistentFilesNotSyncingCount;
    }

    /**
     * Count of transient files not syncing.
     * 
     */
    @Import(name="transientFilesNotSyncingCount", required=true)
    private Double transientFilesNotSyncingCount;

    /**
     * @return Count of transient files not syncing.
     * 
     */
    public Double transientFilesNotSyncingCount() {
        return this.transientFilesNotSyncingCount;
    }

    private ServerEndpointSyncSessionStatusResponse() {}

    private ServerEndpointSyncSessionStatusResponse(ServerEndpointSyncSessionStatusResponse $) {
        this.filesNotSyncingErrors = $.filesNotSyncingErrors;
        this.lastSyncMode = $.lastSyncMode;
        this.lastSyncPerItemErrorCount = $.lastSyncPerItemErrorCount;
        this.lastSyncResult = $.lastSyncResult;
        this.lastSyncSuccessTimestamp = $.lastSyncSuccessTimestamp;
        this.lastSyncTimestamp = $.lastSyncTimestamp;
        this.persistentFilesNotSyncingCount = $.persistentFilesNotSyncingCount;
        this.transientFilesNotSyncingCount = $.transientFilesNotSyncingCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerEndpointSyncSessionStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerEndpointSyncSessionStatusResponse $;

        public Builder() {
            $ = new ServerEndpointSyncSessionStatusResponse();
        }

        public Builder(ServerEndpointSyncSessionStatusResponse defaults) {
            $ = new ServerEndpointSyncSessionStatusResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param filesNotSyncingErrors Array of per-item errors coming from the last sync session.
         * 
         * @return builder
         * 
         */
        public Builder filesNotSyncingErrors(List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors) {
            $.filesNotSyncingErrors = filesNotSyncingErrors;
            return this;
        }

        /**
         * @param filesNotSyncingErrors Array of per-item errors coming from the last sync session.
         * 
         * @return builder
         * 
         */
        public Builder filesNotSyncingErrors(ServerEndpointFilesNotSyncingErrorResponse... filesNotSyncingErrors) {
            return filesNotSyncingErrors(List.of(filesNotSyncingErrors));
        }

        /**
         * @param lastSyncMode Sync mode
         * 
         * @return builder
         * 
         */
        public Builder lastSyncMode(String lastSyncMode) {
            $.lastSyncMode = lastSyncMode;
            return this;
        }

        /**
         * @param lastSyncPerItemErrorCount Last sync per item error count.
         * 
         * @return builder
         * 
         */
        public Builder lastSyncPerItemErrorCount(Double lastSyncPerItemErrorCount) {
            $.lastSyncPerItemErrorCount = lastSyncPerItemErrorCount;
            return this;
        }

        /**
         * @param lastSyncResult Last sync result (HResult)
         * 
         * @return builder
         * 
         */
        public Builder lastSyncResult(Integer lastSyncResult) {
            $.lastSyncResult = lastSyncResult;
            return this;
        }

        /**
         * @param lastSyncSuccessTimestamp Last sync success timestamp
         * 
         * @return builder
         * 
         */
        public Builder lastSyncSuccessTimestamp(String lastSyncSuccessTimestamp) {
            $.lastSyncSuccessTimestamp = lastSyncSuccessTimestamp;
            return this;
        }

        /**
         * @param lastSyncTimestamp Last sync timestamp
         * 
         * @return builder
         * 
         */
        public Builder lastSyncTimestamp(String lastSyncTimestamp) {
            $.lastSyncTimestamp = lastSyncTimestamp;
            return this;
        }

        /**
         * @param persistentFilesNotSyncingCount Count of persistent files not syncing.
         * 
         * @return builder
         * 
         */
        public Builder persistentFilesNotSyncingCount(Double persistentFilesNotSyncingCount) {
            $.persistentFilesNotSyncingCount = persistentFilesNotSyncingCount;
            return this;
        }

        /**
         * @param transientFilesNotSyncingCount Count of transient files not syncing.
         * 
         * @return builder
         * 
         */
        public Builder transientFilesNotSyncingCount(Double transientFilesNotSyncingCount) {
            $.transientFilesNotSyncingCount = transientFilesNotSyncingCount;
            return this;
        }

        public ServerEndpointSyncSessionStatusResponse build() {
            $.filesNotSyncingErrors = Objects.requireNonNull($.filesNotSyncingErrors, "expected parameter 'filesNotSyncingErrors' to be non-null");
            $.lastSyncMode = Objects.requireNonNull($.lastSyncMode, "expected parameter 'lastSyncMode' to be non-null");
            $.lastSyncPerItemErrorCount = Objects.requireNonNull($.lastSyncPerItemErrorCount, "expected parameter 'lastSyncPerItemErrorCount' to be non-null");
            $.lastSyncResult = Objects.requireNonNull($.lastSyncResult, "expected parameter 'lastSyncResult' to be non-null");
            $.lastSyncSuccessTimestamp = Objects.requireNonNull($.lastSyncSuccessTimestamp, "expected parameter 'lastSyncSuccessTimestamp' to be non-null");
            $.lastSyncTimestamp = Objects.requireNonNull($.lastSyncTimestamp, "expected parameter 'lastSyncTimestamp' to be non-null");
            $.persistentFilesNotSyncingCount = Objects.requireNonNull($.persistentFilesNotSyncingCount, "expected parameter 'persistentFilesNotSyncingCount' to be non-null");
            $.transientFilesNotSyncingCount = Objects.requireNonNull($.transientFilesNotSyncingCount, "expected parameter 'transientFilesNotSyncingCount' to be non-null");
            return $;
        }
    }

}
