// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.inputs.KeyVaultSigningKeyParametersResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Url signing key
 * 
 */
public final class UrlSigningKeyResponse extends com.pulumi.resources.InvokeArgs {

    public static final UrlSigningKeyResponse Empty = new UrlSigningKeyResponse();

    /**
     * Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
     * 
     */
    @Import(name="keyId", required=true)
    private String keyId;

    /**
     * @return Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
     * 
     */
    public String keyId() {
        return this.keyId;
    }

    /**
     * Defines the parameters for using customer key vault for Url Signing Key.
     * 
     */
    @Import(name="keySourceParameters", required=true)
    private KeyVaultSigningKeyParametersResponse keySourceParameters;

    /**
     * @return Defines the parameters for using customer key vault for Url Signing Key.
     * 
     */
    public KeyVaultSigningKeyParametersResponse keySourceParameters() {
        return this.keySourceParameters;
    }

    private UrlSigningKeyResponse() {}

    private UrlSigningKeyResponse(UrlSigningKeyResponse $) {
        this.keyId = $.keyId;
        this.keySourceParameters = $.keySourceParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UrlSigningKeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UrlSigningKeyResponse $;

        public Builder() {
            $ = new UrlSigningKeyResponse();
        }

        public Builder(UrlSigningKeyResponse defaults) {
            $ = new UrlSigningKeyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyId Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
         * 
         * @return builder
         * 
         */
        public Builder keyId(String keyId) {
            $.keyId = keyId;
            return this;
        }

        /**
         * @param keySourceParameters Defines the parameters for using customer key vault for Url Signing Key.
         * 
         * @return builder
         * 
         */
        public Builder keySourceParameters(KeyVaultSigningKeyParametersResponse keySourceParameters) {
            $.keySourceParameters = keySourceParameters;
            return this;
        }

        public UrlSigningKeyResponse build() {
            $.keyId = Objects.requireNonNull($.keyId, "expected parameter 'keyId' to be non-null");
            $.keySourceParameters = Objects.requireNonNull($.keySourceParameters, "expected parameter 'keySourceParameters' to be non-null");
            return $;
        }
    }

}
