// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.inputs.ProviderRegistrationPropertiesResponseProviderHubMetadata;
import com.pulumi.azurenative.providerhub.inputs.ProviderRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications;
import com.pulumi.azurenative.providerhub.inputs.ResourceProviderAuthorizationResponse;
import com.pulumi.azurenative.providerhub.inputs.ResourceProviderCapabilitiesResponse;
import com.pulumi.azurenative.providerhub.inputs.ResourceProviderManifestPropertiesResponseFeaturesRule;
import com.pulumi.azurenative.providerhub.inputs.ResourceProviderManifestPropertiesResponseManagement;
import com.pulumi.azurenative.providerhub.inputs.ResourceProviderManifestPropertiesResponseProviderAuthentication;
import com.pulumi.azurenative.providerhub.inputs.ResourceProviderManifestPropertiesResponseRequestHeaderOptions;
import com.pulumi.azurenative.providerhub.inputs.ResourceProviderManifestPropertiesResponseTemplateDeploymentOptions;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderRegistrationResponseProperties extends com.pulumi.resources.InvokeArgs {

    public static final ProviderRegistrationResponseProperties Empty = new ProviderRegistrationResponseProperties();

    @Import(name="capabilities")
    private @Nullable List<ResourceProviderCapabilitiesResponse> capabilities;

    public Optional<List<ResourceProviderCapabilitiesResponse>> capabilities() {
        return Optional.ofNullable(this.capabilities);
    }

    @Import(name="featuresRule")
    private @Nullable ResourceProviderManifestPropertiesResponseFeaturesRule featuresRule;

    public Optional<ResourceProviderManifestPropertiesResponseFeaturesRule> featuresRule() {
        return Optional.ofNullable(this.featuresRule);
    }

    @Import(name="management")
    private @Nullable ResourceProviderManifestPropertiesResponseManagement management;

    public Optional<ResourceProviderManifestPropertiesResponseManagement> management() {
        return Optional.ofNullable(this.management);
    }

    @Import(name="metadata")
    private @Nullable Object metadata;

    public Optional<Object> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    @Import(name="namespace")
    private @Nullable String namespace;

    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="providerAuthentication")
    private @Nullable ResourceProviderManifestPropertiesResponseProviderAuthentication providerAuthentication;

    public Optional<ResourceProviderManifestPropertiesResponseProviderAuthentication> providerAuthentication() {
        return Optional.ofNullable(this.providerAuthentication);
    }

    @Import(name="providerAuthorizations")
    private @Nullable List<ResourceProviderAuthorizationResponse> providerAuthorizations;

    public Optional<List<ResourceProviderAuthorizationResponse>> providerAuthorizations() {
        return Optional.ofNullable(this.providerAuthorizations);
    }

    @Import(name="providerHubMetadata")
    private @Nullable ProviderRegistrationPropertiesResponseProviderHubMetadata providerHubMetadata;

    public Optional<ProviderRegistrationPropertiesResponseProviderHubMetadata> providerHubMetadata() {
        return Optional.ofNullable(this.providerHubMetadata);
    }

    @Import(name="providerType")
    private @Nullable String providerType;

    public Optional<String> providerType() {
        return Optional.ofNullable(this.providerType);
    }

    @Import(name="providerVersion")
    private @Nullable String providerVersion;

    public Optional<String> providerVersion() {
        return Optional.ofNullable(this.providerVersion);
    }

    @Import(name="provisioningState")
    private @Nullable String provisioningState;

    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    @Import(name="requestHeaderOptions")
    private @Nullable ResourceProviderManifestPropertiesResponseRequestHeaderOptions requestHeaderOptions;

    public Optional<ResourceProviderManifestPropertiesResponseRequestHeaderOptions> requestHeaderOptions() {
        return Optional.ofNullable(this.requestHeaderOptions);
    }

    @Import(name="requiredFeatures")
    private @Nullable List<String> requiredFeatures;

    public Optional<List<String>> requiredFeatures() {
        return Optional.ofNullable(this.requiredFeatures);
    }

    @Import(name="subscriptionLifecycleNotificationSpecifications")
    private @Nullable ProviderRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications;

    public Optional<ProviderRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications> subscriptionLifecycleNotificationSpecifications() {
        return Optional.ofNullable(this.subscriptionLifecycleNotificationSpecifications);
    }

    @Import(name="templateDeploymentOptions")
    private @Nullable ResourceProviderManifestPropertiesResponseTemplateDeploymentOptions templateDeploymentOptions;

    public Optional<ResourceProviderManifestPropertiesResponseTemplateDeploymentOptions> templateDeploymentOptions() {
        return Optional.ofNullable(this.templateDeploymentOptions);
    }

    private ProviderRegistrationResponseProperties() {}

    private ProviderRegistrationResponseProperties(ProviderRegistrationResponseProperties $) {
        this.capabilities = $.capabilities;
        this.featuresRule = $.featuresRule;
        this.management = $.management;
        this.metadata = $.metadata;
        this.namespace = $.namespace;
        this.providerAuthentication = $.providerAuthentication;
        this.providerAuthorizations = $.providerAuthorizations;
        this.providerHubMetadata = $.providerHubMetadata;
        this.providerType = $.providerType;
        this.providerVersion = $.providerVersion;
        this.provisioningState = $.provisioningState;
        this.requestHeaderOptions = $.requestHeaderOptions;
        this.requiredFeatures = $.requiredFeatures;
        this.subscriptionLifecycleNotificationSpecifications = $.subscriptionLifecycleNotificationSpecifications;
        this.templateDeploymentOptions = $.templateDeploymentOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderRegistrationResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderRegistrationResponseProperties $;

        public Builder() {
            $ = new ProviderRegistrationResponseProperties();
        }

        public Builder(ProviderRegistrationResponseProperties defaults) {
            $ = new ProviderRegistrationResponseProperties(Objects.requireNonNull(defaults));
        }

        public Builder capabilities(@Nullable List<ResourceProviderCapabilitiesResponse> capabilities) {
            $.capabilities = capabilities;
            return this;
        }

        public Builder capabilities(ResourceProviderCapabilitiesResponse... capabilities) {
            return capabilities(List.of(capabilities));
        }

        public Builder featuresRule(@Nullable ResourceProviderManifestPropertiesResponseFeaturesRule featuresRule) {
            $.featuresRule = featuresRule;
            return this;
        }

        public Builder management(@Nullable ResourceProviderManifestPropertiesResponseManagement management) {
            $.management = management;
            return this;
        }

        public Builder metadata(@Nullable Object metadata) {
            $.metadata = metadata;
            return this;
        }

        public Builder namespace(@Nullable String namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder providerAuthentication(@Nullable ResourceProviderManifestPropertiesResponseProviderAuthentication providerAuthentication) {
            $.providerAuthentication = providerAuthentication;
            return this;
        }

        public Builder providerAuthorizations(@Nullable List<ResourceProviderAuthorizationResponse> providerAuthorizations) {
            $.providerAuthorizations = providerAuthorizations;
            return this;
        }

        public Builder providerAuthorizations(ResourceProviderAuthorizationResponse... providerAuthorizations) {
            return providerAuthorizations(List.of(providerAuthorizations));
        }

        public Builder providerHubMetadata(@Nullable ProviderRegistrationPropertiesResponseProviderHubMetadata providerHubMetadata) {
            $.providerHubMetadata = providerHubMetadata;
            return this;
        }

        public Builder providerType(@Nullable String providerType) {
            $.providerType = providerType;
            return this;
        }

        public Builder providerVersion(@Nullable String providerVersion) {
            $.providerVersion = providerVersion;
            return this;
        }

        public Builder provisioningState(@Nullable String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder requestHeaderOptions(@Nullable ResourceProviderManifestPropertiesResponseRequestHeaderOptions requestHeaderOptions) {
            $.requestHeaderOptions = requestHeaderOptions;
            return this;
        }

        public Builder requiredFeatures(@Nullable List<String> requiredFeatures) {
            $.requiredFeatures = requiredFeatures;
            return this;
        }

        public Builder requiredFeatures(String... requiredFeatures) {
            return requiredFeatures(List.of(requiredFeatures));
        }

        public Builder subscriptionLifecycleNotificationSpecifications(@Nullable ProviderRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications) {
            $.subscriptionLifecycleNotificationSpecifications = subscriptionLifecycleNotificationSpecifications;
            return this;
        }

        public Builder templateDeploymentOptions(@Nullable ResourceProviderManifestPropertiesResponseTemplateDeploymentOptions templateDeploymentOptions) {
            $.templateDeploymentOptions = templateDeploymentOptions;
            return this;
        }

        public ProviderRegistrationResponseProperties build() {
            return $;
        }
    }

}
