// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices;

import com.pulumi.azurenative.labservices.enums.ConfigurationState;
import com.pulumi.azurenative.labservices.inputs.ResourceSettingsArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentSettingArgs Empty = new EnvironmentSettingArgs();

    /**
     * Describes the user&#39;s progress in configuring their environment setting
     * 
     */
    @Import(name="configurationState")
    private @Nullable Output<Either<String,ConfigurationState>> configurationState;

    /**
     * @return Describes the user&#39;s progress in configuring their environment setting
     * 
     */
    public Optional<Output<Either<String,ConfigurationState>>> configurationState() {
        return Optional.ofNullable(this.configurationState);
    }

    /**
     * Describes the environment and its resource settings
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Describes the environment and its resource settings
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the environment Setting.
     * 
     */
    @Import(name="environmentSettingName")
    private @Nullable Output<String> environmentSettingName;

    /**
     * @return The name of the environment Setting.
     * 
     */
    public Optional<Output<String>> environmentSettingName() {
        return Optional.ofNullable(this.environmentSettingName);
    }

    /**
     * The name of the lab Account.
     * 
     */
    @Import(name="labAccountName", required=true)
    private Output<String> labAccountName;

    /**
     * @return The name of the lab Account.
     * 
     */
    public Output<String> labAccountName() {
        return this.labAccountName;
    }

    /**
     * The name of the lab.
     * 
     */
    @Import(name="labName", required=true)
    private Output<String> labName;

    /**
     * @return The name of the lab.
     * 
     */
    public Output<String> labName() {
        return this.labName;
    }

    /**
     * The location of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The provisioning status of the resource.
     * 
     */
    @Import(name="provisioningState")
    private @Nullable Output<String> provisioningState;

    /**
     * @return The provisioning status of the resource.
     * 
     */
    public Optional<Output<String>> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The resource specific settings
     * 
     */
    @Import(name="resourceSettings", required=true)
    private Output<ResourceSettingsArgs> resourceSettings;

    /**
     * @return The resource specific settings
     * 
     */
    public Output<ResourceSettingsArgs> resourceSettings() {
        return this.resourceSettings;
    }

    /**
     * The tags of the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tags of the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Brief title describing the environment and its resource settings
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    /**
     * @return Brief title describing the environment and its resource settings
     * 
     */
    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    /**
     * The unique immutable identifier of a resource (Guid).
     * 
     */
    @Import(name="uniqueIdentifier")
    private @Nullable Output<String> uniqueIdentifier;

    /**
     * @return The unique immutable identifier of a resource (Guid).
     * 
     */
    public Optional<Output<String>> uniqueIdentifier() {
        return Optional.ofNullable(this.uniqueIdentifier);
    }

    private EnvironmentSettingArgs() {}

    private EnvironmentSettingArgs(EnvironmentSettingArgs $) {
        this.configurationState = $.configurationState;
        this.description = $.description;
        this.environmentSettingName = $.environmentSettingName;
        this.labAccountName = $.labAccountName;
        this.labName = $.labName;
        this.location = $.location;
        this.provisioningState = $.provisioningState;
        this.resourceGroupName = $.resourceGroupName;
        this.resourceSettings = $.resourceSettings;
        this.tags = $.tags;
        this.title = $.title;
        this.uniqueIdentifier = $.uniqueIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentSettingArgs $;

        public Builder() {
            $ = new EnvironmentSettingArgs();
        }

        public Builder(EnvironmentSettingArgs defaults) {
            $ = new EnvironmentSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationState Describes the user&#39;s progress in configuring their environment setting
         * 
         * @return builder
         * 
         */
        public Builder configurationState(@Nullable Output<Either<String,ConfigurationState>> configurationState) {
            $.configurationState = configurationState;
            return this;
        }

        /**
         * @param configurationState Describes the user&#39;s progress in configuring their environment setting
         * 
         * @return builder
         * 
         */
        public Builder configurationState(Either<String,ConfigurationState> configurationState) {
            return configurationState(Output.of(configurationState));
        }

        /**
         * @param configurationState Describes the user&#39;s progress in configuring their environment setting
         * 
         * @return builder
         * 
         */
        public Builder configurationState(String configurationState) {
            return configurationState(Either.ofLeft(configurationState));
        }

        /**
         * @param configurationState Describes the user&#39;s progress in configuring their environment setting
         * 
         * @return builder
         * 
         */
        public Builder configurationState(ConfigurationState configurationState) {
            return configurationState(Either.ofRight(configurationState));
        }

        /**
         * @param description Describes the environment and its resource settings
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Describes the environment and its resource settings
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param environmentSettingName The name of the environment Setting.
         * 
         * @return builder
         * 
         */
        public Builder environmentSettingName(@Nullable Output<String> environmentSettingName) {
            $.environmentSettingName = environmentSettingName;
            return this;
        }

        /**
         * @param environmentSettingName The name of the environment Setting.
         * 
         * @return builder
         * 
         */
        public Builder environmentSettingName(String environmentSettingName) {
            return environmentSettingName(Output.of(environmentSettingName));
        }

        /**
         * @param labAccountName The name of the lab Account.
         * 
         * @return builder
         * 
         */
        public Builder labAccountName(Output<String> labAccountName) {
            $.labAccountName = labAccountName;
            return this;
        }

        /**
         * @param labAccountName The name of the lab Account.
         * 
         * @return builder
         * 
         */
        public Builder labAccountName(String labAccountName) {
            return labAccountName(Output.of(labAccountName));
        }

        /**
         * @param labName The name of the lab.
         * 
         * @return builder
         * 
         */
        public Builder labName(Output<String> labName) {
            $.labName = labName;
            return this;
        }

        /**
         * @param labName The name of the lab.
         * 
         * @return builder
         * 
         */
        public Builder labName(String labName) {
            return labName(Output.of(labName));
        }

        /**
         * @param location The location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param provisioningState The provisioning status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(@Nullable Output<String> provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param provisioningState The provisioning status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            return provisioningState(Output.of(provisioningState));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param resourceSettings The resource specific settings
         * 
         * @return builder
         * 
         */
        public Builder resourceSettings(Output<ResourceSettingsArgs> resourceSettings) {
            $.resourceSettings = resourceSettings;
            return this;
        }

        /**
         * @param resourceSettings The resource specific settings
         * 
         * @return builder
         * 
         */
        public Builder resourceSettings(ResourceSettingsArgs resourceSettings) {
            return resourceSettings(Output.of(resourceSettings));
        }

        /**
         * @param tags The tags of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param title Brief title describing the environment and its resource settings
         * 
         * @return builder
         * 
         */
        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title Brief title describing the environment and its resource settings
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        /**
         * @param uniqueIdentifier The unique immutable identifier of a resource (Guid).
         * 
         * @return builder
         * 
         */
        public Builder uniqueIdentifier(@Nullable Output<String> uniqueIdentifier) {
            $.uniqueIdentifier = uniqueIdentifier;
            return this;
        }

        /**
         * @param uniqueIdentifier The unique immutable identifier of a resource (Guid).
         * 
         * @return builder
         * 
         */
        public Builder uniqueIdentifier(String uniqueIdentifier) {
            return uniqueIdentifier(Output.of(uniqueIdentifier));
        }

        public EnvironmentSettingArgs build() {
            $.labAccountName = Objects.requireNonNull($.labAccountName, "expected parameter 'labAccountName' to be non-null");
            $.labName = Objects.requireNonNull($.labName, "expected parameter 'labName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceSettings = Objects.requireNonNull($.resourceSettings, "expected parameter 'resourceSettings' to be non-null");
            return $;
        }
    }

}
