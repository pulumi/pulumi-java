// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices;

import com.pulumi.azurenative.labservices.enums.ConfigurationState;
import com.pulumi.azurenative.labservices.inputs.ResourceSettingsArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EnvironmentSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentSettingArgs Empty = new EnvironmentSettingArgs();

    /**
     * Describes the user&#39;s progress in configuring their environment setting
     * 
     */
    @Import(name="configurationState")
      private final @Nullable Output<Either<String,ConfigurationState>> configurationState;

    public Output<Either<String,ConfigurationState>> configurationState() {
        return this.configurationState == null ? Codegen.empty() : this.configurationState;
    }

    /**
     * Describes the environment and its resource settings
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The name of the environment Setting.
     * 
     */
    @Import(name="environmentSettingName")
      private final @Nullable Output<String> environmentSettingName;

    public Output<String> environmentSettingName() {
        return this.environmentSettingName == null ? Codegen.empty() : this.environmentSettingName;
    }

    /**
     * The name of the lab Account.
     * 
     */
    @Import(name="labAccountName", required=true)
      private final Output<String> labAccountName;

    public Output<String> labAccountName() {
        return this.labAccountName;
    }

    /**
     * The name of the lab.
     * 
     */
    @Import(name="labName", required=true)
      private final Output<String> labName;

    public Output<String> labName() {
        return this.labName;
    }

    /**
     * The location of the resource.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The provisioning status of the resource.
     * 
     */
    @Import(name="provisioningState")
      private final @Nullable Output<String> provisioningState;

    public Output<String> provisioningState() {
        return this.provisioningState == null ? Codegen.empty() : this.provisioningState;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The resource specific settings
     * 
     */
    @Import(name="resourceSettings", required=true)
      private final Output<ResourceSettingsArgs> resourceSettings;

    public Output<ResourceSettingsArgs> resourceSettings() {
        return this.resourceSettings;
    }

    /**
     * The tags of the resource.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * Brief title describing the environment and its resource settings
     * 
     */
    @Import(name="title")
      private final @Nullable Output<String> title;

    public Output<String> title() {
        return this.title == null ? Codegen.empty() : this.title;
    }

    /**
     * The unique immutable identifier of a resource (Guid).
     * 
     */
    @Import(name="uniqueIdentifier")
      private final @Nullable Output<String> uniqueIdentifier;

    public Output<String> uniqueIdentifier() {
        return this.uniqueIdentifier == null ? Codegen.empty() : this.uniqueIdentifier;
    }

    public EnvironmentSettingArgs(
        @Nullable Output<Either<String,ConfigurationState>> configurationState,
        @Nullable Output<String> description,
        @Nullable Output<String> environmentSettingName,
        Output<String> labAccountName,
        Output<String> labName,
        @Nullable Output<String> location,
        @Nullable Output<String> provisioningState,
        Output<String> resourceGroupName,
        Output<ResourceSettingsArgs> resourceSettings,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> title,
        @Nullable Output<String> uniqueIdentifier) {
        this.configurationState = configurationState;
        this.description = description;
        this.environmentSettingName = environmentSettingName;
        this.labAccountName = Objects.requireNonNull(labAccountName, "expected parameter 'labAccountName' to be non-null");
        this.labName = Objects.requireNonNull(labName, "expected parameter 'labName' to be non-null");
        this.location = location;
        this.provisioningState = provisioningState;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceSettings = Objects.requireNonNull(resourceSettings, "expected parameter 'resourceSettings' to be non-null");
        this.tags = tags;
        this.title = title;
        this.uniqueIdentifier = uniqueIdentifier;
    }

    private EnvironmentSettingArgs() {
        this.configurationState = Codegen.empty();
        this.description = Codegen.empty();
        this.environmentSettingName = Codegen.empty();
        this.labAccountName = Codegen.empty();
        this.labName = Codegen.empty();
        this.location = Codegen.empty();
        this.provisioningState = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.resourceSettings = Codegen.empty();
        this.tags = Codegen.empty();
        this.title = Codegen.empty();
        this.uniqueIdentifier = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,ConfigurationState>> configurationState;
        private @Nullable Output<String> description;
        private @Nullable Output<String> environmentSettingName;
        private Output<String> labAccountName;
        private Output<String> labName;
        private @Nullable Output<String> location;
        private @Nullable Output<String> provisioningState;
        private Output<String> resourceGroupName;
        private Output<ResourceSettingsArgs> resourceSettings;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> title;
        private @Nullable Output<String> uniqueIdentifier;

        public Builder() {
    	      // Empty
        }

        public Builder(EnvironmentSettingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationState = defaults.configurationState;
    	      this.description = defaults.description;
    	      this.environmentSettingName = defaults.environmentSettingName;
    	      this.labAccountName = defaults.labAccountName;
    	      this.labName = defaults.labName;
    	      this.location = defaults.location;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceSettings = defaults.resourceSettings;
    	      this.tags = defaults.tags;
    	      this.title = defaults.title;
    	      this.uniqueIdentifier = defaults.uniqueIdentifier;
        }

        public Builder configurationState(@Nullable Output<Either<String,ConfigurationState>> configurationState) {
            this.configurationState = configurationState;
            return this;
        }
        public Builder configurationState(@Nullable Either<String,ConfigurationState> configurationState) {
            this.configurationState = Codegen.ofNullable(configurationState);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder environmentSettingName(@Nullable Output<String> environmentSettingName) {
            this.environmentSettingName = environmentSettingName;
            return this;
        }
        public Builder environmentSettingName(@Nullable String environmentSettingName) {
            this.environmentSettingName = Codegen.ofNullable(environmentSettingName);
            return this;
        }
        public Builder labAccountName(Output<String> labAccountName) {
            this.labAccountName = Objects.requireNonNull(labAccountName);
            return this;
        }
        public Builder labAccountName(String labAccountName) {
            this.labAccountName = Output.of(Objects.requireNonNull(labAccountName));
            return this;
        }
        public Builder labName(Output<String> labName) {
            this.labName = Objects.requireNonNull(labName);
            return this;
        }
        public Builder labName(String labName) {
            this.labName = Output.of(Objects.requireNonNull(labName));
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder provisioningState(@Nullable Output<String> provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        public Builder provisioningState(@Nullable String provisioningState) {
            this.provisioningState = Codegen.ofNullable(provisioningState);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder resourceSettings(Output<ResourceSettingsArgs> resourceSettings) {
            this.resourceSettings = Objects.requireNonNull(resourceSettings);
            return this;
        }
        public Builder resourceSettings(ResourceSettingsArgs resourceSettings) {
            this.resourceSettings = Output.of(Objects.requireNonNull(resourceSettings));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder title(@Nullable Output<String> title) {
            this.title = title;
            return this;
        }
        public Builder title(@Nullable String title) {
            this.title = Codegen.ofNullable(title);
            return this;
        }
        public Builder uniqueIdentifier(@Nullable Output<String> uniqueIdentifier) {
            this.uniqueIdentifier = uniqueIdentifier;
            return this;
        }
        public Builder uniqueIdentifier(@Nullable String uniqueIdentifier) {
            this.uniqueIdentifier = Codegen.ofNullable(uniqueIdentifier);
            return this;
        }        public EnvironmentSettingArgs build() {
            return new EnvironmentSettingArgs(configurationState, description, environmentSettingName, labAccountName, labName, location, provisioningState, resourceGroupName, resourceSettings, tags, title, uniqueIdentifier);
        }
    }
}
