// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Parameters of the search job that initiated this table.
 * 
 */
public final class SearchResultsResponse extends com.pulumi.resources.InvokeArgs {

    public static final SearchResultsResponse Empty = new SearchResultsResponse();

    /**
     * Search results table&#39;s Description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The timestamp to end the search by (UTC)
     * 
     */
    @Import(name="endSearchTime")
    private @Nullable String endSearchTime;

    public Optional<String> endSearchTime() {
        return Optional.ofNullable(this.endSearchTime);
    }

    /**
     * Limit the search job to return up to specified number of rows.
     * 
     */
    @Import(name="limit")
    private @Nullable Integer limit;

    public Optional<Integer> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * Search job query.
     * 
     */
    @Import(name="query")
    private @Nullable String query;

    public Optional<String> query() {
        return Optional.ofNullable(this.query);
    }

    /**
     * The table to search data from.
     * 
     */
    @Import(name="sourceTable", required=true)
    private String sourceTable;

    public String sourceTable() {
        return this.sourceTable;
    }

    /**
     * The timestamp to start the search from (UTC)
     * 
     */
    @Import(name="startSearchTime")
    private @Nullable String startSearchTime;

    public Optional<String> startSearchTime() {
        return Optional.ofNullable(this.startSearchTime);
    }

    private SearchResultsResponse() {}

    private SearchResultsResponse(SearchResultsResponse $) {
        this.description = $.description;
        this.endSearchTime = $.endSearchTime;
        this.limit = $.limit;
        this.query = $.query;
        this.sourceTable = $.sourceTable;
        this.startSearchTime = $.startSearchTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SearchResultsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SearchResultsResponse $;

        public Builder() {
            $ = new SearchResultsResponse();
        }

        public Builder(SearchResultsResponse defaults) {
            $ = new SearchResultsResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder endSearchTime(@Nullable String endSearchTime) {
            $.endSearchTime = endSearchTime;
            return this;
        }

        public Builder limit(@Nullable Integer limit) {
            $.limit = limit;
            return this;
        }

        public Builder query(@Nullable String query) {
            $.query = query;
            return this;
        }

        public Builder sourceTable(String sourceTable) {
            $.sourceTable = sourceTable;
            return this;
        }

        public Builder startSearchTime(@Nullable String startSearchTime) {
            $.startSearchTime = startSearchTime;
            return this;
        }

        public SearchResultsResponse build() {
            $.sourceTable = Objects.requireNonNull($.sourceTable, "expected parameter 'sourceTable' to be non-null");
            return $;
        }
    }

}
