// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainTopicArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainTopicArgs Empty = new DomainTopicArgs();

    /**
     * Name of the domain.
     * 
     */
    @Import(name="domainName", required=true)
    private Output<String> domainName;

    /**
     * @return Name of the domain.
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }

    /**
     * Name of the domain topic.
     * 
     */
    @Import(name="domainTopicName")
    private @Nullable Output<String> domainTopicName;

    /**
     * @return Name of the domain topic.
     * 
     */
    public Optional<Output<String>> domainTopicName() {
        return Optional.ofNullable(this.domainTopicName);
    }

    /**
     * The name of the resource group within the user&#39;s subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private DomainTopicArgs() {}

    private DomainTopicArgs(DomainTopicArgs $) {
        this.domainName = $.domainName;
        this.domainTopicName = $.domainTopicName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainTopicArgs $;

        public Builder() {
            $ = new DomainTopicArgs();
        }

        public Builder(DomainTopicArgs defaults) {
            $ = new DomainTopicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainName Name of the domain.
         * 
         * @return builder
         * 
         */
        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName Name of the domain.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param domainTopicName Name of the domain topic.
         * 
         * @return builder
         * 
         */
        public Builder domainTopicName(@Nullable Output<String> domainTopicName) {
            $.domainTopicName = domainTopicName;
            return this;
        }

        /**
         * @param domainTopicName Name of the domain topic.
         * 
         * @return builder
         * 
         */
        public Builder domainTopicName(String domainTopicName) {
            return domainTopicName(Output.of(domainTopicName));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public DomainTopicArgs build() {
            $.domainName = Objects.requireNonNull($.domainName, "expected parameter 'domainName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
