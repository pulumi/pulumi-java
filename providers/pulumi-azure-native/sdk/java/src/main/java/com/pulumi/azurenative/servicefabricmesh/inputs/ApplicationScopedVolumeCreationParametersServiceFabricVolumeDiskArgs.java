// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.azurenative.servicefabricmesh.enums.SizeTypes;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes parameters for creating application-scoped volumes provided by Service Fabric Volume Disks
 * 
 */
public final class ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs Empty = new ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs();

    /**
     * User readable description of the volume.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return User readable description of the volume.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies the application-scoped volume kind.
     * Expected value is &#39;ServiceFabricVolumeDisk&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    /**
     * @return Specifies the application-scoped volume kind.
     * Expected value is &#39;ServiceFabricVolumeDisk&#39;.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }

    /**
     * Volume size
     * 
     */
    @Import(name="sizeDisk", required=true)
    private Output<Either<String,SizeTypes>> sizeDisk;

    /**
     * @return Volume size
     * 
     */
    public Output<Either<String,SizeTypes>> sizeDisk() {
        return this.sizeDisk;
    }

    private ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs() {}

    private ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs(ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs $) {
        this.description = $.description;
        this.kind = $.kind;
        this.sizeDisk = $.sizeDisk;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs $;

        public Builder() {
            $ = new ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs();
        }

        public Builder(ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs defaults) {
            $ = new ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description User readable description of the volume.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description User readable description of the volume.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param kind Specifies the application-scoped volume kind.
         * Expected value is &#39;ServiceFabricVolumeDisk&#39;.
         * 
         * @return builder
         * 
         */
        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Specifies the application-scoped volume kind.
         * Expected value is &#39;ServiceFabricVolumeDisk&#39;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param sizeDisk Volume size
         * 
         * @return builder
         * 
         */
        public Builder sizeDisk(Output<Either<String,SizeTypes>> sizeDisk) {
            $.sizeDisk = sizeDisk;
            return this;
        }

        /**
         * @param sizeDisk Volume size
         * 
         * @return builder
         * 
         */
        public Builder sizeDisk(Either<String,SizeTypes> sizeDisk) {
            return sizeDisk(Output.of(sizeDisk));
        }

        /**
         * @param sizeDisk Volume size
         * 
         * @return builder
         * 
         */
        public Builder sizeDisk(String sizeDisk) {
            return sizeDisk(Either.ofLeft(sizeDisk));
        }

        /**
         * @param sizeDisk Volume size
         * 
         * @return builder
         * 
         */
        public Builder sizeDisk(SizeTypes sizeDisk) {
            return sizeDisk(Either.ofRight(sizeDisk));
        }

        public ApplicationScopedVolumeCreationParametersServiceFabricVolumeDiskArgs build() {
            $.kind = Codegen.stringProp("kind").output().arg($.kind).require();
            $.sizeDisk = Objects.requireNonNull($.sizeDisk, "expected parameter 'sizeDisk' to be non-null");
            return $;
        }
    }

}
