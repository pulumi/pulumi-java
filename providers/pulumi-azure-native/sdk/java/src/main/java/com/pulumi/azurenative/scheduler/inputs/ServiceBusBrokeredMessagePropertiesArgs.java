// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scheduler.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceBusBrokeredMessagePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceBusBrokeredMessagePropertiesArgs Empty = new ServiceBusBrokeredMessagePropertiesArgs();

    /**
     * Gets or sets the content type.
     * 
     */
    @Import(name="contentType")
      private final @Nullable Output<String> contentType;

    public Output<String> contentType() {
        return this.contentType == null ? Codegen.empty() : this.contentType;
    }

    /**
     * Gets or sets the correlation ID.
     * 
     */
    @Import(name="correlationId")
      private final @Nullable Output<String> correlationId;

    public Output<String> correlationId() {
        return this.correlationId == null ? Codegen.empty() : this.correlationId;
    }

    /**
     * Gets or sets the force persistence.
     * 
     */
    @Import(name="forcePersistence")
      private final @Nullable Output<Boolean> forcePersistence;

    public Output<Boolean> forcePersistence() {
        return this.forcePersistence == null ? Codegen.empty() : this.forcePersistence;
    }

    /**
     * Gets or sets the label.
     * 
     */
    @Import(name="label")
      private final @Nullable Output<String> label;

    public Output<String> label() {
        return this.label == null ? Codegen.empty() : this.label;
    }

    /**
     * Gets or sets the message ID.
     * 
     */
    @Import(name="messageId")
      private final @Nullable Output<String> messageId;

    public Output<String> messageId() {
        return this.messageId == null ? Codegen.empty() : this.messageId;
    }

    /**
     * Gets or sets the partition key.
     * 
     */
    @Import(name="partitionKey")
      private final @Nullable Output<String> partitionKey;

    public Output<String> partitionKey() {
        return this.partitionKey == null ? Codegen.empty() : this.partitionKey;
    }

    /**
     * Gets or sets the reply to.
     * 
     */
    @Import(name="replyTo")
      private final @Nullable Output<String> replyTo;

    public Output<String> replyTo() {
        return this.replyTo == null ? Codegen.empty() : this.replyTo;
    }

    /**
     * Gets or sets the reply to session ID.
     * 
     */
    @Import(name="replyToSessionId")
      private final @Nullable Output<String> replyToSessionId;

    public Output<String> replyToSessionId() {
        return this.replyToSessionId == null ? Codegen.empty() : this.replyToSessionId;
    }

    /**
     * Gets or sets the scheduled enqueue time UTC.
     * 
     */
    @Import(name="scheduledEnqueueTimeUtc")
      private final @Nullable Output<String> scheduledEnqueueTimeUtc;

    public Output<String> scheduledEnqueueTimeUtc() {
        return this.scheduledEnqueueTimeUtc == null ? Codegen.empty() : this.scheduledEnqueueTimeUtc;
    }

    /**
     * Gets or sets the session ID.
     * 
     */
    @Import(name="sessionId")
      private final @Nullable Output<String> sessionId;

    public Output<String> sessionId() {
        return this.sessionId == null ? Codegen.empty() : this.sessionId;
    }

    /**
     * Gets or sets the time to live.
     * 
     */
    @Import(name="timeToLive")
      private final @Nullable Output<String> timeToLive;

    public Output<String> timeToLive() {
        return this.timeToLive == null ? Codegen.empty() : this.timeToLive;
    }

    /**
     * Gets or sets the to.
     * 
     */
    @Import(name="to")
      private final @Nullable Output<String> to;

    public Output<String> to() {
        return this.to == null ? Codegen.empty() : this.to;
    }

    /**
     * Gets or sets the via partition key.
     * 
     */
    @Import(name="viaPartitionKey")
      private final @Nullable Output<String> viaPartitionKey;

    public Output<String> viaPartitionKey() {
        return this.viaPartitionKey == null ? Codegen.empty() : this.viaPartitionKey;
    }

    public ServiceBusBrokeredMessagePropertiesArgs(
        @Nullable Output<String> contentType,
        @Nullable Output<String> correlationId,
        @Nullable Output<Boolean> forcePersistence,
        @Nullable Output<String> label,
        @Nullable Output<String> messageId,
        @Nullable Output<String> partitionKey,
        @Nullable Output<String> replyTo,
        @Nullable Output<String> replyToSessionId,
        @Nullable Output<String> scheduledEnqueueTimeUtc,
        @Nullable Output<String> sessionId,
        @Nullable Output<String> timeToLive,
        @Nullable Output<String> to,
        @Nullable Output<String> viaPartitionKey) {
        this.contentType = contentType;
        this.correlationId = correlationId;
        this.forcePersistence = forcePersistence;
        this.label = label;
        this.messageId = messageId;
        this.partitionKey = partitionKey;
        this.replyTo = replyTo;
        this.replyToSessionId = replyToSessionId;
        this.scheduledEnqueueTimeUtc = scheduledEnqueueTimeUtc;
        this.sessionId = sessionId;
        this.timeToLive = timeToLive;
        this.to = to;
        this.viaPartitionKey = viaPartitionKey;
    }

    private ServiceBusBrokeredMessagePropertiesArgs() {
        this.contentType = Codegen.empty();
        this.correlationId = Codegen.empty();
        this.forcePersistence = Codegen.empty();
        this.label = Codegen.empty();
        this.messageId = Codegen.empty();
        this.partitionKey = Codegen.empty();
        this.replyTo = Codegen.empty();
        this.replyToSessionId = Codegen.empty();
        this.scheduledEnqueueTimeUtc = Codegen.empty();
        this.sessionId = Codegen.empty();
        this.timeToLive = Codegen.empty();
        this.to = Codegen.empty();
        this.viaPartitionKey = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceBusBrokeredMessagePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> contentType;
        private @Nullable Output<String> correlationId;
        private @Nullable Output<Boolean> forcePersistence;
        private @Nullable Output<String> label;
        private @Nullable Output<String> messageId;
        private @Nullable Output<String> partitionKey;
        private @Nullable Output<String> replyTo;
        private @Nullable Output<String> replyToSessionId;
        private @Nullable Output<String> scheduledEnqueueTimeUtc;
        private @Nullable Output<String> sessionId;
        private @Nullable Output<String> timeToLive;
        private @Nullable Output<String> to;
        private @Nullable Output<String> viaPartitionKey;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceBusBrokeredMessagePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentType = defaults.contentType;
    	      this.correlationId = defaults.correlationId;
    	      this.forcePersistence = defaults.forcePersistence;
    	      this.label = defaults.label;
    	      this.messageId = defaults.messageId;
    	      this.partitionKey = defaults.partitionKey;
    	      this.replyTo = defaults.replyTo;
    	      this.replyToSessionId = defaults.replyToSessionId;
    	      this.scheduledEnqueueTimeUtc = defaults.scheduledEnqueueTimeUtc;
    	      this.sessionId = defaults.sessionId;
    	      this.timeToLive = defaults.timeToLive;
    	      this.to = defaults.to;
    	      this.viaPartitionKey = defaults.viaPartitionKey;
        }

        public Builder contentType(@Nullable Output<String> contentType) {
            this.contentType = contentType;
            return this;
        }
        public Builder contentType(@Nullable String contentType) {
            this.contentType = Codegen.ofNullable(contentType);
            return this;
        }
        public Builder correlationId(@Nullable Output<String> correlationId) {
            this.correlationId = correlationId;
            return this;
        }
        public Builder correlationId(@Nullable String correlationId) {
            this.correlationId = Codegen.ofNullable(correlationId);
            return this;
        }
        public Builder forcePersistence(@Nullable Output<Boolean> forcePersistence) {
            this.forcePersistence = forcePersistence;
            return this;
        }
        public Builder forcePersistence(@Nullable Boolean forcePersistence) {
            this.forcePersistence = Codegen.ofNullable(forcePersistence);
            return this;
        }
        public Builder label(@Nullable Output<String> label) {
            this.label = label;
            return this;
        }
        public Builder label(@Nullable String label) {
            this.label = Codegen.ofNullable(label);
            return this;
        }
        public Builder messageId(@Nullable Output<String> messageId) {
            this.messageId = messageId;
            return this;
        }
        public Builder messageId(@Nullable String messageId) {
            this.messageId = Codegen.ofNullable(messageId);
            return this;
        }
        public Builder partitionKey(@Nullable Output<String> partitionKey) {
            this.partitionKey = partitionKey;
            return this;
        }
        public Builder partitionKey(@Nullable String partitionKey) {
            this.partitionKey = Codegen.ofNullable(partitionKey);
            return this;
        }
        public Builder replyTo(@Nullable Output<String> replyTo) {
            this.replyTo = replyTo;
            return this;
        }
        public Builder replyTo(@Nullable String replyTo) {
            this.replyTo = Codegen.ofNullable(replyTo);
            return this;
        }
        public Builder replyToSessionId(@Nullable Output<String> replyToSessionId) {
            this.replyToSessionId = replyToSessionId;
            return this;
        }
        public Builder replyToSessionId(@Nullable String replyToSessionId) {
            this.replyToSessionId = Codegen.ofNullable(replyToSessionId);
            return this;
        }
        public Builder scheduledEnqueueTimeUtc(@Nullable Output<String> scheduledEnqueueTimeUtc) {
            this.scheduledEnqueueTimeUtc = scheduledEnqueueTimeUtc;
            return this;
        }
        public Builder scheduledEnqueueTimeUtc(@Nullable String scheduledEnqueueTimeUtc) {
            this.scheduledEnqueueTimeUtc = Codegen.ofNullable(scheduledEnqueueTimeUtc);
            return this;
        }
        public Builder sessionId(@Nullable Output<String> sessionId) {
            this.sessionId = sessionId;
            return this;
        }
        public Builder sessionId(@Nullable String sessionId) {
            this.sessionId = Codegen.ofNullable(sessionId);
            return this;
        }
        public Builder timeToLive(@Nullable Output<String> timeToLive) {
            this.timeToLive = timeToLive;
            return this;
        }
        public Builder timeToLive(@Nullable String timeToLive) {
            this.timeToLive = Codegen.ofNullable(timeToLive);
            return this;
        }
        public Builder to(@Nullable Output<String> to) {
            this.to = to;
            return this;
        }
        public Builder to(@Nullable String to) {
            this.to = Codegen.ofNullable(to);
            return this;
        }
        public Builder viaPartitionKey(@Nullable Output<String> viaPartitionKey) {
            this.viaPartitionKey = viaPartitionKey;
            return this;
        }
        public Builder viaPartitionKey(@Nullable String viaPartitionKey) {
            this.viaPartitionKey = Codegen.ofNullable(viaPartitionKey);
            return this;
        }        public ServiceBusBrokeredMessagePropertiesArgs build() {
            return new ServiceBusBrokeredMessagePropertiesArgs(contentType, correlationId, forcePersistence, label, messageId, partitionKey, replyTo, replyToSessionId, scheduledEnqueueTimeUtc, sessionId, timeToLive, to, viaPartitionKey);
        }
    }
}
