// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge;

import com.pulumi.azurenative.databoxedge.inputs.FileSourceInfoArgs;
import com.pulumi.azurenative.databoxedge.inputs.RoleSinkInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FileEventTriggerArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileEventTriggerArgs Empty = new FileEventTriggerArgs();

    /**
     * A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
     * 
     */
    @Import(name="customContextTag")
    private @Nullable Output<String> customContextTag;

    public Optional<Output<String>> customContextTag() {
        return Optional.ofNullable(this.customContextTag);
    }

    /**
     * Creates or updates a trigger
     * 
     */
    @Import(name="deviceName", required=true)
    private Output<String> deviceName;

    public Output<String> deviceName() {
        return this.deviceName;
    }

    /**
     * Trigger Kind.
     * Expected value is &#39;FileEvent&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    public Output<String> kind() {
        return this.kind;
    }

    /**
     * The trigger name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Role sink info.
     * 
     */
    @Import(name="sinkInfo", required=true)
    private Output<RoleSinkInfoArgs> sinkInfo;

    public Output<RoleSinkInfoArgs> sinkInfo() {
        return this.sinkInfo;
    }

    /**
     * File event source details.
     * 
     */
    @Import(name="sourceInfo", required=true)
    private Output<FileSourceInfoArgs> sourceInfo;

    public Output<FileSourceInfoArgs> sourceInfo() {
        return this.sourceInfo;
    }

    private FileEventTriggerArgs() {}

    private FileEventTriggerArgs(FileEventTriggerArgs $) {
        this.customContextTag = $.customContextTag;
        this.deviceName = $.deviceName;
        this.kind = $.kind;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.sinkInfo = $.sinkInfo;
        this.sourceInfo = $.sourceInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileEventTriggerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileEventTriggerArgs $;

        public Builder() {
            $ = new FileEventTriggerArgs();
        }

        public Builder(FileEventTriggerArgs defaults) {
            $ = new FileEventTriggerArgs(Objects.requireNonNull(defaults));
        }

        public Builder customContextTag(@Nullable Output<String> customContextTag) {
            $.customContextTag = customContextTag;
            return this;
        }

        public Builder customContextTag(String customContextTag) {
            return customContextTag(Output.of(customContextTag));
        }

        public Builder deviceName(Output<String> deviceName) {
            $.deviceName = deviceName;
            return this;
        }

        public Builder deviceName(String deviceName) {
            return deviceName(Output.of(deviceName));
        }

        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder sinkInfo(Output<RoleSinkInfoArgs> sinkInfo) {
            $.sinkInfo = sinkInfo;
            return this;
        }

        public Builder sinkInfo(RoleSinkInfoArgs sinkInfo) {
            return sinkInfo(Output.of(sinkInfo));
        }

        public Builder sourceInfo(Output<FileSourceInfoArgs> sourceInfo) {
            $.sourceInfo = sourceInfo;
            return this;
        }

        public Builder sourceInfo(FileSourceInfoArgs sourceInfo) {
            return sourceInfo(Output.of(sourceInfo));
        }

        public FileEventTriggerArgs build() {
            $.deviceName = Objects.requireNonNull($.deviceName, "expected parameter 'deviceName' to be non-null");
            $.kind = Codegen.stringProp("kind").output().arg($.kind).require();
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sinkInfo = Objects.requireNonNull($.sinkInfo, "expected parameter 'sinkInfo' to be non-null");
            $.sourceInfo = Objects.requireNonNull($.sourceInfo, "expected parameter 'sourceInfo' to be non-null");
            return $;
        }
    }

}
