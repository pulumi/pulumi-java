// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.inputs.SecurityAssessmentMetadataPartnerDataResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes properties of an assessment metadata.
 * 
 */
public final class SecurityAssessmentMetadataPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecurityAssessmentMetadataPropertiesResponse Empty = new SecurityAssessmentMetadataPropertiesResponse();

    /**
     * BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition
     * 
     */
    @Import(name="assessmentType", required=true)
    private String assessmentType;

    public String assessmentType() {
        return this.assessmentType;
    }

    @Import(name="categories")
    private @Nullable List<String> categories;

    public Optional<List<String>> categories() {
        return Optional.ofNullable(this.categories);
    }

    /**
     * Human readable description of the assessment
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * User friendly display name of the assessment
     * 
     */
    @Import(name="displayName", required=true)
    private String displayName;

    public String displayName() {
        return this.displayName;
    }

    /**
     * The implementation effort required to remediate this assessment
     * 
     */
    @Import(name="implementationEffort")
    private @Nullable String implementationEffort;

    public Optional<String> implementationEffort() {
        return Optional.ofNullable(this.implementationEffort);
    }

    /**
     * Describes the partner that created the assessment
     * 
     */
    @Import(name="partnerData")
    private @Nullable SecurityAssessmentMetadataPartnerDataResponse partnerData;

    public Optional<SecurityAssessmentMetadataPartnerDataResponse> partnerData() {
        return Optional.ofNullable(this.partnerData);
    }

    /**
     * Azure resource ID of the policy definition that turns this assessment calculation on
     * 
     */
    @Import(name="policyDefinitionId", required=true)
    private String policyDefinitionId;

    public String policyDefinitionId() {
        return this.policyDefinitionId;
    }

    /**
     * True if this assessment is in preview release status
     * 
     */
    @Import(name="preview")
    private @Nullable Boolean preview;

    public Optional<Boolean> preview() {
        return Optional.ofNullable(this.preview);
    }

    /**
     * Human readable description of what you should do to mitigate this security issue
     * 
     */
    @Import(name="remediationDescription")
    private @Nullable String remediationDescription;

    public Optional<String> remediationDescription() {
        return Optional.ofNullable(this.remediationDescription);
    }

    /**
     * The severity level of the assessment
     * 
     */
    @Import(name="severity", required=true)
    private String severity;

    public String severity() {
        return this.severity;
    }

    @Import(name="threats")
    private @Nullable List<String> threats;

    public Optional<List<String>> threats() {
        return Optional.ofNullable(this.threats);
    }

    /**
     * The user impact of the assessment
     * 
     */
    @Import(name="userImpact")
    private @Nullable String userImpact;

    public Optional<String> userImpact() {
        return Optional.ofNullable(this.userImpact);
    }

    private SecurityAssessmentMetadataPropertiesResponse() {}

    private SecurityAssessmentMetadataPropertiesResponse(SecurityAssessmentMetadataPropertiesResponse $) {
        this.assessmentType = $.assessmentType;
        this.categories = $.categories;
        this.description = $.description;
        this.displayName = $.displayName;
        this.implementationEffort = $.implementationEffort;
        this.partnerData = $.partnerData;
        this.policyDefinitionId = $.policyDefinitionId;
        this.preview = $.preview;
        this.remediationDescription = $.remediationDescription;
        this.severity = $.severity;
        this.threats = $.threats;
        this.userImpact = $.userImpact;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityAssessmentMetadataPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityAssessmentMetadataPropertiesResponse $;

        public Builder() {
            $ = new SecurityAssessmentMetadataPropertiesResponse();
        }

        public Builder(SecurityAssessmentMetadataPropertiesResponse defaults) {
            $ = new SecurityAssessmentMetadataPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder assessmentType(String assessmentType) {
            $.assessmentType = assessmentType;
            return this;
        }

        public Builder categories(@Nullable List<String> categories) {
            $.categories = categories;
            return this;
        }

        public Builder categories(String... categories) {
            return categories(List.of(categories));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder displayName(String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder implementationEffort(@Nullable String implementationEffort) {
            $.implementationEffort = implementationEffort;
            return this;
        }

        public Builder partnerData(@Nullable SecurityAssessmentMetadataPartnerDataResponse partnerData) {
            $.partnerData = partnerData;
            return this;
        }

        public Builder policyDefinitionId(String policyDefinitionId) {
            $.policyDefinitionId = policyDefinitionId;
            return this;
        }

        public Builder preview(@Nullable Boolean preview) {
            $.preview = preview;
            return this;
        }

        public Builder remediationDescription(@Nullable String remediationDescription) {
            $.remediationDescription = remediationDescription;
            return this;
        }

        public Builder severity(String severity) {
            $.severity = severity;
            return this;
        }

        public Builder threats(@Nullable List<String> threats) {
            $.threats = threats;
            return this;
        }

        public Builder threats(String... threats) {
            return threats(List.of(threats));
        }

        public Builder userImpact(@Nullable String userImpact) {
            $.userImpact = userImpact;
            return this;
        }

        public SecurityAssessmentMetadataPropertiesResponse build() {
            $.assessmentType = Objects.requireNonNull($.assessmentType, "expected parameter 'assessmentType' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.policyDefinitionId = Objects.requireNonNull($.policyDefinitionId, "expected parameter 'policyDefinitionId' to be non-null");
            $.severity = Objects.requireNonNull($.severity, "expected parameter 'severity' to be non-null");
            return $;
        }
    }

}
