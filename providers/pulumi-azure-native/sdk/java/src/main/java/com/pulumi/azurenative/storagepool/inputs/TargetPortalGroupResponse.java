// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagepool.inputs;

import com.pulumi.azurenative.storagepool.inputs.AclResponse;
import com.pulumi.azurenative.storagepool.inputs.AttributesResponse;
import com.pulumi.azurenative.storagepool.inputs.IscsiLunResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Response properties for iSCSI target portal group.
 * 
 */
public final class TargetPortalGroupResponse extends com.pulumi.resources.InvokeArgs {

    public static final TargetPortalGroupResponse Empty = new TargetPortalGroupResponse();

    /**
     * Access Control List (ACL) for an iSCSI target portal group.
     * 
     */
    @Import(name="acls", required=true)
    private List<AclResponse> acls;

    public List<AclResponse> acls() {
        return this.acls;
    }

    /**
     * Attributes of an iSCSI target portal group.
     * 
     */
    @Import(name="attributes", required=true)
    private AttributesResponse attributes;

    public AttributesResponse attributes() {
        return this.attributes;
    }

    /**
     * List of private IPv4 addresses to connect to the iSCSI target.
     * 
     */
    @Import(name="endpoints", required=true)
    private List<String> endpoints;

    public List<String> endpoints() {
        return this.endpoints;
    }

    /**
     * List of LUNs to be exposed through iSCSI target portal group.
     * 
     */
    @Import(name="luns", required=true)
    private List<IscsiLunResponse> luns;

    public List<IscsiLunResponse> luns() {
        return this.luns;
    }

    /**
     * The port used by iSCSI target portal group.
     * 
     */
    @Import(name="port", required=true)
    private Integer port;

    public Integer port() {
        return this.port;
    }

    /**
     * The tag associated with the iSCSI target portal group.
     * 
     */
    @Import(name="tag", required=true)
    private Integer tag;

    public Integer tag() {
        return this.tag;
    }

    private TargetPortalGroupResponse() {}

    private TargetPortalGroupResponse(TargetPortalGroupResponse $) {
        this.acls = $.acls;
        this.attributes = $.attributes;
        this.endpoints = $.endpoints;
        this.luns = $.luns;
        this.port = $.port;
        this.tag = $.tag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetPortalGroupResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetPortalGroupResponse $;

        public Builder() {
            $ = new TargetPortalGroupResponse();
        }

        public Builder(TargetPortalGroupResponse defaults) {
            $ = new TargetPortalGroupResponse(Objects.requireNonNull(defaults));
        }

        public Builder acls(List<AclResponse> acls) {
            $.acls = acls;
            return this;
        }

        public Builder acls(AclResponse... acls) {
            return acls(List.of(acls));
        }

        public Builder attributes(AttributesResponse attributes) {
            $.attributes = attributes;
            return this;
        }

        public Builder endpoints(List<String> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        public Builder endpoints(String... endpoints) {
            return endpoints(List.of(endpoints));
        }

        public Builder luns(List<IscsiLunResponse> luns) {
            $.luns = luns;
            return this;
        }

        public Builder luns(IscsiLunResponse... luns) {
            return luns(List.of(luns));
        }

        public Builder port(Integer port) {
            $.port = port;
            return this;
        }

        public Builder tag(Integer tag) {
            $.tag = tag;
            return this;
        }

        public TargetPortalGroupResponse build() {
            $.acls = Objects.requireNonNull($.acls, "expected parameter 'acls' to be non-null");
            $.attributes = Objects.requireNonNull($.attributes, "expected parameter 'attributes' to be non-null");
            $.endpoints = Objects.requireNonNull($.endpoints, "expected parameter 'endpoints' to be non-null");
            $.luns = Objects.requireNonNull($.luns, "expected parameter 'luns' to be non-null");
            $.port = Objects.requireNonNull($.port, "expected parameter 'port' to be non-null");
            $.tag = Objects.requireNonNull($.tag, "expected parameter 'tag' to be non-null");
            return $;
        }
    }

}
