// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * API OAuth2 Authentication settings details.
 * 
 */
public final class OAuth2AuthenticationSettingsContractArgs extends com.pulumi.resources.ResourceArgs {

    public static final OAuth2AuthenticationSettingsContractArgs Empty = new OAuth2AuthenticationSettingsContractArgs();

    /**
     * OAuth authorization server identifier.
     * 
     */
    @Import(name="authorizationServerId")
    private @Nullable Output<String> authorizationServerId;

    /**
     * @return OAuth authorization server identifier.
     * 
     */
    public Optional<Output<String>> authorizationServerId() {
        return Optional.ofNullable(this.authorizationServerId);
    }

    /**
     * operations scope.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return operations scope.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private OAuth2AuthenticationSettingsContractArgs() {}

    private OAuth2AuthenticationSettingsContractArgs(OAuth2AuthenticationSettingsContractArgs $) {
        this.authorizationServerId = $.authorizationServerId;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OAuth2AuthenticationSettingsContractArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OAuth2AuthenticationSettingsContractArgs $;

        public Builder() {
            $ = new OAuth2AuthenticationSettingsContractArgs();
        }

        public Builder(OAuth2AuthenticationSettingsContractArgs defaults) {
            $ = new OAuth2AuthenticationSettingsContractArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizationServerId OAuth authorization server identifier.
         * 
         * @return builder
         * 
         */
        public Builder authorizationServerId(@Nullable Output<String> authorizationServerId) {
            $.authorizationServerId = authorizationServerId;
            return this;
        }

        /**
         * @param authorizationServerId OAuth authorization server identifier.
         * 
         * @return builder
         * 
         */
        public Builder authorizationServerId(String authorizationServerId) {
            return authorizationServerId(Output.of(authorizationServerId));
        }

        /**
         * @param scope operations scope.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope operations scope.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public OAuth2AuthenticationSettingsContractArgs build() {
            return $;
        }
    }

}
