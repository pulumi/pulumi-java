// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectivityGroupItemResponse extends com.pulumi.resources.InvokeArgs {

    public static final ConnectivityGroupItemResponse Empty = new ConnectivityGroupItemResponse();

    /**
     * Group connectivity type.
     * 
     */
    @Import(name="groupConnectivity")
    private @Nullable String groupConnectivity;

    /**
     * @return Group connectivity type.
     * 
     */
    public Optional<String> groupConnectivity() {
        return Optional.ofNullable(this.groupConnectivity);
    }

    /**
     * Flag if global is supported.
     * 
     */
    @Import(name="isGlobal")
    private @Nullable String isGlobal;

    /**
     * @return Flag if global is supported.
     * 
     */
    public Optional<String> isGlobal() {
        return Optional.ofNullable(this.isGlobal);
    }

    /**
     * Network group Id.
     * 
     */
    @Import(name="networkGroupId")
    private @Nullable String networkGroupId;

    /**
     * @return Network group Id.
     * 
     */
    public Optional<String> networkGroupId() {
        return Optional.ofNullable(this.networkGroupId);
    }

    /**
     * Flag if need to use hub gateway.
     * 
     */
    @Import(name="useHubGateway")
    private @Nullable String useHubGateway;

    /**
     * @return Flag if need to use hub gateway.
     * 
     */
    public Optional<String> useHubGateway() {
        return Optional.ofNullable(this.useHubGateway);
    }

    private ConnectivityGroupItemResponse() {}

    private ConnectivityGroupItemResponse(ConnectivityGroupItemResponse $) {
        this.groupConnectivity = $.groupConnectivity;
        this.isGlobal = $.isGlobal;
        this.networkGroupId = $.networkGroupId;
        this.useHubGateway = $.useHubGateway;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectivityGroupItemResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectivityGroupItemResponse $;

        public Builder() {
            $ = new ConnectivityGroupItemResponse();
        }

        public Builder(ConnectivityGroupItemResponse defaults) {
            $ = new ConnectivityGroupItemResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupConnectivity Group connectivity type.
         * 
         * @return builder
         * 
         */
        public Builder groupConnectivity(@Nullable String groupConnectivity) {
            $.groupConnectivity = groupConnectivity;
            return this;
        }

        /**
         * @param isGlobal Flag if global is supported.
         * 
         * @return builder
         * 
         */
        public Builder isGlobal(@Nullable String isGlobal) {
            $.isGlobal = isGlobal;
            return this;
        }

        /**
         * @param networkGroupId Network group Id.
         * 
         * @return builder
         * 
         */
        public Builder networkGroupId(@Nullable String networkGroupId) {
            $.networkGroupId = networkGroupId;
            return this;
        }

        /**
         * @param useHubGateway Flag if need to use hub gateway.
         * 
         * @return builder
         * 
         */
        public Builder useHubGateway(@Nullable String useHubGateway) {
            $.useHubGateway = useHubGateway;
            return this;
        }

        public ConnectivityGroupItemResponse build() {
            return $;
        }
    }

}
