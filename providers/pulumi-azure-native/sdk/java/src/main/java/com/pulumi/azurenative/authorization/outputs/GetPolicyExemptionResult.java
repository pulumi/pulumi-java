// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.azurenative.authorization.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPolicyExemptionResult {
    /**
     * @return The description of the policy exemption.
     * 
     */
    private final @Nullable String description;
    /**
     * @return The display name of the policy exemption.
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return The policy exemption category. Possible values are Waiver and Mitigated.
     * 
     */
    private final String exemptionCategory;
    /**
     * @return The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption.
     * 
     */
    private final @Nullable String expiresOn;
    /**
     * @return The ID of the policy exemption.
     * 
     */
    private final String id;
    /**
     * @return The policy exemption metadata. Metadata is an open ended object and is typically a collection of key value pairs.
     * 
     */
    private final @Nullable Object metadata;
    /**
     * @return The name of the policy exemption.
     * 
     */
    private final String name;
    /**
     * @return The ID of the policy assignment that is being exempted.
     * 
     */
    private final String policyAssignmentId;
    /**
     * @return The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition.
     * 
     */
    private final @Nullable List<String> policyDefinitionReferenceIds;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * @return The type of the resource (Microsoft.Authorization/policyExemptions).
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetPolicyExemptionResult(
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("exemptionCategory") String exemptionCategory,
        @CustomType.Parameter("expiresOn") @Nullable String expiresOn,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("metadata") @Nullable Object metadata,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("policyAssignmentId") String policyAssignmentId,
        @CustomType.Parameter("policyDefinitionReferenceIds") @Nullable List<String> policyDefinitionReferenceIds,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("type") String type) {
        this.description = description;
        this.displayName = displayName;
        this.exemptionCategory = exemptionCategory;
        this.expiresOn = expiresOn;
        this.id = id;
        this.metadata = metadata;
        this.name = name;
        this.policyAssignmentId = policyAssignmentId;
        this.policyDefinitionReferenceIds = policyDefinitionReferenceIds;
        this.systemData = systemData;
        this.type = type;
    }

    /**
     * @return The description of the policy exemption.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The display name of the policy exemption.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The policy exemption category. Possible values are Waiver and Mitigated.
     * 
     */
    public String exemptionCategory() {
        return this.exemptionCategory;
    }
    /**
     * @return The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption.
     * 
     */
    public Optional<String> expiresOn() {
        return Optional.ofNullable(this.expiresOn);
    }
    /**
     * @return The ID of the policy exemption.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The policy exemption metadata. Metadata is an open ended object and is typically a collection of key value pairs.
     * 
     */
    public Optional<Object> metadata() {
        return Optional.ofNullable(this.metadata);
    }
    /**
     * @return The name of the policy exemption.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The ID of the policy assignment that is being exempted.
     * 
     */
    public String policyAssignmentId() {
        return this.policyAssignmentId;
    }
    /**
     * @return The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition.
     * 
     */
    public List<String> policyDefinitionReferenceIds() {
        return this.policyDefinitionReferenceIds == null ? List.of() : this.policyDefinitionReferenceIds;
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The type of the resource (Microsoft.Authorization/policyExemptions).
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyExemptionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private @Nullable String displayName;
        private String exemptionCategory;
        private @Nullable String expiresOn;
        private String id;
        private @Nullable Object metadata;
        private String name;
        private String policyAssignmentId;
        private @Nullable List<String> policyDefinitionReferenceIds;
        private SystemDataResponse systemData;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPolicyExemptionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.exemptionCategory = defaults.exemptionCategory;
    	      this.expiresOn = defaults.expiresOn;
    	      this.id = defaults.id;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.policyAssignmentId = defaults.policyAssignmentId;
    	      this.policyDefinitionReferenceIds = defaults.policyDefinitionReferenceIds;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder exemptionCategory(String exemptionCategory) {
            this.exemptionCategory = Objects.requireNonNull(exemptionCategory);
            return this;
        }
        public Builder expiresOn(@Nullable String expiresOn) {
            this.expiresOn = expiresOn;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder metadata(@Nullable Object metadata) {
            this.metadata = metadata;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder policyAssignmentId(String policyAssignmentId) {
            this.policyAssignmentId = Objects.requireNonNull(policyAssignmentId);
            return this;
        }
        public Builder policyDefinitionReferenceIds(@Nullable List<String> policyDefinitionReferenceIds) {
            this.policyDefinitionReferenceIds = policyDefinitionReferenceIds;
            return this;
        }
        public Builder policyDefinitionReferenceIds(String... policyDefinitionReferenceIds) {
            return policyDefinitionReferenceIds(List.of(policyDefinitionReferenceIds));
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetPolicyExemptionResult build() {
            return new GetPolicyExemptionResult(description, displayName, exemptionCategory, expiresOn, id, metadata, name, policyAssignmentId, policyDefinitionReferenceIds, systemData, type);
        }
    }
}
