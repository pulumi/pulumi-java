// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The gateway installation reference
 * 
 */
public final class ConnectionGatewayReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionGatewayReferenceArgs Empty = new ConnectionGatewayReferenceArgs();

    /**
     * Resource reference id
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Resource reference id
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Resource reference location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource reference location
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Resource reference name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Resource reference name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Resource reference type
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Resource reference type
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ConnectionGatewayReferenceArgs() {}

    private ConnectionGatewayReferenceArgs(ConnectionGatewayReferenceArgs $) {
        this.id = $.id;
        this.location = $.location;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionGatewayReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionGatewayReferenceArgs $;

        public Builder() {
            $ = new ConnectionGatewayReferenceArgs();
        }

        public Builder(ConnectionGatewayReferenceArgs defaults) {
            $ = new ConnectionGatewayReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Resource reference id
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Resource reference id
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param location Resource reference location
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource reference location
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Resource reference name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Resource reference name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type Resource reference type
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Resource reference type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ConnectionGatewayReferenceArgs build() {
            return $;
        }
    }

}
