// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.
 * 
 */
public final class ServiceTypeDeltaHealthPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTypeDeltaHealthPolicyArgs Empty = new ServiceTypeDeltaHealthPolicyArgs();

    /**
     * The maximum allowed percentage of services health degradation allowed during cluster upgrades.
     * The delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.
     * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
     * 
     */
    @Import(name="maxPercentDeltaUnhealthyServices")
    private @Nullable Output<Integer> maxPercentDeltaUnhealthyServices;

    /**
     * @return The maximum allowed percentage of services health degradation allowed during cluster upgrades.
     * The delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.
     * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
     * 
     */
    public Optional<Output<Integer>> maxPercentDeltaUnhealthyServices() {
        return Optional.ofNullable(this.maxPercentDeltaUnhealthyServices);
    }

    private ServiceTypeDeltaHealthPolicyArgs() {}

    private ServiceTypeDeltaHealthPolicyArgs(ServiceTypeDeltaHealthPolicyArgs $) {
        this.maxPercentDeltaUnhealthyServices = $.maxPercentDeltaUnhealthyServices;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTypeDeltaHealthPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTypeDeltaHealthPolicyArgs $;

        public Builder() {
            $ = new ServiceTypeDeltaHealthPolicyArgs();
        }

        public Builder(ServiceTypeDeltaHealthPolicyArgs defaults) {
            $ = new ServiceTypeDeltaHealthPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxPercentDeltaUnhealthyServices The maximum allowed percentage of services health degradation allowed during cluster upgrades.
         * The delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.
         * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
         * 
         * @return builder
         * 
         */
        public Builder maxPercentDeltaUnhealthyServices(@Nullable Output<Integer> maxPercentDeltaUnhealthyServices) {
            $.maxPercentDeltaUnhealthyServices = maxPercentDeltaUnhealthyServices;
            return this;
        }

        /**
         * @param maxPercentDeltaUnhealthyServices The maximum allowed percentage of services health degradation allowed during cluster upgrades.
         * The delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.
         * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
         * 
         * @return builder
         * 
         */
        public Builder maxPercentDeltaUnhealthyServices(Integer maxPercentDeltaUnhealthyServices) {
            return maxPercentDeltaUnhealthyServices(Output.of(maxPercentDeltaUnhealthyServices));
        }

        public ServiceTypeDeltaHealthPolicyArgs build() {
            $.maxPercentDeltaUnhealthyServices = Codegen.integerProp("maxPercentDeltaUnhealthyServices").output().arg($.maxPercentDeltaUnhealthyServices).def(0).getNullable();
            return $;
        }
    }

}
