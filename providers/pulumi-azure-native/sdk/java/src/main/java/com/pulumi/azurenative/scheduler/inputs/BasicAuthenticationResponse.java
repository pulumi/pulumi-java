// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scheduler.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BasicAuthenticationResponse extends com.pulumi.resources.InvokeArgs {

    public static final BasicAuthenticationResponse Empty = new BasicAuthenticationResponse();

    /**
     * Gets or sets the password, return value will always be empty.
     * 
     */
    @Import(name="password")
    private @Nullable String password;

    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Gets or sets the HTTP authentication type.
     * Expected value is &#39;Basic&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    /**
     * Gets or sets the username.
     * 
     */
    @Import(name="username")
    private @Nullable String username;

    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    private BasicAuthenticationResponse() {}

    private BasicAuthenticationResponse(BasicAuthenticationResponse $) {
        this.password = $.password;
        this.type = $.type;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BasicAuthenticationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BasicAuthenticationResponse $;

        public Builder() {
            $ = new BasicAuthenticationResponse();
        }

        public Builder(BasicAuthenticationResponse defaults) {
            $ = new BasicAuthenticationResponse(Objects.requireNonNull(defaults));
        }

        public Builder password(@Nullable String password) {
            $.password = password;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder username(@Nullable String username) {
            $.username = username;
            return this;
        }

        public BasicAuthenticationResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
