// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.inputs;

import com.pulumi.azurenative.databoxedge.inputs.SecretResponse;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Device Secrets
 * 
 */
public final class DeviceSecretsResponse extends com.pulumi.resources.InvokeArgs {

    public static final DeviceSecretsResponse Empty = new DeviceSecretsResponse();

    /**
     * Keyvault Id of BMCDefaultUserPassword
     * 
     */
    @Import(name="bmcDefaultUserPassword")
    private @Nullable SecretResponse bmcDefaultUserPassword;

    public Optional<SecretResponse> bmcDefaultUserPassword() {
        return Optional.ofNullable(this.bmcDefaultUserPassword);
    }

    /**
     * Keyvault Id of HcsDataVolumeBitLockerExternalKey
     * 
     */
    @Import(name="hcsDataVolumeBitLockerExternalKey")
    private @Nullable SecretResponse hcsDataVolumeBitLockerExternalKey;

    public Optional<SecretResponse> hcsDataVolumeBitLockerExternalKey() {
        return Optional.ofNullable(this.hcsDataVolumeBitLockerExternalKey);
    }

    /**
     * Keyvault Id of HcsInternalVolumeBitLockerExternalKey
     * 
     */
    @Import(name="hcsInternalVolumeBitLockerExternalKey")
    private @Nullable SecretResponse hcsInternalVolumeBitLockerExternalKey;

    public Optional<SecretResponse> hcsInternalVolumeBitLockerExternalKey() {
        return Optional.ofNullable(this.hcsInternalVolumeBitLockerExternalKey);
    }

    /**
     * Keyvault Id of RotateKeyForDataVolumeBitlocker
     * 
     */
    @Import(name="rotateKeyForDataVolumeBitlocker")
    private @Nullable SecretResponse rotateKeyForDataVolumeBitlocker;

    public Optional<SecretResponse> rotateKeyForDataVolumeBitlocker() {
        return Optional.ofNullable(this.rotateKeyForDataVolumeBitlocker);
    }

    /**
     * Keyvault Id of RotateKeysForSedDrivesSerialized
     * 
     */
    @Import(name="rotateKeysForSedDrivesSerialized")
    private @Nullable SecretResponse rotateKeysForSedDrivesSerialized;

    public Optional<SecretResponse> rotateKeysForSedDrivesSerialized() {
        return Optional.ofNullable(this.rotateKeysForSedDrivesSerialized);
    }

    /**
     * Keyvault Id of SEDEncryptionExternalKey
     * 
     */
    @Import(name="sedEncryptionExternalKey")
    private @Nullable SecretResponse sedEncryptionExternalKey;

    public Optional<SecretResponse> sedEncryptionExternalKey() {
        return Optional.ofNullable(this.sedEncryptionExternalKey);
    }

    /**
     * Keyvault Id of SEDEncryptionExternalKeyId
     * 
     */
    @Import(name="sedEncryptionExternalKeyId")
    private @Nullable SecretResponse sedEncryptionExternalKeyId;

    public Optional<SecretResponse> sedEncryptionExternalKeyId() {
        return Optional.ofNullable(this.sedEncryptionExternalKeyId);
    }

    /**
     * Keyvault Id of SystemVolumeBitLockerRecoveryKey
     * 
     */
    @Import(name="systemVolumeBitLockerRecoveryKey")
    private @Nullable SecretResponse systemVolumeBitLockerRecoveryKey;

    public Optional<SecretResponse> systemVolumeBitLockerRecoveryKey() {
        return Optional.ofNullable(this.systemVolumeBitLockerRecoveryKey);
    }

    private DeviceSecretsResponse() {}

    private DeviceSecretsResponse(DeviceSecretsResponse $) {
        this.bmcDefaultUserPassword = $.bmcDefaultUserPassword;
        this.hcsDataVolumeBitLockerExternalKey = $.hcsDataVolumeBitLockerExternalKey;
        this.hcsInternalVolumeBitLockerExternalKey = $.hcsInternalVolumeBitLockerExternalKey;
        this.rotateKeyForDataVolumeBitlocker = $.rotateKeyForDataVolumeBitlocker;
        this.rotateKeysForSedDrivesSerialized = $.rotateKeysForSedDrivesSerialized;
        this.sedEncryptionExternalKey = $.sedEncryptionExternalKey;
        this.sedEncryptionExternalKeyId = $.sedEncryptionExternalKeyId;
        this.systemVolumeBitLockerRecoveryKey = $.systemVolumeBitLockerRecoveryKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceSecretsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceSecretsResponse $;

        public Builder() {
            $ = new DeviceSecretsResponse();
        }

        public Builder(DeviceSecretsResponse defaults) {
            $ = new DeviceSecretsResponse(Objects.requireNonNull(defaults));
        }

        public Builder bmcDefaultUserPassword(@Nullable SecretResponse bmcDefaultUserPassword) {
            $.bmcDefaultUserPassword = bmcDefaultUserPassword;
            return this;
        }

        public Builder hcsDataVolumeBitLockerExternalKey(@Nullable SecretResponse hcsDataVolumeBitLockerExternalKey) {
            $.hcsDataVolumeBitLockerExternalKey = hcsDataVolumeBitLockerExternalKey;
            return this;
        }

        public Builder hcsInternalVolumeBitLockerExternalKey(@Nullable SecretResponse hcsInternalVolumeBitLockerExternalKey) {
            $.hcsInternalVolumeBitLockerExternalKey = hcsInternalVolumeBitLockerExternalKey;
            return this;
        }

        public Builder rotateKeyForDataVolumeBitlocker(@Nullable SecretResponse rotateKeyForDataVolumeBitlocker) {
            $.rotateKeyForDataVolumeBitlocker = rotateKeyForDataVolumeBitlocker;
            return this;
        }

        public Builder rotateKeysForSedDrivesSerialized(@Nullable SecretResponse rotateKeysForSedDrivesSerialized) {
            $.rotateKeysForSedDrivesSerialized = rotateKeysForSedDrivesSerialized;
            return this;
        }

        public Builder sedEncryptionExternalKey(@Nullable SecretResponse sedEncryptionExternalKey) {
            $.sedEncryptionExternalKey = sedEncryptionExternalKey;
            return this;
        }

        public Builder sedEncryptionExternalKeyId(@Nullable SecretResponse sedEncryptionExternalKeyId) {
            $.sedEncryptionExternalKeyId = sedEncryptionExternalKeyId;
            return this;
        }

        public Builder systemVolumeBitLockerRecoveryKey(@Nullable SecretResponse systemVolumeBitLockerRecoveryKey) {
            $.systemVolumeBitLockerRecoveryKey = systemVolumeBitLockerRecoveryKey;
            return this;
        }

        public DeviceSecretsResponse build() {
            return $;
        }
    }

}
