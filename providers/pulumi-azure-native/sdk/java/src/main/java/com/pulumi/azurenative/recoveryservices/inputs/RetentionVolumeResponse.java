// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The retention details of the MT.
 * 
 */
public final class RetentionVolumeResponse extends com.pulumi.resources.InvokeArgs {

    public static final RetentionVolumeResponse Empty = new RetentionVolumeResponse();

    /**
     * The volume capacity.
     * 
     */
    @Import(name="capacityInBytes")
    private @Nullable Double capacityInBytes;

    /**
     * @return The volume capacity.
     * 
     */
    public Optional<Double> capacityInBytes() {
        return Optional.ofNullable(this.capacityInBytes);
    }

    /**
     * The free space available in this volume.
     * 
     */
    @Import(name="freeSpaceInBytes")
    private @Nullable Double freeSpaceInBytes;

    /**
     * @return The free space available in this volume.
     * 
     */
    public Optional<Double> freeSpaceInBytes() {
        return Optional.ofNullable(this.freeSpaceInBytes);
    }

    /**
     * The threshold percentage.
     * 
     */
    @Import(name="thresholdPercentage")
    private @Nullable Integer thresholdPercentage;

    /**
     * @return The threshold percentage.
     * 
     */
    public Optional<Integer> thresholdPercentage() {
        return Optional.ofNullable(this.thresholdPercentage);
    }

    /**
     * The volume name.
     * 
     */
    @Import(name="volumeName")
    private @Nullable String volumeName;

    /**
     * @return The volume name.
     * 
     */
    public Optional<String> volumeName() {
        return Optional.ofNullable(this.volumeName);
    }

    private RetentionVolumeResponse() {}

    private RetentionVolumeResponse(RetentionVolumeResponse $) {
        this.capacityInBytes = $.capacityInBytes;
        this.freeSpaceInBytes = $.freeSpaceInBytes;
        this.thresholdPercentage = $.thresholdPercentage;
        this.volumeName = $.volumeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RetentionVolumeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RetentionVolumeResponse $;

        public Builder() {
            $ = new RetentionVolumeResponse();
        }

        public Builder(RetentionVolumeResponse defaults) {
            $ = new RetentionVolumeResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityInBytes The volume capacity.
         * 
         * @return builder
         * 
         */
        public Builder capacityInBytes(@Nullable Double capacityInBytes) {
            $.capacityInBytes = capacityInBytes;
            return this;
        }

        /**
         * @param freeSpaceInBytes The free space available in this volume.
         * 
         * @return builder
         * 
         */
        public Builder freeSpaceInBytes(@Nullable Double freeSpaceInBytes) {
            $.freeSpaceInBytes = freeSpaceInBytes;
            return this;
        }

        /**
         * @param thresholdPercentage The threshold percentage.
         * 
         * @return builder
         * 
         */
        public Builder thresholdPercentage(@Nullable Integer thresholdPercentage) {
            $.thresholdPercentage = thresholdPercentage;
            return this;
        }

        /**
         * @param volumeName The volume name.
         * 
         * @return builder
         * 
         */
        public Builder volumeName(@Nullable String volumeName) {
            $.volumeName = volumeName;
            return this;
        }

        public RetentionVolumeResponse build() {
            return $;
        }
    }

}
