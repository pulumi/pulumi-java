// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifying this parameter adds support for reliable collections
 * 
 */
public final class ReliableCollectionsRefResponse extends com.pulumi.resources.InvokeArgs {

    public static final ReliableCollectionsRefResponse Empty = new ReliableCollectionsRefResponse();

    /**
     * False (the default) if ReliableCollections state is persisted to disk as usual. True if you do not want to persist state, in which case replication is still enabled and you can use ReliableCollections as distributed cache.
     * 
     */
    @Import(name="doNotPersistState")
    private @Nullable Boolean doNotPersistState;

    public Optional<Boolean> doNotPersistState() {
        return Optional.ofNullable(this.doNotPersistState);
    }

    /**
     * Name of ReliableCollection resource. Right now it&#39;s not used and you can use any string.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    private ReliableCollectionsRefResponse() {}

    private ReliableCollectionsRefResponse(ReliableCollectionsRefResponse $) {
        this.doNotPersistState = $.doNotPersistState;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReliableCollectionsRefResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReliableCollectionsRefResponse $;

        public Builder() {
            $ = new ReliableCollectionsRefResponse();
        }

        public Builder(ReliableCollectionsRefResponse defaults) {
            $ = new ReliableCollectionsRefResponse(Objects.requireNonNull(defaults));
        }

        public Builder doNotPersistState(@Nullable Boolean doNotPersistState) {
            $.doNotPersistState = doNotPersistState;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public ReliableCollectionsRefResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
