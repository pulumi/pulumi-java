// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotebookPreparationErrorResponse extends com.pulumi.resources.InvokeArgs {

    public static final NotebookPreparationErrorResponse Empty = new NotebookPreparationErrorResponse();

    @Import(name="errorMessage")
    private @Nullable String errorMessage;

    public Optional<String> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }

    @Import(name="statusCode")
    private @Nullable Integer statusCode;

    public Optional<Integer> statusCode() {
        return Optional.ofNullable(this.statusCode);
    }

    private NotebookPreparationErrorResponse() {}

    private NotebookPreparationErrorResponse(NotebookPreparationErrorResponse $) {
        this.errorMessage = $.errorMessage;
        this.statusCode = $.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotebookPreparationErrorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotebookPreparationErrorResponse $;

        public Builder() {
            $ = new NotebookPreparationErrorResponse();
        }

        public Builder(NotebookPreparationErrorResponse defaults) {
            $ = new NotebookPreparationErrorResponse(Objects.requireNonNull(defaults));
        }

        public Builder errorMessage(@Nullable String errorMessage) {
            $.errorMessage = errorMessage;
            return this;
        }

        public Builder statusCode(@Nullable Integer statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public NotebookPreparationErrorResponse build() {
            return $;
        }
    }

}
