// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DedicatedHostGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final DedicatedHostGroupArgs Empty = new DedicatedHostGroupArgs();

    /**
     * The name of the dedicated host group.
     * 
     */
    @Import(name="hostGroupName")
    private @Nullable Output<String> hostGroupName;

    public Optional<Output<String>> hostGroupName() {
        return Optional.ofNullable(this.hostGroupName);
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Number of fault domains that the host group can span.
     * 
     */
    @Import(name="platformFaultDomainCount", required=true)
    private Output<Integer> platformFaultDomainCount;

    public Output<Integer> platformFaultDomainCount() {
        return this.platformFaultDomainCount;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to &#39;false&#39; when not provided. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01.
     * 
     */
    @Import(name="supportAutomaticPlacement")
    private @Nullable Output<Boolean> supportAutomaticPlacement;

    public Optional<Output<Boolean>> supportAutomaticPlacement() {
        return Optional.ofNullable(this.supportAutomaticPlacement);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private DedicatedHostGroupArgs() {}

    private DedicatedHostGroupArgs(DedicatedHostGroupArgs $) {
        this.hostGroupName = $.hostGroupName;
        this.location = $.location;
        this.platformFaultDomainCount = $.platformFaultDomainCount;
        this.resourceGroupName = $.resourceGroupName;
        this.supportAutomaticPlacement = $.supportAutomaticPlacement;
        this.tags = $.tags;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DedicatedHostGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DedicatedHostGroupArgs $;

        public Builder() {
            $ = new DedicatedHostGroupArgs();
        }

        public Builder(DedicatedHostGroupArgs defaults) {
            $ = new DedicatedHostGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder hostGroupName(@Nullable Output<String> hostGroupName) {
            $.hostGroupName = hostGroupName;
            return this;
        }

        public Builder hostGroupName(String hostGroupName) {
            return hostGroupName(Output.of(hostGroupName));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder platformFaultDomainCount(Output<Integer> platformFaultDomainCount) {
            $.platformFaultDomainCount = platformFaultDomainCount;
            return this;
        }

        public Builder platformFaultDomainCount(Integer platformFaultDomainCount) {
            return platformFaultDomainCount(Output.of(platformFaultDomainCount));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder supportAutomaticPlacement(@Nullable Output<Boolean> supportAutomaticPlacement) {
            $.supportAutomaticPlacement = supportAutomaticPlacement;
            return this;
        }

        public Builder supportAutomaticPlacement(Boolean supportAutomaticPlacement) {
            return supportAutomaticPlacement(Output.of(supportAutomaticPlacement));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public DedicatedHostGroupArgs build() {
            $.platformFaultDomainCount = Objects.requireNonNull($.platformFaultDomainCount, "expected parameter 'platformFaultDomainCount' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
