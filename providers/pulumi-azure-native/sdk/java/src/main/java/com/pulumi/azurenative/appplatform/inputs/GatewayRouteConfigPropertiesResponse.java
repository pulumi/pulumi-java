// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.azurenative.appplatform.inputs.GatewayApiRouteResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * API route config of the Spring Cloud Gateway
 * 
 */
public final class GatewayRouteConfigPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final GatewayRouteConfigPropertiesResponse Empty = new GatewayRouteConfigPropertiesResponse();

    /**
     * The resource Id of the Azure Spring Cloud app, required unless route defines `uri`.
     * 
     */
    @Import(name="appResourceId")
    private @Nullable String appResourceId;

    /**
     * @return The resource Id of the Azure Spring Cloud app, required unless route defines `uri`.
     * 
     */
    public Optional<String> appResourceId() {
        return Optional.ofNullable(this.appResourceId);
    }

    /**
     * State of the Spring Cloud Gateway route config.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return State of the Spring Cloud Gateway route config.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
     * 
     */
    @Import(name="routes")
    private @Nullable List<GatewayApiRouteResponse> routes;

    /**
     * @return Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
     * 
     */
    public Optional<List<GatewayApiRouteResponse>> routes() {
        return Optional.ofNullable(this.routes);
    }

    private GatewayRouteConfigPropertiesResponse() {}

    private GatewayRouteConfigPropertiesResponse(GatewayRouteConfigPropertiesResponse $) {
        this.appResourceId = $.appResourceId;
        this.provisioningState = $.provisioningState;
        this.routes = $.routes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayRouteConfigPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayRouteConfigPropertiesResponse $;

        public Builder() {
            $ = new GatewayRouteConfigPropertiesResponse();
        }

        public Builder(GatewayRouteConfigPropertiesResponse defaults) {
            $ = new GatewayRouteConfigPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param appResourceId The resource Id of the Azure Spring Cloud app, required unless route defines `uri`.
         * 
         * @return builder
         * 
         */
        public Builder appResourceId(@Nullable String appResourceId) {
            $.appResourceId = appResourceId;
            return this;
        }

        /**
         * @param provisioningState State of the Spring Cloud Gateway route config.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param routes Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
         * 
         * @return builder
         * 
         */
        public Builder routes(@Nullable List<GatewayApiRouteResponse> routes) {
            $.routes = routes;
            return this;
        }

        /**
         * @param routes Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
         * 
         * @return builder
         * 
         */
        public Builder routes(GatewayApiRouteResponse... routes) {
            return routes(List.of(routes));
        }

        public GatewayRouteConfigPropertiesResponse build() {
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
