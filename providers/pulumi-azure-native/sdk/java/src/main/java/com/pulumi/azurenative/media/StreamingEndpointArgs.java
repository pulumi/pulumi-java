// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media;

import com.pulumi.azurenative.media.inputs.CrossSiteAccessPoliciesArgs;
import com.pulumi.azurenative.media.inputs.StreamingEndpointAccessControlArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamingEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamingEndpointArgs Empty = new StreamingEndpointArgs();

    /**
     * The access control definition of the streaming endpoint.
     * 
     */
    @Import(name="accessControl")
    private @Nullable Output<StreamingEndpointAccessControlArgs> accessControl;

    /**
     * @return The access control definition of the streaming endpoint.
     * 
     */
    public Optional<Output<StreamingEndpointAccessControlArgs>> accessControl() {
        return Optional.ofNullable(this.accessControl);
    }

    /**
     * The Media Services account name.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The Media Services account name.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The flag indicates if the resource should be automatically started on creation.
     * 
     */
    @Import(name="autoStart")
    private @Nullable Output<Boolean> autoStart;

    /**
     * @return The flag indicates if the resource should be automatically started on creation.
     * 
     */
    public Optional<Output<Boolean>> autoStart() {
        return Optional.ofNullable(this.autoStart);
    }

    /**
     * This feature is deprecated, do not set a value for this property.
     * 
     */
    @Import(name="availabilitySetName")
    private @Nullable Output<String> availabilitySetName;

    /**
     * @return This feature is deprecated, do not set a value for this property.
     * 
     */
    public Optional<Output<String>> availabilitySetName() {
        return Optional.ofNullable(this.availabilitySetName);
    }

    /**
     * The CDN enabled flag.
     * 
     */
    @Import(name="cdnEnabled")
    private @Nullable Output<Boolean> cdnEnabled;

    /**
     * @return The CDN enabled flag.
     * 
     */
    public Optional<Output<Boolean>> cdnEnabled() {
        return Optional.ofNullable(this.cdnEnabled);
    }

    /**
     * The CDN profile name.
     * 
     */
    @Import(name="cdnProfile")
    private @Nullable Output<String> cdnProfile;

    /**
     * @return The CDN profile name.
     * 
     */
    public Optional<Output<String>> cdnProfile() {
        return Optional.ofNullable(this.cdnProfile);
    }

    /**
     * The CDN provider name.
     * 
     */
    @Import(name="cdnProvider")
    private @Nullable Output<String> cdnProvider;

    /**
     * @return The CDN provider name.
     * 
     */
    public Optional<Output<String>> cdnProvider() {
        return Optional.ofNullable(this.cdnProvider);
    }

    /**
     * The streaming endpoint access policies.
     * 
     */
    @Import(name="crossSiteAccessPolicies")
    private @Nullable Output<CrossSiteAccessPoliciesArgs> crossSiteAccessPolicies;

    /**
     * @return The streaming endpoint access policies.
     * 
     */
    public Optional<Output<CrossSiteAccessPoliciesArgs>> crossSiteAccessPolicies() {
        return Optional.ofNullable(this.crossSiteAccessPolicies);
    }

    /**
     * The custom host names of the streaming endpoint
     * 
     */
    @Import(name="customHostNames")
    private @Nullable Output<List<String>> customHostNames;

    /**
     * @return The custom host names of the streaming endpoint
     * 
     */
    public Optional<Output<List<String>>> customHostNames() {
        return Optional.ofNullable(this.customHostNames);
    }

    /**
     * The streaming endpoint description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The streaming endpoint description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Max cache age
     * 
     */
    @Import(name="maxCacheAge")
    private @Nullable Output<Double> maxCacheAge;

    /**
     * @return Max cache age
     * 
     */
    public Optional<Output<Double>> maxCacheAge() {
        return Optional.ofNullable(this.maxCacheAge);
    }

    /**
     * The name of the resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the Azure subscription.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The number of scale units. Use the Scale operation to adjust this value.
     * 
     */
    @Import(name="scaleUnits", required=true)
    private Output<Integer> scaleUnits;

    /**
     * @return The number of scale units. Use the Scale operation to adjust this value.
     * 
     */
    public Output<Integer> scaleUnits() {
        return this.scaleUnits;
    }

    /**
     * The name of the streaming endpoint, maximum length is 24.
     * 
     */
    @Import(name="streamingEndpointName")
    private @Nullable Output<String> streamingEndpointName;

    /**
     * @return The name of the streaming endpoint, maximum length is 24.
     * 
     */
    public Optional<Output<String>> streamingEndpointName() {
        return Optional.ofNullable(this.streamingEndpointName);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private StreamingEndpointArgs() {}

    private StreamingEndpointArgs(StreamingEndpointArgs $) {
        this.accessControl = $.accessControl;
        this.accountName = $.accountName;
        this.autoStart = $.autoStart;
        this.availabilitySetName = $.availabilitySetName;
        this.cdnEnabled = $.cdnEnabled;
        this.cdnProfile = $.cdnProfile;
        this.cdnProvider = $.cdnProvider;
        this.crossSiteAccessPolicies = $.crossSiteAccessPolicies;
        this.customHostNames = $.customHostNames;
        this.description = $.description;
        this.location = $.location;
        this.maxCacheAge = $.maxCacheAge;
        this.resourceGroupName = $.resourceGroupName;
        this.scaleUnits = $.scaleUnits;
        this.streamingEndpointName = $.streamingEndpointName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamingEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamingEndpointArgs $;

        public Builder() {
            $ = new StreamingEndpointArgs();
        }

        public Builder(StreamingEndpointArgs defaults) {
            $ = new StreamingEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessControl The access control definition of the streaming endpoint.
         * 
         * @return builder
         * 
         */
        public Builder accessControl(@Nullable Output<StreamingEndpointAccessControlArgs> accessControl) {
            $.accessControl = accessControl;
            return this;
        }

        /**
         * @param accessControl The access control definition of the streaming endpoint.
         * 
         * @return builder
         * 
         */
        public Builder accessControl(StreamingEndpointAccessControlArgs accessControl) {
            return accessControl(Output.of(accessControl));
        }

        /**
         * @param accountName The Media Services account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The Media Services account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param autoStart The flag indicates if the resource should be automatically started on creation.
         * 
         * @return builder
         * 
         */
        public Builder autoStart(@Nullable Output<Boolean> autoStart) {
            $.autoStart = autoStart;
            return this;
        }

        /**
         * @param autoStart The flag indicates if the resource should be automatically started on creation.
         * 
         * @return builder
         * 
         */
        public Builder autoStart(Boolean autoStart) {
            return autoStart(Output.of(autoStart));
        }

        /**
         * @param availabilitySetName This feature is deprecated, do not set a value for this property.
         * 
         * @return builder
         * 
         */
        public Builder availabilitySetName(@Nullable Output<String> availabilitySetName) {
            $.availabilitySetName = availabilitySetName;
            return this;
        }

        /**
         * @param availabilitySetName This feature is deprecated, do not set a value for this property.
         * 
         * @return builder
         * 
         */
        public Builder availabilitySetName(String availabilitySetName) {
            return availabilitySetName(Output.of(availabilitySetName));
        }

        /**
         * @param cdnEnabled The CDN enabled flag.
         * 
         * @return builder
         * 
         */
        public Builder cdnEnabled(@Nullable Output<Boolean> cdnEnabled) {
            $.cdnEnabled = cdnEnabled;
            return this;
        }

        /**
         * @param cdnEnabled The CDN enabled flag.
         * 
         * @return builder
         * 
         */
        public Builder cdnEnabled(Boolean cdnEnabled) {
            return cdnEnabled(Output.of(cdnEnabled));
        }

        /**
         * @param cdnProfile The CDN profile name.
         * 
         * @return builder
         * 
         */
        public Builder cdnProfile(@Nullable Output<String> cdnProfile) {
            $.cdnProfile = cdnProfile;
            return this;
        }

        /**
         * @param cdnProfile The CDN profile name.
         * 
         * @return builder
         * 
         */
        public Builder cdnProfile(String cdnProfile) {
            return cdnProfile(Output.of(cdnProfile));
        }

        /**
         * @param cdnProvider The CDN provider name.
         * 
         * @return builder
         * 
         */
        public Builder cdnProvider(@Nullable Output<String> cdnProvider) {
            $.cdnProvider = cdnProvider;
            return this;
        }

        /**
         * @param cdnProvider The CDN provider name.
         * 
         * @return builder
         * 
         */
        public Builder cdnProvider(String cdnProvider) {
            return cdnProvider(Output.of(cdnProvider));
        }

        /**
         * @param crossSiteAccessPolicies The streaming endpoint access policies.
         * 
         * @return builder
         * 
         */
        public Builder crossSiteAccessPolicies(@Nullable Output<CrossSiteAccessPoliciesArgs> crossSiteAccessPolicies) {
            $.crossSiteAccessPolicies = crossSiteAccessPolicies;
            return this;
        }

        /**
         * @param crossSiteAccessPolicies The streaming endpoint access policies.
         * 
         * @return builder
         * 
         */
        public Builder crossSiteAccessPolicies(CrossSiteAccessPoliciesArgs crossSiteAccessPolicies) {
            return crossSiteAccessPolicies(Output.of(crossSiteAccessPolicies));
        }

        /**
         * @param customHostNames The custom host names of the streaming endpoint
         * 
         * @return builder
         * 
         */
        public Builder customHostNames(@Nullable Output<List<String>> customHostNames) {
            $.customHostNames = customHostNames;
            return this;
        }

        /**
         * @param customHostNames The custom host names of the streaming endpoint
         * 
         * @return builder
         * 
         */
        public Builder customHostNames(List<String> customHostNames) {
            return customHostNames(Output.of(customHostNames));
        }

        /**
         * @param customHostNames The custom host names of the streaming endpoint
         * 
         * @return builder
         * 
         */
        public Builder customHostNames(String... customHostNames) {
            return customHostNames(List.of(customHostNames));
        }

        /**
         * @param description The streaming endpoint description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The streaming endpoint description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param maxCacheAge Max cache age
         * 
         * @return builder
         * 
         */
        public Builder maxCacheAge(@Nullable Output<Double> maxCacheAge) {
            $.maxCacheAge = maxCacheAge;
            return this;
        }

        /**
         * @param maxCacheAge Max cache age
         * 
         * @return builder
         * 
         */
        public Builder maxCacheAge(Double maxCacheAge) {
            return maxCacheAge(Output.of(maxCacheAge));
        }

        /**
         * @param resourceGroupName The name of the resource group within the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param scaleUnits The number of scale units. Use the Scale operation to adjust this value.
         * 
         * @return builder
         * 
         */
        public Builder scaleUnits(Output<Integer> scaleUnits) {
            $.scaleUnits = scaleUnits;
            return this;
        }

        /**
         * @param scaleUnits The number of scale units. Use the Scale operation to adjust this value.
         * 
         * @return builder
         * 
         */
        public Builder scaleUnits(Integer scaleUnits) {
            return scaleUnits(Output.of(scaleUnits));
        }

        /**
         * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
         * 
         * @return builder
         * 
         */
        public Builder streamingEndpointName(@Nullable Output<String> streamingEndpointName) {
            $.streamingEndpointName = streamingEndpointName;
            return this;
        }

        /**
         * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
         * 
         * @return builder
         * 
         */
        public Builder streamingEndpointName(String streamingEndpointName) {
            return streamingEndpointName(Output.of(streamingEndpointName));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public StreamingEndpointArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.scaleUnits = Objects.requireNonNull($.scaleUnits, "expected parameter 'scaleUnits' to be non-null");
            return $;
        }
    }

}
