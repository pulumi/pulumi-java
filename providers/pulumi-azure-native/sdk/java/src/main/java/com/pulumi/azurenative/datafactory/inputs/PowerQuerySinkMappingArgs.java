// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.PowerQuerySinkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Map Power Query mashup query to sink dataset(s).
 * 
 */
public final class PowerQuerySinkMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final PowerQuerySinkMappingArgs Empty = new PowerQuerySinkMappingArgs();

    /**
     * List of sinks mapped to Power Query mashup query.
     * 
     */
    @Import(name="dataflowSinks")
      private final @Nullable Output<List<PowerQuerySinkArgs>> dataflowSinks;

    public Output<List<PowerQuerySinkArgs>> dataflowSinks() {
        return this.dataflowSinks == null ? Codegen.empty() : this.dataflowSinks;
    }

    /**
     * Name of the query in Power Query mashup document.
     * 
     */
    @Import(name="queryName")
      private final @Nullable Output<String> queryName;

    public Output<String> queryName() {
        return this.queryName == null ? Codegen.empty() : this.queryName;
    }

    public PowerQuerySinkMappingArgs(
        @Nullable Output<List<PowerQuerySinkArgs>> dataflowSinks,
        @Nullable Output<String> queryName) {
        this.dataflowSinks = dataflowSinks;
        this.queryName = queryName;
    }

    private PowerQuerySinkMappingArgs() {
        this.dataflowSinks = Codegen.empty();
        this.queryName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PowerQuerySinkMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<PowerQuerySinkArgs>> dataflowSinks;
        private @Nullable Output<String> queryName;

        public Builder() {
    	      // Empty
        }

        public Builder(PowerQuerySinkMappingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataflowSinks = defaults.dataflowSinks;
    	      this.queryName = defaults.queryName;
        }

        public Builder dataflowSinks(@Nullable Output<List<PowerQuerySinkArgs>> dataflowSinks) {
            this.dataflowSinks = dataflowSinks;
            return this;
        }
        public Builder dataflowSinks(@Nullable List<PowerQuerySinkArgs> dataflowSinks) {
            this.dataflowSinks = Codegen.ofNullable(dataflowSinks);
            return this;
        }
        public Builder dataflowSinks(PowerQuerySinkArgs... dataflowSinks) {
            return dataflowSinks(List.of(dataflowSinks));
        }
        public Builder queryName(@Nullable Output<String> queryName) {
            this.queryName = queryName;
            return this;
        }
        public Builder queryName(@Nullable String queryName) {
            this.queryName = Codegen.ofNullable(queryName);
            return this;
        }        public PowerQuerySinkMappingArgs build() {
            return new PowerQuerySinkMappingArgs(dataflowSinks, queryName);
        }
    }
}
