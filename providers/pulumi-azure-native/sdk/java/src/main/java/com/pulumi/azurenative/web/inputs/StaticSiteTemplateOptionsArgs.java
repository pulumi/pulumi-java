// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Template Options for the static site.
 * 
 */
public final class StaticSiteTemplateOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final StaticSiteTemplateOptionsArgs Empty = new StaticSiteTemplateOptionsArgs();

    /**
     * Description of the newly generated repository.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether or not the newly generated repository is a private repository. Defaults to false (i.e. public).
     * 
     */
    @Import(name="isPrivate")
    private @Nullable Output<Boolean> isPrivate;

    public Optional<Output<Boolean>> isPrivate() {
        return Optional.ofNullable(this.isPrivate);
    }

    /**
     * Owner of the newly generated repository.
     * 
     */
    @Import(name="owner")
    private @Nullable Output<String> owner;

    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    /**
     * Name of the newly generated repository.
     * 
     */
    @Import(name="repositoryName")
    private @Nullable Output<String> repositoryName;

    public Optional<Output<String>> repositoryName() {
        return Optional.ofNullable(this.repositoryName);
    }

    /**
     * URL of the template repository. The newly generated repository will be based on this one.
     * 
     */
    @Import(name="templateRepositoryUrl")
    private @Nullable Output<String> templateRepositoryUrl;

    public Optional<Output<String>> templateRepositoryUrl() {
        return Optional.ofNullable(this.templateRepositoryUrl);
    }

    private StaticSiteTemplateOptionsArgs() {}

    private StaticSiteTemplateOptionsArgs(StaticSiteTemplateOptionsArgs $) {
        this.description = $.description;
        this.isPrivate = $.isPrivate;
        this.owner = $.owner;
        this.repositoryName = $.repositoryName;
        this.templateRepositoryUrl = $.templateRepositoryUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StaticSiteTemplateOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StaticSiteTemplateOptionsArgs $;

        public Builder() {
            $ = new StaticSiteTemplateOptionsArgs();
        }

        public Builder(StaticSiteTemplateOptionsArgs defaults) {
            $ = new StaticSiteTemplateOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder isPrivate(@Nullable Output<Boolean> isPrivate) {
            $.isPrivate = isPrivate;
            return this;
        }

        public Builder isPrivate(Boolean isPrivate) {
            return isPrivate(Output.of(isPrivate));
        }

        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        public Builder repositoryName(@Nullable Output<String> repositoryName) {
            $.repositoryName = repositoryName;
            return this;
        }

        public Builder repositoryName(String repositoryName) {
            return repositoryName(Output.of(repositoryName));
        }

        public Builder templateRepositoryUrl(@Nullable Output<String> templateRepositoryUrl) {
            $.templateRepositoryUrl = templateRepositoryUrl;
            return this;
        }

        public Builder templateRepositoryUrl(String templateRepositoryUrl) {
            return templateRepositoryUrl(Output.of(templateRepositoryUrl));
        }

        public StaticSiteTemplateOptionsArgs build() {
            return $;
        }
    }

}
