// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resources.inputs;

import com.pulumi.azurenative.resources.enums.OnErrorDeploymentType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Deployment on error behavior.
 * 
 */
public final class OnErrorDeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnErrorDeploymentArgs Empty = new OnErrorDeploymentArgs();

    /**
     * The deployment to be used on error case.
     * 
     */
    @Import(name="deploymentName")
    private @Nullable Output<String> deploymentName;

    /**
     * @return The deployment to be used on error case.
     * 
     */
    public Optional<Output<String>> deploymentName() {
        return Optional.ofNullable(this.deploymentName);
    }

    /**
     * The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
     * 
     */
    @Import(name="type")
    private @Nullable Output<OnErrorDeploymentType> type;

    /**
     * @return The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
     * 
     */
    public Optional<Output<OnErrorDeploymentType>> type() {
        return Optional.ofNullable(this.type);
    }

    private OnErrorDeploymentArgs() {}

    private OnErrorDeploymentArgs(OnErrorDeploymentArgs $) {
        this.deploymentName = $.deploymentName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnErrorDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnErrorDeploymentArgs $;

        public Builder() {
            $ = new OnErrorDeploymentArgs();
        }

        public Builder(OnErrorDeploymentArgs defaults) {
            $ = new OnErrorDeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentName The deployment to be used on error case.
         * 
         * @return builder
         * 
         */
        public Builder deploymentName(@Nullable Output<String> deploymentName) {
            $.deploymentName = deploymentName;
            return this;
        }

        /**
         * @param deploymentName The deployment to be used on error case.
         * 
         * @return builder
         * 
         */
        public Builder deploymentName(String deploymentName) {
            return deploymentName(Output.of(deploymentName));
        }

        /**
         * @param type The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<OnErrorDeploymentType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
         * 
         * @return builder
         * 
         */
        public Builder type(OnErrorDeploymentType type) {
            return type(Output.of(type));
        }

        public OnErrorDeploymentArgs build() {
            return $;
        }
    }

}
