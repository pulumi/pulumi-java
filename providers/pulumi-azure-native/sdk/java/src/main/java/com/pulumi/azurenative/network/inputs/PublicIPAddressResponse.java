// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.DdosSettingsResponse;
import com.pulumi.azurenative.network.inputs.ExtendedLocationResponse;
import com.pulumi.azurenative.network.inputs.IPConfigurationResponse;
import com.pulumi.azurenative.network.inputs.IpTagResponse;
import com.pulumi.azurenative.network.inputs.NatGatewayResponse;
import com.pulumi.azurenative.network.inputs.PublicIPAddressDnsSettingsResponse;
import com.pulumi.azurenative.network.inputs.PublicIPAddressSkuResponse;
import com.pulumi.azurenative.network.inputs.SubResourceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Public IP address resource.
 * 
 */
public final class PublicIPAddressResponse extends com.pulumi.resources.InvokeArgs {

    public static final PublicIPAddressResponse Empty = new PublicIPAddressResponse();

    /**
     * The DDoS protection custom policy associated with the public IP address.
     * 
     */
    @Import(name="ddosSettings")
    private @Nullable DdosSettingsResponse ddosSettings;

    /**
     * @return The DDoS protection custom policy associated with the public IP address.
     * 
     */
    public Optional<DdosSettingsResponse> ddosSettings() {
        return Optional.ofNullable(this.ddosSettings);
    }

    /**
     * The FQDN of the DNS record associated with the public IP address.
     * 
     */
    @Import(name="dnsSettings")
    private @Nullable PublicIPAddressDnsSettingsResponse dnsSettings;

    /**
     * @return The FQDN of the DNS record associated with the public IP address.
     * 
     */
    public Optional<PublicIPAddressDnsSettingsResponse> dnsSettings() {
        return Optional.ofNullable(this.dnsSettings);
    }

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }

    /**
     * The extended location of the public ip address.
     * 
     */
    @Import(name="extendedLocation")
    private @Nullable ExtendedLocationResponse extendedLocation;

    /**
     * @return The extended location of the public ip address.
     * 
     */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The idle timeout of the public IP address.
     * 
     */
    @Import(name="idleTimeoutInMinutes")
    private @Nullable Integer idleTimeoutInMinutes;

    /**
     * @return The idle timeout of the public IP address.
     * 
     */
    public Optional<Integer> idleTimeoutInMinutes() {
        return Optional.ofNullable(this.idleTimeoutInMinutes);
    }

    /**
     * The IP address associated with the public IP address resource.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable String ipAddress;

    /**
     * @return The IP address associated with the public IP address resource.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * The IP configuration associated with the public IP address.
     * 
     */
    @Import(name="ipConfiguration", required=true)
    private IPConfigurationResponse ipConfiguration;

    /**
     * @return The IP configuration associated with the public IP address.
     * 
     */
    public IPConfigurationResponse ipConfiguration() {
        return this.ipConfiguration;
    }

    /**
     * The list of tags associated with the public IP address.
     * 
     */
    @Import(name="ipTags")
    private @Nullable List<IpTagResponse> ipTags;

    /**
     * @return The list of tags associated with the public IP address.
     * 
     */
    public Optional<List<IpTagResponse>> ipTags() {
        return Optional.ofNullable(this.ipTags);
    }

    /**
     * The linked public IP address of the public IP address resource.
     * 
     */
    @Import(name="linkedPublicIPAddress")
    private @Nullable PublicIPAddressResponse linkedPublicIPAddress;

    /**
     * @return The linked public IP address of the public IP address resource.
     * 
     */
    public Optional<PublicIPAddressResponse> linkedPublicIPAddress() {
        return Optional.ofNullable(this.linkedPublicIPAddress);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Migration phase of Public IP Address.
     * 
     */
    @Import(name="migrationPhase")
    private @Nullable String migrationPhase;

    /**
     * @return Migration phase of Public IP Address.
     * 
     */
    public Optional<String> migrationPhase() {
        return Optional.ofNullable(this.migrationPhase);
    }

    /**
     * Resource name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The NatGateway for the Public IP address.
     * 
     */
    @Import(name="natGateway")
    private @Nullable NatGatewayResponse natGateway;

    /**
     * @return The NatGateway for the Public IP address.
     * 
     */
    public Optional<NatGatewayResponse> natGateway() {
        return Optional.ofNullable(this.natGateway);
    }

    /**
     * The provisioning state of the public IP address resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return The provisioning state of the public IP address resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * The public IP address version.
     * 
     */
    @Import(name="publicIPAddressVersion")
    private @Nullable String publicIPAddressVersion;

    /**
     * @return The public IP address version.
     * 
     */
    public Optional<String> publicIPAddressVersion() {
        return Optional.ofNullable(this.publicIPAddressVersion);
    }

    /**
     * The public IP address allocation method.
     * 
     */
    @Import(name="publicIPAllocationMethod")
    private @Nullable String publicIPAllocationMethod;

    /**
     * @return The public IP address allocation method.
     * 
     */
    public Optional<String> publicIPAllocationMethod() {
        return Optional.ofNullable(this.publicIPAllocationMethod);
    }

    /**
     * The Public IP Prefix this Public IP Address should be allocated from.
     * 
     */
    @Import(name="publicIPPrefix")
    private @Nullable SubResourceResponse publicIPPrefix;

    /**
     * @return The Public IP Prefix this Public IP Address should be allocated from.
     * 
     */
    public Optional<SubResourceResponse> publicIPPrefix() {
        return Optional.ofNullable(this.publicIPPrefix);
    }

    /**
     * The resource GUID property of the public IP address resource.
     * 
     */
    @Import(name="resourceGuid", required=true)
    private String resourceGuid;

    /**
     * @return The resource GUID property of the public IP address resource.
     * 
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }

    /**
     * The service public IP address of the public IP address resource.
     * 
     */
    @Import(name="servicePublicIPAddress")
    private @Nullable PublicIPAddressResponse servicePublicIPAddress;

    /**
     * @return The service public IP address of the public IP address resource.
     * 
     */
    public Optional<PublicIPAddressResponse> servicePublicIPAddress() {
        return Optional.ofNullable(this.servicePublicIPAddress);
    }

    /**
     * The public IP address SKU.
     * 
     */
    @Import(name="sku")
    private @Nullable PublicIPAddressSkuResponse sku;

    /**
     * @return The public IP address SKU.
     * 
     */
    public Optional<PublicIPAddressSkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * A list of availability zones denoting the IP allocated for the resource needs to come from.
     * 
     */
    @Import(name="zones")
    private @Nullable List<String> zones;

    /**
     * @return A list of availability zones denoting the IP allocated for the resource needs to come from.
     * 
     */
    public Optional<List<String>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private PublicIPAddressResponse() {}

    private PublicIPAddressResponse(PublicIPAddressResponse $) {
        this.ddosSettings = $.ddosSettings;
        this.dnsSettings = $.dnsSettings;
        this.etag = $.etag;
        this.extendedLocation = $.extendedLocation;
        this.id = $.id;
        this.idleTimeoutInMinutes = $.idleTimeoutInMinutes;
        this.ipAddress = $.ipAddress;
        this.ipConfiguration = $.ipConfiguration;
        this.ipTags = $.ipTags;
        this.linkedPublicIPAddress = $.linkedPublicIPAddress;
        this.location = $.location;
        this.migrationPhase = $.migrationPhase;
        this.name = $.name;
        this.natGateway = $.natGateway;
        this.provisioningState = $.provisioningState;
        this.publicIPAddressVersion = $.publicIPAddressVersion;
        this.publicIPAllocationMethod = $.publicIPAllocationMethod;
        this.publicIPPrefix = $.publicIPPrefix;
        this.resourceGuid = $.resourceGuid;
        this.servicePublicIPAddress = $.servicePublicIPAddress;
        this.sku = $.sku;
        this.tags = $.tags;
        this.type = $.type;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicIPAddressResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicIPAddressResponse $;

        public Builder() {
            $ = new PublicIPAddressResponse();
        }

        public Builder(PublicIPAddressResponse defaults) {
            $ = new PublicIPAddressResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param ddosSettings The DDoS protection custom policy associated with the public IP address.
         * 
         * @return builder
         * 
         */
        public Builder ddosSettings(@Nullable DdosSettingsResponse ddosSettings) {
            $.ddosSettings = ddosSettings;
            return this;
        }

        /**
         * @param dnsSettings The FQDN of the DNS record associated with the public IP address.
         * 
         * @return builder
         * 
         */
        public Builder dnsSettings(@Nullable PublicIPAddressDnsSettingsResponse dnsSettings) {
            $.dnsSettings = dnsSettings;
            return this;
        }

        /**
         * @param etag A unique read-only string that changes whenever the resource is updated.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param extendedLocation The extended location of the public ip address.
         * 
         * @return builder
         * 
         */
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            $.extendedLocation = extendedLocation;
            return this;
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param idleTimeoutInMinutes The idle timeout of the public IP address.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutInMinutes(@Nullable Integer idleTimeoutInMinutes) {
            $.idleTimeoutInMinutes = idleTimeoutInMinutes;
            return this;
        }

        /**
         * @param ipAddress The IP address associated with the public IP address resource.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable String ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipConfiguration The IP configuration associated with the public IP address.
         * 
         * @return builder
         * 
         */
        public Builder ipConfiguration(IPConfigurationResponse ipConfiguration) {
            $.ipConfiguration = ipConfiguration;
            return this;
        }

        /**
         * @param ipTags The list of tags associated with the public IP address.
         * 
         * @return builder
         * 
         */
        public Builder ipTags(@Nullable List<IpTagResponse> ipTags) {
            $.ipTags = ipTags;
            return this;
        }

        /**
         * @param ipTags The list of tags associated with the public IP address.
         * 
         * @return builder
         * 
         */
        public Builder ipTags(IpTagResponse... ipTags) {
            return ipTags(List.of(ipTags));
        }

        /**
         * @param linkedPublicIPAddress The linked public IP address of the public IP address resource.
         * 
         * @return builder
         * 
         */
        public Builder linkedPublicIPAddress(@Nullable PublicIPAddressResponse linkedPublicIPAddress) {
            $.linkedPublicIPAddress = linkedPublicIPAddress;
            return this;
        }

        /**
         * @param location Resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        /**
         * @param migrationPhase Migration phase of Public IP Address.
         * 
         * @return builder
         * 
         */
        public Builder migrationPhase(@Nullable String migrationPhase) {
            $.migrationPhase = migrationPhase;
            return this;
        }

        /**
         * @param name Resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param natGateway The NatGateway for the Public IP address.
         * 
         * @return builder
         * 
         */
        public Builder natGateway(@Nullable NatGatewayResponse natGateway) {
            $.natGateway = natGateway;
            return this;
        }

        /**
         * @param provisioningState The provisioning state of the public IP address resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param publicIPAddressVersion The public IP address version.
         * 
         * @return builder
         * 
         */
        public Builder publicIPAddressVersion(@Nullable String publicIPAddressVersion) {
            $.publicIPAddressVersion = publicIPAddressVersion;
            return this;
        }

        /**
         * @param publicIPAllocationMethod The public IP address allocation method.
         * 
         * @return builder
         * 
         */
        public Builder publicIPAllocationMethod(@Nullable String publicIPAllocationMethod) {
            $.publicIPAllocationMethod = publicIPAllocationMethod;
            return this;
        }

        /**
         * @param publicIPPrefix The Public IP Prefix this Public IP Address should be allocated from.
         * 
         * @return builder
         * 
         */
        public Builder publicIPPrefix(@Nullable SubResourceResponse publicIPPrefix) {
            $.publicIPPrefix = publicIPPrefix;
            return this;
        }

        /**
         * @param resourceGuid The resource GUID property of the public IP address resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceGuid(String resourceGuid) {
            $.resourceGuid = resourceGuid;
            return this;
        }

        /**
         * @param servicePublicIPAddress The service public IP address of the public IP address resource.
         * 
         * @return builder
         * 
         */
        public Builder servicePublicIPAddress(@Nullable PublicIPAddressResponse servicePublicIPAddress) {
            $.servicePublicIPAddress = servicePublicIPAddress;
            return this;
        }

        /**
         * @param sku The public IP address SKU.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable PublicIPAddressSkuResponse sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param type Resource type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param zones A list of availability zones denoting the IP allocated for the resource needs to come from.
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable List<String> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones A list of availability zones denoting the IP allocated for the resource needs to come from.
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public PublicIPAddressResponse build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.ipConfiguration = Objects.requireNonNull($.ipConfiguration, "expected parameter 'ipConfiguration' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.resourceGuid = Objects.requireNonNull($.resourceGuid, "expected parameter 'resourceGuid' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
