// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Options for controlling the validation of TLS endpoints.
 * 
 */
public final class TlsValidationOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final TlsValidationOptionsResponse Empty = new TlsValidationOptionsResponse();

    /**
     * When set to &#39;true&#39; causes the certificate subject name validation to be skipped. Default is &#39;false&#39;.
     * 
     */
    @Import(name="ignoreHostname")
    private @Nullable String ignoreHostname;

    /**
     * @return When set to &#39;true&#39; causes the certificate subject name validation to be skipped. Default is &#39;false&#39;.
     * 
     */
    public Optional<String> ignoreHostname() {
        return Optional.ofNullable(this.ignoreHostname);
    }

    /**
     * When set to &#39;true&#39; causes the certificate chain trust validation to be skipped. Default is &#39;false&#39;.
     * 
     */
    @Import(name="ignoreSignature")
    private @Nullable String ignoreSignature;

    /**
     * @return When set to &#39;true&#39; causes the certificate chain trust validation to be skipped. Default is &#39;false&#39;.
     * 
     */
    public Optional<String> ignoreSignature() {
        return Optional.ofNullable(this.ignoreSignature);
    }

    private TlsValidationOptionsResponse() {}

    private TlsValidationOptionsResponse(TlsValidationOptionsResponse $) {
        this.ignoreHostname = $.ignoreHostname;
        this.ignoreSignature = $.ignoreSignature;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TlsValidationOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TlsValidationOptionsResponse $;

        public Builder() {
            $ = new TlsValidationOptionsResponse();
        }

        public Builder(TlsValidationOptionsResponse defaults) {
            $ = new TlsValidationOptionsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param ignoreHostname When set to &#39;true&#39; causes the certificate subject name validation to be skipped. Default is &#39;false&#39;.
         * 
         * @return builder
         * 
         */
        public Builder ignoreHostname(@Nullable String ignoreHostname) {
            $.ignoreHostname = ignoreHostname;
            return this;
        }

        /**
         * @param ignoreSignature When set to &#39;true&#39; causes the certificate chain trust validation to be skipped. Default is &#39;false&#39;.
         * 
         * @return builder
         * 
         */
        public Builder ignoreSignature(@Nullable String ignoreSignature) {
            $.ignoreSignature = ignoreSignature;
            return this;
        }

        public TlsValidationOptionsResponse build() {
            return $;
        }
    }

}
