// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.importexport.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Contains information about the delivery package being shipped by the customer to the Microsoft data center.
 * 
 */
public final class DeliveryPackageInformationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeliveryPackageInformationArgs Empty = new DeliveryPackageInformationArgs();

    /**
     * The name of the carrier that is used to ship the import or export drives.
     * 
     */
    @Import(name="carrierName", required=true)
    private Output<String> carrierName;

    public Output<String> carrierName() {
        return this.carrierName;
    }

    /**
     * The number of drives included in the package.
     * 
     */
    @Import(name="driveCount")
    private @Nullable Output<Double> driveCount;

    public Optional<Output<Double>> driveCount() {
        return Optional.ofNullable(this.driveCount);
    }

    /**
     * The date when the package is shipped.
     * 
     */
    @Import(name="shipDate")
    private @Nullable Output<String> shipDate;

    public Optional<Output<String>> shipDate() {
        return Optional.ofNullable(this.shipDate);
    }

    /**
     * The tracking number of the package.
     * 
     */
    @Import(name="trackingNumber", required=true)
    private Output<String> trackingNumber;

    public Output<String> trackingNumber() {
        return this.trackingNumber;
    }

    private DeliveryPackageInformationArgs() {}

    private DeliveryPackageInformationArgs(DeliveryPackageInformationArgs $) {
        this.carrierName = $.carrierName;
        this.driveCount = $.driveCount;
        this.shipDate = $.shipDate;
        this.trackingNumber = $.trackingNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryPackageInformationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryPackageInformationArgs $;

        public Builder() {
            $ = new DeliveryPackageInformationArgs();
        }

        public Builder(DeliveryPackageInformationArgs defaults) {
            $ = new DeliveryPackageInformationArgs(Objects.requireNonNull(defaults));
        }

        public Builder carrierName(Output<String> carrierName) {
            $.carrierName = carrierName;
            return this;
        }

        public Builder carrierName(String carrierName) {
            return carrierName(Output.of(carrierName));
        }

        public Builder driveCount(@Nullable Output<Double> driveCount) {
            $.driveCount = driveCount;
            return this;
        }

        public Builder driveCount(Double driveCount) {
            return driveCount(Output.of(driveCount));
        }

        public Builder shipDate(@Nullable Output<String> shipDate) {
            $.shipDate = shipDate;
            return this;
        }

        public Builder shipDate(String shipDate) {
            return shipDate(Output.of(shipDate));
        }

        public Builder trackingNumber(Output<String> trackingNumber) {
            $.trackingNumber = trackingNumber;
            return this;
        }

        public Builder trackingNumber(String trackingNumber) {
            return trackingNumber(Output.of(trackingNumber));
        }

        public DeliveryPackageInformationArgs build() {
            $.carrierName = Objects.requireNonNull($.carrierName, "expected parameter 'carrierName' to be non-null");
            $.trackingNumber = Objects.requireNonNull($.trackingNumber, "expected parameter 'trackingNumber' to be non-null");
            return $;
        }
    }

}
