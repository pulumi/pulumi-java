// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetManagementLockByScopeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagementLockByScopeArgs Empty = new GetManagementLockByScopeArgs();

    /**
     * The name of lock.
     * 
     */
    @Import(name="lockName", required=true)
    private Output<String> lockName;

    /**
     * @return The name of lock.
     * 
     */
    public Output<String> lockName() {
        return this.lockName;
    }

    /**
     * The scope for the lock.
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    /**
     * @return The scope for the lock.
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    private GetManagementLockByScopeArgs() {}

    private GetManagementLockByScopeArgs(GetManagementLockByScopeArgs $) {
        this.lockName = $.lockName;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagementLockByScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagementLockByScopeArgs $;

        public Builder() {
            $ = new GetManagementLockByScopeArgs();
        }

        public Builder(GetManagementLockByScopeArgs defaults) {
            $ = new GetManagementLockByScopeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param lockName The name of lock.
         * 
         * @return builder
         * 
         */
        public Builder lockName(Output<String> lockName) {
            $.lockName = lockName;
            return this;
        }

        /**
         * @param lockName The name of lock.
         * 
         * @return builder
         * 
         */
        public Builder lockName(String lockName) {
            return lockName(Output.of(lockName));
        }

        /**
         * @param scope The scope for the lock.
         * 
         * @return builder
         * 
         */
        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope for the lock.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public GetManagementLockByScopeArgs build() {
            $.lockName = Objects.requireNonNull($.lockName, "expected parameter 'lockName' to be non-null");
            $.scope = Objects.requireNonNull($.scope, "expected parameter 'scope' to be non-null");
            return $;
        }
    }

}
