// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.agfoodplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetExtensionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetExtensionArgs Empty = new GetExtensionArgs();

    /**
     * Id of extension resource.
     * 
     */
    @Import(name="extensionId", required=true)
    private Output<String> extensionId;

    /**
     * @return Id of extension resource.
     * 
     */
    public Output<String> extensionId() {
        return this.extensionId;
    }

    /**
     * FarmBeats resource name.
     * 
     */
    @Import(name="farmBeatsResourceName", required=true)
    private Output<String> farmBeatsResourceName;

    /**
     * @return FarmBeats resource name.
     * 
     */
    public Output<String> farmBeatsResourceName() {
        return this.farmBeatsResourceName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetExtensionArgs() {}

    private GetExtensionArgs(GetExtensionArgs $) {
        this.extensionId = $.extensionId;
        this.farmBeatsResourceName = $.farmBeatsResourceName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetExtensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetExtensionArgs $;

        public Builder() {
            $ = new GetExtensionArgs();
        }

        public Builder(GetExtensionArgs defaults) {
            $ = new GetExtensionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param extensionId Id of extension resource.
         * 
         * @return builder
         * 
         */
        public Builder extensionId(Output<String> extensionId) {
            $.extensionId = extensionId;
            return this;
        }

        /**
         * @param extensionId Id of extension resource.
         * 
         * @return builder
         * 
         */
        public Builder extensionId(String extensionId) {
            return extensionId(Output.of(extensionId));
        }

        /**
         * @param farmBeatsResourceName FarmBeats resource name.
         * 
         * @return builder
         * 
         */
        public Builder farmBeatsResourceName(Output<String> farmBeatsResourceName) {
            $.farmBeatsResourceName = farmBeatsResourceName;
            return this;
        }

        /**
         * @param farmBeatsResourceName FarmBeats resource name.
         * 
         * @return builder
         * 
         */
        public Builder farmBeatsResourceName(String farmBeatsResourceName) {
            return farmBeatsResourceName(Output.of(farmBeatsResourceName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetExtensionArgs build() {
            $.extensionId = Objects.requireNonNull($.extensionId, "expected parameter 'extensionId' to be non-null");
            $.farmBeatsResourceName = Objects.requireNonNull($.farmBeatsResourceName, "expected parameter 'farmBeatsResourceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
