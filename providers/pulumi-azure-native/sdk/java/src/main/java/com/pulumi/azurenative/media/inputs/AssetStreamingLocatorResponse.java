// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Properties of the Streaming Locator.
 * 
 */
public final class AssetStreamingLocatorResponse extends com.pulumi.resources.InvokeArgs {

    public static final AssetStreamingLocatorResponse Empty = new AssetStreamingLocatorResponse();

    /**
     * Asset Name.
     * 
     */
    @Import(name="assetName", required=true)
      private final String assetName;

    public String assetName() {
        return this.assetName;
    }

    /**
     * The creation time of the Streaming Locator.
     * 
     */
    @Import(name="created", required=true)
      private final String created;

    public String created() {
        return this.created;
    }

    /**
     * Name of the default ContentKeyPolicy used by this Streaming Locator.
     * 
     */
    @Import(name="defaultContentKeyPolicyName", required=true)
      private final String defaultContentKeyPolicyName;

    public String defaultContentKeyPolicyName() {
        return this.defaultContentKeyPolicyName;
    }

    /**
     * The end time of the Streaming Locator.
     * 
     */
    @Import(name="endTime", required=true)
      private final String endTime;

    public String endTime() {
        return this.endTime;
    }

    /**
     * Streaming Locator name.
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String name() {
        return this.name;
    }

    /**
     * The start time of the Streaming Locator.
     * 
     */
    @Import(name="startTime", required=true)
      private final String startTime;

    public String startTime() {
        return this.startTime;
    }

    /**
     * StreamingLocatorId of the Streaming Locator.
     * 
     */
    @Import(name="streamingLocatorId", required=true)
      private final String streamingLocatorId;

    public String streamingLocatorId() {
        return this.streamingLocatorId;
    }

    /**
     * Name of the Streaming Policy used by this Streaming Locator.
     * 
     */
    @Import(name="streamingPolicyName", required=true)
      private final String streamingPolicyName;

    public String streamingPolicyName() {
        return this.streamingPolicyName;
    }

    public AssetStreamingLocatorResponse(
        String assetName,
        String created,
        String defaultContentKeyPolicyName,
        String endTime,
        String name,
        String startTime,
        String streamingLocatorId,
        String streamingPolicyName) {
        this.assetName = Objects.requireNonNull(assetName, "expected parameter 'assetName' to be non-null");
        this.created = Objects.requireNonNull(created, "expected parameter 'created' to be non-null");
        this.defaultContentKeyPolicyName = Objects.requireNonNull(defaultContentKeyPolicyName, "expected parameter 'defaultContentKeyPolicyName' to be non-null");
        this.endTime = Objects.requireNonNull(endTime, "expected parameter 'endTime' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
        this.streamingLocatorId = Objects.requireNonNull(streamingLocatorId, "expected parameter 'streamingLocatorId' to be non-null");
        this.streamingPolicyName = Objects.requireNonNull(streamingPolicyName, "expected parameter 'streamingPolicyName' to be non-null");
    }

    private AssetStreamingLocatorResponse() {
        this.assetName = null;
        this.created = null;
        this.defaultContentKeyPolicyName = null;
        this.endTime = null;
        this.name = null;
        this.startTime = null;
        this.streamingLocatorId = null;
        this.streamingPolicyName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetStreamingLocatorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String assetName;
        private String created;
        private String defaultContentKeyPolicyName;
        private String endTime;
        private String name;
        private String startTime;
        private String streamingLocatorId;
        private String streamingPolicyName;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetStreamingLocatorResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetName = defaults.assetName;
    	      this.created = defaults.created;
    	      this.defaultContentKeyPolicyName = defaults.defaultContentKeyPolicyName;
    	      this.endTime = defaults.endTime;
    	      this.name = defaults.name;
    	      this.startTime = defaults.startTime;
    	      this.streamingLocatorId = defaults.streamingLocatorId;
    	      this.streamingPolicyName = defaults.streamingPolicyName;
        }

        public Builder assetName(String assetName) {
            this.assetName = Objects.requireNonNull(assetName);
            return this;
        }
        public Builder created(String created) {
            this.created = Objects.requireNonNull(created);
            return this;
        }
        public Builder defaultContentKeyPolicyName(String defaultContentKeyPolicyName) {
            this.defaultContentKeyPolicyName = Objects.requireNonNull(defaultContentKeyPolicyName);
            return this;
        }
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder streamingLocatorId(String streamingLocatorId) {
            this.streamingLocatorId = Objects.requireNonNull(streamingLocatorId);
            return this;
        }
        public Builder streamingPolicyName(String streamingPolicyName) {
            this.streamingPolicyName = Objects.requireNonNull(streamingPolicyName);
            return this;
        }        public AssetStreamingLocatorResponse build() {
            return new AssetStreamingLocatorResponse(assetName, created, defaultContentKeyPolicyName, endTime, name, startTime, streamingLocatorId, streamingPolicyName);
        }
    }
}
