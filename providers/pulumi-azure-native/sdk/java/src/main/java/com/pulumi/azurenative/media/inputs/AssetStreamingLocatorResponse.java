// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Properties of the Streaming Locator.
 * 
 */
public final class AssetStreamingLocatorResponse extends com.pulumi.resources.InvokeArgs {

    public static final AssetStreamingLocatorResponse Empty = new AssetStreamingLocatorResponse();

    /**
     * Asset Name.
     * 
     */
    @Import(name="assetName", required=true)
    private String assetName;

    /**
     * @return Asset Name.
     * 
     */
    public String assetName() {
        return this.assetName;
    }

    /**
     * The creation time of the Streaming Locator.
     * 
     */
    @Import(name="created", required=true)
    private String created;

    /**
     * @return The creation time of the Streaming Locator.
     * 
     */
    public String created() {
        return this.created;
    }

    /**
     * Name of the default ContentKeyPolicy used by this Streaming Locator.
     * 
     */
    @Import(name="defaultContentKeyPolicyName", required=true)
    private String defaultContentKeyPolicyName;

    /**
     * @return Name of the default ContentKeyPolicy used by this Streaming Locator.
     * 
     */
    public String defaultContentKeyPolicyName() {
        return this.defaultContentKeyPolicyName;
    }

    /**
     * The end time of the Streaming Locator.
     * 
     */
    @Import(name="endTime", required=true)
    private String endTime;

    /**
     * @return The end time of the Streaming Locator.
     * 
     */
    public String endTime() {
        return this.endTime;
    }

    /**
     * Streaming Locator name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Streaming Locator name.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The start time of the Streaming Locator.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    /**
     * @return The start time of the Streaming Locator.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * StreamingLocatorId of the Streaming Locator.
     * 
     */
    @Import(name="streamingLocatorId", required=true)
    private String streamingLocatorId;

    /**
     * @return StreamingLocatorId of the Streaming Locator.
     * 
     */
    public String streamingLocatorId() {
        return this.streamingLocatorId;
    }

    /**
     * Name of the Streaming Policy used by this Streaming Locator.
     * 
     */
    @Import(name="streamingPolicyName", required=true)
    private String streamingPolicyName;

    /**
     * @return Name of the Streaming Policy used by this Streaming Locator.
     * 
     */
    public String streamingPolicyName() {
        return this.streamingPolicyName;
    }

    private AssetStreamingLocatorResponse() {}

    private AssetStreamingLocatorResponse(AssetStreamingLocatorResponse $) {
        this.assetName = $.assetName;
        this.created = $.created;
        this.defaultContentKeyPolicyName = $.defaultContentKeyPolicyName;
        this.endTime = $.endTime;
        this.name = $.name;
        this.startTime = $.startTime;
        this.streamingLocatorId = $.streamingLocatorId;
        this.streamingPolicyName = $.streamingPolicyName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetStreamingLocatorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetStreamingLocatorResponse $;

        public Builder() {
            $ = new AssetStreamingLocatorResponse();
        }

        public Builder(AssetStreamingLocatorResponse defaults) {
            $ = new AssetStreamingLocatorResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param assetName Asset Name.
         * 
         * @return builder
         * 
         */
        public Builder assetName(String assetName) {
            $.assetName = assetName;
            return this;
        }

        /**
         * @param created The creation time of the Streaming Locator.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            $.created = created;
            return this;
        }

        /**
         * @param defaultContentKeyPolicyName Name of the default ContentKeyPolicy used by this Streaming Locator.
         * 
         * @return builder
         * 
         */
        public Builder defaultContentKeyPolicyName(String defaultContentKeyPolicyName) {
            $.defaultContentKeyPolicyName = defaultContentKeyPolicyName;
            return this;
        }

        /**
         * @param endTime The end time of the Streaming Locator.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param name Streaming Locator name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param startTime The start time of the Streaming Locator.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param streamingLocatorId StreamingLocatorId of the Streaming Locator.
         * 
         * @return builder
         * 
         */
        public Builder streamingLocatorId(String streamingLocatorId) {
            $.streamingLocatorId = streamingLocatorId;
            return this;
        }

        /**
         * @param streamingPolicyName Name of the Streaming Policy used by this Streaming Locator.
         * 
         * @return builder
         * 
         */
        public Builder streamingPolicyName(String streamingPolicyName) {
            $.streamingPolicyName = streamingPolicyName;
            return this;
        }

        public AssetStreamingLocatorResponse build() {
            $.assetName = Objects.requireNonNull($.assetName, "expected parameter 'assetName' to be non-null");
            $.created = Objects.requireNonNull($.created, "expected parameter 'created' to be non-null");
            $.defaultContentKeyPolicyName = Objects.requireNonNull($.defaultContentKeyPolicyName, "expected parameter 'defaultContentKeyPolicyName' to be non-null");
            $.endTime = Objects.requireNonNull($.endTime, "expected parameter 'endTime' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            $.streamingLocatorId = Objects.requireNonNull($.streamingLocatorId, "expected parameter 'streamingLocatorId' to be non-null");
            $.streamingPolicyName = Objects.requireNonNull($.streamingPolicyName, "expected parameter 'streamingPolicyName' to be non-null");
            return $;
        }
    }

}
