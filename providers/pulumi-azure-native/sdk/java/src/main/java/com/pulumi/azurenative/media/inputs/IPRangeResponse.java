// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The IP address range in the CIDR scheme.
 * 
 */
public final class IPRangeResponse extends com.pulumi.resources.InvokeArgs {

    public static final IPRangeResponse Empty = new IPRangeResponse();

    /**
     * The IP address.
     * 
     */
    @Import(name="address")
    private @Nullable String address;

    /**
     * @return The IP address.
     * 
     */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * The friendly name for the IP address range.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The friendly name for the IP address range.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The subnet mask prefix length (see CIDR notation).
     * 
     */
    @Import(name="subnetPrefixLength")
    private @Nullable Integer subnetPrefixLength;

    /**
     * @return The subnet mask prefix length (see CIDR notation).
     * 
     */
    public Optional<Integer> subnetPrefixLength() {
        return Optional.ofNullable(this.subnetPrefixLength);
    }

    private IPRangeResponse() {}

    private IPRangeResponse(IPRangeResponse $) {
        this.address = $.address;
        this.name = $.name;
        this.subnetPrefixLength = $.subnetPrefixLength;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IPRangeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IPRangeResponse $;

        public Builder() {
            $ = new IPRangeResponse();
        }

        public Builder(IPRangeResponse defaults) {
            $ = new IPRangeResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param address The IP address.
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable String address) {
            $.address = address;
            return this;
        }

        /**
         * @param name The friendly name for the IP address range.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param subnetPrefixLength The subnet mask prefix length (see CIDR notation).
         * 
         * @return builder
         * 
         */
        public Builder subnetPrefixLength(@Nullable Integer subnetPrefixLength) {
            $.subnetPrefixLength = subnetPrefixLength;
            return this;
        }

        public IPRangeResponse build() {
            return $;
        }
    }

}
