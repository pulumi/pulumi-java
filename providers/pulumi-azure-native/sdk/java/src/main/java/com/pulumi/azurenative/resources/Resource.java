// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resources;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.resources.ResourceArgs;
import com.pulumi.azurenative.resources.outputs.IdentityResponse;
import com.pulumi.azurenative.resources.outputs.PlanResponse;
import com.pulumi.azurenative.resources.outputs.SkuResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource information.
 * API Version: 2019-05-01.
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:resources:Resource myresource1 /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName} 
 * ```
 * 
 */
@ResourceType(type="azure-native:resources:Resource")
public class Resource extends com.pulumi.resources.CustomResource {
    /**
     * The identity of the resource.
     * 
     */
    @Export(name="identity", type=IdentityResponse.class, parameters={})
    private Output</* @Nullable */ IdentityResponse> identity;

    /**
     * @return The identity of the resource.
     * 
     */
    public Output<Optional<IdentityResponse>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The kind of the resource.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output</* @Nullable */ String> kind;

    /**
     * @return The kind of the resource.
     * 
     */
    public Output<Optional<String>> kind() {
        return Codegen.optional(this.kind);
    }
    /**
     * Resource location
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * ID of the resource that manages this resource.
     * 
     */
    @Export(name="managedBy", type=String.class, parameters={})
    private Output</* @Nullable */ String> managedBy;

    /**
     * @return ID of the resource that manages this resource.
     * 
     */
    public Output<Optional<String>> managedBy() {
        return Codegen.optional(this.managedBy);
    }
    /**
     * Resource name
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The plan of the resource.
     * 
     */
    @Export(name="plan", type=PlanResponse.class, parameters={})
    private Output</* @Nullable */ PlanResponse> plan;

    /**
     * @return The plan of the resource.
     * 
     */
    public Output<Optional<PlanResponse>> plan() {
        return Codegen.optional(this.plan);
    }
    /**
     * The resource properties.
     * 
     */
    @Export(name="properties", type=Object.class, parameters={})
    private Output<Object> properties;

    /**
     * @return The resource properties.
     * 
     */
    public Output<Object> properties() {
        return this.properties;
    }
    /**
     * The SKU of the resource.
     * 
     */
    @Export(name="sku", type=SkuResponse.class, parameters={})
    private Output</* @Nullable */ SkuResponse> sku;

    /**
     * @return The SKU of the resource.
     * 
     */
    public Output<Optional<SkuResponse>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * Resource tags
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Resource type
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Resource(String name) {
        this(name, ResourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Resource(String name, ResourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Resource(String name, ResourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:resources:Resource", name, args == null ? ResourceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Resource(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:resources:Resource", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:resources/v20151101:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20160201:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20160701:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20160901:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20170510:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20180201:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20180501:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20190301:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20190501:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20190510:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20190701:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20190801:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20191001:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20200601:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20200801:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20201001:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20210101:Resource").build()),
                Output.of(Alias.builder().type("azure-native:resources/v20210401:Resource").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Resource get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Resource(name, id, options);
    }
}
