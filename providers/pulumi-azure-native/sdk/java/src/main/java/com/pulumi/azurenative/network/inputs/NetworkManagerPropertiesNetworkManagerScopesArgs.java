// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Scope of Network Manager.
 * 
 */
public final class NetworkManagerPropertiesNetworkManagerScopesArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkManagerPropertiesNetworkManagerScopesArgs Empty = new NetworkManagerPropertiesNetworkManagerScopesArgs();

    /**
     * List of management groups.
     * 
     */
    @Import(name="managementGroups")
    private @Nullable Output<List<String>> managementGroups;

    /**
     * @return List of management groups.
     * 
     */
    public Optional<Output<List<String>>> managementGroups() {
        return Optional.ofNullable(this.managementGroups);
    }

    /**
     * List of subscriptions.
     * 
     */
    @Import(name="subscriptions")
    private @Nullable Output<List<String>> subscriptions;

    /**
     * @return List of subscriptions.
     * 
     */
    public Optional<Output<List<String>>> subscriptions() {
        return Optional.ofNullable(this.subscriptions);
    }

    private NetworkManagerPropertiesNetworkManagerScopesArgs() {}

    private NetworkManagerPropertiesNetworkManagerScopesArgs(NetworkManagerPropertiesNetworkManagerScopesArgs $) {
        this.managementGroups = $.managementGroups;
        this.subscriptions = $.subscriptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagerPropertiesNetworkManagerScopesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagerPropertiesNetworkManagerScopesArgs $;

        public Builder() {
            $ = new NetworkManagerPropertiesNetworkManagerScopesArgs();
        }

        public Builder(NetworkManagerPropertiesNetworkManagerScopesArgs defaults) {
            $ = new NetworkManagerPropertiesNetworkManagerScopesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managementGroups List of management groups.
         * 
         * @return builder
         * 
         */
        public Builder managementGroups(@Nullable Output<List<String>> managementGroups) {
            $.managementGroups = managementGroups;
            return this;
        }

        /**
         * @param managementGroups List of management groups.
         * 
         * @return builder
         * 
         */
        public Builder managementGroups(List<String> managementGroups) {
            return managementGroups(Output.of(managementGroups));
        }

        /**
         * @param managementGroups List of management groups.
         * 
         * @return builder
         * 
         */
        public Builder managementGroups(String... managementGroups) {
            return managementGroups(List.of(managementGroups));
        }

        /**
         * @param subscriptions List of subscriptions.
         * 
         * @return builder
         * 
         */
        public Builder subscriptions(@Nullable Output<List<String>> subscriptions) {
            $.subscriptions = subscriptions;
            return this;
        }

        /**
         * @param subscriptions List of subscriptions.
         * 
         * @return builder
         * 
         */
        public Builder subscriptions(List<String> subscriptions) {
            return subscriptions(Output.of(subscriptions));
        }

        /**
         * @param subscriptions List of subscriptions.
         * 
         * @return builder
         * 
         */
        public Builder subscriptions(String... subscriptions) {
            return subscriptions(List.of(subscriptions));
        }

        public NetworkManagerPropertiesNetworkManagerScopesArgs build() {
            return $;
        }
    }

}
