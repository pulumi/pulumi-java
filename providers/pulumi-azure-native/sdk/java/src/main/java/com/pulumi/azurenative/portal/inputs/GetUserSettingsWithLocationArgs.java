// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.portal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetUserSettingsWithLocationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUserSettingsWithLocationArgs Empty = new GetUserSettingsWithLocationArgs();

    /**
     * The provider location
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The provider location
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The name of the user settings
     * 
     */
    @Import(name="userSettingsName", required=true)
    private Output<String> userSettingsName;

    /**
     * @return The name of the user settings
     * 
     */
    public Output<String> userSettingsName() {
        return this.userSettingsName;
    }

    private GetUserSettingsWithLocationArgs() {}

    private GetUserSettingsWithLocationArgs(GetUserSettingsWithLocationArgs $) {
        this.location = $.location;
        this.userSettingsName = $.userSettingsName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserSettingsWithLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserSettingsWithLocationArgs $;

        public Builder() {
            $ = new GetUserSettingsWithLocationArgs();
        }

        public Builder(GetUserSettingsWithLocationArgs defaults) {
            $ = new GetUserSettingsWithLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The provider location
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The provider location
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param userSettingsName The name of the user settings
         * 
         * @return builder
         * 
         */
        public Builder userSettingsName(Output<String> userSettingsName) {
            $.userSettingsName = userSettingsName;
            return this;
        }

        /**
         * @param userSettingsName The name of the user settings
         * 
         * @return builder
         * 
         */
        public Builder userSettingsName(String userSettingsName) {
            return userSettingsName(Output.of(userSettingsName));
        }

        public GetUserSettingsWithLocationArgs build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.userSettingsName = Objects.requireNonNull($.userSettingsName, "expected parameter 'userSettingsName' to be non-null");
            return $;
        }
    }

}
