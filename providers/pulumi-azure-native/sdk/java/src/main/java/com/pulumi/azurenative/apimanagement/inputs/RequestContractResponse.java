// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.inputs;

import com.pulumi.azurenative.apimanagement.inputs.ParameterContractResponse;
import com.pulumi.azurenative.apimanagement.inputs.RepresentationContractResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Operation request details.
 * 
 */
public final class RequestContractResponse extends com.pulumi.resources.InvokeArgs {

    public static final RequestContractResponse Empty = new RequestContractResponse();

    /**
     * Operation request description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Collection of operation request headers.
     * 
     */
    @Import(name="headers")
    private @Nullable List<ParameterContractResponse> headers;

    public Optional<List<ParameterContractResponse>> headers() {
        return Optional.ofNullable(this.headers);
    }

    /**
     * Collection of operation request query parameters.
     * 
     */
    @Import(name="queryParameters")
    private @Nullable List<ParameterContractResponse> queryParameters;

    public Optional<List<ParameterContractResponse>> queryParameters() {
        return Optional.ofNullable(this.queryParameters);
    }

    /**
     * Collection of operation request representations.
     * 
     */
    @Import(name="representations")
    private @Nullable List<RepresentationContractResponse> representations;

    public Optional<List<RepresentationContractResponse>> representations() {
        return Optional.ofNullable(this.representations);
    }

    private RequestContractResponse() {}

    private RequestContractResponse(RequestContractResponse $) {
        this.description = $.description;
        this.headers = $.headers;
        this.queryParameters = $.queryParameters;
        this.representations = $.representations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestContractResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestContractResponse $;

        public Builder() {
            $ = new RequestContractResponse();
        }

        public Builder(RequestContractResponse defaults) {
            $ = new RequestContractResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder headers(@Nullable List<ParameterContractResponse> headers) {
            $.headers = headers;
            return this;
        }

        public Builder headers(ParameterContractResponse... headers) {
            return headers(List.of(headers));
        }

        public Builder queryParameters(@Nullable List<ParameterContractResponse> queryParameters) {
            $.queryParameters = queryParameters;
            return this;
        }

        public Builder queryParameters(ParameterContractResponse... queryParameters) {
            return queryParameters(List.of(queryParameters));
        }

        public Builder representations(@Nullable List<RepresentationContractResponse> representations) {
            $.representations = representations;
            return this;
        }

        public Builder representations(RepresentationContractResponse... representations) {
            return representations(List.of(representations));
        }

        public RequestContractResponse build() {
            return $;
        }
    }

}
