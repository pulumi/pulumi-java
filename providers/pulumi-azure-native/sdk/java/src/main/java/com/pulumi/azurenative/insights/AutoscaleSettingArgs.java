// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights;

import com.pulumi.azurenative.insights.inputs.AutoscaleNotificationArgs;
import com.pulumi.azurenative.insights.inputs.AutoscaleProfileArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutoscaleSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoscaleSettingArgs Empty = new AutoscaleSettingArgs();

    /**
     * The autoscale setting name.
     * 
     */
    @Import(name="autoscaleSettingName")
    private @Nullable Output<String> autoscaleSettingName;

    public Optional<Output<String>> autoscaleSettingName() {
        return Optional.ofNullable(this.autoscaleSettingName);
    }

    /**
     * the enabled flag. Specifies whether automatic scaling is enabled for the resource. The default value is &#39;true&#39;.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * the name of the autoscale setting.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * the collection of notifications.
     * 
     */
    @Import(name="notifications")
    private @Nullable Output<List<AutoscaleNotificationArgs>> notifications;

    public Optional<Output<List<AutoscaleNotificationArgs>>> notifications() {
        return Optional.ofNullable(this.notifications);
    }

    /**
     * the collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified.
     * 
     */
    @Import(name="profiles", required=true)
    private Output<List<AutoscaleProfileArgs>> profiles;

    public Output<List<AutoscaleProfileArgs>> profiles() {
        return this.profiles;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * the location of the resource that the autoscale setting should be added to.
     * 
     */
    @Import(name="targetResourceLocation")
    private @Nullable Output<String> targetResourceLocation;

    public Optional<Output<String>> targetResourceLocation() {
        return Optional.ofNullable(this.targetResourceLocation);
    }

    /**
     * the resource identifier of the resource that the autoscale setting should be added to.
     * 
     */
    @Import(name="targetResourceUri")
    private @Nullable Output<String> targetResourceUri;

    public Optional<Output<String>> targetResourceUri() {
        return Optional.ofNullable(this.targetResourceUri);
    }

    private AutoscaleSettingArgs() {}

    private AutoscaleSettingArgs(AutoscaleSettingArgs $) {
        this.autoscaleSettingName = $.autoscaleSettingName;
        this.enabled = $.enabled;
        this.location = $.location;
        this.name = $.name;
        this.notifications = $.notifications;
        this.profiles = $.profiles;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.targetResourceLocation = $.targetResourceLocation;
        this.targetResourceUri = $.targetResourceUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoscaleSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoscaleSettingArgs $;

        public Builder() {
            $ = new AutoscaleSettingArgs();
        }

        public Builder(AutoscaleSettingArgs defaults) {
            $ = new AutoscaleSettingArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoscaleSettingName(@Nullable Output<String> autoscaleSettingName) {
            $.autoscaleSettingName = autoscaleSettingName;
            return this;
        }

        public Builder autoscaleSettingName(String autoscaleSettingName) {
            return autoscaleSettingName(Output.of(autoscaleSettingName));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notifications(@Nullable Output<List<AutoscaleNotificationArgs>> notifications) {
            $.notifications = notifications;
            return this;
        }

        public Builder notifications(List<AutoscaleNotificationArgs> notifications) {
            return notifications(Output.of(notifications));
        }

        public Builder notifications(AutoscaleNotificationArgs... notifications) {
            return notifications(List.of(notifications));
        }

        public Builder profiles(Output<List<AutoscaleProfileArgs>> profiles) {
            $.profiles = profiles;
            return this;
        }

        public Builder profiles(List<AutoscaleProfileArgs> profiles) {
            return profiles(Output.of(profiles));
        }

        public Builder profiles(AutoscaleProfileArgs... profiles) {
            return profiles(List.of(profiles));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder targetResourceLocation(@Nullable Output<String> targetResourceLocation) {
            $.targetResourceLocation = targetResourceLocation;
            return this;
        }

        public Builder targetResourceLocation(String targetResourceLocation) {
            return targetResourceLocation(Output.of(targetResourceLocation));
        }

        public Builder targetResourceUri(@Nullable Output<String> targetResourceUri) {
            $.targetResourceUri = targetResourceUri;
            return this;
        }

        public Builder targetResourceUri(String targetResourceUri) {
            return targetResourceUri(Output.of(targetResourceUri));
        }

        public AutoscaleSettingArgs build() {
            $.enabled = Codegen.booleanProp("enabled").output().arg($.enabled).def(true).getNullable();
            $.profiles = Objects.requireNonNull($.profiles, "expected parameter 'profiles' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
