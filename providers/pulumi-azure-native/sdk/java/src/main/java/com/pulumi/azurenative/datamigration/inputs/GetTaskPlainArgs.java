// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTaskPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTaskPlainArgs Empty = new GetTaskPlainArgs();

    /**
     * Expand the response
     * 
     */
    @Import(name="expand")
    private @Nullable String expand;

    /**
     * @return Expand the response
     * 
     */
    public Optional<String> expand() {
        return Optional.ofNullable(this.expand);
    }

    /**
     * Name of the resource group
     * 
     */
    @Import(name="groupName", required=true)
    private String groupName;

    /**
     * @return Name of the resource group
     * 
     */
    public String groupName() {
        return this.groupName;
    }

    /**
     * Name of the project
     * 
     */
    @Import(name="projectName", required=true)
    private String projectName;

    /**
     * @return Name of the project
     * 
     */
    public String projectName() {
        return this.projectName;
    }

    /**
     * Name of the service
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    /**
     * @return Name of the service
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    /**
     * Name of the Task
     * 
     */
    @Import(name="taskName", required=true)
    private String taskName;

    /**
     * @return Name of the Task
     * 
     */
    public String taskName() {
        return this.taskName;
    }

    private GetTaskPlainArgs() {}

    private GetTaskPlainArgs(GetTaskPlainArgs $) {
        this.expand = $.expand;
        this.groupName = $.groupName;
        this.projectName = $.projectName;
        this.serviceName = $.serviceName;
        this.taskName = $.taskName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTaskPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTaskPlainArgs $;

        public Builder() {
            $ = new GetTaskPlainArgs();
        }

        public Builder(GetTaskPlainArgs defaults) {
            $ = new GetTaskPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expand Expand the response
         * 
         * @return builder
         * 
         */
        public Builder expand(@Nullable String expand) {
            $.expand = expand;
            return this;
        }

        /**
         * @param groupName Name of the resource group
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param projectName Name of the project
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param serviceName Name of the service
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param taskName Name of the Task
         * 
         * @return builder
         * 
         */
        public Builder taskName(String taskName) {
            $.taskName = taskName;
            return this;
        }

        public GetTaskPlainArgs build() {
            $.groupName = Objects.requireNonNull($.groupName, "expected parameter 'groupName' to be non-null");
            $.projectName = Objects.requireNonNull($.projectName, "expected parameter 'projectName' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            $.taskName = Objects.requireNonNull($.taskName, "expected parameter 'taskName' to be non-null");
            return $;
        }
    }

}
