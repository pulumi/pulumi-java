// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devices.inputs;

import com.pulumi.azurenative.devices.inputs.CloudToDevicePropertiesResponse;
import com.pulumi.azurenative.devices.inputs.EventHubPropertiesResponse;
import com.pulumi.azurenative.devices.inputs.IotHubLocationDescriptionResponse;
import com.pulumi.azurenative.devices.inputs.IpFilterRuleResponse;
import com.pulumi.azurenative.devices.inputs.MessagingEndpointPropertiesResponse;
import com.pulumi.azurenative.devices.inputs.NetworkRuleSetPropertiesResponse;
import com.pulumi.azurenative.devices.inputs.PrivateEndpointConnectionResponse;
import com.pulumi.azurenative.devices.inputs.RoutingPropertiesResponse;
import com.pulumi.azurenative.devices.inputs.SharedAccessSignatureAuthorizationRuleResponse;
import com.pulumi.azurenative.devices.inputs.StorageEndpointPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties of an IoT hub.
 * 
 */
public final class IotHubPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final IotHubPropertiesResponse Empty = new IotHubPropertiesResponse();

    /**
     * The shared access policies you can use to secure a connection to the IoT hub.
     * 
     */
    @Import(name="authorizationPolicies")
    private @Nullable List<SharedAccessSignatureAuthorizationRuleResponse> authorizationPolicies;

    public Optional<List<SharedAccessSignatureAuthorizationRuleResponse>> authorizationPolicies() {
        return Optional.ofNullable(this.authorizationPolicies);
    }

    /**
     * The IoT hub cloud-to-device messaging properties.
     * 
     */
    @Import(name="cloudToDevice")
    private @Nullable CloudToDevicePropertiesResponse cloudToDevice;

    public Optional<CloudToDevicePropertiesResponse> cloudToDevice() {
        return Optional.ofNullable(this.cloudToDevice);
    }

    /**
     * IoT hub comments.
     * 
     */
    @Import(name="comments")
    private @Nullable String comments;

    public Optional<String> comments() {
        return Optional.ofNullable(this.comments);
    }

    /**
     * If True, file upload notifications are enabled.
     * 
     */
    @Import(name="enableFileUploadNotifications")
    private @Nullable Boolean enableFileUploadNotifications;

    public Optional<Boolean> enableFileUploadNotifications() {
        return Optional.ofNullable(this.enableFileUploadNotifications);
    }

    /**
     * The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.
     * 
     */
    @Import(name="eventHubEndpoints")
    private @Nullable Map<String,EventHubPropertiesResponse> eventHubEndpoints;

    public Optional<Map<String,EventHubPropertiesResponse>> eventHubEndpoints() {
        return Optional.ofNullable(this.eventHubEndpoints);
    }

    /**
     * The capabilities and features enabled for the IoT hub.
     * 
     */
    @Import(name="features")
    private @Nullable String features;

    public Optional<String> features() {
        return Optional.ofNullable(this.features);
    }

    /**
     * The name of the host.
     * 
     */
    @Import(name="hostName", required=true)
    private String hostName;

    public String hostName() {
        return this.hostName;
    }

    /**
     * The IP filter rules.
     * 
     */
    @Import(name="ipFilterRules")
    private @Nullable List<IpFilterRuleResponse> ipFilterRules;

    public Optional<List<IpFilterRuleResponse>> ipFilterRules() {
        return Optional.ofNullable(this.ipFilterRules);
    }

    /**
     * Primary and secondary location for iot hub
     * 
     */
    @Import(name="locations", required=true)
    private List<IotHubLocationDescriptionResponse> locations;

    public List<IotHubLocationDescriptionResponse> locations() {
        return this.locations;
    }

    /**
     * The messaging endpoint properties for the file upload notification queue.
     * 
     */
    @Import(name="messagingEndpoints")
    private @Nullable Map<String,MessagingEndpointPropertiesResponse> messagingEndpoints;

    public Optional<Map<String,MessagingEndpointPropertiesResponse>> messagingEndpoints() {
        return Optional.ofNullable(this.messagingEndpoints);
    }

    /**
     * Specifies the minimum TLS version to support for this hub. Can be set to &#34;1.2&#34; to have clients that use a TLS version below 1.2 to be rejected.
     * 
     */
    @Import(name="minTlsVersion")
    private @Nullable String minTlsVersion;

    public Optional<String> minTlsVersion() {
        return Optional.ofNullable(this.minTlsVersion);
    }

    /**
     * Network Rule Set Properties of IotHub
     * 
     */
    @Import(name="networkRuleSets")
    private @Nullable NetworkRuleSetPropertiesResponse networkRuleSets;

    public Optional<NetworkRuleSetPropertiesResponse> networkRuleSets() {
        return Optional.ofNullable(this.networkRuleSets);
    }

    /**
     * Private endpoint connections created on this IotHub
     * 
     */
    @Import(name="privateEndpointConnections")
    private @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;

    public Optional<List<PrivateEndpointConnectionResponse>> privateEndpointConnections() {
        return Optional.ofNullable(this.privateEndpointConnections);
    }

    /**
     * The provisioning state.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Whether requests from Public Network are allowed
     * 
     */
    @Import(name="publicNetworkAccess")
    private @Nullable String publicNetworkAccess;

    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }

    /**
     * The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
     * 
     */
    @Import(name="routing")
    private @Nullable RoutingPropertiesResponse routing;

    public Optional<RoutingPropertiesResponse> routing() {
        return Optional.ofNullable(this.routing);
    }

    /**
     * The hub state.
     * 
     */
    @Import(name="state", required=true)
    private String state;

    public String state() {
        return this.state;
    }

    /**
     * The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
     * 
     */
    @Import(name="storageEndpoints")
    private @Nullable Map<String,StorageEndpointPropertiesResponse> storageEndpoints;

    public Optional<Map<String,StorageEndpointPropertiesResponse>> storageEndpoints() {
        return Optional.ofNullable(this.storageEndpoints);
    }

    private IotHubPropertiesResponse() {}

    private IotHubPropertiesResponse(IotHubPropertiesResponse $) {
        this.authorizationPolicies = $.authorizationPolicies;
        this.cloudToDevice = $.cloudToDevice;
        this.comments = $.comments;
        this.enableFileUploadNotifications = $.enableFileUploadNotifications;
        this.eventHubEndpoints = $.eventHubEndpoints;
        this.features = $.features;
        this.hostName = $.hostName;
        this.ipFilterRules = $.ipFilterRules;
        this.locations = $.locations;
        this.messagingEndpoints = $.messagingEndpoints;
        this.minTlsVersion = $.minTlsVersion;
        this.networkRuleSets = $.networkRuleSets;
        this.privateEndpointConnections = $.privateEndpointConnections;
        this.provisioningState = $.provisioningState;
        this.publicNetworkAccess = $.publicNetworkAccess;
        this.routing = $.routing;
        this.state = $.state;
        this.storageEndpoints = $.storageEndpoints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IotHubPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IotHubPropertiesResponse $;

        public Builder() {
            $ = new IotHubPropertiesResponse();
        }

        public Builder(IotHubPropertiesResponse defaults) {
            $ = new IotHubPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder authorizationPolicies(@Nullable List<SharedAccessSignatureAuthorizationRuleResponse> authorizationPolicies) {
            $.authorizationPolicies = authorizationPolicies;
            return this;
        }

        public Builder authorizationPolicies(SharedAccessSignatureAuthorizationRuleResponse... authorizationPolicies) {
            return authorizationPolicies(List.of(authorizationPolicies));
        }

        public Builder cloudToDevice(@Nullable CloudToDevicePropertiesResponse cloudToDevice) {
            $.cloudToDevice = cloudToDevice;
            return this;
        }

        public Builder comments(@Nullable String comments) {
            $.comments = comments;
            return this;
        }

        public Builder enableFileUploadNotifications(@Nullable Boolean enableFileUploadNotifications) {
            $.enableFileUploadNotifications = enableFileUploadNotifications;
            return this;
        }

        public Builder eventHubEndpoints(@Nullable Map<String,EventHubPropertiesResponse> eventHubEndpoints) {
            $.eventHubEndpoints = eventHubEndpoints;
            return this;
        }

        public Builder features(@Nullable String features) {
            $.features = features;
            return this;
        }

        public Builder hostName(String hostName) {
            $.hostName = hostName;
            return this;
        }

        public Builder ipFilterRules(@Nullable List<IpFilterRuleResponse> ipFilterRules) {
            $.ipFilterRules = ipFilterRules;
            return this;
        }

        public Builder ipFilterRules(IpFilterRuleResponse... ipFilterRules) {
            return ipFilterRules(List.of(ipFilterRules));
        }

        public Builder locations(List<IotHubLocationDescriptionResponse> locations) {
            $.locations = locations;
            return this;
        }

        public Builder locations(IotHubLocationDescriptionResponse... locations) {
            return locations(List.of(locations));
        }

        public Builder messagingEndpoints(@Nullable Map<String,MessagingEndpointPropertiesResponse> messagingEndpoints) {
            $.messagingEndpoints = messagingEndpoints;
            return this;
        }

        public Builder minTlsVersion(@Nullable String minTlsVersion) {
            $.minTlsVersion = minTlsVersion;
            return this;
        }

        public Builder networkRuleSets(@Nullable NetworkRuleSetPropertiesResponse networkRuleSets) {
            $.networkRuleSets = networkRuleSets;
            return this;
        }

        public Builder privateEndpointConnections(@Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            $.privateEndpointConnections = privateEndpointConnections;
            return this;
        }

        public Builder privateEndpointConnections(PrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            $.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        public Builder routing(@Nullable RoutingPropertiesResponse routing) {
            $.routing = routing;
            return this;
        }

        public Builder state(String state) {
            $.state = state;
            return this;
        }

        public Builder storageEndpoints(@Nullable Map<String,StorageEndpointPropertiesResponse> storageEndpoints) {
            $.storageEndpoints = storageEndpoints;
            return this;
        }

        public IotHubPropertiesResponse build() {
            $.hostName = Objects.requireNonNull($.hostName, "expected parameter 'hostName' to be non-null");
            $.locations = Objects.requireNonNull($.locations, "expected parameter 'locations' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.state = Objects.requireNonNull($.state, "expected parameter 'state' to be non-null");
            return $;
        }
    }

}
