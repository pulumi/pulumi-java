// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deploymentmanager.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Identity for the resource.
 * 
 */
public final class IdentityResponse extends com.pulumi.resources.InvokeArgs {

    public static final IdentityResponse Empty = new IdentityResponse();

    /**
     * The list of identities.
     * 
     */
    @Import(name="identityIds", required=true)
    private List<String> identityIds;

    /**
     * @return The list of identities.
     * 
     */
    public List<String> identityIds() {
        return this.identityIds;
    }

    /**
     * The identity type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The identity type.
     * 
     */
    public String type() {
        return this.type;
    }

    private IdentityResponse() {}

    private IdentityResponse(IdentityResponse $) {
        this.identityIds = $.identityIds;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentityResponse $;

        public Builder() {
            $ = new IdentityResponse();
        }

        public Builder(IdentityResponse defaults) {
            $ = new IdentityResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param identityIds The list of identities.
         * 
         * @return builder
         * 
         */
        public Builder identityIds(List<String> identityIds) {
            $.identityIds = identityIds;
            return this;
        }

        /**
         * @param identityIds The list of identities.
         * 
         * @return builder
         * 
         */
        public Builder identityIds(String... identityIds) {
            return identityIds(List.of(identityIds));
        }

        /**
         * @param type The identity type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public IdentityResponse build() {
            $.identityIds = Objects.requireNonNull($.identityIds, "expected parameter 'identityIds' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
