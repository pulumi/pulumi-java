// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge;

import com.pulumi.azurenative.databoxedge.inputs.IoTDeviceInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IoTAddonArgs extends com.pulumi.resources.ResourceArgs {

    public static final IoTAddonArgs Empty = new IoTAddonArgs();

    /**
     * The addon name.
     * 
     */
    @Import(name="addonName")
    private @Nullable Output<String> addonName;

    public Optional<Output<String>> addonName() {
        return Optional.ofNullable(this.addonName);
    }

    /**
     * The device name.
     * 
     */
    @Import(name="deviceName", required=true)
    private Output<String> deviceName;

    public Output<String> deviceName() {
        return this.deviceName;
    }

    /**
     * IoT device metadata to which appliance needs to be connected.
     * 
     */
    @Import(name="ioTDeviceDetails", required=true)
    private Output<IoTDeviceInfoArgs> ioTDeviceDetails;

    public Output<IoTDeviceInfoArgs> ioTDeviceDetails() {
        return this.ioTDeviceDetails;
    }

    /**
     * IoT edge device to which the IoT Addon needs to be configured.
     * 
     */
    @Import(name="ioTEdgeDeviceDetails", required=true)
    private Output<IoTDeviceInfoArgs> ioTEdgeDeviceDetails;

    public Output<IoTDeviceInfoArgs> ioTEdgeDeviceDetails() {
        return this.ioTEdgeDeviceDetails;
    }

    /**
     * Addon type.
     * Expected value is &#39;IotEdge&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    public Output<String> kind() {
        return this.kind;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The role name.
     * 
     */
    @Import(name="roleName", required=true)
    private Output<String> roleName;

    public Output<String> roleName() {
        return this.roleName;
    }

    private IoTAddonArgs() {}

    private IoTAddonArgs(IoTAddonArgs $) {
        this.addonName = $.addonName;
        this.deviceName = $.deviceName;
        this.ioTDeviceDetails = $.ioTDeviceDetails;
        this.ioTEdgeDeviceDetails = $.ioTEdgeDeviceDetails;
        this.kind = $.kind;
        this.resourceGroupName = $.resourceGroupName;
        this.roleName = $.roleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IoTAddonArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IoTAddonArgs $;

        public Builder() {
            $ = new IoTAddonArgs();
        }

        public Builder(IoTAddonArgs defaults) {
            $ = new IoTAddonArgs(Objects.requireNonNull(defaults));
        }

        public Builder addonName(@Nullable Output<String> addonName) {
            $.addonName = addonName;
            return this;
        }

        public Builder addonName(String addonName) {
            return addonName(Output.of(addonName));
        }

        public Builder deviceName(Output<String> deviceName) {
            $.deviceName = deviceName;
            return this;
        }

        public Builder deviceName(String deviceName) {
            return deviceName(Output.of(deviceName));
        }

        public Builder ioTDeviceDetails(Output<IoTDeviceInfoArgs> ioTDeviceDetails) {
            $.ioTDeviceDetails = ioTDeviceDetails;
            return this;
        }

        public Builder ioTDeviceDetails(IoTDeviceInfoArgs ioTDeviceDetails) {
            return ioTDeviceDetails(Output.of(ioTDeviceDetails));
        }

        public Builder ioTEdgeDeviceDetails(Output<IoTDeviceInfoArgs> ioTEdgeDeviceDetails) {
            $.ioTEdgeDeviceDetails = ioTEdgeDeviceDetails;
            return this;
        }

        public Builder ioTEdgeDeviceDetails(IoTDeviceInfoArgs ioTEdgeDeviceDetails) {
            return ioTEdgeDeviceDetails(Output.of(ioTEdgeDeviceDetails));
        }

        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder roleName(Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        public IoTAddonArgs build() {
            $.deviceName = Objects.requireNonNull($.deviceName, "expected parameter 'deviceName' to be non-null");
            $.ioTDeviceDetails = Objects.requireNonNull($.ioTDeviceDetails, "expected parameter 'ioTDeviceDetails' to be non-null");
            $.ioTEdgeDeviceDetails = Objects.requireNonNull($.ioTEdgeDeviceDetails, "expected parameter 'ioTEdgeDeviceDetails' to be non-null");
            $.kind = Codegen.stringProp("kind").output().arg($.kind).require();
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.roleName = Objects.requireNonNull($.roleName, "expected parameter 'roleName' to be non-null");
            return $;
        }
    }

}
