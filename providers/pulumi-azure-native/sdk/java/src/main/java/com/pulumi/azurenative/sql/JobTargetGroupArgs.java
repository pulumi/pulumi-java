// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql;

import com.pulumi.azurenative.sql.inputs.JobTargetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTargetGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTargetGroupArgs Empty = new JobTargetGroupArgs();

    /**
     * The name of the job agent.
     * 
     */
    @Import(name="jobAgentName", required=true)
    private Output<String> jobAgentName;

    /**
     * @return The name of the job agent.
     * 
     */
    public Output<String> jobAgentName() {
        return this.jobAgentName;
    }

    /**
     * Members of the target group.
     * 
     */
    @Import(name="members", required=true)
    private Output<List<JobTargetArgs>> members;

    /**
     * @return Members of the target group.
     * 
     */
    public Output<List<JobTargetArgs>> members() {
        return this.members;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the server.
     * 
     */
    @Import(name="serverName", required=true)
    private Output<String> serverName;

    /**
     * @return The name of the server.
     * 
     */
    public Output<String> serverName() {
        return this.serverName;
    }

    /**
     * The name of the target group.
     * 
     */
    @Import(name="targetGroupName")
    private @Nullable Output<String> targetGroupName;

    /**
     * @return The name of the target group.
     * 
     */
    public Optional<Output<String>> targetGroupName() {
        return Optional.ofNullable(this.targetGroupName);
    }

    private JobTargetGroupArgs() {}

    private JobTargetGroupArgs(JobTargetGroupArgs $) {
        this.jobAgentName = $.jobAgentName;
        this.members = $.members;
        this.resourceGroupName = $.resourceGroupName;
        this.serverName = $.serverName;
        this.targetGroupName = $.targetGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTargetGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTargetGroupArgs $;

        public Builder() {
            $ = new JobTargetGroupArgs();
        }

        public Builder(JobTargetGroupArgs defaults) {
            $ = new JobTargetGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jobAgentName The name of the job agent.
         * 
         * @return builder
         * 
         */
        public Builder jobAgentName(Output<String> jobAgentName) {
            $.jobAgentName = jobAgentName;
            return this;
        }

        /**
         * @param jobAgentName The name of the job agent.
         * 
         * @return builder
         * 
         */
        public Builder jobAgentName(String jobAgentName) {
            return jobAgentName(Output.of(jobAgentName));
        }

        /**
         * @param members Members of the target group.
         * 
         * @return builder
         * 
         */
        public Builder members(Output<List<JobTargetArgs>> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members Members of the target group.
         * 
         * @return builder
         * 
         */
        public Builder members(List<JobTargetArgs> members) {
            return members(Output.of(members));
        }

        /**
         * @param members Members of the target group.
         * 
         * @return builder
         * 
         */
        public Builder members(JobTargetArgs... members) {
            return members(List.of(members));
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serverName The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder serverName(Output<String> serverName) {
            $.serverName = serverName;
            return this;
        }

        /**
         * @param serverName The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder serverName(String serverName) {
            return serverName(Output.of(serverName));
        }

        /**
         * @param targetGroupName The name of the target group.
         * 
         * @return builder
         * 
         */
        public Builder targetGroupName(@Nullable Output<String> targetGroupName) {
            $.targetGroupName = targetGroupName;
            return this;
        }

        /**
         * @param targetGroupName The name of the target group.
         * 
         * @return builder
         * 
         */
        public Builder targetGroupName(String targetGroupName) {
            return targetGroupName(Output.of(targetGroupName));
        }

        public JobTargetGroupArgs build() {
            $.jobAgentName = Objects.requireNonNull($.jobAgentName, "expected parameter 'jobAgentName' to be non-null");
            $.members = Objects.requireNonNull($.members, "expected parameter 'members' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serverName = Objects.requireNonNull($.serverName, "expected parameter 'serverName' to be non-null");
            return $;
        }
    }

}
