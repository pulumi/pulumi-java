// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights;

import com.pulumi.azurenative.securityinsights.inputs.WatchlistUserInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WatchlistItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final WatchlistItemArgs Empty = new WatchlistItemArgs();

    /**
     * The time the watchlist item was created
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * Describes a user that created the watchlist item
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<WatchlistUserInfoArgs> createdBy;

    public Optional<Output<WatchlistUserInfoArgs>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * key-value pairs for a watchlist item entity mapping
     * 
     */
    @Import(name="entityMapping")
    private @Nullable Output<Object> entityMapping;

    public Optional<Output<Object>> entityMapping() {
        return Optional.ofNullable(this.entityMapping);
    }

    /**
     * A flag that indicates if the watchlist item is deleted or not
     * 
     */
    @Import(name="isDeleted")
    private @Nullable Output<Boolean> isDeleted;

    public Optional<Output<Boolean>> isDeleted() {
        return Optional.ofNullable(this.isDeleted);
    }

    /**
     * key-value pairs for a watchlist item
     * 
     */
    @Import(name="itemsKeyValue", required=true)
    private Output<Object> itemsKeyValue;

    public Output<Object> itemsKeyValue() {
        return this.itemsKeyValue;
    }

    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     * 
     */
    @Import(name="operationalInsightsResourceProvider", required=true)
    private Output<String> operationalInsightsResourceProvider;

    public Output<String> operationalInsightsResourceProvider() {
        return this.operationalInsightsResourceProvider;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The tenantId to which the watchlist item belongs to
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    /**
     * The last time the watchlist item was updated
     * 
     */
    @Import(name="updated")
    private @Nullable Output<String> updated;

    public Optional<Output<String>> updated() {
        return Optional.ofNullable(this.updated);
    }

    /**
     * Describes a user that updated the watchlist item
     * 
     */
    @Import(name="updatedBy")
    private @Nullable Output<WatchlistUserInfoArgs> updatedBy;

    public Optional<Output<WatchlistUserInfoArgs>> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }

    /**
     * Watchlist Alias
     * 
     */
    @Import(name="watchlistAlias", required=true)
    private Output<String> watchlistAlias;

    public Output<String> watchlistAlias() {
        return this.watchlistAlias;
    }

    /**
     * The id (a Guid) of the watchlist item
     * 
     */
    @Import(name="watchlistItemId")
    private @Nullable Output<String> watchlistItemId;

    public Optional<Output<String>> watchlistItemId() {
        return Optional.ofNullable(this.watchlistItemId);
    }

    /**
     * The type of the watchlist item
     * 
     */
    @Import(name="watchlistItemType")
    private @Nullable Output<String> watchlistItemType;

    public Optional<Output<String>> watchlistItemType() {
        return Optional.ofNullable(this.watchlistItemType);
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private WatchlistItemArgs() {}

    private WatchlistItemArgs(WatchlistItemArgs $) {
        this.created = $.created;
        this.createdBy = $.createdBy;
        this.entityMapping = $.entityMapping;
        this.isDeleted = $.isDeleted;
        this.itemsKeyValue = $.itemsKeyValue;
        this.operationalInsightsResourceProvider = $.operationalInsightsResourceProvider;
        this.resourceGroupName = $.resourceGroupName;
        this.tenantId = $.tenantId;
        this.updated = $.updated;
        this.updatedBy = $.updatedBy;
        this.watchlistAlias = $.watchlistAlias;
        this.watchlistItemId = $.watchlistItemId;
        this.watchlistItemType = $.watchlistItemType;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WatchlistItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WatchlistItemArgs $;

        public Builder() {
            $ = new WatchlistItemArgs();
        }

        public Builder(WatchlistItemArgs defaults) {
            $ = new WatchlistItemArgs(Objects.requireNonNull(defaults));
        }

        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        public Builder created(String created) {
            return created(Output.of(created));
        }

        public Builder createdBy(@Nullable Output<WatchlistUserInfoArgs> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        public Builder createdBy(WatchlistUserInfoArgs createdBy) {
            return createdBy(Output.of(createdBy));
        }

        public Builder entityMapping(@Nullable Output<Object> entityMapping) {
            $.entityMapping = entityMapping;
            return this;
        }

        public Builder entityMapping(Object entityMapping) {
            return entityMapping(Output.of(entityMapping));
        }

        public Builder isDeleted(@Nullable Output<Boolean> isDeleted) {
            $.isDeleted = isDeleted;
            return this;
        }

        public Builder isDeleted(Boolean isDeleted) {
            return isDeleted(Output.of(isDeleted));
        }

        public Builder itemsKeyValue(Output<Object> itemsKeyValue) {
            $.itemsKeyValue = itemsKeyValue;
            return this;
        }

        public Builder itemsKeyValue(Object itemsKeyValue) {
            return itemsKeyValue(Output.of(itemsKeyValue));
        }

        public Builder operationalInsightsResourceProvider(Output<String> operationalInsightsResourceProvider) {
            $.operationalInsightsResourceProvider = operationalInsightsResourceProvider;
            return this;
        }

        public Builder operationalInsightsResourceProvider(String operationalInsightsResourceProvider) {
            return operationalInsightsResourceProvider(Output.of(operationalInsightsResourceProvider));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public Builder updated(@Nullable Output<String> updated) {
            $.updated = updated;
            return this;
        }

        public Builder updated(String updated) {
            return updated(Output.of(updated));
        }

        public Builder updatedBy(@Nullable Output<WatchlistUserInfoArgs> updatedBy) {
            $.updatedBy = updatedBy;
            return this;
        }

        public Builder updatedBy(WatchlistUserInfoArgs updatedBy) {
            return updatedBy(Output.of(updatedBy));
        }

        public Builder watchlistAlias(Output<String> watchlistAlias) {
            $.watchlistAlias = watchlistAlias;
            return this;
        }

        public Builder watchlistAlias(String watchlistAlias) {
            return watchlistAlias(Output.of(watchlistAlias));
        }

        public Builder watchlistItemId(@Nullable Output<String> watchlistItemId) {
            $.watchlistItemId = watchlistItemId;
            return this;
        }

        public Builder watchlistItemId(String watchlistItemId) {
            return watchlistItemId(Output.of(watchlistItemId));
        }

        public Builder watchlistItemType(@Nullable Output<String> watchlistItemType) {
            $.watchlistItemType = watchlistItemType;
            return this;
        }

        public Builder watchlistItemType(String watchlistItemType) {
            return watchlistItemType(Output.of(watchlistItemType));
        }

        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public WatchlistItemArgs build() {
            $.itemsKeyValue = Objects.requireNonNull($.itemsKeyValue, "expected parameter 'itemsKeyValue' to be non-null");
            $.operationalInsightsResourceProvider = Objects.requireNonNull($.operationalInsightsResourceProvider, "expected parameter 'operationalInsightsResourceProvider' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.watchlistAlias = Objects.requireNonNull($.watchlistAlias, "expected parameter 'watchlistAlias' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
