// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.alertsmanagement.inputs;

import com.pulumi.azurenative.alertsmanagement.enums.HealthStateName;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * Specifies the health state to alert on and the corresponding severity
 * 
 */
public final class HealthStateArgs extends com.pulumi.resources.ResourceArgs {

    public static final HealthStateArgs Empty = new HealthStateArgs();

    /**
     * Health state name
     * 
     */
    @Import(name="healthStateName", required=true)
    private Output<Either<String,HealthStateName>> healthStateName;

    public Output<Either<String,HealthStateName>> healthStateName() {
        return this.healthStateName;
    }

    /**
     * Severity of alert fired
     * 
     */
    @Import(name="severity", required=true)
    private Output<Double> severity;

    public Output<Double> severity() {
        return this.severity;
    }

    private HealthStateArgs() {}

    private HealthStateArgs(HealthStateArgs $) {
        this.healthStateName = $.healthStateName;
        this.severity = $.severity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HealthStateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HealthStateArgs $;

        public Builder() {
            $ = new HealthStateArgs();
        }

        public Builder(HealthStateArgs defaults) {
            $ = new HealthStateArgs(Objects.requireNonNull(defaults));
        }

        public Builder healthStateName(Output<Either<String,HealthStateName>> healthStateName) {
            $.healthStateName = healthStateName;
            return this;
        }

        public Builder healthStateName(Either<String,HealthStateName> healthStateName) {
            return healthStateName(Output.of(healthStateName));
        }

        public Builder severity(Output<Double> severity) {
            $.severity = severity;
            return this;
        }

        public Builder severity(Double severity) {
            return severity(Output.of(severity));
        }

        public HealthStateArgs build() {
            $.healthStateName = Objects.requireNonNull($.healthStateName, "expected parameter 'healthStateName' to be non-null");
            $.severity = Objects.requireNonNull($.severity, "expected parameter 'severity' to be non-null");
            return $;
        }
    }

}
