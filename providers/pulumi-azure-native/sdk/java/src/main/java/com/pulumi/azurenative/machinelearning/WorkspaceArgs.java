// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearning;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceArgs Empty = new WorkspaceArgs();

    /**
     * The key vault identifier used for encrypted workspaces.
     * 
     */
    @Import(name="keyVaultIdentifierId")
    private @Nullable Output<String> keyVaultIdentifierId;

    /**
     * @return The key vault identifier used for encrypted workspaces.
     * 
     */
    public Optional<Output<String>> keyVaultIdentifierId() {
        return Optional.ofNullable(this.keyVaultIdentifierId);
    }

    /**
     * The location of the resource. This cannot be changed after the resource is created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the resource. This cannot be changed after the resource is created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The email id of the owner for this workspace.
     * 
     */
    @Import(name="ownerEmail", required=true)
    private Output<String> ownerEmail;

    /**
     * @return The email id of the owner for this workspace.
     * 
     */
    public Output<String> ownerEmail() {
        return this.ownerEmail;
    }

    /**
     * The name of the resource group to which the machine learning workspace belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group to which the machine learning workspace belongs.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The tags of the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tags of the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The fully qualified arm id of the storage account associated with this workspace.
     * 
     */
    @Import(name="userStorageAccountId", required=true)
    private Output<String> userStorageAccountId;

    /**
     * @return The fully qualified arm id of the storage account associated with this workspace.
     * 
     */
    public Output<String> userStorageAccountId() {
        return this.userStorageAccountId;
    }

    /**
     * The name of the machine learning workspace.
     * 
     */
    @Import(name="workspaceName")
    private @Nullable Output<String> workspaceName;

    /**
     * @return The name of the machine learning workspace.
     * 
     */
    public Optional<Output<String>> workspaceName() {
        return Optional.ofNullable(this.workspaceName);
    }

    private WorkspaceArgs() {}

    private WorkspaceArgs(WorkspaceArgs $) {
        this.keyVaultIdentifierId = $.keyVaultIdentifierId;
        this.location = $.location;
        this.ownerEmail = $.ownerEmail;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.userStorageAccountId = $.userStorageAccountId;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceArgs $;

        public Builder() {
            $ = new WorkspaceArgs();
        }

        public Builder(WorkspaceArgs defaults) {
            $ = new WorkspaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyVaultIdentifierId The key vault identifier used for encrypted workspaces.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultIdentifierId(@Nullable Output<String> keyVaultIdentifierId) {
            $.keyVaultIdentifierId = keyVaultIdentifierId;
            return this;
        }

        /**
         * @param keyVaultIdentifierId The key vault identifier used for encrypted workspaces.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultIdentifierId(String keyVaultIdentifierId) {
            return keyVaultIdentifierId(Output.of(keyVaultIdentifierId));
        }

        /**
         * @param location The location of the resource. This cannot be changed after the resource is created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the resource. This cannot be changed after the resource is created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param ownerEmail The email id of the owner for this workspace.
         * 
         * @return builder
         * 
         */
        public Builder ownerEmail(Output<String> ownerEmail) {
            $.ownerEmail = ownerEmail;
            return this;
        }

        /**
         * @param ownerEmail The email id of the owner for this workspace.
         * 
         * @return builder
         * 
         */
        public Builder ownerEmail(String ownerEmail) {
            return ownerEmail(Output.of(ownerEmail));
        }

        /**
         * @param resourceGroupName The name of the resource group to which the machine learning workspace belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group to which the machine learning workspace belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags The tags of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param userStorageAccountId The fully qualified arm id of the storage account associated with this workspace.
         * 
         * @return builder
         * 
         */
        public Builder userStorageAccountId(Output<String> userStorageAccountId) {
            $.userStorageAccountId = userStorageAccountId;
            return this;
        }

        /**
         * @param userStorageAccountId The fully qualified arm id of the storage account associated with this workspace.
         * 
         * @return builder
         * 
         */
        public Builder userStorageAccountId(String userStorageAccountId) {
            return userStorageAccountId(Output.of(userStorageAccountId));
        }

        /**
         * @param workspaceName The name of the machine learning workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(@Nullable Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        /**
         * @param workspaceName The name of the machine learning workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public WorkspaceArgs build() {
            $.ownerEmail = Objects.requireNonNull($.ownerEmail, "expected parameter 'ownerEmail' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.userStorageAccountId = Objects.requireNonNull($.userStorageAccountId, "expected parameter 'userStorageAccountId' to be non-null");
            return $;
        }
    }

}
