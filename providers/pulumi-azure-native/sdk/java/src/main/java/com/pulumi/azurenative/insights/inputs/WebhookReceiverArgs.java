// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A webhook receiver.
 * 
 */
public final class WebhookReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebhookReceiverArgs Empty = new WebhookReceiverArgs();

    /**
     * Indicates the identifier uri for aad auth.
     * 
     */
    @Import(name="identifierUri")
    private @Nullable Output<String> identifierUri;

    public Optional<Output<String>> identifierUri() {
        return Optional.ofNullable(this.identifierUri);
    }

    /**
     * The name of the webhook receiver. Names must be unique across all receivers within an action group.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Indicates the webhook app object Id for aad auth.
     * 
     */
    @Import(name="objectId")
    private @Nullable Output<String> objectId;

    public Optional<Output<String>> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * The URI where webhooks should be sent.
     * 
     */
    @Import(name="serviceUri", required=true)
    private Output<String> serviceUri;

    public Output<String> serviceUri() {
        return this.serviceUri;
    }

    /**
     * Indicates the tenant id for aad auth.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    /**
     * Indicates whether or not use AAD authentication.
     * 
     */
    @Import(name="useAadAuth")
    private @Nullable Output<Boolean> useAadAuth;

    public Optional<Output<Boolean>> useAadAuth() {
        return Optional.ofNullable(this.useAadAuth);
    }

    /**
     * Indicates whether to use common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
    private @Nullable Output<Boolean> useCommonAlertSchema;

    public Optional<Output<Boolean>> useCommonAlertSchema() {
        return Optional.ofNullable(this.useCommonAlertSchema);
    }

    private WebhookReceiverArgs() {}

    private WebhookReceiverArgs(WebhookReceiverArgs $) {
        this.identifierUri = $.identifierUri;
        this.name = $.name;
        this.objectId = $.objectId;
        this.serviceUri = $.serviceUri;
        this.tenantId = $.tenantId;
        this.useAadAuth = $.useAadAuth;
        this.useCommonAlertSchema = $.useCommonAlertSchema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebhookReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebhookReceiverArgs $;

        public Builder() {
            $ = new WebhookReceiverArgs();
        }

        public Builder(WebhookReceiverArgs defaults) {
            $ = new WebhookReceiverArgs(Objects.requireNonNull(defaults));
        }

        public Builder identifierUri(@Nullable Output<String> identifierUri) {
            $.identifierUri = identifierUri;
            return this;
        }

        public Builder identifierUri(String identifierUri) {
            return identifierUri(Output.of(identifierUri));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder objectId(@Nullable Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        public Builder serviceUri(Output<String> serviceUri) {
            $.serviceUri = serviceUri;
            return this;
        }

        public Builder serviceUri(String serviceUri) {
            return serviceUri(Output.of(serviceUri));
        }

        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public Builder useAadAuth(@Nullable Output<Boolean> useAadAuth) {
            $.useAadAuth = useAadAuth;
            return this;
        }

        public Builder useAadAuth(Boolean useAadAuth) {
            return useAadAuth(Output.of(useAadAuth));
        }

        public Builder useCommonAlertSchema(@Nullable Output<Boolean> useCommonAlertSchema) {
            $.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }

        public Builder useCommonAlertSchema(Boolean useCommonAlertSchema) {
            return useCommonAlertSchema(Output.of(useCommonAlertSchema));
        }

        public WebhookReceiverArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.serviceUri = Objects.requireNonNull($.serviceUri, "expected parameter 'serviceUri' to be non-null");
            $.useAadAuth = Codegen.booleanProp("useAadAuth").output().arg($.useAadAuth).def(false).getNullable();
            $.useCommonAlertSchema = Codegen.booleanProp("useCommonAlertSchema").output().arg($.useCommonAlertSchema).def(false).getNullable();
            return $;
        }
    }

}
