// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Holds details about product hierarchy information
 * 
 */
public final class HierarchyInformationArgs extends com.pulumi.resources.ResourceArgs {

    public static final HierarchyInformationArgs Empty = new HierarchyInformationArgs();

    /**
     * Represents configuration name that uniquely identifies configuration
     * 
     */
    @Import(name="configurationName")
    private @Nullable Output<String> configurationName;

    /**
     * @return Represents configuration name that uniquely identifies configuration
     * 
     */
    public Optional<Output<String>> configurationName() {
        return Optional.ofNullable(this.configurationName);
    }

    /**
     * Represents product family name that uniquely identifies product family
     * 
     */
    @Import(name="productFamilyName")
    private @Nullable Output<String> productFamilyName;

    /**
     * @return Represents product family name that uniquely identifies product family
     * 
     */
    public Optional<Output<String>> productFamilyName() {
        return Optional.ofNullable(this.productFamilyName);
    }

    /**
     * Represents product line name that uniquely identifies product line
     * 
     */
    @Import(name="productLineName")
    private @Nullable Output<String> productLineName;

    /**
     * @return Represents product line name that uniquely identifies product line
     * 
     */
    public Optional<Output<String>> productLineName() {
        return Optional.ofNullable(this.productLineName);
    }

    /**
     * Represents product name that uniquely identifies product
     * 
     */
    @Import(name="productName")
    private @Nullable Output<String> productName;

    /**
     * @return Represents product name that uniquely identifies product
     * 
     */
    public Optional<Output<String>> productName() {
        return Optional.ofNullable(this.productName);
    }

    private HierarchyInformationArgs() {}

    private HierarchyInformationArgs(HierarchyInformationArgs $) {
        this.configurationName = $.configurationName;
        this.productFamilyName = $.productFamilyName;
        this.productLineName = $.productLineName;
        this.productName = $.productName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HierarchyInformationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HierarchyInformationArgs $;

        public Builder() {
            $ = new HierarchyInformationArgs();
        }

        public Builder(HierarchyInformationArgs defaults) {
            $ = new HierarchyInformationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationName Represents configuration name that uniquely identifies configuration
         * 
         * @return builder
         * 
         */
        public Builder configurationName(@Nullable Output<String> configurationName) {
            $.configurationName = configurationName;
            return this;
        }

        /**
         * @param configurationName Represents configuration name that uniquely identifies configuration
         * 
         * @return builder
         * 
         */
        public Builder configurationName(String configurationName) {
            return configurationName(Output.of(configurationName));
        }

        /**
         * @param productFamilyName Represents product family name that uniquely identifies product family
         * 
         * @return builder
         * 
         */
        public Builder productFamilyName(@Nullable Output<String> productFamilyName) {
            $.productFamilyName = productFamilyName;
            return this;
        }

        /**
         * @param productFamilyName Represents product family name that uniquely identifies product family
         * 
         * @return builder
         * 
         */
        public Builder productFamilyName(String productFamilyName) {
            return productFamilyName(Output.of(productFamilyName));
        }

        /**
         * @param productLineName Represents product line name that uniquely identifies product line
         * 
         * @return builder
         * 
         */
        public Builder productLineName(@Nullable Output<String> productLineName) {
            $.productLineName = productLineName;
            return this;
        }

        /**
         * @param productLineName Represents product line name that uniquely identifies product line
         * 
         * @return builder
         * 
         */
        public Builder productLineName(String productLineName) {
            return productLineName(Output.of(productLineName));
        }

        /**
         * @param productName Represents product name that uniquely identifies product
         * 
         * @return builder
         * 
         */
        public Builder productName(@Nullable Output<String> productName) {
            $.productName = productName;
            return this;
        }

        /**
         * @param productName Represents product name that uniquely identifies product
         * 
         * @return builder
         * 
         */
        public Builder productName(String productName) {
            return productName(Output.of(productName));
        }

        public HierarchyInformationArgs build() {
            return $;
        }
    }

}
