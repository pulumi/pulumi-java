// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scvmm.inputs;

import com.pulumi.azurenative.scvmm.enums.CreateDiffDisk;
import com.pulumi.azurenative.scvmm.inputs.StorageQoSPolicyDetailsArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Virtual disk model
 * 
 */
public final class VirtualDiskArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualDiskArgs Empty = new VirtualDiskArgs();

    /**
     * Gets or sets the disk bus.
     * 
     */
    @Import(name="bus")
    private @Nullable Output<Integer> bus;

    /**
     * @return Gets or sets the disk bus.
     * 
     */
    public Optional<Output<Integer>> bus() {
        return Optional.ofNullable(this.bus);
    }

    /**
     * Gets or sets the disk bus type.
     * 
     */
    @Import(name="busType")
    private @Nullable Output<String> busType;

    /**
     * @return Gets or sets the disk bus type.
     * 
     */
    public Optional<Output<String>> busType() {
        return Optional.ofNullable(this.busType);
    }

    /**
     * Gets or sets a value indicating diff disk.
     * 
     */
    @Import(name="createDiffDisk")
    private @Nullable Output<Either<String,CreateDiffDisk>> createDiffDisk;

    /**
     * @return Gets or sets a value indicating diff disk.
     * 
     */
    public Optional<Output<Either<String,CreateDiffDisk>>> createDiffDisk() {
        return Optional.ofNullable(this.createDiffDisk);
    }

    /**
     * Gets or sets the disk id.
     * 
     */
    @Import(name="diskId")
    private @Nullable Output<String> diskId;

    /**
     * @return Gets or sets the disk id.
     * 
     */
    public Optional<Output<String>> diskId() {
        return Optional.ofNullable(this.diskId);
    }

    /**
     * Gets or sets the disk total size.
     * 
     */
    @Import(name="diskSizeGB")
    private @Nullable Output<Integer> diskSizeGB;

    /**
     * @return Gets or sets the disk total size.
     * 
     */
    public Optional<Output<Integer>> diskSizeGB() {
        return Optional.ofNullable(this.diskSizeGB);
    }

    /**
     * Gets or sets the disk lun.
     * 
     */
    @Import(name="lun")
    private @Nullable Output<Integer> lun;

    /**
     * @return Gets or sets the disk lun.
     * 
     */
    public Optional<Output<Integer>> lun() {
        return Optional.ofNullable(this.lun);
    }

    /**
     * Gets or sets the name of the disk.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Gets or sets the name of the disk.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The QoS policy for the disk.
     * 
     */
    @Import(name="storageQoSPolicy")
    private @Nullable Output<StorageQoSPolicyDetailsArgs> storageQoSPolicy;

    /**
     * @return The QoS policy for the disk.
     * 
     */
    public Optional<Output<StorageQoSPolicyDetailsArgs>> storageQoSPolicy() {
        return Optional.ofNullable(this.storageQoSPolicy);
    }

    /**
     * Gets or sets the disk id in the template.
     * 
     */
    @Import(name="templateDiskId")
    private @Nullable Output<String> templateDiskId;

    /**
     * @return Gets or sets the disk id in the template.
     * 
     */
    public Optional<Output<String>> templateDiskId() {
        return Optional.ofNullable(this.templateDiskId);
    }

    /**
     * Gets or sets the disk vhd type.
     * 
     */
    @Import(name="vhdType")
    private @Nullable Output<String> vhdType;

    /**
     * @return Gets or sets the disk vhd type.
     * 
     */
    public Optional<Output<String>> vhdType() {
        return Optional.ofNullable(this.vhdType);
    }

    private VirtualDiskArgs() {}

    private VirtualDiskArgs(VirtualDiskArgs $) {
        this.bus = $.bus;
        this.busType = $.busType;
        this.createDiffDisk = $.createDiffDisk;
        this.diskId = $.diskId;
        this.diskSizeGB = $.diskSizeGB;
        this.lun = $.lun;
        this.name = $.name;
        this.storageQoSPolicy = $.storageQoSPolicy;
        this.templateDiskId = $.templateDiskId;
        this.vhdType = $.vhdType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualDiskArgs $;

        public Builder() {
            $ = new VirtualDiskArgs();
        }

        public Builder(VirtualDiskArgs defaults) {
            $ = new VirtualDiskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bus Gets or sets the disk bus.
         * 
         * @return builder
         * 
         */
        public Builder bus(@Nullable Output<Integer> bus) {
            $.bus = bus;
            return this;
        }

        /**
         * @param bus Gets or sets the disk bus.
         * 
         * @return builder
         * 
         */
        public Builder bus(Integer bus) {
            return bus(Output.of(bus));
        }

        /**
         * @param busType Gets or sets the disk bus type.
         * 
         * @return builder
         * 
         */
        public Builder busType(@Nullable Output<String> busType) {
            $.busType = busType;
            return this;
        }

        /**
         * @param busType Gets or sets the disk bus type.
         * 
         * @return builder
         * 
         */
        public Builder busType(String busType) {
            return busType(Output.of(busType));
        }

        /**
         * @param createDiffDisk Gets or sets a value indicating diff disk.
         * 
         * @return builder
         * 
         */
        public Builder createDiffDisk(@Nullable Output<Either<String,CreateDiffDisk>> createDiffDisk) {
            $.createDiffDisk = createDiffDisk;
            return this;
        }

        /**
         * @param createDiffDisk Gets or sets a value indicating diff disk.
         * 
         * @return builder
         * 
         */
        public Builder createDiffDisk(Either<String,CreateDiffDisk> createDiffDisk) {
            return createDiffDisk(Output.of(createDiffDisk));
        }

        /**
         * @param createDiffDisk Gets or sets a value indicating diff disk.
         * 
         * @return builder
         * 
         */
        public Builder createDiffDisk(String createDiffDisk) {
            return createDiffDisk(Either.ofLeft(createDiffDisk));
        }

        /**
         * @param createDiffDisk Gets or sets a value indicating diff disk.
         * 
         * @return builder
         * 
         */
        public Builder createDiffDisk(CreateDiffDisk createDiffDisk) {
            return createDiffDisk(Either.ofRight(createDiffDisk));
        }

        /**
         * @param diskId Gets or sets the disk id.
         * 
         * @return builder
         * 
         */
        public Builder diskId(@Nullable Output<String> diskId) {
            $.diskId = diskId;
            return this;
        }

        /**
         * @param diskId Gets or sets the disk id.
         * 
         * @return builder
         * 
         */
        public Builder diskId(String diskId) {
            return diskId(Output.of(diskId));
        }

        /**
         * @param diskSizeGB Gets or sets the disk total size.
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGB(@Nullable Output<Integer> diskSizeGB) {
            $.diskSizeGB = diskSizeGB;
            return this;
        }

        /**
         * @param diskSizeGB Gets or sets the disk total size.
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGB(Integer diskSizeGB) {
            return diskSizeGB(Output.of(diskSizeGB));
        }

        /**
         * @param lun Gets or sets the disk lun.
         * 
         * @return builder
         * 
         */
        public Builder lun(@Nullable Output<Integer> lun) {
            $.lun = lun;
            return this;
        }

        /**
         * @param lun Gets or sets the disk lun.
         * 
         * @return builder
         * 
         */
        public Builder lun(Integer lun) {
            return lun(Output.of(lun));
        }

        /**
         * @param name Gets or sets the name of the disk.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Gets or sets the name of the disk.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param storageQoSPolicy The QoS policy for the disk.
         * 
         * @return builder
         * 
         */
        public Builder storageQoSPolicy(@Nullable Output<StorageQoSPolicyDetailsArgs> storageQoSPolicy) {
            $.storageQoSPolicy = storageQoSPolicy;
            return this;
        }

        /**
         * @param storageQoSPolicy The QoS policy for the disk.
         * 
         * @return builder
         * 
         */
        public Builder storageQoSPolicy(StorageQoSPolicyDetailsArgs storageQoSPolicy) {
            return storageQoSPolicy(Output.of(storageQoSPolicy));
        }

        /**
         * @param templateDiskId Gets or sets the disk id in the template.
         * 
         * @return builder
         * 
         */
        public Builder templateDiskId(@Nullable Output<String> templateDiskId) {
            $.templateDiskId = templateDiskId;
            return this;
        }

        /**
         * @param templateDiskId Gets or sets the disk id in the template.
         * 
         * @return builder
         * 
         */
        public Builder templateDiskId(String templateDiskId) {
            return templateDiskId(Output.of(templateDiskId));
        }

        /**
         * @param vhdType Gets or sets the disk vhd type.
         * 
         * @return builder
         * 
         */
        public Builder vhdType(@Nullable Output<String> vhdType) {
            $.vhdType = vhdType;
            return this;
        }

        /**
         * @param vhdType Gets or sets the disk vhd type.
         * 
         * @return builder
         * 
         */
        public Builder vhdType(String vhdType) {
            return vhdType(Output.of(vhdType));
        }

        public VirtualDiskArgs build() {
            return $;
        }
    }

}
