// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.kusto.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


/**
 * A class that contains the optimized auto scale definition.
 * 
 */
public final class OptimizedAutoscaleArgs extends com.pulumi.resources.ResourceArgs {

    public static final OptimizedAutoscaleArgs Empty = new OptimizedAutoscaleArgs();

    /**
     * A boolean value that indicate if the optimized autoscale feature is enabled or not.
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return A boolean value that indicate if the optimized autoscale feature is enabled or not.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * Maximum allowed instances count.
     * 
     */
    @Import(name="maximum", required=true)
    private Output<Integer> maximum;

    /**
     * @return Maximum allowed instances count.
     * 
     */
    public Output<Integer> maximum() {
        return this.maximum;
    }

    /**
     * Minimum allowed instances count.
     * 
     */
    @Import(name="minimum", required=true)
    private Output<Integer> minimum;

    /**
     * @return Minimum allowed instances count.
     * 
     */
    public Output<Integer> minimum() {
        return this.minimum;
    }

    /**
     * The version of the template defined, for instance 1.
     * 
     */
    @Import(name="version", required=true)
    private Output<Integer> version;

    /**
     * @return The version of the template defined, for instance 1.
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    private OptimizedAutoscaleArgs() {}

    private OptimizedAutoscaleArgs(OptimizedAutoscaleArgs $) {
        this.isEnabled = $.isEnabled;
        this.maximum = $.maximum;
        this.minimum = $.minimum;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OptimizedAutoscaleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OptimizedAutoscaleArgs $;

        public Builder() {
            $ = new OptimizedAutoscaleArgs();
        }

        public Builder(OptimizedAutoscaleArgs defaults) {
            $ = new OptimizedAutoscaleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isEnabled A boolean value that indicate if the optimized autoscale feature is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled A boolean value that indicate if the optimized autoscale feature is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param maximum Maximum allowed instances count.
         * 
         * @return builder
         * 
         */
        public Builder maximum(Output<Integer> maximum) {
            $.maximum = maximum;
            return this;
        }

        /**
         * @param maximum Maximum allowed instances count.
         * 
         * @return builder
         * 
         */
        public Builder maximum(Integer maximum) {
            return maximum(Output.of(maximum));
        }

        /**
         * @param minimum Minimum allowed instances count.
         * 
         * @return builder
         * 
         */
        public Builder minimum(Output<Integer> minimum) {
            $.minimum = minimum;
            return this;
        }

        /**
         * @param minimum Minimum allowed instances count.
         * 
         * @return builder
         * 
         */
        public Builder minimum(Integer minimum) {
            return minimum(Output.of(minimum));
        }

        /**
         * @param version The version of the template defined, for instance 1.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the template defined, for instance 1.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public OptimizedAutoscaleArgs build() {
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            $.maximum = Objects.requireNonNull($.maximum, "expected parameter 'maximum' to be non-null");
            $.minimum = Objects.requireNonNull($.minimum, "expected parameter 'minimum' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
