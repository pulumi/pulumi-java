// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.alertsmanagement.inputs;

import com.pulumi.azurenative.alertsmanagement.inputs.SuppressionScheduleResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Suppression logic for a given action rule
 * 
 */
public final class SuppressionConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final SuppressionConfigResponse Empty = new SuppressionConfigResponse();

    /**
     * Specifies when the suppression should be applied
     * 
     */
    @Import(name="recurrenceType", required=true)
    private String recurrenceType;

    /**
     * @return Specifies when the suppression should be applied
     * 
     */
    public String recurrenceType() {
        return this.recurrenceType;
    }

    /**
     * suppression schedule configuration
     * 
     */
    @Import(name="schedule")
    private @Nullable SuppressionScheduleResponse schedule;

    /**
     * @return suppression schedule configuration
     * 
     */
    public Optional<SuppressionScheduleResponse> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    private SuppressionConfigResponse() {}

    private SuppressionConfigResponse(SuppressionConfigResponse $) {
        this.recurrenceType = $.recurrenceType;
        this.schedule = $.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SuppressionConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SuppressionConfigResponse $;

        public Builder() {
            $ = new SuppressionConfigResponse();
        }

        public Builder(SuppressionConfigResponse defaults) {
            $ = new SuppressionConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param recurrenceType Specifies when the suppression should be applied
         * 
         * @return builder
         * 
         */
        public Builder recurrenceType(String recurrenceType) {
            $.recurrenceType = recurrenceType;
            return this;
        }

        /**
         * @param schedule suppression schedule configuration
         * 
         * @return builder
         * 
         */
        public Builder schedule(@Nullable SuppressionScheduleResponse schedule) {
            $.schedule = schedule;
            return this;
        }

        public SuppressionConfigResponse build() {
            $.recurrenceType = Objects.requireNonNull($.recurrenceType, "expected parameter 'recurrenceType' to be non-null");
            return $;
        }
    }

}
