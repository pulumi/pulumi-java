// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.alertsmanagement.inputs;

import com.pulumi.azurenative.alertsmanagement.inputs.SuppressionScheduleResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Suppression logic for a given action rule
 * 
 */
public final class SuppressionConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final SuppressionConfigResponse Empty = new SuppressionConfigResponse();

    /**
     * Specifies when the suppression should be applied
     * 
     */
    @Import(name="recurrenceType", required=true)
      private final String recurrenceType;

    public String recurrenceType() {
        return this.recurrenceType;
    }

    /**
     * suppression schedule configuration
     * 
     */
    @Import(name="schedule")
      private final @Nullable SuppressionScheduleResponse schedule;

    public Optional<SuppressionScheduleResponse> schedule() {
        return this.schedule == null ? Optional.empty() : Optional.ofNullable(this.schedule);
    }

    public SuppressionConfigResponse(
        String recurrenceType,
        @Nullable SuppressionScheduleResponse schedule) {
        this.recurrenceType = Objects.requireNonNull(recurrenceType, "expected parameter 'recurrenceType' to be non-null");
        this.schedule = schedule;
    }

    private SuppressionConfigResponse() {
        this.recurrenceType = null;
        this.schedule = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SuppressionConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String recurrenceType;
        private @Nullable SuppressionScheduleResponse schedule;

        public Builder() {
    	      // Empty
        }

        public Builder(SuppressionConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.recurrenceType = defaults.recurrenceType;
    	      this.schedule = defaults.schedule;
        }

        public Builder recurrenceType(String recurrenceType) {
            this.recurrenceType = Objects.requireNonNull(recurrenceType);
            return this;
        }
        public Builder schedule(@Nullable SuppressionScheduleResponse schedule) {
            this.schedule = schedule;
            return this;
        }        public SuppressionConfigResponse build() {
            return new SuppressionConfigResponse(recurrenceType, schedule);
        }
    }
}
