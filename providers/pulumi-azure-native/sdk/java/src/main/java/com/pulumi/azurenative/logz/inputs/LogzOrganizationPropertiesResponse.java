// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logz.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogzOrganizationPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final LogzOrganizationPropertiesResponse Empty = new LogzOrganizationPropertiesResponse();

    /**
     * Name of the Logz organization.
     * 
     */
    @Import(name="companyName")
    private @Nullable String companyName;

    /**
     * @return Name of the Logz organization.
     * 
     */
    public Optional<String> companyName() {
        return Optional.ofNullable(this.companyName);
    }

    /**
     * The Id of the Enterprise App used for Single sign on.
     * 
     */
    @Import(name="enterpriseAppId")
    private @Nullable String enterpriseAppId;

    /**
     * @return The Id of the Enterprise App used for Single sign on.
     * 
     */
    public Optional<String> enterpriseAppId() {
        return Optional.ofNullable(this.enterpriseAppId);
    }

    /**
     * Id of the Logz organization.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return Id of the Logz organization.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * The login URL specific to this Logz Organization.
     * 
     */
    @Import(name="singleSignOnUrl")
    private @Nullable String singleSignOnUrl;

    /**
     * @return The login URL specific to this Logz Organization.
     * 
     */
    public Optional<String> singleSignOnUrl() {
        return Optional.ofNullable(this.singleSignOnUrl);
    }

    private LogzOrganizationPropertiesResponse() {}

    private LogzOrganizationPropertiesResponse(LogzOrganizationPropertiesResponse $) {
        this.companyName = $.companyName;
        this.enterpriseAppId = $.enterpriseAppId;
        this.id = $.id;
        this.singleSignOnUrl = $.singleSignOnUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogzOrganizationPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogzOrganizationPropertiesResponse $;

        public Builder() {
            $ = new LogzOrganizationPropertiesResponse();
        }

        public Builder(LogzOrganizationPropertiesResponse defaults) {
            $ = new LogzOrganizationPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param companyName Name of the Logz organization.
         * 
         * @return builder
         * 
         */
        public Builder companyName(@Nullable String companyName) {
            $.companyName = companyName;
            return this;
        }

        /**
         * @param enterpriseAppId The Id of the Enterprise App used for Single sign on.
         * 
         * @return builder
         * 
         */
        public Builder enterpriseAppId(@Nullable String enterpriseAppId) {
            $.enterpriseAppId = enterpriseAppId;
            return this;
        }

        /**
         * @param id Id of the Logz organization.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param singleSignOnUrl The login URL specific to this Logz Organization.
         * 
         * @return builder
         * 
         */
        public Builder singleSignOnUrl(@Nullable String singleSignOnUrl) {
            $.singleSignOnUrl = singleSignOnUrl;
            return this;
        }

        public LogzOrganizationPropertiesResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
