// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.vmwarecloudsimple.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Virtual disk model
 * 
 */
public final class VirtualDiskResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualDiskResponse Empty = new VirtualDiskResponse();

    /**
     * Disk&#39;s Controller id
     * 
     */
    @Import(name="controllerId", required=true)
    private String controllerId;

    public String controllerId() {
        return this.controllerId;
    }

    /**
     * Disk&#39;s independence mode type
     * 
     */
    @Import(name="independenceMode", required=true)
    private String independenceMode;

    public String independenceMode() {
        return this.independenceMode;
    }

    /**
     * Disk&#39;s total size
     * 
     */
    @Import(name="totalSize", required=true)
    private Integer totalSize;

    public Integer totalSize() {
        return this.totalSize;
    }

    /**
     * Disk&#39;s id
     * 
     */
    @Import(name="virtualDiskId")
    private @Nullable String virtualDiskId;

    public Optional<String> virtualDiskId() {
        return Optional.ofNullable(this.virtualDiskId);
    }

    /**
     * Disk&#39;s display name
     * 
     */
    @Import(name="virtualDiskName", required=true)
    private String virtualDiskName;

    public String virtualDiskName() {
        return this.virtualDiskName;
    }

    private VirtualDiskResponse() {}

    private VirtualDiskResponse(VirtualDiskResponse $) {
        this.controllerId = $.controllerId;
        this.independenceMode = $.independenceMode;
        this.totalSize = $.totalSize;
        this.virtualDiskId = $.virtualDiskId;
        this.virtualDiskName = $.virtualDiskName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualDiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualDiskResponse $;

        public Builder() {
            $ = new VirtualDiskResponse();
        }

        public Builder(VirtualDiskResponse defaults) {
            $ = new VirtualDiskResponse(Objects.requireNonNull(defaults));
        }

        public Builder controllerId(String controllerId) {
            $.controllerId = controllerId;
            return this;
        }

        public Builder independenceMode(String independenceMode) {
            $.independenceMode = independenceMode;
            return this;
        }

        public Builder totalSize(Integer totalSize) {
            $.totalSize = totalSize;
            return this;
        }

        public Builder virtualDiskId(@Nullable String virtualDiskId) {
            $.virtualDiskId = virtualDiskId;
            return this;
        }

        public Builder virtualDiskName(String virtualDiskName) {
            $.virtualDiskName = virtualDiskName;
            return this;
        }

        public VirtualDiskResponse build() {
            $.controllerId = Objects.requireNonNull($.controllerId, "expected parameter 'controllerId' to be non-null");
            $.independenceMode = Objects.requireNonNull($.independenceMode, "expected parameter 'independenceMode' to be non-null");
            $.totalSize = Objects.requireNonNull($.totalSize, "expected parameter 'totalSize' to be non-null");
            $.virtualDiskName = Objects.requireNonNull($.virtualDiskName, "expected parameter 'virtualDiskName' to be non-null");
            return $;
        }
    }

}
