// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dbformysql.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Storage Profile properties of a server
 * 
 */
public final class StorageProfileResponse extends com.pulumi.resources.InvokeArgs {

    public static final StorageProfileResponse Empty = new StorageProfileResponse();

    /**
     * Backup retention days for the server.
     * 
     */
    @Import(name="backupRetentionDays")
    private @Nullable Integer backupRetentionDays;

    /**
     * @return Backup retention days for the server.
     * 
     */
    public Optional<Integer> backupRetentionDays() {
        return Optional.ofNullable(this.backupRetentionDays);
    }

    /**
     * Enable Geo-redundant or not for server backup.
     * 
     */
    @Import(name="geoRedundantBackup")
    private @Nullable String geoRedundantBackup;

    /**
     * @return Enable Geo-redundant or not for server backup.
     * 
     */
    public Optional<String> geoRedundantBackup() {
        return Optional.ofNullable(this.geoRedundantBackup);
    }

    /**
     * Enable Storage Auto Grow.
     * 
     */
    @Import(name="storageAutogrow")
    private @Nullable String storageAutogrow;

    /**
     * @return Enable Storage Auto Grow.
     * 
     */
    public Optional<String> storageAutogrow() {
        return Optional.ofNullable(this.storageAutogrow);
    }

    /**
     * Max storage allowed for a server.
     * 
     */
    @Import(name="storageMB")
    private @Nullable Integer storageMB;

    /**
     * @return Max storage allowed for a server.
     * 
     */
    public Optional<Integer> storageMB() {
        return Optional.ofNullable(this.storageMB);
    }

    private StorageProfileResponse() {}

    private StorageProfileResponse(StorageProfileResponse $) {
        this.backupRetentionDays = $.backupRetentionDays;
        this.geoRedundantBackup = $.geoRedundantBackup;
        this.storageAutogrow = $.storageAutogrow;
        this.storageMB = $.storageMB;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageProfileResponse $;

        public Builder() {
            $ = new StorageProfileResponse();
        }

        public Builder(StorageProfileResponse defaults) {
            $ = new StorageProfileResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupRetentionDays Backup retention days for the server.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionDays(@Nullable Integer backupRetentionDays) {
            $.backupRetentionDays = backupRetentionDays;
            return this;
        }

        /**
         * @param geoRedundantBackup Enable Geo-redundant or not for server backup.
         * 
         * @return builder
         * 
         */
        public Builder geoRedundantBackup(@Nullable String geoRedundantBackup) {
            $.geoRedundantBackup = geoRedundantBackup;
            return this;
        }

        /**
         * @param storageAutogrow Enable Storage Auto Grow.
         * 
         * @return builder
         * 
         */
        public Builder storageAutogrow(@Nullable String storageAutogrow) {
            $.storageAutogrow = storageAutogrow;
            return this;
        }

        /**
         * @param storageMB Max storage allowed for a server.
         * 
         * @return builder
         * 
         */
        public Builder storageMB(@Nullable Integer storageMB) {
            $.storageMB = storageMB;
            return this;
        }

        public StorageProfileResponse build() {
            return $;
        }
    }

}
