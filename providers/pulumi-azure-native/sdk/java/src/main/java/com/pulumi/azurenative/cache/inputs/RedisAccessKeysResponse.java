// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cache.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Redis cache access keys.
 * 
 */
public final class RedisAccessKeysResponse extends com.pulumi.resources.InvokeArgs {

    public static final RedisAccessKeysResponse Empty = new RedisAccessKeysResponse();

    /**
     * The current primary key that clients can use to authenticate with Redis cache.
     * 
     */
    @Import(name="primaryKey", required=true)
    private String primaryKey;

    public String primaryKey() {
        return this.primaryKey;
    }

    /**
     * The current secondary key that clients can use to authenticate with Redis cache.
     * 
     */
    @Import(name="secondaryKey", required=true)
    private String secondaryKey;

    public String secondaryKey() {
        return this.secondaryKey;
    }

    private RedisAccessKeysResponse() {}

    private RedisAccessKeysResponse(RedisAccessKeysResponse $) {
        this.primaryKey = $.primaryKey;
        this.secondaryKey = $.secondaryKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RedisAccessKeysResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RedisAccessKeysResponse $;

        public Builder() {
            $ = new RedisAccessKeysResponse();
        }

        public Builder(RedisAccessKeysResponse defaults) {
            $ = new RedisAccessKeysResponse(Objects.requireNonNull(defaults));
        }

        public Builder primaryKey(String primaryKey) {
            $.primaryKey = primaryKey;
            return this;
        }

        public Builder secondaryKey(String secondaryKey) {
            $.secondaryKey = secondaryKey;
            return this;
        }

        public RedisAccessKeysResponse build() {
            $.primaryKey = Objects.requireNonNull($.primaryKey, "expected parameter 'primaryKey' to be non-null");
            $.secondaryKey = Objects.requireNonNull($.secondaryKey, "expected parameter 'secondaryKey' to be non-null");
            return $;
        }
    }

}
