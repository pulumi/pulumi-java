// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.education.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetGetStudentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGetStudentPlainArgs Empty = new GetGetStudentPlainArgs();

    /**
     * Billing account name.
     * 
     */
    @Import(name="billingAccountName", required=true)
    private String billingAccountName;

    /**
     * @return Billing account name.
     * 
     */
    public String billingAccountName() {
        return this.billingAccountName;
    }

    /**
     * Billing profile name.
     * 
     */
    @Import(name="billingProfileName", required=true)
    private String billingProfileName;

    /**
     * @return Billing profile name.
     * 
     */
    public String billingProfileName() {
        return this.billingProfileName;
    }

    /**
     * Invoice section name.
     * 
     */
    @Import(name="invoiceSectionName", required=true)
    private String invoiceSectionName;

    /**
     * @return Invoice section name.
     * 
     */
    public String invoiceSectionName() {
        return this.invoiceSectionName;
    }

    /**
     * Student alias.
     * 
     */
    @Import(name="studentAlias", required=true)
    private String studentAlias;

    /**
     * @return Student alias.
     * 
     */
    public String studentAlias() {
        return this.studentAlias;
    }

    private GetGetStudentPlainArgs() {}

    private GetGetStudentPlainArgs(GetGetStudentPlainArgs $) {
        this.billingAccountName = $.billingAccountName;
        this.billingProfileName = $.billingProfileName;
        this.invoiceSectionName = $.invoiceSectionName;
        this.studentAlias = $.studentAlias;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGetStudentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGetStudentPlainArgs $;

        public Builder() {
            $ = new GetGetStudentPlainArgs();
        }

        public Builder(GetGetStudentPlainArgs defaults) {
            $ = new GetGetStudentPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param billingAccountName Billing account name.
         * 
         * @return builder
         * 
         */
        public Builder billingAccountName(String billingAccountName) {
            $.billingAccountName = billingAccountName;
            return this;
        }

        /**
         * @param billingProfileName Billing profile name.
         * 
         * @return builder
         * 
         */
        public Builder billingProfileName(String billingProfileName) {
            $.billingProfileName = billingProfileName;
            return this;
        }

        /**
         * @param invoiceSectionName Invoice section name.
         * 
         * @return builder
         * 
         */
        public Builder invoiceSectionName(String invoiceSectionName) {
            $.invoiceSectionName = invoiceSectionName;
            return this;
        }

        /**
         * @param studentAlias Student alias.
         * 
         * @return builder
         * 
         */
        public Builder studentAlias(String studentAlias) {
            $.studentAlias = studentAlias;
            return this;
        }

        public GetGetStudentPlainArgs build() {
            $.billingAccountName = Objects.requireNonNull($.billingAccountName, "expected parameter 'billingAccountName' to be non-null");
            $.billingProfileName = Objects.requireNonNull($.billingProfileName, "expected parameter 'billingProfileName' to be non-null");
            $.invoiceSectionName = Objects.requireNonNull($.invoiceSectionName, "expected parameter 'invoiceSectionName' to be non-null");
            $.studentAlias = Objects.requireNonNull($.studentAlias, "expected parameter 'studentAlias' to be non-null");
            return $;
        }
    }

}
