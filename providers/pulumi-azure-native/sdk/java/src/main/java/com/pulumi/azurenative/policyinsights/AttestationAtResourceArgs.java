// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.policyinsights;

import com.pulumi.azurenative.policyinsights.enums.ComplianceState;
import com.pulumi.azurenative.policyinsights.inputs.AttestationEvidenceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AttestationAtResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AttestationAtResourceArgs Empty = new AttestationAtResourceArgs();

    /**
     * The name of the attestation.
     * 
     */
    @Import(name="attestationName")
    private @Nullable Output<String> attestationName;

    /**
     * @return The name of the attestation.
     * 
     */
    public Optional<Output<String>> attestationName() {
        return Optional.ofNullable(this.attestationName);
    }

    /**
     * Comments describing why this attestation was created.
     * 
     */
    @Import(name="comments")
    private @Nullable Output<String> comments;

    /**
     * @return Comments describing why this attestation was created.
     * 
     */
    public Optional<Output<String>> comments() {
        return Optional.ofNullable(this.comments);
    }

    /**
     * The compliance state that should be set on the resource.
     * 
     */
    @Import(name="complianceState")
    private @Nullable Output<Either<String,ComplianceState>> complianceState;

    /**
     * @return The compliance state that should be set on the resource.
     * 
     */
    public Optional<Output<Either<String,ComplianceState>>> complianceState() {
        return Optional.ofNullable(this.complianceState);
    }

    /**
     * The evidence supporting the compliance state set in this attestation.
     * 
     */
    @Import(name="evidence")
    private @Nullable Output<List<AttestationEvidenceArgs>> evidence;

    /**
     * @return The evidence supporting the compliance state set in this attestation.
     * 
     */
    public Optional<Output<List<AttestationEvidenceArgs>>> evidence() {
        return Optional.ofNullable(this.evidence);
    }

    /**
     * The time the compliance state should expire.
     * 
     */
    @Import(name="expiresOn")
    private @Nullable Output<String> expiresOn;

    /**
     * @return The time the compliance state should expire.
     * 
     */
    public Optional<Output<String>> expiresOn() {
        return Optional.ofNullable(this.expiresOn);
    }

    /**
     * The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
     * 
     */
    @Import(name="owner")
    private @Nullable Output<String> owner;

    /**
     * @return The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
     * 
     */
    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    /**
     * The resource ID of the policy assignment that the attestation is setting the state for.
     * 
     */
    @Import(name="policyAssignmentId", required=true)
    private Output<String> policyAssignmentId;

    /**
     * @return The resource ID of the policy assignment that the attestation is setting the state for.
     * 
     */
    public Output<String> policyAssignmentId() {
        return this.policyAssignmentId;
    }

    /**
     * The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
     * 
     */
    @Import(name="policyDefinitionReferenceId")
    private @Nullable Output<String> policyDefinitionReferenceId;

    /**
     * @return The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
     * 
     */
    public Optional<Output<String>> policyDefinitionReferenceId() {
        return Optional.ofNullable(this.policyDefinitionReferenceId);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return Resource ID.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    private AttestationAtResourceArgs() {}

    private AttestationAtResourceArgs(AttestationAtResourceArgs $) {
        this.attestationName = $.attestationName;
        this.comments = $.comments;
        this.complianceState = $.complianceState;
        this.evidence = $.evidence;
        this.expiresOn = $.expiresOn;
        this.owner = $.owner;
        this.policyAssignmentId = $.policyAssignmentId;
        this.policyDefinitionReferenceId = $.policyDefinitionReferenceId;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AttestationAtResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AttestationAtResourceArgs $;

        public Builder() {
            $ = new AttestationAtResourceArgs();
        }

        public Builder(AttestationAtResourceArgs defaults) {
            $ = new AttestationAtResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attestationName The name of the attestation.
         * 
         * @return builder
         * 
         */
        public Builder attestationName(@Nullable Output<String> attestationName) {
            $.attestationName = attestationName;
            return this;
        }

        /**
         * @param attestationName The name of the attestation.
         * 
         * @return builder
         * 
         */
        public Builder attestationName(String attestationName) {
            return attestationName(Output.of(attestationName));
        }

        /**
         * @param comments Comments describing why this attestation was created.
         * 
         * @return builder
         * 
         */
        public Builder comments(@Nullable Output<String> comments) {
            $.comments = comments;
            return this;
        }

        /**
         * @param comments Comments describing why this attestation was created.
         * 
         * @return builder
         * 
         */
        public Builder comments(String comments) {
            return comments(Output.of(comments));
        }

        /**
         * @param complianceState The compliance state that should be set on the resource.
         * 
         * @return builder
         * 
         */
        public Builder complianceState(@Nullable Output<Either<String,ComplianceState>> complianceState) {
            $.complianceState = complianceState;
            return this;
        }

        /**
         * @param complianceState The compliance state that should be set on the resource.
         * 
         * @return builder
         * 
         */
        public Builder complianceState(Either<String,ComplianceState> complianceState) {
            return complianceState(Output.of(complianceState));
        }

        /**
         * @param complianceState The compliance state that should be set on the resource.
         * 
         * @return builder
         * 
         */
        public Builder complianceState(String complianceState) {
            return complianceState(Either.ofLeft(complianceState));
        }

        /**
         * @param complianceState The compliance state that should be set on the resource.
         * 
         * @return builder
         * 
         */
        public Builder complianceState(ComplianceState complianceState) {
            return complianceState(Either.ofRight(complianceState));
        }

        /**
         * @param evidence The evidence supporting the compliance state set in this attestation.
         * 
         * @return builder
         * 
         */
        public Builder evidence(@Nullable Output<List<AttestationEvidenceArgs>> evidence) {
            $.evidence = evidence;
            return this;
        }

        /**
         * @param evidence The evidence supporting the compliance state set in this attestation.
         * 
         * @return builder
         * 
         */
        public Builder evidence(List<AttestationEvidenceArgs> evidence) {
            return evidence(Output.of(evidence));
        }

        /**
         * @param evidence The evidence supporting the compliance state set in this attestation.
         * 
         * @return builder
         * 
         */
        public Builder evidence(AttestationEvidenceArgs... evidence) {
            return evidence(List.of(evidence));
        }

        /**
         * @param expiresOn The time the compliance state should expire.
         * 
         * @return builder
         * 
         */
        public Builder expiresOn(@Nullable Output<String> expiresOn) {
            $.expiresOn = expiresOn;
            return this;
        }

        /**
         * @param expiresOn The time the compliance state should expire.
         * 
         * @return builder
         * 
         */
        public Builder expiresOn(String expiresOn) {
            return expiresOn(Output.of(expiresOn));
        }

        /**
         * @param owner The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
         * 
         * @return builder
         * 
         */
        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        /**
         * @param owner The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
         * 
         * @return builder
         * 
         */
        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        /**
         * @param policyAssignmentId The resource ID of the policy assignment that the attestation is setting the state for.
         * 
         * @return builder
         * 
         */
        public Builder policyAssignmentId(Output<String> policyAssignmentId) {
            $.policyAssignmentId = policyAssignmentId;
            return this;
        }

        /**
         * @param policyAssignmentId The resource ID of the policy assignment that the attestation is setting the state for.
         * 
         * @return builder
         * 
         */
        public Builder policyAssignmentId(String policyAssignmentId) {
            return policyAssignmentId(Output.of(policyAssignmentId));
        }

        /**
         * @param policyDefinitionReferenceId The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferenceId(@Nullable Output<String> policyDefinitionReferenceId) {
            $.policyDefinitionReferenceId = policyDefinitionReferenceId;
            return this;
        }

        /**
         * @param policyDefinitionReferenceId The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferenceId(String policyDefinitionReferenceId) {
            return policyDefinitionReferenceId(Output.of(policyDefinitionReferenceId));
        }

        /**
         * @param resourceId Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        public AttestationAtResourceArgs build() {
            $.policyAssignmentId = Objects.requireNonNull($.policyAssignmentId, "expected parameter 'policyAssignmentId' to be non-null");
            $.resourceId = Objects.requireNonNull($.resourceId, "expected parameter 'resourceId' to be non-null");
            return $;
        }
    }

}
