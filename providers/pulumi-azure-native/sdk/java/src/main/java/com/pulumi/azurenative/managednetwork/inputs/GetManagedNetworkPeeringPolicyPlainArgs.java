// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.managednetwork.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetManagedNetworkPeeringPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedNetworkPeeringPolicyPlainArgs Empty = new GetManagedNetworkPeeringPolicyPlainArgs();

    /**
     * The name of the Managed Network.
     * 
     */
    @Import(name="managedNetworkName", required=true)
    private String managedNetworkName;

    /**
     * @return The name of the Managed Network.
     * 
     */
    public String managedNetworkName() {
        return this.managedNetworkName;
    }

    /**
     * The name of the Managed Network Peering Policy.
     * 
     */
    @Import(name="managedNetworkPeeringPolicyName", required=true)
    private String managedNetworkPeeringPolicyName;

    /**
     * @return The name of the Managed Network Peering Policy.
     * 
     */
    public String managedNetworkPeeringPolicyName() {
        return this.managedNetworkPeeringPolicyName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetManagedNetworkPeeringPolicyPlainArgs() {}

    private GetManagedNetworkPeeringPolicyPlainArgs(GetManagedNetworkPeeringPolicyPlainArgs $) {
        this.managedNetworkName = $.managedNetworkName;
        this.managedNetworkPeeringPolicyName = $.managedNetworkPeeringPolicyName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedNetworkPeeringPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedNetworkPeeringPolicyPlainArgs $;

        public Builder() {
            $ = new GetManagedNetworkPeeringPolicyPlainArgs();
        }

        public Builder(GetManagedNetworkPeeringPolicyPlainArgs defaults) {
            $ = new GetManagedNetworkPeeringPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managedNetworkName The name of the Managed Network.
         * 
         * @return builder
         * 
         */
        public Builder managedNetworkName(String managedNetworkName) {
            $.managedNetworkName = managedNetworkName;
            return this;
        }

        /**
         * @param managedNetworkPeeringPolicyName The name of the Managed Network Peering Policy.
         * 
         * @return builder
         * 
         */
        public Builder managedNetworkPeeringPolicyName(String managedNetworkPeeringPolicyName) {
            $.managedNetworkPeeringPolicyName = managedNetworkPeeringPolicyName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public GetManagedNetworkPeeringPolicyPlainArgs build() {
            $.managedNetworkName = Objects.requireNonNull($.managedNetworkName, "expected parameter 'managedNetworkName' to be non-null");
            $.managedNetworkPeeringPolicyName = Objects.requireNonNull($.managedNetworkPeeringPolicyName, "expected parameter 'managedNetworkPeeringPolicyName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
