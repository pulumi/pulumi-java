// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.enums.TrailingSeparatorPolicy;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * The Edifact validation override settings.
 * 
 */
public final class EdifactValidationOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final EdifactValidationOverrideArgs Empty = new EdifactValidationOverrideArgs();

    /**
     * The value indicating whether to allow leading and trailing spaces and zeroes.
     * 
     */
    @Import(name="allowLeadingAndTrailingSpacesAndZeroes", required=true)
    private Output<Boolean> allowLeadingAndTrailingSpacesAndZeroes;

    public Output<Boolean> allowLeadingAndTrailingSpacesAndZeroes() {
        return this.allowLeadingAndTrailingSpacesAndZeroes;
    }

    /**
     * The value indicating whether to validate character Set.
     * 
     */
    @Import(name="enforceCharacterSet", required=true)
    private Output<Boolean> enforceCharacterSet;

    public Output<Boolean> enforceCharacterSet() {
        return this.enforceCharacterSet;
    }

    /**
     * The message id on which the validation settings has to be applied.
     * 
     */
    @Import(name="messageId", required=true)
    private Output<String> messageId;

    public Output<String> messageId() {
        return this.messageId;
    }

    /**
     * The trailing separator policy.
     * 
     */
    @Import(name="trailingSeparatorPolicy", required=true)
    private Output<Either<String,TrailingSeparatorPolicy>> trailingSeparatorPolicy;

    public Output<Either<String,TrailingSeparatorPolicy>> trailingSeparatorPolicy() {
        return this.trailingSeparatorPolicy;
    }

    /**
     * The value indicating whether to trim leading and trailing spaces and zeroes.
     * 
     */
    @Import(name="trimLeadingAndTrailingSpacesAndZeroes", required=true)
    private Output<Boolean> trimLeadingAndTrailingSpacesAndZeroes;

    public Output<Boolean> trimLeadingAndTrailingSpacesAndZeroes() {
        return this.trimLeadingAndTrailingSpacesAndZeroes;
    }

    /**
     * The value indicating whether to validate EDI types.
     * 
     */
    @Import(name="validateEDITypes", required=true)
    private Output<Boolean> validateEDITypes;

    public Output<Boolean> validateEDITypes() {
        return this.validateEDITypes;
    }

    /**
     * The value indicating whether to validate XSD types.
     * 
     */
    @Import(name="validateXSDTypes", required=true)
    private Output<Boolean> validateXSDTypes;

    public Output<Boolean> validateXSDTypes() {
        return this.validateXSDTypes;
    }

    private EdifactValidationOverrideArgs() {}

    private EdifactValidationOverrideArgs(EdifactValidationOverrideArgs $) {
        this.allowLeadingAndTrailingSpacesAndZeroes = $.allowLeadingAndTrailingSpacesAndZeroes;
        this.enforceCharacterSet = $.enforceCharacterSet;
        this.messageId = $.messageId;
        this.trailingSeparatorPolicy = $.trailingSeparatorPolicy;
        this.trimLeadingAndTrailingSpacesAndZeroes = $.trimLeadingAndTrailingSpacesAndZeroes;
        this.validateEDITypes = $.validateEDITypes;
        this.validateXSDTypes = $.validateXSDTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EdifactValidationOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdifactValidationOverrideArgs $;

        public Builder() {
            $ = new EdifactValidationOverrideArgs();
        }

        public Builder(EdifactValidationOverrideArgs defaults) {
            $ = new EdifactValidationOverrideArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowLeadingAndTrailingSpacesAndZeroes(Output<Boolean> allowLeadingAndTrailingSpacesAndZeroes) {
            $.allowLeadingAndTrailingSpacesAndZeroes = allowLeadingAndTrailingSpacesAndZeroes;
            return this;
        }

        public Builder allowLeadingAndTrailingSpacesAndZeroes(Boolean allowLeadingAndTrailingSpacesAndZeroes) {
            return allowLeadingAndTrailingSpacesAndZeroes(Output.of(allowLeadingAndTrailingSpacesAndZeroes));
        }

        public Builder enforceCharacterSet(Output<Boolean> enforceCharacterSet) {
            $.enforceCharacterSet = enforceCharacterSet;
            return this;
        }

        public Builder enforceCharacterSet(Boolean enforceCharacterSet) {
            return enforceCharacterSet(Output.of(enforceCharacterSet));
        }

        public Builder messageId(Output<String> messageId) {
            $.messageId = messageId;
            return this;
        }

        public Builder messageId(String messageId) {
            return messageId(Output.of(messageId));
        }

        public Builder trailingSeparatorPolicy(Output<Either<String,TrailingSeparatorPolicy>> trailingSeparatorPolicy) {
            $.trailingSeparatorPolicy = trailingSeparatorPolicy;
            return this;
        }

        public Builder trailingSeparatorPolicy(Either<String,TrailingSeparatorPolicy> trailingSeparatorPolicy) {
            return trailingSeparatorPolicy(Output.of(trailingSeparatorPolicy));
        }

        public Builder trimLeadingAndTrailingSpacesAndZeroes(Output<Boolean> trimLeadingAndTrailingSpacesAndZeroes) {
            $.trimLeadingAndTrailingSpacesAndZeroes = trimLeadingAndTrailingSpacesAndZeroes;
            return this;
        }

        public Builder trimLeadingAndTrailingSpacesAndZeroes(Boolean trimLeadingAndTrailingSpacesAndZeroes) {
            return trimLeadingAndTrailingSpacesAndZeroes(Output.of(trimLeadingAndTrailingSpacesAndZeroes));
        }

        public Builder validateEDITypes(Output<Boolean> validateEDITypes) {
            $.validateEDITypes = validateEDITypes;
            return this;
        }

        public Builder validateEDITypes(Boolean validateEDITypes) {
            return validateEDITypes(Output.of(validateEDITypes));
        }

        public Builder validateXSDTypes(Output<Boolean> validateXSDTypes) {
            $.validateXSDTypes = validateXSDTypes;
            return this;
        }

        public Builder validateXSDTypes(Boolean validateXSDTypes) {
            return validateXSDTypes(Output.of(validateXSDTypes));
        }

        public EdifactValidationOverrideArgs build() {
            $.allowLeadingAndTrailingSpacesAndZeroes = Objects.requireNonNull($.allowLeadingAndTrailingSpacesAndZeroes, "expected parameter 'allowLeadingAndTrailingSpacesAndZeroes' to be non-null");
            $.enforceCharacterSet = Objects.requireNonNull($.enforceCharacterSet, "expected parameter 'enforceCharacterSet' to be non-null");
            $.messageId = Objects.requireNonNull($.messageId, "expected parameter 'messageId' to be non-null");
            $.trailingSeparatorPolicy = Objects.requireNonNull($.trailingSeparatorPolicy, "expected parameter 'trailingSeparatorPolicy' to be non-null");
            $.trimLeadingAndTrailingSpacesAndZeroes = Objects.requireNonNull($.trimLeadingAndTrailingSpacesAndZeroes, "expected parameter 'trimLeadingAndTrailingSpacesAndZeroes' to be non-null");
            $.validateEDITypes = Objects.requireNonNull($.validateEDITypes, "expected parameter 'validateEDITypes' to be non-null");
            $.validateXSDTypes = Objects.requireNonNull($.validateXSDTypes, "expected parameter 'validateXSDTypes' to be non-null");
            return $;
        }
    }

}
