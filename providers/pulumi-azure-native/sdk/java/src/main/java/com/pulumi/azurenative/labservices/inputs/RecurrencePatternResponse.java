// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Recurrence pattern of a lab schedule.
 * 
 */
public final class RecurrencePatternResponse extends com.pulumi.resources.InvokeArgs {

    public static final RecurrencePatternResponse Empty = new RecurrencePatternResponse();

    /**
     * When the recurrence will expire. This date is inclusive.
     * 
     */
    @Import(name="expirationDate", required=true)
    private String expirationDate;

    /**
     * @return When the recurrence will expire. This date is inclusive.
     * 
     */
    public String expirationDate() {
        return this.expirationDate;
    }

    /**
     * The frequency of the recurrence.
     * 
     */
    @Import(name="frequency", required=true)
    private String frequency;

    /**
     * @return The frequency of the recurrence.
     * 
     */
    public String frequency() {
        return this.frequency;
    }

    /**
     * The interval to invoke the schedule on. For example, interval = 2 and RecurrenceFrequency.Daily will run every 2 days. When no interval is supplied, an interval of 1 is used.
     * 
     */
    @Import(name="interval")
    private @Nullable Integer interval;

    /**
     * @return The interval to invoke the schedule on. For example, interval = 2 and RecurrenceFrequency.Daily will run every 2 days. When no interval is supplied, an interval of 1 is used.
     * 
     */
    public Optional<Integer> interval() {
        return Optional.ofNullable(this.interval);
    }

    /**
     * The week days the schedule runs. Used for when the Frequency is set to Weekly.
     * 
     */
    @Import(name="weekDays")
    private @Nullable List<String> weekDays;

    /**
     * @return The week days the schedule runs. Used for when the Frequency is set to Weekly.
     * 
     */
    public Optional<List<String>> weekDays() {
        return Optional.ofNullable(this.weekDays);
    }

    private RecurrencePatternResponse() {}

    private RecurrencePatternResponse(RecurrencePatternResponse $) {
        this.expirationDate = $.expirationDate;
        this.frequency = $.frequency;
        this.interval = $.interval;
        this.weekDays = $.weekDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecurrencePatternResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecurrencePatternResponse $;

        public Builder() {
            $ = new RecurrencePatternResponse();
        }

        public Builder(RecurrencePatternResponse defaults) {
            $ = new RecurrencePatternResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param expirationDate When the recurrence will expire. This date is inclusive.
         * 
         * @return builder
         * 
         */
        public Builder expirationDate(String expirationDate) {
            $.expirationDate = expirationDate;
            return this;
        }

        /**
         * @param frequency The frequency of the recurrence.
         * 
         * @return builder
         * 
         */
        public Builder frequency(String frequency) {
            $.frequency = frequency;
            return this;
        }

        /**
         * @param interval The interval to invoke the schedule on. For example, interval = 2 and RecurrenceFrequency.Daily will run every 2 days. When no interval is supplied, an interval of 1 is used.
         * 
         * @return builder
         * 
         */
        public Builder interval(@Nullable Integer interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param weekDays The week days the schedule runs. Used for when the Frequency is set to Weekly.
         * 
         * @return builder
         * 
         */
        public Builder weekDays(@Nullable List<String> weekDays) {
            $.weekDays = weekDays;
            return this;
        }

        /**
         * @param weekDays The week days the schedule runs. Used for when the Frequency is set to Weekly.
         * 
         * @return builder
         * 
         */
        public Builder weekDays(String... weekDays) {
            return weekDays(List.of(weekDays));
        }

        public RecurrencePatternResponse build() {
            $.expirationDate = Objects.requireNonNull($.expirationDate, "expected parameter 'expirationDate' to be non-null");
            $.frequency = Objects.requireNonNull($.frequency, "expected parameter 'frequency' to be non-null");
            return $;
        }
    }

}
