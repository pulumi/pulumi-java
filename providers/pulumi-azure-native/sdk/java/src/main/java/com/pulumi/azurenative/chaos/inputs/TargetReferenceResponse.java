// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.chaos.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Model that represents a reference to a Target in the selector.
 * 
 */
public final class TargetReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final TargetReferenceResponse Empty = new TargetReferenceResponse();

    /**
     * String of the resource ID of a Target resource.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * Enum of the Target reference type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private TargetReferenceResponse() {}

    private TargetReferenceResponse(TargetReferenceResponse $) {
        this.id = $.id;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetReferenceResponse $;

        public Builder() {
            $ = new TargetReferenceResponse();
        }

        public Builder(TargetReferenceResponse defaults) {
            $ = new TargetReferenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public TargetReferenceResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
