// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A rule for NAT - exposing a VM&#39;s port (backendPort) on the public IP address using a load balancer.
 * 
 */
public final class InboundNatRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final InboundNatRuleResponse Empty = new InboundNatRuleResponse();

    /**
     * The port to which the external traffic will be redirected.
     * 
     */
    @Import(name="backendPort")
    private @Nullable Integer backendPort;

    public Optional<Integer> backendPort() {
        return Optional.ofNullable(this.backendPort);
    }

    /**
     * The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
     * 
     */
    @Import(name="frontendPort")
    private @Nullable Integer frontendPort;

    public Optional<Integer> frontendPort() {
        return Optional.ofNullable(this.frontendPort);
    }

    /**
     * The transport protocol for the endpoint.
     * 
     */
    @Import(name="transportProtocol")
    private @Nullable String transportProtocol;

    public Optional<String> transportProtocol() {
        return Optional.ofNullable(this.transportProtocol);
    }

    private InboundNatRuleResponse() {}

    private InboundNatRuleResponse(InboundNatRuleResponse $) {
        this.backendPort = $.backendPort;
        this.frontendPort = $.frontendPort;
        this.transportProtocol = $.transportProtocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InboundNatRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InboundNatRuleResponse $;

        public Builder() {
            $ = new InboundNatRuleResponse();
        }

        public Builder(InboundNatRuleResponse defaults) {
            $ = new InboundNatRuleResponse(Objects.requireNonNull(defaults));
        }

        public Builder backendPort(@Nullable Integer backendPort) {
            $.backendPort = backendPort;
            return this;
        }

        public Builder frontendPort(@Nullable Integer frontendPort) {
            $.frontendPort = frontendPort;
            return this;
        }

        public Builder transportProtocol(@Nullable String transportProtocol) {
            $.transportProtocol = transportProtocol;
            return this;
        }

        public InboundNatRuleResponse build() {
            return $;
        }
    }

}
