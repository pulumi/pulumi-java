// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Static definitions of the ProactiveDetection configuration rule (same values for all components).
 * 
 */
public final class ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions Empty = new ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions();

    /**
     * The rule description
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return The rule description
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The rule name as it is displayed in UI
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return The rule name as it is displayed in UI
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * URL which displays additional info about the proactive detection rule
     * 
     */
    @Import(name="helpUrl")
    private @Nullable String helpUrl;

    /**
     * @return URL which displays additional info about the proactive detection rule
     * 
     */
    public Optional<String> helpUrl() {
        return Optional.ofNullable(this.helpUrl);
    }

    /**
     * A flag indicating whether the rule is enabled by default
     * 
     */
    @Import(name="isEnabledByDefault")
    private @Nullable Boolean isEnabledByDefault;

    /**
     * @return A flag indicating whether the rule is enabled by default
     * 
     */
    public Optional<Boolean> isEnabledByDefault() {
        return Optional.ofNullable(this.isEnabledByDefault);
    }

    /**
     * A flag indicating whether the rule is hidden (from the UI)
     * 
     */
    @Import(name="isHidden")
    private @Nullable Boolean isHidden;

    /**
     * @return A flag indicating whether the rule is hidden (from the UI)
     * 
     */
    public Optional<Boolean> isHidden() {
        return Optional.ofNullable(this.isHidden);
    }

    /**
     * A flag indicating whether the rule is in preview
     * 
     */
    @Import(name="isInPreview")
    private @Nullable Boolean isInPreview;

    /**
     * @return A flag indicating whether the rule is in preview
     * 
     */
    public Optional<Boolean> isInPreview() {
        return Optional.ofNullable(this.isInPreview);
    }

    /**
     * The rule name
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The rule name
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A flag indicating whether email notifications are supported for detections for this rule
     * 
     */
    @Import(name="supportsEmailNotifications")
    private @Nullable Boolean supportsEmailNotifications;

    /**
     * @return A flag indicating whether email notifications are supported for detections for this rule
     * 
     */
    public Optional<Boolean> supportsEmailNotifications() {
        return Optional.ofNullable(this.supportsEmailNotifications);
    }

    private ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions() {}

    private ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions(ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.helpUrl = $.helpUrl;
        this.isEnabledByDefault = $.isEnabledByDefault;
        this.isHidden = $.isHidden;
        this.isInPreview = $.isInPreview;
        this.name = $.name;
        this.supportsEmailNotifications = $.supportsEmailNotifications;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions $;

        public Builder() {
            $ = new ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions();
        }

        public Builder(ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions defaults) {
            $ = new ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The rule description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param displayName The rule name as it is displayed in UI
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param helpUrl URL which displays additional info about the proactive detection rule
         * 
         * @return builder
         * 
         */
        public Builder helpUrl(@Nullable String helpUrl) {
            $.helpUrl = helpUrl;
            return this;
        }

        /**
         * @param isEnabledByDefault A flag indicating whether the rule is enabled by default
         * 
         * @return builder
         * 
         */
        public Builder isEnabledByDefault(@Nullable Boolean isEnabledByDefault) {
            $.isEnabledByDefault = isEnabledByDefault;
            return this;
        }

        /**
         * @param isHidden A flag indicating whether the rule is hidden (from the UI)
         * 
         * @return builder
         * 
         */
        public Builder isHidden(@Nullable Boolean isHidden) {
            $.isHidden = isHidden;
            return this;
        }

        /**
         * @param isInPreview A flag indicating whether the rule is in preview
         * 
         * @return builder
         * 
         */
        public Builder isInPreview(@Nullable Boolean isInPreview) {
            $.isInPreview = isInPreview;
            return this;
        }

        /**
         * @param name The rule name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param supportsEmailNotifications A flag indicating whether email notifications are supported for detections for this rule
         * 
         * @return builder
         * 
         */
        public Builder supportsEmailNotifications(@Nullable Boolean supportsEmailNotifications) {
            $.supportsEmailNotifications = supportsEmailNotifications;
            return this;
        }

        public ApplicationInsightsComponentProactiveDetectionConfigurationResponseRuleDefinitions build() {
            return $;
        }
    }

}
