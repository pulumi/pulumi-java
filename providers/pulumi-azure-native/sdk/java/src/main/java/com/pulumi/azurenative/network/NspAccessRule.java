// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.network.NspAccessRuleArgs;
import com.pulumi.azurenative.network.outputs.PerimeterBasedAccessRuleResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The NSP access rule resource
 * API Version: 2021-02-01-preview.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:NspAccessRule accessRule1 /subscriptions/subId/resourceGroup/rg1/providers/Microsoft.Network/networkSecurityPerimeters/nsp1/profiles/profile1/accessRules/accessRule1 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:NspAccessRule")
public class NspAccessRule extends com.pulumi.resources.CustomResource {
    /**
     * Inbound address prefixes (IPv4/IPv6)
     * 
     */
    @Export(name="addressPrefixes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> addressPrefixes;

    /**
     * @return Inbound address prefixes (IPv4/IPv6)
     * 
     */
    public Output<Optional<List<String>>> addressPrefixes() {
        return Codegen.optional(this.addressPrefixes);
    }
    /**
     * Direction that specifies whether the access rules is inbound/outbound.
     * 
     */
    @Export(name="direction", type=String.class, parameters={})
    private Output</* @Nullable */ String> direction;

    /**
     * @return Direction that specifies whether the access rules is inbound/outbound.
     * 
     */
    public Output<Optional<String>> direction() {
        return Codegen.optional(this.direction);
    }
    /**
     * Outbound rules fully qualified domain name format.
     * 
     */
    @Export(name="fullyQualifiedDomainNames", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> fullyQualifiedDomainNames;

    /**
     * @return Outbound rules fully qualified domain name format.
     * 
     */
    public Output<Optional<List<String>>> fullyQualifiedDomainNames() {
        return Codegen.optional(this.fullyQualifiedDomainNames);
    }
    /**
     * Resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Inbound rule specified by the perimeter id.
     * 
     */
    @Export(name="networkSecurityPerimeters", type=List.class, parameters={PerimeterBasedAccessRuleResponse.class})
    private Output</* @Nullable */ List<PerimeterBasedAccessRuleResponse>> networkSecurityPerimeters;

    /**
     * @return Inbound rule specified by the perimeter id.
     * 
     */
    public Output<Optional<List<PerimeterBasedAccessRuleResponse>>> networkSecurityPerimeters() {
        return Codegen.optional(this.networkSecurityPerimeters);
    }
    /**
     * The provisioning state of the scope assignment resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the scope assignment resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Subscription id in the ARM id format.
     * 
     */
    @Export(name="subscriptions", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> subscriptions;

    /**
     * @return Subscription id in the ARM id format.
     * 
     */
    public Output<Optional<List<String>>> subscriptions() {
        return Codegen.optional(this.subscriptions);
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NspAccessRule(String name) {
        this(name, NspAccessRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NspAccessRule(String name, NspAccessRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NspAccessRule(String name, NspAccessRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:NspAccessRule", name, args == null ? NspAccessRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NspAccessRule(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:NspAccessRule", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:network/v20210201preview:NspAccessRule").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NspAccessRule get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NspAccessRule(name, id, options);
    }
}
