// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The list of Log Analytics workspaces associated with the cluster.
 * 
 */
public final class AssociatedWorkspaceResponse extends com.pulumi.resources.InvokeArgs {

    public static final AssociatedWorkspaceResponse Empty = new AssociatedWorkspaceResponse();

    /**
     * The time of workspace association.
     * 
     */
    @Import(name="associateDate", required=true)
    private String associateDate;

    public String associateDate() {
        return this.associateDate;
    }

    /**
     * The ResourceId id the assigned workspace.
     * 
     */
    @Import(name="resourceId", required=true)
    private String resourceId;

    public String resourceId() {
        return this.resourceId;
    }

    /**
     * The id of the assigned workspace.
     * 
     */
    @Import(name="workspaceId", required=true)
    private String workspaceId;

    public String workspaceId() {
        return this.workspaceId;
    }

    /**
     * The name id the assigned workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private String workspaceName;

    public String workspaceName() {
        return this.workspaceName;
    }

    private AssociatedWorkspaceResponse() {}

    private AssociatedWorkspaceResponse(AssociatedWorkspaceResponse $) {
        this.associateDate = $.associateDate;
        this.resourceId = $.resourceId;
        this.workspaceId = $.workspaceId;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssociatedWorkspaceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssociatedWorkspaceResponse $;

        public Builder() {
            $ = new AssociatedWorkspaceResponse();
        }

        public Builder(AssociatedWorkspaceResponse defaults) {
            $ = new AssociatedWorkspaceResponse(Objects.requireNonNull(defaults));
        }

        public Builder associateDate(String associateDate) {
            $.associateDate = associateDate;
            return this;
        }

        public Builder resourceId(String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        public AssociatedWorkspaceResponse build() {
            $.associateDate = Objects.requireNonNull($.associateDate, "expected parameter 'associateDate' to be non-null");
            $.resourceId = Objects.requireNonNull($.resourceId, "expected parameter 'resourceId' to be non-null");
            $.workspaceId = Objects.requireNonNull($.workspaceId, "expected parameter 'workspaceId' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
