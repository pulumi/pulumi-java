// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.inputs;

import com.pulumi.azurenative.securityinsights.enums.ContentType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The mapping of content type to a repo path.
 * 
 */
public final class ContentPathMapArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContentPathMapArgs Empty = new ContentPathMapArgs();

    /**
     * Content type.
     * 
     */
    @Import(name="contentType")
    private @Nullable Output<Either<String,ContentType>> contentType;

    public Optional<Output<Either<String,ContentType>>> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    /**
     * The path to the content.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private ContentPathMapArgs() {}

    private ContentPathMapArgs(ContentPathMapArgs $) {
        this.contentType = $.contentType;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentPathMapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentPathMapArgs $;

        public Builder() {
            $ = new ContentPathMapArgs();
        }

        public Builder(ContentPathMapArgs defaults) {
            $ = new ContentPathMapArgs(Objects.requireNonNull(defaults));
        }

        public Builder contentType(@Nullable Output<Either<String,ContentType>> contentType) {
            $.contentType = contentType;
            return this;
        }

        public Builder contentType(Either<String,ContentType> contentType) {
            return contentType(Output.of(contentType));
        }

        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public ContentPathMapArgs build() {
            return $;
        }
    }

}
