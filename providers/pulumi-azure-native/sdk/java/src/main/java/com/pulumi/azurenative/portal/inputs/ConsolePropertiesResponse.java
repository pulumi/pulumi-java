// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.portal.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Cloud shell console properties.
 * 
 */
public final class ConsolePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ConsolePropertiesResponse Empty = new ConsolePropertiesResponse();

    /**
     * The operating system type of the cloud shell.
     * 
     */
    @Import(name="osType", required=true)
    private String osType;

    /**
     * @return The operating system type of the cloud shell.
     * 
     */
    public String osType() {
        return this.osType;
    }

    /**
     * Provisioning state of the console.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return Provisioning state of the console.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Uri of the console.
     * 
     */
    @Import(name="uri", required=true)
    private String uri;

    /**
     * @return Uri of the console.
     * 
     */
    public String uri() {
        return this.uri;
    }

    private ConsolePropertiesResponse() {}

    private ConsolePropertiesResponse(ConsolePropertiesResponse $) {
        this.osType = $.osType;
        this.provisioningState = $.provisioningState;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsolePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsolePropertiesResponse $;

        public Builder() {
            $ = new ConsolePropertiesResponse();
        }

        public Builder(ConsolePropertiesResponse defaults) {
            $ = new ConsolePropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param osType The operating system type of the cloud shell.
         * 
         * @return builder
         * 
         */
        public Builder osType(String osType) {
            $.osType = osType;
            return this;
        }

        /**
         * @param provisioningState Provisioning state of the console.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param uri Uri of the console.
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            $.uri = uri;
            return this;
        }

        public ConsolePropertiesResponse build() {
            $.osType = Objects.requireNonNull($.osType, "expected parameter 'osType' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.uri = Objects.requireNonNull($.uri, "expected parameter 'uri' to be non-null");
            return $;
        }
    }

}
