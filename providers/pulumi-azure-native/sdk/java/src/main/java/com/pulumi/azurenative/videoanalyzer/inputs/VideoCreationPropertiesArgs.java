// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Optional properties to be used in case a new video resource needs to be created on the service. These will not take effect if the video already exists.
 * 
 */
public final class VideoCreationPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final VideoCreationPropertiesArgs Empty = new VideoCreationPropertiesArgs();

    /**
     * Optional description provided by the user. Value can be up to 2048 characters long.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Optional description provided by the user. Value can be up to 2048 characters long.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format (i.e. &#34;P1D&#34; equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content is retained indefinitely. This property is only allowed for topologies where &#34;kind&#34; is set to &#34;live&#34;.
     * 
     */
    @Import(name="retentionPeriod")
    private @Nullable Output<String> retentionPeriod;

    /**
     * @return Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format (i.e. &#34;P1D&#34; equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content is retained indefinitely. This property is only allowed for topologies where &#34;kind&#34; is set to &#34;live&#34;.
     * 
     */
    public Optional<Output<String>> retentionPeriod() {
        return Optional.ofNullable(this.retentionPeriod);
    }

    /**
     * Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. &#34;PT30S&#34; equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the initial call to create the video resource can lead to errors when uploading content to the archive. Default value is 30 seconds. This property is only allowed for topologies where &#34;kind&#34; is set to &#34;live&#34;.
     * 
     */
    @Import(name="segmentLength")
    private @Nullable Output<String> segmentLength;

    /**
     * @return Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. &#34;PT30S&#34; equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the initial call to create the video resource can lead to errors when uploading content to the archive. Default value is 30 seconds. This property is only allowed for topologies where &#34;kind&#34; is set to &#34;live&#34;.
     * 
     */
    public Optional<Output<String>> segmentLength() {
        return Optional.ofNullable(this.segmentLength);
    }

    /**
     * Optional title provided by the user. Value can be up to 256 characters long.
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    /**
     * @return Optional title provided by the user. Value can be up to 256 characters long.
     * 
     */
    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    private VideoCreationPropertiesArgs() {}

    private VideoCreationPropertiesArgs(VideoCreationPropertiesArgs $) {
        this.description = $.description;
        this.retentionPeriod = $.retentionPeriod;
        this.segmentLength = $.segmentLength;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VideoCreationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VideoCreationPropertiesArgs $;

        public Builder() {
            $ = new VideoCreationPropertiesArgs();
        }

        public Builder(VideoCreationPropertiesArgs defaults) {
            $ = new VideoCreationPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Optional description provided by the user. Value can be up to 2048 characters long.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Optional description provided by the user. Value can be up to 2048 characters long.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param retentionPeriod Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format (i.e. &#34;P1D&#34; equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content is retained indefinitely. This property is only allowed for topologies where &#34;kind&#34; is set to &#34;live&#34;.
         * 
         * @return builder
         * 
         */
        public Builder retentionPeriod(@Nullable Output<String> retentionPeriod) {
            $.retentionPeriod = retentionPeriod;
            return this;
        }

        /**
         * @param retentionPeriod Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format (i.e. &#34;P1D&#34; equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content is retained indefinitely. This property is only allowed for topologies where &#34;kind&#34; is set to &#34;live&#34;.
         * 
         * @return builder
         * 
         */
        public Builder retentionPeriod(String retentionPeriod) {
            return retentionPeriod(Output.of(retentionPeriod));
        }

        /**
         * @param segmentLength Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. &#34;PT30S&#34; equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the initial call to create the video resource can lead to errors when uploading content to the archive. Default value is 30 seconds. This property is only allowed for topologies where &#34;kind&#34; is set to &#34;live&#34;.
         * 
         * @return builder
         * 
         */
        public Builder segmentLength(@Nullable Output<String> segmentLength) {
            $.segmentLength = segmentLength;
            return this;
        }

        /**
         * @param segmentLength Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. &#34;PT30S&#34; equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the initial call to create the video resource can lead to errors when uploading content to the archive. Default value is 30 seconds. This property is only allowed for topologies where &#34;kind&#34; is set to &#34;live&#34;.
         * 
         * @return builder
         * 
         */
        public Builder segmentLength(String segmentLength) {
            return segmentLength(Output.of(segmentLength));
        }

        /**
         * @param title Optional title provided by the user. Value can be up to 256 characters long.
         * 
         * @return builder
         * 
         */
        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title Optional title provided by the user. Value can be up to 256 characters long.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        public VideoCreationPropertiesArgs build() {
            return $;
        }
    }

}
