// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cache.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SKU parameters supplied to the create RedisEnterprise operation.
 * 
 */
public final class EnterpriseSkuResponse extends com.pulumi.resources.InvokeArgs {

    public static final EnterpriseSkuResponse Empty = new EnterpriseSkuResponse();

    /**
     * The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.
     * 
     */
    @Import(name="capacity")
    private @Nullable Integer capacity;

    /**
     * @return The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.
     * 
     */
    public Optional<Integer> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
     * 
     */
    public String name() {
        return this.name;
    }

    private EnterpriseSkuResponse() {}

    private EnterpriseSkuResponse(EnterpriseSkuResponse $) {
        this.capacity = $.capacity;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnterpriseSkuResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnterpriseSkuResponse $;

        public Builder() {
            $ = new EnterpriseSkuResponse();
        }

        public Builder(EnterpriseSkuResponse defaults) {
            $ = new EnterpriseSkuResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacity The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.
         * 
         * @return builder
         * 
         */
        public Builder capacity(@Nullable Integer capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param name The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public EnterpriseSkuResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
