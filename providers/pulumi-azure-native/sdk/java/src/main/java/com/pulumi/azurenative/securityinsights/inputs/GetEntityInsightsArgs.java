// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEntityInsightsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEntityInsightsArgs Empty = new GetEntityInsightsArgs();

    /**
     * Indicates if query time range should be extended with default time range of the query. Default value is false
     * 
     */
    @Import(name="addDefaultExtendedTimeRange")
      private final @Nullable Boolean addDefaultExtendedTimeRange;

    public Optional<Boolean> addDefaultExtendedTimeRange() {
        return this.addDefaultExtendedTimeRange == null ? Optional.empty() : Optional.ofNullable(this.addDefaultExtendedTimeRange);
    }

    /**
     * The end timeline date, so the results returned are before this date.
     * 
     */
    @Import(name="endTime", required=true)
      private final String endTime;

    public String endTime() {
        return this.endTime;
    }

    /**
     * entity ID
     * 
     */
    @Import(name="entityId", required=true)
      private final String entityId;

    public String entityId() {
        return this.entityId;
    }

    /**
     * List of Insights Query Id. If empty, default value is all insights of this entity
     * 
     */
    @Import(name="insightQueryIds")
      private final @Nullable List<String> insightQueryIds;

    public List<String> insightQueryIds() {
        return this.insightQueryIds == null ? List.of() : this.insightQueryIds;
    }

    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     * 
     */
    @Import(name="operationalInsightsResourceProvider", required=true)
      private final String operationalInsightsResourceProvider;

    public String operationalInsightsResourceProvider() {
        return this.operationalInsightsResourceProvider;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final String resourceGroupName;

    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The start timeline date, so the results returned are after this date.
     * 
     */
    @Import(name="startTime", required=true)
      private final String startTime;

    public String startTime() {
        return this.startTime;
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
      private final String workspaceName;

    public String workspaceName() {
        return this.workspaceName;
    }

    public GetEntityInsightsArgs(
        @Nullable Boolean addDefaultExtendedTimeRange,
        String endTime,
        String entityId,
        @Nullable List<String> insightQueryIds,
        String operationalInsightsResourceProvider,
        String resourceGroupName,
        String startTime,
        String workspaceName) {
        this.addDefaultExtendedTimeRange = addDefaultExtendedTimeRange;
        this.endTime = Objects.requireNonNull(endTime, "expected parameter 'endTime' to be non-null");
        this.entityId = Objects.requireNonNull(entityId, "expected parameter 'entityId' to be non-null");
        this.insightQueryIds = insightQueryIds;
        this.operationalInsightsResourceProvider = Objects.requireNonNull(operationalInsightsResourceProvider, "expected parameter 'operationalInsightsResourceProvider' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private GetEntityInsightsArgs() {
        this.addDefaultExtendedTimeRange = null;
        this.endTime = null;
        this.entityId = null;
        this.insightQueryIds = List.of();
        this.operationalInsightsResourceProvider = null;
        this.resourceGroupName = null;
        this.startTime = null;
        this.workspaceName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntityInsightsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean addDefaultExtendedTimeRange;
        private String endTime;
        private String entityId;
        private @Nullable List<String> insightQueryIds;
        private String operationalInsightsResourceProvider;
        private String resourceGroupName;
        private String startTime;
        private String workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEntityInsightsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addDefaultExtendedTimeRange = defaults.addDefaultExtendedTimeRange;
    	      this.endTime = defaults.endTime;
    	      this.entityId = defaults.entityId;
    	      this.insightQueryIds = defaults.insightQueryIds;
    	      this.operationalInsightsResourceProvider = defaults.operationalInsightsResourceProvider;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.startTime = defaults.startTime;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder addDefaultExtendedTimeRange(@Nullable Boolean addDefaultExtendedTimeRange) {
            this.addDefaultExtendedTimeRange = addDefaultExtendedTimeRange;
            return this;
        }
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        public Builder entityId(String entityId) {
            this.entityId = Objects.requireNonNull(entityId);
            return this;
        }
        public Builder insightQueryIds(@Nullable List<String> insightQueryIds) {
            this.insightQueryIds = insightQueryIds;
            return this;
        }
        public Builder insightQueryIds(String... insightQueryIds) {
            return insightQueryIds(List.of(insightQueryIds));
        }
        public Builder operationalInsightsResourceProvider(String operationalInsightsResourceProvider) {
            this.operationalInsightsResourceProvider = Objects.requireNonNull(operationalInsightsResourceProvider);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder workspaceName(String workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }        public GetEntityInsightsArgs build() {
            return new GetEntityInsightsArgs(addDefaultExtendedTimeRange, endTime, entityId, insightQueryIds, operationalInsightsResourceProvider, resourceGroupName, startTime, workspaceName);
        }
    }
}
