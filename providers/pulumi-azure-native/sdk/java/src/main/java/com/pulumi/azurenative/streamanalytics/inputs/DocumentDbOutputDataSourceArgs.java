// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes a DocumentDB output data source.
 * 
 */
public final class DocumentDbOutputDataSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DocumentDbOutputDataSourceArgs Empty = new DocumentDbOutputDataSourceArgs();

    /**
     * The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="accountKey")
    private @Nullable Output<String> accountKey;

    /**
     * @return The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<Output<String>> accountKey() {
        return Optional.ofNullable(this.accountKey);
    }

    /**
     * The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="collectionNamePattern")
    private @Nullable Output<String> collectionNamePattern;

    /**
     * @return The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<Output<String>> collectionNamePattern() {
        return Optional.ofNullable(this.collectionNamePattern);
    }

    /**
     * The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="database")
    private @Nullable Output<String> database;

    /**
     * @return The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<Output<String>> database() {
        return Optional.ofNullable(this.database);
    }

    /**
     * The name of the field in output events used to specify the primary key which insert or update operations are based on.
     * 
     */
    @Import(name="documentId")
    private @Nullable Output<String> documentId;

    /**
     * @return The name of the field in output events used to specify the primary key which insert or update operations are based on.
     * 
     */
    public Optional<Output<String>> documentId() {
        return Optional.ofNullable(this.documentId);
    }

    /**
     * The name of the field in output events used to specify the key for partitioning output across collections. If &#39;collectionNamePattern&#39; contains the {partition} token, this property is required to be specified.
     * 
     */
    @Import(name="partitionKey")
    private @Nullable Output<String> partitionKey;

    /**
     * @return The name of the field in output events used to specify the key for partitioning output across collections. If &#39;collectionNamePattern&#39; contains the {partition} token, this property is required to be specified.
     * 
     */
    public Optional<Output<String>> partitionKey() {
        return Optional.ofNullable(this.partitionKey);
    }

    /**
     * Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Microsoft.Storage/DocumentDB&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Microsoft.Storage/DocumentDB&#39;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private DocumentDbOutputDataSourceArgs() {}

    private DocumentDbOutputDataSourceArgs(DocumentDbOutputDataSourceArgs $) {
        this.accountId = $.accountId;
        this.accountKey = $.accountKey;
        this.collectionNamePattern = $.collectionNamePattern;
        this.database = $.database;
        this.documentId = $.documentId;
        this.partitionKey = $.partitionKey;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DocumentDbOutputDataSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DocumentDbOutputDataSourceArgs $;

        public Builder() {
            $ = new DocumentDbOutputDataSourceArgs();
        }

        public Builder(DocumentDbOutputDataSourceArgs defaults) {
            $ = new DocumentDbOutputDataSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param accountKey The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder accountKey(@Nullable Output<String> accountKey) {
            $.accountKey = accountKey;
            return this;
        }

        /**
         * @param accountKey The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder accountKey(String accountKey) {
            return accountKey(Output.of(accountKey));
        }

        /**
         * @param collectionNamePattern The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder collectionNamePattern(@Nullable Output<String> collectionNamePattern) {
            $.collectionNamePattern = collectionNamePattern;
            return this;
        }

        /**
         * @param collectionNamePattern The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder collectionNamePattern(String collectionNamePattern) {
            return collectionNamePattern(Output.of(collectionNamePattern));
        }

        /**
         * @param database The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder database(@Nullable Output<String> database) {
            $.database = database;
            return this;
        }

        /**
         * @param database The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            return database(Output.of(database));
        }

        /**
         * @param documentId The name of the field in output events used to specify the primary key which insert or update operations are based on.
         * 
         * @return builder
         * 
         */
        public Builder documentId(@Nullable Output<String> documentId) {
            $.documentId = documentId;
            return this;
        }

        /**
         * @param documentId The name of the field in output events used to specify the primary key which insert or update operations are based on.
         * 
         * @return builder
         * 
         */
        public Builder documentId(String documentId) {
            return documentId(Output.of(documentId));
        }

        /**
         * @param partitionKey The name of the field in output events used to specify the key for partitioning output across collections. If &#39;collectionNamePattern&#39; contains the {partition} token, this property is required to be specified.
         * 
         * @return builder
         * 
         */
        public Builder partitionKey(@Nullable Output<String> partitionKey) {
            $.partitionKey = partitionKey;
            return this;
        }

        /**
         * @param partitionKey The name of the field in output events used to specify the key for partitioning output across collections. If &#39;collectionNamePattern&#39; contains the {partition} token, this property is required to be specified.
         * 
         * @return builder
         * 
         */
        public Builder partitionKey(String partitionKey) {
            return partitionKey(Output.of(partitionKey));
        }

        /**
         * @param type Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
         * Expected value is &#39;Microsoft.Storage/DocumentDB&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
         * Expected value is &#39;Microsoft.Storage/DocumentDB&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DocumentDbOutputDataSourceArgs build() {
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
