// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobCredentialArgs Empty = new JobCredentialArgs();

    /**
     * The name of the credential.
     * 
     */
    @Import(name="credentialName")
    private @Nullable Output<String> credentialName;

    public Optional<Output<String>> credentialName() {
        return Optional.ofNullable(this.credentialName);
    }

    /**
     * The name of the job agent.
     * 
     */
    @Import(name="jobAgentName", required=true)
    private Output<String> jobAgentName;

    public Output<String> jobAgentName() {
        return this.jobAgentName;
    }

    /**
     * The credential password.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    public Output<String> password() {
        return this.password;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the server.
     * 
     */
    @Import(name="serverName", required=true)
    private Output<String> serverName;

    public Output<String> serverName() {
        return this.serverName;
    }

    /**
     * The credential user name.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    public Output<String> username() {
        return this.username;
    }

    private JobCredentialArgs() {}

    private JobCredentialArgs(JobCredentialArgs $) {
        this.credentialName = $.credentialName;
        this.jobAgentName = $.jobAgentName;
        this.password = $.password;
        this.resourceGroupName = $.resourceGroupName;
        this.serverName = $.serverName;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobCredentialArgs $;

        public Builder() {
            $ = new JobCredentialArgs();
        }

        public Builder(JobCredentialArgs defaults) {
            $ = new JobCredentialArgs(Objects.requireNonNull(defaults));
        }

        public Builder credentialName(@Nullable Output<String> credentialName) {
            $.credentialName = credentialName;
            return this;
        }

        public Builder credentialName(String credentialName) {
            return credentialName(Output.of(credentialName));
        }

        public Builder jobAgentName(Output<String> jobAgentName) {
            $.jobAgentName = jobAgentName;
            return this;
        }

        public Builder jobAgentName(String jobAgentName) {
            return jobAgentName(Output.of(jobAgentName));
        }

        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder serverName(Output<String> serverName) {
            $.serverName = serverName;
            return this;
        }

        public Builder serverName(String serverName) {
            return serverName(Output.of(serverName));
        }

        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public JobCredentialArgs build() {
            $.jobAgentName = Objects.requireNonNull($.jobAgentName, "expected parameter 'jobAgentName' to be non-null");
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serverName = Objects.requireNonNull($.serverName, "expected parameter 'serverName' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
