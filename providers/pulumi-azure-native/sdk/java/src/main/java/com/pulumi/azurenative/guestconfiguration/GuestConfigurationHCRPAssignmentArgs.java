// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.guestconfiguration;

import com.pulumi.azurenative.guestconfiguration.inputs.GuestConfigurationAssignmentPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GuestConfigurationHCRPAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final GuestConfigurationHCRPAssignmentArgs Empty = new GuestConfigurationHCRPAssignmentArgs();

    /**
     * Name of the guest configuration assignment.
     * 
     */
    @Import(name="guestConfigurationAssignmentName")
    private @Nullable Output<String> guestConfigurationAssignmentName;

    /**
     * @return Name of the guest configuration assignment.
     * 
     */
    public Optional<Output<String>> guestConfigurationAssignmentName() {
        return Optional.ofNullable(this.guestConfigurationAssignmentName);
    }

    /**
     * Region where the VM is located.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Region where the VM is located.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the ARC machine.
     * 
     */
    @Import(name="machineName", required=true)
    private Output<String> machineName;

    /**
     * @return The name of the ARC machine.
     * 
     */
    public Output<String> machineName() {
        return this.machineName;
    }

    /**
     * Name of the guest configuration assignment.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the guest configuration assignment.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Properties of the Guest configuration assignment.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<GuestConfigurationAssignmentPropertiesArgs> properties;

    /**
     * @return Properties of the Guest configuration assignment.
     * 
     */
    public Optional<Output<GuestConfigurationAssignmentPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GuestConfigurationHCRPAssignmentArgs() {}

    private GuestConfigurationHCRPAssignmentArgs(GuestConfigurationHCRPAssignmentArgs $) {
        this.guestConfigurationAssignmentName = $.guestConfigurationAssignmentName;
        this.location = $.location;
        this.machineName = $.machineName;
        this.name = $.name;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GuestConfigurationHCRPAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GuestConfigurationHCRPAssignmentArgs $;

        public Builder() {
            $ = new GuestConfigurationHCRPAssignmentArgs();
        }

        public Builder(GuestConfigurationHCRPAssignmentArgs defaults) {
            $ = new GuestConfigurationHCRPAssignmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param guestConfigurationAssignmentName Name of the guest configuration assignment.
         * 
         * @return builder
         * 
         */
        public Builder guestConfigurationAssignmentName(@Nullable Output<String> guestConfigurationAssignmentName) {
            $.guestConfigurationAssignmentName = guestConfigurationAssignmentName;
            return this;
        }

        /**
         * @param guestConfigurationAssignmentName Name of the guest configuration assignment.
         * 
         * @return builder
         * 
         */
        public Builder guestConfigurationAssignmentName(String guestConfigurationAssignmentName) {
            return guestConfigurationAssignmentName(Output.of(guestConfigurationAssignmentName));
        }

        /**
         * @param location Region where the VM is located.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Region where the VM is located.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param machineName The name of the ARC machine.
         * 
         * @return builder
         * 
         */
        public Builder machineName(Output<String> machineName) {
            $.machineName = machineName;
            return this;
        }

        /**
         * @param machineName The name of the ARC machine.
         * 
         * @return builder
         * 
         */
        public Builder machineName(String machineName) {
            return machineName(Output.of(machineName));
        }

        /**
         * @param name Name of the guest configuration assignment.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the guest configuration assignment.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param properties Properties of the Guest configuration assignment.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<GuestConfigurationAssignmentPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Properties of the Guest configuration assignment.
         * 
         * @return builder
         * 
         */
        public Builder properties(GuestConfigurationAssignmentPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GuestConfigurationHCRPAssignmentArgs build() {
            $.machineName = Objects.requireNonNull($.machineName, "expected parameter 'machineName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
