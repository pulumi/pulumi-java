// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.education.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AmountResponse {
    /**
     * @return The type of currency being used for the value.
     * 
     */
    private final @Nullable String currency;
    /**
     * @return Amount value.
     * 
     */
    private final @Nullable Double value;

    @CustomType.Constructor
    private AmountResponse(
        @CustomType.Parameter("currency") @Nullable String currency,
        @CustomType.Parameter("value") @Nullable Double value) {
        this.currency = currency;
        this.value = value;
    }

    /**
     * @return The type of currency being used for the value.
     * 
     */
    public Optional<String> currency() {
        return Optional.ofNullable(this.currency);
    }
    /**
     * @return Amount value.
     * 
     */
    public Optional<Double> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AmountResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String currency;
        private @Nullable Double value;

        public Builder() {
    	      // Empty
        }

        public Builder(AmountResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currency = defaults.currency;
    	      this.value = defaults.value;
        }

        public Builder currency(@Nullable String currency) {
            this.currency = currency;
            return this;
        }
        public Builder value(@Nullable Double value) {
            this.value = value;
            return this;
        }        public AmountResponse build() {
            return new AmountResponse(currency, value);
        }
    }
}
