// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.domainregistration;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.domainregistration.DomainArgs;
import com.pulumi.azurenative.domainregistration.outputs.HostNameResponse;
import com.pulumi.azurenative.domainregistration.outputs.SystemDataResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Information about a domain.
 * API Version: 2020-10-01.
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:domainregistration:Domain myresource1 /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName} 
 * ```
 * 
 */
@ResourceType(type="azure-native:domainregistration:Domain")
public class Domain extends com.pulumi.resources.CustomResource {
    @Export(name="authCode", type=String.class, parameters={})
    private Output</* @Nullable */ String> authCode;

    public Output<Optional<String>> authCode() {
        return Codegen.optional(this.authCode);
    }
    /**
     * &lt;code&gt;true&lt;/code&gt; if the domain should be automatically renewed; otherwise, &lt;code&gt;false&lt;/code&gt;.
     * 
     */
    @Export(name="autoRenew", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> autoRenew;

    /**
     * @return &lt;code&gt;true&lt;/code&gt; if the domain should be automatically renewed; otherwise, &lt;code&gt;false&lt;/code&gt;.
     * 
     */
    public Output<Optional<Boolean>> autoRenew() {
        return Codegen.optional(this.autoRenew);
    }
    /**
     * Domain creation timestamp.
     * 
     */
    @Export(name="createdTime", type=String.class, parameters={})
    private Output<String> createdTime;

    /**
     * @return Domain creation timestamp.
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * Current DNS type
     * 
     */
    @Export(name="dnsType", type=String.class, parameters={})
    private Output</* @Nullable */ String> dnsType;

    /**
     * @return Current DNS type
     * 
     */
    public Output<Optional<String>> dnsType() {
        return Codegen.optional(this.dnsType);
    }
    /**
     * Azure DNS Zone to use
     * 
     */
    @Export(name="dnsZoneId", type=String.class, parameters={})
    private Output</* @Nullable */ String> dnsZoneId;

    /**
     * @return Azure DNS Zone to use
     * 
     */
    public Output<Optional<String>> dnsZoneId() {
        return Codegen.optional(this.dnsZoneId);
    }
    /**
     * Reasons why domain is not renewable.
     * 
     */
    @Export(name="domainNotRenewableReasons", type=List.class, parameters={String.class})
    private Output<List<String>> domainNotRenewableReasons;

    /**
     * @return Reasons why domain is not renewable.
     * 
     */
    public Output<List<String>> domainNotRenewableReasons() {
        return this.domainNotRenewableReasons;
    }
    /**
     * Domain expiration timestamp.
     * 
     */
    @Export(name="expirationTime", type=String.class, parameters={})
    private Output<String> expirationTime;

    /**
     * @return Domain expiration timestamp.
     * 
     */
    public Output<String> expirationTime() {
        return this.expirationTime;
    }
    /**
     * Kind of resource.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output</* @Nullable */ String> kind;

    /**
     * @return Kind of resource.
     * 
     */
    public Output<Optional<String>> kind() {
        return Codegen.optional(this.kind);
    }
    /**
     * Timestamp when the domain was renewed last time.
     * 
     */
    @Export(name="lastRenewedTime", type=String.class, parameters={})
    private Output<String> lastRenewedTime;

    /**
     * @return Timestamp when the domain was renewed last time.
     * 
     */
    public Output<String> lastRenewedTime() {
        return this.lastRenewedTime;
    }
    /**
     * Resource Location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Resource Location.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * All hostnames derived from the domain and assigned to Azure resources.
     * 
     */
    @Export(name="managedHostNames", type=List.class, parameters={HostNameResponse.class})
    private Output<List<HostNameResponse>> managedHostNames;

    /**
     * @return All hostnames derived from the domain and assigned to Azure resources.
     * 
     */
    public Output<List<HostNameResponse>> managedHostNames() {
        return this.managedHostNames;
    }
    /**
     * Resource Name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource Name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Name servers.
     * 
     */
    @Export(name="nameServers", type=List.class, parameters={String.class})
    private Output<List<String>> nameServers;

    /**
     * @return Name servers.
     * 
     */
    public Output<List<String>> nameServers() {
        return this.nameServers;
    }
    /**
     * &lt;code&gt;true&lt;/code&gt; if domain privacy is enabled for this domain; otherwise, &lt;code&gt;false&lt;/code&gt;.
     * 
     */
    @Export(name="privacy", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> privacy;

    /**
     * @return &lt;code&gt;true&lt;/code&gt; if domain privacy is enabled for this domain; otherwise, &lt;code&gt;false&lt;/code&gt;.
     * 
     */
    public Output<Optional<Boolean>> privacy() {
        return Codegen.optional(this.privacy);
    }
    /**
     * Domain provisioning state.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return Domain provisioning state.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * &lt;code&gt;true&lt;/code&gt; if Azure can assign this domain to App Service apps; otherwise, &lt;code&gt;false&lt;/code&gt;. This value will be &lt;code&gt;true&lt;/code&gt; if domain registration status is active and
     *  it is hosted on name servers Azure has programmatic access to.
     * 
     */
    @Export(name="readyForDnsRecordManagement", type=Boolean.class, parameters={})
    private Output<Boolean> readyForDnsRecordManagement;

    /**
     * @return &lt;code&gt;true&lt;/code&gt; if Azure can assign this domain to App Service apps; otherwise, &lt;code&gt;false&lt;/code&gt;. This value will be &lt;code&gt;true&lt;/code&gt; if domain registration status is active and
     *  it is hosted on name servers Azure has programmatic access to.
     * 
     */
    public Output<Boolean> readyForDnsRecordManagement() {
        return this.readyForDnsRecordManagement;
    }
    /**
     * Domain registration status.
     * 
     */
    @Export(name="registrationStatus", type=String.class, parameters={})
    private Output<String> registrationStatus;

    /**
     * @return Domain registration status.
     * 
     */
    public Output<String> registrationStatus() {
        return this.registrationStatus;
    }
    /**
     * The system metadata relating to this resource.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return The system metadata relating to this resource.
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Target DNS type (would be used for migration)
     * 
     */
    @Export(name="targetDnsType", type=String.class, parameters={})
    private Output</* @Nullable */ String> targetDnsType;

    /**
     * @return Target DNS type (would be used for migration)
     * 
     */
    public Output<Optional<String>> targetDnsType() {
        return Codegen.optional(this.targetDnsType);
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Domain(String name) {
        this(name, DomainArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Domain(String name, DomainArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Domain(String name, DomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:domainregistration:Domain", name, args == null ? DomainArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Domain(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:domainregistration:Domain", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:domainregistration/v20150401:Domain").build()),
                Output.of(Alias.builder().type("azure-native:domainregistration/v20180201:Domain").build()),
                Output.of(Alias.builder().type("azure-native:domainregistration/v20190801:Domain").build()),
                Output.of(Alias.builder().type("azure-native:domainregistration/v20200601:Domain").build()),
                Output.of(Alias.builder().type("azure-native:domainregistration/v20200901:Domain").build()),
                Output.of(Alias.builder().type("azure-native:domainregistration/v20201001:Domain").build()),
                Output.of(Alias.builder().type("azure-native:domainregistration/v20201201:Domain").build()),
                Output.of(Alias.builder().type("azure-native:domainregistration/v20210101:Domain").build()),
                Output.of(Alias.builder().type("azure-native:domainregistration/v20210115:Domain").build()),
                Output.of(Alias.builder().type("azure-native:domainregistration/v20210201:Domain").build()),
                Output.of(Alias.builder().type("azure-native:domainregistration/v20210301:Domain").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Domain get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Domain(name, id, options);
    }
}
