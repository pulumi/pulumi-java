// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.inputs;

import com.pulumi.azurenative.streamanalytics.inputs.PrivateLinkConnectionStateResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A grouping of information about the connection to the remote resource.
 * 
 */
public final class PrivateLinkServiceConnectionResponse extends com.pulumi.resources.InvokeArgs {

    public static final PrivateLinkServiceConnectionResponse Empty = new PrivateLinkServiceConnectionResponse();

    /**
     * The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to. Required on PUT (CreateOrUpdate) requests.
     * 
     */
    @Import(name="groupIds")
    private @Nullable List<String> groupIds;

    public Optional<List<String>> groupIds() {
        return Optional.ofNullable(this.groupIds);
    }

    /**
     * A collection of read-only information about the state of the connection to the private remote resource.
     * 
     */
    @Import(name="privateLinkServiceConnectionState")
    private @Nullable PrivateLinkConnectionStateResponse privateLinkServiceConnectionState;

    public Optional<PrivateLinkConnectionStateResponse> privateLinkServiceConnectionState() {
        return Optional.ofNullable(this.privateLinkServiceConnectionState);
    }

    /**
     * The resource id of the private link service. Required on PUT (CreateOrUpdate) requests.
     * 
     */
    @Import(name="privateLinkServiceId")
    private @Nullable String privateLinkServiceId;

    public Optional<String> privateLinkServiceId() {
        return Optional.ofNullable(this.privateLinkServiceId);
    }

    /**
     * A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
     * 
     */
    @Import(name="requestMessage")
    private @Nullable String requestMessage;

    public Optional<String> requestMessage() {
        return Optional.ofNullable(this.requestMessage);
    }

    private PrivateLinkServiceConnectionResponse() {}

    private PrivateLinkServiceConnectionResponse(PrivateLinkServiceConnectionResponse $) {
        this.groupIds = $.groupIds;
        this.privateLinkServiceConnectionState = $.privateLinkServiceConnectionState;
        this.privateLinkServiceId = $.privateLinkServiceId;
        this.requestMessage = $.requestMessage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateLinkServiceConnectionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateLinkServiceConnectionResponse $;

        public Builder() {
            $ = new PrivateLinkServiceConnectionResponse();
        }

        public Builder(PrivateLinkServiceConnectionResponse defaults) {
            $ = new PrivateLinkServiceConnectionResponse(Objects.requireNonNull(defaults));
        }

        public Builder groupIds(@Nullable List<String> groupIds) {
            $.groupIds = groupIds;
            return this;
        }

        public Builder groupIds(String... groupIds) {
            return groupIds(List.of(groupIds));
        }

        public Builder privateLinkServiceConnectionState(@Nullable PrivateLinkConnectionStateResponse privateLinkServiceConnectionState) {
            $.privateLinkServiceConnectionState = privateLinkServiceConnectionState;
            return this;
        }

        public Builder privateLinkServiceId(@Nullable String privateLinkServiceId) {
            $.privateLinkServiceId = privateLinkServiceId;
            return this;
        }

        public Builder requestMessage(@Nullable String requestMessage) {
            $.requestMessage = requestMessage;
            return this;
        }

        public PrivateLinkServiceConnectionResponse build() {
            return $;
        }
    }

}
