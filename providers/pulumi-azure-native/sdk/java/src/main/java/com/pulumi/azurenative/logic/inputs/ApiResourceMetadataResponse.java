// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.inputs.ApiDeploymentParameterMetadataSetResponse;
import com.pulumi.azurenative.logic.inputs.WsdlServiceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The api resource metadata.
 * 
 */
public final class ApiResourceMetadataResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApiResourceMetadataResponse Empty = new ApiResourceMetadataResponse();

    /**
     * The api type.
     * 
     */
    @Import(name="apiType")
    private @Nullable String apiType;

    /**
     * @return The api type.
     * 
     */
    public Optional<String> apiType() {
        return Optional.ofNullable(this.apiType);
    }

    /**
     * The brand color.
     * 
     */
    @Import(name="brandColor")
    private @Nullable String brandColor;

    /**
     * @return The brand color.
     * 
     */
    public Optional<String> brandColor() {
        return Optional.ofNullable(this.brandColor);
    }

    /**
     * The connection type.
     * 
     */
    @Import(name="connectionType")
    private @Nullable String connectionType;

    /**
     * @return The connection type.
     * 
     */
    public Optional<String> connectionType() {
        return Optional.ofNullable(this.connectionType);
    }

    /**
     * The connector deployment parameters metadata.
     * 
     */
    @Import(name="deploymentParameters")
    private @Nullable ApiDeploymentParameterMetadataSetResponse deploymentParameters;

    /**
     * @return The connector deployment parameters metadata.
     * 
     */
    public Optional<ApiDeploymentParameterMetadataSetResponse> deploymentParameters() {
        return Optional.ofNullable(this.deploymentParameters);
    }

    /**
     * The hide key.
     * 
     */
    @Import(name="hideKey")
    private @Nullable String hideKey;

    /**
     * @return The hide key.
     * 
     */
    public Optional<String> hideKey() {
        return Optional.ofNullable(this.hideKey);
    }

    /**
     * The provisioning state.
     * 
     */
    @Import(name="provisioningState")
    private @Nullable String provisioningState;

    /**
     * @return The provisioning state.
     * 
     */
    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    /**
     * The source.
     * 
     */
    @Import(name="source")
    private @Nullable String source;

    /**
     * @return The source.
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * The tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return The tags.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The WSDL import method.
     * 
     */
    @Import(name="wsdlImportMethod")
    private @Nullable String wsdlImportMethod;

    /**
     * @return The WSDL import method.
     * 
     */
    public Optional<String> wsdlImportMethod() {
        return Optional.ofNullable(this.wsdlImportMethod);
    }

    /**
     * The WSDL service.
     * 
     */
    @Import(name="wsdlService")
    private @Nullable WsdlServiceResponse wsdlService;

    /**
     * @return The WSDL service.
     * 
     */
    public Optional<WsdlServiceResponse> wsdlService() {
        return Optional.ofNullable(this.wsdlService);
    }

    private ApiResourceMetadataResponse() {}

    private ApiResourceMetadataResponse(ApiResourceMetadataResponse $) {
        this.apiType = $.apiType;
        this.brandColor = $.brandColor;
        this.connectionType = $.connectionType;
        this.deploymentParameters = $.deploymentParameters;
        this.hideKey = $.hideKey;
        this.provisioningState = $.provisioningState;
        this.source = $.source;
        this.tags = $.tags;
        this.wsdlImportMethod = $.wsdlImportMethod;
        this.wsdlService = $.wsdlService;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiResourceMetadataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiResourceMetadataResponse $;

        public Builder() {
            $ = new ApiResourceMetadataResponse();
        }

        public Builder(ApiResourceMetadataResponse defaults) {
            $ = new ApiResourceMetadataResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiType The api type.
         * 
         * @return builder
         * 
         */
        public Builder apiType(@Nullable String apiType) {
            $.apiType = apiType;
            return this;
        }

        /**
         * @param brandColor The brand color.
         * 
         * @return builder
         * 
         */
        public Builder brandColor(@Nullable String brandColor) {
            $.brandColor = brandColor;
            return this;
        }

        /**
         * @param connectionType The connection type.
         * 
         * @return builder
         * 
         */
        public Builder connectionType(@Nullable String connectionType) {
            $.connectionType = connectionType;
            return this;
        }

        /**
         * @param deploymentParameters The connector deployment parameters metadata.
         * 
         * @return builder
         * 
         */
        public Builder deploymentParameters(@Nullable ApiDeploymentParameterMetadataSetResponse deploymentParameters) {
            $.deploymentParameters = deploymentParameters;
            return this;
        }

        /**
         * @param hideKey The hide key.
         * 
         * @return builder
         * 
         */
        public Builder hideKey(@Nullable String hideKey) {
            $.hideKey = hideKey;
            return this;
        }

        /**
         * @param provisioningState The provisioning state.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(@Nullable String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param source The source.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable String source) {
            $.source = source;
            return this;
        }

        /**
         * @param tags The tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param wsdlImportMethod The WSDL import method.
         * 
         * @return builder
         * 
         */
        public Builder wsdlImportMethod(@Nullable String wsdlImportMethod) {
            $.wsdlImportMethod = wsdlImportMethod;
            return this;
        }

        /**
         * @param wsdlService The WSDL service.
         * 
         * @return builder
         * 
         */
        public Builder wsdlService(@Nullable WsdlServiceResponse wsdlService) {
            $.wsdlService = wsdlService;
            return this;
        }

        public ApiResourceMetadataResponse build() {
            return $;
        }
    }

}
