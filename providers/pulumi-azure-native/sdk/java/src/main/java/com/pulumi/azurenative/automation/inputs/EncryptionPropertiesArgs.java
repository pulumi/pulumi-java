// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation.inputs;

import com.pulumi.azurenative.automation.enums.EncryptionKeySourceType;
import com.pulumi.azurenative.automation.inputs.EncryptionPropertiesIdentityArgs;
import com.pulumi.azurenative.automation.inputs.KeyVaultPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The encryption settings for automation account
 * 
 */
public final class EncryptionPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final EncryptionPropertiesArgs Empty = new EncryptionPropertiesArgs();

    /**
     * User identity used for CMK.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<EncryptionPropertiesIdentityArgs> identity;

    /**
     * @return User identity used for CMK.
     * 
     */
    public Optional<Output<EncryptionPropertiesIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Encryption Key Source
     * 
     */
    @Import(name="keySource")
    private @Nullable Output<EncryptionKeySourceType> keySource;

    /**
     * @return Encryption Key Source
     * 
     */
    public Optional<Output<EncryptionKeySourceType>> keySource() {
        return Optional.ofNullable(this.keySource);
    }

    /**
     * Key vault properties.
     * 
     */
    @Import(name="keyVaultProperties")
    private @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties;

    /**
     * @return Key vault properties.
     * 
     */
    public Optional<Output<KeyVaultPropertiesArgs>> keyVaultProperties() {
        return Optional.ofNullable(this.keyVaultProperties);
    }

    private EncryptionPropertiesArgs() {}

    private EncryptionPropertiesArgs(EncryptionPropertiesArgs $) {
        this.identity = $.identity;
        this.keySource = $.keySource;
        this.keyVaultProperties = $.keyVaultProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionPropertiesArgs $;

        public Builder() {
            $ = new EncryptionPropertiesArgs();
        }

        public Builder(EncryptionPropertiesArgs defaults) {
            $ = new EncryptionPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identity User identity used for CMK.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<EncryptionPropertiesIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity User identity used for CMK.
         * 
         * @return builder
         * 
         */
        public Builder identity(EncryptionPropertiesIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param keySource Encryption Key Source
         * 
         * @return builder
         * 
         */
        public Builder keySource(@Nullable Output<EncryptionKeySourceType> keySource) {
            $.keySource = keySource;
            return this;
        }

        /**
         * @param keySource Encryption Key Source
         * 
         * @return builder
         * 
         */
        public Builder keySource(EncryptionKeySourceType keySource) {
            return keySource(Output.of(keySource));
        }

        /**
         * @param keyVaultProperties Key vault properties.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultProperties(@Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties) {
            $.keyVaultProperties = keyVaultProperties;
            return this;
        }

        /**
         * @param keyVaultProperties Key vault properties.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultProperties(KeyVaultPropertiesArgs keyVaultProperties) {
            return keyVaultProperties(Output.of(keyVaultProperties));
        }

        public EncryptionPropertiesArgs build() {
            return $;
        }
    }

}
