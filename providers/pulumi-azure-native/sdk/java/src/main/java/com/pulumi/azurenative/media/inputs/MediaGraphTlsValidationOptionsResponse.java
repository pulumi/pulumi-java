// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


/**
 * Options for controlling the authentication of TLS endpoints.
 * 
 */
public final class MediaGraphTlsValidationOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final MediaGraphTlsValidationOptionsResponse Empty = new MediaGraphTlsValidationOptionsResponse();

    /**
     * Ignore the host name (common name) during validation.
     * 
     */
    @Import(name="ignoreHostname", required=true)
    private Boolean ignoreHostname;

    public Boolean ignoreHostname() {
        return this.ignoreHostname;
    }

    /**
     * Ignore the integrity of the certificate chain at the current time.
     * 
     */
    @Import(name="ignoreSignature", required=true)
    private Boolean ignoreSignature;

    public Boolean ignoreSignature() {
        return this.ignoreSignature;
    }

    private MediaGraphTlsValidationOptionsResponse() {}

    private MediaGraphTlsValidationOptionsResponse(MediaGraphTlsValidationOptionsResponse $) {
        this.ignoreHostname = $.ignoreHostname;
        this.ignoreSignature = $.ignoreSignature;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MediaGraphTlsValidationOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MediaGraphTlsValidationOptionsResponse $;

        public Builder() {
            $ = new MediaGraphTlsValidationOptionsResponse();
        }

        public Builder(MediaGraphTlsValidationOptionsResponse defaults) {
            $ = new MediaGraphTlsValidationOptionsResponse(Objects.requireNonNull(defaults));
        }

        public Builder ignoreHostname(Boolean ignoreHostname) {
            $.ignoreHostname = ignoreHostname;
            return this;
        }

        public Builder ignoreSignature(Boolean ignoreSignature) {
            $.ignoreSignature = ignoreSignature;
            return this;
        }

        public MediaGraphTlsValidationOptionsResponse build() {
            $.ignoreHostname = Objects.requireNonNull($.ignoreHostname, "expected parameter 'ignoreHostname' to be non-null");
            $.ignoreSignature = Objects.requireNonNull($.ignoreSignature, "expected parameter 'ignoreSignature' to be non-null");
            return $;
        }
    }

}
