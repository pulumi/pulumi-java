// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.ApplicationGatewayClientAuthConfigurationArgs;
import com.pulumi.azurenative.network.inputs.ApplicationGatewaySslPolicyArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SSL profile of an application gateway.
 * 
 */
public final class ApplicationGatewaySslProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationGatewaySslProfileArgs Empty = new ApplicationGatewaySslProfileArgs();

    /**
     * Client authentication configuration of the application gateway resource.
     * 
     */
    @Import(name="clientAuthConfiguration")
    private @Nullable Output<ApplicationGatewayClientAuthConfigurationArgs> clientAuthConfiguration;

    /**
     * @return Client authentication configuration of the application gateway resource.
     * 
     */
    public Optional<Output<ApplicationGatewayClientAuthConfigurationArgs>> clientAuthConfiguration() {
        return Optional.ofNullable(this.clientAuthConfiguration);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the SSL profile that is unique within an Application Gateway.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the SSL profile that is unique within an Application Gateway.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * SSL policy of the application gateway resource.
     * 
     */
    @Import(name="sslPolicy")
    private @Nullable Output<ApplicationGatewaySslPolicyArgs> sslPolicy;

    /**
     * @return SSL policy of the application gateway resource.
     * 
     */
    public Optional<Output<ApplicationGatewaySslPolicyArgs>> sslPolicy() {
        return Optional.ofNullable(this.sslPolicy);
    }

    /**
     * Array of references to application gateway trusted client certificates.
     * 
     */
    @Import(name="trustedClientCertificates")
    private @Nullable Output<List<SubResourceArgs>> trustedClientCertificates;

    /**
     * @return Array of references to application gateway trusted client certificates.
     * 
     */
    public Optional<Output<List<SubResourceArgs>>> trustedClientCertificates() {
        return Optional.ofNullable(this.trustedClientCertificates);
    }

    private ApplicationGatewaySslProfileArgs() {}

    private ApplicationGatewaySslProfileArgs(ApplicationGatewaySslProfileArgs $) {
        this.clientAuthConfiguration = $.clientAuthConfiguration;
        this.id = $.id;
        this.name = $.name;
        this.sslPolicy = $.sslPolicy;
        this.trustedClientCertificates = $.trustedClientCertificates;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewaySslProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewaySslProfileArgs $;

        public Builder() {
            $ = new ApplicationGatewaySslProfileArgs();
        }

        public Builder(ApplicationGatewaySslProfileArgs defaults) {
            $ = new ApplicationGatewaySslProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientAuthConfiguration Client authentication configuration of the application gateway resource.
         * 
         * @return builder
         * 
         */
        public Builder clientAuthConfiguration(@Nullable Output<ApplicationGatewayClientAuthConfigurationArgs> clientAuthConfiguration) {
            $.clientAuthConfiguration = clientAuthConfiguration;
            return this;
        }

        /**
         * @param clientAuthConfiguration Client authentication configuration of the application gateway resource.
         * 
         * @return builder
         * 
         */
        public Builder clientAuthConfiguration(ApplicationGatewayClientAuthConfigurationArgs clientAuthConfiguration) {
            return clientAuthConfiguration(Output.of(clientAuthConfiguration));
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name Name of the SSL profile that is unique within an Application Gateway.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the SSL profile that is unique within an Application Gateway.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sslPolicy SSL policy of the application gateway resource.
         * 
         * @return builder
         * 
         */
        public Builder sslPolicy(@Nullable Output<ApplicationGatewaySslPolicyArgs> sslPolicy) {
            $.sslPolicy = sslPolicy;
            return this;
        }

        /**
         * @param sslPolicy SSL policy of the application gateway resource.
         * 
         * @return builder
         * 
         */
        public Builder sslPolicy(ApplicationGatewaySslPolicyArgs sslPolicy) {
            return sslPolicy(Output.of(sslPolicy));
        }

        /**
         * @param trustedClientCertificates Array of references to application gateway trusted client certificates.
         * 
         * @return builder
         * 
         */
        public Builder trustedClientCertificates(@Nullable Output<List<SubResourceArgs>> trustedClientCertificates) {
            $.trustedClientCertificates = trustedClientCertificates;
            return this;
        }

        /**
         * @param trustedClientCertificates Array of references to application gateway trusted client certificates.
         * 
         * @return builder
         * 
         */
        public Builder trustedClientCertificates(List<SubResourceArgs> trustedClientCertificates) {
            return trustedClientCertificates(Output.of(trustedClientCertificates));
        }

        /**
         * @param trustedClientCertificates Array of references to application gateway trusted client certificates.
         * 
         * @return builder
         * 
         */
        public Builder trustedClientCertificates(SubResourceArgs... trustedClientCertificates) {
            return trustedClientCertificates(List.of(trustedClientCertificates));
        }

        public ApplicationGatewaySslProfileArgs build() {
            return $;
        }
    }

}
