// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.outputs;

import com.pulumi.azurenative.devtestlab.outputs.EventResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNotificationChannelResult {
    /**
     * The creation date of the notification channel.
     * 
     */
    private final String createdDate;
    /**
     * Description of notification.
     * 
     */
    private final @Nullable String description;
    /**
     * The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
     * 
     */
    private final @Nullable String emailRecipient;
    /**
     * The list of event for which this notification is enabled.
     * 
     */
    private final @Nullable List<EventResponse> events;
    /**
     * The identifier of the resource.
     * 
     */
    private final String id;
    /**
     * The location of the resource.
     * 
     */
    private final @Nullable String location;
    /**
     * The name of the resource.
     * 
     */
    private final String name;
    /**
     * The locale to use when sending a notification (fallback for unsupported languages is EN).
     * 
     */
    private final @Nullable String notificationLocale;
    /**
     * The provisioning status of the resource.
     * 
     */
    private final String provisioningState;
    /**
     * The tags of the resource.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * The type of the resource.
     * 
     */
    private final String type;
    /**
     * The unique immutable identifier of a resource (Guid).
     * 
     */
    private final String uniqueIdentifier;
    /**
     * The webhook URL to send notifications to.
     * 
     */
    private final @Nullable String webHookUrl;

    @CustomType.Constructor
    private GetNotificationChannelResult(
        @CustomType.Parameter("createdDate") String createdDate,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("emailRecipient") @Nullable String emailRecipient,
        @CustomType.Parameter("events") @Nullable List<EventResponse> events,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("notificationLocale") @Nullable String notificationLocale,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uniqueIdentifier") String uniqueIdentifier,
        @CustomType.Parameter("webHookUrl") @Nullable String webHookUrl) {
        this.createdDate = createdDate;
        this.description = description;
        this.emailRecipient = emailRecipient;
        this.events = events;
        this.id = id;
        this.location = location;
        this.name = name;
        this.notificationLocale = notificationLocale;
        this.provisioningState = provisioningState;
        this.tags = tags;
        this.type = type;
        this.uniqueIdentifier = uniqueIdentifier;
        this.webHookUrl = webHookUrl;
    }

    /**
     * The creation date of the notification channel.
     * 
    */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * Description of notification.
     * 
    */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
     * 
    */
    public Optional<String> emailRecipient() {
        return Optional.ofNullable(this.emailRecipient);
    }
    /**
     * The list of event for which this notification is enabled.
     * 
    */
    public List<EventResponse> events() {
        return this.events == null ? List.of() : this.events;
    }
    /**
     * The identifier of the resource.
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * The location of the resource.
     * 
    */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * The name of the resource.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * The locale to use when sending a notification (fallback for unsupported languages is EN).
     * 
    */
    public Optional<String> notificationLocale() {
        return Optional.ofNullable(this.notificationLocale);
    }
    /**
     * The provisioning status of the resource.
     * 
    */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * The tags of the resource.
     * 
    */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * The type of the resource.
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * The unique immutable identifier of a resource (Guid).
     * 
    */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }
    /**
     * The webhook URL to send notifications to.
     * 
    */
    public Optional<String> webHookUrl() {
        return Optional.ofNullable(this.webHookUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNotificationChannelResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createdDate;
        private @Nullable String description;
        private @Nullable String emailRecipient;
        private @Nullable List<EventResponse> events;
        private String id;
        private @Nullable String location;
        private String name;
        private @Nullable String notificationLocale;
        private String provisioningState;
        private @Nullable Map<String,String> tags;
        private String type;
        private String uniqueIdentifier;
        private @Nullable String webHookUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNotificationChannelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.emailRecipient = defaults.emailRecipient;
    	      this.events = defaults.events;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.notificationLocale = defaults.notificationLocale;
    	      this.provisioningState = defaults.provisioningState;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.uniqueIdentifier = defaults.uniqueIdentifier;
    	      this.webHookUrl = defaults.webHookUrl;
        }

        public Builder createdDate(String createdDate) {
            this.createdDate = Objects.requireNonNull(createdDate);
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder emailRecipient(@Nullable String emailRecipient) {
            this.emailRecipient = emailRecipient;
            return this;
        }
        public Builder events(@Nullable List<EventResponse> events) {
            this.events = events;
            return this;
        }
        public Builder events(EventResponse... events) {
            return events(List.of(events));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder notificationLocale(@Nullable String notificationLocale) {
            this.notificationLocale = notificationLocale;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uniqueIdentifier(String uniqueIdentifier) {
            this.uniqueIdentifier = Objects.requireNonNull(uniqueIdentifier);
            return this;
        }
        public Builder webHookUrl(@Nullable String webHookUrl) {
            this.webHookUrl = webHookUrl;
            return this;
        }        public GetNotificationChannelResult build() {
            return new GetNotificationChannelResult(createdDate, description, emailRecipient, events, id, location, name, notificationLocale, provisioningState, tags, type, uniqueIdentifier, webHookUrl);
        }
    }
}
