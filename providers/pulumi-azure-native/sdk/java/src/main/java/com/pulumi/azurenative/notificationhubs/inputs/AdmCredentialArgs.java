// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.notificationhubs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Description of a NotificationHub AdmCredential.
 * 
 */
public final class AdmCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdmCredentialArgs Empty = new AdmCredentialArgs();

    /**
     * The URL of the authorization token.
     * 
     */
    @Import(name="authTokenUrl")
      private final @Nullable Output<String> authTokenUrl;

    public Output<String> authTokenUrl() {
        return this.authTokenUrl == null ? Codegen.empty() : this.authTokenUrl;
    }

    /**
     * The client identifier.
     * 
     */
    @Import(name="clientId")
      private final @Nullable Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId == null ? Codegen.empty() : this.clientId;
    }

    /**
     * The credential secret access key.
     * 
     */
    @Import(name="clientSecret")
      private final @Nullable Output<String> clientSecret;

    public Output<String> clientSecret() {
        return this.clientSecret == null ? Codegen.empty() : this.clientSecret;
    }

    public AdmCredentialArgs(
        @Nullable Output<String> authTokenUrl,
        @Nullable Output<String> clientId,
        @Nullable Output<String> clientSecret) {
        this.authTokenUrl = authTokenUrl;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
    }

    private AdmCredentialArgs() {
        this.authTokenUrl = Codegen.empty();
        this.clientId = Codegen.empty();
        this.clientSecret = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AdmCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> authTokenUrl;
        private @Nullable Output<String> clientId;
        private @Nullable Output<String> clientSecret;

        public Builder() {
    	      // Empty
        }

        public Builder(AdmCredentialArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authTokenUrl = defaults.authTokenUrl;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
        }

        public Builder authTokenUrl(@Nullable Output<String> authTokenUrl) {
            this.authTokenUrl = authTokenUrl;
            return this;
        }
        public Builder authTokenUrl(@Nullable String authTokenUrl) {
            this.authTokenUrl = Codegen.ofNullable(authTokenUrl);
            return this;
        }
        public Builder clientId(@Nullable Output<String> clientId) {
            this.clientId = clientId;
            return this;
        }
        public Builder clientId(@Nullable String clientId) {
            this.clientId = Codegen.ofNullable(clientId);
            return this;
        }
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }
        public Builder clientSecret(@Nullable String clientSecret) {
            this.clientSecret = Codegen.ofNullable(clientSecret);
            return this;
        }        public AdmCredentialArgs build() {
            return new AdmCredentialArgs(authTokenUrl, clientId, clientSecret);
        }
    }
}
