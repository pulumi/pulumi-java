// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media;

import com.pulumi.azurenative.media.enums.Priority;
import com.pulumi.azurenative.media.inputs.JobInputAssetArgs;
import com.pulumi.azurenative.media.inputs.JobInputClipArgs;
import com.pulumi.azurenative.media.inputs.JobInputHttpArgs;
import com.pulumi.azurenative.media.inputs.JobInputSequenceArgs;
import com.pulumi.azurenative.media.inputs.JobInputsArgs;
import com.pulumi.azurenative.media.inputs.JobOutputAssetArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobArgs Empty = new JobArgs();

    /**
     * The Media Services account name.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The Media Services account name.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * Customer provided key, value pairs that will be returned in Job and JobOutput state events.
     * 
     */
    @Import(name="correlationData")
    private @Nullable Output<Map<String,String>> correlationData;

    /**
     * @return Customer provided key, value pairs that will be returned in Job and JobOutput state events.
     * 
     */
    public Optional<Output<Map<String,String>>> correlationData() {
        return Optional.ofNullable(this.correlationData);
    }

    /**
     * Optional customer supplied description of the Job.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Optional customer supplied description of the Job.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The inputs for the Job.
     * 
     */
    @Import(name="input", required=true)
    private Output<Object> input;

    /**
     * @return The inputs for the Job.
     * 
     */
    public Output<Object> input() {
        return this.input;
    }

    /**
     * The Job name.
     * 
     */
    @Import(name="jobName")
    private @Nullable Output<String> jobName;

    /**
     * @return The Job name.
     * 
     */
    public Optional<Output<String>> jobName() {
        return Optional.ofNullable(this.jobName);
    }

    /**
     * The outputs for the Job.
     * 
     */
    @Import(name="outputs", required=true)
    private Output<List<JobOutputAssetArgs>> outputs;

    /**
     * @return The outputs for the Job.
     * 
     */
    public Output<List<JobOutputAssetArgs>> outputs() {
        return this.outputs;
    }

    /**
     * Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Either<String,Priority>> priority;

    /**
     * @return Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.
     * 
     */
    public Optional<Output<Either<String,Priority>>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The name of the resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the Azure subscription.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The Transform name.
     * 
     */
    @Import(name="transformName", required=true)
    private Output<String> transformName;

    /**
     * @return The Transform name.
     * 
     */
    public Output<String> transformName() {
        return this.transformName;
    }

    private JobArgs() {}

    private JobArgs(JobArgs $) {
        this.accountName = $.accountName;
        this.correlationData = $.correlationData;
        this.description = $.description;
        this.input = $.input;
        this.jobName = $.jobName;
        this.outputs = $.outputs;
        this.priority = $.priority;
        this.resourceGroupName = $.resourceGroupName;
        this.transformName = $.transformName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobArgs $;

        public Builder() {
            $ = new JobArgs();
        }

        public Builder(JobArgs defaults) {
            $ = new JobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The Media Services account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The Media Services account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param correlationData Customer provided key, value pairs that will be returned in Job and JobOutput state events.
         * 
         * @return builder
         * 
         */
        public Builder correlationData(@Nullable Output<Map<String,String>> correlationData) {
            $.correlationData = correlationData;
            return this;
        }

        /**
         * @param correlationData Customer provided key, value pairs that will be returned in Job and JobOutput state events.
         * 
         * @return builder
         * 
         */
        public Builder correlationData(Map<String,String> correlationData) {
            return correlationData(Output.of(correlationData));
        }

        /**
         * @param description Optional customer supplied description of the Job.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Optional customer supplied description of the Job.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param input The inputs for the Job.
         * 
         * @return builder
         * 
         */
        public Builder input(Output<Object> input) {
            $.input = input;
            return this;
        }

        /**
         * @param input The inputs for the Job.
         * 
         * @return builder
         * 
         */
        public Builder input(Object input) {
            return input(Output.of(input));
        }

        /**
         * @param jobName The Job name.
         * 
         * @return builder
         * 
         */
        public Builder jobName(@Nullable Output<String> jobName) {
            $.jobName = jobName;
            return this;
        }

        /**
         * @param jobName The Job name.
         * 
         * @return builder
         * 
         */
        public Builder jobName(String jobName) {
            return jobName(Output.of(jobName));
        }

        /**
         * @param outputs The outputs for the Job.
         * 
         * @return builder
         * 
         */
        public Builder outputs(Output<List<JobOutputAssetArgs>> outputs) {
            $.outputs = outputs;
            return this;
        }

        /**
         * @param outputs The outputs for the Job.
         * 
         * @return builder
         * 
         */
        public Builder outputs(List<JobOutputAssetArgs> outputs) {
            return outputs(Output.of(outputs));
        }

        /**
         * @param outputs The outputs for the Job.
         * 
         * @return builder
         * 
         */
        public Builder outputs(JobOutputAssetArgs... outputs) {
            return outputs(List.of(outputs));
        }

        /**
         * @param priority Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Either<String,Priority>> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.
         * 
         * @return builder
         * 
         */
        public Builder priority(Either<String,Priority> priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param priority Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.
         * 
         * @return builder
         * 
         */
        public Builder priority(String priority) {
            return priority(Either.ofLeft(priority));
        }

        /**
         * @param priority Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.
         * 
         * @return builder
         * 
         */
        public Builder priority(Priority priority) {
            return priority(Either.ofRight(priority));
        }

        /**
         * @param resourceGroupName The name of the resource group within the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param transformName The Transform name.
         * 
         * @return builder
         * 
         */
        public Builder transformName(Output<String> transformName) {
            $.transformName = transformName;
            return this;
        }

        /**
         * @param transformName The Transform name.
         * 
         * @return builder
         * 
         */
        public Builder transformName(String transformName) {
            return transformName(Output.of(transformName));
        }

        public JobArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.input = Objects.requireNonNull($.input, "expected parameter 'input' to be non-null");
            $.outputs = Objects.requireNonNull($.outputs, "expected parameter 'outputs' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.transformName = Objects.requireNonNull($.transformName, "expected parameter 'transformName' to be non-null");
            return $;
        }
    }

}
