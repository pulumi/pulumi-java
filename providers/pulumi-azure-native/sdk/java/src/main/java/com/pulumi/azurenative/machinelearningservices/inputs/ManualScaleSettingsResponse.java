// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManualScaleSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ManualScaleSettingsResponse Empty = new ManualScaleSettingsResponse();

    /**
     * Fixed number of instances for this deployment.
     * 
     */
    @Import(name="instanceCount")
    private @Nullable Integer instanceCount;

    /**
     * @return Fixed number of instances for this deployment.
     * 
     */
    public Optional<Integer> instanceCount() {
        return Optional.ofNullable(this.instanceCount);
    }

    /**
     * Maximum number of instances for this deployment.
     * 
     */
    @Import(name="maxInstances")
    private @Nullable Integer maxInstances;

    /**
     * @return Maximum number of instances for this deployment.
     * 
     */
    public Optional<Integer> maxInstances() {
        return Optional.ofNullable(this.maxInstances);
    }

    /**
     * Minimum number of instances for this deployment.
     * 
     */
    @Import(name="minInstances")
    private @Nullable Integer minInstances;

    /**
     * @return Minimum number of instances for this deployment.
     * 
     */
    public Optional<Integer> minInstances() {
        return Optional.ofNullable(this.minInstances);
    }

    /**
     * Expected value is &#39;Manual&#39;.
     * 
     */
    @Import(name="scaleType", required=true)
    private String scaleType;

    /**
     * @return
     * Expected value is &#39;Manual&#39;.
     * 
     */
    public String scaleType() {
        return this.scaleType;
    }

    private ManualScaleSettingsResponse() {}

    private ManualScaleSettingsResponse(ManualScaleSettingsResponse $) {
        this.instanceCount = $.instanceCount;
        this.maxInstances = $.maxInstances;
        this.minInstances = $.minInstances;
        this.scaleType = $.scaleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManualScaleSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManualScaleSettingsResponse $;

        public Builder() {
            $ = new ManualScaleSettingsResponse();
        }

        public Builder(ManualScaleSettingsResponse defaults) {
            $ = new ManualScaleSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceCount Fixed number of instances for this deployment.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(@Nullable Integer instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        /**
         * @param maxInstances Maximum number of instances for this deployment.
         * 
         * @return builder
         * 
         */
        public Builder maxInstances(@Nullable Integer maxInstances) {
            $.maxInstances = maxInstances;
            return this;
        }

        /**
         * @param minInstances Minimum number of instances for this deployment.
         * 
         * @return builder
         * 
         */
        public Builder minInstances(@Nullable Integer minInstances) {
            $.minInstances = minInstances;
            return this;
        }

        /**
         * @param scaleType
         * Expected value is &#39;Manual&#39;.
         * 
         * @return builder
         * 
         */
        public Builder scaleType(String scaleType) {
            $.scaleType = scaleType;
            return this;
        }

        public ManualScaleSettingsResponse build() {
            $.scaleType = Codegen.stringProp("scaleType").arg($.scaleType).require();
            return $;
        }
    }

}
