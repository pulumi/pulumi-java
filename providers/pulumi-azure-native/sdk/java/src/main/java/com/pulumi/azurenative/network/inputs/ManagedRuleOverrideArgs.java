// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.ManagedRuleEnabledState;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines a managed rule group override setting.
 * 
 */
public final class ManagedRuleOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedRuleOverrideArgs Empty = new ManagedRuleOverrideArgs();

    /**
     * Identifier for the managed rule.
     * 
     */
    @Import(name="ruleId", required=true)
    private Output<String> ruleId;

    /**
     * @return Identifier for the managed rule.
     * 
     */
    public Output<String> ruleId() {
        return this.ruleId;
    }

    /**
     * The state of the managed rule. Defaults to Disabled if not specified.
     * 
     */
    @Import(name="state")
    private @Nullable Output<Either<String,ManagedRuleEnabledState>> state;

    /**
     * @return The state of the managed rule. Defaults to Disabled if not specified.
     * 
     */
    public Optional<Output<Either<String,ManagedRuleEnabledState>>> state() {
        return Optional.ofNullable(this.state);
    }

    private ManagedRuleOverrideArgs() {}

    private ManagedRuleOverrideArgs(ManagedRuleOverrideArgs $) {
        this.ruleId = $.ruleId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedRuleOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedRuleOverrideArgs $;

        public Builder() {
            $ = new ManagedRuleOverrideArgs();
        }

        public Builder(ManagedRuleOverrideArgs defaults) {
            $ = new ManagedRuleOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ruleId Identifier for the managed rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId Identifier for the managed rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        /**
         * @param state The state of the managed rule. Defaults to Disabled if not specified.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<Either<String,ManagedRuleEnabledState>> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the managed rule. Defaults to Disabled if not specified.
         * 
         * @return builder
         * 
         */
        public Builder state(Either<String,ManagedRuleEnabledState> state) {
            return state(Output.of(state));
        }

        /**
         * @param state The state of the managed rule. Defaults to Disabled if not specified.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Either.ofLeft(state));
        }

        /**
         * @param state The state of the managed rule. Defaults to Disabled if not specified.
         * 
         * @return builder
         * 
         */
        public Builder state(ManagedRuleEnabledState state) {
            return state(Either.ofRight(state));
        }

        public ManagedRuleOverrideArgs build() {
            $.ruleId = Objects.requireNonNull($.ruleId, "expected parameter 'ruleId' to be non-null");
            return $;
        }
    }

}
