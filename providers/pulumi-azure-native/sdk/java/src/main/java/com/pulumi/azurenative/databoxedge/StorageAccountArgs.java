// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge;

import com.pulumi.azurenative.databoxedge.enums.DataPolicy;
import com.pulumi.azurenative.databoxedge.enums.StorageAccountStatus;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageAccountArgs Empty = new StorageAccountArgs();

    /**
     * Data policy of the storage Account.
     * 
     */
    @Import(name="dataPolicy", required=true)
    private Output<Either<String,DataPolicy>> dataPolicy;

    /**
     * @return Data policy of the storage Account.
     * 
     */
    public Output<Either<String,DataPolicy>> dataPolicy() {
        return this.dataPolicy;
    }

    /**
     * Description for the storage Account.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description for the storage Account.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The device name.
     * 
     */
    @Import(name="deviceName", required=true)
    private Output<String> deviceName;

    /**
     * @return The device name.
     * 
     */
    public Output<String> deviceName() {
        return this.deviceName;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Storage Account Credential Id
     * 
     */
    @Import(name="storageAccountCredentialId")
    private @Nullable Output<String> storageAccountCredentialId;

    /**
     * @return Storage Account Credential Id
     * 
     */
    public Optional<Output<String>> storageAccountCredentialId() {
        return Optional.ofNullable(this.storageAccountCredentialId);
    }

    /**
     * The StorageAccount name.
     * 
     */
    @Import(name="storageAccountName")
    private @Nullable Output<String> storageAccountName;

    /**
     * @return The StorageAccount name.
     * 
     */
    public Optional<Output<String>> storageAccountName() {
        return Optional.ofNullable(this.storageAccountName);
    }

    /**
     * Current status of the storage account
     * 
     */
    @Import(name="storageAccountStatus")
    private @Nullable Output<Either<String,StorageAccountStatus>> storageAccountStatus;

    /**
     * @return Current status of the storage account
     * 
     */
    public Optional<Output<Either<String,StorageAccountStatus>>> storageAccountStatus() {
        return Optional.ofNullable(this.storageAccountStatus);
    }

    private StorageAccountArgs() {}

    private StorageAccountArgs(StorageAccountArgs $) {
        this.dataPolicy = $.dataPolicy;
        this.description = $.description;
        this.deviceName = $.deviceName;
        this.resourceGroupName = $.resourceGroupName;
        this.storageAccountCredentialId = $.storageAccountCredentialId;
        this.storageAccountName = $.storageAccountName;
        this.storageAccountStatus = $.storageAccountStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageAccountArgs $;

        public Builder() {
            $ = new StorageAccountArgs();
        }

        public Builder(StorageAccountArgs defaults) {
            $ = new StorageAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataPolicy Data policy of the storage Account.
         * 
         * @return builder
         * 
         */
        public Builder dataPolicy(Output<Either<String,DataPolicy>> dataPolicy) {
            $.dataPolicy = dataPolicy;
            return this;
        }

        /**
         * @param dataPolicy Data policy of the storage Account.
         * 
         * @return builder
         * 
         */
        public Builder dataPolicy(Either<String,DataPolicy> dataPolicy) {
            return dataPolicy(Output.of(dataPolicy));
        }

        /**
         * @param dataPolicy Data policy of the storage Account.
         * 
         * @return builder
         * 
         */
        public Builder dataPolicy(String dataPolicy) {
            return dataPolicy(Either.ofLeft(dataPolicy));
        }

        /**
         * @param dataPolicy Data policy of the storage Account.
         * 
         * @return builder
         * 
         */
        public Builder dataPolicy(DataPolicy dataPolicy) {
            return dataPolicy(Either.ofRight(dataPolicy));
        }

        /**
         * @param description Description for the storage Account.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description for the storage Account.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceName The device name.
         * 
         * @return builder
         * 
         */
        public Builder deviceName(Output<String> deviceName) {
            $.deviceName = deviceName;
            return this;
        }

        /**
         * @param deviceName The device name.
         * 
         * @return builder
         * 
         */
        public Builder deviceName(String deviceName) {
            return deviceName(Output.of(deviceName));
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param storageAccountCredentialId Storage Account Credential Id
         * 
         * @return builder
         * 
         */
        public Builder storageAccountCredentialId(@Nullable Output<String> storageAccountCredentialId) {
            $.storageAccountCredentialId = storageAccountCredentialId;
            return this;
        }

        /**
         * @param storageAccountCredentialId Storage Account Credential Id
         * 
         * @return builder
         * 
         */
        public Builder storageAccountCredentialId(String storageAccountCredentialId) {
            return storageAccountCredentialId(Output.of(storageAccountCredentialId));
        }

        /**
         * @param storageAccountName The StorageAccount name.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountName(@Nullable Output<String> storageAccountName) {
            $.storageAccountName = storageAccountName;
            return this;
        }

        /**
         * @param storageAccountName The StorageAccount name.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountName(String storageAccountName) {
            return storageAccountName(Output.of(storageAccountName));
        }

        /**
         * @param storageAccountStatus Current status of the storage account
         * 
         * @return builder
         * 
         */
        public Builder storageAccountStatus(@Nullable Output<Either<String,StorageAccountStatus>> storageAccountStatus) {
            $.storageAccountStatus = storageAccountStatus;
            return this;
        }

        /**
         * @param storageAccountStatus Current status of the storage account
         * 
         * @return builder
         * 
         */
        public Builder storageAccountStatus(Either<String,StorageAccountStatus> storageAccountStatus) {
            return storageAccountStatus(Output.of(storageAccountStatus));
        }

        /**
         * @param storageAccountStatus Current status of the storage account
         * 
         * @return builder
         * 
         */
        public Builder storageAccountStatus(String storageAccountStatus) {
            return storageAccountStatus(Either.ofLeft(storageAccountStatus));
        }

        /**
         * @param storageAccountStatus Current status of the storage account
         * 
         * @return builder
         * 
         */
        public Builder storageAccountStatus(StorageAccountStatus storageAccountStatus) {
            return storageAccountStatus(Either.ofRight(storageAccountStatus));
        }

        public StorageAccountArgs build() {
            $.dataPolicy = Objects.requireNonNull($.dataPolicy, "expected parameter 'dataPolicy' to be non-null");
            $.deviceName = Objects.requireNonNull($.deviceName, "expected parameter 'deviceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
