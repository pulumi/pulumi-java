// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Http logs to azure blob storage configuration.
 * 
 */
public final class AzureBlobStorageHttpLogsConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final AzureBlobStorageHttpLogsConfigResponse Empty = new AzureBlobStorageHttpLogsConfigResponse();

    /**
     * True if configuration is enabled, false if it is disabled and null if configuration is not set.
     * 
     */
    @Import(name="enabled")
    private @Nullable Boolean enabled;

    /**
     * @return True if configuration is enabled, false if it is disabled and null if configuration is not set.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Retention in days.
     * Remove blobs older than X days.
     * 0 or lower means no retention.
     * 
     */
    @Import(name="retentionInDays")
    private @Nullable Integer retentionInDays;

    /**
     * @return Retention in days.
     * Remove blobs older than X days.
     * 0 or lower means no retention.
     * 
     */
    public Optional<Integer> retentionInDays() {
        return Optional.ofNullable(this.retentionInDays);
    }

    /**
     * SAS url to a azure blob container with read/write/list/delete permissions.
     * 
     */
    @Import(name="sasUrl")
    private @Nullable String sasUrl;

    /**
     * @return SAS url to a azure blob container with read/write/list/delete permissions.
     * 
     */
    public Optional<String> sasUrl() {
        return Optional.ofNullable(this.sasUrl);
    }

    private AzureBlobStorageHttpLogsConfigResponse() {}

    private AzureBlobStorageHttpLogsConfigResponse(AzureBlobStorageHttpLogsConfigResponse $) {
        this.enabled = $.enabled;
        this.retentionInDays = $.retentionInDays;
        this.sasUrl = $.sasUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureBlobStorageHttpLogsConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureBlobStorageHttpLogsConfigResponse $;

        public Builder() {
            $ = new AzureBlobStorageHttpLogsConfigResponse();
        }

        public Builder(AzureBlobStorageHttpLogsConfigResponse defaults) {
            $ = new AzureBlobStorageHttpLogsConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled True if configuration is enabled, false if it is disabled and null if configuration is not set.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param retentionInDays Retention in days.
         * Remove blobs older than X days.
         * 0 or lower means no retention.
         * 
         * @return builder
         * 
         */
        public Builder retentionInDays(@Nullable Integer retentionInDays) {
            $.retentionInDays = retentionInDays;
            return this;
        }

        /**
         * @param sasUrl SAS url to a azure blob container with read/write/list/delete permissions.
         * 
         * @return builder
         * 
         */
        public Builder sasUrl(@Nullable String sasUrl) {
            $.sasUrl = sasUrl;
            return this;
        }

        public AzureBlobStorageHttpLogsConfigResponse build() {
            return $;
        }
    }

}
