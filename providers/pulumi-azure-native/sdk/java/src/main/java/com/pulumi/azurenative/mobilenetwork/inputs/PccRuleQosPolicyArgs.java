// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.mobilenetwork.inputs;

import com.pulumi.azurenative.mobilenetwork.enums.PreemptionCapability;
import com.pulumi.azurenative.mobilenetwork.enums.PreemptionVulnerability;
import com.pulumi.azurenative.mobilenetwork.inputs.AmbrArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * PCC rule QoS policy
 * 
 */
public final class PccRuleQosPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final PccRuleQosPolicyArgs Empty = new PccRuleQosPolicyArgs();

    /**
     * QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `5qi` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
     * 
     */
    @Import(name="allocationAndRetentionPriorityLevel")
    private @Nullable Output<Integer> allocationAndRetentionPriorityLevel;

    /**
     * @return QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `5qi` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
     * 
     */
    public Optional<Output<Integer>> allocationAndRetentionPriorityLevel() {
        return Optional.ofNullable(this.allocationAndRetentionPriorityLevel);
    }

    /**
     * QoS Flow 5G QoS Indicator value.  The 5QI identifies a specific QoS forwarding treatment to be provided to a flow. This must not be a standardized 5QI value selecting a GBR (Guaranteed Bit Rate) QoS.  The illegal GBR 5QI values are: 1, 2, 3, 4, 65, 66, 67, 71, 72, 73, 74, 75, 76, 82, 83, 84, and 85. See 3GPP TS23.501 section 5.7.2.1 for a full description of the 5Qi parameter, and table 5.7.4-1 for the definition of which are the GBR 5QI values.
     * 
     */
    @Import(name="fiveQi")
    private @Nullable Output<Integer> fiveQi;

    /**
     * @return QoS Flow 5G QoS Indicator value.  The 5QI identifies a specific QoS forwarding treatment to be provided to a flow. This must not be a standardized 5QI value selecting a GBR (Guaranteed Bit Rate) QoS.  The illegal GBR 5QI values are: 1, 2, 3, 4, 65, 66, 67, 71, 72, 73, 74, 75, 76, 82, 83, 84, and 85. See 3GPP TS23.501 section 5.7.2.1 for a full description of the 5Qi parameter, and table 5.7.4-1 for the definition of which are the GBR 5QI values.
     * 
     */
    public Optional<Output<Integer>> fiveQi() {
        return Optional.ofNullable(this.fiveQi);
    }

    /**
     * The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule. This is an optional setting. If you do not provide a value, there will be no GBR set for the PCC Rule that uses this QoS definition.
     * 
     */
    @Import(name="guaranteedBitRate")
    private @Nullable Output<AmbrArgs> guaranteedBitRate;

    /**
     * @return The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule. This is an optional setting. If you do not provide a value, there will be no GBR set for the PCC Rule that uses this QoS definition.
     * 
     */
    public Optional<Output<AmbrArgs>> guaranteedBitRate() {
        return Optional.ofNullable(this.guaranteedBitRate);
    }

    /**
     * The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
     * 
     */
    @Import(name="maximumBitRate", required=true)
    private Output<AmbrArgs> maximumBitRate;

    /**
     * @return The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
     * 
     */
    public Output<AmbrArgs> maximumBitRate() {
        return this.maximumBitRate;
    }

    /**
     * QoS Flow preemption capability.  The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
     * 
     */
    @Import(name="preemptionCapability")
    private @Nullable Output<Either<String,PreemptionCapability>> preemptionCapability;

    /**
     * @return QoS Flow preemption capability.  The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
     * 
     */
    public Optional<Output<Either<String,PreemptionCapability>>> preemptionCapability() {
        return Optional.ofNullable(this.preemptionCapability);
    }

    /**
     * QoS Flow preemption vulnerability.  The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
     * 
     */
    @Import(name="preemptionVulnerability")
    private @Nullable Output<Either<String,PreemptionVulnerability>> preemptionVulnerability;

    /**
     * @return QoS Flow preemption vulnerability.  The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
     * 
     */
    public Optional<Output<Either<String,PreemptionVulnerability>>> preemptionVulnerability() {
        return Optional.ofNullable(this.preemptionVulnerability);
    }

    private PccRuleQosPolicyArgs() {}

    private PccRuleQosPolicyArgs(PccRuleQosPolicyArgs $) {
        this.allocationAndRetentionPriorityLevel = $.allocationAndRetentionPriorityLevel;
        this.fiveQi = $.fiveQi;
        this.guaranteedBitRate = $.guaranteedBitRate;
        this.maximumBitRate = $.maximumBitRate;
        this.preemptionCapability = $.preemptionCapability;
        this.preemptionVulnerability = $.preemptionVulnerability;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PccRuleQosPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PccRuleQosPolicyArgs $;

        public Builder() {
            $ = new PccRuleQosPolicyArgs();
        }

        public Builder(PccRuleQosPolicyArgs defaults) {
            $ = new PccRuleQosPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocationAndRetentionPriorityLevel QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `5qi` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder allocationAndRetentionPriorityLevel(@Nullable Output<Integer> allocationAndRetentionPriorityLevel) {
            $.allocationAndRetentionPriorityLevel = allocationAndRetentionPriorityLevel;
            return this;
        }

        /**
         * @param allocationAndRetentionPriorityLevel QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `5qi` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder allocationAndRetentionPriorityLevel(Integer allocationAndRetentionPriorityLevel) {
            return allocationAndRetentionPriorityLevel(Output.of(allocationAndRetentionPriorityLevel));
        }

        /**
         * @param fiveQi QoS Flow 5G QoS Indicator value.  The 5QI identifies a specific QoS forwarding treatment to be provided to a flow. This must not be a standardized 5QI value selecting a GBR (Guaranteed Bit Rate) QoS.  The illegal GBR 5QI values are: 1, 2, 3, 4, 65, 66, 67, 71, 72, 73, 74, 75, 76, 82, 83, 84, and 85. See 3GPP TS23.501 section 5.7.2.1 for a full description of the 5Qi parameter, and table 5.7.4-1 for the definition of which are the GBR 5QI values.
         * 
         * @return builder
         * 
         */
        public Builder fiveQi(@Nullable Output<Integer> fiveQi) {
            $.fiveQi = fiveQi;
            return this;
        }

        /**
         * @param fiveQi QoS Flow 5G QoS Indicator value.  The 5QI identifies a specific QoS forwarding treatment to be provided to a flow. This must not be a standardized 5QI value selecting a GBR (Guaranteed Bit Rate) QoS.  The illegal GBR 5QI values are: 1, 2, 3, 4, 65, 66, 67, 71, 72, 73, 74, 75, 76, 82, 83, 84, and 85. See 3GPP TS23.501 section 5.7.2.1 for a full description of the 5Qi parameter, and table 5.7.4-1 for the definition of which are the GBR 5QI values.
         * 
         * @return builder
         * 
         */
        public Builder fiveQi(Integer fiveQi) {
            return fiveQi(Output.of(fiveQi));
        }

        /**
         * @param guaranteedBitRate The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule. This is an optional setting. If you do not provide a value, there will be no GBR set for the PCC Rule that uses this QoS definition.
         * 
         * @return builder
         * 
         */
        public Builder guaranteedBitRate(@Nullable Output<AmbrArgs> guaranteedBitRate) {
            $.guaranteedBitRate = guaranteedBitRate;
            return this;
        }

        /**
         * @param guaranteedBitRate The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule. This is an optional setting. If you do not provide a value, there will be no GBR set for the PCC Rule that uses this QoS definition.
         * 
         * @return builder
         * 
         */
        public Builder guaranteedBitRate(AmbrArgs guaranteedBitRate) {
            return guaranteedBitRate(Output.of(guaranteedBitRate));
        }

        /**
         * @param maximumBitRate The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
         * 
         * @return builder
         * 
         */
        public Builder maximumBitRate(Output<AmbrArgs> maximumBitRate) {
            $.maximumBitRate = maximumBitRate;
            return this;
        }

        /**
         * @param maximumBitRate The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
         * 
         * @return builder
         * 
         */
        public Builder maximumBitRate(AmbrArgs maximumBitRate) {
            return maximumBitRate(Output.of(maximumBitRate));
        }

        /**
         * @param preemptionCapability QoS Flow preemption capability.  The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder preemptionCapability(@Nullable Output<Either<String,PreemptionCapability>> preemptionCapability) {
            $.preemptionCapability = preemptionCapability;
            return this;
        }

        /**
         * @param preemptionCapability QoS Flow preemption capability.  The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder preemptionCapability(Either<String,PreemptionCapability> preemptionCapability) {
            return preemptionCapability(Output.of(preemptionCapability));
        }

        /**
         * @param preemptionCapability QoS Flow preemption capability.  The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder preemptionCapability(String preemptionCapability) {
            return preemptionCapability(Either.ofLeft(preemptionCapability));
        }

        /**
         * @param preemptionCapability QoS Flow preemption capability.  The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder preemptionCapability(PreemptionCapability preemptionCapability) {
            return preemptionCapability(Either.ofRight(preemptionCapability));
        }

        /**
         * @param preemptionVulnerability QoS Flow preemption vulnerability.  The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder preemptionVulnerability(@Nullable Output<Either<String,PreemptionVulnerability>> preemptionVulnerability) {
            $.preemptionVulnerability = preemptionVulnerability;
            return this;
        }

        /**
         * @param preemptionVulnerability QoS Flow preemption vulnerability.  The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder preemptionVulnerability(Either<String,PreemptionVulnerability> preemptionVulnerability) {
            return preemptionVulnerability(Output.of(preemptionVulnerability));
        }

        /**
         * @param preemptionVulnerability QoS Flow preemption vulnerability.  The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder preemptionVulnerability(String preemptionVulnerability) {
            return preemptionVulnerability(Either.ofLeft(preemptionVulnerability));
        }

        /**
         * @param preemptionVulnerability QoS Flow preemption vulnerability.  The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder preemptionVulnerability(PreemptionVulnerability preemptionVulnerability) {
            return preemptionVulnerability(Either.ofRight(preemptionVulnerability));
        }

        public PccRuleQosPolicyArgs build() {
            $.allocationAndRetentionPriorityLevel = Codegen.integerProp("allocationAndRetentionPriorityLevel").output().arg($.allocationAndRetentionPriorityLevel).def(9).getNullable();
            $.fiveQi = Codegen.integerProp("fiveQi").output().arg($.fiveQi).def(9).getNullable();
            $.maximumBitRate = Objects.requireNonNull($.maximumBitRate, "expected parameter 'maximumBitRate' to be non-null");
            $.preemptionCapability = Codegen.stringProp("preemptionCapability").left(PreemptionCapability.class).output().arg($.preemptionCapability).def("NotPreempt").getNullable();
            $.preemptionVulnerability = Codegen.stringProp("preemptionVulnerability").left(PreemptionVulnerability.class).output().arg($.preemptionVulnerability).def("Preemptable").getNullable();
            return $;
        }
    }

}
