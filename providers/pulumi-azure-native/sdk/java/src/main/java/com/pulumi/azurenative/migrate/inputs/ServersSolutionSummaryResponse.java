// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class representing the servers solution summary.
 * 
 */
public final class ServersSolutionSummaryResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServersSolutionSummaryResponse Empty = new ServersSolutionSummaryResponse();

    /**
     * Gets or sets the count of servers assessed.
     * 
     */
    @Import(name="assessedCount")
    private @Nullable Integer assessedCount;

    public Optional<Integer> assessedCount() {
        return Optional.ofNullable(this.assessedCount);
    }

    /**
     * Gets or sets the count of servers discovered.
     * 
     */
    @Import(name="discoveredCount")
    private @Nullable Integer discoveredCount;

    public Optional<Integer> discoveredCount() {
        return Optional.ofNullable(this.discoveredCount);
    }

    /**
     * Gets the Instance type.
     * Expected value is &#39;Servers&#39;.
     * 
     */
    @Import(name="instanceType", required=true)
    private String instanceType;

    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Gets or sets the count of servers migrated.
     * 
     */
    @Import(name="migratedCount")
    private @Nullable Integer migratedCount;

    public Optional<Integer> migratedCount() {
        return Optional.ofNullable(this.migratedCount);
    }

    /**
     * Gets or sets the count of servers being replicated.
     * 
     */
    @Import(name="replicatingCount")
    private @Nullable Integer replicatingCount;

    public Optional<Integer> replicatingCount() {
        return Optional.ofNullable(this.replicatingCount);
    }

    /**
     * Gets or sets the count of servers test migrated.
     * 
     */
    @Import(name="testMigratedCount")
    private @Nullable Integer testMigratedCount;

    public Optional<Integer> testMigratedCount() {
        return Optional.ofNullable(this.testMigratedCount);
    }

    private ServersSolutionSummaryResponse() {}

    private ServersSolutionSummaryResponse(ServersSolutionSummaryResponse $) {
        this.assessedCount = $.assessedCount;
        this.discoveredCount = $.discoveredCount;
        this.instanceType = $.instanceType;
        this.migratedCount = $.migratedCount;
        this.replicatingCount = $.replicatingCount;
        this.testMigratedCount = $.testMigratedCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServersSolutionSummaryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServersSolutionSummaryResponse $;

        public Builder() {
            $ = new ServersSolutionSummaryResponse();
        }

        public Builder(ServersSolutionSummaryResponse defaults) {
            $ = new ServersSolutionSummaryResponse(Objects.requireNonNull(defaults));
        }

        public Builder assessedCount(@Nullable Integer assessedCount) {
            $.assessedCount = assessedCount;
            return this;
        }

        public Builder discoveredCount(@Nullable Integer discoveredCount) {
            $.discoveredCount = discoveredCount;
            return this;
        }

        public Builder instanceType(String instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder migratedCount(@Nullable Integer migratedCount) {
            $.migratedCount = migratedCount;
            return this;
        }

        public Builder replicatingCount(@Nullable Integer replicatingCount) {
            $.replicatingCount = replicatingCount;
            return this;
        }

        public Builder testMigratedCount(@Nullable Integer testMigratedCount) {
            $.testMigratedCount = testMigratedCount;
            return this;
        }

        public ServersSolutionSummaryResponse build() {
            $.instanceType = Codegen.stringProp("instanceType").arg($.instanceType).require();
            return $;
        }
    }

}
