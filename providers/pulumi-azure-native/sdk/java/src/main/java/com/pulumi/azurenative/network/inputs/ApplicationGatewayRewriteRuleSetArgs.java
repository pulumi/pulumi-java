// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.ApplicationGatewayRewriteRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Rewrite rule set of an application gateway.
 * 
 */
public final class ApplicationGatewayRewriteRuleSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationGatewayRewriteRuleSetArgs Empty = new ApplicationGatewayRewriteRuleSetArgs();

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the rewrite rule set that is unique within an Application Gateway.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the rewrite rule set that is unique within an Application Gateway.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Rewrite rules in the rewrite rule set.
     * 
     */
    @Import(name="rewriteRules")
    private @Nullable Output<List<ApplicationGatewayRewriteRuleArgs>> rewriteRules;

    /**
     * @return Rewrite rules in the rewrite rule set.
     * 
     */
    public Optional<Output<List<ApplicationGatewayRewriteRuleArgs>>> rewriteRules() {
        return Optional.ofNullable(this.rewriteRules);
    }

    private ApplicationGatewayRewriteRuleSetArgs() {}

    private ApplicationGatewayRewriteRuleSetArgs(ApplicationGatewayRewriteRuleSetArgs $) {
        this.id = $.id;
        this.name = $.name;
        this.rewriteRules = $.rewriteRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayRewriteRuleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayRewriteRuleSetArgs $;

        public Builder() {
            $ = new ApplicationGatewayRewriteRuleSetArgs();
        }

        public Builder(ApplicationGatewayRewriteRuleSetArgs defaults) {
            $ = new ApplicationGatewayRewriteRuleSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name Name of the rewrite rule set that is unique within an Application Gateway.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the rewrite rule set that is unique within an Application Gateway.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rewriteRules Rewrite rules in the rewrite rule set.
         * 
         * @return builder
         * 
         */
        public Builder rewriteRules(@Nullable Output<List<ApplicationGatewayRewriteRuleArgs>> rewriteRules) {
            $.rewriteRules = rewriteRules;
            return this;
        }

        /**
         * @param rewriteRules Rewrite rules in the rewrite rule set.
         * 
         * @return builder
         * 
         */
        public Builder rewriteRules(List<ApplicationGatewayRewriteRuleArgs> rewriteRules) {
            return rewriteRules(Output.of(rewriteRules));
        }

        /**
         * @param rewriteRules Rewrite rules in the rewrite rule set.
         * 
         * @return builder
         * 
         */
        public Builder rewriteRules(ApplicationGatewayRewriteRuleArgs... rewriteRules) {
            return rewriteRules(List.of(rewriteRules));
        }

        public ApplicationGatewayRewriteRuleSetArgs build() {
            return $;
        }
    }

}
