// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.ApplicationGatewayRedirectType;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Redirect configuration of an application gateway.
 * 
 */
public final class ApplicationGatewayRedirectConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationGatewayRedirectConfigurationArgs Empty = new ApplicationGatewayRedirectConfigurationArgs();

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Include path in the redirected url.
     * 
     */
    @Import(name="includePath")
    private @Nullable Output<Boolean> includePath;

    public Optional<Output<Boolean>> includePath() {
        return Optional.ofNullable(this.includePath);
    }

    /**
     * Include query string in the redirected url.
     * 
     */
    @Import(name="includeQueryString")
    private @Nullable Output<Boolean> includeQueryString;

    public Optional<Output<Boolean>> includeQueryString() {
        return Optional.ofNullable(this.includeQueryString);
    }

    /**
     * Name of the redirect configuration that is unique within an Application Gateway.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Path rules specifying redirect configuration.
     * 
     */
    @Import(name="pathRules")
    private @Nullable Output<List<SubResourceArgs>> pathRules;

    public Optional<Output<List<SubResourceArgs>>> pathRules() {
        return Optional.ofNullable(this.pathRules);
    }

    /**
     * HTTP redirection type.
     * 
     */
    @Import(name="redirectType")
    private @Nullable Output<Either<String,ApplicationGatewayRedirectType>> redirectType;

    public Optional<Output<Either<String,ApplicationGatewayRedirectType>>> redirectType() {
        return Optional.ofNullable(this.redirectType);
    }

    /**
     * Request routing specifying redirect configuration.
     * 
     */
    @Import(name="requestRoutingRules")
    private @Nullable Output<List<SubResourceArgs>> requestRoutingRules;

    public Optional<Output<List<SubResourceArgs>>> requestRoutingRules() {
        return Optional.ofNullable(this.requestRoutingRules);
    }

    /**
     * Reference to a listener to redirect the request to.
     * 
     */
    @Import(name="targetListener")
    private @Nullable Output<SubResourceArgs> targetListener;

    public Optional<Output<SubResourceArgs>> targetListener() {
        return Optional.ofNullable(this.targetListener);
    }

    /**
     * Url to redirect the request to.
     * 
     */
    @Import(name="targetUrl")
    private @Nullable Output<String> targetUrl;

    public Optional<Output<String>> targetUrl() {
        return Optional.ofNullable(this.targetUrl);
    }

    /**
     * Url path maps specifying default redirect configuration.
     * 
     */
    @Import(name="urlPathMaps")
    private @Nullable Output<List<SubResourceArgs>> urlPathMaps;

    public Optional<Output<List<SubResourceArgs>>> urlPathMaps() {
        return Optional.ofNullable(this.urlPathMaps);
    }

    private ApplicationGatewayRedirectConfigurationArgs() {}

    private ApplicationGatewayRedirectConfigurationArgs(ApplicationGatewayRedirectConfigurationArgs $) {
        this.id = $.id;
        this.includePath = $.includePath;
        this.includeQueryString = $.includeQueryString;
        this.name = $.name;
        this.pathRules = $.pathRules;
        this.redirectType = $.redirectType;
        this.requestRoutingRules = $.requestRoutingRules;
        this.targetListener = $.targetListener;
        this.targetUrl = $.targetUrl;
        this.urlPathMaps = $.urlPathMaps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayRedirectConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayRedirectConfigurationArgs $;

        public Builder() {
            $ = new ApplicationGatewayRedirectConfigurationArgs();
        }

        public Builder(ApplicationGatewayRedirectConfigurationArgs defaults) {
            $ = new ApplicationGatewayRedirectConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder includePath(@Nullable Output<Boolean> includePath) {
            $.includePath = includePath;
            return this;
        }

        public Builder includePath(Boolean includePath) {
            return includePath(Output.of(includePath));
        }

        public Builder includeQueryString(@Nullable Output<Boolean> includeQueryString) {
            $.includeQueryString = includeQueryString;
            return this;
        }

        public Builder includeQueryString(Boolean includeQueryString) {
            return includeQueryString(Output.of(includeQueryString));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder pathRules(@Nullable Output<List<SubResourceArgs>> pathRules) {
            $.pathRules = pathRules;
            return this;
        }

        public Builder pathRules(List<SubResourceArgs> pathRules) {
            return pathRules(Output.of(pathRules));
        }

        public Builder pathRules(SubResourceArgs... pathRules) {
            return pathRules(List.of(pathRules));
        }

        public Builder redirectType(@Nullable Output<Either<String,ApplicationGatewayRedirectType>> redirectType) {
            $.redirectType = redirectType;
            return this;
        }

        public Builder redirectType(Either<String,ApplicationGatewayRedirectType> redirectType) {
            return redirectType(Output.of(redirectType));
        }

        public Builder redirectType(String redirectType) {
            return redirectType(Either.ofLeft(redirectType));
        }

        public Builder redirectType(ApplicationGatewayRedirectType redirectType) {
            return redirectType(Either.ofRight(redirectType));
        }

        public Builder requestRoutingRules(@Nullable Output<List<SubResourceArgs>> requestRoutingRules) {
            $.requestRoutingRules = requestRoutingRules;
            return this;
        }

        public Builder requestRoutingRules(List<SubResourceArgs> requestRoutingRules) {
            return requestRoutingRules(Output.of(requestRoutingRules));
        }

        public Builder requestRoutingRules(SubResourceArgs... requestRoutingRules) {
            return requestRoutingRules(List.of(requestRoutingRules));
        }

        public Builder targetListener(@Nullable Output<SubResourceArgs> targetListener) {
            $.targetListener = targetListener;
            return this;
        }

        public Builder targetListener(SubResourceArgs targetListener) {
            return targetListener(Output.of(targetListener));
        }

        public Builder targetUrl(@Nullable Output<String> targetUrl) {
            $.targetUrl = targetUrl;
            return this;
        }

        public Builder targetUrl(String targetUrl) {
            return targetUrl(Output.of(targetUrl));
        }

        public Builder urlPathMaps(@Nullable Output<List<SubResourceArgs>> urlPathMaps) {
            $.urlPathMaps = urlPathMaps;
            return this;
        }

        public Builder urlPathMaps(List<SubResourceArgs> urlPathMaps) {
            return urlPathMaps(Output.of(urlPathMaps));
        }

        public Builder urlPathMaps(SubResourceArgs... urlPathMaps) {
            return urlPathMaps(List.of(urlPathMaps));
        }

        public ApplicationGatewayRedirectConfigurationArgs build() {
            return $;
        }
    }

}
