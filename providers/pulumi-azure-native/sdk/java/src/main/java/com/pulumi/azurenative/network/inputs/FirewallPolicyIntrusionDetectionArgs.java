// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.FirewallPolicyIntrusionDetectionStateType;
import com.pulumi.azurenative.network.inputs.FirewallPolicyIntrusionDetectionConfigurationArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configuration for intrusion detection mode and rules.
 * 
 */
public final class FirewallPolicyIntrusionDetectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallPolicyIntrusionDetectionArgs Empty = new FirewallPolicyIntrusionDetectionArgs();

    /**
     * Intrusion detection configuration properties.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<FirewallPolicyIntrusionDetectionConfigurationArgs> configuration;

    /**
     * @return Intrusion detection configuration properties.
     * 
     */
    public Optional<Output<FirewallPolicyIntrusionDetectionConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * Intrusion detection general state.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<Either<String,FirewallPolicyIntrusionDetectionStateType>> mode;

    /**
     * @return Intrusion detection general state.
     * 
     */
    public Optional<Output<Either<String,FirewallPolicyIntrusionDetectionStateType>>> mode() {
        return Optional.ofNullable(this.mode);
    }

    private FirewallPolicyIntrusionDetectionArgs() {}

    private FirewallPolicyIntrusionDetectionArgs(FirewallPolicyIntrusionDetectionArgs $) {
        this.configuration = $.configuration;
        this.mode = $.mode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallPolicyIntrusionDetectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallPolicyIntrusionDetectionArgs $;

        public Builder() {
            $ = new FirewallPolicyIntrusionDetectionArgs();
        }

        public Builder(FirewallPolicyIntrusionDetectionArgs defaults) {
            $ = new FirewallPolicyIntrusionDetectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration Intrusion detection configuration properties.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<FirewallPolicyIntrusionDetectionConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration Intrusion detection configuration properties.
         * 
         * @return builder
         * 
         */
        public Builder configuration(FirewallPolicyIntrusionDetectionConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param mode Intrusion detection general state.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<Either<String,FirewallPolicyIntrusionDetectionStateType>> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Intrusion detection general state.
         * 
         * @return builder
         * 
         */
        public Builder mode(Either<String,FirewallPolicyIntrusionDetectionStateType> mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param mode Intrusion detection general state.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Either.ofLeft(mode));
        }

        /**
         * @param mode Intrusion detection general state.
         * 
         * @return builder
         * 
         */
        public Builder mode(FirewallPolicyIntrusionDetectionStateType mode) {
            return mode(Either.ofRight(mode));
        }

        public FirewallPolicyIntrusionDetectionArgs build() {
            return $;
        }
    }

}
