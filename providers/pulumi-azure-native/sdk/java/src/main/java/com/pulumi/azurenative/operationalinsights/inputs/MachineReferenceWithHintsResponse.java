// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * A machine reference with a hint of the machine&#39;s name and operating system.
 * 
 */
public final class MachineReferenceWithHintsResponse extends com.pulumi.resources.InvokeArgs {

    public static final MachineReferenceWithHintsResponse Empty = new MachineReferenceWithHintsResponse();

    /**
     * Last known display name.
     * 
     */
    @Import(name="displayNameHint", required=true)
    private String displayNameHint;

    public String displayNameHint() {
        return this.displayNameHint;
    }

    /**
     * Resource URI.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * Specifies the sub-class of the reference.
     * Expected value is &#39;ref:machinewithhints&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private String kind;

    public String kind() {
        return this.kind;
    }

    /**
     * Resource name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Last known operating system family.
     * 
     */
    @Import(name="osFamilyHint", required=true)
    private String osFamilyHint;

    public String osFamilyHint() {
        return this.osFamilyHint;
    }

    /**
     * Resource type qualifier.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private MachineReferenceWithHintsResponse() {}

    private MachineReferenceWithHintsResponse(MachineReferenceWithHintsResponse $) {
        this.displayNameHint = $.displayNameHint;
        this.id = $.id;
        this.kind = $.kind;
        this.name = $.name;
        this.osFamilyHint = $.osFamilyHint;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MachineReferenceWithHintsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MachineReferenceWithHintsResponse $;

        public Builder() {
            $ = new MachineReferenceWithHintsResponse();
        }

        public Builder(MachineReferenceWithHintsResponse defaults) {
            $ = new MachineReferenceWithHintsResponse(Objects.requireNonNull(defaults));
        }

        public Builder displayNameHint(String displayNameHint) {
            $.displayNameHint = displayNameHint;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder kind(String kind) {
            $.kind = kind;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder osFamilyHint(String osFamilyHint) {
            $.osFamilyHint = osFamilyHint;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public MachineReferenceWithHintsResponse build() {
            $.displayNameHint = Objects.requireNonNull($.displayNameHint, "expected parameter 'displayNameHint' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.kind = Codegen.stringProp("kind").arg($.kind).require();
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.osFamilyHint = Objects.requireNonNull($.osFamilyHint, "expected parameter 'osFamilyHint' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
