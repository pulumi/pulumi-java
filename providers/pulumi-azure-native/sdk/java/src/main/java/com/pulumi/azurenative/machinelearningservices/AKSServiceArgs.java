// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices;

import com.pulumi.azurenative.machinelearningservices.enums.VariantType;
import com.pulumi.azurenative.machinelearningservices.inputs.AKSServiceCreateRequestAutoScalerArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.AKSServiceCreateRequestDataCollectionArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.AKSServiceCreateRequestLivenessProbeRequirementsArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.ContainerResourceRequirementsArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.CreateServiceRequestEnvironmentImageRequestArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.CreateServiceRequestKeysArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AKSServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AKSServiceArgs Empty = new AKSServiceArgs();

    /**
     * Whether or not AAD authentication is enabled.
     * 
     */
    @Import(name="aadAuthEnabled")
      private final @Nullable Output<Boolean> aadAuthEnabled;

    public Output<Boolean> aadAuthEnabled() {
        return this.aadAuthEnabled == null ? Codegen.empty() : this.aadAuthEnabled;
    }

    /**
     * Whether or not Application Insights is enabled.
     * 
     */
    @Import(name="appInsightsEnabled")
      private final @Nullable Output<Boolean> appInsightsEnabled;

    public Output<Boolean> appInsightsEnabled() {
        return this.appInsightsEnabled == null ? Codegen.empty() : this.appInsightsEnabled;
    }

    /**
     * Whether or not authentication is enabled.
     * 
     */
    @Import(name="authEnabled")
      private final @Nullable Output<Boolean> authEnabled;

    public Output<Boolean> authEnabled() {
        return this.authEnabled == null ? Codegen.empty() : this.authEnabled;
    }

    /**
     * The auto scaler properties.
     * 
     */
    @Import(name="autoScaler")
      private final @Nullable Output<AKSServiceCreateRequestAutoScalerArgs> autoScaler;

    public Output<AKSServiceCreateRequestAutoScalerArgs> autoScaler() {
        return this.autoScaler == null ? Codegen.empty() : this.autoScaler;
    }

    /**
     * The name of the compute resource.
     * 
     */
    @Import(name="computeName")
      private final @Nullable Output<String> computeName;

    public Output<String> computeName() {
        return this.computeName == null ? Codegen.empty() : this.computeName;
    }

    /**
     * The compute environment type for the service.
     * Expected value is 'AKS'.
     * 
     */
    @Import(name="computeType", required=true)
      private final Output<String> computeType;

    public Output<String> computeType() {
        return this.computeType;
    }

    /**
     * The container resource requirements.
     * 
     */
    @Import(name="containerResourceRequirements")
      private final @Nullable Output<ContainerResourceRequirementsArgs> containerResourceRequirements;

    public Output<ContainerResourceRequirementsArgs> containerResourceRequirements() {
        return this.containerResourceRequirements == null ? Codegen.empty() : this.containerResourceRequirements;
    }

    /**
     * Details of the data collection options specified.
     * 
     */
    @Import(name="dataCollection")
      private final @Nullable Output<AKSServiceCreateRequestDataCollectionArgs> dataCollection;

    public Output<AKSServiceCreateRequestDataCollectionArgs> dataCollection() {
        return this.dataCollection == null ? Codegen.empty() : this.dataCollection;
    }

    /**
     * The description of the service.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The Environment, models and assets needed for inferencing.
     * 
     */
    @Import(name="environmentImageRequest")
      private final @Nullable Output<CreateServiceRequestEnvironmentImageRequestArgs> environmentImageRequest;

    public Output<CreateServiceRequestEnvironmentImageRequestArgs> environmentImageRequest() {
        return this.environmentImageRequest == null ? Codegen.empty() : this.environmentImageRequest;
    }

    /**
     * Is this the default variant.
     * 
     */
    @Import(name="isDefault")
      private final @Nullable Output<Boolean> isDefault;

    public Output<Boolean> isDefault() {
        return this.isDefault == null ? Codegen.empty() : this.isDefault;
    }

    /**
     * The authentication keys.
     * 
     */
    @Import(name="keys")
      private final @Nullable Output<CreateServiceRequestKeysArgs> keys;

    public Output<CreateServiceRequestKeysArgs> keys() {
        return this.keys == null ? Codegen.empty() : this.keys;
    }

    /**
     * The service tag dictionary. Tags are mutable.
     * 
     */
    @Import(name="kvTags")
      private final @Nullable Output<Map<String,String>> kvTags;

    public Output<Map<String,String>> kvTags() {
        return this.kvTags == null ? Codegen.empty() : this.kvTags;
    }

    /**
     * The liveness probe requirements.
     * 
     */
    @Import(name="livenessProbeRequirements")
      private final @Nullable Output<AKSServiceCreateRequestLivenessProbeRequirementsArgs> livenessProbeRequirements;

    public Output<AKSServiceCreateRequestLivenessProbeRequirementsArgs> livenessProbeRequirements() {
        return this.livenessProbeRequirements == null ? Codegen.empty() : this.livenessProbeRequirements;
    }

    /**
     * The name of the Azure location/region.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The maximum number of concurrent requests per container.
     * 
     */
    @Import(name="maxConcurrentRequestsPerContainer")
      private final @Nullable Output<Integer> maxConcurrentRequestsPerContainer;

    public Output<Integer> maxConcurrentRequestsPerContainer() {
        return this.maxConcurrentRequestsPerContainer == null ? Codegen.empty() : this.maxConcurrentRequestsPerContainer;
    }

    /**
     * Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
     * 
     */
    @Import(name="maxQueueWaitMs")
      private final @Nullable Output<Integer> maxQueueWaitMs;

    public Output<Integer> maxQueueWaitMs() {
        return this.maxQueueWaitMs == null ? Codegen.empty() : this.maxQueueWaitMs;
    }

    /**
     * Kubernetes namespace for the service.
     * 
     */
    @Import(name="namespace")
      private final @Nullable Output<String> namespace;

    public Output<String> namespace() {
        return this.namespace == null ? Codegen.empty() : this.namespace;
    }

    /**
     * The number of replicas on the cluster.
     * 
     */
    @Import(name="numReplicas")
      private final @Nullable Output<Integer> numReplicas;

    public Output<Integer> numReplicas() {
        return this.numReplicas == null ? Codegen.empty() : this.numReplicas;
    }

    /**
     * The service properties dictionary. Properties are immutable.
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<Map<String,String>> properties;

    public Output<Map<String,String>> properties() {
        return this.properties == null ? Codegen.empty() : this.properties;
    }

    /**
     * Name of the resource group in which workspace is located.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The scoring timeout in milliseconds.
     * 
     */
    @Import(name="scoringTimeoutMs")
      private final @Nullable Output<Integer> scoringTimeoutMs;

    public Output<Integer> scoringTimeoutMs() {
        return this.scoringTimeoutMs == null ? Codegen.empty() : this.scoringTimeoutMs;
    }

    /**
     * Name of the Azure Machine Learning service.
     * 
     */
    @Import(name="serviceName")
      private final @Nullable Output<String> serviceName;

    public Output<String> serviceName() {
        return this.serviceName == null ? Codegen.empty() : this.serviceName;
    }

    /**
     * The amount of traffic variant receives.
     * 
     */
    @Import(name="trafficPercentile")
      private final @Nullable Output<Double> trafficPercentile;

    public Output<Double> trafficPercentile() {
        return this.trafficPercentile == null ? Codegen.empty() : this.trafficPercentile;
    }

    /**
     * The type of the variant.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<Either<String,VariantType>> type;

    public Output<Either<String,VariantType>> type() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    /**
     * Name of Azure Machine Learning workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
      private final Output<String> workspaceName;

    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    public AKSServiceArgs(
        @Nullable Output<Boolean> aadAuthEnabled,
        @Nullable Output<Boolean> appInsightsEnabled,
        @Nullable Output<Boolean> authEnabled,
        @Nullable Output<AKSServiceCreateRequestAutoScalerArgs> autoScaler,
        @Nullable Output<String> computeName,
        Output<String> computeType,
        @Nullable Output<ContainerResourceRequirementsArgs> containerResourceRequirements,
        @Nullable Output<AKSServiceCreateRequestDataCollectionArgs> dataCollection,
        @Nullable Output<String> description,
        @Nullable Output<CreateServiceRequestEnvironmentImageRequestArgs> environmentImageRequest,
        @Nullable Output<Boolean> isDefault,
        @Nullable Output<CreateServiceRequestKeysArgs> keys,
        @Nullable Output<Map<String,String>> kvTags,
        @Nullable Output<AKSServiceCreateRequestLivenessProbeRequirementsArgs> livenessProbeRequirements,
        @Nullable Output<String> location,
        @Nullable Output<Integer> maxConcurrentRequestsPerContainer,
        @Nullable Output<Integer> maxQueueWaitMs,
        @Nullable Output<String> namespace,
        @Nullable Output<Integer> numReplicas,
        @Nullable Output<Map<String,String>> properties,
        Output<String> resourceGroupName,
        @Nullable Output<Integer> scoringTimeoutMs,
        @Nullable Output<String> serviceName,
        @Nullable Output<Double> trafficPercentile,
        @Nullable Output<Either<String,VariantType>> type,
        Output<String> workspaceName) {
        this.aadAuthEnabled = aadAuthEnabled;
        this.appInsightsEnabled = appInsightsEnabled;
        this.authEnabled = authEnabled;
        this.autoScaler = autoScaler;
        this.computeName = computeName;
        this.computeType = Objects.requireNonNull(computeType, "expected parameter 'computeType' to be non-null");
        this.containerResourceRequirements = containerResourceRequirements;
        this.dataCollection = dataCollection;
        this.description = description;
        this.environmentImageRequest = environmentImageRequest;
        this.isDefault = isDefault;
        this.keys = keys;
        this.kvTags = kvTags;
        this.livenessProbeRequirements = livenessProbeRequirements;
        this.location = location;
        this.maxConcurrentRequestsPerContainer = maxConcurrentRequestsPerContainer;
        this.maxQueueWaitMs = maxQueueWaitMs;
        this.namespace = namespace;
        this.numReplicas = numReplicas;
        this.properties = properties;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.scoringTimeoutMs = scoringTimeoutMs;
        this.serviceName = serviceName;
        this.trafficPercentile = trafficPercentile;
        this.type = type;
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private AKSServiceArgs() {
        this.aadAuthEnabled = Codegen.empty();
        this.appInsightsEnabled = Codegen.empty();
        this.authEnabled = Codegen.empty();
        this.autoScaler = Codegen.empty();
        this.computeName = Codegen.empty();
        this.computeType = Codegen.empty();
        this.containerResourceRequirements = Codegen.empty();
        this.dataCollection = Codegen.empty();
        this.description = Codegen.empty();
        this.environmentImageRequest = Codegen.empty();
        this.isDefault = Codegen.empty();
        this.keys = Codegen.empty();
        this.kvTags = Codegen.empty();
        this.livenessProbeRequirements = Codegen.empty();
        this.location = Codegen.empty();
        this.maxConcurrentRequestsPerContainer = Codegen.empty();
        this.maxQueueWaitMs = Codegen.empty();
        this.namespace = Codegen.empty();
        this.numReplicas = Codegen.empty();
        this.properties = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.scoringTimeoutMs = Codegen.empty();
        this.serviceName = Codegen.empty();
        this.trafficPercentile = Codegen.empty();
        this.type = Codegen.empty();
        this.workspaceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AKSServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> aadAuthEnabled;
        private @Nullable Output<Boolean> appInsightsEnabled;
        private @Nullable Output<Boolean> authEnabled;
        private @Nullable Output<AKSServiceCreateRequestAutoScalerArgs> autoScaler;
        private @Nullable Output<String> computeName;
        private Output<String> computeType;
        private @Nullable Output<ContainerResourceRequirementsArgs> containerResourceRequirements;
        private @Nullable Output<AKSServiceCreateRequestDataCollectionArgs> dataCollection;
        private @Nullable Output<String> description;
        private @Nullable Output<CreateServiceRequestEnvironmentImageRequestArgs> environmentImageRequest;
        private @Nullable Output<Boolean> isDefault;
        private @Nullable Output<CreateServiceRequestKeysArgs> keys;
        private @Nullable Output<Map<String,String>> kvTags;
        private @Nullable Output<AKSServiceCreateRequestLivenessProbeRequirementsArgs> livenessProbeRequirements;
        private @Nullable Output<String> location;
        private @Nullable Output<Integer> maxConcurrentRequestsPerContainer;
        private @Nullable Output<Integer> maxQueueWaitMs;
        private @Nullable Output<String> namespace;
        private @Nullable Output<Integer> numReplicas;
        private @Nullable Output<Map<String,String>> properties;
        private Output<String> resourceGroupName;
        private @Nullable Output<Integer> scoringTimeoutMs;
        private @Nullable Output<String> serviceName;
        private @Nullable Output<Double> trafficPercentile;
        private @Nullable Output<Either<String,VariantType>> type;
        private Output<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(AKSServiceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadAuthEnabled = defaults.aadAuthEnabled;
    	      this.appInsightsEnabled = defaults.appInsightsEnabled;
    	      this.authEnabled = defaults.authEnabled;
    	      this.autoScaler = defaults.autoScaler;
    	      this.computeName = defaults.computeName;
    	      this.computeType = defaults.computeType;
    	      this.containerResourceRequirements = defaults.containerResourceRequirements;
    	      this.dataCollection = defaults.dataCollection;
    	      this.description = defaults.description;
    	      this.environmentImageRequest = defaults.environmentImageRequest;
    	      this.isDefault = defaults.isDefault;
    	      this.keys = defaults.keys;
    	      this.kvTags = defaults.kvTags;
    	      this.livenessProbeRequirements = defaults.livenessProbeRequirements;
    	      this.location = defaults.location;
    	      this.maxConcurrentRequestsPerContainer = defaults.maxConcurrentRequestsPerContainer;
    	      this.maxQueueWaitMs = defaults.maxQueueWaitMs;
    	      this.namespace = defaults.namespace;
    	      this.numReplicas = defaults.numReplicas;
    	      this.properties = defaults.properties;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.scoringTimeoutMs = defaults.scoringTimeoutMs;
    	      this.serviceName = defaults.serviceName;
    	      this.trafficPercentile = defaults.trafficPercentile;
    	      this.type = defaults.type;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder aadAuthEnabled(@Nullable Output<Boolean> aadAuthEnabled) {
            this.aadAuthEnabled = aadAuthEnabled;
            return this;
        }
        public Builder aadAuthEnabled(@Nullable Boolean aadAuthEnabled) {
            this.aadAuthEnabled = Codegen.ofNullable(aadAuthEnabled);
            return this;
        }
        public Builder appInsightsEnabled(@Nullable Output<Boolean> appInsightsEnabled) {
            this.appInsightsEnabled = appInsightsEnabled;
            return this;
        }
        public Builder appInsightsEnabled(@Nullable Boolean appInsightsEnabled) {
            this.appInsightsEnabled = Codegen.ofNullable(appInsightsEnabled);
            return this;
        }
        public Builder authEnabled(@Nullable Output<Boolean> authEnabled) {
            this.authEnabled = authEnabled;
            return this;
        }
        public Builder authEnabled(@Nullable Boolean authEnabled) {
            this.authEnabled = Codegen.ofNullable(authEnabled);
            return this;
        }
        public Builder autoScaler(@Nullable Output<AKSServiceCreateRequestAutoScalerArgs> autoScaler) {
            this.autoScaler = autoScaler;
            return this;
        }
        public Builder autoScaler(@Nullable AKSServiceCreateRequestAutoScalerArgs autoScaler) {
            this.autoScaler = Codegen.ofNullable(autoScaler);
            return this;
        }
        public Builder computeName(@Nullable Output<String> computeName) {
            this.computeName = computeName;
            return this;
        }
        public Builder computeName(@Nullable String computeName) {
            this.computeName = Codegen.ofNullable(computeName);
            return this;
        }
        public Builder computeType(Output<String> computeType) {
            this.computeType = Objects.requireNonNull(computeType);
            return this;
        }
        public Builder computeType(String computeType) {
            this.computeType = Output.of(Objects.requireNonNull(computeType));
            return this;
        }
        public Builder containerResourceRequirements(@Nullable Output<ContainerResourceRequirementsArgs> containerResourceRequirements) {
            this.containerResourceRequirements = containerResourceRequirements;
            return this;
        }
        public Builder containerResourceRequirements(@Nullable ContainerResourceRequirementsArgs containerResourceRequirements) {
            this.containerResourceRequirements = Codegen.ofNullable(containerResourceRequirements);
            return this;
        }
        public Builder dataCollection(@Nullable Output<AKSServiceCreateRequestDataCollectionArgs> dataCollection) {
            this.dataCollection = dataCollection;
            return this;
        }
        public Builder dataCollection(@Nullable AKSServiceCreateRequestDataCollectionArgs dataCollection) {
            this.dataCollection = Codegen.ofNullable(dataCollection);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder environmentImageRequest(@Nullable Output<CreateServiceRequestEnvironmentImageRequestArgs> environmentImageRequest) {
            this.environmentImageRequest = environmentImageRequest;
            return this;
        }
        public Builder environmentImageRequest(@Nullable CreateServiceRequestEnvironmentImageRequestArgs environmentImageRequest) {
            this.environmentImageRequest = Codegen.ofNullable(environmentImageRequest);
            return this;
        }
        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            this.isDefault = isDefault;
            return this;
        }
        public Builder isDefault(@Nullable Boolean isDefault) {
            this.isDefault = Codegen.ofNullable(isDefault);
            return this;
        }
        public Builder keys(@Nullable Output<CreateServiceRequestKeysArgs> keys) {
            this.keys = keys;
            return this;
        }
        public Builder keys(@Nullable CreateServiceRequestKeysArgs keys) {
            this.keys = Codegen.ofNullable(keys);
            return this;
        }
        public Builder kvTags(@Nullable Output<Map<String,String>> kvTags) {
            this.kvTags = kvTags;
            return this;
        }
        public Builder kvTags(@Nullable Map<String,String> kvTags) {
            this.kvTags = Codegen.ofNullable(kvTags);
            return this;
        }
        public Builder livenessProbeRequirements(@Nullable Output<AKSServiceCreateRequestLivenessProbeRequirementsArgs> livenessProbeRequirements) {
            this.livenessProbeRequirements = livenessProbeRequirements;
            return this;
        }
        public Builder livenessProbeRequirements(@Nullable AKSServiceCreateRequestLivenessProbeRequirementsArgs livenessProbeRequirements) {
            this.livenessProbeRequirements = Codegen.ofNullable(livenessProbeRequirements);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder maxConcurrentRequestsPerContainer(@Nullable Output<Integer> maxConcurrentRequestsPerContainer) {
            this.maxConcurrentRequestsPerContainer = maxConcurrentRequestsPerContainer;
            return this;
        }
        public Builder maxConcurrentRequestsPerContainer(@Nullable Integer maxConcurrentRequestsPerContainer) {
            this.maxConcurrentRequestsPerContainer = Codegen.ofNullable(maxConcurrentRequestsPerContainer);
            return this;
        }
        public Builder maxQueueWaitMs(@Nullable Output<Integer> maxQueueWaitMs) {
            this.maxQueueWaitMs = maxQueueWaitMs;
            return this;
        }
        public Builder maxQueueWaitMs(@Nullable Integer maxQueueWaitMs) {
            this.maxQueueWaitMs = Codegen.ofNullable(maxQueueWaitMs);
            return this;
        }
        public Builder namespace(@Nullable Output<String> namespace) {
            this.namespace = namespace;
            return this;
        }
        public Builder namespace(@Nullable String namespace) {
            this.namespace = Codegen.ofNullable(namespace);
            return this;
        }
        public Builder numReplicas(@Nullable Output<Integer> numReplicas) {
            this.numReplicas = numReplicas;
            return this;
        }
        public Builder numReplicas(@Nullable Integer numReplicas) {
            this.numReplicas = Codegen.ofNullable(numReplicas);
            return this;
        }
        public Builder properties(@Nullable Output<Map<String,String>> properties) {
            this.properties = properties;
            return this;
        }
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = Codegen.ofNullable(properties);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder scoringTimeoutMs(@Nullable Output<Integer> scoringTimeoutMs) {
            this.scoringTimeoutMs = scoringTimeoutMs;
            return this;
        }
        public Builder scoringTimeoutMs(@Nullable Integer scoringTimeoutMs) {
            this.scoringTimeoutMs = Codegen.ofNullable(scoringTimeoutMs);
            return this;
        }
        public Builder serviceName(@Nullable Output<String> serviceName) {
            this.serviceName = serviceName;
            return this;
        }
        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = Codegen.ofNullable(serviceName);
            return this;
        }
        public Builder trafficPercentile(@Nullable Output<Double> trafficPercentile) {
            this.trafficPercentile = trafficPercentile;
            return this;
        }
        public Builder trafficPercentile(@Nullable Double trafficPercentile) {
            this.trafficPercentile = Codegen.ofNullable(trafficPercentile);
            return this;
        }
        public Builder type(@Nullable Output<Either<String,VariantType>> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable Either<String,VariantType> type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }
        public Builder workspaceName(Output<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }
        public Builder workspaceName(String workspaceName) {
            this.workspaceName = Output.of(Objects.requireNonNull(workspaceName));
            return this;
        }        public AKSServiceArgs build() {
            return new AKSServiceArgs(aadAuthEnabled, appInsightsEnabled, authEnabled, autoScaler, computeName, computeType, containerResourceRequirements, dataCollection, description, environmentImageRequest, isDefault, keys, kvTags, livenessProbeRequirements, location, maxConcurrentRequestsPerContainer, maxQueueWaitMs, namespace, numReplicas, properties, resourceGroupName, scoringTimeoutMs, serviceName, trafficPercentile, type, workspaceName);
        }
    }
}
