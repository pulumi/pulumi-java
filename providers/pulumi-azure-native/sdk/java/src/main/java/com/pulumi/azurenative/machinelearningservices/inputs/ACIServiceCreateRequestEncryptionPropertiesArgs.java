// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The encryption properties.
 * 
 */
public final class ACIServiceCreateRequestEncryptionPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ACIServiceCreateRequestEncryptionPropertiesArgs Empty = new ACIServiceCreateRequestEncryptionPropertiesArgs();

    /**
     * Encryption Key name
     * 
     */
    @Import(name="keyName", required=true)
    private Output<String> keyName;

    /**
     * @return Encryption Key name
     * 
     */
    public Output<String> keyName() {
        return this.keyName;
    }

    /**
     * Encryption Key Version
     * 
     */
    @Import(name="keyVersion", required=true)
    private Output<String> keyVersion;

    /**
     * @return Encryption Key Version
     * 
     */
    public Output<String> keyVersion() {
        return this.keyVersion;
    }

    /**
     * vault base Url
     * 
     */
    @Import(name="vaultBaseUrl", required=true)
    private Output<String> vaultBaseUrl;

    /**
     * @return vault base Url
     * 
     */
    public Output<String> vaultBaseUrl() {
        return this.vaultBaseUrl;
    }

    private ACIServiceCreateRequestEncryptionPropertiesArgs() {}

    private ACIServiceCreateRequestEncryptionPropertiesArgs(ACIServiceCreateRequestEncryptionPropertiesArgs $) {
        this.keyName = $.keyName;
        this.keyVersion = $.keyVersion;
        this.vaultBaseUrl = $.vaultBaseUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ACIServiceCreateRequestEncryptionPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ACIServiceCreateRequestEncryptionPropertiesArgs $;

        public Builder() {
            $ = new ACIServiceCreateRequestEncryptionPropertiesArgs();
        }

        public Builder(ACIServiceCreateRequestEncryptionPropertiesArgs defaults) {
            $ = new ACIServiceCreateRequestEncryptionPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyName Encryption Key name
         * 
         * @return builder
         * 
         */
        public Builder keyName(Output<String> keyName) {
            $.keyName = keyName;
            return this;
        }

        /**
         * @param keyName Encryption Key name
         * 
         * @return builder
         * 
         */
        public Builder keyName(String keyName) {
            return keyName(Output.of(keyName));
        }

        /**
         * @param keyVersion Encryption Key Version
         * 
         * @return builder
         * 
         */
        public Builder keyVersion(Output<String> keyVersion) {
            $.keyVersion = keyVersion;
            return this;
        }

        /**
         * @param keyVersion Encryption Key Version
         * 
         * @return builder
         * 
         */
        public Builder keyVersion(String keyVersion) {
            return keyVersion(Output.of(keyVersion));
        }

        /**
         * @param vaultBaseUrl vault base Url
         * 
         * @return builder
         * 
         */
        public Builder vaultBaseUrl(Output<String> vaultBaseUrl) {
            $.vaultBaseUrl = vaultBaseUrl;
            return this;
        }

        /**
         * @param vaultBaseUrl vault base Url
         * 
         * @return builder
         * 
         */
        public Builder vaultBaseUrl(String vaultBaseUrl) {
            return vaultBaseUrl(Output.of(vaultBaseUrl));
        }

        public ACIServiceCreateRequestEncryptionPropertiesArgs build() {
            $.keyName = Objects.requireNonNull($.keyName, "expected parameter 'keyName' to be non-null");
            $.keyVersion = Objects.requireNonNull($.keyVersion, "expected parameter 'keyVersion' to be non-null");
            $.vaultBaseUrl = Objects.requireNonNull($.vaultBaseUrl, "expected parameter 'vaultBaseUrl' to be non-null");
            return $;
        }
    }

}
