// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The details for accessing the encryption keys in Key Vault.
 * 
 */
public final class KeyVaultPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final KeyVaultPropertiesResponse Empty = new KeyVaultPropertiesResponse();

    /**
     * The current key used to encrypt Video Analyzer account, including the key version.
     * 
     */
    @Import(name="currentKeyIdentifier", required=true)
    private String currentKeyIdentifier;

    public String currentKeyIdentifier() {
        return this.currentKeyIdentifier;
    }

    /**
     * The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
     * 
     */
    @Import(name="keyIdentifier", required=true)
    private String keyIdentifier;

    public String keyIdentifier() {
        return this.keyIdentifier;
    }

    private KeyVaultPropertiesResponse() {}

    private KeyVaultPropertiesResponse(KeyVaultPropertiesResponse $) {
        this.currentKeyIdentifier = $.currentKeyIdentifier;
        this.keyIdentifier = $.keyIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyVaultPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVaultPropertiesResponse $;

        public Builder() {
            $ = new KeyVaultPropertiesResponse();
        }

        public Builder(KeyVaultPropertiesResponse defaults) {
            $ = new KeyVaultPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder currentKeyIdentifier(String currentKeyIdentifier) {
            $.currentKeyIdentifier = currentKeyIdentifier;
            return this;
        }

        public Builder keyIdentifier(String keyIdentifier) {
            $.keyIdentifier = keyIdentifier;
            return this;
        }

        public KeyVaultPropertiesResponse build() {
            $.currentKeyIdentifier = Objects.requireNonNull($.currentKeyIdentifier, "expected parameter 'currentKeyIdentifier' to be non-null");
            $.keyIdentifier = Objects.requireNonNull($.keyIdentifier, "expected parameter 'keyIdentifier' to be non-null");
            return $;
        }
    }

}
