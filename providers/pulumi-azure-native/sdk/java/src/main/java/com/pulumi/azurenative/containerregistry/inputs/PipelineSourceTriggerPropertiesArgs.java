// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.azurenative.containerregistry.enums.TriggerStatus;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class PipelineSourceTriggerPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineSourceTriggerPropertiesArgs Empty = new PipelineSourceTriggerPropertiesArgs();

    /**
     * The current status of the source trigger.
     * 
     */
    @Import(name="status", required=true)
    private Output<Either<String,TriggerStatus>> status;

    /**
     * @return The current status of the source trigger.
     * 
     */
    public Output<Either<String,TriggerStatus>> status() {
        return this.status;
    }

    private PipelineSourceTriggerPropertiesArgs() {}

    private PipelineSourceTriggerPropertiesArgs(PipelineSourceTriggerPropertiesArgs $) {
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineSourceTriggerPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineSourceTriggerPropertiesArgs $;

        public Builder() {
            $ = new PipelineSourceTriggerPropertiesArgs();
        }

        public Builder(PipelineSourceTriggerPropertiesArgs defaults) {
            $ = new PipelineSourceTriggerPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param status The current status of the source trigger.
         * 
         * @return builder
         * 
         */
        public Builder status(Output<Either<String,TriggerStatus>> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current status of the source trigger.
         * 
         * @return builder
         * 
         */
        public Builder status(Either<String,TriggerStatus> status) {
            return status(Output.of(status));
        }

        /**
         * @param status The current status of the source trigger.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Either.ofLeft(status));
        }

        /**
         * @param status The current status of the source trigger.
         * 
         * @return builder
         * 
         */
        public Builder status(TriggerStatus status) {
            return status(Either.ofRight(status));
        }

        public PipelineSourceTriggerPropertiesArgs build() {
            $.status = Codegen.stringProp("status").left(TriggerStatus.class).output().arg($.status).def("Enabled").require();
            return $;
        }
    }

}
