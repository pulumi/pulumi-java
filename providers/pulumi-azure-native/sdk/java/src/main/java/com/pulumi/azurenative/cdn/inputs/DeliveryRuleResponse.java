// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.inputs.DeliveryRuleCacheExpirationActionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleCacheKeyQueryStringActionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleCookiesConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleHttpVersionConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleIsDeviceConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRulePostArgsConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleQueryStringConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleRemoteAddressConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestBodyConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestHeaderActionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestHeaderConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestMethodConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestSchemeConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestUriConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleResponseHeaderActionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleUrlFileExtensionConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleUrlFileNameConditionResponse;
import com.pulumi.azurenative.cdn.inputs.DeliveryRuleUrlPathConditionResponse;
import com.pulumi.azurenative.cdn.inputs.OriginGroupOverrideActionResponse;
import com.pulumi.azurenative.cdn.inputs.UrlRedirectActionResponse;
import com.pulumi.azurenative.cdn.inputs.UrlRewriteActionResponse;
import com.pulumi.azurenative.cdn.inputs.UrlSigningActionResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A rule that specifies a set of actions and conditions
 * 
 */
public final class DeliveryRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final DeliveryRuleResponse Empty = new DeliveryRuleResponse();

    /**
     * A list of actions that are executed when all the conditions of a rule are satisfied.
     * 
     */
    @Import(name="actions", required=true)
      private final List<Object> actions;

    public List<Object> actions() {
        return this.actions;
    }

    /**
     * A list of conditions that must be matched for the actions to be executed
     * 
     */
    @Import(name="conditions")
      private final @Nullable List<Object> conditions;

    public List<Object> conditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }

    /**
     * Name of the rule
     * 
     */
    @Import(name="name")
      private final @Nullable String name;

    public Optional<String> name() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    /**
     * The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
     * 
     */
    @Import(name="order", required=true)
      private final Integer order;

    public Integer order() {
        return this.order;
    }

    public DeliveryRuleResponse(
        List<Object> actions,
        @Nullable List<Object> conditions,
        @Nullable String name,
        Integer order) {
        this.actions = Objects.requireNonNull(actions, "expected parameter 'actions' to be non-null");
        this.conditions = conditions;
        this.name = name;
        this.order = Objects.requireNonNull(order, "expected parameter 'order' to be non-null");
    }

    private DeliveryRuleResponse() {
        this.actions = List.of();
        this.conditions = List.of();
        this.name = null;
        this.order = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<Object> actions;
        private @Nullable List<Object> conditions;
        private @Nullable String name;
        private Integer order;

        public Builder() {
    	      // Empty
        }

        public Builder(DeliveryRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.conditions = defaults.conditions;
    	      this.name = defaults.name;
    	      this.order = defaults.order;
        }

        public Builder actions(List<Object> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }
        public Builder actions(Object... actions) {
            return actions(List.of(actions));
        }
        public Builder conditions(@Nullable List<Object> conditions) {
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(Object... conditions) {
            return conditions(List.of(conditions));
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder order(Integer order) {
            this.order = Objects.requireNonNull(order);
            return this;
        }        public DeliveryRuleResponse build() {
            return new DeliveryRuleResponse(actions, conditions, name, order);
        }
    }
}
