// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SqlStorageUpdateSettingsResponse {
    /**
     * @return Disk configuration to apply to SQL Server.
     * 
     */
    private final @Nullable String diskConfigurationType;
    /**
     * @return Virtual machine disk count.
     * 
     */
    private final @Nullable Integer diskCount;
    /**
     * @return Device id of the first disk to be updated.
     * 
     */
    private final @Nullable Integer startingDeviceId;

    @CustomType.Constructor
    private SqlStorageUpdateSettingsResponse(
        @CustomType.Parameter("diskConfigurationType") @Nullable String diskConfigurationType,
        @CustomType.Parameter("diskCount") @Nullable Integer diskCount,
        @CustomType.Parameter("startingDeviceId") @Nullable Integer startingDeviceId) {
        this.diskConfigurationType = diskConfigurationType;
        this.diskCount = diskCount;
        this.startingDeviceId = startingDeviceId;
    }

    /**
     * @return Disk configuration to apply to SQL Server.
     * 
     */
    public Optional<String> diskConfigurationType() {
        return Optional.ofNullable(this.diskConfigurationType);
    }
    /**
     * @return Virtual machine disk count.
     * 
     */
    public Optional<Integer> diskCount() {
        return Optional.ofNullable(this.diskCount);
    }
    /**
     * @return Device id of the first disk to be updated.
     * 
     */
    public Optional<Integer> startingDeviceId() {
        return Optional.ofNullable(this.startingDeviceId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlStorageUpdateSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String diskConfigurationType;
        private @Nullable Integer diskCount;
        private @Nullable Integer startingDeviceId;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlStorageUpdateSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskConfigurationType = defaults.diskConfigurationType;
    	      this.diskCount = defaults.diskCount;
    	      this.startingDeviceId = defaults.startingDeviceId;
        }

        public Builder diskConfigurationType(@Nullable String diskConfigurationType) {
            this.diskConfigurationType = diskConfigurationType;
            return this;
        }
        public Builder diskCount(@Nullable Integer diskCount) {
            this.diskCount = diskCount;
            return this;
        }
        public Builder startingDeviceId(@Nullable Integer startingDeviceId) {
            this.startingDeviceId = startingDeviceId;
            return this;
        }        public SqlStorageUpdateSettingsResponse build() {
            return new SqlStorageUpdateSettingsResponse(diskConfigurationType, diskCount, startingDeviceId);
        }
    }
}
