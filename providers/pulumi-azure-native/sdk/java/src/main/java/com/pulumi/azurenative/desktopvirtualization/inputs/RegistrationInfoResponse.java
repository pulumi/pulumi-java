// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a RegistrationInfo definition.
 * 
 */
public final class RegistrationInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final RegistrationInfoResponse Empty = new RegistrationInfoResponse();

    /**
     * Expiration time of registration token.
     * 
     */
    @Import(name="expirationTime")
    private @Nullable String expirationTime;

    /**
     * @return Expiration time of registration token.
     * 
     */
    public Optional<String> expirationTime() {
        return Optional.ofNullable(this.expirationTime);
    }

    /**
     * The type of resetting the token.
     * 
     */
    @Import(name="registrationTokenOperation")
    private @Nullable String registrationTokenOperation;

    /**
     * @return The type of resetting the token.
     * 
     */
    public Optional<String> registrationTokenOperation() {
        return Optional.ofNullable(this.registrationTokenOperation);
    }

    /**
     * The registration token base64 encoded string.
     * 
     */
    @Import(name="token")
    private @Nullable String token;

    /**
     * @return The registration token base64 encoded string.
     * 
     */
    public Optional<String> token() {
        return Optional.ofNullable(this.token);
    }

    private RegistrationInfoResponse() {}

    private RegistrationInfoResponse(RegistrationInfoResponse $) {
        this.expirationTime = $.expirationTime;
        this.registrationTokenOperation = $.registrationTokenOperation;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistrationInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistrationInfoResponse $;

        public Builder() {
            $ = new RegistrationInfoResponse();
        }

        public Builder(RegistrationInfoResponse defaults) {
            $ = new RegistrationInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param expirationTime Expiration time of registration token.
         * 
         * @return builder
         * 
         */
        public Builder expirationTime(@Nullable String expirationTime) {
            $.expirationTime = expirationTime;
            return this;
        }

        /**
         * @param registrationTokenOperation The type of resetting the token.
         * 
         * @return builder
         * 
         */
        public Builder registrationTokenOperation(@Nullable String registrationTokenOperation) {
            $.registrationTokenOperation = registrationTokenOperation;
            return this;
        }

        /**
         * @param token The registration token base64 encoded string.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable String token) {
            $.token = token;
            return this;
        }

        public RegistrationInfoResponse build() {
            return $;
        }
    }

}
