// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.outputs;

import com.pulumi.azurenative.migrate.outputs.DatabasesSolutionSummaryResponse;
import com.pulumi.azurenative.migrate.outputs.ServersSolutionSummaryResponse;
import com.pulumi.azurenative.migrate.outputs.SolutionDetailsResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SolutionPropertiesResponse {
    /**
     * @return Gets or sets the cleanup state of the solution.
     * 
     */
    private final @Nullable String cleanupState;
    /**
     * @return Gets or sets the details of the solution.
     * 
     */
    private final @Nullable SolutionDetailsResponse details;
    /**
     * @return Gets or sets the goal of the solution.
     * 
     */
    private final @Nullable String goal;
    /**
     * @return Gets or sets the purpose of the solution.
     * 
     */
    private final @Nullable String purpose;
    /**
     * @return Gets or sets the current status of the solution.
     * 
     */
    private final @Nullable String status;
    /**
     * @return Gets or sets the summary of the solution.
     * 
     */
    private final @Nullable Either<DatabasesSolutionSummaryResponse,ServersSolutionSummaryResponse> summary;
    /**
     * @return Gets or sets the tool being used in the solution.
     * 
     */
    private final @Nullable String tool;

    @CustomType.Constructor
    private SolutionPropertiesResponse(
        @CustomType.Parameter("cleanupState") @Nullable String cleanupState,
        @CustomType.Parameter("details") @Nullable SolutionDetailsResponse details,
        @CustomType.Parameter("goal") @Nullable String goal,
        @CustomType.Parameter("purpose") @Nullable String purpose,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("summary") @Nullable Either<DatabasesSolutionSummaryResponse,ServersSolutionSummaryResponse> summary,
        @CustomType.Parameter("tool") @Nullable String tool) {
        this.cleanupState = cleanupState;
        this.details = details;
        this.goal = goal;
        this.purpose = purpose;
        this.status = status;
        this.summary = summary;
        this.tool = tool;
    }

    /**
     * @return Gets or sets the cleanup state of the solution.
     * 
     */
    public Optional<String> cleanupState() {
        return Optional.ofNullable(this.cleanupState);
    }
    /**
     * @return Gets or sets the details of the solution.
     * 
     */
    public Optional<SolutionDetailsResponse> details() {
        return Optional.ofNullable(this.details);
    }
    /**
     * @return Gets or sets the goal of the solution.
     * 
     */
    public Optional<String> goal() {
        return Optional.ofNullable(this.goal);
    }
    /**
     * @return Gets or sets the purpose of the solution.
     * 
     */
    public Optional<String> purpose() {
        return Optional.ofNullable(this.purpose);
    }
    /**
     * @return Gets or sets the current status of the solution.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Gets or sets the summary of the solution.
     * 
     */
    public Optional<Either<DatabasesSolutionSummaryResponse,ServersSolutionSummaryResponse>> summary() {
        return Optional.ofNullable(this.summary);
    }
    /**
     * @return Gets or sets the tool being used in the solution.
     * 
     */
    public Optional<String> tool() {
        return Optional.ofNullable(this.tool);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SolutionPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cleanupState;
        private @Nullable SolutionDetailsResponse details;
        private @Nullable String goal;
        private @Nullable String purpose;
        private @Nullable String status;
        private @Nullable Either<DatabasesSolutionSummaryResponse,ServersSolutionSummaryResponse> summary;
        private @Nullable String tool;

        public Builder() {
    	      // Empty
        }

        public Builder(SolutionPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cleanupState = defaults.cleanupState;
    	      this.details = defaults.details;
    	      this.goal = defaults.goal;
    	      this.purpose = defaults.purpose;
    	      this.status = defaults.status;
    	      this.summary = defaults.summary;
    	      this.tool = defaults.tool;
        }

        public Builder cleanupState(@Nullable String cleanupState) {
            this.cleanupState = cleanupState;
            return this;
        }
        public Builder details(@Nullable SolutionDetailsResponse details) {
            this.details = details;
            return this;
        }
        public Builder goal(@Nullable String goal) {
            this.goal = goal;
            return this;
        }
        public Builder purpose(@Nullable String purpose) {
            this.purpose = purpose;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder summary(@Nullable Either<DatabasesSolutionSummaryResponse,ServersSolutionSummaryResponse> summary) {
            this.summary = summary;
            return this;
        }
        public Builder tool(@Nullable String tool) {
            this.tool = tool;
            return this;
        }        public SolutionPropertiesResponse build() {
            return new SolutionPropertiesResponse(cleanupState, details, goal, purpose, status, summary, tool);
        }
    }
}
