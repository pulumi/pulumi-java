// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.azurenative.datamigration.inputs.QueryExecutionResultResponse;
import com.pulumi.azurenative.datamigration.inputs.ValidationErrorResponse;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * Results for query analysis comparison between the source and target
 * 
 */
public final class QueryAnalysisValidationResultResponse extends com.pulumi.resources.InvokeArgs {

    public static final QueryAnalysisValidationResultResponse Empty = new QueryAnalysisValidationResultResponse();

    /**
     * List of queries executed and it&#39;s execution results in source and target
     * 
     */
    @Import(name="queryResults", required=true)
    private QueryExecutionResultResponse queryResults;

    /**
     * @return List of queries executed and it&#39;s execution results in source and target
     * 
     */
    public QueryExecutionResultResponse queryResults() {
        return this.queryResults;
    }

    /**
     * Errors that are part of the execution
     * 
     */
    @Import(name="validationErrors", required=true)
    private ValidationErrorResponse validationErrors;

    /**
     * @return Errors that are part of the execution
     * 
     */
    public ValidationErrorResponse validationErrors() {
        return this.validationErrors;
    }

    private QueryAnalysisValidationResultResponse() {}

    private QueryAnalysisValidationResultResponse(QueryAnalysisValidationResultResponse $) {
        this.queryResults = $.queryResults;
        this.validationErrors = $.validationErrors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueryAnalysisValidationResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueryAnalysisValidationResultResponse $;

        public Builder() {
            $ = new QueryAnalysisValidationResultResponse();
        }

        public Builder(QueryAnalysisValidationResultResponse defaults) {
            $ = new QueryAnalysisValidationResultResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param queryResults List of queries executed and it&#39;s execution results in source and target
         * 
         * @return builder
         * 
         */
        public Builder queryResults(QueryExecutionResultResponse queryResults) {
            $.queryResults = queryResults;
            return this;
        }

        /**
         * @param validationErrors Errors that are part of the execution
         * 
         * @return builder
         * 
         */
        public Builder validationErrors(ValidationErrorResponse validationErrors) {
            $.validationErrors = validationErrors;
            return this;
        }

        public QueryAnalysisValidationResultResponse build() {
            $.queryResults = Objects.requireNonNull($.queryResults, "expected parameter 'queryResults' to be non-null");
            $.validationErrors = Objects.requireNonNull($.validationErrors, "expected parameter 'validationErrors' to be non-null");
            return $;
        }
    }

}
