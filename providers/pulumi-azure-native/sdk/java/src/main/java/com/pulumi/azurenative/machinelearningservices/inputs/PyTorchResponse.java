// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * PyTorch distribution configuration.
 * 
 */
public final class PyTorchResponse extends com.pulumi.resources.InvokeArgs {

    public static final PyTorchResponse Empty = new PyTorchResponse();

    /**
     * Enum to determine the job distribution type.
     * Expected value is &#39;PyTorch&#39;.
     * 
     */
    @Import(name="distributionType", required=true)
    private String distributionType;

    /**
     * @return Enum to determine the job distribution type.
     * Expected value is &#39;PyTorch&#39;.
     * 
     */
    public String distributionType() {
        return this.distributionType;
    }

    /**
     * Total process count for the distributed job.
     * 
     */
    @Import(name="processCount")
    private @Nullable Integer processCount;

    /**
     * @return Total process count for the distributed job.
     * 
     */
    public Optional<Integer> processCount() {
        return Optional.ofNullable(this.processCount);
    }

    private PyTorchResponse() {}

    private PyTorchResponse(PyTorchResponse $) {
        this.distributionType = $.distributionType;
        this.processCount = $.processCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PyTorchResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PyTorchResponse $;

        public Builder() {
            $ = new PyTorchResponse();
        }

        public Builder(PyTorchResponse defaults) {
            $ = new PyTorchResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param distributionType Enum to determine the job distribution type.
         * Expected value is &#39;PyTorch&#39;.
         * 
         * @return builder
         * 
         */
        public Builder distributionType(String distributionType) {
            $.distributionType = distributionType;
            return this;
        }

        /**
         * @param processCount Total process count for the distributed job.
         * 
         * @return builder
         * 
         */
        public Builder processCount(@Nullable Integer processCount) {
            $.processCount = processCount;
            return this;
        }

        public PyTorchResponse build() {
            $.distributionType = Codegen.stringProp("distributionType").arg($.distributionType).require();
            return $;
        }
    }

}
