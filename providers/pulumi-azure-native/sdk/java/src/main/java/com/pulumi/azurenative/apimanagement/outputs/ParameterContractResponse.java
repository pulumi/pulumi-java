// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ParameterContractResponse {
    /**
     * @return Default parameter value.
     * 
     */
    private final @Nullable String defaultValue;
    /**
     * @return Parameter description.
     * 
     */
    private final @Nullable String description;
    /**
     * @return Parameter name.
     * 
     */
    private final String name;
    /**
     * @return Specifies whether parameter is required or not.
     * 
     */
    private final @Nullable Boolean required;
    /**
     * @return Parameter type.
     * 
     */
    private final String type;
    /**
     * @return Parameter values.
     * 
     */
    private final @Nullable List<String> values;

    @CustomType.Constructor
    private ParameterContractResponse(
        @CustomType.Parameter("defaultValue") @Nullable String defaultValue,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("required") @Nullable Boolean required,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("values") @Nullable List<String> values) {
        this.defaultValue = defaultValue;
        this.description = description;
        this.name = name;
        this.required = required;
        this.type = type;
        this.values = values;
    }

    /**
     * @return Default parameter value.
     * 
     */
    public Optional<String> defaultValue() {
        return Optional.ofNullable(this.defaultValue);
    }
    /**
     * @return Parameter description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Parameter name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Specifies whether parameter is required or not.
     * 
     */
    public Optional<Boolean> required() {
        return Optional.ofNullable(this.required);
    }
    /**
     * @return Parameter type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Parameter values.
     * 
     */
    public List<String> values() {
        return this.values == null ? List.of() : this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ParameterContractResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String defaultValue;
        private @Nullable String description;
        private String name;
        private @Nullable Boolean required;
        private String type;
        private @Nullable List<String> values;

        public Builder() {
    	      // Empty
        }

        public Builder(ParameterContractResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultValue = defaults.defaultValue;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.required = defaults.required;
    	      this.type = defaults.type;
    	      this.values = defaults.values;
        }

        public Builder defaultValue(@Nullable String defaultValue) {
            this.defaultValue = defaultValue;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder required(@Nullable Boolean required) {
            this.required = required;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder values(@Nullable List<String> values) {
            this.values = values;
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }        public ParameterContractResponse build() {
            return new ParameterContractResponse(defaultValue, description, name, required, type, values);
        }
    }
}
