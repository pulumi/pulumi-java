// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.portal;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TenantConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TenantConfigurationArgs Empty = new TenantConfigurationArgs();

    /**
     * The configuration name. Value must be 'default'
     * 
     */
    @Import(name="configurationName")
      private final @Nullable Output<String> configurationName;

    public Output<String> configurationName() {
        return this.configurationName == null ? Codegen.empty() : this.configurationName;
    }

    /**
     * When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration will be prohibited.
     * 
     */
    @Import(name="enforcePrivateMarkdownStorage")
      private final @Nullable Output<Boolean> enforcePrivateMarkdownStorage;

    public Output<Boolean> enforcePrivateMarkdownStorage() {
        return this.enforcePrivateMarkdownStorage == null ? Codegen.empty() : this.enforcePrivateMarkdownStorage;
    }

    public TenantConfigurationArgs(
        @Nullable Output<String> configurationName,
        @Nullable Output<Boolean> enforcePrivateMarkdownStorage) {
        this.configurationName = configurationName;
        this.enforcePrivateMarkdownStorage = enforcePrivateMarkdownStorage;
    }

    private TenantConfigurationArgs() {
        this.configurationName = Codegen.empty();
        this.enforcePrivateMarkdownStorage = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TenantConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> configurationName;
        private @Nullable Output<Boolean> enforcePrivateMarkdownStorage;

        public Builder() {
    	      // Empty
        }

        public Builder(TenantConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationName = defaults.configurationName;
    	      this.enforcePrivateMarkdownStorage = defaults.enforcePrivateMarkdownStorage;
        }

        public Builder configurationName(@Nullable Output<String> configurationName) {
            this.configurationName = configurationName;
            return this;
        }
        public Builder configurationName(@Nullable String configurationName) {
            this.configurationName = Codegen.ofNullable(configurationName);
            return this;
        }
        public Builder enforcePrivateMarkdownStorage(@Nullable Output<Boolean> enforcePrivateMarkdownStorage) {
            this.enforcePrivateMarkdownStorage = enforcePrivateMarkdownStorage;
            return this;
        }
        public Builder enforcePrivateMarkdownStorage(@Nullable Boolean enforcePrivateMarkdownStorage) {
            this.enforcePrivateMarkdownStorage = Codegen.ofNullable(enforcePrivateMarkdownStorage);
            return this;
        }        public TenantConfigurationArgs build() {
            return new TenantConfigurationArgs(configurationName, enforcePrivateMarkdownStorage);
        }
    }
}
