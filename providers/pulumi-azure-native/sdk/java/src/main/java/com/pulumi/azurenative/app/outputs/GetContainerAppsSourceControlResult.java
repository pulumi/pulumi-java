// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app.outputs;

import com.pulumi.azurenative.app.outputs.GithubActionConfigurationResponse;
import com.pulumi.azurenative.app.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetContainerAppsSourceControlResult {
    /**
     * @return The branch which will trigger the auto deployment
     * 
     */
    private final @Nullable String branch;
    /**
     * @return Container App Revision Template with all possible settings and the
     * defaults if user did not provide them. The defaults are populated
     * as they were at the creation time
     * 
     */
    private final @Nullable GithubActionConfigurationResponse githubActionConfiguration;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * @return The name of the resource
     * 
     */
    private final String name;
    /**
     * @return Current provisioning State of the operation
     * 
     */
    private final String operationState;
    /**
     * @return The repo url which will be integrated to ContainerApp.
     * 
     */
    private final @Nullable String repoUrl;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetContainerAppsSourceControlResult(
        @CustomType.Parameter("branch") @Nullable String branch,
        @CustomType.Parameter("githubActionConfiguration") @Nullable GithubActionConfigurationResponse githubActionConfiguration,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("operationState") String operationState,
        @CustomType.Parameter("repoUrl") @Nullable String repoUrl,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("type") String type) {
        this.branch = branch;
        this.githubActionConfiguration = githubActionConfiguration;
        this.id = id;
        this.name = name;
        this.operationState = operationState;
        this.repoUrl = repoUrl;
        this.systemData = systemData;
        this.type = type;
    }

    /**
     * @return The branch which will trigger the auto deployment
     * 
     */
    public Optional<String> branch() {
        return Optional.ofNullable(this.branch);
    }
    /**
     * @return Container App Revision Template with all possible settings and the
     * defaults if user did not provide them. The defaults are populated
     * as they were at the creation time
     * 
     */
    public Optional<GithubActionConfigurationResponse> githubActionConfiguration() {
        return Optional.ofNullable(this.githubActionConfiguration);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Current provisioning State of the operation
     * 
     */
    public String operationState() {
        return this.operationState;
    }
    /**
     * @return The repo url which will be integrated to ContainerApp.
     * 
     */
    public Optional<String> repoUrl() {
        return Optional.ofNullable(this.repoUrl);
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerAppsSourceControlResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String branch;
        private @Nullable GithubActionConfigurationResponse githubActionConfiguration;
        private String id;
        private String name;
        private String operationState;
        private @Nullable String repoUrl;
        private SystemDataResponse systemData;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetContainerAppsSourceControlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.githubActionConfiguration = defaults.githubActionConfiguration;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.operationState = defaults.operationState;
    	      this.repoUrl = defaults.repoUrl;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        public Builder branch(@Nullable String branch) {
            this.branch = branch;
            return this;
        }
        public Builder githubActionConfiguration(@Nullable GithubActionConfigurationResponse githubActionConfiguration) {
            this.githubActionConfiguration = githubActionConfiguration;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder operationState(String operationState) {
            this.operationState = Objects.requireNonNull(operationState);
            return this;
        }
        public Builder repoUrl(@Nullable String repoUrl) {
            this.repoUrl = repoUrl;
            return this;
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetContainerAppsSourceControlResult build() {
            return new GetContainerAppsSourceControlResult(branch, githubActionConfiguration, id, name, operationState, repoUrl, systemData, type);
        }
    }
}
