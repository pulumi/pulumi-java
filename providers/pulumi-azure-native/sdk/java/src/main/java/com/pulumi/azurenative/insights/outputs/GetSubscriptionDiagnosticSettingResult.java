// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.outputs;

import com.pulumi.azurenative.insights.outputs.SubscriptionLogSettingsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubscriptionDiagnosticSettingResult {
    /**
     * @return The resource Id for the event hub authorization rule.
     * 
     */
    private final @Nullable String eventHubAuthorizationRuleId;
    /**
     * @return The name of the event hub. If none is specified, the default event hub will be selected.
     * 
     */
    private final @Nullable String eventHubName;
    /**
     * @return Azure resource Id
     * 
     */
    private final String id;
    /**
     * @return Location of the resource
     * 
     */
    private final @Nullable String location;
    /**
     * @return The list of logs settings.
     * 
     */
    private final @Nullable List<SubscriptionLogSettingsResponse> logs;
    /**
     * @return Azure resource name
     * 
     */
    private final String name;
    /**
     * @return The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
     * 
     */
    private final @Nullable String serviceBusRuleId;
    /**
     * @return The resource ID of the storage account to which you would like to send Diagnostic Logs.
     * 
     */
    private final @Nullable String storageAccountId;
    /**
     * @return Azure resource type
     * 
     */
    private final String type;
    /**
     * @return The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
     * 
     */
    private final @Nullable String workspaceId;

    @CustomType.Constructor
    private GetSubscriptionDiagnosticSettingResult(
        @CustomType.Parameter("eventHubAuthorizationRuleId") @Nullable String eventHubAuthorizationRuleId,
        @CustomType.Parameter("eventHubName") @Nullable String eventHubName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("logs") @Nullable List<SubscriptionLogSettingsResponse> logs,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("serviceBusRuleId") @Nullable String serviceBusRuleId,
        @CustomType.Parameter("storageAccountId") @Nullable String storageAccountId,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("workspaceId") @Nullable String workspaceId) {
        this.eventHubAuthorizationRuleId = eventHubAuthorizationRuleId;
        this.eventHubName = eventHubName;
        this.id = id;
        this.location = location;
        this.logs = logs;
        this.name = name;
        this.serviceBusRuleId = serviceBusRuleId;
        this.storageAccountId = storageAccountId;
        this.type = type;
        this.workspaceId = workspaceId;
    }

    /**
     * @return The resource Id for the event hub authorization rule.
     * 
     */
    public Optional<String> eventHubAuthorizationRuleId() {
        return Optional.ofNullable(this.eventHubAuthorizationRuleId);
    }
    /**
     * @return The name of the event hub. If none is specified, the default event hub will be selected.
     * 
     */
    public Optional<String> eventHubName() {
        return Optional.ofNullable(this.eventHubName);
    }
    /**
     * @return Azure resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Location of the resource
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The list of logs settings.
     * 
     */
    public List<SubscriptionLogSettingsResponse> logs() {
        return this.logs == null ? List.of() : this.logs;
    }
    /**
     * @return Azure resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
     * 
     */
    public Optional<String> serviceBusRuleId() {
        return Optional.ofNullable(this.serviceBusRuleId);
    }
    /**
     * @return The resource ID of the storage account to which you would like to send Diagnostic Logs.
     * 
     */
    public Optional<String> storageAccountId() {
        return Optional.ofNullable(this.storageAccountId);
    }
    /**
     * @return Azure resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
     * 
     */
    public Optional<String> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionDiagnosticSettingResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String eventHubAuthorizationRuleId;
        private @Nullable String eventHubName;
        private String id;
        private @Nullable String location;
        private @Nullable List<SubscriptionLogSettingsResponse> logs;
        private String name;
        private @Nullable String serviceBusRuleId;
        private @Nullable String storageAccountId;
        private String type;
        private @Nullable String workspaceId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSubscriptionDiagnosticSettingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventHubAuthorizationRuleId = defaults.eventHubAuthorizationRuleId;
    	      this.eventHubName = defaults.eventHubName;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.logs = defaults.logs;
    	      this.name = defaults.name;
    	      this.serviceBusRuleId = defaults.serviceBusRuleId;
    	      this.storageAccountId = defaults.storageAccountId;
    	      this.type = defaults.type;
    	      this.workspaceId = defaults.workspaceId;
        }

        public Builder eventHubAuthorizationRuleId(@Nullable String eventHubAuthorizationRuleId) {
            this.eventHubAuthorizationRuleId = eventHubAuthorizationRuleId;
            return this;
        }
        public Builder eventHubName(@Nullable String eventHubName) {
            this.eventHubName = eventHubName;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder logs(@Nullable List<SubscriptionLogSettingsResponse> logs) {
            this.logs = logs;
            return this;
        }
        public Builder logs(SubscriptionLogSettingsResponse... logs) {
            return logs(List.of(logs));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder serviceBusRuleId(@Nullable String serviceBusRuleId) {
            this.serviceBusRuleId = serviceBusRuleId;
            return this;
        }
        public Builder storageAccountId(@Nullable String storageAccountId) {
            this.storageAccountId = storageAccountId;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder workspaceId(@Nullable String workspaceId) {
            this.workspaceId = workspaceId;
            return this;
        }        public GetSubscriptionDiagnosticSettingResult build() {
            return new GetSubscriptionDiagnosticSettingResult(eventHubAuthorizationRuleId, eventHubName, id, location, logs, name, serviceBusRuleId, storageAccountId, type, workspaceId);
        }
    }
}
