// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagecache.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Cache network settings.
 * 
 */
public final class CacheNetworkSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CacheNetworkSettingsArgs Empty = new CacheNetworkSettingsArgs();

    /**
     * DNS search domain
     * 
     */
    @Import(name="dnsSearchDomain")
      private final @Nullable Output<String> dnsSearchDomain;

    public Output<String> dnsSearchDomain() {
        return this.dnsSearchDomain == null ? Codegen.empty() : this.dnsSearchDomain;
    }

    /**
     * DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.
     * 
     */
    @Import(name="dnsServers")
      private final @Nullable Output<List<String>> dnsServers;

    public Output<List<String>> dnsServers() {
        return this.dnsServers == null ? Codegen.empty() : this.dnsServers;
    }

    /**
     * The IPv4 maximum transmission unit configured for the subnet.
     * 
     */
    @Import(name="mtu")
      private final @Nullable Output<Integer> mtu;

    public Output<Integer> mtu() {
        return this.mtu == null ? Codegen.empty() : this.mtu;
    }

    /**
     * NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.
     * 
     */
    @Import(name="ntpServer")
      private final @Nullable Output<String> ntpServer;

    public Output<String> ntpServer() {
        return this.ntpServer == null ? Codegen.empty() : this.ntpServer;
    }

    public CacheNetworkSettingsArgs(
        @Nullable Output<String> dnsSearchDomain,
        @Nullable Output<List<String>> dnsServers,
        @Nullable Output<Integer> mtu,
        @Nullable Output<String> ntpServer) {
        this.dnsSearchDomain = dnsSearchDomain;
        this.dnsServers = dnsServers;
        this.mtu = mtu == null ? Codegen.ofNullable(1500) : mtu;
        this.ntpServer = ntpServer == null ? Codegen.ofNullable("time.windows.com") : ntpServer;
    }

    private CacheNetworkSettingsArgs() {
        this.dnsSearchDomain = Codegen.empty();
        this.dnsServers = Codegen.empty();
        this.mtu = Codegen.empty();
        this.ntpServer = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CacheNetworkSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> dnsSearchDomain;
        private @Nullable Output<List<String>> dnsServers;
        private @Nullable Output<Integer> mtu;
        private @Nullable Output<String> ntpServer;

        public Builder() {
    	      // Empty
        }

        public Builder(CacheNetworkSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsSearchDomain = defaults.dnsSearchDomain;
    	      this.dnsServers = defaults.dnsServers;
    	      this.mtu = defaults.mtu;
    	      this.ntpServer = defaults.ntpServer;
        }

        public Builder dnsSearchDomain(@Nullable Output<String> dnsSearchDomain) {
            this.dnsSearchDomain = dnsSearchDomain;
            return this;
        }
        public Builder dnsSearchDomain(@Nullable String dnsSearchDomain) {
            this.dnsSearchDomain = Codegen.ofNullable(dnsSearchDomain);
            return this;
        }
        public Builder dnsServers(@Nullable Output<List<String>> dnsServers) {
            this.dnsServers = dnsServers;
            return this;
        }
        public Builder dnsServers(@Nullable List<String> dnsServers) {
            this.dnsServers = Codegen.ofNullable(dnsServers);
            return this;
        }
        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }
        public Builder mtu(@Nullable Output<Integer> mtu) {
            this.mtu = mtu;
            return this;
        }
        public Builder mtu(@Nullable Integer mtu) {
            this.mtu = Codegen.ofNullable(mtu);
            return this;
        }
        public Builder ntpServer(@Nullable Output<String> ntpServer) {
            this.ntpServer = ntpServer;
            return this;
        }
        public Builder ntpServer(@Nullable String ntpServer) {
            this.ntpServer = Codegen.ofNullable(ntpServer);
            return this;
        }        public CacheNetworkSettingsArgs build() {
            return new CacheNetworkSettingsArgs(dnsSearchDomain, dnsServers, mtu, ntpServer);
        }
    }
}
