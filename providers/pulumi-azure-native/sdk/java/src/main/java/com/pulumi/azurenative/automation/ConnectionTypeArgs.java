// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation;

import com.pulumi.azurenative.automation.inputs.FieldDefinitionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionTypeArgs Empty = new ConnectionTypeArgs();

    /**
     * The name of the automation account.
     * 
     */
    @Import(name="automationAccountName", required=true)
    private Output<String> automationAccountName;

    /**
     * @return The name of the automation account.
     * 
     */
    public Output<String> automationAccountName() {
        return this.automationAccountName;
    }

    /**
     * The parameters supplied to the create or update connection type operation.
     * 
     */
    @Import(name="connectionTypeName")
    private @Nullable Output<String> connectionTypeName;

    /**
     * @return The parameters supplied to the create or update connection type operation.
     * 
     */
    public Optional<Output<String>> connectionTypeName() {
        return Optional.ofNullable(this.connectionTypeName);
    }

    /**
     * Gets or sets the field definitions of the connection type.
     * 
     */
    @Import(name="fieldDefinitions", required=true)
    private Output<Map<String,FieldDefinitionArgs>> fieldDefinitions;

    /**
     * @return Gets or sets the field definitions of the connection type.
     * 
     */
    public Output<Map<String,FieldDefinitionArgs>> fieldDefinitions() {
        return this.fieldDefinitions;
    }

    /**
     * Gets or sets a Boolean value to indicate if the connection type is global.
     * 
     */
    @Import(name="isGlobal")
    private @Nullable Output<Boolean> isGlobal;

    /**
     * @return Gets or sets a Boolean value to indicate if the connection type is global.
     * 
     */
    public Optional<Output<Boolean>> isGlobal() {
        return Optional.ofNullable(this.isGlobal);
    }

    /**
     * Gets or sets the name of the connection type.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Gets or sets the name of the connection type.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Name of an Azure Resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of an Azure Resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private ConnectionTypeArgs() {}

    private ConnectionTypeArgs(ConnectionTypeArgs $) {
        this.automationAccountName = $.automationAccountName;
        this.connectionTypeName = $.connectionTypeName;
        this.fieldDefinitions = $.fieldDefinitions;
        this.isGlobal = $.isGlobal;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionTypeArgs $;

        public Builder() {
            $ = new ConnectionTypeArgs();
        }

        public Builder(ConnectionTypeArgs defaults) {
            $ = new ConnectionTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automationAccountName The name of the automation account.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountName(Output<String> automationAccountName) {
            $.automationAccountName = automationAccountName;
            return this;
        }

        /**
         * @param automationAccountName The name of the automation account.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountName(String automationAccountName) {
            return automationAccountName(Output.of(automationAccountName));
        }

        /**
         * @param connectionTypeName The parameters supplied to the create or update connection type operation.
         * 
         * @return builder
         * 
         */
        public Builder connectionTypeName(@Nullable Output<String> connectionTypeName) {
            $.connectionTypeName = connectionTypeName;
            return this;
        }

        /**
         * @param connectionTypeName The parameters supplied to the create or update connection type operation.
         * 
         * @return builder
         * 
         */
        public Builder connectionTypeName(String connectionTypeName) {
            return connectionTypeName(Output.of(connectionTypeName));
        }

        /**
         * @param fieldDefinitions Gets or sets the field definitions of the connection type.
         * 
         * @return builder
         * 
         */
        public Builder fieldDefinitions(Output<Map<String,FieldDefinitionArgs>> fieldDefinitions) {
            $.fieldDefinitions = fieldDefinitions;
            return this;
        }

        /**
         * @param fieldDefinitions Gets or sets the field definitions of the connection type.
         * 
         * @return builder
         * 
         */
        public Builder fieldDefinitions(Map<String,FieldDefinitionArgs> fieldDefinitions) {
            return fieldDefinitions(Output.of(fieldDefinitions));
        }

        /**
         * @param isGlobal Gets or sets a Boolean value to indicate if the connection type is global.
         * 
         * @return builder
         * 
         */
        public Builder isGlobal(@Nullable Output<Boolean> isGlobal) {
            $.isGlobal = isGlobal;
            return this;
        }

        /**
         * @param isGlobal Gets or sets a Boolean value to indicate if the connection type is global.
         * 
         * @return builder
         * 
         */
        public Builder isGlobal(Boolean isGlobal) {
            return isGlobal(Output.of(isGlobal));
        }

        /**
         * @param name Gets or sets the name of the connection type.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Gets or sets the name of the connection type.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Name of an Azure Resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of an Azure Resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ConnectionTypeArgs build() {
            $.automationAccountName = Objects.requireNonNull($.automationAccountName, "expected parameter 'automationAccountName' to be non-null");
            $.fieldDefinitions = Objects.requireNonNull($.fieldDefinitions, "expected parameter 'fieldDefinitions' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
