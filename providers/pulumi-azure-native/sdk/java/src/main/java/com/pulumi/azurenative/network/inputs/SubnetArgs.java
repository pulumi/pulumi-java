// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.VirtualNetworkPrivateEndpointNetworkPolicies;
import com.pulumi.azurenative.network.enums.VirtualNetworkPrivateLinkServiceNetworkPolicies;
import com.pulumi.azurenative.network.inputs.ApplicationGatewayIPConfigurationArgs;
import com.pulumi.azurenative.network.inputs.DelegationArgs;
import com.pulumi.azurenative.network.inputs.NetworkSecurityGroupArgs;
import com.pulumi.azurenative.network.inputs.RouteTableArgs;
import com.pulumi.azurenative.network.inputs.ServiceEndpointPolicyArgs;
import com.pulumi.azurenative.network.inputs.ServiceEndpointPropertiesFormatArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Subnet in a virtual network resource.
 * 
 */
public final class SubnetArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubnetArgs Empty = new SubnetArgs();

    /**
     * The address prefix for the subnet.
     * 
     */
    @Import(name="addressPrefix")
    private @Nullable Output<String> addressPrefix;

    public Optional<Output<String>> addressPrefix() {
        return Optional.ofNullable(this.addressPrefix);
    }

    /**
     * List of address prefixes for the subnet.
     * 
     */
    @Import(name="addressPrefixes")
    private @Nullable Output<List<String>> addressPrefixes;

    public Optional<Output<List<String>>> addressPrefixes() {
        return Optional.ofNullable(this.addressPrefixes);
    }

    /**
     * Application gateway IP configurations of virtual network resource.
     * 
     */
    @Import(name="applicationGatewayIpConfigurations")
    private @Nullable Output<List<ApplicationGatewayIPConfigurationArgs>> applicationGatewayIpConfigurations;

    public Optional<Output<List<ApplicationGatewayIPConfigurationArgs>>> applicationGatewayIpConfigurations() {
        return Optional.ofNullable(this.applicationGatewayIpConfigurations);
    }

    /**
     * An array of references to the delegations on the subnet.
     * 
     */
    @Import(name="delegations")
    private @Nullable Output<List<DelegationArgs>> delegations;

    public Optional<Output<List<DelegationArgs>>> delegations() {
        return Optional.ofNullable(this.delegations);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Array of IpAllocation which reference this subnet.
     * 
     */
    @Import(name="ipAllocations")
    private @Nullable Output<List<SubResourceArgs>> ipAllocations;

    public Optional<Output<List<SubResourceArgs>>> ipAllocations() {
        return Optional.ofNullable(this.ipAllocations);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Nat gateway associated with this subnet.
     * 
     */
    @Import(name="natGateway")
    private @Nullable Output<SubResourceArgs> natGateway;

    public Optional<Output<SubResourceArgs>> natGateway() {
        return Optional.ofNullable(this.natGateway);
    }

    /**
     * The reference to the NetworkSecurityGroup resource.
     * 
     */
    @Import(name="networkSecurityGroup")
    private @Nullable Output<NetworkSecurityGroupArgs> networkSecurityGroup;

    public Optional<Output<NetworkSecurityGroupArgs>> networkSecurityGroup() {
        return Optional.ofNullable(this.networkSecurityGroup);
    }

    /**
     * Enable or Disable apply network policies on private end point in the subnet.
     * 
     */
    @Import(name="privateEndpointNetworkPolicies")
    private @Nullable Output<Either<String,VirtualNetworkPrivateEndpointNetworkPolicies>> privateEndpointNetworkPolicies;

    public Optional<Output<Either<String,VirtualNetworkPrivateEndpointNetworkPolicies>>> privateEndpointNetworkPolicies() {
        return Optional.ofNullable(this.privateEndpointNetworkPolicies);
    }

    /**
     * Enable or Disable apply network policies on private link service in the subnet.
     * 
     */
    @Import(name="privateLinkServiceNetworkPolicies")
    private @Nullable Output<Either<String,VirtualNetworkPrivateLinkServiceNetworkPolicies>> privateLinkServiceNetworkPolicies;

    public Optional<Output<Either<String,VirtualNetworkPrivateLinkServiceNetworkPolicies>>> privateLinkServiceNetworkPolicies() {
        return Optional.ofNullable(this.privateLinkServiceNetworkPolicies);
    }

    /**
     * The reference to the RouteTable resource.
     * 
     */
    @Import(name="routeTable")
    private @Nullable Output<RouteTableArgs> routeTable;

    public Optional<Output<RouteTableArgs>> routeTable() {
        return Optional.ofNullable(this.routeTable);
    }

    /**
     * An array of service endpoint policies.
     * 
     */
    @Import(name="serviceEndpointPolicies")
    private @Nullable Output<List<ServiceEndpointPolicyArgs>> serviceEndpointPolicies;

    public Optional<Output<List<ServiceEndpointPolicyArgs>>> serviceEndpointPolicies() {
        return Optional.ofNullable(this.serviceEndpointPolicies);
    }

    /**
     * An array of service endpoints.
     * 
     */
    @Import(name="serviceEndpoints")
    private @Nullable Output<List<ServiceEndpointPropertiesFormatArgs>> serviceEndpoints;

    public Optional<Output<List<ServiceEndpointPropertiesFormatArgs>>> serviceEndpoints() {
        return Optional.ofNullable(this.serviceEndpoints);
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private SubnetArgs() {}

    private SubnetArgs(SubnetArgs $) {
        this.addressPrefix = $.addressPrefix;
        this.addressPrefixes = $.addressPrefixes;
        this.applicationGatewayIpConfigurations = $.applicationGatewayIpConfigurations;
        this.delegations = $.delegations;
        this.id = $.id;
        this.ipAllocations = $.ipAllocations;
        this.name = $.name;
        this.natGateway = $.natGateway;
        this.networkSecurityGroup = $.networkSecurityGroup;
        this.privateEndpointNetworkPolicies = $.privateEndpointNetworkPolicies;
        this.privateLinkServiceNetworkPolicies = $.privateLinkServiceNetworkPolicies;
        this.routeTable = $.routeTable;
        this.serviceEndpointPolicies = $.serviceEndpointPolicies;
        this.serviceEndpoints = $.serviceEndpoints;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubnetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubnetArgs $;

        public Builder() {
            $ = new SubnetArgs();
        }

        public Builder(SubnetArgs defaults) {
            $ = new SubnetArgs(Objects.requireNonNull(defaults));
        }

        public Builder addressPrefix(@Nullable Output<String> addressPrefix) {
            $.addressPrefix = addressPrefix;
            return this;
        }

        public Builder addressPrefix(String addressPrefix) {
            return addressPrefix(Output.of(addressPrefix));
        }

        public Builder addressPrefixes(@Nullable Output<List<String>> addressPrefixes) {
            $.addressPrefixes = addressPrefixes;
            return this;
        }

        public Builder addressPrefixes(List<String> addressPrefixes) {
            return addressPrefixes(Output.of(addressPrefixes));
        }

        public Builder addressPrefixes(String... addressPrefixes) {
            return addressPrefixes(List.of(addressPrefixes));
        }

        public Builder applicationGatewayIpConfigurations(@Nullable Output<List<ApplicationGatewayIPConfigurationArgs>> applicationGatewayIpConfigurations) {
            $.applicationGatewayIpConfigurations = applicationGatewayIpConfigurations;
            return this;
        }

        public Builder applicationGatewayIpConfigurations(List<ApplicationGatewayIPConfigurationArgs> applicationGatewayIpConfigurations) {
            return applicationGatewayIpConfigurations(Output.of(applicationGatewayIpConfigurations));
        }

        public Builder applicationGatewayIpConfigurations(ApplicationGatewayIPConfigurationArgs... applicationGatewayIpConfigurations) {
            return applicationGatewayIpConfigurations(List.of(applicationGatewayIpConfigurations));
        }

        public Builder delegations(@Nullable Output<List<DelegationArgs>> delegations) {
            $.delegations = delegations;
            return this;
        }

        public Builder delegations(List<DelegationArgs> delegations) {
            return delegations(Output.of(delegations));
        }

        public Builder delegations(DelegationArgs... delegations) {
            return delegations(List.of(delegations));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder ipAllocations(@Nullable Output<List<SubResourceArgs>> ipAllocations) {
            $.ipAllocations = ipAllocations;
            return this;
        }

        public Builder ipAllocations(List<SubResourceArgs> ipAllocations) {
            return ipAllocations(Output.of(ipAllocations));
        }

        public Builder ipAllocations(SubResourceArgs... ipAllocations) {
            return ipAllocations(List.of(ipAllocations));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder natGateway(@Nullable Output<SubResourceArgs> natGateway) {
            $.natGateway = natGateway;
            return this;
        }

        public Builder natGateway(SubResourceArgs natGateway) {
            return natGateway(Output.of(natGateway));
        }

        public Builder networkSecurityGroup(@Nullable Output<NetworkSecurityGroupArgs> networkSecurityGroup) {
            $.networkSecurityGroup = networkSecurityGroup;
            return this;
        }

        public Builder networkSecurityGroup(NetworkSecurityGroupArgs networkSecurityGroup) {
            return networkSecurityGroup(Output.of(networkSecurityGroup));
        }

        public Builder privateEndpointNetworkPolicies(@Nullable Output<Either<String,VirtualNetworkPrivateEndpointNetworkPolicies>> privateEndpointNetworkPolicies) {
            $.privateEndpointNetworkPolicies = privateEndpointNetworkPolicies;
            return this;
        }

        public Builder privateEndpointNetworkPolicies(Either<String,VirtualNetworkPrivateEndpointNetworkPolicies> privateEndpointNetworkPolicies) {
            return privateEndpointNetworkPolicies(Output.of(privateEndpointNetworkPolicies));
        }

        public Builder privateEndpointNetworkPolicies(String privateEndpointNetworkPolicies) {
            return privateEndpointNetworkPolicies(Either.ofLeft(privateEndpointNetworkPolicies));
        }

        public Builder privateEndpointNetworkPolicies(VirtualNetworkPrivateEndpointNetworkPolicies privateEndpointNetworkPolicies) {
            return privateEndpointNetworkPolicies(Either.ofRight(privateEndpointNetworkPolicies));
        }

        public Builder privateLinkServiceNetworkPolicies(@Nullable Output<Either<String,VirtualNetworkPrivateLinkServiceNetworkPolicies>> privateLinkServiceNetworkPolicies) {
            $.privateLinkServiceNetworkPolicies = privateLinkServiceNetworkPolicies;
            return this;
        }

        public Builder privateLinkServiceNetworkPolicies(Either<String,VirtualNetworkPrivateLinkServiceNetworkPolicies> privateLinkServiceNetworkPolicies) {
            return privateLinkServiceNetworkPolicies(Output.of(privateLinkServiceNetworkPolicies));
        }

        public Builder privateLinkServiceNetworkPolicies(String privateLinkServiceNetworkPolicies) {
            return privateLinkServiceNetworkPolicies(Either.ofLeft(privateLinkServiceNetworkPolicies));
        }

        public Builder privateLinkServiceNetworkPolicies(VirtualNetworkPrivateLinkServiceNetworkPolicies privateLinkServiceNetworkPolicies) {
            return privateLinkServiceNetworkPolicies(Either.ofRight(privateLinkServiceNetworkPolicies));
        }

        public Builder routeTable(@Nullable Output<RouteTableArgs> routeTable) {
            $.routeTable = routeTable;
            return this;
        }

        public Builder routeTable(RouteTableArgs routeTable) {
            return routeTable(Output.of(routeTable));
        }

        public Builder serviceEndpointPolicies(@Nullable Output<List<ServiceEndpointPolicyArgs>> serviceEndpointPolicies) {
            $.serviceEndpointPolicies = serviceEndpointPolicies;
            return this;
        }

        public Builder serviceEndpointPolicies(List<ServiceEndpointPolicyArgs> serviceEndpointPolicies) {
            return serviceEndpointPolicies(Output.of(serviceEndpointPolicies));
        }

        public Builder serviceEndpointPolicies(ServiceEndpointPolicyArgs... serviceEndpointPolicies) {
            return serviceEndpointPolicies(List.of(serviceEndpointPolicies));
        }

        public Builder serviceEndpoints(@Nullable Output<List<ServiceEndpointPropertiesFormatArgs>> serviceEndpoints) {
            $.serviceEndpoints = serviceEndpoints;
            return this;
        }

        public Builder serviceEndpoints(List<ServiceEndpointPropertiesFormatArgs> serviceEndpoints) {
            return serviceEndpoints(Output.of(serviceEndpoints));
        }

        public Builder serviceEndpoints(ServiceEndpointPropertiesFormatArgs... serviceEndpoints) {
            return serviceEndpoints(List.of(serviceEndpoints));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SubnetArgs build() {
            $.privateEndpointNetworkPolicies = Codegen.stringProp("privateEndpointNetworkPolicies").left(VirtualNetworkPrivateEndpointNetworkPolicies.class).output().arg($.privateEndpointNetworkPolicies).def("Enabled").getNullable();
            $.privateLinkServiceNetworkPolicies = Codegen.stringProp("privateLinkServiceNetworkPolicies").left(VirtualNetworkPrivateLinkServiceNetworkPolicies.class).output().arg($.privateLinkServiceNetworkPolicies).def("Enabled").getNullable();
            return $;
        }
    }

}
