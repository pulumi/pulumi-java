// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The share mount point.
 * 
 */
public final class MountPointMapResponse extends com.pulumi.resources.InvokeArgs {

    public static final MountPointMapResponse Empty = new MountPointMapResponse();

    /**
     * Mount point for the share.
     * 
     */
    @Import(name="mountPoint", required=true)
    private String mountPoint;

    /**
     * @return Mount point for the share.
     * 
     */
    public String mountPoint() {
        return this.mountPoint;
    }

    /**
     * Mounting type.
     * 
     */
    @Import(name="mountType", required=true)
    private String mountType;

    /**
     * @return Mounting type.
     * 
     */
    public String mountType() {
        return this.mountType;
    }

    /**
     * ID of the role to which share is mounted.
     * 
     */
    @Import(name="roleId", required=true)
    private String roleId;

    /**
     * @return ID of the role to which share is mounted.
     * 
     */
    public String roleId() {
        return this.roleId;
    }

    /**
     * Role type.
     * 
     */
    @Import(name="roleType", required=true)
    private String roleType;

    /**
     * @return Role type.
     * 
     */
    public String roleType() {
        return this.roleType;
    }

    /**
     * ID of the share mounted to the role VM.
     * 
     */
    @Import(name="shareId", required=true)
    private String shareId;

    /**
     * @return ID of the share mounted to the role VM.
     * 
     */
    public String shareId() {
        return this.shareId;
    }

    private MountPointMapResponse() {}

    private MountPointMapResponse(MountPointMapResponse $) {
        this.mountPoint = $.mountPoint;
        this.mountType = $.mountType;
        this.roleId = $.roleId;
        this.roleType = $.roleType;
        this.shareId = $.shareId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MountPointMapResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MountPointMapResponse $;

        public Builder() {
            $ = new MountPointMapResponse();
        }

        public Builder(MountPointMapResponse defaults) {
            $ = new MountPointMapResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param mountPoint Mount point for the share.
         * 
         * @return builder
         * 
         */
        public Builder mountPoint(String mountPoint) {
            $.mountPoint = mountPoint;
            return this;
        }

        /**
         * @param mountType Mounting type.
         * 
         * @return builder
         * 
         */
        public Builder mountType(String mountType) {
            $.mountType = mountType;
            return this;
        }

        /**
         * @param roleId ID of the role to which share is mounted.
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleType Role type.
         * 
         * @return builder
         * 
         */
        public Builder roleType(String roleType) {
            $.roleType = roleType;
            return this;
        }

        /**
         * @param shareId ID of the share mounted to the role VM.
         * 
         * @return builder
         * 
         */
        public Builder shareId(String shareId) {
            $.shareId = shareId;
            return this;
        }

        public MountPointMapResponse build() {
            $.mountPoint = Objects.requireNonNull($.mountPoint, "expected parameter 'mountPoint' to be non-null");
            $.mountType = Objects.requireNonNull($.mountType, "expected parameter 'mountType' to be non-null");
            $.roleId = Objects.requireNonNull($.roleId, "expected parameter 'roleId' to be non-null");
            $.roleType = Objects.requireNonNull($.roleType, "expected parameter 'roleType' to be non-null");
            $.shareId = Objects.requireNonNull($.shareId, "expected parameter 'shareId' to be non-null");
            return $;
        }
    }

}
