// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataExportArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataExportArgs Empty = new DataExportArgs();

    /**
     * The latest data export rule modification time.
     * 
     */
    @Import(name="createdDate")
    private @Nullable Output<String> createdDate;

    /**
     * @return The latest data export rule modification time.
     * 
     */
    public Optional<Output<String>> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }

    /**
     * The data export rule ID.
     * 
     */
    @Import(name="dataExportId")
    private @Nullable Output<String> dataExportId;

    /**
     * @return The data export rule ID.
     * 
     */
    public Optional<Output<String>> dataExportId() {
        return Optional.ofNullable(this.dataExportId);
    }

    /**
     * The data export rule name.
     * 
     */
    @Import(name="dataExportName")
    private @Nullable Output<String> dataExportName;

    /**
     * @return The data export rule name.
     * 
     */
    public Optional<Output<String>> dataExportName() {
        return Optional.ofNullable(this.dataExportName);
    }

    /**
     * Active when enabled.
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return Active when enabled.
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    /**
     * Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account.
     * 
     */
    @Import(name="eventHubName")
    private @Nullable Output<String> eventHubName;

    /**
     * @return Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account.
     * 
     */
    public Optional<Output<String>> eventHubName() {
        return Optional.ofNullable(this.eventHubName);
    }

    /**
     * Date and time when the export was last modified.
     * 
     */
    @Import(name="lastModifiedDate")
    private @Nullable Output<String> lastModifiedDate;

    /**
     * @return Date and time when the export was last modified.
     * 
     */
    public Optional<Output<String>> lastModifiedDate() {
        return Optional.ofNullable(this.lastModifiedDate);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The destination resource ID. This can be copied from the Properties entry of the destination resource in Azure.
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return The destination resource ID. This can be copied from the Properties entry of the destination resource in Azure.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    /**
     * An array of tables to export, for example: [“Heartbeat, SecurityEvent”].
     * 
     */
    @Import(name="tableNames", required=true)
    private Output<List<String>> tableNames;

    /**
     * @return An array of tables to export, for example: [“Heartbeat, SecurityEvent”].
     * 
     */
    public Output<List<String>> tableNames() {
        return this.tableNames;
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    /**
     * @return The name of the workspace.
     * 
     */
    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private DataExportArgs() {}

    private DataExportArgs(DataExportArgs $) {
        this.createdDate = $.createdDate;
        this.dataExportId = $.dataExportId;
        this.dataExportName = $.dataExportName;
        this.enable = $.enable;
        this.eventHubName = $.eventHubName;
        this.lastModifiedDate = $.lastModifiedDate;
        this.resourceGroupName = $.resourceGroupName;
        this.resourceId = $.resourceId;
        this.tableNames = $.tableNames;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataExportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataExportArgs $;

        public Builder() {
            $ = new DataExportArgs();
        }

        public Builder(DataExportArgs defaults) {
            $ = new DataExportArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdDate The latest data export rule modification time.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(@Nullable Output<String> createdDate) {
            $.createdDate = createdDate;
            return this;
        }

        /**
         * @param createdDate The latest data export rule modification time.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(String createdDate) {
            return createdDate(Output.of(createdDate));
        }

        /**
         * @param dataExportId The data export rule ID.
         * 
         * @return builder
         * 
         */
        public Builder dataExportId(@Nullable Output<String> dataExportId) {
            $.dataExportId = dataExportId;
            return this;
        }

        /**
         * @param dataExportId The data export rule ID.
         * 
         * @return builder
         * 
         */
        public Builder dataExportId(String dataExportId) {
            return dataExportId(Output.of(dataExportId));
        }

        /**
         * @param dataExportName The data export rule name.
         * 
         * @return builder
         * 
         */
        public Builder dataExportName(@Nullable Output<String> dataExportName) {
            $.dataExportName = dataExportName;
            return this;
        }

        /**
         * @param dataExportName The data export rule name.
         * 
         * @return builder
         * 
         */
        public Builder dataExportName(String dataExportName) {
            return dataExportName(Output.of(dataExportName));
        }

        /**
         * @param enable Active when enabled.
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable Active when enabled.
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        /**
         * @param eventHubName Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder eventHubName(@Nullable Output<String> eventHubName) {
            $.eventHubName = eventHubName;
            return this;
        }

        /**
         * @param eventHubName Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder eventHubName(String eventHubName) {
            return eventHubName(Output.of(eventHubName));
        }

        /**
         * @param lastModifiedDate Date and time when the export was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedDate(@Nullable Output<String> lastModifiedDate) {
            $.lastModifiedDate = lastModifiedDate;
            return this;
        }

        /**
         * @param lastModifiedDate Date and time when the export was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedDate(String lastModifiedDate) {
            return lastModifiedDate(Output.of(lastModifiedDate));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param resourceId The destination resource ID. This can be copied from the Properties entry of the destination resource in Azure.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The destination resource ID. This can be copied from the Properties entry of the destination resource in Azure.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param tableNames An array of tables to export, for example: [“Heartbeat, SecurityEvent”].
         * 
         * @return builder
         * 
         */
        public Builder tableNames(Output<List<String>> tableNames) {
            $.tableNames = tableNames;
            return this;
        }

        /**
         * @param tableNames An array of tables to export, for example: [“Heartbeat, SecurityEvent”].
         * 
         * @return builder
         * 
         */
        public Builder tableNames(List<String> tableNames) {
            return tableNames(Output.of(tableNames));
        }

        /**
         * @param tableNames An array of tables to export, for example: [“Heartbeat, SecurityEvent”].
         * 
         * @return builder
         * 
         */
        public Builder tableNames(String... tableNames) {
            return tableNames(List.of(tableNames));
        }

        /**
         * @param workspaceName The name of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        /**
         * @param workspaceName The name of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public DataExportArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceId = Objects.requireNonNull($.resourceId, "expected parameter 'resourceId' to be non-null");
            $.tableNames = Objects.requireNonNull($.tableNames, "expected parameter 'tableNames' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
