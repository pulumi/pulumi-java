// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Subnet information.
 * 
 */
public final class SubnetResponse extends com.pulumi.resources.InvokeArgs {

    public static final SubnetResponse Empty = new SubnetResponse();

    /**
     * The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
     * 
     */
    @Import(name="allowPublicIp")
    private @Nullable String allowPublicIp;

    /**
     * @return The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
     * 
     */
    public Optional<String> allowPublicIp() {
        return Optional.ofNullable(this.allowPublicIp);
    }

    /**
     * The name of the subnet as seen in the lab.
     * 
     */
    @Import(name="labSubnetName")
    private @Nullable String labSubnetName;

    /**
     * @return The name of the subnet as seen in the lab.
     * 
     */
    public Optional<String> labSubnetName() {
        return Optional.ofNullable(this.labSubnetName);
    }

    /**
     * The resource ID of the subnet.
     * 
     */
    @Import(name="resourceId")
    private @Nullable String resourceId;

    /**
     * @return The resource ID of the subnet.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    private SubnetResponse() {}

    private SubnetResponse(SubnetResponse $) {
        this.allowPublicIp = $.allowPublicIp;
        this.labSubnetName = $.labSubnetName;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubnetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubnetResponse $;

        public Builder() {
            $ = new SubnetResponse();
        }

        public Builder(SubnetResponse defaults) {
            $ = new SubnetResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowPublicIp The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
         * 
         * @return builder
         * 
         */
        public Builder allowPublicIp(@Nullable String allowPublicIp) {
            $.allowPublicIp = allowPublicIp;
            return this;
        }

        /**
         * @param labSubnetName The name of the subnet as seen in the lab.
         * 
         * @return builder
         * 
         */
        public Builder labSubnetName(@Nullable String labSubnetName) {
            $.labSubnetName = labSubnetName;
            return this;
        }

        /**
         * @param resourceId The resource ID of the subnet.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public SubnetResponse build() {
            return $;
        }
    }

}
