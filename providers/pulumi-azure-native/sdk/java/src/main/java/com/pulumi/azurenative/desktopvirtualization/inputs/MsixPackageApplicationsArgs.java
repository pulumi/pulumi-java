// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Schema for MSIX Package Application properties.
 * 
 */
public final class MsixPackageApplicationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MsixPackageApplicationsArgs Empty = new MsixPackageApplicationsArgs();

    /**
     * Package Application Id, found in appxmanifest.xml.
     * 
     */
    @Import(name="appId")
    private @Nullable Output<String> appId;

    /**
     * @return Package Application Id, found in appxmanifest.xml.
     * 
     */
    public Optional<Output<String>> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml.
     * 
     */
    @Import(name="appUserModelID")
    private @Nullable Output<String> appUserModelID;

    /**
     * @return Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml.
     * 
     */
    public Optional<Output<String>> appUserModelID() {
        return Optional.ofNullable(this.appUserModelID);
    }

    /**
     * Description of Package Application.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of Package Application.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * User friendly name.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    /**
     * @return User friendly name.
     * 
     */
    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * User friendly name.
     * 
     */
    @Import(name="iconImageName")
    private @Nullable Output<String> iconImageName;

    /**
     * @return User friendly name.
     * 
     */
    public Optional<Output<String>> iconImageName() {
        return Optional.ofNullable(this.iconImageName);
    }

    /**
     * the icon a 64 bit string as a byte array.
     * 
     */
    @Import(name="rawIcon")
    private @Nullable Output<String> rawIcon;

    /**
     * @return the icon a 64 bit string as a byte array.
     * 
     */
    public Optional<Output<String>> rawIcon() {
        return Optional.ofNullable(this.rawIcon);
    }

    /**
     * the icon a 64 bit string as a byte array.
     * 
     */
    @Import(name="rawPng")
    private @Nullable Output<String> rawPng;

    /**
     * @return the icon a 64 bit string as a byte array.
     * 
     */
    public Optional<Output<String>> rawPng() {
        return Optional.ofNullable(this.rawPng);
    }

    private MsixPackageApplicationsArgs() {}

    private MsixPackageApplicationsArgs(MsixPackageApplicationsArgs $) {
        this.appId = $.appId;
        this.appUserModelID = $.appUserModelID;
        this.description = $.description;
        this.friendlyName = $.friendlyName;
        this.iconImageName = $.iconImageName;
        this.rawIcon = $.rawIcon;
        this.rawPng = $.rawPng;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MsixPackageApplicationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MsixPackageApplicationsArgs $;

        public Builder() {
            $ = new MsixPackageApplicationsArgs();
        }

        public Builder(MsixPackageApplicationsArgs defaults) {
            $ = new MsixPackageApplicationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId Package Application Id, found in appxmanifest.xml.
         * 
         * @return builder
         * 
         */
        public Builder appId(@Nullable Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId Package Application Id, found in appxmanifest.xml.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param appUserModelID Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml.
         * 
         * @return builder
         * 
         */
        public Builder appUserModelID(@Nullable Output<String> appUserModelID) {
            $.appUserModelID = appUserModelID;
            return this;
        }

        /**
         * @param appUserModelID Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml.
         * 
         * @return builder
         * 
         */
        public Builder appUserModelID(String appUserModelID) {
            return appUserModelID(Output.of(appUserModelID));
        }

        /**
         * @param description Description of Package Application.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of Package Application.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param friendlyName User friendly name.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param friendlyName User friendly name.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        /**
         * @param iconImageName User friendly name.
         * 
         * @return builder
         * 
         */
        public Builder iconImageName(@Nullable Output<String> iconImageName) {
            $.iconImageName = iconImageName;
            return this;
        }

        /**
         * @param iconImageName User friendly name.
         * 
         * @return builder
         * 
         */
        public Builder iconImageName(String iconImageName) {
            return iconImageName(Output.of(iconImageName));
        }

        /**
         * @param rawIcon the icon a 64 bit string as a byte array.
         * 
         * @return builder
         * 
         */
        public Builder rawIcon(@Nullable Output<String> rawIcon) {
            $.rawIcon = rawIcon;
            return this;
        }

        /**
         * @param rawIcon the icon a 64 bit string as a byte array.
         * 
         * @return builder
         * 
         */
        public Builder rawIcon(String rawIcon) {
            return rawIcon(Output.of(rawIcon));
        }

        /**
         * @param rawPng the icon a 64 bit string as a byte array.
         * 
         * @return builder
         * 
         */
        public Builder rawPng(@Nullable Output<String> rawPng) {
            $.rawPng = rawPng;
            return this;
        }

        /**
         * @param rawPng the icon a 64 bit string as a byte array.
         * 
         * @return builder
         * 
         */
        public Builder rawPng(String rawPng) {
            return rawPng(Output.of(rawPng));
        }

        public MsixPackageApplicationsArgs build() {
            return $;
        }
    }

}
