// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute;

import com.pulumi.azurenative.compute.inputs.SkuArgs;
import com.pulumi.azurenative.compute.inputs.SubResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AvailabilitySetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AvailabilitySetArgs Empty = new AvailabilitySetArgs();

    /**
     * The name of the availability set.
     * 
     */
    @Import(name="availabilitySetName")
    private @Nullable Output<String> availabilitySetName;

    /**
     * @return The name of the availability set.
     * 
     */
    public Optional<Output<String>> availabilitySetName() {
        return Optional.ofNullable(this.availabilitySetName);
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource location
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Fault Domain count.
     * 
     */
    @Import(name="platformFaultDomainCount")
    private @Nullable Output<Integer> platformFaultDomainCount;

    /**
     * @return Fault Domain count.
     * 
     */
    public Optional<Output<Integer>> platformFaultDomainCount() {
        return Optional.ofNullable(this.platformFaultDomainCount);
    }

    /**
     * Update Domain count.
     * 
     */
    @Import(name="platformUpdateDomainCount")
    private @Nullable Output<Integer> platformUpdateDomainCount;

    /**
     * @return Update Domain count.
     * 
     */
    public Optional<Output<Integer>> platformUpdateDomainCount() {
        return Optional.ofNullable(this.platformUpdateDomainCount);
    }

    /**
     * Specifies information about the proximity placement group that the availability set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
     * 
     */
    @Import(name="proximityPlacementGroup")
    private @Nullable Output<SubResourceArgs> proximityPlacementGroup;

    /**
     * @return Specifies information about the proximity placement group that the availability set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
     * 
     */
    public Optional<Output<SubResourceArgs>> proximityPlacementGroup() {
        return Optional.ofNullable(this.proximityPlacementGroup);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use &#39;Aligned&#39; for virtual machines with managed disks and &#39;Classic&#39; for virtual machines with unmanaged disks. Default value is &#39;Classic&#39;.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<SkuArgs> sku;

    /**
     * @return Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use &#39;Aligned&#39; for virtual machines with managed disks and &#39;Classic&#39; for virtual machines with unmanaged disks. Default value is &#39;Classic&#39;.
     * 
     */
    public Optional<Output<SkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A list of references to all virtual machines in the availability set.
     * 
     */
    @Import(name="virtualMachines")
    private @Nullable Output<List<SubResourceArgs>> virtualMachines;

    /**
     * @return A list of references to all virtual machines in the availability set.
     * 
     */
    public Optional<Output<List<SubResourceArgs>>> virtualMachines() {
        return Optional.ofNullable(this.virtualMachines);
    }

    private AvailabilitySetArgs() {}

    private AvailabilitySetArgs(AvailabilitySetArgs $) {
        this.availabilitySetName = $.availabilitySetName;
        this.location = $.location;
        this.platformFaultDomainCount = $.platformFaultDomainCount;
        this.platformUpdateDomainCount = $.platformUpdateDomainCount;
        this.proximityPlacementGroup = $.proximityPlacementGroup;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.virtualMachines = $.virtualMachines;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AvailabilitySetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AvailabilitySetArgs $;

        public Builder() {
            $ = new AvailabilitySetArgs();
        }

        public Builder(AvailabilitySetArgs defaults) {
            $ = new AvailabilitySetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilitySetName The name of the availability set.
         * 
         * @return builder
         * 
         */
        public Builder availabilitySetName(@Nullable Output<String> availabilitySetName) {
            $.availabilitySetName = availabilitySetName;
            return this;
        }

        /**
         * @param availabilitySetName The name of the availability set.
         * 
         * @return builder
         * 
         */
        public Builder availabilitySetName(String availabilitySetName) {
            return availabilitySetName(Output.of(availabilitySetName));
        }

        /**
         * @param location Resource location
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource location
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param platformFaultDomainCount Fault Domain count.
         * 
         * @return builder
         * 
         */
        public Builder platformFaultDomainCount(@Nullable Output<Integer> platformFaultDomainCount) {
            $.platformFaultDomainCount = platformFaultDomainCount;
            return this;
        }

        /**
         * @param platformFaultDomainCount Fault Domain count.
         * 
         * @return builder
         * 
         */
        public Builder platformFaultDomainCount(Integer platformFaultDomainCount) {
            return platformFaultDomainCount(Output.of(platformFaultDomainCount));
        }

        /**
         * @param platformUpdateDomainCount Update Domain count.
         * 
         * @return builder
         * 
         */
        public Builder platformUpdateDomainCount(@Nullable Output<Integer> platformUpdateDomainCount) {
            $.platformUpdateDomainCount = platformUpdateDomainCount;
            return this;
        }

        /**
         * @param platformUpdateDomainCount Update Domain count.
         * 
         * @return builder
         * 
         */
        public Builder platformUpdateDomainCount(Integer platformUpdateDomainCount) {
            return platformUpdateDomainCount(Output.of(platformUpdateDomainCount));
        }

        /**
         * @param proximityPlacementGroup Specifies information about the proximity placement group that the availability set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
         * 
         * @return builder
         * 
         */
        public Builder proximityPlacementGroup(@Nullable Output<SubResourceArgs> proximityPlacementGroup) {
            $.proximityPlacementGroup = proximityPlacementGroup;
            return this;
        }

        /**
         * @param proximityPlacementGroup Specifies information about the proximity placement group that the availability set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
         * 
         * @return builder
         * 
         */
        public Builder proximityPlacementGroup(SubResourceArgs proximityPlacementGroup) {
            return proximityPlacementGroup(Output.of(proximityPlacementGroup));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use &#39;Aligned&#39; for virtual machines with managed disks and &#39;Classic&#39; for virtual machines with unmanaged disks. Default value is &#39;Classic&#39;.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<SkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use &#39;Aligned&#39; for virtual machines with managed disks and &#39;Classic&#39; for virtual machines with unmanaged disks. Default value is &#39;Classic&#39;.
         * 
         * @return builder
         * 
         */
        public Builder sku(SkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param virtualMachines A list of references to all virtual machines in the availability set.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachines(@Nullable Output<List<SubResourceArgs>> virtualMachines) {
            $.virtualMachines = virtualMachines;
            return this;
        }

        /**
         * @param virtualMachines A list of references to all virtual machines in the availability set.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachines(List<SubResourceArgs> virtualMachines) {
            return virtualMachines(Output.of(virtualMachines));
        }

        /**
         * @param virtualMachines A list of references to all virtual machines in the availability set.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachines(SubResourceArgs... virtualMachines) {
            return virtualMachines(List.of(virtualMachines));
        }

        public AvailabilitySetArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
