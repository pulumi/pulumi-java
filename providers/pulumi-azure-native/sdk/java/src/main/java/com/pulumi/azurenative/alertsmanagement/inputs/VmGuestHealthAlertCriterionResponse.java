// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.alertsmanagement.inputs;

import com.pulumi.azurenative.alertsmanagement.inputs.HealthStateResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies the health alert criteria to alert on.
 * 
 */
public final class VmGuestHealthAlertCriterionResponse extends com.pulumi.resources.InvokeArgs {

    public static final VmGuestHealthAlertCriterionResponse Empty = new VmGuestHealthAlertCriterionResponse();

    /**
     * Health states to alert on
     * 
     */
    @Import(name="healthStates", required=true)
    private List<HealthStateResponse> healthStates;

    /**
     * @return Health states to alert on
     * 
     */
    public List<HealthStateResponse> healthStates() {
        return this.healthStates;
    }

    /**
     * Names of health monitor on which to define alert
     * 
     */
    @Import(name="monitorNames")
    private @Nullable List<String> monitorNames;

    /**
     * @return Names of health monitor on which to define alert
     * 
     */
    public Optional<List<String>> monitorNames() {
        return Optional.ofNullable(this.monitorNames);
    }

    /**
     * Names of health monitor type on which to define alert
     * 
     */
    @Import(name="monitorTypes")
    private @Nullable List<String> monitorTypes;

    /**
     * @return Names of health monitor type on which to define alert
     * 
     */
    public Optional<List<String>> monitorTypes() {
        return Optional.ofNullable(this.monitorTypes);
    }

    /**
     * specifies the type of the alert criterion.
     * Expected value is &#39;GuestVmHealth&#39;.
     * 
     */
    @Import(name="namespace", required=true)
    private String namespace;

    /**
     * @return specifies the type of the alert criterion.
     * Expected value is &#39;GuestVmHealth&#39;.
     * 
     */
    public String namespace() {
        return this.namespace;
    }

    private VmGuestHealthAlertCriterionResponse() {}

    private VmGuestHealthAlertCriterionResponse(VmGuestHealthAlertCriterionResponse $) {
        this.healthStates = $.healthStates;
        this.monitorNames = $.monitorNames;
        this.monitorTypes = $.monitorTypes;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VmGuestHealthAlertCriterionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VmGuestHealthAlertCriterionResponse $;

        public Builder() {
            $ = new VmGuestHealthAlertCriterionResponse();
        }

        public Builder(VmGuestHealthAlertCriterionResponse defaults) {
            $ = new VmGuestHealthAlertCriterionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param healthStates Health states to alert on
         * 
         * @return builder
         * 
         */
        public Builder healthStates(List<HealthStateResponse> healthStates) {
            $.healthStates = healthStates;
            return this;
        }

        /**
         * @param healthStates Health states to alert on
         * 
         * @return builder
         * 
         */
        public Builder healthStates(HealthStateResponse... healthStates) {
            return healthStates(List.of(healthStates));
        }

        /**
         * @param monitorNames Names of health monitor on which to define alert
         * 
         * @return builder
         * 
         */
        public Builder monitorNames(@Nullable List<String> monitorNames) {
            $.monitorNames = monitorNames;
            return this;
        }

        /**
         * @param monitorNames Names of health monitor on which to define alert
         * 
         * @return builder
         * 
         */
        public Builder monitorNames(String... monitorNames) {
            return monitorNames(List.of(monitorNames));
        }

        /**
         * @param monitorTypes Names of health monitor type on which to define alert
         * 
         * @return builder
         * 
         */
        public Builder monitorTypes(@Nullable List<String> monitorTypes) {
            $.monitorTypes = monitorTypes;
            return this;
        }

        /**
         * @param monitorTypes Names of health monitor type on which to define alert
         * 
         * @return builder
         * 
         */
        public Builder monitorTypes(String... monitorTypes) {
            return monitorTypes(List.of(monitorTypes));
        }

        /**
         * @param namespace specifies the type of the alert criterion.
         * Expected value is &#39;GuestVmHealth&#39;.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            $.namespace = namespace;
            return this;
        }

        public VmGuestHealthAlertCriterionResponse build() {
            $.healthStates = Objects.requireNonNull($.healthStates, "expected parameter 'healthStates' to be non-null");
            $.namespace = Codegen.stringProp("namespace").arg($.namespace).require();
            return $;
        }
    }

}
