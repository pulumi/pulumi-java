// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.solutions.inputs;

import com.pulumi.azurenative.solutions.enums.ApplicationManagementMode;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Managed application management policy.
 * 
 */
public final class ApplicationManagementPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationManagementPolicyArgs Empty = new ApplicationManagementPolicyArgs();

    /**
     * The managed application management mode.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<Either<String,ApplicationManagementMode>> mode;

    /**
     * @return The managed application management mode.
     * 
     */
    public Optional<Output<Either<String,ApplicationManagementMode>>> mode() {
        return Optional.ofNullable(this.mode);
    }

    private ApplicationManagementPolicyArgs() {}

    private ApplicationManagementPolicyArgs(ApplicationManagementPolicyArgs $) {
        this.mode = $.mode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationManagementPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationManagementPolicyArgs $;

        public Builder() {
            $ = new ApplicationManagementPolicyArgs();
        }

        public Builder(ApplicationManagementPolicyArgs defaults) {
            $ = new ApplicationManagementPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mode The managed application management mode.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<Either<String,ApplicationManagementMode>> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The managed application management mode.
         * 
         * @return builder
         * 
         */
        public Builder mode(Either<String,ApplicationManagementMode> mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param mode The managed application management mode.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Either.ofLeft(mode));
        }

        /**
         * @param mode The managed application management mode.
         * 
         * @return builder
         * 
         */
        public Builder mode(ApplicationManagementMode mode) {
            return mode(Either.ofRight(mode));
        }

        public ApplicationManagementPolicyArgs build() {
            return $;
        }
    }

}
