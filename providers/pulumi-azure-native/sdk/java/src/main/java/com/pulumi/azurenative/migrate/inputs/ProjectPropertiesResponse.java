// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.azurenative.migrate.inputs.PrivateEndpointConnectionResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of a project.
 * 
 */
public final class ProjectPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ProjectPropertiesResponse Empty = new ProjectPropertiesResponse();

    /**
     * Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
     * 
     */
    @Import(name="assessmentSolutionId")
    private @Nullable String assessmentSolutionId;

    /**
     * @return Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
     * 
     */
    public Optional<String> assessmentSolutionId() {
        return Optional.ofNullable(this.assessmentSolutionId);
    }

    /**
     * Time when this project was created. Date-Time represented in ISO-8601 format.
     * 
     */
    @Import(name="createdTimestamp", required=true)
    private String createdTimestamp;

    /**
     * @return Time when this project was created. Date-Time represented in ISO-8601 format.
     * 
     */
    public String createdTimestamp() {
        return this.createdTimestamp;
    }

    /**
     * The ARM id of the storage account used for interactions when public access is disabled.
     * 
     */
    @Import(name="customerStorageAccountArmId")
    private @Nullable String customerStorageAccountArmId;

    /**
     * @return The ARM id of the storage account used for interactions when public access is disabled.
     * 
     */
    public Optional<String> customerStorageAccountArmId() {
        return Optional.ofNullable(this.customerStorageAccountArmId);
    }

    /**
     * The ARM id of service map workspace created by customer.
     * 
     */
    @Import(name="customerWorkspaceId")
    private @Nullable String customerWorkspaceId;

    /**
     * @return The ARM id of service map workspace created by customer.
     * 
     */
    public Optional<String> customerWorkspaceId() {
        return Optional.ofNullable(this.customerWorkspaceId);
    }

    /**
     * Location of service map workspace created by customer.
     * 
     */
    @Import(name="customerWorkspaceLocation")
    private @Nullable String customerWorkspaceLocation;

    /**
     * @return Location of service map workspace created by customer.
     * 
     */
    public Optional<String> customerWorkspaceLocation() {
        return Optional.ofNullable(this.customerWorkspaceLocation);
    }

    /**
     * Time when last assessment was created. Date-Time represented in ISO-8601 format. This value will be null until assessment is created.
     * 
     */
    @Import(name="lastAssessmentTimestamp", required=true)
    private String lastAssessmentTimestamp;

    /**
     * @return Time when last assessment was created. Date-Time represented in ISO-8601 format. This value will be null until assessment is created.
     * 
     */
    public String lastAssessmentTimestamp() {
        return this.lastAssessmentTimestamp;
    }

    /**
     * Number of assessments created in the project.
     * 
     */
    @Import(name="numberOfAssessments", required=true)
    private Integer numberOfAssessments;

    /**
     * @return Number of assessments created in the project.
     * 
     */
    public Integer numberOfAssessments() {
        return this.numberOfAssessments;
    }

    /**
     * Number of groups created in the project.
     * 
     */
    @Import(name="numberOfGroups", required=true)
    private Integer numberOfGroups;

    /**
     * @return Number of groups created in the project.
     * 
     */
    public Integer numberOfGroups() {
        return this.numberOfGroups;
    }

    /**
     * Number of machines in the project.
     * 
     */
    @Import(name="numberOfMachines", required=true)
    private Integer numberOfMachines;

    /**
     * @return Number of machines in the project.
     * 
     */
    public Integer numberOfMachines() {
        return this.numberOfMachines;
    }

    /**
     * The list of private endpoint connections to the project.
     * 
     */
    @Import(name="privateEndpointConnections", required=true)
    private List<PrivateEndpointConnectionResponse> privateEndpointConnections;

    /**
     * @return The list of private endpoint connections to the project.
     * 
     */
    public List<PrivateEndpointConnectionResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }

    /**
     * Assessment project status.
     * 
     */
    @Import(name="projectStatus")
    private @Nullable String projectStatus;

    /**
     * @return Assessment project status.
     * 
     */
    public Optional<String> projectStatus() {
        return Optional.ofNullable(this.projectStatus);
    }

    /**
     * Provisioning state of the project.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return Provisioning state of the project.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * This value can be set to &#39;enabled&#39; to avoid breaking changes on existing customer resources and templates. If set to &#39;disabled&#39;, traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
     * 
     */
    @Import(name="publicNetworkAccess")
    private @Nullable String publicNetworkAccess;

    /**
     * @return This value can be set to &#39;enabled&#39; to avoid breaking changes on existing customer resources and templates. If set to &#39;disabled&#39;, traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
     * 
     */
    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }

    /**
     * Endpoint at which the collector agent can call agent REST API.
     * 
     */
    @Import(name="serviceEndpoint", required=true)
    private String serviceEndpoint;

    /**
     * @return Endpoint at which the collector agent can call agent REST API.
     * 
     */
    public String serviceEndpoint() {
        return this.serviceEndpoint;
    }

    /**
     * Time when this project was last updated. Date-Time represented in ISO-8601 format.
     * 
     */
    @Import(name="updatedTimestamp", required=true)
    private String updatedTimestamp;

    /**
     * @return Time when this project was last updated. Date-Time represented in ISO-8601 format.
     * 
     */
    public String updatedTimestamp() {
        return this.updatedTimestamp;
    }

    private ProjectPropertiesResponse() {}

    private ProjectPropertiesResponse(ProjectPropertiesResponse $) {
        this.assessmentSolutionId = $.assessmentSolutionId;
        this.createdTimestamp = $.createdTimestamp;
        this.customerStorageAccountArmId = $.customerStorageAccountArmId;
        this.customerWorkspaceId = $.customerWorkspaceId;
        this.customerWorkspaceLocation = $.customerWorkspaceLocation;
        this.lastAssessmentTimestamp = $.lastAssessmentTimestamp;
        this.numberOfAssessments = $.numberOfAssessments;
        this.numberOfGroups = $.numberOfGroups;
        this.numberOfMachines = $.numberOfMachines;
        this.privateEndpointConnections = $.privateEndpointConnections;
        this.projectStatus = $.projectStatus;
        this.provisioningState = $.provisioningState;
        this.publicNetworkAccess = $.publicNetworkAccess;
        this.serviceEndpoint = $.serviceEndpoint;
        this.updatedTimestamp = $.updatedTimestamp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectPropertiesResponse $;

        public Builder() {
            $ = new ProjectPropertiesResponse();
        }

        public Builder(ProjectPropertiesResponse defaults) {
            $ = new ProjectPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param assessmentSolutionId Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
         * 
         * @return builder
         * 
         */
        public Builder assessmentSolutionId(@Nullable String assessmentSolutionId) {
            $.assessmentSolutionId = assessmentSolutionId;
            return this;
        }

        /**
         * @param createdTimestamp Time when this project was created. Date-Time represented in ISO-8601 format.
         * 
         * @return builder
         * 
         */
        public Builder createdTimestamp(String createdTimestamp) {
            $.createdTimestamp = createdTimestamp;
            return this;
        }

        /**
         * @param customerStorageAccountArmId The ARM id of the storage account used for interactions when public access is disabled.
         * 
         * @return builder
         * 
         */
        public Builder customerStorageAccountArmId(@Nullable String customerStorageAccountArmId) {
            $.customerStorageAccountArmId = customerStorageAccountArmId;
            return this;
        }

        /**
         * @param customerWorkspaceId The ARM id of service map workspace created by customer.
         * 
         * @return builder
         * 
         */
        public Builder customerWorkspaceId(@Nullable String customerWorkspaceId) {
            $.customerWorkspaceId = customerWorkspaceId;
            return this;
        }

        /**
         * @param customerWorkspaceLocation Location of service map workspace created by customer.
         * 
         * @return builder
         * 
         */
        public Builder customerWorkspaceLocation(@Nullable String customerWorkspaceLocation) {
            $.customerWorkspaceLocation = customerWorkspaceLocation;
            return this;
        }

        /**
         * @param lastAssessmentTimestamp Time when last assessment was created. Date-Time represented in ISO-8601 format. This value will be null until assessment is created.
         * 
         * @return builder
         * 
         */
        public Builder lastAssessmentTimestamp(String lastAssessmentTimestamp) {
            $.lastAssessmentTimestamp = lastAssessmentTimestamp;
            return this;
        }

        /**
         * @param numberOfAssessments Number of assessments created in the project.
         * 
         * @return builder
         * 
         */
        public Builder numberOfAssessments(Integer numberOfAssessments) {
            $.numberOfAssessments = numberOfAssessments;
            return this;
        }

        /**
         * @param numberOfGroups Number of groups created in the project.
         * 
         * @return builder
         * 
         */
        public Builder numberOfGroups(Integer numberOfGroups) {
            $.numberOfGroups = numberOfGroups;
            return this;
        }

        /**
         * @param numberOfMachines Number of machines in the project.
         * 
         * @return builder
         * 
         */
        public Builder numberOfMachines(Integer numberOfMachines) {
            $.numberOfMachines = numberOfMachines;
            return this;
        }

        /**
         * @param privateEndpointConnections The list of private endpoint connections to the project.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointConnections(List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            $.privateEndpointConnections = privateEndpointConnections;
            return this;
        }

        /**
         * @param privateEndpointConnections The list of private endpoint connections to the project.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointConnections(PrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }

        /**
         * @param projectStatus Assessment project status.
         * 
         * @return builder
         * 
         */
        public Builder projectStatus(@Nullable String projectStatus) {
            $.projectStatus = projectStatus;
            return this;
        }

        /**
         * @param provisioningState Provisioning state of the project.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param publicNetworkAccess This value can be set to &#39;enabled&#39; to avoid breaking changes on existing customer resources and templates. If set to &#39;disabled&#39;, traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            $.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        /**
         * @param serviceEndpoint Endpoint at which the collector agent can call agent REST API.
         * 
         * @return builder
         * 
         */
        public Builder serviceEndpoint(String serviceEndpoint) {
            $.serviceEndpoint = serviceEndpoint;
            return this;
        }

        /**
         * @param updatedTimestamp Time when this project was last updated. Date-Time represented in ISO-8601 format.
         * 
         * @return builder
         * 
         */
        public Builder updatedTimestamp(String updatedTimestamp) {
            $.updatedTimestamp = updatedTimestamp;
            return this;
        }

        public ProjectPropertiesResponse build() {
            $.createdTimestamp = Objects.requireNonNull($.createdTimestamp, "expected parameter 'createdTimestamp' to be non-null");
            $.lastAssessmentTimestamp = Objects.requireNonNull($.lastAssessmentTimestamp, "expected parameter 'lastAssessmentTimestamp' to be non-null");
            $.numberOfAssessments = Objects.requireNonNull($.numberOfAssessments, "expected parameter 'numberOfAssessments' to be non-null");
            $.numberOfGroups = Objects.requireNonNull($.numberOfGroups, "expected parameter 'numberOfGroups' to be non-null");
            $.numberOfMachines = Objects.requireNonNull($.numberOfMachines, "expected parameter 'numberOfMachines' to be non-null");
            $.privateEndpointConnections = Objects.requireNonNull($.privateEndpointConnections, "expected parameter 'privateEndpointConnections' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.serviceEndpoint = Objects.requireNonNull($.serviceEndpoint, "expected parameter 'serviceEndpoint' to be non-null");
            $.updatedTimestamp = Objects.requireNonNull($.updatedTimestamp, "expected parameter 'updatedTimestamp' to be non-null");
            return $;
        }
    }

}
