// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.inputs.SkuZoneDetailArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SkuLocationInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final SkuLocationInfoArgs Empty = new SkuLocationInfoArgs();

    @Import(name="extendedLocations")
    private @Nullable Output<List<String>> extendedLocations;

    public Optional<Output<List<String>>> extendedLocations() {
        return Optional.ofNullable(this.extendedLocations);
    }

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="zoneDetails")
    private @Nullable Output<List<SkuZoneDetailArgs>> zoneDetails;

    public Optional<Output<List<SkuZoneDetailArgs>>> zoneDetails() {
        return Optional.ofNullable(this.zoneDetails);
    }

    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private SkuLocationInfoArgs() {}

    private SkuLocationInfoArgs(SkuLocationInfoArgs $) {
        this.extendedLocations = $.extendedLocations;
        this.location = $.location;
        this.type = $.type;
        this.zoneDetails = $.zoneDetails;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SkuLocationInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SkuLocationInfoArgs $;

        public Builder() {
            $ = new SkuLocationInfoArgs();
        }

        public Builder(SkuLocationInfoArgs defaults) {
            $ = new SkuLocationInfoArgs(Objects.requireNonNull(defaults));
        }

        public Builder extendedLocations(@Nullable Output<List<String>> extendedLocations) {
            $.extendedLocations = extendedLocations;
            return this;
        }

        public Builder extendedLocations(List<String> extendedLocations) {
            return extendedLocations(Output.of(extendedLocations));
        }

        public Builder extendedLocations(String... extendedLocations) {
            return extendedLocations(List.of(extendedLocations));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder zoneDetails(@Nullable Output<List<SkuZoneDetailArgs>> zoneDetails) {
            $.zoneDetails = zoneDetails;
            return this;
        }

        public Builder zoneDetails(List<SkuZoneDetailArgs> zoneDetails) {
            return zoneDetails(Output.of(zoneDetails));
        }

        public Builder zoneDetails(SkuZoneDetailArgs... zoneDetails) {
            return zoneDetails(List.of(zoneDetails));
        }

        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public SkuLocationInfoArgs build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
