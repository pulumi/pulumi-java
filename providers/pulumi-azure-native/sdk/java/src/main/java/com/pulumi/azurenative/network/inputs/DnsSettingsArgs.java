// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * DNS Proxy Settings in Firewall Policy.
 * 
 */
public final class DnsSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DnsSettingsArgs Empty = new DnsSettingsArgs();

    /**
     * Enable DNS Proxy on Firewalls attached to the Firewall Policy.
     * 
     */
    @Import(name="enableProxy")
    private @Nullable Output<Boolean> enableProxy;

    /**
     * @return Enable DNS Proxy on Firewalls attached to the Firewall Policy.
     * 
     */
    public Optional<Output<Boolean>> enableProxy() {
        return Optional.ofNullable(this.enableProxy);
    }

    /**
     * FQDNs in Network Rules are supported when set to true.
     * 
     */
    @Import(name="requireProxyForNetworkRules")
    private @Nullable Output<Boolean> requireProxyForNetworkRules;

    /**
     * @return FQDNs in Network Rules are supported when set to true.
     * 
     */
    public Optional<Output<Boolean>> requireProxyForNetworkRules() {
        return Optional.ofNullable(this.requireProxyForNetworkRules);
    }

    /**
     * List of Custom DNS Servers.
     * 
     */
    @Import(name="servers")
    private @Nullable Output<List<String>> servers;

    /**
     * @return List of Custom DNS Servers.
     * 
     */
    public Optional<Output<List<String>>> servers() {
        return Optional.ofNullable(this.servers);
    }

    private DnsSettingsArgs() {}

    private DnsSettingsArgs(DnsSettingsArgs $) {
        this.enableProxy = $.enableProxy;
        this.requireProxyForNetworkRules = $.requireProxyForNetworkRules;
        this.servers = $.servers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsSettingsArgs $;

        public Builder() {
            $ = new DnsSettingsArgs();
        }

        public Builder(DnsSettingsArgs defaults) {
            $ = new DnsSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableProxy Enable DNS Proxy on Firewalls attached to the Firewall Policy.
         * 
         * @return builder
         * 
         */
        public Builder enableProxy(@Nullable Output<Boolean> enableProxy) {
            $.enableProxy = enableProxy;
            return this;
        }

        /**
         * @param enableProxy Enable DNS Proxy on Firewalls attached to the Firewall Policy.
         * 
         * @return builder
         * 
         */
        public Builder enableProxy(Boolean enableProxy) {
            return enableProxy(Output.of(enableProxy));
        }

        /**
         * @param requireProxyForNetworkRules FQDNs in Network Rules are supported when set to true.
         * 
         * @return builder
         * 
         */
        public Builder requireProxyForNetworkRules(@Nullable Output<Boolean> requireProxyForNetworkRules) {
            $.requireProxyForNetworkRules = requireProxyForNetworkRules;
            return this;
        }

        /**
         * @param requireProxyForNetworkRules FQDNs in Network Rules are supported when set to true.
         * 
         * @return builder
         * 
         */
        public Builder requireProxyForNetworkRules(Boolean requireProxyForNetworkRules) {
            return requireProxyForNetworkRules(Output.of(requireProxyForNetworkRules));
        }

        /**
         * @param servers List of Custom DNS Servers.
         * 
         * @return builder
         * 
         */
        public Builder servers(@Nullable Output<List<String>> servers) {
            $.servers = servers;
            return this;
        }

        /**
         * @param servers List of Custom DNS Servers.
         * 
         * @return builder
         * 
         */
        public Builder servers(List<String> servers) {
            return servers(Output.of(servers));
        }

        /**
         * @param servers List of Custom DNS Servers.
         * 
         * @return builder
         * 
         */
        public Builder servers(String... servers) {
            return servers(List.of(servers));
        }

        public DnsSettingsArgs build() {
            return $;
        }
    }

}
