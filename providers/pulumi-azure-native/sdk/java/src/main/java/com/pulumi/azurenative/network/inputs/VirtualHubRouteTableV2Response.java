// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.VirtualHubRouteV2Response;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * VirtualHubRouteTableV2 Resource.
 * 
 */
public final class VirtualHubRouteTableV2Response extends com.pulumi.resources.InvokeArgs {

    public static final VirtualHubRouteTableV2Response Empty = new VirtualHubRouteTableV2Response();

    /**
     * List of all connections attached to this route table v2.
     * 
     */
    @Import(name="attachedConnections")
    private @Nullable List<String> attachedConnections;

    public Optional<List<String>> attachedConnections() {
        return Optional.ofNullable(this.attachedConnections);
    }

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    public String etag() {
        return this.etag;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The provisioning state of the virtual hub route table v2 resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * List of all routes.
     * 
     */
    @Import(name="routes")
    private @Nullable List<VirtualHubRouteV2Response> routes;

    public Optional<List<VirtualHubRouteV2Response>> routes() {
        return Optional.ofNullable(this.routes);
    }

    private VirtualHubRouteTableV2Response() {}

    private VirtualHubRouteTableV2Response(VirtualHubRouteTableV2Response $) {
        this.attachedConnections = $.attachedConnections;
        this.etag = $.etag;
        this.id = $.id;
        this.name = $.name;
        this.provisioningState = $.provisioningState;
        this.routes = $.routes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualHubRouteTableV2Response defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualHubRouteTableV2Response $;

        public Builder() {
            $ = new VirtualHubRouteTableV2Response();
        }

        public Builder(VirtualHubRouteTableV2Response defaults) {
            $ = new VirtualHubRouteTableV2Response(Objects.requireNonNull(defaults));
        }

        public Builder attachedConnections(@Nullable List<String> attachedConnections) {
            $.attachedConnections = attachedConnections;
            return this;
        }

        public Builder attachedConnections(String... attachedConnections) {
            return attachedConnections(List.of(attachedConnections));
        }

        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder routes(@Nullable List<VirtualHubRouteV2Response> routes) {
            $.routes = routes;
            return this;
        }

        public Builder routes(VirtualHubRouteV2Response... routes) {
            return routes(List.of(routes));
        }

        public VirtualHubRouteTableV2Response build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
