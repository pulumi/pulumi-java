// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RoleManagementPolicyRuleTargetResponse {
    /**
     * @return The caller of the setting.
     * 
     */
    private final @Nullable String caller;
    /**
     * @return The list of enforced settings.
     * 
     */
    private final @Nullable List<String> enforcedSettings;
    /**
     * @return The list of inheritable settings.
     * 
     */
    private final @Nullable List<String> inheritableSettings;
    /**
     * @return The assignment level to which rule is applied.
     * 
     */
    private final @Nullable String level;
    /**
     * @return The type of operation.
     * 
     */
    private final @Nullable List<String> operations;
    /**
     * @return The list of target objects.
     * 
     */
    private final @Nullable List<String> targetObjects;

    @CustomType.Constructor
    private RoleManagementPolicyRuleTargetResponse(
        @CustomType.Parameter("caller") @Nullable String caller,
        @CustomType.Parameter("enforcedSettings") @Nullable List<String> enforcedSettings,
        @CustomType.Parameter("inheritableSettings") @Nullable List<String> inheritableSettings,
        @CustomType.Parameter("level") @Nullable String level,
        @CustomType.Parameter("operations") @Nullable List<String> operations,
        @CustomType.Parameter("targetObjects") @Nullable List<String> targetObjects) {
        this.caller = caller;
        this.enforcedSettings = enforcedSettings;
        this.inheritableSettings = inheritableSettings;
        this.level = level;
        this.operations = operations;
        this.targetObjects = targetObjects;
    }

    /**
     * @return The caller of the setting.
     * 
     */
    public Optional<String> caller() {
        return Optional.ofNullable(this.caller);
    }
    /**
     * @return The list of enforced settings.
     * 
     */
    public List<String> enforcedSettings() {
        return this.enforcedSettings == null ? List.of() : this.enforcedSettings;
    }
    /**
     * @return The list of inheritable settings.
     * 
     */
    public List<String> inheritableSettings() {
        return this.inheritableSettings == null ? List.of() : this.inheritableSettings;
    }
    /**
     * @return The assignment level to which rule is applied.
     * 
     */
    public Optional<String> level() {
        return Optional.ofNullable(this.level);
    }
    /**
     * @return The type of operation.
     * 
     */
    public List<String> operations() {
        return this.operations == null ? List.of() : this.operations;
    }
    /**
     * @return The list of target objects.
     * 
     */
    public List<String> targetObjects() {
        return this.targetObjects == null ? List.of() : this.targetObjects;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoleManagementPolicyRuleTargetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String caller;
        private @Nullable List<String> enforcedSettings;
        private @Nullable List<String> inheritableSettings;
        private @Nullable String level;
        private @Nullable List<String> operations;
        private @Nullable List<String> targetObjects;

        public Builder() {
    	      // Empty
        }

        public Builder(RoleManagementPolicyRuleTargetResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caller = defaults.caller;
    	      this.enforcedSettings = defaults.enforcedSettings;
    	      this.inheritableSettings = defaults.inheritableSettings;
    	      this.level = defaults.level;
    	      this.operations = defaults.operations;
    	      this.targetObjects = defaults.targetObjects;
        }

        public Builder caller(@Nullable String caller) {
            this.caller = caller;
            return this;
        }
        public Builder enforcedSettings(@Nullable List<String> enforcedSettings) {
            this.enforcedSettings = enforcedSettings;
            return this;
        }
        public Builder enforcedSettings(String... enforcedSettings) {
            return enforcedSettings(List.of(enforcedSettings));
        }
        public Builder inheritableSettings(@Nullable List<String> inheritableSettings) {
            this.inheritableSettings = inheritableSettings;
            return this;
        }
        public Builder inheritableSettings(String... inheritableSettings) {
            return inheritableSettings(List.of(inheritableSettings));
        }
        public Builder level(@Nullable String level) {
            this.level = level;
            return this;
        }
        public Builder operations(@Nullable List<String> operations) {
            this.operations = operations;
            return this;
        }
        public Builder operations(String... operations) {
            return operations(List.of(operations));
        }
        public Builder targetObjects(@Nullable List<String> targetObjects) {
            this.targetObjects = targetObjects;
            return this;
        }
        public Builder targetObjects(String... targetObjects) {
            return targetObjects(List.of(targetObjects));
        }        public RoleManagementPolicyRuleTargetResponse build() {
            return new RoleManagementPolicyRuleTargetResponse(caller, enforcedSettings, inheritableSettings, level, operations, targetObjects);
        }
    }
}
