// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetElasticPoolArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetElasticPoolArgs Empty = new GetElasticPoolArgs();

    /**
     * The name of the elastic pool.
     * 
     */
    @Import(name="elasticPoolName", required=true)
    private Output<String> elasticPoolName;

    /**
     * @return The name of the elastic pool.
     * 
     */
    public Output<String> elasticPoolName() {
        return this.elasticPoolName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the server.
     * 
     */
    @Import(name="serverName", required=true)
    private Output<String> serverName;

    /**
     * @return The name of the server.
     * 
     */
    public Output<String> serverName() {
        return this.serverName;
    }

    private GetElasticPoolArgs() {}

    private GetElasticPoolArgs(GetElasticPoolArgs $) {
        this.elasticPoolName = $.elasticPoolName;
        this.resourceGroupName = $.resourceGroupName;
        this.serverName = $.serverName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetElasticPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetElasticPoolArgs $;

        public Builder() {
            $ = new GetElasticPoolArgs();
        }

        public Builder(GetElasticPoolArgs defaults) {
            $ = new GetElasticPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param elasticPoolName The name of the elastic pool.
         * 
         * @return builder
         * 
         */
        public Builder elasticPoolName(Output<String> elasticPoolName) {
            $.elasticPoolName = elasticPoolName;
            return this;
        }

        /**
         * @param elasticPoolName The name of the elastic pool.
         * 
         * @return builder
         * 
         */
        public Builder elasticPoolName(String elasticPoolName) {
            return elasticPoolName(Output.of(elasticPoolName));
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serverName The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder serverName(Output<String> serverName) {
            $.serverName = serverName;
            return this;
        }

        /**
         * @param serverName The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder serverName(String serverName) {
            return serverName(Output.of(serverName));
        }

        public GetElasticPoolArgs build() {
            $.elasticPoolName = Objects.requireNonNull($.elasticPoolName, "expected parameter 'elasticPoolName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serverName = Objects.requireNonNull($.serverName, "expected parameter 'serverName' to be non-null");
            return $;
        }
    }

}
