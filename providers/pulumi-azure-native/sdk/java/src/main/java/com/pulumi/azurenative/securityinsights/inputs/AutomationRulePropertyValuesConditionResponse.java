// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.inputs;

import com.pulumi.azurenative.securityinsights.inputs.AutomationRulePropertyValuesConditionResponseConditionProperties;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Describes an automation rule condition that evaluates a property&#39;s value
 * 
 */
public final class AutomationRulePropertyValuesConditionResponse extends com.pulumi.resources.InvokeArgs {

    public static final AutomationRulePropertyValuesConditionResponse Empty = new AutomationRulePropertyValuesConditionResponse();

    /**
     * The configuration of the automation rule condition
     * 
     */
    @Import(name="conditionProperties", required=true)
    private AutomationRulePropertyValuesConditionResponseConditionProperties conditionProperties;

    public AutomationRulePropertyValuesConditionResponseConditionProperties conditionProperties() {
        return this.conditionProperties;
    }

    /**
     * The type of the automation rule condition
     * Expected value is &#39;Property&#39;.
     * 
     */
    @Import(name="conditionType", required=true)
    private String conditionType;

    public String conditionType() {
        return this.conditionType;
    }

    private AutomationRulePropertyValuesConditionResponse() {}

    private AutomationRulePropertyValuesConditionResponse(AutomationRulePropertyValuesConditionResponse $) {
        this.conditionProperties = $.conditionProperties;
        this.conditionType = $.conditionType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationRulePropertyValuesConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationRulePropertyValuesConditionResponse $;

        public Builder() {
            $ = new AutomationRulePropertyValuesConditionResponse();
        }

        public Builder(AutomationRulePropertyValuesConditionResponse defaults) {
            $ = new AutomationRulePropertyValuesConditionResponse(Objects.requireNonNull(defaults));
        }

        public Builder conditionProperties(AutomationRulePropertyValuesConditionResponseConditionProperties conditionProperties) {
            $.conditionProperties = conditionProperties;
            return this;
        }

        public Builder conditionType(String conditionType) {
            $.conditionType = conditionType;
            return this;
        }

        public AutomationRulePropertyValuesConditionResponse build() {
            $.conditionProperties = Objects.requireNonNull($.conditionProperties, "expected parameter 'conditionProperties' to be non-null");
            $.conditionType = Codegen.stringProp("conditionType").arg($.conditionType).require();
            return $;
        }
    }

}
