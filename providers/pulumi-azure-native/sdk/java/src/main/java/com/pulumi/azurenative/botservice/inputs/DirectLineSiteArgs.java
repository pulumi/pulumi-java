// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A site for the Direct Line channel
 * 
 */
public final class DirectLineSiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final DirectLineSiteArgs Empty = new DirectLineSiteArgs();

    /**
     * Whether this site is enabled for block user upload.
     * 
     */
    @Import(name="isBlockUserUploadEnabled")
    private @Nullable Output<Boolean> isBlockUserUploadEnabled;

    /**
     * @return Whether this site is enabled for block user upload.
     * 
     */
    public Optional<Output<Boolean>> isBlockUserUploadEnabled() {
        return Optional.ofNullable(this.isBlockUserUploadEnabled);
    }

    /**
     * Whether this site is enabled for DirectLine channel.
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return Whether this site is enabled for DirectLine channel.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * Whether this site is enabled for authentication with Bot Framework.
     * 
     */
    @Import(name="isSecureSiteEnabled")
    private @Nullable Output<Boolean> isSecureSiteEnabled;

    /**
     * @return Whether this site is enabled for authentication with Bot Framework.
     * 
     */
    public Optional<Output<Boolean>> isSecureSiteEnabled() {
        return Optional.ofNullable(this.isSecureSiteEnabled);
    }

    /**
     * Whether this site is enabled for Bot Framework V1 protocol.
     * 
     */
    @Import(name="isV1Enabled", required=true)
    private Output<Boolean> isV1Enabled;

    /**
     * @return Whether this site is enabled for Bot Framework V1 protocol.
     * 
     */
    public Output<Boolean> isV1Enabled() {
        return this.isV1Enabled;
    }

    /**
     * Whether this site is enabled for Bot Framework V1 protocol.
     * 
     */
    @Import(name="isV3Enabled", required=true)
    private Output<Boolean> isV3Enabled;

    /**
     * @return Whether this site is enabled for Bot Framework V1 protocol.
     * 
     */
    public Output<Boolean> isV3Enabled() {
        return this.isV3Enabled;
    }

    /**
     * Site name
     * 
     */
    @Import(name="siteName", required=true)
    private Output<String> siteName;

    /**
     * @return Site name
     * 
     */
    public Output<String> siteName() {
        return this.siteName;
    }

    /**
     * List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
     * 
     */
    @Import(name="trustedOrigins")
    private @Nullable Output<List<String>> trustedOrigins;

    /**
     * @return List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
     * 
     */
    public Optional<Output<List<String>>> trustedOrigins() {
        return Optional.ofNullable(this.trustedOrigins);
    }

    private DirectLineSiteArgs() {}

    private DirectLineSiteArgs(DirectLineSiteArgs $) {
        this.isBlockUserUploadEnabled = $.isBlockUserUploadEnabled;
        this.isEnabled = $.isEnabled;
        this.isSecureSiteEnabled = $.isSecureSiteEnabled;
        this.isV1Enabled = $.isV1Enabled;
        this.isV3Enabled = $.isV3Enabled;
        this.siteName = $.siteName;
        this.trustedOrigins = $.trustedOrigins;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectLineSiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectLineSiteArgs $;

        public Builder() {
            $ = new DirectLineSiteArgs();
        }

        public Builder(DirectLineSiteArgs defaults) {
            $ = new DirectLineSiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isBlockUserUploadEnabled Whether this site is enabled for block user upload.
         * 
         * @return builder
         * 
         */
        public Builder isBlockUserUploadEnabled(@Nullable Output<Boolean> isBlockUserUploadEnabled) {
            $.isBlockUserUploadEnabled = isBlockUserUploadEnabled;
            return this;
        }

        /**
         * @param isBlockUserUploadEnabled Whether this site is enabled for block user upload.
         * 
         * @return builder
         * 
         */
        public Builder isBlockUserUploadEnabled(Boolean isBlockUserUploadEnabled) {
            return isBlockUserUploadEnabled(Output.of(isBlockUserUploadEnabled));
        }

        /**
         * @param isEnabled Whether this site is enabled for DirectLine channel.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Whether this site is enabled for DirectLine channel.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param isSecureSiteEnabled Whether this site is enabled for authentication with Bot Framework.
         * 
         * @return builder
         * 
         */
        public Builder isSecureSiteEnabled(@Nullable Output<Boolean> isSecureSiteEnabled) {
            $.isSecureSiteEnabled = isSecureSiteEnabled;
            return this;
        }

        /**
         * @param isSecureSiteEnabled Whether this site is enabled for authentication with Bot Framework.
         * 
         * @return builder
         * 
         */
        public Builder isSecureSiteEnabled(Boolean isSecureSiteEnabled) {
            return isSecureSiteEnabled(Output.of(isSecureSiteEnabled));
        }

        /**
         * @param isV1Enabled Whether this site is enabled for Bot Framework V1 protocol.
         * 
         * @return builder
         * 
         */
        public Builder isV1Enabled(Output<Boolean> isV1Enabled) {
            $.isV1Enabled = isV1Enabled;
            return this;
        }

        /**
         * @param isV1Enabled Whether this site is enabled for Bot Framework V1 protocol.
         * 
         * @return builder
         * 
         */
        public Builder isV1Enabled(Boolean isV1Enabled) {
            return isV1Enabled(Output.of(isV1Enabled));
        }

        /**
         * @param isV3Enabled Whether this site is enabled for Bot Framework V1 protocol.
         * 
         * @return builder
         * 
         */
        public Builder isV3Enabled(Output<Boolean> isV3Enabled) {
            $.isV3Enabled = isV3Enabled;
            return this;
        }

        /**
         * @param isV3Enabled Whether this site is enabled for Bot Framework V1 protocol.
         * 
         * @return builder
         * 
         */
        public Builder isV3Enabled(Boolean isV3Enabled) {
            return isV3Enabled(Output.of(isV3Enabled));
        }

        /**
         * @param siteName Site name
         * 
         * @return builder
         * 
         */
        public Builder siteName(Output<String> siteName) {
            $.siteName = siteName;
            return this;
        }

        /**
         * @param siteName Site name
         * 
         * @return builder
         * 
         */
        public Builder siteName(String siteName) {
            return siteName(Output.of(siteName));
        }

        /**
         * @param trustedOrigins List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
         * 
         * @return builder
         * 
         */
        public Builder trustedOrigins(@Nullable Output<List<String>> trustedOrigins) {
            $.trustedOrigins = trustedOrigins;
            return this;
        }

        /**
         * @param trustedOrigins List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
         * 
         * @return builder
         * 
         */
        public Builder trustedOrigins(List<String> trustedOrigins) {
            return trustedOrigins(Output.of(trustedOrigins));
        }

        /**
         * @param trustedOrigins List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
         * 
         * @return builder
         * 
         */
        public Builder trustedOrigins(String... trustedOrigins) {
            return trustedOrigins(List.of(trustedOrigins));
        }

        public DirectLineSiteArgs build() {
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            $.isV1Enabled = Objects.requireNonNull($.isV1Enabled, "expected parameter 'isV1Enabled' to be non-null");
            $.isV3Enabled = Objects.requireNonNull($.isV3Enabled, "expected parameter 'isV3Enabled' to be non-null");
            $.siteName = Objects.requireNonNull($.siteName, "expected parameter 'siteName' to be non-null");
            return $;
        }
    }

}
