// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datashare.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * A ShareSubscriptionSynchronization data transfer object.
 * 
 */
public final class ShareSubscriptionSynchronizationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ShareSubscriptionSynchronizationResponse Empty = new ShareSubscriptionSynchronizationResponse();

    /**
     * Synchronization duration
     * 
     */
    @Import(name="durationMs", required=true)
    private Integer durationMs;

    public Integer durationMs() {
        return this.durationMs;
    }

    /**
     * End time of synchronization
     * 
     */
    @Import(name="endTime", required=true)
    private String endTime;

    public String endTime() {
        return this.endTime;
    }

    /**
     * message of Synchronization
     * 
     */
    @Import(name="message", required=true)
    private String message;

    public String message() {
        return this.message;
    }

    /**
     * start time of synchronization
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    public String startTime() {
        return this.startTime;
    }

    /**
     * Raw Status
     * 
     */
    @Import(name="status", required=true)
    private String status;

    public String status() {
        return this.status;
    }

    /**
     * Synchronization id
     * 
     */
    @Import(name="synchronizationId", required=true)
    private String synchronizationId;

    public String synchronizationId() {
        return this.synchronizationId;
    }

    /**
     * Synchronization Mode
     * 
     */
    @Import(name="synchronizationMode", required=true)
    private String synchronizationMode;

    public String synchronizationMode() {
        return this.synchronizationMode;
    }

    private ShareSubscriptionSynchronizationResponse() {}

    private ShareSubscriptionSynchronizationResponse(ShareSubscriptionSynchronizationResponse $) {
        this.durationMs = $.durationMs;
        this.endTime = $.endTime;
        this.message = $.message;
        this.startTime = $.startTime;
        this.status = $.status;
        this.synchronizationId = $.synchronizationId;
        this.synchronizationMode = $.synchronizationMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShareSubscriptionSynchronizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShareSubscriptionSynchronizationResponse $;

        public Builder() {
            $ = new ShareSubscriptionSynchronizationResponse();
        }

        public Builder(ShareSubscriptionSynchronizationResponse defaults) {
            $ = new ShareSubscriptionSynchronizationResponse(Objects.requireNonNull(defaults));
        }

        public Builder durationMs(Integer durationMs) {
            $.durationMs = durationMs;
            return this;
        }

        public Builder endTime(String endTime) {
            $.endTime = endTime;
            return this;
        }

        public Builder message(String message) {
            $.message = message;
            return this;
        }

        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public Builder synchronizationId(String synchronizationId) {
            $.synchronizationId = synchronizationId;
            return this;
        }

        public Builder synchronizationMode(String synchronizationMode) {
            $.synchronizationMode = synchronizationMode;
            return this;
        }

        public ShareSubscriptionSynchronizationResponse build() {
            $.durationMs = Objects.requireNonNull($.durationMs, "expected parameter 'durationMs' to be non-null");
            $.endTime = Objects.requireNonNull($.endTime, "expected parameter 'endTime' to be non-null");
            $.message = Objects.requireNonNull($.message, "expected parameter 'message' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.synchronizationId = Objects.requireNonNull($.synchronizationId, "expected parameter 'synchronizationId' to be non-null");
            $.synchronizationMode = Objects.requireNonNull($.synchronizationMode, "expected parameter 'synchronizationMode' to be non-null");
            return $;
        }
    }

}
