// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.inputs.RequestUriMatchConditionParametersResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Defines the RequestUri condition for the delivery rule.
 * 
 */
public final class DeliveryRuleRequestUriConditionResponse extends com.pulumi.resources.InvokeArgs {

    public static final DeliveryRuleRequestUriConditionResponse Empty = new DeliveryRuleRequestUriConditionResponse();

    /**
     * The name of the condition for the delivery rule.
     * Expected value is &#39;RequestUri&#39;.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Defines the parameters for the condition.
     * 
     */
    @Import(name="parameters", required=true)
    private RequestUriMatchConditionParametersResponse parameters;

    public RequestUriMatchConditionParametersResponse parameters() {
        return this.parameters;
    }

    private DeliveryRuleRequestUriConditionResponse() {}

    private DeliveryRuleRequestUriConditionResponse(DeliveryRuleRequestUriConditionResponse $) {
        this.name = $.name;
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryRuleRequestUriConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryRuleRequestUriConditionResponse $;

        public Builder() {
            $ = new DeliveryRuleRequestUriConditionResponse();
        }

        public Builder(DeliveryRuleRequestUriConditionResponse defaults) {
            $ = new DeliveryRuleRequestUriConditionResponse(Objects.requireNonNull(defaults));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder parameters(RequestUriMatchConditionParametersResponse parameters) {
            $.parameters = parameters;
            return this;
        }

        public DeliveryRuleRequestUriConditionResponse build() {
            $.name = Codegen.stringProp("name").arg($.name).require();
            $.parameters = Objects.requireNonNull($.parameters, "expected parameter 'parameters' to be non-null");
            return $;
        }
    }

}
