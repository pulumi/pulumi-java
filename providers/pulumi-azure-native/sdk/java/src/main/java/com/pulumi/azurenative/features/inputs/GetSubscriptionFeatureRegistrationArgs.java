// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.features.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetSubscriptionFeatureRegistrationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubscriptionFeatureRegistrationArgs Empty = new GetSubscriptionFeatureRegistrationArgs();

    /**
     * The feature name.
     * 
     */
    @Import(name="featureName", required=true)
    private Output<String> featureName;

    /**
     * @return The feature name.
     * 
     */
    public Output<String> featureName() {
        return this.featureName;
    }

    /**
     * The provider namespace.
     * 
     */
    @Import(name="providerNamespace", required=true)
    private Output<String> providerNamespace;

    /**
     * @return The provider namespace.
     * 
     */
    public Output<String> providerNamespace() {
        return this.providerNamespace;
    }

    private GetSubscriptionFeatureRegistrationArgs() {}

    private GetSubscriptionFeatureRegistrationArgs(GetSubscriptionFeatureRegistrationArgs $) {
        this.featureName = $.featureName;
        this.providerNamespace = $.providerNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubscriptionFeatureRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubscriptionFeatureRegistrationArgs $;

        public Builder() {
            $ = new GetSubscriptionFeatureRegistrationArgs();
        }

        public Builder(GetSubscriptionFeatureRegistrationArgs defaults) {
            $ = new GetSubscriptionFeatureRegistrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param featureName The feature name.
         * 
         * @return builder
         * 
         */
        public Builder featureName(Output<String> featureName) {
            $.featureName = featureName;
            return this;
        }

        /**
         * @param featureName The feature name.
         * 
         * @return builder
         * 
         */
        public Builder featureName(String featureName) {
            return featureName(Output.of(featureName));
        }

        /**
         * @param providerNamespace The provider namespace.
         * 
         * @return builder
         * 
         */
        public Builder providerNamespace(Output<String> providerNamespace) {
            $.providerNamespace = providerNamespace;
            return this;
        }

        /**
         * @param providerNamespace The provider namespace.
         * 
         * @return builder
         * 
         */
        public Builder providerNamespace(String providerNamespace) {
            return providerNamespace(Output.of(providerNamespace));
        }

        public GetSubscriptionFeatureRegistrationArgs build() {
            $.featureName = Objects.requireNonNull($.featureName, "expected parameter 'featureName' to be non-null");
            $.providerNamespace = Objects.requireNonNull($.providerNamespace, "expected parameter 'providerNamespace' to be non-null");
            return $;
        }
    }

}
