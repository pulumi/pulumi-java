// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.inputs.OperationsDefinitionDisplayArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of an Operation.
 * 
 */
public final class OperationsDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final OperationsDefinitionArgs Empty = new OperationsDefinitionArgs();

    @Import(name="actionType")
    private @Nullable Output<String> actionType;

    public Optional<Output<String>> actionType() {
        return Optional.ofNullable(this.actionType);
    }

    /**
     * Display information of the operation.
     * 
     */
    @Import(name="display", required=true)
    private Output<OperationsDefinitionDisplayArgs> display;

    public Output<OperationsDefinitionDisplayArgs> display() {
        return this.display;
    }

    /**
     * Indicates whether the operation applies to data-plane.
     * 
     */
    @Import(name="isDataAction")
    private @Nullable Output<Boolean> isDataAction;

    public Optional<Output<Boolean>> isDataAction() {
        return Optional.ofNullable(this.isDataAction);
    }

    /**
     * Name of the operation.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="origin")
    private @Nullable Output<String> origin;

    public Optional<Output<String>> origin() {
        return Optional.ofNullable(this.origin);
    }

    @Import(name="properties")
    private @Nullable Output<Object> properties;

    public Optional<Output<Object>> properties() {
        return Optional.ofNullable(this.properties);
    }

    private OperationsDefinitionArgs() {}

    private OperationsDefinitionArgs(OperationsDefinitionArgs $) {
        this.actionType = $.actionType;
        this.display = $.display;
        this.isDataAction = $.isDataAction;
        this.name = $.name;
        this.origin = $.origin;
        this.properties = $.properties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OperationsDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OperationsDefinitionArgs $;

        public Builder() {
            $ = new OperationsDefinitionArgs();
        }

        public Builder(OperationsDefinitionArgs defaults) {
            $ = new OperationsDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder actionType(@Nullable Output<String> actionType) {
            $.actionType = actionType;
            return this;
        }

        public Builder actionType(String actionType) {
            return actionType(Output.of(actionType));
        }

        public Builder display(Output<OperationsDefinitionDisplayArgs> display) {
            $.display = display;
            return this;
        }

        public Builder display(OperationsDefinitionDisplayArgs display) {
            return display(Output.of(display));
        }

        public Builder isDataAction(@Nullable Output<Boolean> isDataAction) {
            $.isDataAction = isDataAction;
            return this;
        }

        public Builder isDataAction(Boolean isDataAction) {
            return isDataAction(Output.of(isDataAction));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder origin(@Nullable Output<String> origin) {
            $.origin = origin;
            return this;
        }

        public Builder origin(String origin) {
            return origin(Output.of(origin));
        }

        public Builder properties(@Nullable Output<Object> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(Object properties) {
            return properties(Output.of(properties));
        }

        public OperationsDefinitionArgs build() {
            $.display = Objects.requireNonNull($.display, "expected parameter 'display' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
