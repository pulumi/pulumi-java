// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.inputs.OperationsDefinitionDisplayArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Properties of an Operation.
 * 
 */
public final class OperationsDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final OperationsDefinitionArgs Empty = new OperationsDefinitionArgs();

    @Import(name="actionType")
      private final @Nullable Output<String> actionType;

    public Output<String> actionType() {
        return this.actionType == null ? Codegen.empty() : this.actionType;
    }

    /**
     * Display information of the operation.
     * 
     */
    @Import(name="display", required=true)
      private final Output<OperationsDefinitionDisplayArgs> display;

    public Output<OperationsDefinitionDisplayArgs> display() {
        return this.display;
    }

    /**
     * Indicates whether the operation applies to data-plane.
     * 
     */
    @Import(name="isDataAction")
      private final @Nullable Output<Boolean> isDataAction;

    public Output<Boolean> isDataAction() {
        return this.isDataAction == null ? Codegen.empty() : this.isDataAction;
    }

    /**
     * Name of the operation.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="origin")
      private final @Nullable Output<String> origin;

    public Output<String> origin() {
        return this.origin == null ? Codegen.empty() : this.origin;
    }

    @Import(name="properties")
      private final @Nullable Output<Object> properties;

    public Output<Object> properties() {
        return this.properties == null ? Codegen.empty() : this.properties;
    }

    public OperationsDefinitionArgs(
        @Nullable Output<String> actionType,
        Output<OperationsDefinitionDisplayArgs> display,
        @Nullable Output<Boolean> isDataAction,
        Output<String> name,
        @Nullable Output<String> origin,
        @Nullable Output<Object> properties) {
        this.actionType = actionType;
        this.display = Objects.requireNonNull(display, "expected parameter 'display' to be non-null");
        this.isDataAction = isDataAction;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.origin = origin;
        this.properties = properties;
    }

    private OperationsDefinitionArgs() {
        this.actionType = Codegen.empty();
        this.display = Codegen.empty();
        this.isDataAction = Codegen.empty();
        this.name = Codegen.empty();
        this.origin = Codegen.empty();
        this.properties = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OperationsDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> actionType;
        private Output<OperationsDefinitionDisplayArgs> display;
        private @Nullable Output<Boolean> isDataAction;
        private Output<String> name;
        private @Nullable Output<String> origin;
        private @Nullable Output<Object> properties;

        public Builder() {
    	      // Empty
        }

        public Builder(OperationsDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionType = defaults.actionType;
    	      this.display = defaults.display;
    	      this.isDataAction = defaults.isDataAction;
    	      this.name = defaults.name;
    	      this.origin = defaults.origin;
    	      this.properties = defaults.properties;
        }

        public Builder actionType(@Nullable Output<String> actionType) {
            this.actionType = actionType;
            return this;
        }
        public Builder actionType(@Nullable String actionType) {
            this.actionType = Codegen.ofNullable(actionType);
            return this;
        }
        public Builder display(Output<OperationsDefinitionDisplayArgs> display) {
            this.display = Objects.requireNonNull(display);
            return this;
        }
        public Builder display(OperationsDefinitionDisplayArgs display) {
            this.display = Output.of(Objects.requireNonNull(display));
            return this;
        }
        public Builder isDataAction(@Nullable Output<Boolean> isDataAction) {
            this.isDataAction = isDataAction;
            return this;
        }
        public Builder isDataAction(@Nullable Boolean isDataAction) {
            this.isDataAction = Codegen.ofNullable(isDataAction);
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder origin(@Nullable Output<String> origin) {
            this.origin = origin;
            return this;
        }
        public Builder origin(@Nullable String origin) {
            this.origin = Codegen.ofNullable(origin);
            return this;
        }
        public Builder properties(@Nullable Output<Object> properties) {
            this.properties = properties;
            return this;
        }
        public Builder properties(@Nullable Object properties) {
            this.properties = Codegen.ofNullable(properties);
            return this;
        }        public OperationsDefinitionArgs build() {
            return new OperationsDefinitionArgs(actionType, display, isDataAction, name, origin, properties);
        }
    }
}
