// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetSubscriptionNetworkManagerConnectionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubscriptionNetworkManagerConnectionPlainArgs Empty = new GetSubscriptionNetworkManagerConnectionPlainArgs();

    /**
     * Name for the network manager connection.
     * 
     */
    @Import(name="networkManagerConnectionName", required=true)
    private String networkManagerConnectionName;

    /**
     * @return Name for the network manager connection.
     * 
     */
    public String networkManagerConnectionName() {
        return this.networkManagerConnectionName;
    }

    private GetSubscriptionNetworkManagerConnectionPlainArgs() {}

    private GetSubscriptionNetworkManagerConnectionPlainArgs(GetSubscriptionNetworkManagerConnectionPlainArgs $) {
        this.networkManagerConnectionName = $.networkManagerConnectionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubscriptionNetworkManagerConnectionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubscriptionNetworkManagerConnectionPlainArgs $;

        public Builder() {
            $ = new GetSubscriptionNetworkManagerConnectionPlainArgs();
        }

        public Builder(GetSubscriptionNetworkManagerConnectionPlainArgs defaults) {
            $ = new GetSubscriptionNetworkManagerConnectionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkManagerConnectionName Name for the network manager connection.
         * 
         * @return builder
         * 
         */
        public Builder networkManagerConnectionName(String networkManagerConnectionName) {
            $.networkManagerConnectionName = networkManagerConnectionName;
            return this;
        }

        public GetSubscriptionNetworkManagerConnectionPlainArgs build() {
            $.networkManagerConnectionName = Objects.requireNonNull($.networkManagerConnectionName, "expected parameter 'networkManagerConnectionName' to be non-null");
            return $;
        }
    }

}
