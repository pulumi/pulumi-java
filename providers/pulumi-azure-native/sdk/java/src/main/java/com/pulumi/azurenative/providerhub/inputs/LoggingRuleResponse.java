// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.inputs.LoggingRuleResponseHiddenPropertyPaths;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoggingRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final LoggingRuleResponse Empty = new LoggingRuleResponse();

    @Import(name="action", required=true)
    private String action;

    public String action() {
        return this.action;
    }

    @Import(name="detailLevel", required=true)
    private String detailLevel;

    public String detailLevel() {
        return this.detailLevel;
    }

    @Import(name="direction", required=true)
    private String direction;

    public String direction() {
        return this.direction;
    }

    @Import(name="hiddenPropertyPaths")
    private @Nullable LoggingRuleResponseHiddenPropertyPaths hiddenPropertyPaths;

    public Optional<LoggingRuleResponseHiddenPropertyPaths> hiddenPropertyPaths() {
        return Optional.ofNullable(this.hiddenPropertyPaths);
    }

    private LoggingRuleResponse() {}

    private LoggingRuleResponse(LoggingRuleResponse $) {
        this.action = $.action;
        this.detailLevel = $.detailLevel;
        this.direction = $.direction;
        this.hiddenPropertyPaths = $.hiddenPropertyPaths;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggingRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingRuleResponse $;

        public Builder() {
            $ = new LoggingRuleResponse();
        }

        public Builder(LoggingRuleResponse defaults) {
            $ = new LoggingRuleResponse(Objects.requireNonNull(defaults));
        }

        public Builder action(String action) {
            $.action = action;
            return this;
        }

        public Builder detailLevel(String detailLevel) {
            $.detailLevel = detailLevel;
            return this;
        }

        public Builder direction(String direction) {
            $.direction = direction;
            return this;
        }

        public Builder hiddenPropertyPaths(@Nullable LoggingRuleResponseHiddenPropertyPaths hiddenPropertyPaths) {
            $.hiddenPropertyPaths = hiddenPropertyPaths;
            return this;
        }

        public LoggingRuleResponse build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.detailLevel = Objects.requireNonNull($.detailLevel, "expected parameter 'detailLevel' to be non-null");
            $.direction = Objects.requireNonNull($.direction, "expected parameter 'direction' to be non-null");
            return $;
        }
    }

}
