// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A custom preset for encoding audio with the AAC codec.
 * 
 */
public final class AudioEncoderAacArgs extends com.pulumi.resources.ResourceArgs {

    public static final AudioEncoderAacArgs Empty = new AudioEncoderAacArgs();

    /**
     * Bitrate, in kilobits per second or Kbps, at which audio should be encoded (2-channel stereo audio at a sampling rate of 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate of the input audio is used.
     * 
     */
    @Import(name="bitrateKbps")
    private @Nullable Output<String> bitrateKbps;

    public Optional<Output<String>> bitrateKbps() {
        return Optional.ofNullable(this.bitrateKbps);
    }

    /**
     * The discriminator for derived types.
     * Expected value is &#39;#Microsoft.VideoAnalyzer.AudioEncoderAac&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private AudioEncoderAacArgs() {}

    private AudioEncoderAacArgs(AudioEncoderAacArgs $) {
        this.bitrateKbps = $.bitrateKbps;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AudioEncoderAacArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AudioEncoderAacArgs $;

        public Builder() {
            $ = new AudioEncoderAacArgs();
        }

        public Builder(AudioEncoderAacArgs defaults) {
            $ = new AudioEncoderAacArgs(Objects.requireNonNull(defaults));
        }

        public Builder bitrateKbps(@Nullable Output<String> bitrateKbps) {
            $.bitrateKbps = bitrateKbps;
            return this;
        }

        public Builder bitrateKbps(String bitrateKbps) {
            return bitrateKbps(Output.of(bitrateKbps));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AudioEncoderAacArgs build() {
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
