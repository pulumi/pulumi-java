// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.
 * 
 */
public final class VirtualSCSIControllerResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualSCSIControllerResponse Empty = new VirtualSCSIControllerResponse();

    /**
     * Gets or sets the bus number of the controller.
     * 
     */
    @Import(name="busNumber")
    private @Nullable Integer busNumber;

    public Optional<Integer> busNumber() {
        return Optional.ofNullable(this.busNumber);
    }

    /**
     * Gets or sets the key of the controller.
     * 
     */
    @Import(name="controllerKey")
    private @Nullable Integer controllerKey;

    public Optional<Integer> controllerKey() {
        return Optional.ofNullable(this.controllerKey);
    }

    /**
     * Gets or sets the SCSI controller unit number.
     * 
     */
    @Import(name="scsiCtlrUnitNumber")
    private @Nullable Integer scsiCtlrUnitNumber;

    public Optional<Integer> scsiCtlrUnitNumber() {
        return Optional.ofNullable(this.scsiCtlrUnitNumber);
    }

    /**
     * Gets or sets the sharing mode.
     * 
     */
    @Import(name="sharing")
    private @Nullable String sharing;

    public Optional<String> sharing() {
        return Optional.ofNullable(this.sharing);
    }

    /**
     * Gets or sets the controller type.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private VirtualSCSIControllerResponse() {}

    private VirtualSCSIControllerResponse(VirtualSCSIControllerResponse $) {
        this.busNumber = $.busNumber;
        this.controllerKey = $.controllerKey;
        this.scsiCtlrUnitNumber = $.scsiCtlrUnitNumber;
        this.sharing = $.sharing;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualSCSIControllerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualSCSIControllerResponse $;

        public Builder() {
            $ = new VirtualSCSIControllerResponse();
        }

        public Builder(VirtualSCSIControllerResponse defaults) {
            $ = new VirtualSCSIControllerResponse(Objects.requireNonNull(defaults));
        }

        public Builder busNumber(@Nullable Integer busNumber) {
            $.busNumber = busNumber;
            return this;
        }

        public Builder controllerKey(@Nullable Integer controllerKey) {
            $.controllerKey = controllerKey;
            return this;
        }

        public Builder scsiCtlrUnitNumber(@Nullable Integer scsiCtlrUnitNumber) {
            $.scsiCtlrUnitNumber = scsiCtlrUnitNumber;
            return this;
        }

        public Builder sharing(@Nullable String sharing) {
            $.sharing = sharing;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public VirtualSCSIControllerResponse build() {
            return $;
        }
    }

}
