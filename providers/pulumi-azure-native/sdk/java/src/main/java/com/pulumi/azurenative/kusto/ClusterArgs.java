// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.kusto;

import com.pulumi.azurenative.kusto.enums.EngineType;
import com.pulumi.azurenative.kusto.inputs.AzureSkuArgs;
import com.pulumi.azurenative.kusto.inputs.IdentityArgs;
import com.pulumi.azurenative.kusto.inputs.KeyVaultPropertiesArgs;
import com.pulumi.azurenative.kusto.inputs.OptimizedAutoscaleArgs;
import com.pulumi.azurenative.kusto.inputs.TrustedExternalTenantArgs;
import com.pulumi.azurenative.kusto.inputs.VirtualNetworkConfigurationArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * The name of the Kusto cluster.
     * 
     */
    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    /**
     * @return The name of the Kusto cluster.
     * 
     */
    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    /**
     * A boolean value that indicates if the cluster&#39;s disks are encrypted.
     * 
     */
    @Import(name="enableDiskEncryption")
    private @Nullable Output<Boolean> enableDiskEncryption;

    /**
     * @return A boolean value that indicates if the cluster&#39;s disks are encrypted.
     * 
     */
    public Optional<Output<Boolean>> enableDiskEncryption() {
        return Optional.ofNullable(this.enableDiskEncryption);
    }

    /**
     * A boolean value that indicates if double encryption is enabled.
     * 
     */
    @Import(name="enableDoubleEncryption")
    private @Nullable Output<Boolean> enableDoubleEncryption;

    /**
     * @return A boolean value that indicates if double encryption is enabled.
     * 
     */
    public Optional<Output<Boolean>> enableDoubleEncryption() {
        return Optional.ofNullable(this.enableDoubleEncryption);
    }

    /**
     * A boolean value that indicates if the purge operations are enabled.
     * 
     */
    @Import(name="enablePurge")
    private @Nullable Output<Boolean> enablePurge;

    /**
     * @return A boolean value that indicates if the purge operations are enabled.
     * 
     */
    public Optional<Output<Boolean>> enablePurge() {
        return Optional.ofNullable(this.enablePurge);
    }

    /**
     * A boolean value that indicates if the streaming ingest is enabled.
     * 
     */
    @Import(name="enableStreamingIngest")
    private @Nullable Output<Boolean> enableStreamingIngest;

    /**
     * @return A boolean value that indicates if the streaming ingest is enabled.
     * 
     */
    public Optional<Output<Boolean>> enableStreamingIngest() {
        return Optional.ofNullable(this.enableStreamingIngest);
    }

    /**
     * The engine type
     * 
     */
    @Import(name="engineType")
    private @Nullable Output<Either<String,EngineType>> engineType;

    /**
     * @return The engine type
     * 
     */
    public Optional<Output<Either<String,EngineType>>> engineType() {
        return Optional.ofNullable(this.engineType);
    }

    /**
     * The identity of the cluster, if configured.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<IdentityArgs> identity;

    /**
     * @return The identity of the cluster, if configured.
     * 
     */
    public Optional<Output<IdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * KeyVault properties for the cluster encryption.
     * 
     */
    @Import(name="keyVaultProperties")
    private @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties;

    /**
     * @return KeyVault properties for the cluster encryption.
     * 
     */
    public Optional<Output<KeyVaultPropertiesArgs>> keyVaultProperties() {
        return Optional.ofNullable(this.keyVaultProperties);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Optimized auto scale definition.
     * 
     */
    @Import(name="optimizedAutoscale")
    private @Nullable Output<OptimizedAutoscaleArgs> optimizedAutoscale;

    /**
     * @return Optimized auto scale definition.
     * 
     */
    public Optional<Output<OptimizedAutoscaleArgs>> optimizedAutoscale() {
        return Optional.ofNullable(this.optimizedAutoscale);
    }

    /**
     * The name of the resource group containing the Kusto cluster.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group containing the Kusto cluster.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The SKU of the cluster.
     * 
     */
    @Import(name="sku", required=true)
    private Output<AzureSkuArgs> sku;

    /**
     * @return The SKU of the cluster.
     * 
     */
    public Output<AzureSkuArgs> sku() {
        return this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The cluster&#39;s external tenants.
     * 
     */
    @Import(name="trustedExternalTenants")
    private @Nullable Output<List<TrustedExternalTenantArgs>> trustedExternalTenants;

    /**
     * @return The cluster&#39;s external tenants.
     * 
     */
    public Optional<Output<List<TrustedExternalTenantArgs>>> trustedExternalTenants() {
        return Optional.ofNullable(this.trustedExternalTenants);
    }

    /**
     * Virtual network definition.
     * 
     */
    @Import(name="virtualNetworkConfiguration")
    private @Nullable Output<VirtualNetworkConfigurationArgs> virtualNetworkConfiguration;

    /**
     * @return Virtual network definition.
     * 
     */
    public Optional<Output<VirtualNetworkConfigurationArgs>> virtualNetworkConfiguration() {
        return Optional.ofNullable(this.virtualNetworkConfiguration);
    }

    /**
     * The availability zones of the cluster.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    /**
     * @return The availability zones of the cluster.
     * 
     */
    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.clusterName = $.clusterName;
        this.enableDiskEncryption = $.enableDiskEncryption;
        this.enableDoubleEncryption = $.enableDoubleEncryption;
        this.enablePurge = $.enablePurge;
        this.enableStreamingIngest = $.enableStreamingIngest;
        this.engineType = $.engineType;
        this.identity = $.identity;
        this.keyVaultProperties = $.keyVaultProperties;
        this.location = $.location;
        this.optimizedAutoscale = $.optimizedAutoscale;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.trustedExternalTenants = $.trustedExternalTenants;
        this.virtualNetworkConfiguration = $.virtualNetworkConfiguration;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName The name of the Kusto cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the Kusto cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param enableDiskEncryption A boolean value that indicates if the cluster&#39;s disks are encrypted.
         * 
         * @return builder
         * 
         */
        public Builder enableDiskEncryption(@Nullable Output<Boolean> enableDiskEncryption) {
            $.enableDiskEncryption = enableDiskEncryption;
            return this;
        }

        /**
         * @param enableDiskEncryption A boolean value that indicates if the cluster&#39;s disks are encrypted.
         * 
         * @return builder
         * 
         */
        public Builder enableDiskEncryption(Boolean enableDiskEncryption) {
            return enableDiskEncryption(Output.of(enableDiskEncryption));
        }

        /**
         * @param enableDoubleEncryption A boolean value that indicates if double encryption is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableDoubleEncryption(@Nullable Output<Boolean> enableDoubleEncryption) {
            $.enableDoubleEncryption = enableDoubleEncryption;
            return this;
        }

        /**
         * @param enableDoubleEncryption A boolean value that indicates if double encryption is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableDoubleEncryption(Boolean enableDoubleEncryption) {
            return enableDoubleEncryption(Output.of(enableDoubleEncryption));
        }

        /**
         * @param enablePurge A boolean value that indicates if the purge operations are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enablePurge(@Nullable Output<Boolean> enablePurge) {
            $.enablePurge = enablePurge;
            return this;
        }

        /**
         * @param enablePurge A boolean value that indicates if the purge operations are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enablePurge(Boolean enablePurge) {
            return enablePurge(Output.of(enablePurge));
        }

        /**
         * @param enableStreamingIngest A boolean value that indicates if the streaming ingest is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableStreamingIngest(@Nullable Output<Boolean> enableStreamingIngest) {
            $.enableStreamingIngest = enableStreamingIngest;
            return this;
        }

        /**
         * @param enableStreamingIngest A boolean value that indicates if the streaming ingest is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableStreamingIngest(Boolean enableStreamingIngest) {
            return enableStreamingIngest(Output.of(enableStreamingIngest));
        }

        /**
         * @param engineType The engine type
         * 
         * @return builder
         * 
         */
        public Builder engineType(@Nullable Output<Either<String,EngineType>> engineType) {
            $.engineType = engineType;
            return this;
        }

        /**
         * @param engineType The engine type
         * 
         * @return builder
         * 
         */
        public Builder engineType(Either<String,EngineType> engineType) {
            return engineType(Output.of(engineType));
        }

        /**
         * @param engineType The engine type
         * 
         * @return builder
         * 
         */
        public Builder engineType(String engineType) {
            return engineType(Either.ofLeft(engineType));
        }

        /**
         * @param engineType The engine type
         * 
         * @return builder
         * 
         */
        public Builder engineType(EngineType engineType) {
            return engineType(Either.ofRight(engineType));
        }

        /**
         * @param identity The identity of the cluster, if configured.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<IdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity The identity of the cluster, if configured.
         * 
         * @return builder
         * 
         */
        public Builder identity(IdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param keyVaultProperties KeyVault properties for the cluster encryption.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultProperties(@Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties) {
            $.keyVaultProperties = keyVaultProperties;
            return this;
        }

        /**
         * @param keyVaultProperties KeyVault properties for the cluster encryption.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultProperties(KeyVaultPropertiesArgs keyVaultProperties) {
            return keyVaultProperties(Output.of(keyVaultProperties));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param optimizedAutoscale Optimized auto scale definition.
         * 
         * @return builder
         * 
         */
        public Builder optimizedAutoscale(@Nullable Output<OptimizedAutoscaleArgs> optimizedAutoscale) {
            $.optimizedAutoscale = optimizedAutoscale;
            return this;
        }

        /**
         * @param optimizedAutoscale Optimized auto scale definition.
         * 
         * @return builder
         * 
         */
        public Builder optimizedAutoscale(OptimizedAutoscaleArgs optimizedAutoscale) {
            return optimizedAutoscale(Output.of(optimizedAutoscale));
        }

        /**
         * @param resourceGroupName The name of the resource group containing the Kusto cluster.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group containing the Kusto cluster.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku The SKU of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder sku(Output<AzureSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The SKU of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder sku(AzureSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param trustedExternalTenants The cluster&#39;s external tenants.
         * 
         * @return builder
         * 
         */
        public Builder trustedExternalTenants(@Nullable Output<List<TrustedExternalTenantArgs>> trustedExternalTenants) {
            $.trustedExternalTenants = trustedExternalTenants;
            return this;
        }

        /**
         * @param trustedExternalTenants The cluster&#39;s external tenants.
         * 
         * @return builder
         * 
         */
        public Builder trustedExternalTenants(List<TrustedExternalTenantArgs> trustedExternalTenants) {
            return trustedExternalTenants(Output.of(trustedExternalTenants));
        }

        /**
         * @param trustedExternalTenants The cluster&#39;s external tenants.
         * 
         * @return builder
         * 
         */
        public Builder trustedExternalTenants(TrustedExternalTenantArgs... trustedExternalTenants) {
            return trustedExternalTenants(List.of(trustedExternalTenants));
        }

        /**
         * @param virtualNetworkConfiguration Virtual network definition.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkConfiguration(@Nullable Output<VirtualNetworkConfigurationArgs> virtualNetworkConfiguration) {
            $.virtualNetworkConfiguration = virtualNetworkConfiguration;
            return this;
        }

        /**
         * @param virtualNetworkConfiguration Virtual network definition.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkConfiguration(VirtualNetworkConfigurationArgs virtualNetworkConfiguration) {
            return virtualNetworkConfiguration(Output.of(virtualNetworkConfiguration));
        }

        /**
         * @param zones The availability zones of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones The availability zones of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones The availability zones of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public ClusterArgs build() {
            $.enableDiskEncryption = Codegen.booleanProp("enableDiskEncryption").output().arg($.enableDiskEncryption).def(false).getNullable();
            $.enableDoubleEncryption = Codegen.booleanProp("enableDoubleEncryption").output().arg($.enableDoubleEncryption).def(false).getNullable();
            $.enablePurge = Codegen.booleanProp("enablePurge").output().arg($.enablePurge).def(false).getNullable();
            $.enableStreamingIngest = Codegen.booleanProp("enableStreamingIngest").output().arg($.enableStreamingIngest).def(false).getNullable();
            $.engineType = Codegen.stringProp("engineType").left(EngineType.class).output().arg($.engineType).def("V3").getNullable();
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sku = Objects.requireNonNull($.sku, "expected parameter 'sku' to be non-null");
            return $;
        }
    }

}
