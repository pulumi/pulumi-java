// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute;

import com.pulumi.azurenative.compute.inputs.GalleryImageVersionPublishingProfileArgs;
import com.pulumi.azurenative.compute.inputs.GalleryImageVersionStorageProfileArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GalleryImageVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GalleryImageVersionArgs Empty = new GalleryImageVersionArgs();

    /**
     * The name of the gallery image definition in which the Image Version is to be created.
     * 
     */
    @Import(name="galleryImageName", required=true)
      private final Output<String> galleryImageName;

    public Output<String> galleryImageName() {
        return this.galleryImageName;
    }

    /**
     * The name of the gallery image version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
     * 
     */
    @Import(name="galleryImageVersionName")
      private final @Nullable Output<String> galleryImageVersionName;

    public Output<String> galleryImageVersionName() {
        return this.galleryImageVersionName == null ? Codegen.empty() : this.galleryImageVersionName;
    }

    /**
     * The name of the Shared Image Gallery in which the Image Definition resides.
     * 
     */
    @Import(name="galleryName", required=true)
      private final Output<String> galleryName;

    public Output<String> galleryName() {
        return this.galleryName;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The publishing profile of a gallery image Version.
     * 
     */
    @Import(name="publishingProfile")
      private final @Nullable Output<GalleryImageVersionPublishingProfileArgs> publishingProfile;

    public Output<GalleryImageVersionPublishingProfileArgs> publishingProfile() {
        return this.publishingProfile == null ? Codegen.empty() : this.publishingProfile;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * This is the storage profile of a Gallery Image Version.
     * 
     */
    @Import(name="storageProfile", required=true)
      private final Output<GalleryImageVersionStorageProfileArgs> storageProfile;

    public Output<GalleryImageVersionStorageProfileArgs> storageProfile() {
        return this.storageProfile;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public GalleryImageVersionArgs(
        Output<String> galleryImageName,
        @Nullable Output<String> galleryImageVersionName,
        Output<String> galleryName,
        @Nullable Output<String> location,
        @Nullable Output<GalleryImageVersionPublishingProfileArgs> publishingProfile,
        Output<String> resourceGroupName,
        Output<GalleryImageVersionStorageProfileArgs> storageProfile,
        @Nullable Output<Map<String,String>> tags) {
        this.galleryImageName = Objects.requireNonNull(galleryImageName, "expected parameter 'galleryImageName' to be non-null");
        this.galleryImageVersionName = galleryImageVersionName;
        this.galleryName = Objects.requireNonNull(galleryName, "expected parameter 'galleryName' to be non-null");
        this.location = location;
        this.publishingProfile = publishingProfile;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.storageProfile = Objects.requireNonNull(storageProfile, "expected parameter 'storageProfile' to be non-null");
        this.tags = tags;
    }

    private GalleryImageVersionArgs() {
        this.galleryImageName = Codegen.empty();
        this.galleryImageVersionName = Codegen.empty();
        this.galleryName = Codegen.empty();
        this.location = Codegen.empty();
        this.publishingProfile = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.storageProfile = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GalleryImageVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> galleryImageName;
        private @Nullable Output<String> galleryImageVersionName;
        private Output<String> galleryName;
        private @Nullable Output<String> location;
        private @Nullable Output<GalleryImageVersionPublishingProfileArgs> publishingProfile;
        private Output<String> resourceGroupName;
        private Output<GalleryImageVersionStorageProfileArgs> storageProfile;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GalleryImageVersionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.galleryImageName = defaults.galleryImageName;
    	      this.galleryImageVersionName = defaults.galleryImageVersionName;
    	      this.galleryName = defaults.galleryName;
    	      this.location = defaults.location;
    	      this.publishingProfile = defaults.publishingProfile;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.storageProfile = defaults.storageProfile;
    	      this.tags = defaults.tags;
        }

        public Builder galleryImageName(Output<String> galleryImageName) {
            this.galleryImageName = Objects.requireNonNull(galleryImageName);
            return this;
        }
        public Builder galleryImageName(String galleryImageName) {
            this.galleryImageName = Output.of(Objects.requireNonNull(galleryImageName));
            return this;
        }
        public Builder galleryImageVersionName(@Nullable Output<String> galleryImageVersionName) {
            this.galleryImageVersionName = galleryImageVersionName;
            return this;
        }
        public Builder galleryImageVersionName(@Nullable String galleryImageVersionName) {
            this.galleryImageVersionName = Codegen.ofNullable(galleryImageVersionName);
            return this;
        }
        public Builder galleryName(Output<String> galleryName) {
            this.galleryName = Objects.requireNonNull(galleryName);
            return this;
        }
        public Builder galleryName(String galleryName) {
            this.galleryName = Output.of(Objects.requireNonNull(galleryName));
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder publishingProfile(@Nullable Output<GalleryImageVersionPublishingProfileArgs> publishingProfile) {
            this.publishingProfile = publishingProfile;
            return this;
        }
        public Builder publishingProfile(@Nullable GalleryImageVersionPublishingProfileArgs publishingProfile) {
            this.publishingProfile = Codegen.ofNullable(publishingProfile);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder storageProfile(Output<GalleryImageVersionStorageProfileArgs> storageProfile) {
            this.storageProfile = Objects.requireNonNull(storageProfile);
            return this;
        }
        public Builder storageProfile(GalleryImageVersionStorageProfileArgs storageProfile) {
            this.storageProfile = Output.of(Objects.requireNonNull(storageProfile));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public GalleryImageVersionArgs build() {
            return new GalleryImageVersionArgs(galleryImageName, galleryImageVersionName, galleryName, location, publishingProfile, resourceGroupName, storageProfile, tags);
        }
    }
}
