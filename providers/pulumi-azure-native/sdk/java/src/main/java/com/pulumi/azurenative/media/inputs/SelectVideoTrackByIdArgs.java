// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * Select video tracks from the input by specifying a track identifier.
 * 
 */
public final class SelectVideoTrackByIdArgs extends com.pulumi.resources.ResourceArgs {

    public static final SelectVideoTrackByIdArgs Empty = new SelectVideoTrackByIdArgs();

    /**
     * The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.SelectVideoTrackById&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private Output<String> odataType;

    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.SelectVideoTrackById&#39;.
     * 
     */
    public Output<String> odataType() {
        return this.odataType;
    }

    /**
     * Track identifier to select
     * 
     */
    @Import(name="trackId", required=true)
    private Output<Double> trackId;

    /**
     * @return Track identifier to select
     * 
     */
    public Output<Double> trackId() {
        return this.trackId;
    }

    private SelectVideoTrackByIdArgs() {}

    private SelectVideoTrackByIdArgs(SelectVideoTrackByIdArgs $) {
        this.odataType = $.odataType;
        this.trackId = $.trackId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SelectVideoTrackByIdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SelectVideoTrackByIdArgs $;

        public Builder() {
            $ = new SelectVideoTrackByIdArgs();
        }

        public Builder(SelectVideoTrackByIdArgs defaults) {
            $ = new SelectVideoTrackByIdArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param odataType The discriminator for derived types.
         * Expected value is &#39;#Microsoft.Media.SelectVideoTrackById&#39;.
         * 
         * @return builder
         * 
         */
        public Builder odataType(Output<String> odataType) {
            $.odataType = odataType;
            return this;
        }

        /**
         * @param odataType The discriminator for derived types.
         * Expected value is &#39;#Microsoft.Media.SelectVideoTrackById&#39;.
         * 
         * @return builder
         * 
         */
        public Builder odataType(String odataType) {
            return odataType(Output.of(odataType));
        }

        /**
         * @param trackId Track identifier to select
         * 
         * @return builder
         * 
         */
        public Builder trackId(Output<Double> trackId) {
            $.trackId = trackId;
            return this;
        }

        /**
         * @param trackId Track identifier to select
         * 
         * @return builder
         * 
         */
        public Builder trackId(Double trackId) {
            return trackId(Output.of(trackId));
        }

        public SelectVideoTrackByIdArgs build() {
            $.odataType = Codegen.stringProp("odataType").output().arg($.odataType).require();
            $.trackId = Objects.requireNonNull($.trackId, "expected parameter 'trackId' to be non-null");
            return $;
        }
    }

}
