// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SharedPrivateLinkResourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final SharedPrivateLinkResourceResponse Empty = new SharedPrivateLinkResourceResponse();

    /**
     * The private link resource group id.
     * 
     */
    @Import(name="groupId")
    private @Nullable String groupId;

    /**
     * @return The private link resource group id.
     * 
     */
    public Optional<String> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * Unique name of the private link.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Unique name of the private link.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The resource id that private link links to.
     * 
     */
    @Import(name="privateLinkResourceId")
    private @Nullable String privateLinkResourceId;

    /**
     * @return The resource id that private link links to.
     * 
     */
    public Optional<String> privateLinkResourceId() {
        return Optional.ofNullable(this.privateLinkResourceId);
    }

    /**
     * Request message.
     * 
     */
    @Import(name="requestMessage")
    private @Nullable String requestMessage;

    /**
     * @return Request message.
     * 
     */
    public Optional<String> requestMessage() {
        return Optional.ofNullable(this.requestMessage);
    }

    /**
     * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private SharedPrivateLinkResourceResponse() {}

    private SharedPrivateLinkResourceResponse(SharedPrivateLinkResourceResponse $) {
        this.groupId = $.groupId;
        this.name = $.name;
        this.privateLinkResourceId = $.privateLinkResourceId;
        this.requestMessage = $.requestMessage;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SharedPrivateLinkResourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SharedPrivateLinkResourceResponse $;

        public Builder() {
            $ = new SharedPrivateLinkResourceResponse();
        }

        public Builder(SharedPrivateLinkResourceResponse defaults) {
            $ = new SharedPrivateLinkResourceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupId The private link resource group id.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable String groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param name Unique name of the private link.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param privateLinkResourceId The resource id that private link links to.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkResourceId(@Nullable String privateLinkResourceId) {
            $.privateLinkResourceId = privateLinkResourceId;
            return this;
        }

        /**
         * @param requestMessage Request message.
         * 
         * @return builder
         * 
         */
        public Builder requestMessage(@Nullable String requestMessage) {
            $.requestMessage = requestMessage;
            return this;
        }

        /**
         * @param status Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public SharedPrivateLinkResourceResponse build() {
            return $;
        }
    }

}
