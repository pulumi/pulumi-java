// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Image for the product
 * 
 */
public final class ImageInformationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ImageInformationResponse Empty = new ImageInformationResponse();

    /**
     * Type of the image
     * 
     */
    @Import(name="imageType", required=true)
    private String imageType;

    /**
     * @return Type of the image
     * 
     */
    public String imageType() {
        return this.imageType;
    }

    /**
     * Url of the image
     * 
     */
    @Import(name="imageUrl", required=true)
    private String imageUrl;

    /**
     * @return Url of the image
     * 
     */
    public String imageUrl() {
        return this.imageUrl;
    }

    private ImageInformationResponse() {}

    private ImageInformationResponse(ImageInformationResponse $) {
        this.imageType = $.imageType;
        this.imageUrl = $.imageUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageInformationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageInformationResponse $;

        public Builder() {
            $ = new ImageInformationResponse();
        }

        public Builder(ImageInformationResponse defaults) {
            $ = new ImageInformationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param imageType Type of the image
         * 
         * @return builder
         * 
         */
        public Builder imageType(String imageType) {
            $.imageType = imageType;
            return this;
        }

        /**
         * @param imageUrl Url of the image
         * 
         * @return builder
         * 
         */
        public Builder imageUrl(String imageUrl) {
            $.imageUrl = imageUrl;
            return this;
        }

        public ImageInformationResponse build() {
            $.imageType = Objects.requireNonNull($.imageType, "expected parameter 'imageType' to be non-null");
            $.imageUrl = Objects.requireNonNull($.imageUrl, "expected parameter 'imageUrl' to be non-null");
            return $;
        }
    }

}
