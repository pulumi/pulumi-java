// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.managedidentity.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListUserAssignedIdentityAssociatedResourcesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListUserAssignedIdentityAssociatedResourcesPlainArgs Empty = new ListUserAssignedIdentityAssociatedResourcesPlainArgs();

    /**
     * OData filter expression to apply to the query.
     * 
     */
    @Import(name="filter")
    private @Nullable String filter;

    /**
     * @return OData filter expression to apply to the query.
     * 
     */
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * OData orderBy expression to apply to the query.
     * 
     */
    @Import(name="orderby")
    private @Nullable String orderby;

    /**
     * @return OData orderBy expression to apply to the query.
     * 
     */
    public Optional<String> orderby() {
        return Optional.ofNullable(this.orderby);
    }

    /**
     * The name of the Resource Group to which the identity belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the Resource Group to which the identity belongs.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the identity resource.
     * 
     */
    @Import(name="resourceName", required=true)
    private String resourceName;

    /**
     * @return The name of the identity resource.
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }

    /**
     * Number of records to skip.
     * 
     */
    @Import(name="skip")
    private @Nullable Integer skip;

    /**
     * @return Number of records to skip.
     * 
     */
    public Optional<Integer> skip() {
        return Optional.ofNullable(this.skip);
    }

    /**
     * A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
     * 
     */
    @Import(name="skiptoken")
    private @Nullable String skiptoken;

    /**
     * @return A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
     * 
     */
    public Optional<String> skiptoken() {
        return Optional.ofNullable(this.skiptoken);
    }

    /**
     * Number of records to return.
     * 
     */
    @Import(name="top")
    private @Nullable Integer top;

    /**
     * @return Number of records to return.
     * 
     */
    public Optional<Integer> top() {
        return Optional.ofNullable(this.top);
    }

    private ListUserAssignedIdentityAssociatedResourcesPlainArgs() {}

    private ListUserAssignedIdentityAssociatedResourcesPlainArgs(ListUserAssignedIdentityAssociatedResourcesPlainArgs $) {
        this.filter = $.filter;
        this.orderby = $.orderby;
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
        this.skip = $.skip;
        this.skiptoken = $.skiptoken;
        this.top = $.top;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListUserAssignedIdentityAssociatedResourcesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListUserAssignedIdentityAssociatedResourcesPlainArgs $;

        public Builder() {
            $ = new ListUserAssignedIdentityAssociatedResourcesPlainArgs();
        }

        public Builder(ListUserAssignedIdentityAssociatedResourcesPlainArgs defaults) {
            $ = new ListUserAssignedIdentityAssociatedResourcesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter OData filter expression to apply to the query.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable String filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param orderby OData orderBy expression to apply to the query.
         * 
         * @return builder
         * 
         */
        public Builder orderby(@Nullable String orderby) {
            $.orderby = orderby;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group to which the identity belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceName The name of the identity resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param skip Number of records to skip.
         * 
         * @return builder
         * 
         */
        public Builder skip(@Nullable Integer skip) {
            $.skip = skip;
            return this;
        }

        /**
         * @param skiptoken A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
         * 
         * @return builder
         * 
         */
        public Builder skiptoken(@Nullable String skiptoken) {
            $.skiptoken = skiptoken;
            return this;
        }

        /**
         * @param top Number of records to return.
         * 
         * @return builder
         * 
         */
        public Builder top(@Nullable Integer top) {
            $.top = top;
            return this;
        }

        public ListUserAssignedIdentityAssociatedResourcesPlainArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceName = Objects.requireNonNull($.resourceName, "expected parameter 'resourceName' to be non-null");
            return $;
        }
    }

}
