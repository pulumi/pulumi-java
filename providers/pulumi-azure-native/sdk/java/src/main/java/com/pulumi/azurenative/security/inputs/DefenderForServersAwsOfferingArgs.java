// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.inputs.DefenderForServersAwsOfferingArcAutoProvisioningArgs;
import com.pulumi.azurenative.security.inputs.DefenderForServersAwsOfferingDefenderForServersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The Defender for Servers AWS offering configurations
 * 
 */
public final class DefenderForServersAwsOfferingArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefenderForServersAwsOfferingArgs Empty = new DefenderForServersAwsOfferingArgs();

    /**
     * The ARC autoprovisioning configuration
     * 
     */
    @Import(name="arcAutoProvisioning")
    private @Nullable Output<DefenderForServersAwsOfferingArcAutoProvisioningArgs> arcAutoProvisioning;

    /**
     * @return The ARC autoprovisioning configuration
     * 
     */
    public Optional<Output<DefenderForServersAwsOfferingArcAutoProvisioningArgs>> arcAutoProvisioning() {
        return Optional.ofNullable(this.arcAutoProvisioning);
    }

    /**
     * The Defender for servers connection configuration
     * 
     */
    @Import(name="defenderForServers")
    private @Nullable Output<DefenderForServersAwsOfferingDefenderForServersArgs> defenderForServers;

    /**
     * @return The Defender for servers connection configuration
     * 
     */
    public Optional<Output<DefenderForServersAwsOfferingDefenderForServersArgs>> defenderForServers() {
        return Optional.ofNullable(this.defenderForServers);
    }

    /**
     * The type of the security offering.
     * Expected value is &#39;DefenderForServersAws&#39;.
     * 
     */
    @Import(name="offeringType", required=true)
    private Output<String> offeringType;

    /**
     * @return The type of the security offering.
     * Expected value is &#39;DefenderForServersAws&#39;.
     * 
     */
    public Output<String> offeringType() {
        return this.offeringType;
    }

    private DefenderForServersAwsOfferingArgs() {}

    private DefenderForServersAwsOfferingArgs(DefenderForServersAwsOfferingArgs $) {
        this.arcAutoProvisioning = $.arcAutoProvisioning;
        this.defenderForServers = $.defenderForServers;
        this.offeringType = $.offeringType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefenderForServersAwsOfferingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefenderForServersAwsOfferingArgs $;

        public Builder() {
            $ = new DefenderForServersAwsOfferingArgs();
        }

        public Builder(DefenderForServersAwsOfferingArgs defaults) {
            $ = new DefenderForServersAwsOfferingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arcAutoProvisioning The ARC autoprovisioning configuration
         * 
         * @return builder
         * 
         */
        public Builder arcAutoProvisioning(@Nullable Output<DefenderForServersAwsOfferingArcAutoProvisioningArgs> arcAutoProvisioning) {
            $.arcAutoProvisioning = arcAutoProvisioning;
            return this;
        }

        /**
         * @param arcAutoProvisioning The ARC autoprovisioning configuration
         * 
         * @return builder
         * 
         */
        public Builder arcAutoProvisioning(DefenderForServersAwsOfferingArcAutoProvisioningArgs arcAutoProvisioning) {
            return arcAutoProvisioning(Output.of(arcAutoProvisioning));
        }

        /**
         * @param defenderForServers The Defender for servers connection configuration
         * 
         * @return builder
         * 
         */
        public Builder defenderForServers(@Nullable Output<DefenderForServersAwsOfferingDefenderForServersArgs> defenderForServers) {
            $.defenderForServers = defenderForServers;
            return this;
        }

        /**
         * @param defenderForServers The Defender for servers connection configuration
         * 
         * @return builder
         * 
         */
        public Builder defenderForServers(DefenderForServersAwsOfferingDefenderForServersArgs defenderForServers) {
            return defenderForServers(Output.of(defenderForServers));
        }

        /**
         * @param offeringType The type of the security offering.
         * Expected value is &#39;DefenderForServersAws&#39;.
         * 
         * @return builder
         * 
         */
        public Builder offeringType(Output<String> offeringType) {
            $.offeringType = offeringType;
            return this;
        }

        /**
         * @param offeringType The type of the security offering.
         * Expected value is &#39;DefenderForServersAws&#39;.
         * 
         * @return builder
         * 
         */
        public Builder offeringType(String offeringType) {
            return offeringType(Output.of(offeringType));
        }

        public DefenderForServersAwsOfferingArgs build() {
            $.offeringType = Codegen.stringProp("offeringType").output().arg($.offeringType).require();
            return $;
        }
    }

}
