// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAppSwiftVirtualNetworkConnectionSlotArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAppSwiftVirtualNetworkConnectionSlotArgs Empty = new WebAppSwiftVirtualNetworkConnectionSlotArgs();

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Name of the app.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the deployment slot. If a slot is not specified, the API will add or update connections for the production slot.
     * 
     */
    @Import(name="slot", required=true)
    private Output<String> slot;

    public Output<String> slot() {
        return this.slot;
    }

    /**
     * The Virtual Network subnet&#39;s resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
     * 
     */
    @Import(name="subnetResourceId")
    private @Nullable Output<String> subnetResourceId;

    public Optional<Output<String>> subnetResourceId() {
        return Optional.ofNullable(this.subnetResourceId);
    }

    /**
     * A flag that specifies if the scale unit this Web App is on supports Swift integration.
     * 
     */
    @Import(name="swiftSupported")
    private @Nullable Output<Boolean> swiftSupported;

    public Optional<Output<Boolean>> swiftSupported() {
        return Optional.ofNullable(this.swiftSupported);
    }

    private WebAppSwiftVirtualNetworkConnectionSlotArgs() {}

    private WebAppSwiftVirtualNetworkConnectionSlotArgs(WebAppSwiftVirtualNetworkConnectionSlotArgs $) {
        this.kind = $.kind;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.slot = $.slot;
        this.subnetResourceId = $.subnetResourceId;
        this.swiftSupported = $.swiftSupported;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppSwiftVirtualNetworkConnectionSlotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppSwiftVirtualNetworkConnectionSlotArgs $;

        public Builder() {
            $ = new WebAppSwiftVirtualNetworkConnectionSlotArgs();
        }

        public Builder(WebAppSwiftVirtualNetworkConnectionSlotArgs defaults) {
            $ = new WebAppSwiftVirtualNetworkConnectionSlotArgs(Objects.requireNonNull(defaults));
        }

        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder slot(Output<String> slot) {
            $.slot = slot;
            return this;
        }

        public Builder slot(String slot) {
            return slot(Output.of(slot));
        }

        public Builder subnetResourceId(@Nullable Output<String> subnetResourceId) {
            $.subnetResourceId = subnetResourceId;
            return this;
        }

        public Builder subnetResourceId(String subnetResourceId) {
            return subnetResourceId(Output.of(subnetResourceId));
        }

        public Builder swiftSupported(@Nullable Output<Boolean> swiftSupported) {
            $.swiftSupported = swiftSupported;
            return this;
        }

        public Builder swiftSupported(Boolean swiftSupported) {
            return swiftSupported(Output.of(swiftSupported));
        }

        public WebAppSwiftVirtualNetworkConnectionSlotArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.slot = Objects.requireNonNull($.slot, "expected parameter 'slot' to be non-null");
            return $;
        }
    }

}
