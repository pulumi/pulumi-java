// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.inputs.FlowEndpointsConfigurationResponse;
import com.pulumi.azurenative.logic.inputs.IntegrationServiceEnvironmenEncryptionConfigurationResponse;
import com.pulumi.azurenative.logic.inputs.NetworkConfigurationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The integration service environment properties.
 * 
 */
public final class IntegrationServiceEnvironmentPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final IntegrationServiceEnvironmentPropertiesResponse Empty = new IntegrationServiceEnvironmentPropertiesResponse();

    /**
     * The encryption configuration.
     * 
     */
    @Import(name="encryptionConfiguration")
    private @Nullable IntegrationServiceEnvironmenEncryptionConfigurationResponse encryptionConfiguration;

    public Optional<IntegrationServiceEnvironmenEncryptionConfigurationResponse> encryptionConfiguration() {
        return Optional.ofNullable(this.encryptionConfiguration);
    }

    /**
     * The endpoints configuration.
     * 
     */
    @Import(name="endpointsConfiguration")
    private @Nullable FlowEndpointsConfigurationResponse endpointsConfiguration;

    public Optional<FlowEndpointsConfigurationResponse> endpointsConfiguration() {
        return Optional.ofNullable(this.endpointsConfiguration);
    }

    /**
     * Gets the tracking id.
     * 
     */
    @Import(name="integrationServiceEnvironmentId")
    private @Nullable String integrationServiceEnvironmentId;

    public Optional<String> integrationServiceEnvironmentId() {
        return Optional.ofNullable(this.integrationServiceEnvironmentId);
    }

    /**
     * The network configuration.
     * 
     */
    @Import(name="networkConfiguration")
    private @Nullable NetworkConfigurationResponse networkConfiguration;

    public Optional<NetworkConfigurationResponse> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    /**
     * The provisioning state.
     * 
     */
    @Import(name="provisioningState")
    private @Nullable String provisioningState;

    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    /**
     * The integration service environment state.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private IntegrationServiceEnvironmentPropertiesResponse() {}

    private IntegrationServiceEnvironmentPropertiesResponse(IntegrationServiceEnvironmentPropertiesResponse $) {
        this.encryptionConfiguration = $.encryptionConfiguration;
        this.endpointsConfiguration = $.endpointsConfiguration;
        this.integrationServiceEnvironmentId = $.integrationServiceEnvironmentId;
        this.networkConfiguration = $.networkConfiguration;
        this.provisioningState = $.provisioningState;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationServiceEnvironmentPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationServiceEnvironmentPropertiesResponse $;

        public Builder() {
            $ = new IntegrationServiceEnvironmentPropertiesResponse();
        }

        public Builder(IntegrationServiceEnvironmentPropertiesResponse defaults) {
            $ = new IntegrationServiceEnvironmentPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder encryptionConfiguration(@Nullable IntegrationServiceEnvironmenEncryptionConfigurationResponse encryptionConfiguration) {
            $.encryptionConfiguration = encryptionConfiguration;
            return this;
        }

        public Builder endpointsConfiguration(@Nullable FlowEndpointsConfigurationResponse endpointsConfiguration) {
            $.endpointsConfiguration = endpointsConfiguration;
            return this;
        }

        public Builder integrationServiceEnvironmentId(@Nullable String integrationServiceEnvironmentId) {
            $.integrationServiceEnvironmentId = integrationServiceEnvironmentId;
            return this;
        }

        public Builder networkConfiguration(@Nullable NetworkConfigurationResponse networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        public Builder provisioningState(@Nullable String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public IntegrationServiceEnvironmentPropertiesResponse build() {
            return $;
        }
    }

}
