// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.azurenative.media.enums.EncoderNamedPreset;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Describes a built-in preset for encoding the input video with the Standard Encoder.
 * 
 */
public final class BuiltInStandardEncoderPresetArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuiltInStandardEncoderPresetArgs Empty = new BuiltInStandardEncoderPresetArgs();

    /**
     * The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.BuiltInStandardEncoderPreset&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private Output<String> odataType;

    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.BuiltInStandardEncoderPreset&#39;.
     * 
     */
    public Output<String> odataType() {
        return this.odataType;
    }

    /**
     * The built-in preset to be used for encoding videos.
     * 
     */
    @Import(name="presetName", required=true)
    private Output<Either<String,EncoderNamedPreset>> presetName;

    /**
     * @return The built-in preset to be used for encoding videos.
     * 
     */
    public Output<Either<String,EncoderNamedPreset>> presetName() {
        return this.presetName;
    }

    private BuiltInStandardEncoderPresetArgs() {}

    private BuiltInStandardEncoderPresetArgs(BuiltInStandardEncoderPresetArgs $) {
        this.odataType = $.odataType;
        this.presetName = $.presetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuiltInStandardEncoderPresetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuiltInStandardEncoderPresetArgs $;

        public Builder() {
            $ = new BuiltInStandardEncoderPresetArgs();
        }

        public Builder(BuiltInStandardEncoderPresetArgs defaults) {
            $ = new BuiltInStandardEncoderPresetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param odataType The discriminator for derived types.
         * Expected value is &#39;#Microsoft.Media.BuiltInStandardEncoderPreset&#39;.
         * 
         * @return builder
         * 
         */
        public Builder odataType(Output<String> odataType) {
            $.odataType = odataType;
            return this;
        }

        /**
         * @param odataType The discriminator for derived types.
         * Expected value is &#39;#Microsoft.Media.BuiltInStandardEncoderPreset&#39;.
         * 
         * @return builder
         * 
         */
        public Builder odataType(String odataType) {
            return odataType(Output.of(odataType));
        }

        /**
         * @param presetName The built-in preset to be used for encoding videos.
         * 
         * @return builder
         * 
         */
        public Builder presetName(Output<Either<String,EncoderNamedPreset>> presetName) {
            $.presetName = presetName;
            return this;
        }

        /**
         * @param presetName The built-in preset to be used for encoding videos.
         * 
         * @return builder
         * 
         */
        public Builder presetName(Either<String,EncoderNamedPreset> presetName) {
            return presetName(Output.of(presetName));
        }

        /**
         * @param presetName The built-in preset to be used for encoding videos.
         * 
         * @return builder
         * 
         */
        public Builder presetName(String presetName) {
            return presetName(Either.ofLeft(presetName));
        }

        /**
         * @param presetName The built-in preset to be used for encoding videos.
         * 
         * @return builder
         * 
         */
        public Builder presetName(EncoderNamedPreset presetName) {
            return presetName(Either.ofRight(presetName));
        }

        public BuiltInStandardEncoderPresetArgs build() {
            $.odataType = Codegen.stringProp("odataType").output().arg($.odataType).require();
            $.presetName = Objects.requireNonNull($.presetName, "expected parameter 'presetName' to be non-null");
            return $;
        }
    }

}
