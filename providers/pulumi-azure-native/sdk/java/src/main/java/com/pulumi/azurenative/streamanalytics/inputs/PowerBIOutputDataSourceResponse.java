// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes a Power BI output data source.
 * 
 */
public final class PowerBIOutputDataSourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final PowerBIOutputDataSourceResponse Empty = new PowerBIOutputDataSourceResponse();

    /**
     * The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="dataset")
    private @Nullable String dataset;

    public Optional<String> dataset() {
        return Optional.ofNullable(this.dataset);
    }

    /**
     * The ID of the Power BI group.
     * 
     */
    @Import(name="groupId")
    private @Nullable String groupId;

    public Optional<String> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
     * 
     */
    @Import(name="groupName")
    private @Nullable String groupName;

    public Optional<String> groupName() {
        return Optional.ofNullable(this.groupName);
    }

    /**
     * A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="refreshToken")
    private @Nullable String refreshToken;

    public Optional<String> refreshToken() {
        return Optional.ofNullable(this.refreshToken);
    }

    /**
     * The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="table")
    private @Nullable String table;

    public Optional<String> table() {
        return Optional.ofNullable(this.table);
    }

    /**
     * The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
     * 
     */
    @Import(name="tokenUserDisplayName")
    private @Nullable String tokenUserDisplayName;

    public Optional<String> tokenUserDisplayName() {
        return Optional.ofNullable(this.tokenUserDisplayName);
    }

    /**
     * The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
     * 
     */
    @Import(name="tokenUserPrincipalName")
    private @Nullable String tokenUserPrincipalName;

    public Optional<String> tokenUserPrincipalName() {
        return Optional.ofNullable(this.tokenUserPrincipalName);
    }

    /**
     * Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;PowerBI&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private PowerBIOutputDataSourceResponse() {}

    private PowerBIOutputDataSourceResponse(PowerBIOutputDataSourceResponse $) {
        this.dataset = $.dataset;
        this.groupId = $.groupId;
        this.groupName = $.groupName;
        this.refreshToken = $.refreshToken;
        this.table = $.table;
        this.tokenUserDisplayName = $.tokenUserDisplayName;
        this.tokenUserPrincipalName = $.tokenUserPrincipalName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PowerBIOutputDataSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PowerBIOutputDataSourceResponse $;

        public Builder() {
            $ = new PowerBIOutputDataSourceResponse();
        }

        public Builder(PowerBIOutputDataSourceResponse defaults) {
            $ = new PowerBIOutputDataSourceResponse(Objects.requireNonNull(defaults));
        }

        public Builder dataset(@Nullable String dataset) {
            $.dataset = dataset;
            return this;
        }

        public Builder groupId(@Nullable String groupId) {
            $.groupId = groupId;
            return this;
        }

        public Builder groupName(@Nullable String groupName) {
            $.groupName = groupName;
            return this;
        }

        public Builder refreshToken(@Nullable String refreshToken) {
            $.refreshToken = refreshToken;
            return this;
        }

        public Builder table(@Nullable String table) {
            $.table = table;
            return this;
        }

        public Builder tokenUserDisplayName(@Nullable String tokenUserDisplayName) {
            $.tokenUserDisplayName = tokenUserDisplayName;
            return this;
        }

        public Builder tokenUserPrincipalName(@Nullable String tokenUserPrincipalName) {
            $.tokenUserPrincipalName = tokenUserPrincipalName;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public PowerBIOutputDataSourceResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
