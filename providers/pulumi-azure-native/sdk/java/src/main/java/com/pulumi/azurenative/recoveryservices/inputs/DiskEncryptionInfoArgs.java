// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.DiskEncryptionKeyInfoArgs;
import com.pulumi.azurenative.recoveryservices.inputs.KeyEncryptionKeyInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Recovery disk encryption info (BEK and KEK).
 * 
 */
public final class DiskEncryptionInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiskEncryptionInfoArgs Empty = new DiskEncryptionInfoArgs();

    /**
     * The recovery KeyVault reference for secret.
     * 
     */
    @Import(name="diskEncryptionKeyInfo")
    private @Nullable Output<DiskEncryptionKeyInfoArgs> diskEncryptionKeyInfo;

    /**
     * @return The recovery KeyVault reference for secret.
     * 
     */
    public Optional<Output<DiskEncryptionKeyInfoArgs>> diskEncryptionKeyInfo() {
        return Optional.ofNullable(this.diskEncryptionKeyInfo);
    }

    /**
     * The recovery KeyVault reference for key.
     * 
     */
    @Import(name="keyEncryptionKeyInfo")
    private @Nullable Output<KeyEncryptionKeyInfoArgs> keyEncryptionKeyInfo;

    /**
     * @return The recovery KeyVault reference for key.
     * 
     */
    public Optional<Output<KeyEncryptionKeyInfoArgs>> keyEncryptionKeyInfo() {
        return Optional.ofNullable(this.keyEncryptionKeyInfo);
    }

    private DiskEncryptionInfoArgs() {}

    private DiskEncryptionInfoArgs(DiskEncryptionInfoArgs $) {
        this.diskEncryptionKeyInfo = $.diskEncryptionKeyInfo;
        this.keyEncryptionKeyInfo = $.keyEncryptionKeyInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskEncryptionInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskEncryptionInfoArgs $;

        public Builder() {
            $ = new DiskEncryptionInfoArgs();
        }

        public Builder(DiskEncryptionInfoArgs defaults) {
            $ = new DiskEncryptionInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param diskEncryptionKeyInfo The recovery KeyVault reference for secret.
         * 
         * @return builder
         * 
         */
        public Builder diskEncryptionKeyInfo(@Nullable Output<DiskEncryptionKeyInfoArgs> diskEncryptionKeyInfo) {
            $.diskEncryptionKeyInfo = diskEncryptionKeyInfo;
            return this;
        }

        /**
         * @param diskEncryptionKeyInfo The recovery KeyVault reference for secret.
         * 
         * @return builder
         * 
         */
        public Builder diskEncryptionKeyInfo(DiskEncryptionKeyInfoArgs diskEncryptionKeyInfo) {
            return diskEncryptionKeyInfo(Output.of(diskEncryptionKeyInfo));
        }

        /**
         * @param keyEncryptionKeyInfo The recovery KeyVault reference for key.
         * 
         * @return builder
         * 
         */
        public Builder keyEncryptionKeyInfo(@Nullable Output<KeyEncryptionKeyInfoArgs> keyEncryptionKeyInfo) {
            $.keyEncryptionKeyInfo = keyEncryptionKeyInfo;
            return this;
        }

        /**
         * @param keyEncryptionKeyInfo The recovery KeyVault reference for key.
         * 
         * @return builder
         * 
         */
        public Builder keyEncryptionKeyInfo(KeyEncryptionKeyInfoArgs keyEncryptionKeyInfo) {
            return keyEncryptionKeyInfo(Output.of(keyEncryptionKeyInfo));
        }

        public DiskEncryptionInfoArgs build() {
            return $;
        }
    }

}
