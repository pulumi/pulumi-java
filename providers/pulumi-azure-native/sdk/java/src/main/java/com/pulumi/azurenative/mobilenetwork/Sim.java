// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.mobilenetwork;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.mobilenetwork.SimArgs;
import com.pulumi.azurenative.mobilenetwork.outputs.MobileNetworkResourceIdResponse;
import com.pulumi.azurenative.mobilenetwork.outputs.SimPolicyResourceIdResponse;
import com.pulumi.azurenative.mobilenetwork.outputs.SimStaticIpPropertiesResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Sim resource.
 * API Version: 2022-01-01-preview.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:mobilenetwork:Sim testSim /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.MobileNetwork/sims/testSim 
 * ```
 * 
 */
@ResourceType(type="azure-native:mobilenetwork:Sim")
public class Sim extends com.pulumi.resources.CustomResource {
    /**
     * The configuration state of the sim resource - complete or incomplete.
     * 
     */
    @Export(name="configurationState", type=String.class, parameters={})
    private Output<String> configurationState;

    /**
     * @return The configuration state of the sim resource - complete or incomplete.
     * 
     */
    public Output<String> configurationState() {
        return this.configurationState;
    }
    /**
     * The timestamp of resource creation (UTC).
     * 
     */
    @Export(name="createdAt", type=String.class, parameters={})
    private Output</* @Nullable */ String> createdAt;

    /**
     * @return The timestamp of resource creation (UTC).
     * 
     */
    public Output<Optional<String>> createdAt() {
        return Codegen.optional(this.createdAt);
    }
    /**
     * The identity that created the resource.
     * 
     */
    @Export(name="createdBy", type=String.class, parameters={})
    private Output</* @Nullable */ String> createdBy;

    /**
     * @return The identity that created the resource.
     * 
     */
    public Output<Optional<String>> createdBy() {
        return Codegen.optional(this.createdBy);
    }
    /**
     * The type of identity that created the resource.
     * 
     */
    @Export(name="createdByType", type=String.class, parameters={})
    private Output</* @Nullable */ String> createdByType;

    /**
     * @return The type of identity that created the resource.
     * 
     */
    public Output<Optional<String>> createdByType() {
        return Codegen.optional(this.createdByType);
    }
    /**
     * An optional free-form text field that can be used to record the device type this sim is associated with, for example &#39;Video camera&#39;. The Azure portal allows Sims to be grouped and filtered based on this value.
     * 
     */
    @Export(name="deviceType", type=String.class, parameters={})
    private Output</* @Nullable */ String> deviceType;

    /**
     * @return An optional free-form text field that can be used to record the device type this sim is associated with, for example &#39;Video camera&#39;. The Azure portal allows Sims to be grouped and filtered based on this value.
     * 
     */
    public Output<Optional<String>> deviceType() {
        return Codegen.optional(this.deviceType);
    }
    /**
     * The Integrated Circuit Card ID (ICC Id) for the sim.
     * 
     */
    @Export(name="integratedCircuitCardIdentifier", type=String.class, parameters={})
    private Output</* @Nullable */ String> integratedCircuitCardIdentifier;

    /**
     * @return The Integrated Circuit Card ID (ICC Id) for the sim.
     * 
     */
    public Output<Optional<String>> integratedCircuitCardIdentifier() {
        return Codegen.optional(this.integratedCircuitCardIdentifier);
    }
    /**
     * The International Mobile Subscriber Identity (IMSI) for the sim.
     * 
     */
    @Export(name="internationalMobileSubscriberIdentity", type=String.class, parameters={})
    private Output<String> internationalMobileSubscriberIdentity;

    /**
     * @return The International Mobile Subscriber Identity (IMSI) for the sim.
     * 
     */
    public Output<String> internationalMobileSubscriberIdentity() {
        return this.internationalMobileSubscriberIdentity;
    }
    /**
     * The timestamp of resource last modification (UTC)
     * 
     */
    @Export(name="lastModifiedAt", type=String.class, parameters={})
    private Output</* @Nullable */ String> lastModifiedAt;

    /**
     * @return The timestamp of resource last modification (UTC)
     * 
     */
    public Output<Optional<String>> lastModifiedAt() {
        return Codegen.optional(this.lastModifiedAt);
    }
    /**
     * The identity that last modified the resource.
     * 
     */
    @Export(name="lastModifiedBy", type=String.class, parameters={})
    private Output</* @Nullable */ String> lastModifiedBy;

    /**
     * @return The identity that last modified the resource.
     * 
     */
    public Output<Optional<String>> lastModifiedBy() {
        return Codegen.optional(this.lastModifiedBy);
    }
    /**
     * The type of identity that last modified the resource.
     * 
     */
    @Export(name="lastModifiedByType", type=String.class, parameters={})
    private Output</* @Nullable */ String> lastModifiedByType;

    /**
     * @return The type of identity that last modified the resource.
     * 
     */
    public Output<Optional<String>> lastModifiedByType() {
        return Codegen.optional(this.lastModifiedByType);
    }
    /**
     * The geo-location where the resource lives
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Mobile network that this sim belongs to
     * 
     */
    @Export(name="mobileNetwork", type=MobileNetworkResourceIdResponse.class, parameters={})
    private Output</* @Nullable */ MobileNetworkResourceIdResponse> mobileNetwork;

    /**
     * @return Mobile network that this sim belongs to
     * 
     */
    public Output<Optional<MobileNetworkResourceIdResponse>> mobileNetwork() {
        return Codegen.optional(this.mobileNetwork);
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The provisioning state of the sim resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the sim resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * The simPolicy used by this sim.
     * 
     */
    @Export(name="simPolicy", type=SimPolicyResourceIdResponse.class, parameters={})
    private Output</* @Nullable */ SimPolicyResourceIdResponse> simPolicy;

    /**
     * @return The simPolicy used by this sim.
     * 
     */
    public Output<Optional<SimPolicyResourceIdResponse>> simPolicy() {
        return Codegen.optional(this.simPolicy);
    }
    /**
     * A list of static IP addresses assigned to this sim. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
     * 
     */
    @Export(name="staticIpConfiguration", type=List.class, parameters={SimStaticIpPropertiesResponse.class})
    private Output</* @Nullable */ List<SimStaticIpPropertiesResponse>> staticIpConfiguration;

    /**
     * @return A list of static IP addresses assigned to this sim. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
     * 
     */
    public Output<Optional<List<SimStaticIpPropertiesResponse>>> staticIpConfiguration() {
        return Codegen.optional(this.staticIpConfiguration);
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Sim(String name) {
        this(name, SimArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Sim(String name, SimArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Sim(String name, SimArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:mobilenetwork:Sim", name, args == null ? SimArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Sim(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:mobilenetwork:Sim", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:mobilenetwork/v20220101preview:Sim").build()),
                Output.of(Alias.builder().type("azure-native:mobilenetwork/v20220301preview:Sim").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Sim get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Sim(name, id, options);
    }
}
