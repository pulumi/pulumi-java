// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ListEffectiveVirtualNetworkByNetworkManagerArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListEffectiveVirtualNetworkByNetworkManagerArgs Empty = new ListEffectiveVirtualNetworkByNetworkManagerArgs();

    /**
     * Conditional Members.
     * 
     */
    @Import(name="conditionalMembers")
    private Output</* @Nullable */ String> conditionalMembers;

    /**
     * @return Conditional Members.
     * 
     */
    public Output</* @Nullable */ String> conditionalMembers() {
        return this.conditionalMembers;
    }

    /**
     * The name of the network manager.
     * 
     */
    @Import(name="networkManagerName", required=true)
    private Output<String> networkManagerName;

    /**
     * @return The name of the network manager.
     * 
     */
    public Output<String> networkManagerName() {
        return this.networkManagerName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
     * 
     */
    @Import(name="skipToken")
    private Output</* @Nullable */ String> skipToken;

    /**
     * @return Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
     * 
     */
    public Output</* @Nullable */ String> skipToken() {
        return this.skipToken;
    }

    /**
     * An optional query parameter which specifies the maximum number of records to be returned by the server.
     * 
     */
    @Import(name="top")
    private Output</* @Nullable */ Integer> top;

    /**
     * @return An optional query parameter which specifies the maximum number of records to be returned by the server.
     * 
     */
    public Output</* @Nullable */ Integer> top() {
        return this.top;
    }

    private ListEffectiveVirtualNetworkByNetworkManagerArgs() {}

    private ListEffectiveVirtualNetworkByNetworkManagerArgs(ListEffectiveVirtualNetworkByNetworkManagerArgs $) {
        this.conditionalMembers = $.conditionalMembers;
        this.networkManagerName = $.networkManagerName;
        this.resourceGroupName = $.resourceGroupName;
        this.skipToken = $.skipToken;
        this.top = $.top;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListEffectiveVirtualNetworkByNetworkManagerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListEffectiveVirtualNetworkByNetworkManagerArgs $;

        public Builder() {
            $ = new ListEffectiveVirtualNetworkByNetworkManagerArgs();
        }

        public Builder(ListEffectiveVirtualNetworkByNetworkManagerArgs defaults) {
            $ = new ListEffectiveVirtualNetworkByNetworkManagerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditionalMembers Conditional Members.
         * 
         * @return builder
         * 
         */
        public Builder conditionalMembers(Output</* @Nullable */ String> conditionalMembers) {
            $.conditionalMembers = conditionalMembers;
            return this;
        }

        /**
         * @param conditionalMembers Conditional Members.
         * 
         * @return builder
         * 
         */
        public Builder conditionalMembers(@Nullable String conditionalMembers) {
            return conditionalMembers(Output.of(conditionalMembers));
        }

        /**
         * @param networkManagerName The name of the network manager.
         * 
         * @return builder
         * 
         */
        public Builder networkManagerName(Output<String> networkManagerName) {
            $.networkManagerName = networkManagerName;
            return this;
        }

        /**
         * @param networkManagerName The name of the network manager.
         * 
         * @return builder
         * 
         */
        public Builder networkManagerName(String networkManagerName) {
            return networkManagerName(Output.of(networkManagerName));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skipToken Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
         * 
         * @return builder
         * 
         */
        public Builder skipToken(Output</* @Nullable */ String> skipToken) {
            $.skipToken = skipToken;
            return this;
        }

        /**
         * @param skipToken Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
         * 
         * @return builder
         * 
         */
        public Builder skipToken(@Nullable String skipToken) {
            return skipToken(Output.of(skipToken));
        }

        /**
         * @param top An optional query parameter which specifies the maximum number of records to be returned by the server.
         * 
         * @return builder
         * 
         */
        public Builder top(Output</* @Nullable */ Integer> top) {
            $.top = top;
            return this;
        }

        /**
         * @param top An optional query parameter which specifies the maximum number of records to be returned by the server.
         * 
         * @return builder
         * 
         */
        public Builder top(@Nullable Integer top) {
            return top(Output.of(top));
        }

        public ListEffectiveVirtualNetworkByNetworkManagerArgs build() {
            $.networkManagerName = Objects.requireNonNull($.networkManagerName, "expected parameter 'networkManagerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
