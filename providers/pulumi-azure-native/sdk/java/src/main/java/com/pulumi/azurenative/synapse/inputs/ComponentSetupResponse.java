// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.inputs;

import com.pulumi.azurenative.synapse.inputs.SecureStringResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The custom setup of installing 3rd party components.
 * 
 */
public final class ComponentSetupResponse extends com.pulumi.resources.InvokeArgs {

    public static final ComponentSetupResponse Empty = new ComponentSetupResponse();

    /**
     * The name of the 3rd party component.
     * 
     */
    @Import(name="componentName", required=true)
    private String componentName;

    public String componentName() {
        return this.componentName;
    }

    /**
     * The license key to activate the component.
     * 
     */
    @Import(name="licenseKey")
    private @Nullable SecureStringResponse licenseKey;

    public Optional<SecureStringResponse> licenseKey() {
        return Optional.ofNullable(this.licenseKey);
    }

    /**
     * The type of custom setup.
     * Expected value is &#39;ComponentSetup&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private ComponentSetupResponse() {}

    private ComponentSetupResponse(ComponentSetupResponse $) {
        this.componentName = $.componentName;
        this.licenseKey = $.licenseKey;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComponentSetupResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComponentSetupResponse $;

        public Builder() {
            $ = new ComponentSetupResponse();
        }

        public Builder(ComponentSetupResponse defaults) {
            $ = new ComponentSetupResponse(Objects.requireNonNull(defaults));
        }

        public Builder componentName(String componentName) {
            $.componentName = componentName;
            return this;
        }

        public Builder licenseKey(@Nullable SecureStringResponse licenseKey) {
            $.licenseKey = licenseKey;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public ComponentSetupResponse build() {
            $.componentName = Objects.requireNonNull($.componentName, "expected parameter 'componentName' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
