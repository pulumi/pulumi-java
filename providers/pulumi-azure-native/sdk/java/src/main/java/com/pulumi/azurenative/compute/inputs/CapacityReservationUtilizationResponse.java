// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.SubResourceReadOnlyResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


/**
 * Represents the capacity reservation utilization in terms of resources allocated.
 * 
 */
public final class CapacityReservationUtilizationResponse extends com.pulumi.resources.InvokeArgs {

    public static final CapacityReservationUtilizationResponse Empty = new CapacityReservationUtilizationResponse();

    /**
     * A list of all virtual machines resource ids allocated against the capacity reservation.
     * 
     */
    @Import(name="virtualMachinesAllocated", required=true)
    private List<SubResourceReadOnlyResponse> virtualMachinesAllocated;

    /**
     * @return A list of all virtual machines resource ids allocated against the capacity reservation.
     * 
     */
    public List<SubResourceReadOnlyResponse> virtualMachinesAllocated() {
        return this.virtualMachinesAllocated;
    }

    private CapacityReservationUtilizationResponse() {}

    private CapacityReservationUtilizationResponse(CapacityReservationUtilizationResponse $) {
        this.virtualMachinesAllocated = $.virtualMachinesAllocated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapacityReservationUtilizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapacityReservationUtilizationResponse $;

        public Builder() {
            $ = new CapacityReservationUtilizationResponse();
        }

        public Builder(CapacityReservationUtilizationResponse defaults) {
            $ = new CapacityReservationUtilizationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param virtualMachinesAllocated A list of all virtual machines resource ids allocated against the capacity reservation.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachinesAllocated(List<SubResourceReadOnlyResponse> virtualMachinesAllocated) {
            $.virtualMachinesAllocated = virtualMachinesAllocated;
            return this;
        }

        /**
         * @param virtualMachinesAllocated A list of all virtual machines resource ids allocated against the capacity reservation.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachinesAllocated(SubResourceReadOnlyResponse... virtualMachinesAllocated) {
            return virtualMachinesAllocated(List.of(virtualMachinesAllocated));
        }

        public CapacityReservationUtilizationResponse build() {
            $.virtualMachinesAllocated = Objects.requireNonNull($.virtualMachinesAllocated, "expected parameter 'virtualMachinesAllocated' to be non-null");
            return $;
        }
    }

}
