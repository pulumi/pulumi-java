// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetManagedInstanceAdministratorArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedInstanceAdministratorArgs Empty = new GetManagedInstanceAdministratorArgs();

    @Import(name="administratorName", required=true)
    private String administratorName;

    public String administratorName() {
        return this.administratorName;
    }

    /**
     * The name of the managed instance.
     * 
     */
    @Import(name="managedInstanceName", required=true)
    private String managedInstanceName;

    public String managedInstanceName() {
        return this.managedInstanceName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetManagedInstanceAdministratorArgs() {}

    private GetManagedInstanceAdministratorArgs(GetManagedInstanceAdministratorArgs $) {
        this.administratorName = $.administratorName;
        this.managedInstanceName = $.managedInstanceName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedInstanceAdministratorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedInstanceAdministratorArgs $;

        public Builder() {
            $ = new GetManagedInstanceAdministratorArgs();
        }

        public Builder(GetManagedInstanceAdministratorArgs defaults) {
            $ = new GetManagedInstanceAdministratorArgs(Objects.requireNonNull(defaults));
        }

        public Builder administratorName(String administratorName) {
            $.administratorName = administratorName;
            return this;
        }

        public Builder managedInstanceName(String managedInstanceName) {
            $.managedInstanceName = managedInstanceName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public GetManagedInstanceAdministratorArgs build() {
            $.administratorName = Objects.requireNonNull($.administratorName, "expected parameter 'administratorName' to be non-null");
            $.managedInstanceName = Objects.requireNonNull($.managedInstanceName, "expected parameter 'managedInstanceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
