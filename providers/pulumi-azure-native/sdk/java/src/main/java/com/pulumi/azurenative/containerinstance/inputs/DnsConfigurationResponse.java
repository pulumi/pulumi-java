// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * DNS configuration for the container group.
 * 
 */
public final class DnsConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final DnsConfigurationResponse Empty = new DnsConfigurationResponse();

    /**
     * The DNS servers for the container group.
     * 
     */
    @Import(name="nameServers", required=true)
    private List<String> nameServers;

    /**
     * @return The DNS servers for the container group.
     * 
     */
    public List<String> nameServers() {
        return this.nameServers;
    }

    /**
     * The DNS options for the container group.
     * 
     */
    @Import(name="options")
    private @Nullable String options;

    /**
     * @return The DNS options for the container group.
     * 
     */
    public Optional<String> options() {
        return Optional.ofNullable(this.options);
    }

    /**
     * The DNS search domains for hostname lookup in the container group.
     * 
     */
    @Import(name="searchDomains")
    private @Nullable String searchDomains;

    /**
     * @return The DNS search domains for hostname lookup in the container group.
     * 
     */
    public Optional<String> searchDomains() {
        return Optional.ofNullable(this.searchDomains);
    }

    private DnsConfigurationResponse() {}

    private DnsConfigurationResponse(DnsConfigurationResponse $) {
        this.nameServers = $.nameServers;
        this.options = $.options;
        this.searchDomains = $.searchDomains;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsConfigurationResponse $;

        public Builder() {
            $ = new DnsConfigurationResponse();
        }

        public Builder(DnsConfigurationResponse defaults) {
            $ = new DnsConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param nameServers The DNS servers for the container group.
         * 
         * @return builder
         * 
         */
        public Builder nameServers(List<String> nameServers) {
            $.nameServers = nameServers;
            return this;
        }

        /**
         * @param nameServers The DNS servers for the container group.
         * 
         * @return builder
         * 
         */
        public Builder nameServers(String... nameServers) {
            return nameServers(List.of(nameServers));
        }

        /**
         * @param options The DNS options for the container group.
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable String options) {
            $.options = options;
            return this;
        }

        /**
         * @param searchDomains The DNS search domains for hostname lookup in the container group.
         * 
         * @return builder
         * 
         */
        public Builder searchDomains(@Nullable String searchDomains) {
            $.searchDomains = searchDomains;
            return this;
        }

        public DnsConfigurationResponse build() {
            $.nameServers = Objects.requireNonNull($.nameServers, "expected parameter 'nameServers' to be non-null");
            return $;
        }
    }

}
