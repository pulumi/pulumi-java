// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.DiskEncryptionSetParametersResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The parameters of a managed disk.
 * 
 */
public final class ManagedDiskParametersResponse extends com.pulumi.resources.InvokeArgs {

    public static final ManagedDiskParametersResponse Empty = new ManagedDiskParametersResponse();

    /**
     * Specifies the customer managed disk encryption set resource id for the managed disk.
     * 
     */
    @Import(name="diskEncryptionSet")
    private @Nullable DiskEncryptionSetParametersResponse diskEncryptionSet;

    /**
     * @return Specifies the customer managed disk encryption set resource id for the managed disk.
     * 
     */
    public Optional<DiskEncryptionSetParametersResponse> diskEncryptionSet() {
        return Optional.ofNullable(this.diskEncryptionSet);
    }

    /**
     * Resource Id
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return Resource Id
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Specifies the storage account type for the managed disk. Managed OS disk storage account type can only be set when you create the scale set. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
     * 
     */
    @Import(name="storageAccountType")
    private @Nullable String storageAccountType;

    /**
     * @return Specifies the storage account type for the managed disk. Managed OS disk storage account type can only be set when you create the scale set. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
     * 
     */
    public Optional<String> storageAccountType() {
        return Optional.ofNullable(this.storageAccountType);
    }

    private ManagedDiskParametersResponse() {}

    private ManagedDiskParametersResponse(ManagedDiskParametersResponse $) {
        this.diskEncryptionSet = $.diskEncryptionSet;
        this.id = $.id;
        this.storageAccountType = $.storageAccountType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedDiskParametersResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedDiskParametersResponse $;

        public Builder() {
            $ = new ManagedDiskParametersResponse();
        }

        public Builder(ManagedDiskParametersResponse defaults) {
            $ = new ManagedDiskParametersResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param diskEncryptionSet Specifies the customer managed disk encryption set resource id for the managed disk.
         * 
         * @return builder
         * 
         */
        public Builder diskEncryptionSet(@Nullable DiskEncryptionSetParametersResponse diskEncryptionSet) {
            $.diskEncryptionSet = diskEncryptionSet;
            return this;
        }

        /**
         * @param id Resource Id
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param storageAccountType Specifies the storage account type for the managed disk. Managed OS disk storage account type can only be set when you create the scale set. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountType(@Nullable String storageAccountType) {
            $.storageAccountType = storageAccountType;
            return this;
        }

        public ManagedDiskParametersResponse build() {
            return $;
        }
    }

}
