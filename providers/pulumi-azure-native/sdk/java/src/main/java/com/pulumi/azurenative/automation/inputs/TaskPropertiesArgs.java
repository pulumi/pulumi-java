// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Task properties of the software update configuration.
 * 
 */
public final class TaskPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskPropertiesArgs Empty = new TaskPropertiesArgs();

    /**
     * Gets or sets the parameters of the task.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    /**
     * @return Gets or sets the parameters of the task.
     * 
     */
    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Gets or sets the name of the runbook.
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return Gets or sets the name of the runbook.
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    private TaskPropertiesArgs() {}

    private TaskPropertiesArgs(TaskPropertiesArgs $) {
        this.parameters = $.parameters;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskPropertiesArgs $;

        public Builder() {
            $ = new TaskPropertiesArgs();
        }

        public Builder(TaskPropertiesArgs defaults) {
            $ = new TaskPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param parameters Gets or sets the parameters of the task.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Gets or sets the parameters of the task.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param source Gets or sets the name of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Gets or sets the name of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public TaskPropertiesArgs build() {
            return $;
        }
    }

}
