// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid;

import com.pulumi.azurenative.eventgrid.enums.PartnerRegistrationVisibilityState;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PartnerRegistrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PartnerRegistrationArgs Empty = new PartnerRegistrationArgs();

    /**
     * List of Azure subscription Ids that are authorized to create a partner namespace
     * associated with this partner registration. This is an optional property. Creating
     * partner namespaces is always permitted under the same Azure subscription as the one used
     * for creating the partner registration.
     * 
     */
    @Import(name="authorizedAzureSubscriptionIds")
    private @Nullable Output<List<String>> authorizedAzureSubscriptionIds;

    /**
     * @return List of Azure subscription Ids that are authorized to create a partner namespace
     * associated with this partner registration. This is an optional property. Creating
     * partner namespaces is always permitted under the same Azure subscription as the one used
     * for creating the partner registration.
     * 
     */
    public Optional<Output<List<String>>> authorizedAzureSubscriptionIds() {
        return Optional.ofNullable(this.authorizedAzureSubscriptionIds);
    }

    /**
     * The extension of the customer service URI of the publisher.
     * 
     */
    @Import(name="customerServiceUri")
    private @Nullable Output<String> customerServiceUri;

    /**
     * @return The extension of the customer service URI of the publisher.
     * 
     */
    public Optional<Output<String>> customerServiceUri() {
        return Optional.ofNullable(this.customerServiceUri);
    }

    /**
     * Location of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Location of the resource.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * URI of the logo.
     * 
     */
    @Import(name="logoUri")
    private @Nullable Output<String> logoUri;

    /**
     * @return URI of the logo.
     * 
     */
    public Optional<Output<String>> logoUri() {
        return Optional.ofNullable(this.logoUri);
    }

    /**
     * Long description for the custom scenarios and integration to be displayed in the portal if needed.
     * Length of this description should not exceed 2048 characters.
     * 
     */
    @Import(name="longDescription")
    private @Nullable Output<String> longDescription;

    /**
     * @return Long description for the custom scenarios and integration to be displayed in the portal if needed.
     * Length of this description should not exceed 2048 characters.
     * 
     */
    public Optional<Output<String>> longDescription() {
        return Optional.ofNullable(this.longDescription);
    }

    /**
     * The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.
     * 
     */
    @Import(name="partnerCustomerServiceExtension")
    private @Nullable Output<String> partnerCustomerServiceExtension;

    /**
     * @return The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.
     * 
     */
    public Optional<Output<String>> partnerCustomerServiceExtension() {
        return Optional.ofNullable(this.partnerCustomerServiceExtension);
    }

    /**
     * The customer service number of the publisher. The expected phone format should start with a &#39;+&#39; sign
     * followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
     * length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
     * +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43
     * 
     */
    @Import(name="partnerCustomerServiceNumber")
    private @Nullable Output<String> partnerCustomerServiceNumber;

    /**
     * @return The customer service number of the publisher. The expected phone format should start with a &#39;+&#39; sign
     * followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
     * length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
     * +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43
     * 
     */
    public Optional<Output<String>> partnerCustomerServiceNumber() {
        return Optional.ofNullable(this.partnerCustomerServiceNumber);
    }

    /**
     * Official name of the partner name. For example: &#34;Contoso&#34;.
     * 
     */
    @Import(name="partnerName")
    private @Nullable Output<String> partnerName;

    /**
     * @return Official name of the partner name. For example: &#34;Contoso&#34;.
     * 
     */
    public Optional<Output<String>> partnerName() {
        return Optional.ofNullable(this.partnerName);
    }

    /**
     * Name of the partner registration.
     * 
     */
    @Import(name="partnerRegistrationName")
    private @Nullable Output<String> partnerRegistrationName;

    /**
     * @return Name of the partner registration.
     * 
     */
    public Optional<Output<String>> partnerRegistrationName() {
        return Optional.ofNullable(this.partnerRegistrationName);
    }

    /**
     * Short description of the partner resource type. The length of this description should not exceed 256 characters.
     * 
     */
    @Import(name="partnerResourceTypeDescription")
    private @Nullable Output<String> partnerResourceTypeDescription;

    /**
     * @return Short description of the partner resource type. The length of this description should not exceed 256 characters.
     * 
     */
    public Optional<Output<String>> partnerResourceTypeDescription() {
        return Optional.ofNullable(this.partnerResourceTypeDescription);
    }

    /**
     * Display name of the partner resource type.
     * 
     */
    @Import(name="partnerResourceTypeDisplayName")
    private @Nullable Output<String> partnerResourceTypeDisplayName;

    /**
     * @return Display name of the partner resource type.
     * 
     */
    public Optional<Output<String>> partnerResourceTypeDisplayName() {
        return Optional.ofNullable(this.partnerResourceTypeDisplayName);
    }

    /**
     * Name of the partner resource type.
     * 
     */
    @Import(name="partnerResourceTypeName")
    private @Nullable Output<String> partnerResourceTypeName;

    /**
     * @return Name of the partner resource type.
     * 
     */
    public Optional<Output<String>> partnerResourceTypeName() {
        return Optional.ofNullable(this.partnerResourceTypeName);
    }

    /**
     * The name of the resource group within the user&#39;s subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * URI of the partner website that can be used by Azure customers to setup Event Grid
     * integration on an event source.
     * 
     */
    @Import(name="setupUri")
    private @Nullable Output<String> setupUri;

    /**
     * @return URI of the partner website that can be used by Azure customers to setup Event Grid
     * integration on an event source.
     * 
     */
    public Optional<Output<String>> setupUri() {
        return Optional.ofNullable(this.setupUri);
    }

    /**
     * Tags of the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Tags of the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Visibility state of the partner registration.
     * 
     */
    @Import(name="visibilityState")
    private @Nullable Output<Either<String,PartnerRegistrationVisibilityState>> visibilityState;

    /**
     * @return Visibility state of the partner registration.
     * 
     */
    public Optional<Output<Either<String,PartnerRegistrationVisibilityState>>> visibilityState() {
        return Optional.ofNullable(this.visibilityState);
    }

    private PartnerRegistrationArgs() {}

    private PartnerRegistrationArgs(PartnerRegistrationArgs $) {
        this.authorizedAzureSubscriptionIds = $.authorizedAzureSubscriptionIds;
        this.customerServiceUri = $.customerServiceUri;
        this.location = $.location;
        this.logoUri = $.logoUri;
        this.longDescription = $.longDescription;
        this.partnerCustomerServiceExtension = $.partnerCustomerServiceExtension;
        this.partnerCustomerServiceNumber = $.partnerCustomerServiceNumber;
        this.partnerName = $.partnerName;
        this.partnerRegistrationName = $.partnerRegistrationName;
        this.partnerResourceTypeDescription = $.partnerResourceTypeDescription;
        this.partnerResourceTypeDisplayName = $.partnerResourceTypeDisplayName;
        this.partnerResourceTypeName = $.partnerResourceTypeName;
        this.resourceGroupName = $.resourceGroupName;
        this.setupUri = $.setupUri;
        this.tags = $.tags;
        this.visibilityState = $.visibilityState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PartnerRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PartnerRegistrationArgs $;

        public Builder() {
            $ = new PartnerRegistrationArgs();
        }

        public Builder(PartnerRegistrationArgs defaults) {
            $ = new PartnerRegistrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizedAzureSubscriptionIds List of Azure subscription Ids that are authorized to create a partner namespace
         * associated with this partner registration. This is an optional property. Creating
         * partner namespaces is always permitted under the same Azure subscription as the one used
         * for creating the partner registration.
         * 
         * @return builder
         * 
         */
        public Builder authorizedAzureSubscriptionIds(@Nullable Output<List<String>> authorizedAzureSubscriptionIds) {
            $.authorizedAzureSubscriptionIds = authorizedAzureSubscriptionIds;
            return this;
        }

        /**
         * @param authorizedAzureSubscriptionIds List of Azure subscription Ids that are authorized to create a partner namespace
         * associated with this partner registration. This is an optional property. Creating
         * partner namespaces is always permitted under the same Azure subscription as the one used
         * for creating the partner registration.
         * 
         * @return builder
         * 
         */
        public Builder authorizedAzureSubscriptionIds(List<String> authorizedAzureSubscriptionIds) {
            return authorizedAzureSubscriptionIds(Output.of(authorizedAzureSubscriptionIds));
        }

        /**
         * @param authorizedAzureSubscriptionIds List of Azure subscription Ids that are authorized to create a partner namespace
         * associated with this partner registration. This is an optional property. Creating
         * partner namespaces is always permitted under the same Azure subscription as the one used
         * for creating the partner registration.
         * 
         * @return builder
         * 
         */
        public Builder authorizedAzureSubscriptionIds(String... authorizedAzureSubscriptionIds) {
            return authorizedAzureSubscriptionIds(List.of(authorizedAzureSubscriptionIds));
        }

        /**
         * @param customerServiceUri The extension of the customer service URI of the publisher.
         * 
         * @return builder
         * 
         */
        public Builder customerServiceUri(@Nullable Output<String> customerServiceUri) {
            $.customerServiceUri = customerServiceUri;
            return this;
        }

        /**
         * @param customerServiceUri The extension of the customer service URI of the publisher.
         * 
         * @return builder
         * 
         */
        public Builder customerServiceUri(String customerServiceUri) {
            return customerServiceUri(Output.of(customerServiceUri));
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param logoUri URI of the logo.
         * 
         * @return builder
         * 
         */
        public Builder logoUri(@Nullable Output<String> logoUri) {
            $.logoUri = logoUri;
            return this;
        }

        /**
         * @param logoUri URI of the logo.
         * 
         * @return builder
         * 
         */
        public Builder logoUri(String logoUri) {
            return logoUri(Output.of(logoUri));
        }

        /**
         * @param longDescription Long description for the custom scenarios and integration to be displayed in the portal if needed.
         * Length of this description should not exceed 2048 characters.
         * 
         * @return builder
         * 
         */
        public Builder longDescription(@Nullable Output<String> longDescription) {
            $.longDescription = longDescription;
            return this;
        }

        /**
         * @param longDescription Long description for the custom scenarios and integration to be displayed in the portal if needed.
         * Length of this description should not exceed 2048 characters.
         * 
         * @return builder
         * 
         */
        public Builder longDescription(String longDescription) {
            return longDescription(Output.of(longDescription));
        }

        /**
         * @param partnerCustomerServiceExtension The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.
         * 
         * @return builder
         * 
         */
        public Builder partnerCustomerServiceExtension(@Nullable Output<String> partnerCustomerServiceExtension) {
            $.partnerCustomerServiceExtension = partnerCustomerServiceExtension;
            return this;
        }

        /**
         * @param partnerCustomerServiceExtension The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.
         * 
         * @return builder
         * 
         */
        public Builder partnerCustomerServiceExtension(String partnerCustomerServiceExtension) {
            return partnerCustomerServiceExtension(Output.of(partnerCustomerServiceExtension));
        }

        /**
         * @param partnerCustomerServiceNumber The customer service number of the publisher. The expected phone format should start with a &#39;+&#39; sign
         * followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
         * length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
         * +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43
         * 
         * @return builder
         * 
         */
        public Builder partnerCustomerServiceNumber(@Nullable Output<String> partnerCustomerServiceNumber) {
            $.partnerCustomerServiceNumber = partnerCustomerServiceNumber;
            return this;
        }

        /**
         * @param partnerCustomerServiceNumber The customer service number of the publisher. The expected phone format should start with a &#39;+&#39; sign
         * followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
         * length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
         * +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43
         * 
         * @return builder
         * 
         */
        public Builder partnerCustomerServiceNumber(String partnerCustomerServiceNumber) {
            return partnerCustomerServiceNumber(Output.of(partnerCustomerServiceNumber));
        }

        /**
         * @param partnerName Official name of the partner name. For example: &#34;Contoso&#34;.
         * 
         * @return builder
         * 
         */
        public Builder partnerName(@Nullable Output<String> partnerName) {
            $.partnerName = partnerName;
            return this;
        }

        /**
         * @param partnerName Official name of the partner name. For example: &#34;Contoso&#34;.
         * 
         * @return builder
         * 
         */
        public Builder partnerName(String partnerName) {
            return partnerName(Output.of(partnerName));
        }

        /**
         * @param partnerRegistrationName Name of the partner registration.
         * 
         * @return builder
         * 
         */
        public Builder partnerRegistrationName(@Nullable Output<String> partnerRegistrationName) {
            $.partnerRegistrationName = partnerRegistrationName;
            return this;
        }

        /**
         * @param partnerRegistrationName Name of the partner registration.
         * 
         * @return builder
         * 
         */
        public Builder partnerRegistrationName(String partnerRegistrationName) {
            return partnerRegistrationName(Output.of(partnerRegistrationName));
        }

        /**
         * @param partnerResourceTypeDescription Short description of the partner resource type. The length of this description should not exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder partnerResourceTypeDescription(@Nullable Output<String> partnerResourceTypeDescription) {
            $.partnerResourceTypeDescription = partnerResourceTypeDescription;
            return this;
        }

        /**
         * @param partnerResourceTypeDescription Short description of the partner resource type. The length of this description should not exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder partnerResourceTypeDescription(String partnerResourceTypeDescription) {
            return partnerResourceTypeDescription(Output.of(partnerResourceTypeDescription));
        }

        /**
         * @param partnerResourceTypeDisplayName Display name of the partner resource type.
         * 
         * @return builder
         * 
         */
        public Builder partnerResourceTypeDisplayName(@Nullable Output<String> partnerResourceTypeDisplayName) {
            $.partnerResourceTypeDisplayName = partnerResourceTypeDisplayName;
            return this;
        }

        /**
         * @param partnerResourceTypeDisplayName Display name of the partner resource type.
         * 
         * @return builder
         * 
         */
        public Builder partnerResourceTypeDisplayName(String partnerResourceTypeDisplayName) {
            return partnerResourceTypeDisplayName(Output.of(partnerResourceTypeDisplayName));
        }

        /**
         * @param partnerResourceTypeName Name of the partner resource type.
         * 
         * @return builder
         * 
         */
        public Builder partnerResourceTypeName(@Nullable Output<String> partnerResourceTypeName) {
            $.partnerResourceTypeName = partnerResourceTypeName;
            return this;
        }

        /**
         * @param partnerResourceTypeName Name of the partner resource type.
         * 
         * @return builder
         * 
         */
        public Builder partnerResourceTypeName(String partnerResourceTypeName) {
            return partnerResourceTypeName(Output.of(partnerResourceTypeName));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param setupUri URI of the partner website that can be used by Azure customers to setup Event Grid
         * integration on an event source.
         * 
         * @return builder
         * 
         */
        public Builder setupUri(@Nullable Output<String> setupUri) {
            $.setupUri = setupUri;
            return this;
        }

        /**
         * @param setupUri URI of the partner website that can be used by Azure customers to setup Event Grid
         * integration on an event source.
         * 
         * @return builder
         * 
         */
        public Builder setupUri(String setupUri) {
            return setupUri(Output.of(setupUri));
        }

        /**
         * @param tags Tags of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param visibilityState Visibility state of the partner registration.
         * 
         * @return builder
         * 
         */
        public Builder visibilityState(@Nullable Output<Either<String,PartnerRegistrationVisibilityState>> visibilityState) {
            $.visibilityState = visibilityState;
            return this;
        }

        /**
         * @param visibilityState Visibility state of the partner registration.
         * 
         * @return builder
         * 
         */
        public Builder visibilityState(Either<String,PartnerRegistrationVisibilityState> visibilityState) {
            return visibilityState(Output.of(visibilityState));
        }

        /**
         * @param visibilityState Visibility state of the partner registration.
         * 
         * @return builder
         * 
         */
        public Builder visibilityState(String visibilityState) {
            return visibilityState(Either.ofLeft(visibilityState));
        }

        /**
         * @param visibilityState Visibility state of the partner registration.
         * 
         * @return builder
         * 
         */
        public Builder visibilityState(PartnerRegistrationVisibilityState visibilityState) {
            return visibilityState(Either.ofRight(visibilityState));
        }

        public PartnerRegistrationArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
