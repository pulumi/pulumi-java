// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.managedservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Properties of a registration assignment.
 * 
 */
public final class RegistrationAssignmentPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegistrationAssignmentPropertiesArgs Empty = new RegistrationAssignmentPropertiesArgs();

    /**
     * Fully qualified path of the registration definition.
     * 
     */
    @Import(name="registrationDefinitionId", required=true)
      private final Output<String> registrationDefinitionId;

    public Output<String> registrationDefinitionId() {
        return this.registrationDefinitionId;
    }

    public RegistrationAssignmentPropertiesArgs(Output<String> registrationDefinitionId) {
        this.registrationDefinitionId = Objects.requireNonNull(registrationDefinitionId, "expected parameter 'registrationDefinitionId' to be non-null");
    }

    private RegistrationAssignmentPropertiesArgs() {
        this.registrationDefinitionId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistrationAssignmentPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> registrationDefinitionId;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistrationAssignmentPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.registrationDefinitionId = defaults.registrationDefinitionId;
        }

        public Builder registrationDefinitionId(Output<String> registrationDefinitionId) {
            this.registrationDefinitionId = Objects.requireNonNull(registrationDefinitionId);
            return this;
        }
        public Builder registrationDefinitionId(String registrationDefinitionId) {
            this.registrationDefinitionId = Output.of(Objects.requireNonNull(registrationDefinitionId));
            return this;
        }        public RegistrationAssignmentPropertiesArgs build() {
            return new RegistrationAssignmentPropertiesArgs(registrationDefinitionId);
        }
    }
}
