// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.ActivityDependencyArgs;
import com.pulumi.azurenative.datafactory.inputs.ActivityPolicyArgs;
import com.pulumi.azurenative.datafactory.inputs.CustomActivityReferenceObjectArgs;
import com.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceArgs;
import com.pulumi.azurenative.datafactory.inputs.UserPropertyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Custom activity type.
 * 
 */
public final class CustomActivityArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomActivityArgs Empty = new CustomActivityArgs();

    /**
     * Elevation level and scope for the user, default is nonadmin task. Type: string (or Expression with resultType double).
     * 
     */
    @Import(name="autoUserSpecification")
    private @Nullable Output<Object> autoUserSpecification;

    public Optional<Output<Object>> autoUserSpecification() {
        return Optional.ofNullable(this.autoUserSpecification);
    }

    /**
     * Command for custom activity Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="command", required=true)
    private Output<Object> command;

    public Output<Object> command() {
        return this.command;
    }

    /**
     * Activity depends on condition.
     * 
     */
    @Import(name="dependsOn")
    private @Nullable Output<List<ActivityDependencyArgs>> dependsOn;

    public Optional<Output<List<ActivityDependencyArgs>>> dependsOn() {
        return Optional.ofNullable(this.dependsOn);
    }

    /**
     * Activity description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.
     * 
     */
    @Import(name="extendedProperties")
    private @Nullable Output<Map<String,Object>> extendedProperties;

    public Optional<Output<Map<String,Object>>> extendedProperties() {
        return Optional.ofNullable(this.extendedProperties);
    }

    /**
     * Folder path for resource files Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="folderPath")
    private @Nullable Output<Object> folderPath;

    public Optional<Output<Object>> folderPath() {
        return Optional.ofNullable(this.folderPath);
    }

    /**
     * Linked service reference.
     * 
     */
    @Import(name="linkedServiceName")
    private @Nullable Output<LinkedServiceReferenceArgs> linkedServiceName;

    public Optional<Output<LinkedServiceReferenceArgs>> linkedServiceName() {
        return Optional.ofNullable(this.linkedServiceName);
    }

    /**
     * Activity name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Activity policy.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<ActivityPolicyArgs> policy;

    public Optional<Output<ActivityPolicyArgs>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Reference objects
     * 
     */
    @Import(name="referenceObjects")
    private @Nullable Output<CustomActivityReferenceObjectArgs> referenceObjects;

    public Optional<Output<CustomActivityReferenceObjectArgs>> referenceObjects() {
        return Optional.ofNullable(this.referenceObjects);
    }

    /**
     * Resource linked service reference.
     * 
     */
    @Import(name="resourceLinkedService")
    private @Nullable Output<LinkedServiceReferenceArgs> resourceLinkedService;

    public Optional<Output<LinkedServiceReferenceArgs>> resourceLinkedService() {
        return Optional.ofNullable(this.resourceLinkedService);
    }

    /**
     * The retention time for the files submitted for custom activity. Type: double (or Expression with resultType double).
     * 
     */
    @Import(name="retentionTimeInDays")
    private @Nullable Output<Object> retentionTimeInDays;

    public Optional<Output<Object>> retentionTimeInDays() {
        return Optional.ofNullable(this.retentionTimeInDays);
    }

    /**
     * Type of activity.
     * Expected value is &#39;Custom&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    /**
     * Activity user properties.
     * 
     */
    @Import(name="userProperties")
    private @Nullable Output<List<UserPropertyArgs>> userProperties;

    public Optional<Output<List<UserPropertyArgs>>> userProperties() {
        return Optional.ofNullable(this.userProperties);
    }

    private CustomActivityArgs() {}

    private CustomActivityArgs(CustomActivityArgs $) {
        this.autoUserSpecification = $.autoUserSpecification;
        this.command = $.command;
        this.dependsOn = $.dependsOn;
        this.description = $.description;
        this.extendedProperties = $.extendedProperties;
        this.folderPath = $.folderPath;
        this.linkedServiceName = $.linkedServiceName;
        this.name = $.name;
        this.policy = $.policy;
        this.referenceObjects = $.referenceObjects;
        this.resourceLinkedService = $.resourceLinkedService;
        this.retentionTimeInDays = $.retentionTimeInDays;
        this.type = $.type;
        this.userProperties = $.userProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomActivityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomActivityArgs $;

        public Builder() {
            $ = new CustomActivityArgs();
        }

        public Builder(CustomActivityArgs defaults) {
            $ = new CustomActivityArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoUserSpecification(@Nullable Output<Object> autoUserSpecification) {
            $.autoUserSpecification = autoUserSpecification;
            return this;
        }

        public Builder autoUserSpecification(Object autoUserSpecification) {
            return autoUserSpecification(Output.of(autoUserSpecification));
        }

        public Builder command(Output<Object> command) {
            $.command = command;
            return this;
        }

        public Builder command(Object command) {
            return command(Output.of(command));
        }

        public Builder dependsOn(@Nullable Output<List<ActivityDependencyArgs>> dependsOn) {
            $.dependsOn = dependsOn;
            return this;
        }

        public Builder dependsOn(List<ActivityDependencyArgs> dependsOn) {
            return dependsOn(Output.of(dependsOn));
        }

        public Builder dependsOn(ActivityDependencyArgs... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder extendedProperties(@Nullable Output<Map<String,Object>> extendedProperties) {
            $.extendedProperties = extendedProperties;
            return this;
        }

        public Builder extendedProperties(Map<String,Object> extendedProperties) {
            return extendedProperties(Output.of(extendedProperties));
        }

        public Builder folderPath(@Nullable Output<Object> folderPath) {
            $.folderPath = folderPath;
            return this;
        }

        public Builder folderPath(Object folderPath) {
            return folderPath(Output.of(folderPath));
        }

        public Builder linkedServiceName(@Nullable Output<LinkedServiceReferenceArgs> linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        public Builder linkedServiceName(LinkedServiceReferenceArgs linkedServiceName) {
            return linkedServiceName(Output.of(linkedServiceName));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder policy(@Nullable Output<ActivityPolicyArgs> policy) {
            $.policy = policy;
            return this;
        }

        public Builder policy(ActivityPolicyArgs policy) {
            return policy(Output.of(policy));
        }

        public Builder referenceObjects(@Nullable Output<CustomActivityReferenceObjectArgs> referenceObjects) {
            $.referenceObjects = referenceObjects;
            return this;
        }

        public Builder referenceObjects(CustomActivityReferenceObjectArgs referenceObjects) {
            return referenceObjects(Output.of(referenceObjects));
        }

        public Builder resourceLinkedService(@Nullable Output<LinkedServiceReferenceArgs> resourceLinkedService) {
            $.resourceLinkedService = resourceLinkedService;
            return this;
        }

        public Builder resourceLinkedService(LinkedServiceReferenceArgs resourceLinkedService) {
            return resourceLinkedService(Output.of(resourceLinkedService));
        }

        public Builder retentionTimeInDays(@Nullable Output<Object> retentionTimeInDays) {
            $.retentionTimeInDays = retentionTimeInDays;
            return this;
        }

        public Builder retentionTimeInDays(Object retentionTimeInDays) {
            return retentionTimeInDays(Output.of(retentionTimeInDays));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder userProperties(@Nullable Output<List<UserPropertyArgs>> userProperties) {
            $.userProperties = userProperties;
            return this;
        }

        public Builder userProperties(List<UserPropertyArgs> userProperties) {
            return userProperties(Output.of(userProperties));
        }

        public Builder userProperties(UserPropertyArgs... userProperties) {
            return userProperties(List.of(userProperties));
        }

        public CustomActivityArgs build() {
            $.command = Objects.requireNonNull($.command, "expected parameter 'command' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
