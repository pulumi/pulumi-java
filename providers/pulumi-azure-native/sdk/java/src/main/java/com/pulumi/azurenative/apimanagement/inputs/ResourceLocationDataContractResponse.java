// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Resource location data properties.
 * 
 */
public final class ResourceLocationDataContractResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResourceLocationDataContractResponse Empty = new ResourceLocationDataContractResponse();

    /**
     * The city or locality where the resource is located.
     * 
     */
    @Import(name="city")
    private @Nullable String city;

    public Optional<String> city() {
        return Optional.ofNullable(this.city);
    }

    /**
     * The country or region where the resource is located.
     * 
     */
    @Import(name="countryOrRegion")
    private @Nullable String countryOrRegion;

    public Optional<String> countryOrRegion() {
        return Optional.ofNullable(this.countryOrRegion);
    }

    /**
     * The district, state, or province where the resource is located.
     * 
     */
    @Import(name="district")
    private @Nullable String district;

    public Optional<String> district() {
        return Optional.ofNullable(this.district);
    }

    /**
     * A canonical name for the geographic or physical location.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    private ResourceLocationDataContractResponse() {}

    private ResourceLocationDataContractResponse(ResourceLocationDataContractResponse $) {
        this.city = $.city;
        this.countryOrRegion = $.countryOrRegion;
        this.district = $.district;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceLocationDataContractResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceLocationDataContractResponse $;

        public Builder() {
            $ = new ResourceLocationDataContractResponse();
        }

        public Builder(ResourceLocationDataContractResponse defaults) {
            $ = new ResourceLocationDataContractResponse(Objects.requireNonNull(defaults));
        }

        public Builder city(@Nullable String city) {
            $.city = city;
            return this;
        }

        public Builder countryOrRegion(@Nullable String countryOrRegion) {
            $.countryOrRegion = countryOrRegion;
            return this;
        }

        public Builder district(@Nullable String district) {
            $.district = district;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public ResourceLocationDataContractResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
