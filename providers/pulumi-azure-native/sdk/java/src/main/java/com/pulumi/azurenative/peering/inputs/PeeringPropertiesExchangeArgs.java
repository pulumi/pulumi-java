// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.peering.inputs;

import com.pulumi.azurenative.peering.inputs.ExchangeConnectionArgs;
import com.pulumi.azurenative.peering.inputs.SubResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties that define an exchange peering.
 * 
 */
public final class PeeringPropertiesExchangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final PeeringPropertiesExchangeArgs Empty = new PeeringPropertiesExchangeArgs();

    /**
     * The set of connections that constitute an exchange peering.
     * 
     */
    @Import(name="connections")
    private @Nullable Output<List<ExchangeConnectionArgs>> connections;

    /**
     * @return The set of connections that constitute an exchange peering.
     * 
     */
    public Optional<Output<List<ExchangeConnectionArgs>>> connections() {
        return Optional.ofNullable(this.connections);
    }

    /**
     * The reference of the peer ASN.
     * 
     */
    @Import(name="peerAsn")
    private @Nullable Output<SubResourceArgs> peerAsn;

    /**
     * @return The reference of the peer ASN.
     * 
     */
    public Optional<Output<SubResourceArgs>> peerAsn() {
        return Optional.ofNullable(this.peerAsn);
    }

    private PeeringPropertiesExchangeArgs() {}

    private PeeringPropertiesExchangeArgs(PeeringPropertiesExchangeArgs $) {
        this.connections = $.connections;
        this.peerAsn = $.peerAsn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PeeringPropertiesExchangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PeeringPropertiesExchangeArgs $;

        public Builder() {
            $ = new PeeringPropertiesExchangeArgs();
        }

        public Builder(PeeringPropertiesExchangeArgs defaults) {
            $ = new PeeringPropertiesExchangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connections The set of connections that constitute an exchange peering.
         * 
         * @return builder
         * 
         */
        public Builder connections(@Nullable Output<List<ExchangeConnectionArgs>> connections) {
            $.connections = connections;
            return this;
        }

        /**
         * @param connections The set of connections that constitute an exchange peering.
         * 
         * @return builder
         * 
         */
        public Builder connections(List<ExchangeConnectionArgs> connections) {
            return connections(Output.of(connections));
        }

        /**
         * @param connections The set of connections that constitute an exchange peering.
         * 
         * @return builder
         * 
         */
        public Builder connections(ExchangeConnectionArgs... connections) {
            return connections(List.of(connections));
        }

        /**
         * @param peerAsn The reference of the peer ASN.
         * 
         * @return builder
         * 
         */
        public Builder peerAsn(@Nullable Output<SubResourceArgs> peerAsn) {
            $.peerAsn = peerAsn;
            return this;
        }

        /**
         * @param peerAsn The reference of the peer ASN.
         * 
         * @return builder
         * 
         */
        public Builder peerAsn(SubResourceArgs peerAsn) {
            return peerAsn(Output.of(peerAsn));
        }

        public PeeringPropertiesExchangeArgs build() {
            return $;
        }
    }

}
