// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.chaos.inputs;

import com.pulumi.azurenative.chaos.enums.TargetReferenceType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Model that represents a reference to a Target in the selector.
 * 
 */
public final class TargetReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetReferenceArgs Empty = new TargetReferenceArgs();

    /**
     * String of the resource ID of a Target resource.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return String of the resource ID of a Target resource.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Enum of the Target reference type.
     * 
     */
    @Import(name="type", required=true)
    private Output<TargetReferenceType> type;

    /**
     * @return Enum of the Target reference type.
     * 
     */
    public Output<TargetReferenceType> type() {
        return this.type;
    }

    private TargetReferenceArgs() {}

    private TargetReferenceArgs(TargetReferenceArgs $) {
        this.id = $.id;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetReferenceArgs $;

        public Builder() {
            $ = new TargetReferenceArgs();
        }

        public Builder(TargetReferenceArgs defaults) {
            $ = new TargetReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id String of the resource ID of a Target resource.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id String of the resource ID of a Target resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param type Enum of the Target reference type.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<TargetReferenceType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Enum of the Target reference type.
         * 
         * @return builder
         * 
         */
        public Builder type(TargetReferenceType type) {
            return type(Output.of(type));
        }

        public TargetReferenceArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
