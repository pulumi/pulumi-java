// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JavaScriptFunctionBindingResponse {
    /**
     * The JavaScript code containing a single function definition. For example: &#39;function (x, y) { return x + y; }&#39;
     * 
     */
    private final @Nullable String script;
    /**
     * Indicates the function binding type.
     * Expected value is &#39;Microsoft.StreamAnalytics/JavascriptUdf&#39;.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private JavaScriptFunctionBindingResponse(
        @CustomType.Parameter("script") @Nullable String script,
        @CustomType.Parameter("type") String type) {
        this.script = script;
        this.type = type;
    }

    /**
     * The JavaScript code containing a single function definition. For example: &#39;function (x, y) { return x + y; }&#39;
     * 
    */
    public Optional<String> script() {
        return Optional.ofNullable(this.script);
    }
    /**
     * Indicates the function binding type.
     * Expected value is &#39;Microsoft.StreamAnalytics/JavascriptUdf&#39;.
     * 
    */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JavaScriptFunctionBindingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String script;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(JavaScriptFunctionBindingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.script = defaults.script;
    	      this.type = defaults.type;
        }

        public Builder script(@Nullable String script) {
            this.script = script;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public JavaScriptFunctionBindingResponse build() {
            return new JavaScriptFunctionBindingResponse(script, type);
        }
    }
}
