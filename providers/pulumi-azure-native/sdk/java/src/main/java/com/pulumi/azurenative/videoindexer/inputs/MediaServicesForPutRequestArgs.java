// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoindexer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The media services details
 * 
 */
public final class MediaServicesForPutRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final MediaServicesForPutRequestArgs Empty = new MediaServicesForPutRequestArgs();

    /**
     * The media services resource id
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return The media services resource id
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * The user assigned identity to be used to grant permissions
     * 
     */
    @Import(name="userAssignedIdentity")
    private @Nullable Output<String> userAssignedIdentity;

    /**
     * @return The user assigned identity to be used to grant permissions
     * 
     */
    public Optional<Output<String>> userAssignedIdentity() {
        return Optional.ofNullable(this.userAssignedIdentity);
    }

    private MediaServicesForPutRequestArgs() {}

    private MediaServicesForPutRequestArgs(MediaServicesForPutRequestArgs $) {
        this.resourceId = $.resourceId;
        this.userAssignedIdentity = $.userAssignedIdentity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MediaServicesForPutRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MediaServicesForPutRequestArgs $;

        public Builder() {
            $ = new MediaServicesForPutRequestArgs();
        }

        public Builder(MediaServicesForPutRequestArgs defaults) {
            $ = new MediaServicesForPutRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceId The media services resource id
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The media services resource id
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param userAssignedIdentity The user assigned identity to be used to grant permissions
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentity(@Nullable Output<String> userAssignedIdentity) {
            $.userAssignedIdentity = userAssignedIdentity;
            return this;
        }

        /**
         * @param userAssignedIdentity The user assigned identity to be used to grant permissions
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentity(String userAssignedIdentity) {
            return userAssignedIdentity(Output.of(userAssignedIdentity));
        }

        public MediaServicesForPutRequestArgs build() {
            return $;
        }
    }

}
