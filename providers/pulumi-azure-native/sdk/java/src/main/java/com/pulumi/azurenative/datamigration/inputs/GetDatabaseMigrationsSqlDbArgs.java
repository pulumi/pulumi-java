// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDatabaseMigrationsSqlDbArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabaseMigrationsSqlDbArgs Empty = new GetDatabaseMigrationsSqlDbArgs();

    /**
     * Complete migration details be included in the response.
     * 
     */
    @Import(name="expand")
    private @Nullable Output<String> expand;

    /**
     * @return Complete migration details be included in the response.
     * 
     */
    public Optional<Output<String>> expand() {
        return Optional.ofNullable(this.expand);
    }

    /**
     * Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.
     * 
     */
    @Import(name="migrationOperationId")
    private @Nullable Output<String> migrationOperationId;

    /**
     * @return Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.
     * 
     */
    public Optional<Output<String>> migrationOperationId() {
        return Optional.ofNullable(this.migrationOperationId);
    }

    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    @Import(name="sqlDbInstanceName", required=true)
    private Output<String> sqlDbInstanceName;

    public Output<String> sqlDbInstanceName() {
        return this.sqlDbInstanceName;
    }

    /**
     * The name of the target database.
     * 
     */
    @Import(name="targetDbName", required=true)
    private Output<String> targetDbName;

    /**
     * @return The name of the target database.
     * 
     */
    public Output<String> targetDbName() {
        return this.targetDbName;
    }

    private GetDatabaseMigrationsSqlDbArgs() {}

    private GetDatabaseMigrationsSqlDbArgs(GetDatabaseMigrationsSqlDbArgs $) {
        this.expand = $.expand;
        this.migrationOperationId = $.migrationOperationId;
        this.resourceGroupName = $.resourceGroupName;
        this.sqlDbInstanceName = $.sqlDbInstanceName;
        this.targetDbName = $.targetDbName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseMigrationsSqlDbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseMigrationsSqlDbArgs $;

        public Builder() {
            $ = new GetDatabaseMigrationsSqlDbArgs();
        }

        public Builder(GetDatabaseMigrationsSqlDbArgs defaults) {
            $ = new GetDatabaseMigrationsSqlDbArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expand Complete migration details be included in the response.
         * 
         * @return builder
         * 
         */
        public Builder expand(@Nullable Output<String> expand) {
            $.expand = expand;
            return this;
        }

        /**
         * @param expand Complete migration details be included in the response.
         * 
         * @return builder
         * 
         */
        public Builder expand(String expand) {
            return expand(Output.of(expand));
        }

        /**
         * @param migrationOperationId Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.
         * 
         * @return builder
         * 
         */
        public Builder migrationOperationId(@Nullable Output<String> migrationOperationId) {
            $.migrationOperationId = migrationOperationId;
            return this;
        }

        /**
         * @param migrationOperationId Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.
         * 
         * @return builder
         * 
         */
        public Builder migrationOperationId(String migrationOperationId) {
            return migrationOperationId(Output.of(migrationOperationId));
        }

        /**
         * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder sqlDbInstanceName(Output<String> sqlDbInstanceName) {
            $.sqlDbInstanceName = sqlDbInstanceName;
            return this;
        }

        public Builder sqlDbInstanceName(String sqlDbInstanceName) {
            return sqlDbInstanceName(Output.of(sqlDbInstanceName));
        }

        /**
         * @param targetDbName The name of the target database.
         * 
         * @return builder
         * 
         */
        public Builder targetDbName(Output<String> targetDbName) {
            $.targetDbName = targetDbName;
            return this;
        }

        /**
         * @param targetDbName The name of the target database.
         * 
         * @return builder
         * 
         */
        public Builder targetDbName(String targetDbName) {
            return targetDbName(Output.of(targetDbName));
        }

        public GetDatabaseMigrationsSqlDbArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sqlDbInstanceName = Objects.requireNonNull($.sqlDbInstanceName, "expected parameter 'sqlDbInstanceName' to be non-null");
            $.targetDbName = Objects.requireNonNull($.targetDbName, "expected parameter 'targetDbName' to be non-null");
            return $;
        }
    }

}
