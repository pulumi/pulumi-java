// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutoPatchingSettingsResponse {
    /**
     * Day of week to apply the patch on.
     * 
     */
    private final @Nullable String dayOfWeek;
    /**
     * Enable or disable autopatching on SQL virtual machine.
     * 
     */
    private final @Nullable Boolean enable;
    /**
     * Duration of patching.
     * 
     */
    private final @Nullable Integer maintenanceWindowDuration;
    /**
     * Hour of the day when patching is initiated. Local VM time.
     * 
     */
    private final @Nullable Integer maintenanceWindowStartingHour;

    @CustomType.Constructor
    private AutoPatchingSettingsResponse(
        @CustomType.Parameter("dayOfWeek") @Nullable String dayOfWeek,
        @CustomType.Parameter("enable") @Nullable Boolean enable,
        @CustomType.Parameter("maintenanceWindowDuration") @Nullable Integer maintenanceWindowDuration,
        @CustomType.Parameter("maintenanceWindowStartingHour") @Nullable Integer maintenanceWindowStartingHour) {
        this.dayOfWeek = dayOfWeek;
        this.enable = enable;
        this.maintenanceWindowDuration = maintenanceWindowDuration;
        this.maintenanceWindowStartingHour = maintenanceWindowStartingHour;
    }

    /**
     * Day of week to apply the patch on.
     * 
    */
    public Optional<String> dayOfWeek() {
        return Optional.ofNullable(this.dayOfWeek);
    }
    /**
     * Enable or disable autopatching on SQL virtual machine.
     * 
    */
    public Optional<Boolean> enable() {
        return Optional.ofNullable(this.enable);
    }
    /**
     * Duration of patching.
     * 
    */
    public Optional<Integer> maintenanceWindowDuration() {
        return Optional.ofNullable(this.maintenanceWindowDuration);
    }
    /**
     * Hour of the day when patching is initiated. Local VM time.
     * 
    */
    public Optional<Integer> maintenanceWindowStartingHour() {
        return Optional.ofNullable(this.maintenanceWindowStartingHour);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoPatchingSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String dayOfWeek;
        private @Nullable Boolean enable;
        private @Nullable Integer maintenanceWindowDuration;
        private @Nullable Integer maintenanceWindowStartingHour;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoPatchingSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.enable = defaults.enable;
    	      this.maintenanceWindowDuration = defaults.maintenanceWindowDuration;
    	      this.maintenanceWindowStartingHour = defaults.maintenanceWindowStartingHour;
        }

        public Builder dayOfWeek(@Nullable String dayOfWeek) {
            this.dayOfWeek = dayOfWeek;
            return this;
        }
        public Builder enable(@Nullable Boolean enable) {
            this.enable = enable;
            return this;
        }
        public Builder maintenanceWindowDuration(@Nullable Integer maintenanceWindowDuration) {
            this.maintenanceWindowDuration = maintenanceWindowDuration;
            return this;
        }
        public Builder maintenanceWindowStartingHour(@Nullable Integer maintenanceWindowStartingHour) {
            this.maintenanceWindowStartingHour = maintenanceWindowStartingHour;
            return this;
        }        public AutoPatchingSettingsResponse build() {
            return new AutoPatchingSettingsResponse(dayOfWeek, enable, maintenanceWindowDuration, maintenanceWindowStartingHour);
        }
    }
}
