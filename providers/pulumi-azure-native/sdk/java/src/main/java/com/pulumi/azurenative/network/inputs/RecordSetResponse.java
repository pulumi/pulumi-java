// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A collective group of information about the record set information.
 * 
 */
public final class RecordSetResponse extends com.pulumi.resources.InvokeArgs {

    public static final RecordSetResponse Empty = new RecordSetResponse();

    /**
     * Fqdn that resolves to private endpoint ip address.
     * 
     */
    @Import(name="fqdn")
    private @Nullable String fqdn;

    public Optional<String> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }

    /**
     * The private ip address of the private endpoint.
     * 
     */
    @Import(name="ipAddresses")
    private @Nullable List<String> ipAddresses;

    public Optional<List<String>> ipAddresses() {
        return Optional.ofNullable(this.ipAddresses);
    }

    /**
     * The provisioning state of the recordset.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Recordset name.
     * 
     */
    @Import(name="recordSetName")
    private @Nullable String recordSetName;

    public Optional<String> recordSetName() {
        return Optional.ofNullable(this.recordSetName);
    }

    /**
     * Resource record type.
     * 
     */
    @Import(name="recordType")
    private @Nullable String recordType;

    public Optional<String> recordType() {
        return Optional.ofNullable(this.recordType);
    }

    /**
     * Recordset time to live.
     * 
     */
    @Import(name="ttl")
    private @Nullable Integer ttl;

    public Optional<Integer> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private RecordSetResponse() {}

    private RecordSetResponse(RecordSetResponse $) {
        this.fqdn = $.fqdn;
        this.ipAddresses = $.ipAddresses;
        this.provisioningState = $.provisioningState;
        this.recordSetName = $.recordSetName;
        this.recordType = $.recordType;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordSetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordSetResponse $;

        public Builder() {
            $ = new RecordSetResponse();
        }

        public Builder(RecordSetResponse defaults) {
            $ = new RecordSetResponse(Objects.requireNonNull(defaults));
        }

        public Builder fqdn(@Nullable String fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        public Builder ipAddresses(@Nullable List<String> ipAddresses) {
            $.ipAddresses = ipAddresses;
            return this;
        }

        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder recordSetName(@Nullable String recordSetName) {
            $.recordSetName = recordSetName;
            return this;
        }

        public Builder recordType(@Nullable String recordType) {
            $.recordType = recordType;
            return this;
        }

        public Builder ttl(@Nullable Integer ttl) {
            $.ttl = ttl;
            return this;
        }

        public RecordSetResponse build() {
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
