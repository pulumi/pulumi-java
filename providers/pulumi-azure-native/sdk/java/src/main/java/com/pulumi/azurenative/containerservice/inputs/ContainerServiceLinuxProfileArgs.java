// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.inputs;

import com.pulumi.azurenative.containerservice.inputs.ContainerServiceSshConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Profile for Linux VMs in the container service cluster.
 * 
 */
public final class ContainerServiceLinuxProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerServiceLinuxProfileArgs Empty = new ContainerServiceLinuxProfileArgs();

    /**
     * The administrator username to use for Linux VMs.
     * 
     */
    @Import(name="adminUsername", required=true)
    private Output<String> adminUsername;

    /**
     * @return The administrator username to use for Linux VMs.
     * 
     */
    public Output<String> adminUsername() {
        return this.adminUsername;
    }

    /**
     * SSH configuration for Linux-based VMs running on Azure.
     * 
     */
    @Import(name="ssh", required=true)
    private Output<ContainerServiceSshConfigurationArgs> ssh;

    /**
     * @return SSH configuration for Linux-based VMs running on Azure.
     * 
     */
    public Output<ContainerServiceSshConfigurationArgs> ssh() {
        return this.ssh;
    }

    private ContainerServiceLinuxProfileArgs() {}

    private ContainerServiceLinuxProfileArgs(ContainerServiceLinuxProfileArgs $) {
        this.adminUsername = $.adminUsername;
        this.ssh = $.ssh;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerServiceLinuxProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerServiceLinuxProfileArgs $;

        public Builder() {
            $ = new ContainerServiceLinuxProfileArgs();
        }

        public Builder(ContainerServiceLinuxProfileArgs defaults) {
            $ = new ContainerServiceLinuxProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminUsername The administrator username to use for Linux VMs.
         * 
         * @return builder
         * 
         */
        public Builder adminUsername(Output<String> adminUsername) {
            $.adminUsername = adminUsername;
            return this;
        }

        /**
         * @param adminUsername The administrator username to use for Linux VMs.
         * 
         * @return builder
         * 
         */
        public Builder adminUsername(String adminUsername) {
            return adminUsername(Output.of(adminUsername));
        }

        /**
         * @param ssh SSH configuration for Linux-based VMs running on Azure.
         * 
         * @return builder
         * 
         */
        public Builder ssh(Output<ContainerServiceSshConfigurationArgs> ssh) {
            $.ssh = ssh;
            return this;
        }

        /**
         * @param ssh SSH configuration for Linux-based VMs running on Azure.
         * 
         * @return builder
         * 
         */
        public Builder ssh(ContainerServiceSshConfigurationArgs ssh) {
            return ssh(Output.of(ssh));
        }

        public ContainerServiceLinuxProfileArgs build() {
            $.adminUsername = Objects.requireNonNull($.adminUsername, "expected parameter 'adminUsername' to be non-null");
            $.ssh = Objects.requireNonNull($.ssh, "expected parameter 'ssh' to be non-null");
            return $;
        }
    }

}
