// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.avs.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * a powershell credential object
 * 
 */
public final class PSCredentialExecutionParameterResponse extends com.pulumi.resources.InvokeArgs {

    public static final PSCredentialExecutionParameterResponse Empty = new PSCredentialExecutionParameterResponse();

    /**
     * The parameter name
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The parameter name
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * password for login
     * 
     */
    @Import(name="password")
    private @Nullable String password;

    /**
     * @return password for login
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The type of execution parameter
     * Expected value is &#39;Credential&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of execution parameter
     * Expected value is &#39;Credential&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * username for login
     * 
     */
    @Import(name="username")
    private @Nullable String username;

    /**
     * @return username for login
     * 
     */
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    private PSCredentialExecutionParameterResponse() {}

    private PSCredentialExecutionParameterResponse(PSCredentialExecutionParameterResponse $) {
        this.name = $.name;
        this.password = $.password;
        this.type = $.type;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PSCredentialExecutionParameterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PSCredentialExecutionParameterResponse $;

        public Builder() {
            $ = new PSCredentialExecutionParameterResponse();
        }

        public Builder(PSCredentialExecutionParameterResponse defaults) {
            $ = new PSCredentialExecutionParameterResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The parameter name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param password password for login
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable String password) {
            $.password = password;
            return this;
        }

        /**
         * @param type The type of execution parameter
         * Expected value is &#39;Credential&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param username username for login
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable String username) {
            $.username = username;
            return this;
        }

        public PSCredentialExecutionParameterResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
