// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dashboard;

import com.pulumi.azurenative.dashboard.inputs.ManagedGrafanaPropertiesArgs;
import com.pulumi.azurenative.dashboard.inputs.ManagedIdentityArgs;
import com.pulumi.azurenative.dashboard.inputs.ResourceSkuArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrafanaArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrafanaArgs Empty = new GrafanaArgs();

    /**
     * The managed identity of the grafana resource.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<ManagedIdentityArgs> identity;

    /**
     * @return The managed identity of the grafana resource.
     * 
     */
    public Optional<Output<ManagedIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The geo-location where the grafana resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the grafana resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Properties specific to the grafana resource.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<ManagedGrafanaPropertiesArgs> properties;

    /**
     * @return Properties specific to the grafana resource.
     * 
     */
    public Optional<Output<ManagedGrafanaPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The Sku of the grafana resource.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<ResourceSkuArgs> sku;

    /**
     * @return The Sku of the grafana resource.
     * 
     */
    public Optional<Output<ResourceSkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * The tags for grafana resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tags for grafana resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The workspace name of Azure Managed Grafana.
     * 
     */
    @Import(name="workspaceName")
    private @Nullable Output<String> workspaceName;

    /**
     * @return The workspace name of Azure Managed Grafana.
     * 
     */
    public Optional<Output<String>> workspaceName() {
        return Optional.ofNullable(this.workspaceName);
    }

    private GrafanaArgs() {}

    private GrafanaArgs(GrafanaArgs $) {
        this.identity = $.identity;
        this.location = $.location;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrafanaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrafanaArgs $;

        public Builder() {
            $ = new GrafanaArgs();
        }

        public Builder(GrafanaArgs defaults) {
            $ = new GrafanaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identity The managed identity of the grafana resource.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<ManagedIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity The managed identity of the grafana resource.
         * 
         * @return builder
         * 
         */
        public Builder identity(ManagedIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param location The geo-location where the grafana resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the grafana resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param properties Properties specific to the grafana resource.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<ManagedGrafanaPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Properties specific to the grafana resource.
         * 
         * @return builder
         * 
         */
        public Builder properties(ManagedGrafanaPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku The Sku of the grafana resource.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<ResourceSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The Sku of the grafana resource.
         * 
         * @return builder
         * 
         */
        public Builder sku(ResourceSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags The tags for grafana resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags for grafana resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param workspaceName The workspace name of Azure Managed Grafana.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(@Nullable Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        /**
         * @param workspaceName The workspace name of Azure Managed Grafana.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public GrafanaArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
