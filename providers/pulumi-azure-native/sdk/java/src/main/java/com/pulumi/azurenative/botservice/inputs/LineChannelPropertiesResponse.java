// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.azurenative.botservice.inputs.LineRegistrationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The parameters to provide for the Line channel.
 * 
 */
public final class LineChannelPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final LineChannelPropertiesResponse Empty = new LineChannelPropertiesResponse();

    /**
     * Callback Url to enter in line registration.
     * 
     */
    @Import(name="callbackUrl", required=true)
    private String callbackUrl;

    /**
     * @return Callback Url to enter in line registration.
     * 
     */
    public String callbackUrl() {
        return this.callbackUrl;
    }

    /**
     * Whether this channel is validated for the bot
     * 
     */
    @Import(name="isValidated", required=true)
    private Boolean isValidated;

    /**
     * @return Whether this channel is validated for the bot
     * 
     */
    public Boolean isValidated() {
        return this.isValidated;
    }

    /**
     * The list of line channel registrations
     * 
     */
    @Import(name="lineRegistrations", required=true)
    private List<LineRegistrationResponse> lineRegistrations;

    /**
     * @return The list of line channel registrations
     * 
     */
    public List<LineRegistrationResponse> lineRegistrations() {
        return this.lineRegistrations;
    }

    private LineChannelPropertiesResponse() {}

    private LineChannelPropertiesResponse(LineChannelPropertiesResponse $) {
        this.callbackUrl = $.callbackUrl;
        this.isValidated = $.isValidated;
        this.lineRegistrations = $.lineRegistrations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LineChannelPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LineChannelPropertiesResponse $;

        public Builder() {
            $ = new LineChannelPropertiesResponse();
        }

        public Builder(LineChannelPropertiesResponse defaults) {
            $ = new LineChannelPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param callbackUrl Callback Url to enter in line registration.
         * 
         * @return builder
         * 
         */
        public Builder callbackUrl(String callbackUrl) {
            $.callbackUrl = callbackUrl;
            return this;
        }

        /**
         * @param isValidated Whether this channel is validated for the bot
         * 
         * @return builder
         * 
         */
        public Builder isValidated(Boolean isValidated) {
            $.isValidated = isValidated;
            return this;
        }

        /**
         * @param lineRegistrations The list of line channel registrations
         * 
         * @return builder
         * 
         */
        public Builder lineRegistrations(List<LineRegistrationResponse> lineRegistrations) {
            $.lineRegistrations = lineRegistrations;
            return this;
        }

        /**
         * @param lineRegistrations The list of line channel registrations
         * 
         * @return builder
         * 
         */
        public Builder lineRegistrations(LineRegistrationResponse... lineRegistrations) {
            return lineRegistrations(List.of(lineRegistrations));
        }

        public LineChannelPropertiesResponse build() {
            $.callbackUrl = Objects.requireNonNull($.callbackUrl, "expected parameter 'callbackUrl' to be non-null");
            $.isValidated = Objects.requireNonNull($.isValidated, "expected parameter 'isValidated' to be non-null");
            $.lineRegistrations = Objects.requireNonNull($.lineRegistrations, "expected parameter 'lineRegistrations' to be non-null");
            return $;
        }
    }

}
