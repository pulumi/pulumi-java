// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dataprotection.inputs;

import com.pulumi.azurenative.dataprotection.inputs.RetentionTagArgs;
import com.pulumi.azurenative.dataprotection.inputs.ScheduleBasedBackupCriteriaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Tagging criteria
 * 
 */
public final class TaggingCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaggingCriteriaArgs Empty = new TaggingCriteriaArgs();

    /**
     * Criteria which decides whether the tag can be applied to a triggered backup.
     * 
     */
    @Import(name="criteria")
    private @Nullable Output<List<ScheduleBasedBackupCriteriaArgs>> criteria;

    /**
     * @return Criteria which decides whether the tag can be applied to a triggered backup.
     * 
     */
    public Optional<Output<List<ScheduleBasedBackupCriteriaArgs>>> criteria() {
        return Optional.ofNullable(this.criteria);
    }

    /**
     * Specifies if tag is default.
     * 
     */
    @Import(name="isDefault", required=true)
    private Output<Boolean> isDefault;

    /**
     * @return Specifies if tag is default.
     * 
     */
    public Output<Boolean> isDefault() {
        return this.isDefault;
    }

    /**
     * Retention tag information
     * 
     */
    @Import(name="tagInfo", required=true)
    private Output<RetentionTagArgs> tagInfo;

    /**
     * @return Retention tag information
     * 
     */
    public Output<RetentionTagArgs> tagInfo() {
        return this.tagInfo;
    }

    /**
     * Retention Tag priority.
     * 
     */
    @Import(name="taggingPriority", required=true)
    private Output<Double> taggingPriority;

    /**
     * @return Retention Tag priority.
     * 
     */
    public Output<Double> taggingPriority() {
        return this.taggingPriority;
    }

    private TaggingCriteriaArgs() {}

    private TaggingCriteriaArgs(TaggingCriteriaArgs $) {
        this.criteria = $.criteria;
        this.isDefault = $.isDefault;
        this.tagInfo = $.tagInfo;
        this.taggingPriority = $.taggingPriority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaggingCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaggingCriteriaArgs $;

        public Builder() {
            $ = new TaggingCriteriaArgs();
        }

        public Builder(TaggingCriteriaArgs defaults) {
            $ = new TaggingCriteriaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param criteria Criteria which decides whether the tag can be applied to a triggered backup.
         * 
         * @return builder
         * 
         */
        public Builder criteria(@Nullable Output<List<ScheduleBasedBackupCriteriaArgs>> criteria) {
            $.criteria = criteria;
            return this;
        }

        /**
         * @param criteria Criteria which decides whether the tag can be applied to a triggered backup.
         * 
         * @return builder
         * 
         */
        public Builder criteria(List<ScheduleBasedBackupCriteriaArgs> criteria) {
            return criteria(Output.of(criteria));
        }

        /**
         * @param criteria Criteria which decides whether the tag can be applied to a triggered backup.
         * 
         * @return builder
         * 
         */
        public Builder criteria(ScheduleBasedBackupCriteriaArgs... criteria) {
            return criteria(List.of(criteria));
        }

        /**
         * @param isDefault Specifies if tag is default.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param isDefault Specifies if tag is default.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        /**
         * @param tagInfo Retention tag information
         * 
         * @return builder
         * 
         */
        public Builder tagInfo(Output<RetentionTagArgs> tagInfo) {
            $.tagInfo = tagInfo;
            return this;
        }

        /**
         * @param tagInfo Retention tag information
         * 
         * @return builder
         * 
         */
        public Builder tagInfo(RetentionTagArgs tagInfo) {
            return tagInfo(Output.of(tagInfo));
        }

        /**
         * @param taggingPriority Retention Tag priority.
         * 
         * @return builder
         * 
         */
        public Builder taggingPriority(Output<Double> taggingPriority) {
            $.taggingPriority = taggingPriority;
            return this;
        }

        /**
         * @param taggingPriority Retention Tag priority.
         * 
         * @return builder
         * 
         */
        public Builder taggingPriority(Double taggingPriority) {
            return taggingPriority(Output.of(taggingPriority));
        }

        public TaggingCriteriaArgs build() {
            $.isDefault = Objects.requireNonNull($.isDefault, "expected parameter 'isDefault' to be non-null");
            $.tagInfo = Objects.requireNonNull($.tagInfo, "expected parameter 'tagInfo' to be non-null");
            $.taggingPriority = Objects.requireNonNull($.taggingPriority, "expected parameter 'taggingPriority' to be non-null");
            return $;
        }
    }

}
