// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.azurenative.datamigration.inputs.MigrationValidationDatabaseSummaryResultResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Validation result for Sql Server to Azure Sql DB migration.
 * 
 */
public final class MigrateSqlServerSqlDbTaskOutputValidationResultResponse extends com.pulumi.resources.InvokeArgs {

    public static final MigrateSqlServerSqlDbTaskOutputValidationResultResponse Empty = new MigrateSqlServerSqlDbTaskOutputValidationResultResponse();

    /**
     * Result identifier
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return Result identifier
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * Migration Identifier
     * 
     */
    @Import(name="migrationId", required=true)
    private String migrationId;

    /**
     * @return Migration Identifier
     * 
     */
    public String migrationId() {
        return this.migrationId;
    }

    /**
     * Result type
     * Expected value is &#39;MigrationValidationOutput&#39;.
     * 
     */
    @Import(name="resultType", required=true)
    private String resultType;

    /**
     * @return Result type
     * Expected value is &#39;MigrationValidationOutput&#39;.
     * 
     */
    public String resultType() {
        return this.resultType;
    }

    /**
     * Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
     * 
     */
    public String status() {
        return this.status;
    }

    /**
     * Validation summary results for each database
     * 
     */
    @Import(name="summaryResults")
    private @Nullable Map<String,MigrationValidationDatabaseSummaryResultResponse> summaryResults;

    /**
     * @return Validation summary results for each database
     * 
     */
    public Optional<Map<String,MigrationValidationDatabaseSummaryResultResponse>> summaryResults() {
        return Optional.ofNullable(this.summaryResults);
    }

    private MigrateSqlServerSqlDbTaskOutputValidationResultResponse() {}

    private MigrateSqlServerSqlDbTaskOutputValidationResultResponse(MigrateSqlServerSqlDbTaskOutputValidationResultResponse $) {
        this.id = $.id;
        this.migrationId = $.migrationId;
        this.resultType = $.resultType;
        this.status = $.status;
        this.summaryResults = $.summaryResults;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrateSqlServerSqlDbTaskOutputValidationResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrateSqlServerSqlDbTaskOutputValidationResultResponse $;

        public Builder() {
            $ = new MigrateSqlServerSqlDbTaskOutputValidationResultResponse();
        }

        public Builder(MigrateSqlServerSqlDbTaskOutputValidationResultResponse defaults) {
            $ = new MigrateSqlServerSqlDbTaskOutputValidationResultResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Result identifier
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param migrationId Migration Identifier
         * 
         * @return builder
         * 
         */
        public Builder migrationId(String migrationId) {
            $.migrationId = migrationId;
            return this;
        }

        /**
         * @param resultType Result type
         * Expected value is &#39;MigrationValidationOutput&#39;.
         * 
         * @return builder
         * 
         */
        public Builder resultType(String resultType) {
            $.resultType = resultType;
            return this;
        }

        /**
         * @param status Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        /**
         * @param summaryResults Validation summary results for each database
         * 
         * @return builder
         * 
         */
        public Builder summaryResults(@Nullable Map<String,MigrationValidationDatabaseSummaryResultResponse> summaryResults) {
            $.summaryResults = summaryResults;
            return this;
        }

        public MigrateSqlServerSqlDbTaskOutputValidationResultResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.migrationId = Objects.requireNonNull($.migrationId, "expected parameter 'migrationId' to be non-null");
            $.resultType = Codegen.stringProp("resultType").arg($.resultType).require();
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
