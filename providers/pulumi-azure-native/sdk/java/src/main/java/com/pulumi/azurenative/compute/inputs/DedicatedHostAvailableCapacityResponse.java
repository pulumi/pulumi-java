// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.DedicatedHostAllocatableVMResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Dedicated host unutilized capacity.
 * 
 */
public final class DedicatedHostAvailableCapacityResponse extends com.pulumi.resources.InvokeArgs {

    public static final DedicatedHostAvailableCapacityResponse Empty = new DedicatedHostAvailableCapacityResponse();

    /**
     * The unutilized capacity of the dedicated host represented in terms of each VM size that is allowed to be deployed to the dedicated host.
     * 
     */
    @Import(name="allocatableVMs")
    private @Nullable List<DedicatedHostAllocatableVMResponse> allocatableVMs;

    public Optional<List<DedicatedHostAllocatableVMResponse>> allocatableVMs() {
        return Optional.ofNullable(this.allocatableVMs);
    }

    private DedicatedHostAvailableCapacityResponse() {}

    private DedicatedHostAvailableCapacityResponse(DedicatedHostAvailableCapacityResponse $) {
        this.allocatableVMs = $.allocatableVMs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DedicatedHostAvailableCapacityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DedicatedHostAvailableCapacityResponse $;

        public Builder() {
            $ = new DedicatedHostAvailableCapacityResponse();
        }

        public Builder(DedicatedHostAvailableCapacityResponse defaults) {
            $ = new DedicatedHostAvailableCapacityResponse(Objects.requireNonNull(defaults));
        }

        public Builder allocatableVMs(@Nullable List<DedicatedHostAllocatableVMResponse> allocatableVMs) {
            $.allocatableVMs = allocatableVMs;
            return this;
        }

        public Builder allocatableVMs(DedicatedHostAllocatableVMResponse... allocatableVMs) {
            return allocatableVMs(List.of(allocatableVMs));
        }

        public DedicatedHostAvailableCapacityResponse build() {
            return $;
        }
    }

}
