// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An arm role receiver.
 * 
 */
public final class ArmRoleReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final ArmRoleReceiverArgs Empty = new ArmRoleReceiverArgs();

    /**
     * The name of the arm role receiver. Names must be unique across all receivers within an action group.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * The arm role id.
     * 
     */
    @Import(name="roleId", required=true)
      private final Output<String> roleId;

    public Output<String> roleId() {
        return this.roleId;
    }

    /**
     * Indicates whether to use common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
      private final @Nullable Output<Boolean> useCommonAlertSchema;

    public Output<Boolean> useCommonAlertSchema() {
        return this.useCommonAlertSchema == null ? Codegen.empty() : this.useCommonAlertSchema;
    }

    public ArmRoleReceiverArgs(
        Output<String> name,
        Output<String> roleId,
        @Nullable Output<Boolean> useCommonAlertSchema) {
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.roleId = Objects.requireNonNull(roleId, "expected parameter 'roleId' to be non-null");
        this.useCommonAlertSchema = useCommonAlertSchema == null ? Codegen.ofNullable(false) : useCommonAlertSchema;
    }

    private ArmRoleReceiverArgs() {
        this.name = Codegen.empty();
        this.roleId = Codegen.empty();
        this.useCommonAlertSchema = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ArmRoleReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> name;
        private Output<String> roleId;
        private @Nullable Output<Boolean> useCommonAlertSchema;

        public Builder() {
    	      // Empty
        }

        public Builder(ArmRoleReceiverArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.roleId = defaults.roleId;
    	      this.useCommonAlertSchema = defaults.useCommonAlertSchema;
        }

        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder roleId(Output<String> roleId) {
            this.roleId = Objects.requireNonNull(roleId);
            return this;
        }
        public Builder roleId(String roleId) {
            this.roleId = Output.of(Objects.requireNonNull(roleId));
            return this;
        }
        public Builder useCommonAlertSchema(@Nullable Output<Boolean> useCommonAlertSchema) {
            this.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }
        public Builder useCommonAlertSchema(@Nullable Boolean useCommonAlertSchema) {
            this.useCommonAlertSchema = Codegen.ofNullable(useCommonAlertSchema);
            return this;
        }        public ArmRoleReceiverArgs build() {
            return new ArmRoleReceiverArgs(name, roleId, useCommonAlertSchema);
        }
    }
}
