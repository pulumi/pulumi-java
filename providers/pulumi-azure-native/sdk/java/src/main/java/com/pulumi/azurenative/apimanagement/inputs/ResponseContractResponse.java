// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.inputs;

import com.pulumi.azurenative.apimanagement.inputs.ParameterContractResponse;
import com.pulumi.azurenative.apimanagement.inputs.RepresentationContractResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Operation response details.
 * 
 */
public final class ResponseContractResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResponseContractResponse Empty = new ResponseContractResponse();

    /**
     * Operation response description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Collection of operation response headers.
     * 
     */
    @Import(name="headers")
    private @Nullable List<ParameterContractResponse> headers;

    public Optional<List<ParameterContractResponse>> headers() {
        return Optional.ofNullable(this.headers);
    }

    /**
     * Collection of operation response representations.
     * 
     */
    @Import(name="representations")
    private @Nullable List<RepresentationContractResponse> representations;

    public Optional<List<RepresentationContractResponse>> representations() {
        return Optional.ofNullable(this.representations);
    }

    /**
     * Operation response HTTP status code.
     * 
     */
    @Import(name="statusCode", required=true)
    private Integer statusCode;

    public Integer statusCode() {
        return this.statusCode;
    }

    private ResponseContractResponse() {}

    private ResponseContractResponse(ResponseContractResponse $) {
        this.description = $.description;
        this.headers = $.headers;
        this.representations = $.representations;
        this.statusCode = $.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResponseContractResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResponseContractResponse $;

        public Builder() {
            $ = new ResponseContractResponse();
        }

        public Builder(ResponseContractResponse defaults) {
            $ = new ResponseContractResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder headers(@Nullable List<ParameterContractResponse> headers) {
            $.headers = headers;
            return this;
        }

        public Builder headers(ParameterContractResponse... headers) {
            return headers(List.of(headers));
        }

        public Builder representations(@Nullable List<RepresentationContractResponse> representations) {
            $.representations = representations;
            return this;
        }

        public Builder representations(RepresentationContractResponse... representations) {
            return representations(List.of(representations));
        }

        public Builder statusCode(Integer statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public ResponseContractResponse build() {
            $.statusCode = Objects.requireNonNull($.statusCode, "expected parameter 'statusCode' to be non-null");
            return $;
        }
    }

}
