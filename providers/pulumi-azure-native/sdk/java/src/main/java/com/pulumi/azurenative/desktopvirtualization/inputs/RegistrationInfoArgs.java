// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization.inputs;

import com.pulumi.azurenative.desktopvirtualization.enums.RegistrationTokenOperation;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a RegistrationInfo definition.
 * 
 */
public final class RegistrationInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegistrationInfoArgs Empty = new RegistrationInfoArgs();

    /**
     * Expiration time of registration token.
     * 
     */
    @Import(name="expirationTime")
    private @Nullable Output<String> expirationTime;

    public Optional<Output<String>> expirationTime() {
        return Optional.ofNullable(this.expirationTime);
    }

    /**
     * The type of resetting the token.
     * 
     */
    @Import(name="registrationTokenOperation")
    private @Nullable Output<Either<String,RegistrationTokenOperation>> registrationTokenOperation;

    public Optional<Output<Either<String,RegistrationTokenOperation>>> registrationTokenOperation() {
        return Optional.ofNullable(this.registrationTokenOperation);
    }

    /**
     * The registration token base64 encoded string.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    private RegistrationInfoArgs() {}

    private RegistrationInfoArgs(RegistrationInfoArgs $) {
        this.expirationTime = $.expirationTime;
        this.registrationTokenOperation = $.registrationTokenOperation;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistrationInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistrationInfoArgs $;

        public Builder() {
            $ = new RegistrationInfoArgs();
        }

        public Builder(RegistrationInfoArgs defaults) {
            $ = new RegistrationInfoArgs(Objects.requireNonNull(defaults));
        }

        public Builder expirationTime(@Nullable Output<String> expirationTime) {
            $.expirationTime = expirationTime;
            return this;
        }

        public Builder expirationTime(String expirationTime) {
            return expirationTime(Output.of(expirationTime));
        }

        public Builder registrationTokenOperation(@Nullable Output<Either<String,RegistrationTokenOperation>> registrationTokenOperation) {
            $.registrationTokenOperation = registrationTokenOperation;
            return this;
        }

        public Builder registrationTokenOperation(Either<String,RegistrationTokenOperation> registrationTokenOperation) {
            return registrationTokenOperation(Output.of(registrationTokenOperation));
        }

        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        public Builder token(String token) {
            return token(Output.of(token));
        }

        public RegistrationInfoArgs build() {
            return $;
        }
    }

}
