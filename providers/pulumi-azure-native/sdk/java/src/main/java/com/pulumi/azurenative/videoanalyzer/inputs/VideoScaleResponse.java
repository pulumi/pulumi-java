// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The video scaling information.
 * 
 */
public final class VideoScaleResponse extends com.pulumi.resources.InvokeArgs {

    public static final VideoScaleResponse Empty = new VideoScaleResponse();

    /**
     * The desired output video height.
     * 
     */
    @Import(name="height")
    private @Nullable String height;

    /**
     * @return The desired output video height.
     * 
     */
    public Optional<String> height() {
        return Optional.ofNullable(this.height);
    }

    /**
     * Describes the video scaling mode to be applied. Default mode is &#39;Pad&#39;. If the mode is &#39;Pad&#39; or &#39;Stretch&#39; then both width and height must be specified. Else if the mode is &#39;PreserveAspectRatio&#39; then only one of width or height need be provided.
     * 
     */
    @Import(name="mode")
    private @Nullable String mode;

    /**
     * @return Describes the video scaling mode to be applied. Default mode is &#39;Pad&#39;. If the mode is &#39;Pad&#39; or &#39;Stretch&#39; then both width and height must be specified. Else if the mode is &#39;PreserveAspectRatio&#39; then only one of width or height need be provided.
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * The desired output video width.
     * 
     */
    @Import(name="width")
    private @Nullable String width;

    /**
     * @return The desired output video width.
     * 
     */
    public Optional<String> width() {
        return Optional.ofNullable(this.width);
    }

    private VideoScaleResponse() {}

    private VideoScaleResponse(VideoScaleResponse $) {
        this.height = $.height;
        this.mode = $.mode;
        this.width = $.width;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VideoScaleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VideoScaleResponse $;

        public Builder() {
            $ = new VideoScaleResponse();
        }

        public Builder(VideoScaleResponse defaults) {
            $ = new VideoScaleResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param height The desired output video height.
         * 
         * @return builder
         * 
         */
        public Builder height(@Nullable String height) {
            $.height = height;
            return this;
        }

        /**
         * @param mode Describes the video scaling mode to be applied. Default mode is &#39;Pad&#39;. If the mode is &#39;Pad&#39; or &#39;Stretch&#39; then both width and height must be specified. Else if the mode is &#39;PreserveAspectRatio&#39; then only one of width or height need be provided.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable String mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param width The desired output video width.
         * 
         * @return builder
         * 
         */
        public Builder width(@Nullable String width) {
            $.width = width;
            return this;
        }

        public VideoScaleResponse build() {
            return $;
        }
    }

}
