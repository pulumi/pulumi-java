// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.inputs;

import com.pulumi.azurenative.edgeorder.inputs.BillingMeterDetailsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Cost information for the product system
 * 
 */
public final class CostInformationResponse extends com.pulumi.resources.InvokeArgs {

    public static final CostInformationResponse Empty = new CostInformationResponse();

    /**
     * Default url to display billing information
     * 
     */
    @Import(name="billingInfoUrl", required=true)
    private String billingInfoUrl;

    /**
     * @return Default url to display billing information
     * 
     */
    public String billingInfoUrl() {
        return this.billingInfoUrl;
    }

    /**
     * Details on the various billing aspects for the product system.
     * 
     */
    @Import(name="billingMeterDetails", required=true)
    private List<BillingMeterDetailsResponse> billingMeterDetails;

    /**
     * @return Details on the various billing aspects for the product system.
     * 
     */
    public List<BillingMeterDetailsResponse> billingMeterDetails() {
        return this.billingMeterDetails;
    }

    private CostInformationResponse() {}

    private CostInformationResponse(CostInformationResponse $) {
        this.billingInfoUrl = $.billingInfoUrl;
        this.billingMeterDetails = $.billingMeterDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CostInformationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CostInformationResponse $;

        public Builder() {
            $ = new CostInformationResponse();
        }

        public Builder(CostInformationResponse defaults) {
            $ = new CostInformationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param billingInfoUrl Default url to display billing information
         * 
         * @return builder
         * 
         */
        public Builder billingInfoUrl(String billingInfoUrl) {
            $.billingInfoUrl = billingInfoUrl;
            return this;
        }

        /**
         * @param billingMeterDetails Details on the various billing aspects for the product system.
         * 
         * @return builder
         * 
         */
        public Builder billingMeterDetails(List<BillingMeterDetailsResponse> billingMeterDetails) {
            $.billingMeterDetails = billingMeterDetails;
            return this;
        }

        /**
         * @param billingMeterDetails Details on the various billing aspects for the product system.
         * 
         * @return builder
         * 
         */
        public Builder billingMeterDetails(BillingMeterDetailsResponse... billingMeterDetails) {
            return billingMeterDetails(List.of(billingMeterDetails));
        }

        public CostInformationResponse build() {
            $.billingInfoUrl = Objects.requireNonNull($.billingInfoUrl, "expected parameter 'billingInfoUrl' to be non-null");
            $.billingMeterDetails = Objects.requireNonNull($.billingMeterDetails, "expected parameter 'billingMeterDetails' to be non-null");
            return $;
        }
    }

}
