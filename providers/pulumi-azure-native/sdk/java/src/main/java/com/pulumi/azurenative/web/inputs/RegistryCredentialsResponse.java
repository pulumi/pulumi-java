// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Container App Private Registry
 * 
 */
public final class RegistryCredentialsResponse extends com.pulumi.resources.InvokeArgs {

    public static final RegistryCredentialsResponse Empty = new RegistryCredentialsResponse();

    /**
     * The name of the Secret that contains the registry login password
     * 
     */
    @Import(name="passwordSecretRef")
    private @Nullable String passwordSecretRef;

    public Optional<String> passwordSecretRef() {
        return Optional.ofNullable(this.passwordSecretRef);
    }

    /**
     * Container Registry Server
     * 
     */
    @Import(name="server")
    private @Nullable String server;

    public Optional<String> server() {
        return Optional.ofNullable(this.server);
    }

    /**
     * Container Registry Username
     * 
     */
    @Import(name="username")
    private @Nullable String username;

    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    private RegistryCredentialsResponse() {}

    private RegistryCredentialsResponse(RegistryCredentialsResponse $) {
        this.passwordSecretRef = $.passwordSecretRef;
        this.server = $.server;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistryCredentialsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistryCredentialsResponse $;

        public Builder() {
            $ = new RegistryCredentialsResponse();
        }

        public Builder(RegistryCredentialsResponse defaults) {
            $ = new RegistryCredentialsResponse(Objects.requireNonNull(defaults));
        }

        public Builder passwordSecretRef(@Nullable String passwordSecretRef) {
            $.passwordSecretRef = passwordSecretRef;
            return this;
        }

        public Builder server(@Nullable String server) {
            $.server = server;
            return this;
        }

        public Builder username(@Nullable String username) {
            $.username = username;
            return this;
        }

        public RegistryCredentialsResponse build() {
            return $;
        }
    }

}
