// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.domainregistration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainOwnershipIdentifierArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainOwnershipIdentifierArgs Empty = new DomainOwnershipIdentifierArgs();

    /**
     * Name of domain.
     * 
     */
    @Import(name="domainName", required=true)
    private Output<String> domainName;

    public Output<String> domainName() {
        return this.domainName;
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Name of identifier.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Ownership Id.
     * 
     */
    @Import(name="ownershipId")
    private @Nullable Output<String> ownershipId;

    public Optional<Output<String>> ownershipId() {
        return Optional.ofNullable(this.ownershipId);
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private DomainOwnershipIdentifierArgs() {}

    private DomainOwnershipIdentifierArgs(DomainOwnershipIdentifierArgs $) {
        this.domainName = $.domainName;
        this.kind = $.kind;
        this.name = $.name;
        this.ownershipId = $.ownershipId;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainOwnershipIdentifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainOwnershipIdentifierArgs $;

        public Builder() {
            $ = new DomainOwnershipIdentifierArgs();
        }

        public Builder(DomainOwnershipIdentifierArgs defaults) {
            $ = new DomainOwnershipIdentifierArgs(Objects.requireNonNull(defaults));
        }

        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder ownershipId(@Nullable Output<String> ownershipId) {
            $.ownershipId = ownershipId;
            return this;
        }

        public Builder ownershipId(String ownershipId) {
            return ownershipId(Output.of(ownershipId));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public DomainOwnershipIdentifierArgs build() {
            $.domainName = Objects.requireNonNull($.domainName, "expected parameter 'domainName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
