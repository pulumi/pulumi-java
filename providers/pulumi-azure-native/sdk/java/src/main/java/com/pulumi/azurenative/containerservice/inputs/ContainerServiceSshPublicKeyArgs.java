// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Contains information about SSH certificate public key data.
 * 
 */
public final class ContainerServiceSshPublicKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerServiceSshPublicKeyArgs Empty = new ContainerServiceSshPublicKeyArgs();

    /**
     * Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
     * 
     */
    @Import(name="keyData", required=true)
    private Output<String> keyData;

    /**
     * @return Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
     * 
     */
    public Output<String> keyData() {
        return this.keyData;
    }

    private ContainerServiceSshPublicKeyArgs() {}

    private ContainerServiceSshPublicKeyArgs(ContainerServiceSshPublicKeyArgs $) {
        this.keyData = $.keyData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerServiceSshPublicKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerServiceSshPublicKeyArgs $;

        public Builder() {
            $ = new ContainerServiceSshPublicKeyArgs();
        }

        public Builder(ContainerServiceSshPublicKeyArgs defaults) {
            $ = new ContainerServiceSshPublicKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyData Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
         * 
         * @return builder
         * 
         */
        public Builder keyData(Output<String> keyData) {
            $.keyData = keyData;
            return this;
        }

        /**
         * @param keyData Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
         * 
         * @return builder
         * 
         */
        public Builder keyData(String keyData) {
            return keyData(Output.of(keyData));
        }

        public ContainerServiceSshPublicKeyArgs build() {
            $.keyData = Objects.requireNonNull($.keyData, "expected parameter 'keyData' to be non-null");
            return $;
        }
    }

}
