// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Pipeline reference type.
 * 
 */
public final class PipelineReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineReferenceArgs Empty = new PipelineReferenceArgs();

    /**
     * Reference name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Reference name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Reference pipeline name.
     * 
     */
    @Import(name="referenceName", required=true)
    private Output<String> referenceName;

    /**
     * @return Reference pipeline name.
     * 
     */
    public Output<String> referenceName() {
        return this.referenceName;
    }

    /**
     * Pipeline reference type.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Pipeline reference type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private PipelineReferenceArgs() {}

    private PipelineReferenceArgs(PipelineReferenceArgs $) {
        this.name = $.name;
        this.referenceName = $.referenceName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineReferenceArgs $;

        public Builder() {
            $ = new PipelineReferenceArgs();
        }

        public Builder(PipelineReferenceArgs defaults) {
            $ = new PipelineReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Reference name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Reference name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param referenceName Reference pipeline name.
         * 
         * @return builder
         * 
         */
        public Builder referenceName(Output<String> referenceName) {
            $.referenceName = referenceName;
            return this;
        }

        /**
         * @param referenceName Reference pipeline name.
         * 
         * @return builder
         * 
         */
        public Builder referenceName(String referenceName) {
            return referenceName(Output.of(referenceName));
        }

        /**
         * @param type Pipeline reference type.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Pipeline reference type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PipelineReferenceArgs build() {
            $.referenceName = Objects.requireNonNull($.referenceName, "expected parameter 'referenceName' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
