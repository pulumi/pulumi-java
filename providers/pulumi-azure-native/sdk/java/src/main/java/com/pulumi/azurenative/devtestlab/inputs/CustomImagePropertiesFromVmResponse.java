// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.azurenative.devtestlab.inputs.LinuxOsInfoResponse;
import com.pulumi.azurenative.devtestlab.inputs.WindowsOsInfoResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties for creating a custom image from a virtual machine.
 * 
 */
public final class CustomImagePropertiesFromVmResponse extends com.pulumi.resources.InvokeArgs {

    public static final CustomImagePropertiesFromVmResponse Empty = new CustomImagePropertiesFromVmResponse();

    /**
     * The Linux OS information of the VM.
     * 
     */
    @Import(name="linuxOsInfo")
    private @Nullable LinuxOsInfoResponse linuxOsInfo;

    /**
     * @return The Linux OS information of the VM.
     * 
     */
    public Optional<LinuxOsInfoResponse> linuxOsInfo() {
        return Optional.ofNullable(this.linuxOsInfo);
    }

    /**
     * The source vm identifier.
     * 
     */
    @Import(name="sourceVmId")
    private @Nullable String sourceVmId;

    /**
     * @return The source vm identifier.
     * 
     */
    public Optional<String> sourceVmId() {
        return Optional.ofNullable(this.sourceVmId);
    }

    /**
     * The Windows OS information of the VM.
     * 
     */
    @Import(name="windowsOsInfo")
    private @Nullable WindowsOsInfoResponse windowsOsInfo;

    /**
     * @return The Windows OS information of the VM.
     * 
     */
    public Optional<WindowsOsInfoResponse> windowsOsInfo() {
        return Optional.ofNullable(this.windowsOsInfo);
    }

    private CustomImagePropertiesFromVmResponse() {}

    private CustomImagePropertiesFromVmResponse(CustomImagePropertiesFromVmResponse $) {
        this.linuxOsInfo = $.linuxOsInfo;
        this.sourceVmId = $.sourceVmId;
        this.windowsOsInfo = $.windowsOsInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomImagePropertiesFromVmResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomImagePropertiesFromVmResponse $;

        public Builder() {
            $ = new CustomImagePropertiesFromVmResponse();
        }

        public Builder(CustomImagePropertiesFromVmResponse defaults) {
            $ = new CustomImagePropertiesFromVmResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param linuxOsInfo The Linux OS information of the VM.
         * 
         * @return builder
         * 
         */
        public Builder linuxOsInfo(@Nullable LinuxOsInfoResponse linuxOsInfo) {
            $.linuxOsInfo = linuxOsInfo;
            return this;
        }

        /**
         * @param sourceVmId The source vm identifier.
         * 
         * @return builder
         * 
         */
        public Builder sourceVmId(@Nullable String sourceVmId) {
            $.sourceVmId = sourceVmId;
            return this;
        }

        /**
         * @param windowsOsInfo The Windows OS information of the VM.
         * 
         * @return builder
         * 
         */
        public Builder windowsOsInfo(@Nullable WindowsOsInfoResponse windowsOsInfo) {
            $.windowsOsInfo = windowsOsInfo;
            return this;
        }

        public CustomImagePropertiesFromVmResponse build() {
            return $;
        }
    }

}
