// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.azurenative.migrate.inputs.NicIpConfigurationResourceSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines the network interface resource settings.
 * 
 */
public final class NetworkInterfaceResourceSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkInterfaceResourceSettingsArgs Empty = new NetworkInterfaceResourceSettingsArgs();

    /**
     * Gets or sets a value indicating whether accelerated networking is enabled.
     * 
     */
    @Import(name="enableAcceleratedNetworking")
      private final @Nullable Output<Boolean> enableAcceleratedNetworking;

    public Output<Boolean> enableAcceleratedNetworking() {
        return this.enableAcceleratedNetworking == null ? Codegen.empty() : this.enableAcceleratedNetworking;
    }

    /**
     * Gets or sets the IP configurations of the NIC.
     * 
     */
    @Import(name="ipConfigurations")
      private final @Nullable Output<List<NicIpConfigurationResourceSettingsArgs>> ipConfigurations;

    public Output<List<NicIpConfigurationResourceSettingsArgs>> ipConfigurations() {
        return this.ipConfigurations == null ? Codegen.empty() : this.ipConfigurations;
    }

    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Network/networkInterfaces'.
     * 
     */
    @Import(name="resourceType", required=true)
      private final Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * Gets or sets the target Resource name.
     * 
     */
    @Import(name="targetResourceName", required=true)
      private final Output<String> targetResourceName;

    public Output<String> targetResourceName() {
        return this.targetResourceName;
    }

    public NetworkInterfaceResourceSettingsArgs(
        @Nullable Output<Boolean> enableAcceleratedNetworking,
        @Nullable Output<List<NicIpConfigurationResourceSettingsArgs>> ipConfigurations,
        Output<String> resourceType,
        Output<String> targetResourceName) {
        this.enableAcceleratedNetworking = enableAcceleratedNetworking;
        this.ipConfigurations = ipConfigurations;
        this.resourceType = Codegen.stringProp("resourceType").output().arg(resourceType).require();
        this.targetResourceName = Objects.requireNonNull(targetResourceName, "expected parameter 'targetResourceName' to be non-null");
    }

    private NetworkInterfaceResourceSettingsArgs() {
        this.enableAcceleratedNetworking = Codegen.empty();
        this.ipConfigurations = Codegen.empty();
        this.resourceType = Codegen.empty();
        this.targetResourceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInterfaceResourceSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> enableAcceleratedNetworking;
        private @Nullable Output<List<NicIpConfigurationResourceSettingsArgs>> ipConfigurations;
        private Output<String> resourceType;
        private Output<String> targetResourceName;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkInterfaceResourceSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableAcceleratedNetworking = defaults.enableAcceleratedNetworking;
    	      this.ipConfigurations = defaults.ipConfigurations;
    	      this.resourceType = defaults.resourceType;
    	      this.targetResourceName = defaults.targetResourceName;
        }

        public Builder enableAcceleratedNetworking(@Nullable Output<Boolean> enableAcceleratedNetworking) {
            this.enableAcceleratedNetworking = enableAcceleratedNetworking;
            return this;
        }
        public Builder enableAcceleratedNetworking(@Nullable Boolean enableAcceleratedNetworking) {
            this.enableAcceleratedNetworking = Codegen.ofNullable(enableAcceleratedNetworking);
            return this;
        }
        public Builder ipConfigurations(@Nullable Output<List<NicIpConfigurationResourceSettingsArgs>> ipConfigurations) {
            this.ipConfigurations = ipConfigurations;
            return this;
        }
        public Builder ipConfigurations(@Nullable List<NicIpConfigurationResourceSettingsArgs> ipConfigurations) {
            this.ipConfigurations = Codegen.ofNullable(ipConfigurations);
            return this;
        }
        public Builder ipConfigurations(NicIpConfigurationResourceSettingsArgs... ipConfigurations) {
            return ipConfigurations(List.of(ipConfigurations));
        }
        public Builder resourceType(Output<String> resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }
        public Builder resourceType(String resourceType) {
            this.resourceType = Output.of(Objects.requireNonNull(resourceType));
            return this;
        }
        public Builder targetResourceName(Output<String> targetResourceName) {
            this.targetResourceName = Objects.requireNonNull(targetResourceName);
            return this;
        }
        public Builder targetResourceName(String targetResourceName) {
            this.targetResourceName = Output.of(Objects.requireNonNull(targetResourceName));
            return this;
        }        public NetworkInterfaceResourceSettingsArgs build() {
            return new NetworkInterfaceResourceSettingsArgs(enableAcceleratedNetworking, ipConfigurations, resourceType, targetResourceName);
        }
    }
}
