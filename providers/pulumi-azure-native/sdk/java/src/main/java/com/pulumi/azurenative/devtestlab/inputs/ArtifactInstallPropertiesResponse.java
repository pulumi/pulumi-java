// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.azurenative.devtestlab.inputs.ArtifactParameterPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of an artifact.
 * 
 */
public final class ArtifactInstallPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ArtifactInstallPropertiesResponse Empty = new ArtifactInstallPropertiesResponse();

    /**
     * The artifact&#39;s identifier.
     * 
     */
    @Import(name="artifactId")
    private @Nullable String artifactId;

    public Optional<String> artifactId() {
        return Optional.ofNullable(this.artifactId);
    }

    /**
     * The artifact&#39;s title.
     * 
     */
    @Import(name="artifactTitle")
    private @Nullable String artifactTitle;

    public Optional<String> artifactTitle() {
        return Optional.ofNullable(this.artifactTitle);
    }

    /**
     * The status message from the deployment.
     * 
     */
    @Import(name="deploymentStatusMessage")
    private @Nullable String deploymentStatusMessage;

    public Optional<String> deploymentStatusMessage() {
        return Optional.ofNullable(this.deploymentStatusMessage);
    }

    /**
     * The time that the artifact starts to install on the virtual machine.
     * 
     */
    @Import(name="installTime")
    private @Nullable String installTime;

    public Optional<String> installTime() {
        return Optional.ofNullable(this.installTime);
    }

    /**
     * The parameters of the artifact.
     * 
     */
    @Import(name="parameters")
    private @Nullable List<ArtifactParameterPropertiesResponse> parameters;

    public Optional<List<ArtifactParameterPropertiesResponse>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The status of the artifact.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The status message from the virtual machine extension.
     * 
     */
    @Import(name="vmExtensionStatusMessage")
    private @Nullable String vmExtensionStatusMessage;

    public Optional<String> vmExtensionStatusMessage() {
        return Optional.ofNullable(this.vmExtensionStatusMessage);
    }

    private ArtifactInstallPropertiesResponse() {}

    private ArtifactInstallPropertiesResponse(ArtifactInstallPropertiesResponse $) {
        this.artifactId = $.artifactId;
        this.artifactTitle = $.artifactTitle;
        this.deploymentStatusMessage = $.deploymentStatusMessage;
        this.installTime = $.installTime;
        this.parameters = $.parameters;
        this.status = $.status;
        this.vmExtensionStatusMessage = $.vmExtensionStatusMessage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ArtifactInstallPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ArtifactInstallPropertiesResponse $;

        public Builder() {
            $ = new ArtifactInstallPropertiesResponse();
        }

        public Builder(ArtifactInstallPropertiesResponse defaults) {
            $ = new ArtifactInstallPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder artifactId(@Nullable String artifactId) {
            $.artifactId = artifactId;
            return this;
        }

        public Builder artifactTitle(@Nullable String artifactTitle) {
            $.artifactTitle = artifactTitle;
            return this;
        }

        public Builder deploymentStatusMessage(@Nullable String deploymentStatusMessage) {
            $.deploymentStatusMessage = deploymentStatusMessage;
            return this;
        }

        public Builder installTime(@Nullable String installTime) {
            $.installTime = installTime;
            return this;
        }

        public Builder parameters(@Nullable List<ArtifactParameterPropertiesResponse> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(ArtifactParameterPropertiesResponse... parameters) {
            return parameters(List.of(parameters));
        }

        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public Builder vmExtensionStatusMessage(@Nullable String vmExtensionStatusMessage) {
            $.vmExtensionStatusMessage = vmExtensionStatusMessage;
            return this;
        }

        public ArtifactInstallPropertiesResponse build() {
            return $;
        }
    }

}
