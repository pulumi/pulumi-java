// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app.outputs;

import com.pulumi.azurenative.app.outputs.OpenIdConnectLoginResponse;
import com.pulumi.azurenative.app.outputs.OpenIdConnectRegistrationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CustomOpenIdConnectProviderResponse {
    /**
     * @return &lt;code&gt;false&lt;/code&gt; if the custom Open ID provider provider should not be enabled; otherwise, &lt;code&gt;true&lt;/code&gt;.
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * @return The configuration settings of the login flow of the custom Open ID Connect provider.
     * 
     */
    private final @Nullable OpenIdConnectLoginResponse login;
    /**
     * @return The configuration settings of the app registration for the custom Open ID Connect provider.
     * 
     */
    private final @Nullable OpenIdConnectRegistrationResponse registration;

    @CustomType.Constructor
    private CustomOpenIdConnectProviderResponse(
        @CustomType.Parameter("enabled") @Nullable Boolean enabled,
        @CustomType.Parameter("login") @Nullable OpenIdConnectLoginResponse login,
        @CustomType.Parameter("registration") @Nullable OpenIdConnectRegistrationResponse registration) {
        this.enabled = enabled;
        this.login = login;
        this.registration = registration;
    }

    /**
     * @return &lt;code&gt;false&lt;/code&gt; if the custom Open ID provider provider should not be enabled; otherwise, &lt;code&gt;true&lt;/code&gt;.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The configuration settings of the login flow of the custom Open ID Connect provider.
     * 
     */
    public Optional<OpenIdConnectLoginResponse> login() {
        return Optional.ofNullable(this.login);
    }
    /**
     * @return The configuration settings of the app registration for the custom Open ID Connect provider.
     * 
     */
    public Optional<OpenIdConnectRegistrationResponse> registration() {
        return Optional.ofNullable(this.registration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomOpenIdConnectProviderResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enabled;
        private @Nullable OpenIdConnectLoginResponse login;
        private @Nullable OpenIdConnectRegistrationResponse registration;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomOpenIdConnectProviderResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.login = defaults.login;
    	      this.registration = defaults.registration;
        }

        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder login(@Nullable OpenIdConnectLoginResponse login) {
            this.login = login;
            return this;
        }
        public Builder registration(@Nullable OpenIdConnectRegistrationResponse registration) {
            this.registration = registration;
            return this;
        }        public CustomOpenIdConnectProviderResponse build() {
            return new CustomOpenIdConnectProviderResponse(enabled, login, registration);
        }
    }
}
