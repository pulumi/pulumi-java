// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagesync;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegisteredServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegisteredServerArgs Empty = new RegisteredServerArgs();

    /**
     * Registered Server Agent Version
     * 
     */
    @Import(name="agentVersion")
    private @Nullable Output<String> agentVersion;

    /**
     * @return Registered Server Agent Version
     * 
     */
    public Optional<Output<String>> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }

    /**
     * Registered Server clusterId
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return Registered Server clusterId
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * Registered Server clusterName
     * 
     */
    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    /**
     * @return Registered Server clusterName
     * 
     */
    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    /**
     * Friendly Name
     * 
     */
    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    /**
     * @return Friendly Name
     * 
     */
    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * Registered Server last heart beat
     * 
     */
    @Import(name="lastHeartBeat")
    private @Nullable Output<String> lastHeartBeat;

    /**
     * @return Registered Server last heart beat
     * 
     */
    public Optional<Output<String>> lastHeartBeat() {
        return Optional.ofNullable(this.lastHeartBeat);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Registered Server Certificate
     * 
     */
    @Import(name="serverCertificate")
    private @Nullable Output<String> serverCertificate;

    /**
     * @return Registered Server Certificate
     * 
     */
    public Optional<Output<String>> serverCertificate() {
        return Optional.ofNullable(this.serverCertificate);
    }

    /**
     * Registered Server serverId
     * 
     */
    @Import(name="serverId")
    private @Nullable Output<String> serverId;

    /**
     * @return Registered Server serverId
     * 
     */
    public Optional<Output<String>> serverId() {
        return Optional.ofNullable(this.serverId);
    }

    /**
     * Registered Server OS Version
     * 
     */
    @Import(name="serverOSVersion")
    private @Nullable Output<String> serverOSVersion;

    /**
     * @return Registered Server OS Version
     * 
     */
    public Optional<Output<String>> serverOSVersion() {
        return Optional.ofNullable(this.serverOSVersion);
    }

    /**
     * Registered Server serverRole
     * 
     */
    @Import(name="serverRole")
    private @Nullable Output<String> serverRole;

    /**
     * @return Registered Server serverRole
     * 
     */
    public Optional<Output<String>> serverRole() {
        return Optional.ofNullable(this.serverRole);
    }

    /**
     * Name of Storage Sync Service resource.
     * 
     */
    @Import(name="storageSyncServiceName", required=true)
    private Output<String> storageSyncServiceName;

    /**
     * @return Name of Storage Sync Service resource.
     * 
     */
    public Output<String> storageSyncServiceName() {
        return this.storageSyncServiceName;
    }

    private RegisteredServerArgs() {}

    private RegisteredServerArgs(RegisteredServerArgs $) {
        this.agentVersion = $.agentVersion;
        this.clusterId = $.clusterId;
        this.clusterName = $.clusterName;
        this.friendlyName = $.friendlyName;
        this.lastHeartBeat = $.lastHeartBeat;
        this.resourceGroupName = $.resourceGroupName;
        this.serverCertificate = $.serverCertificate;
        this.serverId = $.serverId;
        this.serverOSVersion = $.serverOSVersion;
        this.serverRole = $.serverRole;
        this.storageSyncServiceName = $.storageSyncServiceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegisteredServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegisteredServerArgs $;

        public Builder() {
            $ = new RegisteredServerArgs();
        }

        public Builder(RegisteredServerArgs defaults) {
            $ = new RegisteredServerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentVersion Registered Server Agent Version
         * 
         * @return builder
         * 
         */
        public Builder agentVersion(@Nullable Output<String> agentVersion) {
            $.agentVersion = agentVersion;
            return this;
        }

        /**
         * @param agentVersion Registered Server Agent Version
         * 
         * @return builder
         * 
         */
        public Builder agentVersion(String agentVersion) {
            return agentVersion(Output.of(agentVersion));
        }

        /**
         * @param clusterId Registered Server clusterId
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId Registered Server clusterId
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param clusterName Registered Server clusterName
         * 
         * @return builder
         * 
         */
        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName Registered Server clusterName
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param friendlyName Friendly Name
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param friendlyName Friendly Name
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        /**
         * @param lastHeartBeat Registered Server last heart beat
         * 
         * @return builder
         * 
         */
        public Builder lastHeartBeat(@Nullable Output<String> lastHeartBeat) {
            $.lastHeartBeat = lastHeartBeat;
            return this;
        }

        /**
         * @param lastHeartBeat Registered Server last heart beat
         * 
         * @return builder
         * 
         */
        public Builder lastHeartBeat(String lastHeartBeat) {
            return lastHeartBeat(Output.of(lastHeartBeat));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serverCertificate Registered Server Certificate
         * 
         * @return builder
         * 
         */
        public Builder serverCertificate(@Nullable Output<String> serverCertificate) {
            $.serverCertificate = serverCertificate;
            return this;
        }

        /**
         * @param serverCertificate Registered Server Certificate
         * 
         * @return builder
         * 
         */
        public Builder serverCertificate(String serverCertificate) {
            return serverCertificate(Output.of(serverCertificate));
        }

        /**
         * @param serverId Registered Server serverId
         * 
         * @return builder
         * 
         */
        public Builder serverId(@Nullable Output<String> serverId) {
            $.serverId = serverId;
            return this;
        }

        /**
         * @param serverId Registered Server serverId
         * 
         * @return builder
         * 
         */
        public Builder serverId(String serverId) {
            return serverId(Output.of(serverId));
        }

        /**
         * @param serverOSVersion Registered Server OS Version
         * 
         * @return builder
         * 
         */
        public Builder serverOSVersion(@Nullable Output<String> serverOSVersion) {
            $.serverOSVersion = serverOSVersion;
            return this;
        }

        /**
         * @param serverOSVersion Registered Server OS Version
         * 
         * @return builder
         * 
         */
        public Builder serverOSVersion(String serverOSVersion) {
            return serverOSVersion(Output.of(serverOSVersion));
        }

        /**
         * @param serverRole Registered Server serverRole
         * 
         * @return builder
         * 
         */
        public Builder serverRole(@Nullable Output<String> serverRole) {
            $.serverRole = serverRole;
            return this;
        }

        /**
         * @param serverRole Registered Server serverRole
         * 
         * @return builder
         * 
         */
        public Builder serverRole(String serverRole) {
            return serverRole(Output.of(serverRole));
        }

        /**
         * @param storageSyncServiceName Name of Storage Sync Service resource.
         * 
         * @return builder
         * 
         */
        public Builder storageSyncServiceName(Output<String> storageSyncServiceName) {
            $.storageSyncServiceName = storageSyncServiceName;
            return this;
        }

        /**
         * @param storageSyncServiceName Name of Storage Sync Service resource.
         * 
         * @return builder
         * 
         */
        public Builder storageSyncServiceName(String storageSyncServiceName) {
            return storageSyncServiceName(Output.of(storageSyncServiceName));
        }

        public RegisteredServerArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.storageSyncServiceName = Objects.requireNonNull($.storageSyncServiceName, "expected parameter 'storageSyncServiceName' to be non-null");
            return $;
        }
    }

}
