// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.ApplicationRuleConditionResponse;
import com.pulumi.azurenative.network.inputs.FirewallPolicyNatRuleActionResponse;
import com.pulumi.azurenative.network.inputs.NatRuleConditionResponse;
import com.pulumi.azurenative.network.inputs.NetworkRuleConditionResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Firewall Policy NAT Rule.
 * 
 */
public final class FirewallPolicyNatRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final FirewallPolicyNatRuleResponse Empty = new FirewallPolicyNatRuleResponse();

    /**
     * The action type of a Nat rule.
     * 
     */
    @Import(name="action")
    private @Nullable FirewallPolicyNatRuleActionResponse action;

    public Optional<FirewallPolicyNatRuleActionResponse> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * The name of the rule.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Priority of the Firewall Policy Rule resource.
     * 
     */
    @Import(name="priority")
    private @Nullable Integer priority;

    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The match conditions for incoming traffic.
     * 
     */
    @Import(name="ruleCondition")
    private @Nullable Object ruleCondition;

    public Optional<Object> ruleCondition() {
        return Optional.ofNullable(this.ruleCondition);
    }

    /**
     * The type of the rule.
     * Expected value is &#39;FirewallPolicyNatRule&#39;.
     * 
     */
    @Import(name="ruleType", required=true)
    private String ruleType;

    public String ruleType() {
        return this.ruleType;
    }

    /**
     * The translated address for this NAT rule.
     * 
     */
    @Import(name="translatedAddress")
    private @Nullable String translatedAddress;

    public Optional<String> translatedAddress() {
        return Optional.ofNullable(this.translatedAddress);
    }

    /**
     * The translated port for this NAT rule.
     * 
     */
    @Import(name="translatedPort")
    private @Nullable String translatedPort;

    public Optional<String> translatedPort() {
        return Optional.ofNullable(this.translatedPort);
    }

    private FirewallPolicyNatRuleResponse() {}

    private FirewallPolicyNatRuleResponse(FirewallPolicyNatRuleResponse $) {
        this.action = $.action;
        this.name = $.name;
        this.priority = $.priority;
        this.ruleCondition = $.ruleCondition;
        this.ruleType = $.ruleType;
        this.translatedAddress = $.translatedAddress;
        this.translatedPort = $.translatedPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallPolicyNatRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallPolicyNatRuleResponse $;

        public Builder() {
            $ = new FirewallPolicyNatRuleResponse();
        }

        public Builder(FirewallPolicyNatRuleResponse defaults) {
            $ = new FirewallPolicyNatRuleResponse(Objects.requireNonNull(defaults));
        }

        public Builder action(@Nullable FirewallPolicyNatRuleActionResponse action) {
            $.action = action;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder priority(@Nullable Integer priority) {
            $.priority = priority;
            return this;
        }

        public Builder ruleCondition(@Nullable Object ruleCondition) {
            $.ruleCondition = ruleCondition;
            return this;
        }

        public Builder ruleType(String ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        public Builder translatedAddress(@Nullable String translatedAddress) {
            $.translatedAddress = translatedAddress;
            return this;
        }

        public Builder translatedPort(@Nullable String translatedPort) {
            $.translatedPort = translatedPort;
            return this;
        }

        public FirewallPolicyNatRuleResponse build() {
            $.ruleType = Codegen.stringProp("ruleType").arg($.ruleType).require();
            return $;
        }
    }

}
