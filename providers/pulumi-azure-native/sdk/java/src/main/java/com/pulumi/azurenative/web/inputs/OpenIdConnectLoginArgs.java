// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration settings of the login flow of the custom Open ID Connect provider.
 * 
 */
public final class OpenIdConnectLoginArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenIdConnectLoginArgs Empty = new OpenIdConnectLoginArgs();

    /**
     * The name of the claim that contains the users name.
     * 
     */
    @Import(name="nameClaimType")
    private @Nullable Output<String> nameClaimType;

    public Optional<Output<String>> nameClaimType() {
        return Optional.ofNullable(this.nameClaimType);
    }

    /**
     * A list of the scopes that should be requested while authenticating.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    private OpenIdConnectLoginArgs() {}

    private OpenIdConnectLoginArgs(OpenIdConnectLoginArgs $) {
        this.nameClaimType = $.nameClaimType;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenIdConnectLoginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenIdConnectLoginArgs $;

        public Builder() {
            $ = new OpenIdConnectLoginArgs();
        }

        public Builder(OpenIdConnectLoginArgs defaults) {
            $ = new OpenIdConnectLoginArgs(Objects.requireNonNull(defaults));
        }

        public Builder nameClaimType(@Nullable Output<String> nameClaimType) {
            $.nameClaimType = nameClaimType;
            return this;
        }

        public Builder nameClaimType(String nameClaimType) {
            return nameClaimType(Output.of(nameClaimType));
        }

        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public OpenIdConnectLoginArgs build() {
            return $;
        }
    }

}
