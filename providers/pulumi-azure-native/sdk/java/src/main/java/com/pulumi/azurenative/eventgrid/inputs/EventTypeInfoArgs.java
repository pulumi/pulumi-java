// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.inputs;

import com.pulumi.azurenative.eventgrid.enums.EventDefinitionKind;
import com.pulumi.azurenative.eventgrid.inputs.InlineEventPropertiesArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The event type information for Channels.
 * 
 */
public final class EventTypeInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventTypeInfoArgs Empty = new EventTypeInfoArgs();

    /**
     * A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.
     * An example of a valid inline event name is &#34;Contoso.OrderCreated&#34;.
     * The inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.
     * 
     */
    @Import(name="inlineEventTypes")
    private @Nullable Output<Map<String,InlineEventPropertiesArgs>> inlineEventTypes;

    /**
     * @return A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.
     * An example of a valid inline event name is &#34;Contoso.OrderCreated&#34;.
     * The inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.
     * 
     */
    public Optional<Output<Map<String,InlineEventPropertiesArgs>>> inlineEventTypes() {
        return Optional.ofNullable(this.inlineEventTypes);
    }

    /**
     * The kind of event type used.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<Either<String,EventDefinitionKind>> kind;

    /**
     * @return The kind of event type used.
     * 
     */
    public Optional<Output<Either<String,EventDefinitionKind>>> kind() {
        return Optional.ofNullable(this.kind);
    }

    private EventTypeInfoArgs() {}

    private EventTypeInfoArgs(EventTypeInfoArgs $) {
        this.inlineEventTypes = $.inlineEventTypes;
        this.kind = $.kind;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventTypeInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventTypeInfoArgs $;

        public Builder() {
            $ = new EventTypeInfoArgs();
        }

        public Builder(EventTypeInfoArgs defaults) {
            $ = new EventTypeInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inlineEventTypes A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.
         * An example of a valid inline event name is &#34;Contoso.OrderCreated&#34;.
         * The inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.
         * 
         * @return builder
         * 
         */
        public Builder inlineEventTypes(@Nullable Output<Map<String,InlineEventPropertiesArgs>> inlineEventTypes) {
            $.inlineEventTypes = inlineEventTypes;
            return this;
        }

        /**
         * @param inlineEventTypes A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.
         * An example of a valid inline event name is &#34;Contoso.OrderCreated&#34;.
         * The inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.
         * 
         * @return builder
         * 
         */
        public Builder inlineEventTypes(Map<String,InlineEventPropertiesArgs> inlineEventTypes) {
            return inlineEventTypes(Output.of(inlineEventTypes));
        }

        /**
         * @param kind The kind of event type used.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<Either<String,EventDefinitionKind>> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The kind of event type used.
         * 
         * @return builder
         * 
         */
        public Builder kind(Either<String,EventDefinitionKind> kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param kind The kind of event type used.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Either.ofLeft(kind));
        }

        /**
         * @param kind The kind of event type used.
         * 
         * @return builder
         * 
         */
        public Builder kind(EventDefinitionKind kind) {
            return kind(Either.ofRight(kind));
        }

        public EventTypeInfoArgs build() {
            return $;
        }
    }

}
