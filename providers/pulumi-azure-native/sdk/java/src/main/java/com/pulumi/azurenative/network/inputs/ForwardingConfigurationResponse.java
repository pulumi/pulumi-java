// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.CacheConfigurationResponse;
import com.pulumi.azurenative.network.inputs.SubResourceResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes Forwarding Route.
 * 
 */
public final class ForwardingConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ForwardingConfigurationResponse Empty = new ForwardingConfigurationResponse();

    /**
     * A reference to the BackendPool which this rule routes to.
     * 
     */
    @Import(name="backendPool")
    private @Nullable SubResourceResponse backendPool;

    public Optional<SubResourceResponse> backendPool() {
        return Optional.ofNullable(this.backendPool);
    }

    /**
     * The caching configuration associated with this rule.
     * 
     */
    @Import(name="cacheConfiguration")
    private @Nullable CacheConfigurationResponse cacheConfiguration;

    public Optional<CacheConfigurationResponse> cacheConfiguration() {
        return Optional.ofNullable(this.cacheConfiguration);
    }

    /**
     * A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
     * 
     */
    @Import(name="customForwardingPath")
    private @Nullable String customForwardingPath;

    public Optional<String> customForwardingPath() {
        return Optional.ofNullable(this.customForwardingPath);
    }

    /**
     * Protocol this rule will use when forwarding traffic to backends.
     * 
     */
    @Import(name="forwardingProtocol")
    private @Nullable String forwardingProtocol;

    public Optional<String> forwardingProtocol() {
        return Optional.ofNullable(this.forwardingProtocol);
    }

    /**
     * Expected value is &#39;#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private String odataType;

    public String odataType() {
        return this.odataType;
    }

    private ForwardingConfigurationResponse() {}

    private ForwardingConfigurationResponse(ForwardingConfigurationResponse $) {
        this.backendPool = $.backendPool;
        this.cacheConfiguration = $.cacheConfiguration;
        this.customForwardingPath = $.customForwardingPath;
        this.forwardingProtocol = $.forwardingProtocol;
        this.odataType = $.odataType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ForwardingConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ForwardingConfigurationResponse $;

        public Builder() {
            $ = new ForwardingConfigurationResponse();
        }

        public Builder(ForwardingConfigurationResponse defaults) {
            $ = new ForwardingConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder backendPool(@Nullable SubResourceResponse backendPool) {
            $.backendPool = backendPool;
            return this;
        }

        public Builder cacheConfiguration(@Nullable CacheConfigurationResponse cacheConfiguration) {
            $.cacheConfiguration = cacheConfiguration;
            return this;
        }

        public Builder customForwardingPath(@Nullable String customForwardingPath) {
            $.customForwardingPath = customForwardingPath;
            return this;
        }

        public Builder forwardingProtocol(@Nullable String forwardingProtocol) {
            $.forwardingProtocol = forwardingProtocol;
            return this;
        }

        public Builder odataType(String odataType) {
            $.odataType = odataType;
            return this;
        }

        public ForwardingConfigurationResponse build() {
            $.odataType = Codegen.stringProp("odataType").arg($.odataType).require();
            return $;
        }
    }

}
