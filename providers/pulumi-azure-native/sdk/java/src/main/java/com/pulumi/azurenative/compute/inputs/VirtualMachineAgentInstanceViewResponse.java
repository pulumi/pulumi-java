// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.InstanceViewStatusResponse;
import com.pulumi.azurenative.compute.inputs.VirtualMachineExtensionHandlerInstanceViewResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The instance view of the VM Agent running on the virtual machine.
 * 
 */
public final class VirtualMachineAgentInstanceViewResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualMachineAgentInstanceViewResponse Empty = new VirtualMachineAgentInstanceViewResponse();

    /**
     * The virtual machine extension handler instance view.
     * 
     */
    @Import(name="extensionHandlers")
    private @Nullable List<VirtualMachineExtensionHandlerInstanceViewResponse> extensionHandlers;

    public Optional<List<VirtualMachineExtensionHandlerInstanceViewResponse>> extensionHandlers() {
        return Optional.ofNullable(this.extensionHandlers);
    }

    /**
     * The resource status information.
     * 
     */
    @Import(name="statuses")
    private @Nullable List<InstanceViewStatusResponse> statuses;

    public Optional<List<InstanceViewStatusResponse>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    /**
     * The VM Agent full version.
     * 
     */
    @Import(name="vmAgentVersion")
    private @Nullable String vmAgentVersion;

    public Optional<String> vmAgentVersion() {
        return Optional.ofNullable(this.vmAgentVersion);
    }

    private VirtualMachineAgentInstanceViewResponse() {}

    private VirtualMachineAgentInstanceViewResponse(VirtualMachineAgentInstanceViewResponse $) {
        this.extensionHandlers = $.extensionHandlers;
        this.statuses = $.statuses;
        this.vmAgentVersion = $.vmAgentVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineAgentInstanceViewResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineAgentInstanceViewResponse $;

        public Builder() {
            $ = new VirtualMachineAgentInstanceViewResponse();
        }

        public Builder(VirtualMachineAgentInstanceViewResponse defaults) {
            $ = new VirtualMachineAgentInstanceViewResponse(Objects.requireNonNull(defaults));
        }

        public Builder extensionHandlers(@Nullable List<VirtualMachineExtensionHandlerInstanceViewResponse> extensionHandlers) {
            $.extensionHandlers = extensionHandlers;
            return this;
        }

        public Builder extensionHandlers(VirtualMachineExtensionHandlerInstanceViewResponse... extensionHandlers) {
            return extensionHandlers(List.of(extensionHandlers));
        }

        public Builder statuses(@Nullable List<InstanceViewStatusResponse> statuses) {
            $.statuses = statuses;
            return this;
        }

        public Builder statuses(InstanceViewStatusResponse... statuses) {
            return statuses(List.of(statuses));
        }

        public Builder vmAgentVersion(@Nullable String vmAgentVersion) {
            $.vmAgentVersion = vmAgentVersion;
            return this;
        }

        public VirtualMachineAgentInstanceViewResponse build() {
            return $;
        }
    }

}
