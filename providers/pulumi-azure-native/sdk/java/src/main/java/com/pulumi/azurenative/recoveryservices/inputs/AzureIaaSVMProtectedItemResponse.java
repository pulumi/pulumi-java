// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.AzureIaaSVMHealthDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.AzureIaaSVMProtectedItemExtendedInfoResponse;
import com.pulumi.azurenative.recoveryservices.inputs.ExtendedPropertiesResponse;
import com.pulumi.azurenative.recoveryservices.inputs.KPIResourceHealthDetailsResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * IaaS VM workload-specific backup item.
 * 
 */
public final class AzureIaaSVMProtectedItemResponse extends com.pulumi.resources.InvokeArgs {

    public static final AzureIaaSVMProtectedItemResponse Empty = new AzureIaaSVMProtectedItemResponse();

    /**
     * Type of backup management for the backed up item.
     * 
     */
    @Import(name="backupManagementType")
    private @Nullable String backupManagementType;

    public Optional<String> backupManagementType() {
        return Optional.ofNullable(this.backupManagementType);
    }

    /**
     * Name of the backup set the backup item belongs to
     * 
     */
    @Import(name="backupSetName")
    private @Nullable String backupSetName;

    public Optional<String> backupSetName() {
        return Optional.ofNullable(this.backupSetName);
    }

    /**
     * Unique name of container
     * 
     */
    @Import(name="containerName")
    private @Nullable String containerName;

    public Optional<String> containerName() {
        return Optional.ofNullable(this.containerName);
    }

    /**
     * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
     * 
     */
    @Import(name="createMode")
    private @Nullable String createMode;

    public Optional<String> createMode() {
        return Optional.ofNullable(this.createMode);
    }

    /**
     * Time for deferred deletion in UTC
     * 
     */
    @Import(name="deferredDeleteTimeInUTC")
    private @Nullable String deferredDeleteTimeInUTC;

    public Optional<String> deferredDeleteTimeInUTC() {
        return Optional.ofNullable(this.deferredDeleteTimeInUTC);
    }

    /**
     * Time remaining before the DS marked for deferred delete is permanently deleted
     * 
     */
    @Import(name="deferredDeleteTimeRemaining")
    private @Nullable String deferredDeleteTimeRemaining;

    public Optional<String> deferredDeleteTimeRemaining() {
        return Optional.ofNullable(this.deferredDeleteTimeRemaining);
    }

    /**
     * Additional information for this backup item.
     * 
     */
    @Import(name="extendedInfo")
    private @Nullable AzureIaaSVMProtectedItemExtendedInfoResponse extendedInfo;

    public Optional<AzureIaaSVMProtectedItemExtendedInfoResponse> extendedInfo() {
        return Optional.ofNullable(this.extendedInfo);
    }

    /**
     * Extended Properties for Azure IaasVM Backup.
     * 
     */
    @Import(name="extendedProperties")
    private @Nullable ExtendedPropertiesResponse extendedProperties;

    public Optional<ExtendedPropertiesResponse> extendedProperties() {
        return Optional.ofNullable(this.extendedProperties);
    }

    /**
     * Friendly name of the VM represented by this backup item.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable String friendlyName;

    public Optional<String> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * Health details on this backup item.
     * 
     */
    @Import(name="healthDetails")
    private @Nullable List<AzureIaaSVMHealthDetailsResponse> healthDetails;

    public Optional<List<AzureIaaSVMHealthDetailsResponse>> healthDetails() {
        return Optional.ofNullable(this.healthDetails);
    }

    /**
     * Health status of protected item.
     * 
     */
    @Import(name="healthStatus")
    private @Nullable String healthStatus;

    public Optional<String> healthStatus() {
        return Optional.ofNullable(this.healthStatus);
    }

    /**
     * Flag to identify whether the deferred deleted DS is to be purged soon
     * 
     */
    @Import(name="isDeferredDeleteScheduleUpcoming")
    private @Nullable Boolean isDeferredDeleteScheduleUpcoming;

    public Optional<Boolean> isDeferredDeleteScheduleUpcoming() {
        return Optional.ofNullable(this.isDeferredDeleteScheduleUpcoming);
    }

    /**
     * Flag to identify that deferred deleted DS is to be moved into Pause state
     * 
     */
    @Import(name="isRehydrate")
    private @Nullable Boolean isRehydrate;

    public Optional<Boolean> isRehydrate() {
        return Optional.ofNullable(this.isRehydrate);
    }

    /**
     * Flag to identify whether the DS is scheduled for deferred delete
     * 
     */
    @Import(name="isScheduledForDeferredDelete")
    private @Nullable Boolean isScheduledForDeferredDelete;

    public Optional<Boolean> isScheduledForDeferredDelete() {
        return Optional.ofNullable(this.isScheduledForDeferredDelete);
    }

    /**
     * Health details of different KPIs
     * 
     */
    @Import(name="kpisHealths")
    private @Nullable Map<String,KPIResourceHealthDetailsResponse> kpisHealths;

    public Optional<Map<String,KPIResourceHealthDetailsResponse>> kpisHealths() {
        return Optional.ofNullable(this.kpisHealths);
    }

    /**
     * Last backup operation status.
     * 
     */
    @Import(name="lastBackupStatus")
    private @Nullable String lastBackupStatus;

    public Optional<String> lastBackupStatus() {
        return Optional.ofNullable(this.lastBackupStatus);
    }

    /**
     * Timestamp of the last backup operation on this backup item.
     * 
     */
    @Import(name="lastBackupTime")
    private @Nullable String lastBackupTime;

    public Optional<String> lastBackupTime() {
        return Optional.ofNullable(this.lastBackupTime);
    }

    /**
     * Timestamp when the last (latest) backup copy was created for this backup item.
     * 
     */
    @Import(name="lastRecoveryPoint")
    private @Nullable String lastRecoveryPoint;

    public Optional<String> lastRecoveryPoint() {
        return Optional.ofNullable(this.lastRecoveryPoint);
    }

    /**
     * ID of the backup policy with which this item is backed up.
     * 
     */
    @Import(name="policyId")
    private @Nullable String policyId;

    public Optional<String> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * Data ID of the protected item.
     * 
     */
    @Import(name="protectedItemDataId")
    private @Nullable String protectedItemDataId;

    public Optional<String> protectedItemDataId() {
        return Optional.ofNullable(this.protectedItemDataId);
    }

    /**
     * backup item type.
     * Expected value is &#39;AzureIaaSVMProtectedItem&#39;.
     * 
     */
    @Import(name="protectedItemType", required=true)
    private String protectedItemType;

    public String protectedItemType() {
        return this.protectedItemType;
    }

    /**
     * Backup state of this backup item.
     * 
     */
    @Import(name="protectionState")
    private @Nullable String protectionState;

    public Optional<String> protectionState() {
        return Optional.ofNullable(this.protectionState);
    }

    /**
     * Backup status of this backup item.
     * 
     */
    @Import(name="protectionStatus")
    private @Nullable String protectionStatus;

    public Optional<String> protectionStatus() {
        return Optional.ofNullable(this.protectionStatus);
    }

    /**
     * ARM ID of the resource to be backed up.
     * 
     */
    @Import(name="sourceResourceId")
    private @Nullable String sourceResourceId;

    public Optional<String> sourceResourceId() {
        return Optional.ofNullable(this.sourceResourceId);
    }

    /**
     * Fully qualified ARM ID of the virtual machine represented by this item.
     * 
     */
    @Import(name="virtualMachineId")
    private @Nullable String virtualMachineId;

    public Optional<String> virtualMachineId() {
        return Optional.ofNullable(this.virtualMachineId);
    }

    /**
     * Type of workload this item represents.
     * 
     */
    @Import(name="workloadType")
    private @Nullable String workloadType;

    public Optional<String> workloadType() {
        return Optional.ofNullable(this.workloadType);
    }

    private AzureIaaSVMProtectedItemResponse() {}

    private AzureIaaSVMProtectedItemResponse(AzureIaaSVMProtectedItemResponse $) {
        this.backupManagementType = $.backupManagementType;
        this.backupSetName = $.backupSetName;
        this.containerName = $.containerName;
        this.createMode = $.createMode;
        this.deferredDeleteTimeInUTC = $.deferredDeleteTimeInUTC;
        this.deferredDeleteTimeRemaining = $.deferredDeleteTimeRemaining;
        this.extendedInfo = $.extendedInfo;
        this.extendedProperties = $.extendedProperties;
        this.friendlyName = $.friendlyName;
        this.healthDetails = $.healthDetails;
        this.healthStatus = $.healthStatus;
        this.isDeferredDeleteScheduleUpcoming = $.isDeferredDeleteScheduleUpcoming;
        this.isRehydrate = $.isRehydrate;
        this.isScheduledForDeferredDelete = $.isScheduledForDeferredDelete;
        this.kpisHealths = $.kpisHealths;
        this.lastBackupStatus = $.lastBackupStatus;
        this.lastBackupTime = $.lastBackupTime;
        this.lastRecoveryPoint = $.lastRecoveryPoint;
        this.policyId = $.policyId;
        this.protectedItemDataId = $.protectedItemDataId;
        this.protectedItemType = $.protectedItemType;
        this.protectionState = $.protectionState;
        this.protectionStatus = $.protectionStatus;
        this.sourceResourceId = $.sourceResourceId;
        this.virtualMachineId = $.virtualMachineId;
        this.workloadType = $.workloadType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureIaaSVMProtectedItemResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureIaaSVMProtectedItemResponse $;

        public Builder() {
            $ = new AzureIaaSVMProtectedItemResponse();
        }

        public Builder(AzureIaaSVMProtectedItemResponse defaults) {
            $ = new AzureIaaSVMProtectedItemResponse(Objects.requireNonNull(defaults));
        }

        public Builder backupManagementType(@Nullable String backupManagementType) {
            $.backupManagementType = backupManagementType;
            return this;
        }

        public Builder backupSetName(@Nullable String backupSetName) {
            $.backupSetName = backupSetName;
            return this;
        }

        public Builder containerName(@Nullable String containerName) {
            $.containerName = containerName;
            return this;
        }

        public Builder createMode(@Nullable String createMode) {
            $.createMode = createMode;
            return this;
        }

        public Builder deferredDeleteTimeInUTC(@Nullable String deferredDeleteTimeInUTC) {
            $.deferredDeleteTimeInUTC = deferredDeleteTimeInUTC;
            return this;
        }

        public Builder deferredDeleteTimeRemaining(@Nullable String deferredDeleteTimeRemaining) {
            $.deferredDeleteTimeRemaining = deferredDeleteTimeRemaining;
            return this;
        }

        public Builder extendedInfo(@Nullable AzureIaaSVMProtectedItemExtendedInfoResponse extendedInfo) {
            $.extendedInfo = extendedInfo;
            return this;
        }

        public Builder extendedProperties(@Nullable ExtendedPropertiesResponse extendedProperties) {
            $.extendedProperties = extendedProperties;
            return this;
        }

        public Builder friendlyName(@Nullable String friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        public Builder healthDetails(@Nullable List<AzureIaaSVMHealthDetailsResponse> healthDetails) {
            $.healthDetails = healthDetails;
            return this;
        }

        public Builder healthDetails(AzureIaaSVMHealthDetailsResponse... healthDetails) {
            return healthDetails(List.of(healthDetails));
        }

        public Builder healthStatus(@Nullable String healthStatus) {
            $.healthStatus = healthStatus;
            return this;
        }

        public Builder isDeferredDeleteScheduleUpcoming(@Nullable Boolean isDeferredDeleteScheduleUpcoming) {
            $.isDeferredDeleteScheduleUpcoming = isDeferredDeleteScheduleUpcoming;
            return this;
        }

        public Builder isRehydrate(@Nullable Boolean isRehydrate) {
            $.isRehydrate = isRehydrate;
            return this;
        }

        public Builder isScheduledForDeferredDelete(@Nullable Boolean isScheduledForDeferredDelete) {
            $.isScheduledForDeferredDelete = isScheduledForDeferredDelete;
            return this;
        }

        public Builder kpisHealths(@Nullable Map<String,KPIResourceHealthDetailsResponse> kpisHealths) {
            $.kpisHealths = kpisHealths;
            return this;
        }

        public Builder lastBackupStatus(@Nullable String lastBackupStatus) {
            $.lastBackupStatus = lastBackupStatus;
            return this;
        }

        public Builder lastBackupTime(@Nullable String lastBackupTime) {
            $.lastBackupTime = lastBackupTime;
            return this;
        }

        public Builder lastRecoveryPoint(@Nullable String lastRecoveryPoint) {
            $.lastRecoveryPoint = lastRecoveryPoint;
            return this;
        }

        public Builder policyId(@Nullable String policyId) {
            $.policyId = policyId;
            return this;
        }

        public Builder protectedItemDataId(@Nullable String protectedItemDataId) {
            $.protectedItemDataId = protectedItemDataId;
            return this;
        }

        public Builder protectedItemType(String protectedItemType) {
            $.protectedItemType = protectedItemType;
            return this;
        }

        public Builder protectionState(@Nullable String protectionState) {
            $.protectionState = protectionState;
            return this;
        }

        public Builder protectionStatus(@Nullable String protectionStatus) {
            $.protectionStatus = protectionStatus;
            return this;
        }

        public Builder sourceResourceId(@Nullable String sourceResourceId) {
            $.sourceResourceId = sourceResourceId;
            return this;
        }

        public Builder virtualMachineId(@Nullable String virtualMachineId) {
            $.virtualMachineId = virtualMachineId;
            return this;
        }

        public Builder workloadType(@Nullable String workloadType) {
            $.workloadType = workloadType;
            return this;
        }

        public AzureIaaSVMProtectedItemResponse build() {
            $.protectedItemType = Codegen.stringProp("protectedItemType").arg($.protectedItemType).require();
            return $;
        }
    }

}
