// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.WebApplicationFirewallAction;
import com.pulumi.azurenative.network.enums.WebApplicationFirewallRuleType;
import com.pulumi.azurenative.network.inputs.MatchConditionArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines contents of a web application rule.
 * 
 */
public final class WebApplicationFirewallCustomRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebApplicationFirewallCustomRuleArgs Empty = new WebApplicationFirewallCustomRuleArgs();

    /**
     * Type of Actions.
     * 
     */
    @Import(name="action", required=true)
    private Output<Either<String,WebApplicationFirewallAction>> action;

    /**
     * @return Type of Actions.
     * 
     */
    public Output<Either<String,WebApplicationFirewallAction>> action() {
        return this.action;
    }

    /**
     * List of match conditions.
     * 
     */
    @Import(name="matchConditions", required=true)
    private Output<List<MatchConditionArgs>> matchConditions;

    /**
     * @return List of match conditions.
     * 
     */
    public Output<List<MatchConditionArgs>> matchConditions() {
        return this.matchConditions;
    }

    /**
     * The name of the resource that is unique within a policy. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the resource that is unique within a policy. This name can be used to access the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    /**
     * @return Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    /**
     * The rule type.
     * 
     */
    @Import(name="ruleType", required=true)
    private Output<Either<String,WebApplicationFirewallRuleType>> ruleType;

    /**
     * @return The rule type.
     * 
     */
    public Output<Either<String,WebApplicationFirewallRuleType>> ruleType() {
        return this.ruleType;
    }

    private WebApplicationFirewallCustomRuleArgs() {}

    private WebApplicationFirewallCustomRuleArgs(WebApplicationFirewallCustomRuleArgs $) {
        this.action = $.action;
        this.matchConditions = $.matchConditions;
        this.name = $.name;
        this.priority = $.priority;
        this.ruleType = $.ruleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebApplicationFirewallCustomRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebApplicationFirewallCustomRuleArgs $;

        public Builder() {
            $ = new WebApplicationFirewallCustomRuleArgs();
        }

        public Builder(WebApplicationFirewallCustomRuleArgs defaults) {
            $ = new WebApplicationFirewallCustomRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Type of Actions.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<Either<String,WebApplicationFirewallAction>> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Type of Actions.
         * 
         * @return builder
         * 
         */
        public Builder action(Either<String,WebApplicationFirewallAction> action) {
            return action(Output.of(action));
        }

        /**
         * @param action Type of Actions.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Either.ofLeft(action));
        }

        /**
         * @param action Type of Actions.
         * 
         * @return builder
         * 
         */
        public Builder action(WebApplicationFirewallAction action) {
            return action(Either.ofRight(action));
        }

        /**
         * @param matchConditions List of match conditions.
         * 
         * @return builder
         * 
         */
        public Builder matchConditions(Output<List<MatchConditionArgs>> matchConditions) {
            $.matchConditions = matchConditions;
            return this;
        }

        /**
         * @param matchConditions List of match conditions.
         * 
         * @return builder
         * 
         */
        public Builder matchConditions(List<MatchConditionArgs> matchConditions) {
            return matchConditions(Output.of(matchConditions));
        }

        /**
         * @param matchConditions List of match conditions.
         * 
         * @return builder
         * 
         */
        public Builder matchConditions(MatchConditionArgs... matchConditions) {
            return matchConditions(List.of(matchConditions));
        }

        /**
         * @param name The name of the resource that is unique within a policy. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the resource that is unique within a policy. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
         * 
         * @return builder
         * 
         */
        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param ruleType The rule type.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(Output<Either<String,WebApplicationFirewallRuleType>> ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        /**
         * @param ruleType The rule type.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(Either<String,WebApplicationFirewallRuleType> ruleType) {
            return ruleType(Output.of(ruleType));
        }

        /**
         * @param ruleType The rule type.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(String ruleType) {
            return ruleType(Either.ofLeft(ruleType));
        }

        /**
         * @param ruleType The rule type.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(WebApplicationFirewallRuleType ruleType) {
            return ruleType(Either.ofRight(ruleType));
        }

        public WebApplicationFirewallCustomRuleArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.matchConditions = Objects.requireNonNull($.matchConditions, "expected parameter 'matchConditions' to be non-null");
            $.priority = Objects.requireNonNull($.priority, "expected parameter 'priority' to be non-null");
            $.ruleType = Objects.requireNonNull($.ruleType, "expected parameter 'ruleType' to be non-null");
            return $;
        }
    }

}
