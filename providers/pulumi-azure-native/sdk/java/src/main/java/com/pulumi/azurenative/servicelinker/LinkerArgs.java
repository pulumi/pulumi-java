// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicelinker;

import com.pulumi.azurenative.servicelinker.enums.ClientType;
import com.pulumi.azurenative.servicelinker.inputs.SecretAuthInfoArgs;
import com.pulumi.azurenative.servicelinker.inputs.ServicePrincipalCertificateAuthInfoArgs;
import com.pulumi.azurenative.servicelinker.inputs.ServicePrincipalSecretAuthInfoArgs;
import com.pulumi.azurenative.servicelinker.inputs.SystemAssignedIdentityAuthInfoArgs;
import com.pulumi.azurenative.servicelinker.inputs.UserAssignedIdentityAuthInfoArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinkerArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinkerArgs Empty = new LinkerArgs();

    /**
     * The authentication type.
     * 
     */
    @Import(name="authInfo")
    private @Nullable Output<Object> authInfo;

    public Optional<Output<Object>> authInfo() {
        return Optional.ofNullable(this.authInfo);
    }

    /**
     * The application client type
     * 
     */
    @Import(name="clientType")
    private @Nullable Output<Either<String,ClientType>> clientType;

    public Optional<Output<Either<String,ClientType>>> clientType() {
        return Optional.ofNullable(this.clientType);
    }

    /**
     * The name Linker resource.
     * 
     */
    @Import(name="linkerName")
    private @Nullable Output<String> linkerName;

    public Optional<Output<String>> linkerName() {
        return Optional.ofNullable(this.linkerName);
    }

    /**
     * The fully qualified Azure Resource manager identifier of the resource to be connected.
     * 
     */
    @Import(name="resourceUri", required=true)
    private Output<String> resourceUri;

    public Output<String> resourceUri() {
        return this.resourceUri;
    }

    /**
     * The resource Id of target service.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    private LinkerArgs() {}

    private LinkerArgs(LinkerArgs $) {
        this.authInfo = $.authInfo;
        this.clientType = $.clientType;
        this.linkerName = $.linkerName;
        this.resourceUri = $.resourceUri;
        this.targetId = $.targetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinkerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinkerArgs $;

        public Builder() {
            $ = new LinkerArgs();
        }

        public Builder(LinkerArgs defaults) {
            $ = new LinkerArgs(Objects.requireNonNull(defaults));
        }

        public Builder authInfo(@Nullable Output<Object> authInfo) {
            $.authInfo = authInfo;
            return this;
        }

        public Builder authInfo(Object authInfo) {
            return authInfo(Output.of(authInfo));
        }

        public Builder clientType(@Nullable Output<Either<String,ClientType>> clientType) {
            $.clientType = clientType;
            return this;
        }

        public Builder clientType(Either<String,ClientType> clientType) {
            return clientType(Output.of(clientType));
        }

        public Builder linkerName(@Nullable Output<String> linkerName) {
            $.linkerName = linkerName;
            return this;
        }

        public Builder linkerName(String linkerName) {
            return linkerName(Output.of(linkerName));
        }

        public Builder resourceUri(Output<String> resourceUri) {
            $.resourceUri = resourceUri;
            return this;
        }

        public Builder resourceUri(String resourceUri) {
            return resourceUri(Output.of(resourceUri));
        }

        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        public LinkerArgs build() {
            $.resourceUri = Objects.requireNonNull($.resourceUri, "expected parameter 'resourceUri' to be non-null");
            return $;
        }
    }

}
