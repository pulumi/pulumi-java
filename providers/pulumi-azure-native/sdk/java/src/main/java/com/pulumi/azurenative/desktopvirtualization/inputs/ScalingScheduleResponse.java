// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Scaling plan schedule.
 * 
 */
public final class ScalingScheduleResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScalingScheduleResponse Empty = new ScalingScheduleResponse();

    /**
     * Set of days of the week on which this schedule is active.
     * 
     */
    @Import(name="daysOfWeek")
    private @Nullable List<String> daysOfWeek;

    public Optional<List<String>> daysOfWeek() {
        return Optional.ofNullable(this.daysOfWeek);
    }

    /**
     * Name of the scaling schedule.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Load balancing algorithm for off-peak period.
     * 
     */
    @Import(name="offPeakLoadBalancingAlgorithm")
    private @Nullable String offPeakLoadBalancingAlgorithm;

    public Optional<String> offPeakLoadBalancingAlgorithm() {
        return Optional.ofNullable(this.offPeakLoadBalancingAlgorithm);
    }

    /**
     * Starting time for off-peak period.
     * 
     */
    @Import(name="offPeakStartTime")
    private @Nullable String offPeakStartTime;

    public Optional<String> offPeakStartTime() {
        return Optional.ofNullable(this.offPeakStartTime);
    }

    /**
     * Load balancing algorithm for peak period.
     * 
     */
    @Import(name="peakLoadBalancingAlgorithm")
    private @Nullable String peakLoadBalancingAlgorithm;

    public Optional<String> peakLoadBalancingAlgorithm() {
        return Optional.ofNullable(this.peakLoadBalancingAlgorithm);
    }

    /**
     * Starting time for peak period.
     * 
     */
    @Import(name="peakStartTime")
    private @Nullable String peakStartTime;

    public Optional<String> peakStartTime() {
        return Optional.ofNullable(this.peakStartTime);
    }

    /**
     * Capacity threshold for ramp down period.
     * 
     */
    @Import(name="rampDownCapacityThresholdPct")
    private @Nullable Integer rampDownCapacityThresholdPct;

    public Optional<Integer> rampDownCapacityThresholdPct() {
        return Optional.ofNullable(this.rampDownCapacityThresholdPct);
    }

    /**
     * Should users be logged off forcefully from hosts.
     * 
     */
    @Import(name="rampDownForceLogoffUsers")
    private @Nullable Boolean rampDownForceLogoffUsers;

    public Optional<Boolean> rampDownForceLogoffUsers() {
        return Optional.ofNullable(this.rampDownForceLogoffUsers);
    }

    /**
     * Load balancing algorithm for ramp down period.
     * 
     */
    @Import(name="rampDownLoadBalancingAlgorithm")
    private @Nullable String rampDownLoadBalancingAlgorithm;

    public Optional<String> rampDownLoadBalancingAlgorithm() {
        return Optional.ofNullable(this.rampDownLoadBalancingAlgorithm);
    }

    /**
     * Minimum host percentage for ramp down period.
     * 
     */
    @Import(name="rampDownMinimumHostsPct")
    private @Nullable Integer rampDownMinimumHostsPct;

    public Optional<Integer> rampDownMinimumHostsPct() {
        return Optional.ofNullable(this.rampDownMinimumHostsPct);
    }

    /**
     * Notification message for users during ramp down period.
     * 
     */
    @Import(name="rampDownNotificationMessage")
    private @Nullable String rampDownNotificationMessage;

    public Optional<String> rampDownNotificationMessage() {
        return Optional.ofNullable(this.rampDownNotificationMessage);
    }

    /**
     * Starting time for ramp down period.
     * 
     */
    @Import(name="rampDownStartTime")
    private @Nullable String rampDownStartTime;

    public Optional<String> rampDownStartTime() {
        return Optional.ofNullable(this.rampDownStartTime);
    }

    /**
     * Specifies when to stop hosts during ramp down period.
     * 
     */
    @Import(name="rampDownStopHostsWhen")
    private @Nullable String rampDownStopHostsWhen;

    public Optional<String> rampDownStopHostsWhen() {
        return Optional.ofNullable(this.rampDownStopHostsWhen);
    }

    /**
     * Number of minutes to wait to stop hosts during ramp down period.
     * 
     */
    @Import(name="rampDownWaitTimeMinutes")
    private @Nullable Integer rampDownWaitTimeMinutes;

    public Optional<Integer> rampDownWaitTimeMinutes() {
        return Optional.ofNullable(this.rampDownWaitTimeMinutes);
    }

    /**
     * Capacity threshold for ramp up period.
     * 
     */
    @Import(name="rampUpCapacityThresholdPct")
    private @Nullable Integer rampUpCapacityThresholdPct;

    public Optional<Integer> rampUpCapacityThresholdPct() {
        return Optional.ofNullable(this.rampUpCapacityThresholdPct);
    }

    /**
     * Load balancing algorithm for ramp up period.
     * 
     */
    @Import(name="rampUpLoadBalancingAlgorithm")
    private @Nullable String rampUpLoadBalancingAlgorithm;

    public Optional<String> rampUpLoadBalancingAlgorithm() {
        return Optional.ofNullable(this.rampUpLoadBalancingAlgorithm);
    }

    /**
     * Minimum host percentage for ramp up period.
     * 
     */
    @Import(name="rampUpMinimumHostsPct")
    private @Nullable Integer rampUpMinimumHostsPct;

    public Optional<Integer> rampUpMinimumHostsPct() {
        return Optional.ofNullable(this.rampUpMinimumHostsPct);
    }

    /**
     * Starting time for ramp up period.
     * 
     */
    @Import(name="rampUpStartTime")
    private @Nullable String rampUpStartTime;

    public Optional<String> rampUpStartTime() {
        return Optional.ofNullable(this.rampUpStartTime);
    }

    private ScalingScheduleResponse() {}

    private ScalingScheduleResponse(ScalingScheduleResponse $) {
        this.daysOfWeek = $.daysOfWeek;
        this.name = $.name;
        this.offPeakLoadBalancingAlgorithm = $.offPeakLoadBalancingAlgorithm;
        this.offPeakStartTime = $.offPeakStartTime;
        this.peakLoadBalancingAlgorithm = $.peakLoadBalancingAlgorithm;
        this.peakStartTime = $.peakStartTime;
        this.rampDownCapacityThresholdPct = $.rampDownCapacityThresholdPct;
        this.rampDownForceLogoffUsers = $.rampDownForceLogoffUsers;
        this.rampDownLoadBalancingAlgorithm = $.rampDownLoadBalancingAlgorithm;
        this.rampDownMinimumHostsPct = $.rampDownMinimumHostsPct;
        this.rampDownNotificationMessage = $.rampDownNotificationMessage;
        this.rampDownStartTime = $.rampDownStartTime;
        this.rampDownStopHostsWhen = $.rampDownStopHostsWhen;
        this.rampDownWaitTimeMinutes = $.rampDownWaitTimeMinutes;
        this.rampUpCapacityThresholdPct = $.rampUpCapacityThresholdPct;
        this.rampUpLoadBalancingAlgorithm = $.rampUpLoadBalancingAlgorithm;
        this.rampUpMinimumHostsPct = $.rampUpMinimumHostsPct;
        this.rampUpStartTime = $.rampUpStartTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScalingScheduleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScalingScheduleResponse $;

        public Builder() {
            $ = new ScalingScheduleResponse();
        }

        public Builder(ScalingScheduleResponse defaults) {
            $ = new ScalingScheduleResponse(Objects.requireNonNull(defaults));
        }

        public Builder daysOfWeek(@Nullable List<String> daysOfWeek) {
            $.daysOfWeek = daysOfWeek;
            return this;
        }

        public Builder daysOfWeek(String... daysOfWeek) {
            return daysOfWeek(List.of(daysOfWeek));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder offPeakLoadBalancingAlgorithm(@Nullable String offPeakLoadBalancingAlgorithm) {
            $.offPeakLoadBalancingAlgorithm = offPeakLoadBalancingAlgorithm;
            return this;
        }

        public Builder offPeakStartTime(@Nullable String offPeakStartTime) {
            $.offPeakStartTime = offPeakStartTime;
            return this;
        }

        public Builder peakLoadBalancingAlgorithm(@Nullable String peakLoadBalancingAlgorithm) {
            $.peakLoadBalancingAlgorithm = peakLoadBalancingAlgorithm;
            return this;
        }

        public Builder peakStartTime(@Nullable String peakStartTime) {
            $.peakStartTime = peakStartTime;
            return this;
        }

        public Builder rampDownCapacityThresholdPct(@Nullable Integer rampDownCapacityThresholdPct) {
            $.rampDownCapacityThresholdPct = rampDownCapacityThresholdPct;
            return this;
        }

        public Builder rampDownForceLogoffUsers(@Nullable Boolean rampDownForceLogoffUsers) {
            $.rampDownForceLogoffUsers = rampDownForceLogoffUsers;
            return this;
        }

        public Builder rampDownLoadBalancingAlgorithm(@Nullable String rampDownLoadBalancingAlgorithm) {
            $.rampDownLoadBalancingAlgorithm = rampDownLoadBalancingAlgorithm;
            return this;
        }

        public Builder rampDownMinimumHostsPct(@Nullable Integer rampDownMinimumHostsPct) {
            $.rampDownMinimumHostsPct = rampDownMinimumHostsPct;
            return this;
        }

        public Builder rampDownNotificationMessage(@Nullable String rampDownNotificationMessage) {
            $.rampDownNotificationMessage = rampDownNotificationMessage;
            return this;
        }

        public Builder rampDownStartTime(@Nullable String rampDownStartTime) {
            $.rampDownStartTime = rampDownStartTime;
            return this;
        }

        public Builder rampDownStopHostsWhen(@Nullable String rampDownStopHostsWhen) {
            $.rampDownStopHostsWhen = rampDownStopHostsWhen;
            return this;
        }

        public Builder rampDownWaitTimeMinutes(@Nullable Integer rampDownWaitTimeMinutes) {
            $.rampDownWaitTimeMinutes = rampDownWaitTimeMinutes;
            return this;
        }

        public Builder rampUpCapacityThresholdPct(@Nullable Integer rampUpCapacityThresholdPct) {
            $.rampUpCapacityThresholdPct = rampUpCapacityThresholdPct;
            return this;
        }

        public Builder rampUpLoadBalancingAlgorithm(@Nullable String rampUpLoadBalancingAlgorithm) {
            $.rampUpLoadBalancingAlgorithm = rampUpLoadBalancingAlgorithm;
            return this;
        }

        public Builder rampUpMinimumHostsPct(@Nullable Integer rampUpMinimumHostsPct) {
            $.rampUpMinimumHostsPct = rampUpMinimumHostsPct;
            return this;
        }

        public Builder rampUpStartTime(@Nullable String rampUpStartTime) {
            $.rampUpStartTime = rampUpStartTime;
            return this;
        }

        public ScalingScheduleResponse build() {
            return $;
        }
    }

}
