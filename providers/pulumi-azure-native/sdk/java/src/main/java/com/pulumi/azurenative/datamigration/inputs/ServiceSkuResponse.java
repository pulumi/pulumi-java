// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * An Azure SKU instance
 * 
 */
public final class ServiceSkuResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServiceSkuResponse Empty = new ServiceSkuResponse();

    /**
     * The capacity of the SKU, if it supports scaling
     * 
     */
    @Import(name="capacity")
    private @Nullable Integer capacity;

    public Optional<Integer> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * The SKU family, used when the service has multiple performance classes within a tier, such as &#39;A&#39;, &#39;D&#39;, etc. for virtual machines
     * 
     */
    @Import(name="family")
    private @Nullable String family;

    public Optional<String> family() {
        return Optional.ofNullable(this.family);
    }

    /**
     * The unique name of the SKU, such as &#39;P3&#39;
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. &#39;A1&#39; for virtual machines
     * 
     */
    @Import(name="size")
    private @Nullable String size;

    public Optional<String> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * The tier of the SKU, such as &#39;Free&#39;, &#39;Basic&#39;, &#39;Standard&#39;, or &#39;Premium&#39;
     * 
     */
    @Import(name="tier")
    private @Nullable String tier;

    public Optional<String> tier() {
        return Optional.ofNullable(this.tier);
    }

    private ServiceSkuResponse() {}

    private ServiceSkuResponse(ServiceSkuResponse $) {
        this.capacity = $.capacity;
        this.family = $.family;
        this.name = $.name;
        this.size = $.size;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceSkuResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceSkuResponse $;

        public Builder() {
            $ = new ServiceSkuResponse();
        }

        public Builder(ServiceSkuResponse defaults) {
            $ = new ServiceSkuResponse(Objects.requireNonNull(defaults));
        }

        public Builder capacity(@Nullable Integer capacity) {
            $.capacity = capacity;
            return this;
        }

        public Builder family(@Nullable String family) {
            $.family = family;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder size(@Nullable String size) {
            $.size = size;
            return this;
        }

        public Builder tier(@Nullable String tier) {
            $.tier = tier;
            return this;
        }

        public ServiceSkuResponse build() {
            return $;
        }
    }

}
