// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagesync.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


/**
 * Server endpoint recall error object
 * 
 */
public final class ServerEndpointRecallErrorResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServerEndpointRecallErrorResponse Empty = new ServerEndpointRecallErrorResponse();

    /**
     * Count of occurences of the error
     * 
     */
    @Import(name="count", required=true)
    private Double count;

    /**
     * @return Count of occurences of the error
     * 
     */
    public Double count() {
        return this.count;
    }

    /**
     * Error code (HResult)
     * 
     */
    @Import(name="errorCode", required=true)
    private Integer errorCode;

    /**
     * @return Error code (HResult)
     * 
     */
    public Integer errorCode() {
        return this.errorCode;
    }

    private ServerEndpointRecallErrorResponse() {}

    private ServerEndpointRecallErrorResponse(ServerEndpointRecallErrorResponse $) {
        this.count = $.count;
        this.errorCode = $.errorCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerEndpointRecallErrorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerEndpointRecallErrorResponse $;

        public Builder() {
            $ = new ServerEndpointRecallErrorResponse();
        }

        public Builder(ServerEndpointRecallErrorResponse defaults) {
            $ = new ServerEndpointRecallErrorResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param count Count of occurences of the error
         * 
         * @return builder
         * 
         */
        public Builder count(Double count) {
            $.count = count;
            return this;
        }

        /**
         * @param errorCode Error code (HResult)
         * 
         * @return builder
         * 
         */
        public Builder errorCode(Integer errorCode) {
            $.errorCode = errorCode;
            return this;
        }

        public ServerEndpointRecallErrorResponse build() {
            $.count = Objects.requireNonNull($.count, "expected parameter 'count' to be non-null");
            $.errorCode = Objects.requireNonNull($.errorCode, "expected parameter 'errorCode' to be non-null");
            return $;
        }
    }

}
