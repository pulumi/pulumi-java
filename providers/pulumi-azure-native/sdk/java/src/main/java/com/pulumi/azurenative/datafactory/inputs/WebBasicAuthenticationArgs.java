// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.AzureKeyVaultSecretReferenceArgs;
import com.pulumi.azurenative.datafactory.inputs.SecureStringArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;


/**
 * A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.
 * 
 */
public final class WebBasicAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebBasicAuthenticationArgs Empty = new WebBasicAuthenticationArgs();

    /**
     * Type of authentication used to connect to the web table source.
     * Expected value is 'Basic'.
     * 
     */
    @Import(name="authenticationType", required=true)
      private final Output<String> authenticationType;

    public Output<String> authenticationType() {
        return this.authenticationType;
    }

    /**
     * The password for Basic authentication.
     * 
     */
    @Import(name="password", required=true)
      private final Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password;

    public Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password() {
        return this.password;
    }

    /**
     * The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="url", required=true)
      private final Output<Object> url;

    public Output<Object> url() {
        return this.url;
    }

    /**
     * User name for Basic authentication. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="username", required=true)
      private final Output<Object> username;

    public Output<Object> username() {
        return this.username;
    }

    public WebBasicAuthenticationArgs(
        Output<String> authenticationType,
        Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password,
        Output<Object> url,
        Output<Object> username) {
        this.authenticationType = Objects.requireNonNull(authenticationType, "expected parameter 'authenticationType' to be non-null");
        this.password = Objects.requireNonNull(password, "expected parameter 'password' to be non-null");
        this.url = Objects.requireNonNull(url, "expected parameter 'url' to be non-null");
        this.username = Objects.requireNonNull(username, "expected parameter 'username' to be non-null");
    }

    private WebBasicAuthenticationArgs() {
        this.authenticationType = Codegen.empty();
        this.password = Codegen.empty();
        this.url = Codegen.empty();
        this.username = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebBasicAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> authenticationType;
        private Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password;
        private Output<Object> url;
        private Output<Object> username;

        public Builder() {
    	      // Empty
        }

        public Builder(WebBasicAuthenticationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationType = defaults.authenticationType;
    	      this.password = defaults.password;
    	      this.url = defaults.url;
    	      this.username = defaults.username;
        }

        public Builder authenticationType(Output<String> authenticationType) {
            this.authenticationType = Objects.requireNonNull(authenticationType);
            return this;
        }
        public Builder authenticationType(String authenticationType) {
            this.authenticationType = Output.of(Objects.requireNonNull(authenticationType));
            return this;
        }
        public Builder password(Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        public Builder password(Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs> password) {
            this.password = Output.of(Objects.requireNonNull(password));
            return this;
        }
        public Builder url(Output<Object> url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public Builder url(Object url) {
            this.url = Output.of(Objects.requireNonNull(url));
            return this;
        }
        public Builder username(Output<Object> username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public Builder username(Object username) {
            this.username = Output.of(Objects.requireNonNull(username));
            return this;
        }        public WebBasicAuthenticationArgs build() {
            return new WebBasicAuthenticationArgs(authenticationType, password, url, username);
        }
    }
}
