// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.PipelineReferenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Pipeline that needs to be triggered with the given parameters.
 * 
 */
public final class TriggerPipelineReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerPipelineReferenceArgs Empty = new TriggerPipelineReferenceArgs();

    /**
     * Pipeline parameters.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,Object>> parameters;

    /**
     * @return Pipeline parameters.
     * 
     */
    public Optional<Output<Map<String,Object>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Pipeline reference.
     * 
     */
    @Import(name="pipelineReference")
    private @Nullable Output<PipelineReferenceArgs> pipelineReference;

    /**
     * @return Pipeline reference.
     * 
     */
    public Optional<Output<PipelineReferenceArgs>> pipelineReference() {
        return Optional.ofNullable(this.pipelineReference);
    }

    private TriggerPipelineReferenceArgs() {}

    private TriggerPipelineReferenceArgs(TriggerPipelineReferenceArgs $) {
        this.parameters = $.parameters;
        this.pipelineReference = $.pipelineReference;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerPipelineReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerPipelineReferenceArgs $;

        public Builder() {
            $ = new TriggerPipelineReferenceArgs();
        }

        public Builder(TriggerPipelineReferenceArgs defaults) {
            $ = new TriggerPipelineReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param parameters Pipeline parameters.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,Object>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Pipeline parameters.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,Object> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param pipelineReference Pipeline reference.
         * 
         * @return builder
         * 
         */
        public Builder pipelineReference(@Nullable Output<PipelineReferenceArgs> pipelineReference) {
            $.pipelineReference = pipelineReference;
            return this;
        }

        /**
         * @param pipelineReference Pipeline reference.
         * 
         * @return builder
         * 
         */
        public Builder pipelineReference(PipelineReferenceArgs pipelineReference) {
            return pipelineReference(Output.of(pipelineReference));
        }

        public TriggerPipelineReferenceArgs build() {
            return $;
        }
    }

}
