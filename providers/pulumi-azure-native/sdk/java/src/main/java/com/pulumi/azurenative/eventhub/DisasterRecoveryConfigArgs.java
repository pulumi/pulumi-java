// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventhub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DisasterRecoveryConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DisasterRecoveryConfigArgs Empty = new DisasterRecoveryConfigArgs();

    /**
     * The Disaster Recovery configuration name
     * 
     */
    @Import(name="alias")
    private @Nullable Output<String> alias;

    /**
     * @return The Disaster Recovery configuration name
     * 
     */
    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * Alternate name specified when alias and namespace names are same.
     * 
     */
    @Import(name="alternateName")
    private @Nullable Output<String> alternateName;

    /**
     * @return Alternate name specified when alias and namespace names are same.
     * 
     */
    public Optional<Output<String>> alternateName() {
        return Optional.ofNullable(this.alternateName);
    }

    /**
     * The Namespace name
     * 
     */
    @Import(name="namespaceName", required=true)
    private Output<String> namespaceName;

    /**
     * @return The Namespace name
     * 
     */
    public Output<String> namespaceName() {
        return this.namespaceName;
    }

    /**
     * ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
     * 
     */
    @Import(name="partnerNamespace")
    private @Nullable Output<String> partnerNamespace;

    /**
     * @return ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
     * 
     */
    public Optional<Output<String>> partnerNamespace() {
        return Optional.ofNullable(this.partnerNamespace);
    }

    /**
     * Name of the resource group within the azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group within the azure subscription.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private DisasterRecoveryConfigArgs() {}

    private DisasterRecoveryConfigArgs(DisasterRecoveryConfigArgs $) {
        this.alias = $.alias;
        this.alternateName = $.alternateName;
        this.namespaceName = $.namespaceName;
        this.partnerNamespace = $.partnerNamespace;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DisasterRecoveryConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DisasterRecoveryConfigArgs $;

        public Builder() {
            $ = new DisasterRecoveryConfigArgs();
        }

        public Builder(DisasterRecoveryConfigArgs defaults) {
            $ = new DisasterRecoveryConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias The Disaster Recovery configuration name
         * 
         * @return builder
         * 
         */
        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias The Disaster Recovery configuration name
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param alternateName Alternate name specified when alias and namespace names are same.
         * 
         * @return builder
         * 
         */
        public Builder alternateName(@Nullable Output<String> alternateName) {
            $.alternateName = alternateName;
            return this;
        }

        /**
         * @param alternateName Alternate name specified when alias and namespace names are same.
         * 
         * @return builder
         * 
         */
        public Builder alternateName(String alternateName) {
            return alternateName(Output.of(alternateName));
        }

        /**
         * @param namespaceName The Namespace name
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(Output<String> namespaceName) {
            $.namespaceName = namespaceName;
            return this;
        }

        /**
         * @param namespaceName The Namespace name
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(String namespaceName) {
            return namespaceName(Output.of(namespaceName));
        }

        /**
         * @param partnerNamespace ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
         * 
         * @return builder
         * 
         */
        public Builder partnerNamespace(@Nullable Output<String> partnerNamespace) {
            $.partnerNamespace = partnerNamespace;
            return this;
        }

        /**
         * @param partnerNamespace ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
         * 
         * @return builder
         * 
         */
        public Builder partnerNamespace(String partnerNamespace) {
            return partnerNamespace(Output.of(partnerNamespace));
        }

        /**
         * @param resourceGroupName Name of the resource group within the azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group within the azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public DisasterRecoveryConfigArgs build() {
            $.namespaceName = Objects.requireNonNull($.namespaceName, "expected parameter 'namespaceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
