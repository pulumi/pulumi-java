// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.IdentityForCmkResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.KeyVaultPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EncryptionPropertyResponse extends com.pulumi.resources.InvokeArgs {

    public static final EncryptionPropertyResponse Empty = new EncryptionPropertyResponse();

    /**
     * The identity that will be used to access the key vault for encryption at rest.
     * 
     */
    @Import(name="identity")
      private final @Nullable IdentityForCmkResponse identity;

    public Optional<IdentityForCmkResponse> identity() {
        return this.identity == null ? Optional.empty() : Optional.ofNullable(this.identity);
    }

    /**
     * Customer Key vault properties.
     * 
     */
    @Import(name="keyVaultProperties", required=true)
      private final KeyVaultPropertiesResponse keyVaultProperties;

    public KeyVaultPropertiesResponse keyVaultProperties() {
        return this.keyVaultProperties;
    }

    /**
     * Indicates whether or not the encryption is enabled for the workspace.
     * 
     */
    @Import(name="status", required=true)
      private final String status;

    public String status() {
        return this.status;
    }

    public EncryptionPropertyResponse(
        @Nullable IdentityForCmkResponse identity,
        KeyVaultPropertiesResponse keyVaultProperties,
        String status) {
        this.identity = identity;
        this.keyVaultProperties = Objects.requireNonNull(keyVaultProperties, "expected parameter 'keyVaultProperties' to be non-null");
        this.status = Objects.requireNonNull(status, "expected parameter 'status' to be non-null");
    }

    private EncryptionPropertyResponse() {
        this.identity = null;
        this.keyVaultProperties = null;
        this.status = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionPropertyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable IdentityForCmkResponse identity;
        private KeyVaultPropertiesResponse keyVaultProperties;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(EncryptionPropertyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
    	      this.keyVaultProperties = defaults.keyVaultProperties;
    	      this.status = defaults.status;
        }

        public Builder identity(@Nullable IdentityForCmkResponse identity) {
            this.identity = identity;
            return this;
        }
        public Builder keyVaultProperties(KeyVaultPropertiesResponse keyVaultProperties) {
            this.keyVaultProperties = Objects.requireNonNull(keyVaultProperties);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public EncryptionPropertyResponse build() {
            return new EncryptionPropertyResponse(identity, keyVaultProperties, status);
        }
    }
}
