// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.IdentityForCmkResponse;
import com.pulumi.azurenative.machinelearningservices.inputs.KeyVaultPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EncryptionPropertyResponse extends com.pulumi.resources.InvokeArgs {

    public static final EncryptionPropertyResponse Empty = new EncryptionPropertyResponse();

    /**
     * The identity that will be used to access the key vault for encryption at rest.
     * 
     */
    @Import(name="identity")
    private @Nullable IdentityForCmkResponse identity;

    public Optional<IdentityForCmkResponse> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Customer Key vault properties.
     * 
     */
    @Import(name="keyVaultProperties", required=true)
    private KeyVaultPropertiesResponse keyVaultProperties;

    public KeyVaultPropertiesResponse keyVaultProperties() {
        return this.keyVaultProperties;
    }

    /**
     * Indicates whether or not the encryption is enabled for the workspace.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    public String status() {
        return this.status;
    }

    private EncryptionPropertyResponse() {}

    private EncryptionPropertyResponse(EncryptionPropertyResponse $) {
        this.identity = $.identity;
        this.keyVaultProperties = $.keyVaultProperties;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionPropertyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionPropertyResponse $;

        public Builder() {
            $ = new EncryptionPropertyResponse();
        }

        public Builder(EncryptionPropertyResponse defaults) {
            $ = new EncryptionPropertyResponse(Objects.requireNonNull(defaults));
        }

        public Builder identity(@Nullable IdentityForCmkResponse identity) {
            $.identity = identity;
            return this;
        }

        public Builder keyVaultProperties(KeyVaultPropertiesResponse keyVaultProperties) {
            $.keyVaultProperties = keyVaultProperties;
            return this;
        }

        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public EncryptionPropertyResponse build() {
            $.keyVaultProperties = Objects.requireNonNull($.keyVaultProperties, "expected parameter 'keyVaultProperties' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
