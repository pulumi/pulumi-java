// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


public final class ApplicationTypeVersionsCleanupPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationTypeVersionsCleanupPolicyResponse Empty = new ApplicationTypeVersionsCleanupPolicyResponse();

    /**
     * Number of unused versions per application type to keep.
     * 
     */
    @Import(name="maxUnusedVersionsToKeep", required=true)
    private Double maxUnusedVersionsToKeep;

    /**
     * @return Number of unused versions per application type to keep.
     * 
     */
    public Double maxUnusedVersionsToKeep() {
        return this.maxUnusedVersionsToKeep;
    }

    private ApplicationTypeVersionsCleanupPolicyResponse() {}

    private ApplicationTypeVersionsCleanupPolicyResponse(ApplicationTypeVersionsCleanupPolicyResponse $) {
        this.maxUnusedVersionsToKeep = $.maxUnusedVersionsToKeep;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationTypeVersionsCleanupPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationTypeVersionsCleanupPolicyResponse $;

        public Builder() {
            $ = new ApplicationTypeVersionsCleanupPolicyResponse();
        }

        public Builder(ApplicationTypeVersionsCleanupPolicyResponse defaults) {
            $ = new ApplicationTypeVersionsCleanupPolicyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxUnusedVersionsToKeep Number of unused versions per application type to keep.
         * 
         * @return builder
         * 
         */
        public Builder maxUnusedVersionsToKeep(Double maxUnusedVersionsToKeep) {
            $.maxUnusedVersionsToKeep = maxUnusedVersionsToKeep;
            return this;
        }

        public ApplicationTypeVersionsCleanupPolicyResponse build() {
            $.maxUnusedVersionsToKeep = Objects.requireNonNull($.maxUnusedVersionsToKeep, "expected parameter 'maxUnusedVersionsToKeep' to be non-null");
            return $;
        }
    }

}
