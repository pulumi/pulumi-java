// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.azurenative.network.inputs.VirtualHubRouteTableArgs;
import com.pulumi.azurenative.network.inputs.VirtualHubRouteTableV2Args;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualHubArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualHubArgs Empty = new VirtualHubArgs();

    /**
     * Address-prefix for this VirtualHub.
     * 
     */
    @Import(name="addressPrefix")
      private final @Nullable Output<String> addressPrefix;

    public Output<String> addressPrefix() {
        return this.addressPrefix == null ? Codegen.empty() : this.addressPrefix;
    }

    /**
     * Flag to control transit for VirtualRouter hub.
     * 
     */
    @Import(name="allowBranchToBranchTraffic")
      private final @Nullable Output<Boolean> allowBranchToBranchTraffic;

    public Output<Boolean> allowBranchToBranchTraffic() {
        return this.allowBranchToBranchTraffic == null ? Codegen.empty() : this.allowBranchToBranchTraffic;
    }

    /**
     * The azureFirewall associated with this VirtualHub.
     * 
     */
    @Import(name="azureFirewall")
      private final @Nullable Output<SubResourceArgs> azureFirewall;

    public Output<SubResourceArgs> azureFirewall() {
        return this.azureFirewall == null ? Codegen.empty() : this.azureFirewall;
    }

    /**
     * The expressRouteGateway associated with this VirtualHub.
     * 
     */
    @Import(name="expressRouteGateway")
      private final @Nullable Output<SubResourceArgs> expressRouteGateway;

    public Output<SubResourceArgs> expressRouteGateway() {
        return this.expressRouteGateway == null ? Codegen.empty() : this.expressRouteGateway;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The P2SVpnGateway associated with this VirtualHub.
     * 
     */
    @Import(name="p2SVpnGateway")
      private final @Nullable Output<SubResourceArgs> p2SVpnGateway;

    public Output<SubResourceArgs> p2SVpnGateway() {
        return this.p2SVpnGateway == null ? Codegen.empty() : this.p2SVpnGateway;
    }

    /**
     * The resource group name of the VirtualHub.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The routeTable associated with this virtual hub.
     * 
     */
    @Import(name="routeTable")
      private final @Nullable Output<VirtualHubRouteTableArgs> routeTable;

    public Output<VirtualHubRouteTableArgs> routeTable() {
        return this.routeTable == null ? Codegen.empty() : this.routeTable;
    }

    /**
     * The securityPartnerProvider associated with this VirtualHub.
     * 
     */
    @Import(name="securityPartnerProvider")
      private final @Nullable Output<SubResourceArgs> securityPartnerProvider;

    public Output<SubResourceArgs> securityPartnerProvider() {
        return this.securityPartnerProvider == null ? Codegen.empty() : this.securityPartnerProvider;
    }

    /**
     * The Security Provider name.
     * 
     */
    @Import(name="securityProviderName")
      private final @Nullable Output<String> securityProviderName;

    public Output<String> securityProviderName() {
        return this.securityProviderName == null ? Codegen.empty() : this.securityProviderName;
    }

    /**
     * The sku of this VirtualHub.
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<String> sku;

    public Output<String> sku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The name of the VirtualHub.
     * 
     */
    @Import(name="virtualHubName")
      private final @Nullable Output<String> virtualHubName;

    public Output<String> virtualHubName() {
        return this.virtualHubName == null ? Codegen.empty() : this.virtualHubName;
    }

    /**
     * List of all virtual hub route table v2s associated with this VirtualHub.
     * 
     */
    @Import(name="virtualHubRouteTableV2s")
      private final @Nullable Output<List<VirtualHubRouteTableV2Args>> virtualHubRouteTableV2s;

    public Output<List<VirtualHubRouteTableV2Args>> virtualHubRouteTableV2s() {
        return this.virtualHubRouteTableV2s == null ? Codegen.empty() : this.virtualHubRouteTableV2s;
    }

    /**
     * VirtualRouter ASN.
     * 
     */
    @Import(name="virtualRouterAsn")
      private final @Nullable Output<Double> virtualRouterAsn;

    public Output<Double> virtualRouterAsn() {
        return this.virtualRouterAsn == null ? Codegen.empty() : this.virtualRouterAsn;
    }

    /**
     * VirtualRouter IPs.
     * 
     */
    @Import(name="virtualRouterIps")
      private final @Nullable Output<List<String>> virtualRouterIps;

    public Output<List<String>> virtualRouterIps() {
        return this.virtualRouterIps == null ? Codegen.empty() : this.virtualRouterIps;
    }

    /**
     * The VirtualWAN to which the VirtualHub belongs.
     * 
     */
    @Import(name="virtualWan")
      private final @Nullable Output<SubResourceArgs> virtualWan;

    public Output<SubResourceArgs> virtualWan() {
        return this.virtualWan == null ? Codegen.empty() : this.virtualWan;
    }

    /**
     * The VpnGateway associated with this VirtualHub.
     * 
     */
    @Import(name="vpnGateway")
      private final @Nullable Output<SubResourceArgs> vpnGateway;

    public Output<SubResourceArgs> vpnGateway() {
        return this.vpnGateway == null ? Codegen.empty() : this.vpnGateway;
    }

    public VirtualHubArgs(
        @Nullable Output<String> addressPrefix,
        @Nullable Output<Boolean> allowBranchToBranchTraffic,
        @Nullable Output<SubResourceArgs> azureFirewall,
        @Nullable Output<SubResourceArgs> expressRouteGateway,
        @Nullable Output<String> id,
        @Nullable Output<String> location,
        @Nullable Output<SubResourceArgs> p2SVpnGateway,
        Output<String> resourceGroupName,
        @Nullable Output<VirtualHubRouteTableArgs> routeTable,
        @Nullable Output<SubResourceArgs> securityPartnerProvider,
        @Nullable Output<String> securityProviderName,
        @Nullable Output<String> sku,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> virtualHubName,
        @Nullable Output<List<VirtualHubRouteTableV2Args>> virtualHubRouteTableV2s,
        @Nullable Output<Double> virtualRouterAsn,
        @Nullable Output<List<String>> virtualRouterIps,
        @Nullable Output<SubResourceArgs> virtualWan,
        @Nullable Output<SubResourceArgs> vpnGateway) {
        this.addressPrefix = addressPrefix;
        this.allowBranchToBranchTraffic = allowBranchToBranchTraffic;
        this.azureFirewall = azureFirewall;
        this.expressRouteGateway = expressRouteGateway;
        this.id = id;
        this.location = location;
        this.p2SVpnGateway = p2SVpnGateway;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.routeTable = routeTable;
        this.securityPartnerProvider = securityPartnerProvider;
        this.securityProviderName = securityProviderName;
        this.sku = sku;
        this.tags = tags;
        this.virtualHubName = virtualHubName;
        this.virtualHubRouteTableV2s = virtualHubRouteTableV2s;
        this.virtualRouterAsn = virtualRouterAsn;
        this.virtualRouterIps = virtualRouterIps;
        this.virtualWan = virtualWan;
        this.vpnGateway = vpnGateway;
    }

    private VirtualHubArgs() {
        this.addressPrefix = Codegen.empty();
        this.allowBranchToBranchTraffic = Codegen.empty();
        this.azureFirewall = Codegen.empty();
        this.expressRouteGateway = Codegen.empty();
        this.id = Codegen.empty();
        this.location = Codegen.empty();
        this.p2SVpnGateway = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.routeTable = Codegen.empty();
        this.securityPartnerProvider = Codegen.empty();
        this.securityProviderName = Codegen.empty();
        this.sku = Codegen.empty();
        this.tags = Codegen.empty();
        this.virtualHubName = Codegen.empty();
        this.virtualHubRouteTableV2s = Codegen.empty();
        this.virtualRouterAsn = Codegen.empty();
        this.virtualRouterIps = Codegen.empty();
        this.virtualWan = Codegen.empty();
        this.vpnGateway = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualHubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> addressPrefix;
        private @Nullable Output<Boolean> allowBranchToBranchTraffic;
        private @Nullable Output<SubResourceArgs> azureFirewall;
        private @Nullable Output<SubResourceArgs> expressRouteGateway;
        private @Nullable Output<String> id;
        private @Nullable Output<String> location;
        private @Nullable Output<SubResourceArgs> p2SVpnGateway;
        private Output<String> resourceGroupName;
        private @Nullable Output<VirtualHubRouteTableArgs> routeTable;
        private @Nullable Output<SubResourceArgs> securityPartnerProvider;
        private @Nullable Output<String> securityProviderName;
        private @Nullable Output<String> sku;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> virtualHubName;
        private @Nullable Output<List<VirtualHubRouteTableV2Args>> virtualHubRouteTableV2s;
        private @Nullable Output<Double> virtualRouterAsn;
        private @Nullable Output<List<String>> virtualRouterIps;
        private @Nullable Output<SubResourceArgs> virtualWan;
        private @Nullable Output<SubResourceArgs> vpnGateway;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualHubArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressPrefix = defaults.addressPrefix;
    	      this.allowBranchToBranchTraffic = defaults.allowBranchToBranchTraffic;
    	      this.azureFirewall = defaults.azureFirewall;
    	      this.expressRouteGateway = defaults.expressRouteGateway;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.p2SVpnGateway = defaults.p2SVpnGateway;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.routeTable = defaults.routeTable;
    	      this.securityPartnerProvider = defaults.securityPartnerProvider;
    	      this.securityProviderName = defaults.securityProviderName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.virtualHubName = defaults.virtualHubName;
    	      this.virtualHubRouteTableV2s = defaults.virtualHubRouteTableV2s;
    	      this.virtualRouterAsn = defaults.virtualRouterAsn;
    	      this.virtualRouterIps = defaults.virtualRouterIps;
    	      this.virtualWan = defaults.virtualWan;
    	      this.vpnGateway = defaults.vpnGateway;
        }

        public Builder addressPrefix(@Nullable Output<String> addressPrefix) {
            this.addressPrefix = addressPrefix;
            return this;
        }
        public Builder addressPrefix(@Nullable String addressPrefix) {
            this.addressPrefix = Codegen.ofNullable(addressPrefix);
            return this;
        }
        public Builder allowBranchToBranchTraffic(@Nullable Output<Boolean> allowBranchToBranchTraffic) {
            this.allowBranchToBranchTraffic = allowBranchToBranchTraffic;
            return this;
        }
        public Builder allowBranchToBranchTraffic(@Nullable Boolean allowBranchToBranchTraffic) {
            this.allowBranchToBranchTraffic = Codegen.ofNullable(allowBranchToBranchTraffic);
            return this;
        }
        public Builder azureFirewall(@Nullable Output<SubResourceArgs> azureFirewall) {
            this.azureFirewall = azureFirewall;
            return this;
        }
        public Builder azureFirewall(@Nullable SubResourceArgs azureFirewall) {
            this.azureFirewall = Codegen.ofNullable(azureFirewall);
            return this;
        }
        public Builder expressRouteGateway(@Nullable Output<SubResourceArgs> expressRouteGateway) {
            this.expressRouteGateway = expressRouteGateway;
            return this;
        }
        public Builder expressRouteGateway(@Nullable SubResourceArgs expressRouteGateway) {
            this.expressRouteGateway = Codegen.ofNullable(expressRouteGateway);
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder p2SVpnGateway(@Nullable Output<SubResourceArgs> p2SVpnGateway) {
            this.p2SVpnGateway = p2SVpnGateway;
            return this;
        }
        public Builder p2SVpnGateway(@Nullable SubResourceArgs p2SVpnGateway) {
            this.p2SVpnGateway = Codegen.ofNullable(p2SVpnGateway);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder routeTable(@Nullable Output<VirtualHubRouteTableArgs> routeTable) {
            this.routeTable = routeTable;
            return this;
        }
        public Builder routeTable(@Nullable VirtualHubRouteTableArgs routeTable) {
            this.routeTable = Codegen.ofNullable(routeTable);
            return this;
        }
        public Builder securityPartnerProvider(@Nullable Output<SubResourceArgs> securityPartnerProvider) {
            this.securityPartnerProvider = securityPartnerProvider;
            return this;
        }
        public Builder securityPartnerProvider(@Nullable SubResourceArgs securityPartnerProvider) {
            this.securityPartnerProvider = Codegen.ofNullable(securityPartnerProvider);
            return this;
        }
        public Builder securityProviderName(@Nullable Output<String> securityProviderName) {
            this.securityProviderName = securityProviderName;
            return this;
        }
        public Builder securityProviderName(@Nullable String securityProviderName) {
            this.securityProviderName = Codegen.ofNullable(securityProviderName);
            return this;
        }
        public Builder sku(@Nullable Output<String> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable String sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder virtualHubName(@Nullable Output<String> virtualHubName) {
            this.virtualHubName = virtualHubName;
            return this;
        }
        public Builder virtualHubName(@Nullable String virtualHubName) {
            this.virtualHubName = Codegen.ofNullable(virtualHubName);
            return this;
        }
        public Builder virtualHubRouteTableV2s(@Nullable Output<List<VirtualHubRouteTableV2Args>> virtualHubRouteTableV2s) {
            this.virtualHubRouteTableV2s = virtualHubRouteTableV2s;
            return this;
        }
        public Builder virtualHubRouteTableV2s(@Nullable List<VirtualHubRouteTableV2Args> virtualHubRouteTableV2s) {
            this.virtualHubRouteTableV2s = Codegen.ofNullable(virtualHubRouteTableV2s);
            return this;
        }
        public Builder virtualHubRouteTableV2s(VirtualHubRouteTableV2Args... virtualHubRouteTableV2s) {
            return virtualHubRouteTableV2s(List.of(virtualHubRouteTableV2s));
        }
        public Builder virtualRouterAsn(@Nullable Output<Double> virtualRouterAsn) {
            this.virtualRouterAsn = virtualRouterAsn;
            return this;
        }
        public Builder virtualRouterAsn(@Nullable Double virtualRouterAsn) {
            this.virtualRouterAsn = Codegen.ofNullable(virtualRouterAsn);
            return this;
        }
        public Builder virtualRouterIps(@Nullable Output<List<String>> virtualRouterIps) {
            this.virtualRouterIps = virtualRouterIps;
            return this;
        }
        public Builder virtualRouterIps(@Nullable List<String> virtualRouterIps) {
            this.virtualRouterIps = Codegen.ofNullable(virtualRouterIps);
            return this;
        }
        public Builder virtualRouterIps(String... virtualRouterIps) {
            return virtualRouterIps(List.of(virtualRouterIps));
        }
        public Builder virtualWan(@Nullable Output<SubResourceArgs> virtualWan) {
            this.virtualWan = virtualWan;
            return this;
        }
        public Builder virtualWan(@Nullable SubResourceArgs virtualWan) {
            this.virtualWan = Codegen.ofNullable(virtualWan);
            return this;
        }
        public Builder vpnGateway(@Nullable Output<SubResourceArgs> vpnGateway) {
            this.vpnGateway = vpnGateway;
            return this;
        }
        public Builder vpnGateway(@Nullable SubResourceArgs vpnGateway) {
            this.vpnGateway = Codegen.ofNullable(vpnGateway);
            return this;
        }        public VirtualHubArgs build() {
            return new VirtualHubArgs(addressPrefix, allowBranchToBranchTraffic, azureFirewall, expressRouteGateway, id, location, p2SVpnGateway, resourceGroupName, routeTable, securityPartnerProvider, securityProviderName, sku, tags, virtualHubName, virtualHubRouteTableV2s, virtualRouterAsn, virtualRouterIps, virtualWan, vpnGateway);
        }
    }
}
