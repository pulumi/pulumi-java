// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datashare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetInvitationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInvitationArgs Empty = new GetInvitationArgs();

    /**
     * The name of the share account.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The name of the share account.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The name of the invitation.
     * 
     */
    @Import(name="invitationName", required=true)
    private Output<String> invitationName;

    /**
     * @return The name of the invitation.
     * 
     */
    public Output<String> invitationName() {
        return this.invitationName;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the share.
     * 
     */
    @Import(name="shareName", required=true)
    private Output<String> shareName;

    /**
     * @return The name of the share.
     * 
     */
    public Output<String> shareName() {
        return this.shareName;
    }

    private GetInvitationArgs() {}

    private GetInvitationArgs(GetInvitationArgs $) {
        this.accountName = $.accountName;
        this.invitationName = $.invitationName;
        this.resourceGroupName = $.resourceGroupName;
        this.shareName = $.shareName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInvitationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInvitationArgs $;

        public Builder() {
            $ = new GetInvitationArgs();
        }

        public Builder(GetInvitationArgs defaults) {
            $ = new GetInvitationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The name of the share account.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The name of the share account.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param invitationName The name of the invitation.
         * 
         * @return builder
         * 
         */
        public Builder invitationName(Output<String> invitationName) {
            $.invitationName = invitationName;
            return this;
        }

        /**
         * @param invitationName The name of the invitation.
         * 
         * @return builder
         * 
         */
        public Builder invitationName(String invitationName) {
            return invitationName(Output.of(invitationName));
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param shareName The name of the share.
         * 
         * @return builder
         * 
         */
        public Builder shareName(Output<String> shareName) {
            $.shareName = shareName;
            return this;
        }

        /**
         * @param shareName The name of the share.
         * 
         * @return builder
         * 
         */
        public Builder shareName(String shareName) {
            return shareName(Output.of(shareName));
        }

        public GetInvitationArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.invitationName = Objects.requireNonNull($.invitationName, "expected parameter 'invitationName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.shareName = Objects.requireNonNull($.shareName, "expected parameter 'shareName' to be non-null");
            return $;
        }
    }

}
