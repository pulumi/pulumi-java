// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.CmkKekIdentityResponse;
import com.pulumi.azurenative.recoveryservices.inputs.CmkKeyVaultPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Customer Managed Key details of the resource.
 * 
 */
public final class VaultPropertiesResponseEncryption extends com.pulumi.resources.InvokeArgs {

    public static final VaultPropertiesResponseEncryption Empty = new VaultPropertiesResponseEncryption();

    /**
     * Enabling/Disabling the Double Encryption state
     * 
     */
    @Import(name="infrastructureEncryption")
    private @Nullable String infrastructureEncryption;

    /**
     * @return Enabling/Disabling the Double Encryption state
     * 
     */
    public Optional<String> infrastructureEncryption() {
        return Optional.ofNullable(this.infrastructureEncryption);
    }

    /**
     * The details of the identity used for CMK
     * 
     */
    @Import(name="kekIdentity")
    private @Nullable CmkKekIdentityResponse kekIdentity;

    /**
     * @return The details of the identity used for CMK
     * 
     */
    public Optional<CmkKekIdentityResponse> kekIdentity() {
        return Optional.ofNullable(this.kekIdentity);
    }

    /**
     * The properties of the Key Vault which hosts CMK
     * 
     */
    @Import(name="keyVaultProperties")
    private @Nullable CmkKeyVaultPropertiesResponse keyVaultProperties;

    /**
     * @return The properties of the Key Vault which hosts CMK
     * 
     */
    public Optional<CmkKeyVaultPropertiesResponse> keyVaultProperties() {
        return Optional.ofNullable(this.keyVaultProperties);
    }

    private VaultPropertiesResponseEncryption() {}

    private VaultPropertiesResponseEncryption(VaultPropertiesResponseEncryption $) {
        this.infrastructureEncryption = $.infrastructureEncryption;
        this.kekIdentity = $.kekIdentity;
        this.keyVaultProperties = $.keyVaultProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VaultPropertiesResponseEncryption defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VaultPropertiesResponseEncryption $;

        public Builder() {
            $ = new VaultPropertiesResponseEncryption();
        }

        public Builder(VaultPropertiesResponseEncryption defaults) {
            $ = new VaultPropertiesResponseEncryption(Objects.requireNonNull(defaults));
        }

        /**
         * @param infrastructureEncryption Enabling/Disabling the Double Encryption state
         * 
         * @return builder
         * 
         */
        public Builder infrastructureEncryption(@Nullable String infrastructureEncryption) {
            $.infrastructureEncryption = infrastructureEncryption;
            return this;
        }

        /**
         * @param kekIdentity The details of the identity used for CMK
         * 
         * @return builder
         * 
         */
        public Builder kekIdentity(@Nullable CmkKekIdentityResponse kekIdentity) {
            $.kekIdentity = kekIdentity;
            return this;
        }

        /**
         * @param keyVaultProperties The properties of the Key Vault which hosts CMK
         * 
         * @return builder
         * 
         */
        public Builder keyVaultProperties(@Nullable CmkKeyVaultPropertiesResponse keyVaultProperties) {
            $.keyVaultProperties = keyVaultProperties;
            return this;
        }

        public VaultPropertiesResponseEncryption build() {
            return $;
        }
    }

}
