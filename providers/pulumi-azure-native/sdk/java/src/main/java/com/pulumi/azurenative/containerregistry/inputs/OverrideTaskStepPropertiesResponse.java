// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.azurenative.containerregistry.inputs.ArgumentResponse;
import com.pulumi.azurenative.containerregistry.inputs.SetValueResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OverrideTaskStepPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final OverrideTaskStepPropertiesResponse Empty = new OverrideTaskStepPropertiesResponse();

    /**
     * Gets or sets the collection of override arguments to be used when
     * executing a build step.
     * 
     */
    @Import(name="arguments")
    private @Nullable List<ArgumentResponse> arguments;

    public Optional<List<ArgumentResponse>> arguments() {
        return Optional.ofNullable(this.arguments);
    }

    /**
     * The source context against which run has to be queued.
     * 
     */
    @Import(name="contextPath")
    private @Nullable String contextPath;

    public Optional<String> contextPath() {
        return Optional.ofNullable(this.contextPath);
    }

    /**
     * The file against which run has to be queued.
     * 
     */
    @Import(name="file")
    private @Nullable String file;

    public Optional<String> file() {
        return Optional.ofNullable(this.file);
    }

    /**
     * The name of the target build stage for the docker build.
     * 
     */
    @Import(name="target")
    private @Nullable String target;

    public Optional<String> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * Base64 encoded update trigger token that will be attached with the base image trigger webhook.
     * 
     */
    @Import(name="updateTriggerToken")
    private @Nullable String updateTriggerToken;

    public Optional<String> updateTriggerToken() {
        return Optional.ofNullable(this.updateTriggerToken);
    }

    /**
     * The collection of overridable values that can be passed when running a Task.
     * 
     */
    @Import(name="values")
    private @Nullable List<SetValueResponse> values;

    public Optional<List<SetValueResponse>> values() {
        return Optional.ofNullable(this.values);
    }

    private OverrideTaskStepPropertiesResponse() {}

    private OverrideTaskStepPropertiesResponse(OverrideTaskStepPropertiesResponse $) {
        this.arguments = $.arguments;
        this.contextPath = $.contextPath;
        this.file = $.file;
        this.target = $.target;
        this.updateTriggerToken = $.updateTriggerToken;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OverrideTaskStepPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OverrideTaskStepPropertiesResponse $;

        public Builder() {
            $ = new OverrideTaskStepPropertiesResponse();
        }

        public Builder(OverrideTaskStepPropertiesResponse defaults) {
            $ = new OverrideTaskStepPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder arguments(@Nullable List<ArgumentResponse> arguments) {
            $.arguments = arguments;
            return this;
        }

        public Builder arguments(ArgumentResponse... arguments) {
            return arguments(List.of(arguments));
        }

        public Builder contextPath(@Nullable String contextPath) {
            $.contextPath = contextPath;
            return this;
        }

        public Builder file(@Nullable String file) {
            $.file = file;
            return this;
        }

        public Builder target(@Nullable String target) {
            $.target = target;
            return this;
        }

        public Builder updateTriggerToken(@Nullable String updateTriggerToken) {
            $.updateTriggerToken = updateTriggerToken;
            return this;
        }

        public Builder values(@Nullable List<SetValueResponse> values) {
            $.values = values;
            return this;
        }

        public Builder values(SetValueResponse... values) {
            return values(List.of(values));
        }

        public OverrideTaskStepPropertiesResponse build() {
            return $;
        }
    }

}
