// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.inputs;

import com.pulumi.azurenative.containerinstance.enums.GpuSku;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * The GPU resource.
 * 
 */
public final class GpuResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GpuResourceArgs Empty = new GpuResourceArgs();

    /**
     * The count of the GPU resource.
     * 
     */
    @Import(name="count", required=true)
    private Output<Integer> count;

    /**
     * @return The count of the GPU resource.
     * 
     */
    public Output<Integer> count() {
        return this.count;
    }

    /**
     * The SKU of the GPU resource.
     * 
     */
    @Import(name="sku", required=true)
    private Output<Either<String,GpuSku>> sku;

    /**
     * @return The SKU of the GPU resource.
     * 
     */
    public Output<Either<String,GpuSku>> sku() {
        return this.sku;
    }

    private GpuResourceArgs() {}

    private GpuResourceArgs(GpuResourceArgs $) {
        this.count = $.count;
        this.sku = $.sku;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GpuResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GpuResourceArgs $;

        public Builder() {
            $ = new GpuResourceArgs();
        }

        public Builder(GpuResourceArgs defaults) {
            $ = new GpuResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param count The count of the GPU resource.
         * 
         * @return builder
         * 
         */
        public Builder count(Output<Integer> count) {
            $.count = count;
            return this;
        }

        /**
         * @param count The count of the GPU resource.
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        /**
         * @param sku The SKU of the GPU resource.
         * 
         * @return builder
         * 
         */
        public Builder sku(Output<Either<String,GpuSku>> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The SKU of the GPU resource.
         * 
         * @return builder
         * 
         */
        public Builder sku(Either<String,GpuSku> sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param sku The SKU of the GPU resource.
         * 
         * @return builder
         * 
         */
        public Builder sku(String sku) {
            return sku(Either.ofLeft(sku));
        }

        /**
         * @param sku The SKU of the GPU resource.
         * 
         * @return builder
         * 
         */
        public Builder sku(GpuSku sku) {
            return sku(Either.ofRight(sku));
        }

        public GpuResourceArgs build() {
            $.count = Objects.requireNonNull($.count, "expected parameter 'count' to be non-null");
            $.sku = Objects.requireNonNull($.sku, "expected parameter 'sku' to be non-null");
            return $;
        }
    }

}
