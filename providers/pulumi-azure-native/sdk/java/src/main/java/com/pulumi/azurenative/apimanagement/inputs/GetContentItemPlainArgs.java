// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetContentItemPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetContentItemPlainArgs Empty = new GetContentItemPlainArgs();

    /**
     * Content item identifier.
     * 
     */
    @Import(name="contentItemId", required=true)
    private String contentItemId;

    /**
     * @return Content item identifier.
     * 
     */
    public String contentItemId() {
        return this.contentItemId;
    }

    /**
     * Content type identifier.
     * 
     */
    @Import(name="contentTypeId", required=true)
    private String contentTypeId;

    /**
     * @return Content type identifier.
     * 
     */
    public String contentTypeId() {
        return this.contentTypeId;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    /**
     * @return The name of the API Management service.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    private GetContentItemPlainArgs() {}

    private GetContentItemPlainArgs(GetContentItemPlainArgs $) {
        this.contentItemId = $.contentItemId;
        this.contentTypeId = $.contentTypeId;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetContentItemPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetContentItemPlainArgs $;

        public Builder() {
            $ = new GetContentItemPlainArgs();
        }

        public Builder(GetContentItemPlainArgs defaults) {
            $ = new GetContentItemPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contentItemId Content item identifier.
         * 
         * @return builder
         * 
         */
        public Builder contentItemId(String contentItemId) {
            $.contentItemId = contentItemId;
            return this;
        }

        /**
         * @param contentTypeId Content type identifier.
         * 
         * @return builder
         * 
         */
        public Builder contentTypeId(String contentTypeId) {
            $.contentTypeId = contentTypeId;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param serviceName The name of the API Management service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public GetContentItemPlainArgs build() {
            $.contentItemId = Objects.requireNonNull($.contentItemId, "expected parameter 'contentItemId' to be non-null");
            $.contentTypeId = Objects.requireNonNull($.contentTypeId, "expected parameter 'contentTypeId' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
