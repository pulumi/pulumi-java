// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The Edifact envelope override settings.
 * 
 */
public final class EdifactEnvelopeOverrideResponse extends com.pulumi.resources.InvokeArgs {

    public static final EdifactEnvelopeOverrideResponse Empty = new EdifactEnvelopeOverrideResponse();

    /**
     * The application password.
     * 
     */
    @Import(name="applicationPassword")
    private @Nullable String applicationPassword;

    public Optional<String> applicationPassword() {
        return Optional.ofNullable(this.applicationPassword);
    }

    /**
     * The association assigned code.
     * 
     */
    @Import(name="associationAssignedCode")
    private @Nullable String associationAssignedCode;

    public Optional<String> associationAssignedCode() {
        return Optional.ofNullable(this.associationAssignedCode);
    }

    /**
     * The controlling agency code.
     * 
     */
    @Import(name="controllingAgencyCode")
    private @Nullable String controllingAgencyCode;

    public Optional<String> controllingAgencyCode() {
        return Optional.ofNullable(this.controllingAgencyCode);
    }

    /**
     * The functional group id.
     * 
     */
    @Import(name="functionalGroupId")
    private @Nullable String functionalGroupId;

    public Optional<String> functionalGroupId() {
        return Optional.ofNullable(this.functionalGroupId);
    }

    /**
     * The group header message release.
     * 
     */
    @Import(name="groupHeaderMessageRelease")
    private @Nullable String groupHeaderMessageRelease;

    public Optional<String> groupHeaderMessageRelease() {
        return Optional.ofNullable(this.groupHeaderMessageRelease);
    }

    /**
     * The group header message version.
     * 
     */
    @Import(name="groupHeaderMessageVersion")
    private @Nullable String groupHeaderMessageVersion;

    public Optional<String> groupHeaderMessageVersion() {
        return Optional.ofNullable(this.groupHeaderMessageVersion);
    }

    /**
     * The message association assigned code.
     * 
     */
    @Import(name="messageAssociationAssignedCode")
    private @Nullable String messageAssociationAssignedCode;

    public Optional<String> messageAssociationAssignedCode() {
        return Optional.ofNullable(this.messageAssociationAssignedCode);
    }

    /**
     * The message id on which this envelope settings has to be applied.
     * 
     */
    @Import(name="messageId")
    private @Nullable String messageId;

    public Optional<String> messageId() {
        return Optional.ofNullable(this.messageId);
    }

    /**
     * The message release version on which this envelope settings has to be applied.
     * 
     */
    @Import(name="messageRelease")
    private @Nullable String messageRelease;

    public Optional<String> messageRelease() {
        return Optional.ofNullable(this.messageRelease);
    }

    /**
     * The message version on which this envelope settings has to be applied.
     * 
     */
    @Import(name="messageVersion")
    private @Nullable String messageVersion;

    public Optional<String> messageVersion() {
        return Optional.ofNullable(this.messageVersion);
    }

    /**
     * The receiver application id.
     * 
     */
    @Import(name="receiverApplicationId")
    private @Nullable String receiverApplicationId;

    public Optional<String> receiverApplicationId() {
        return Optional.ofNullable(this.receiverApplicationId);
    }

    /**
     * The receiver application qualifier.
     * 
     */
    @Import(name="receiverApplicationQualifier")
    private @Nullable String receiverApplicationQualifier;

    public Optional<String> receiverApplicationQualifier() {
        return Optional.ofNullable(this.receiverApplicationQualifier);
    }

    /**
     * The sender application id.
     * 
     */
    @Import(name="senderApplicationId")
    private @Nullable String senderApplicationId;

    public Optional<String> senderApplicationId() {
        return Optional.ofNullable(this.senderApplicationId);
    }

    /**
     * The sender application qualifier.
     * 
     */
    @Import(name="senderApplicationQualifier")
    private @Nullable String senderApplicationQualifier;

    public Optional<String> senderApplicationQualifier() {
        return Optional.ofNullable(this.senderApplicationQualifier);
    }

    /**
     * The target namespace on which this envelope settings has to be applied.
     * 
     */
    @Import(name="targetNamespace")
    private @Nullable String targetNamespace;

    public Optional<String> targetNamespace() {
        return Optional.ofNullable(this.targetNamespace);
    }

    private EdifactEnvelopeOverrideResponse() {}

    private EdifactEnvelopeOverrideResponse(EdifactEnvelopeOverrideResponse $) {
        this.applicationPassword = $.applicationPassword;
        this.associationAssignedCode = $.associationAssignedCode;
        this.controllingAgencyCode = $.controllingAgencyCode;
        this.functionalGroupId = $.functionalGroupId;
        this.groupHeaderMessageRelease = $.groupHeaderMessageRelease;
        this.groupHeaderMessageVersion = $.groupHeaderMessageVersion;
        this.messageAssociationAssignedCode = $.messageAssociationAssignedCode;
        this.messageId = $.messageId;
        this.messageRelease = $.messageRelease;
        this.messageVersion = $.messageVersion;
        this.receiverApplicationId = $.receiverApplicationId;
        this.receiverApplicationQualifier = $.receiverApplicationQualifier;
        this.senderApplicationId = $.senderApplicationId;
        this.senderApplicationQualifier = $.senderApplicationQualifier;
        this.targetNamespace = $.targetNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EdifactEnvelopeOverrideResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdifactEnvelopeOverrideResponse $;

        public Builder() {
            $ = new EdifactEnvelopeOverrideResponse();
        }

        public Builder(EdifactEnvelopeOverrideResponse defaults) {
            $ = new EdifactEnvelopeOverrideResponse(Objects.requireNonNull(defaults));
        }

        public Builder applicationPassword(@Nullable String applicationPassword) {
            $.applicationPassword = applicationPassword;
            return this;
        }

        public Builder associationAssignedCode(@Nullable String associationAssignedCode) {
            $.associationAssignedCode = associationAssignedCode;
            return this;
        }

        public Builder controllingAgencyCode(@Nullable String controllingAgencyCode) {
            $.controllingAgencyCode = controllingAgencyCode;
            return this;
        }

        public Builder functionalGroupId(@Nullable String functionalGroupId) {
            $.functionalGroupId = functionalGroupId;
            return this;
        }

        public Builder groupHeaderMessageRelease(@Nullable String groupHeaderMessageRelease) {
            $.groupHeaderMessageRelease = groupHeaderMessageRelease;
            return this;
        }

        public Builder groupHeaderMessageVersion(@Nullable String groupHeaderMessageVersion) {
            $.groupHeaderMessageVersion = groupHeaderMessageVersion;
            return this;
        }

        public Builder messageAssociationAssignedCode(@Nullable String messageAssociationAssignedCode) {
            $.messageAssociationAssignedCode = messageAssociationAssignedCode;
            return this;
        }

        public Builder messageId(@Nullable String messageId) {
            $.messageId = messageId;
            return this;
        }

        public Builder messageRelease(@Nullable String messageRelease) {
            $.messageRelease = messageRelease;
            return this;
        }

        public Builder messageVersion(@Nullable String messageVersion) {
            $.messageVersion = messageVersion;
            return this;
        }

        public Builder receiverApplicationId(@Nullable String receiverApplicationId) {
            $.receiverApplicationId = receiverApplicationId;
            return this;
        }

        public Builder receiverApplicationQualifier(@Nullable String receiverApplicationQualifier) {
            $.receiverApplicationQualifier = receiverApplicationQualifier;
            return this;
        }

        public Builder senderApplicationId(@Nullable String senderApplicationId) {
            $.senderApplicationId = senderApplicationId;
            return this;
        }

        public Builder senderApplicationQualifier(@Nullable String senderApplicationQualifier) {
            $.senderApplicationQualifier = senderApplicationQualifier;
            return this;
        }

        public Builder targetNamespace(@Nullable String targetNamespace) {
            $.targetNamespace = targetNamespace;
            return this;
        }

        public EdifactEnvelopeOverrideResponse build() {
            return $;
        }
    }

}
