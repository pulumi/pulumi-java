// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.AllowedAudiencesValidationArgs;
import com.pulumi.azurenative.web.inputs.ClientRegistrationArgs;
import com.pulumi.azurenative.web.inputs.LoginScopesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration settings of the legacy Microsoft Account provider.
 * 
 */
public final class LegacyMicrosoftAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final LegacyMicrosoftAccountArgs Empty = new LegacyMicrosoftAccountArgs();

    /**
     * &lt;code&gt;false&lt;/code&gt; if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, &lt;code&gt;true&lt;/code&gt;.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return &lt;code&gt;false&lt;/code&gt; if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, &lt;code&gt;true&lt;/code&gt;.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The configuration settings of the login flow.
     * 
     */
    @Import(name="login")
    private @Nullable Output<LoginScopesArgs> login;

    /**
     * @return The configuration settings of the login flow.
     * 
     */
    public Optional<Output<LoginScopesArgs>> login() {
        return Optional.ofNullable(this.login);
    }

    /**
     * The configuration settings of the app registration for the legacy Microsoft Account provider.
     * 
     */
    @Import(name="registration")
    private @Nullable Output<ClientRegistrationArgs> registration;

    /**
     * @return The configuration settings of the app registration for the legacy Microsoft Account provider.
     * 
     */
    public Optional<Output<ClientRegistrationArgs>> registration() {
        return Optional.ofNullable(this.registration);
    }

    /**
     * The configuration settings of the legacy Microsoft Account provider token validation flow.
     * 
     */
    @Import(name="validation")
    private @Nullable Output<AllowedAudiencesValidationArgs> validation;

    /**
     * @return The configuration settings of the legacy Microsoft Account provider token validation flow.
     * 
     */
    public Optional<Output<AllowedAudiencesValidationArgs>> validation() {
        return Optional.ofNullable(this.validation);
    }

    private LegacyMicrosoftAccountArgs() {}

    private LegacyMicrosoftAccountArgs(LegacyMicrosoftAccountArgs $) {
        this.enabled = $.enabled;
        this.login = $.login;
        this.registration = $.registration;
        this.validation = $.validation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LegacyMicrosoftAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LegacyMicrosoftAccountArgs $;

        public Builder() {
            $ = new LegacyMicrosoftAccountArgs();
        }

        public Builder(LegacyMicrosoftAccountArgs defaults) {
            $ = new LegacyMicrosoftAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled &lt;code&gt;false&lt;/code&gt; if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, &lt;code&gt;true&lt;/code&gt;.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled &lt;code&gt;false&lt;/code&gt; if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, &lt;code&gt;true&lt;/code&gt;.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param login The configuration settings of the login flow.
         * 
         * @return builder
         * 
         */
        public Builder login(@Nullable Output<LoginScopesArgs> login) {
            $.login = login;
            return this;
        }

        /**
         * @param login The configuration settings of the login flow.
         * 
         * @return builder
         * 
         */
        public Builder login(LoginScopesArgs login) {
            return login(Output.of(login));
        }

        /**
         * @param registration The configuration settings of the app registration for the legacy Microsoft Account provider.
         * 
         * @return builder
         * 
         */
        public Builder registration(@Nullable Output<ClientRegistrationArgs> registration) {
            $.registration = registration;
            return this;
        }

        /**
         * @param registration The configuration settings of the app registration for the legacy Microsoft Account provider.
         * 
         * @return builder
         * 
         */
        public Builder registration(ClientRegistrationArgs registration) {
            return registration(Output.of(registration));
        }

        /**
         * @param validation The configuration settings of the legacy Microsoft Account provider token validation flow.
         * 
         * @return builder
         * 
         */
        public Builder validation(@Nullable Output<AllowedAudiencesValidationArgs> validation) {
            $.validation = validation;
            return this;
        }

        /**
         * @param validation The configuration settings of the legacy Microsoft Account provider token validation flow.
         * 
         * @return builder
         * 
         */
        public Builder validation(AllowedAudiencesValidationArgs validation) {
            return validation(Output.of(validation));
        }

        public LegacyMicrosoftAccountArgs build() {
            return $;
        }
    }

}
