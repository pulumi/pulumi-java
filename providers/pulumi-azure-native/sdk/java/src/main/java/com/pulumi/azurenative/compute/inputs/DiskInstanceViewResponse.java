// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.DiskEncryptionSettingsResponse;
import com.pulumi.azurenative.compute.inputs.InstanceViewStatusResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The instance view of the disk.
 * 
 */
public final class DiskInstanceViewResponse extends com.pulumi.resources.InvokeArgs {

    public static final DiskInstanceViewResponse Empty = new DiskInstanceViewResponse();

    /**
     * Specifies the encryption settings for the OS Disk. &lt;br&gt;&lt;br&gt; Minimum api-version: 2015-06-15
     * 
     */
    @Import(name="encryptionSettings")
    private @Nullable List<DiskEncryptionSettingsResponse> encryptionSettings;

    public Optional<List<DiskEncryptionSettingsResponse>> encryptionSettings() {
        return Optional.ofNullable(this.encryptionSettings);
    }

    /**
     * The disk name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The resource status information.
     * 
     */
    @Import(name="statuses")
    private @Nullable List<InstanceViewStatusResponse> statuses;

    public Optional<List<InstanceViewStatusResponse>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    private DiskInstanceViewResponse() {}

    private DiskInstanceViewResponse(DiskInstanceViewResponse $) {
        this.encryptionSettings = $.encryptionSettings;
        this.name = $.name;
        this.statuses = $.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskInstanceViewResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskInstanceViewResponse $;

        public Builder() {
            $ = new DiskInstanceViewResponse();
        }

        public Builder(DiskInstanceViewResponse defaults) {
            $ = new DiskInstanceViewResponse(Objects.requireNonNull(defaults));
        }

        public Builder encryptionSettings(@Nullable List<DiskEncryptionSettingsResponse> encryptionSettings) {
            $.encryptionSettings = encryptionSettings;
            return this;
        }

        public Builder encryptionSettings(DiskEncryptionSettingsResponse... encryptionSettings) {
            return encryptionSettings(List.of(encryptionSettings));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder statuses(@Nullable List<InstanceViewStatusResponse> statuses) {
            $.statuses = statuses;
            return this;
        }

        public Builder statuses(InstanceViewStatusResponse... statuses) {
            return statuses(List.of(statuses));
        }

        public DiskInstanceViewResponse build() {
            return $;
        }
    }

}
