// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.timeseriesinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
 * 
 */
public final class LocalTimestampResponseTimeZoneOffset extends com.pulumi.resources.InvokeArgs {

    public static final LocalTimestampResponseTimeZoneOffset Empty = new LocalTimestampResponseTimeZoneOffset();

    /**
     * The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
     * 
     */
    @Import(name="propertyName")
    private @Nullable String propertyName;

    /**
     * @return The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
     * 
     */
    public Optional<String> propertyName() {
        return Optional.ofNullable(this.propertyName);
    }

    private LocalTimestampResponseTimeZoneOffset() {}

    private LocalTimestampResponseTimeZoneOffset(LocalTimestampResponseTimeZoneOffset $) {
        this.propertyName = $.propertyName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocalTimestampResponseTimeZoneOffset defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocalTimestampResponseTimeZoneOffset $;

        public Builder() {
            $ = new LocalTimestampResponseTimeZoneOffset();
        }

        public Builder(LocalTimestampResponseTimeZoneOffset defaults) {
            $ = new LocalTimestampResponseTimeZoneOffset(Objects.requireNonNull(defaults));
        }

        /**
         * @param propertyName The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
         * 
         * @return builder
         * 
         */
        public Builder propertyName(@Nullable String propertyName) {
            $.propertyName = propertyName;
            return this;
        }

        public LocalTimestampResponseTimeZoneOffset build() {
            return $;
        }
    }

}
