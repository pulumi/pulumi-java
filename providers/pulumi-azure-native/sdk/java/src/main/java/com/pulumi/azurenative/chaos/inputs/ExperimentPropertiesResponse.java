// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.chaos.inputs;

import com.pulumi.azurenative.chaos.inputs.SelectorResponse;
import com.pulumi.azurenative.chaos.inputs.StepResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Model that represents the Experiment properties model.
 * 
 */
public final class ExperimentPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ExperimentPropertiesResponse Empty = new ExperimentPropertiesResponse();

    /**
     * List of selectors.
     * 
     */
    @Import(name="selectors", required=true)
    private List<SelectorResponse> selectors;

    public List<SelectorResponse> selectors() {
        return this.selectors;
    }

    /**
     * A boolean value that indicates if experiment should be started on creation or not.
     * 
     */
    @Import(name="startOnCreation")
    private @Nullable Boolean startOnCreation;

    public Optional<Boolean> startOnCreation() {
        return Optional.ofNullable(this.startOnCreation);
    }

    /**
     * List of steps.
     * 
     */
    @Import(name="steps", required=true)
    private List<StepResponse> steps;

    public List<StepResponse> steps() {
        return this.steps;
    }

    private ExperimentPropertiesResponse() {}

    private ExperimentPropertiesResponse(ExperimentPropertiesResponse $) {
        this.selectors = $.selectors;
        this.startOnCreation = $.startOnCreation;
        this.steps = $.steps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExperimentPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExperimentPropertiesResponse $;

        public Builder() {
            $ = new ExperimentPropertiesResponse();
        }

        public Builder(ExperimentPropertiesResponse defaults) {
            $ = new ExperimentPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder selectors(List<SelectorResponse> selectors) {
            $.selectors = selectors;
            return this;
        }

        public Builder selectors(SelectorResponse... selectors) {
            return selectors(List.of(selectors));
        }

        public Builder startOnCreation(@Nullable Boolean startOnCreation) {
            $.startOnCreation = startOnCreation;
            return this;
        }

        public Builder steps(List<StepResponse> steps) {
            $.steps = steps;
            return this;
        }

        public Builder steps(StepResponse... steps) {
            return steps(List.of(steps));
        }

        public ExperimentPropertiesResponse build() {
            $.selectors = Objects.requireNonNull($.selectors, "expected parameter 'selectors' to be non-null");
            $.steps = Objects.requireNonNull($.steps, "expected parameter 'steps' to be non-null");
            return $;
        }
    }

}
