// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.InstanceViewStatusResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The instance view of a virtual machine extension.
 * 
 */
public final class VirtualMachineExtensionInstanceViewResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualMachineExtensionInstanceViewResponse Empty = new VirtualMachineExtensionInstanceViewResponse();

    /**
     * The virtual machine extension name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The resource status information.
     * 
     */
    @Import(name="statuses")
    private @Nullable List<InstanceViewStatusResponse> statuses;

    public Optional<List<InstanceViewStatusResponse>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    /**
     * The resource status information.
     * 
     */
    @Import(name="substatuses")
    private @Nullable List<InstanceViewStatusResponse> substatuses;

    public Optional<List<InstanceViewStatusResponse>> substatuses() {
        return Optional.ofNullable(this.substatuses);
    }

    /**
     * Specifies the type of the extension; an example is &#34;CustomScriptExtension&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Specifies the version of the script handler.
     * 
     */
    @Import(name="typeHandlerVersion")
    private @Nullable String typeHandlerVersion;

    public Optional<String> typeHandlerVersion() {
        return Optional.ofNullable(this.typeHandlerVersion);
    }

    private VirtualMachineExtensionInstanceViewResponse() {}

    private VirtualMachineExtensionInstanceViewResponse(VirtualMachineExtensionInstanceViewResponse $) {
        this.name = $.name;
        this.statuses = $.statuses;
        this.substatuses = $.substatuses;
        this.type = $.type;
        this.typeHandlerVersion = $.typeHandlerVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineExtensionInstanceViewResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineExtensionInstanceViewResponse $;

        public Builder() {
            $ = new VirtualMachineExtensionInstanceViewResponse();
        }

        public Builder(VirtualMachineExtensionInstanceViewResponse defaults) {
            $ = new VirtualMachineExtensionInstanceViewResponse(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder statuses(@Nullable List<InstanceViewStatusResponse> statuses) {
            $.statuses = statuses;
            return this;
        }

        public Builder statuses(InstanceViewStatusResponse... statuses) {
            return statuses(List.of(statuses));
        }

        public Builder substatuses(@Nullable List<InstanceViewStatusResponse> substatuses) {
            $.substatuses = substatuses;
            return this;
        }

        public Builder substatuses(InstanceViewStatusResponse... substatuses) {
            return substatuses(List.of(substatuses));
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public Builder typeHandlerVersion(@Nullable String typeHandlerVersion) {
            $.typeHandlerVersion = typeHandlerVersion;
            return this;
        }

        public VirtualMachineExtensionInstanceViewResponse build() {
            return $;
        }
    }

}
