// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databricks;

import com.pulumi.azurenative.databricks.inputs.SkuArgs;
import com.pulumi.azurenative.databricks.inputs.WorkspaceCustomParametersArgs;
import com.pulumi.azurenative.databricks.inputs.WorkspaceProviderAuthorizationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceArgs Empty = new WorkspaceArgs();

    /**
     * The workspace provider authorizations.
     * 
     */
    @Import(name="authorizations")
    private @Nullable Output<List<WorkspaceProviderAuthorizationArgs>> authorizations;

    public Optional<Output<List<WorkspaceProviderAuthorizationArgs>>> authorizations() {
        return Optional.ofNullable(this.authorizations);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The managed resource group Id.
     * 
     */
    @Import(name="managedResourceGroupId", required=true)
    private Output<String> managedResourceGroupId;

    public Output<String> managedResourceGroupId() {
        return this.managedResourceGroupId;
    }

    /**
     * The workspace&#39;s custom parameters.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<WorkspaceCustomParametersArgs> parameters;

    public Optional<Output<WorkspaceCustomParametersArgs>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The SKU of the resource.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<SkuArgs> sku;

    public Optional<Output<SkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The blob URI where the UI definition file is located.
     * 
     */
    @Import(name="uiDefinitionUri")
    private @Nullable Output<String> uiDefinitionUri;

    public Optional<Output<String>> uiDefinitionUri() {
        return Optional.ofNullable(this.uiDefinitionUri);
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName")
    private @Nullable Output<String> workspaceName;

    public Optional<Output<String>> workspaceName() {
        return Optional.ofNullable(this.workspaceName);
    }

    private WorkspaceArgs() {}

    private WorkspaceArgs(WorkspaceArgs $) {
        this.authorizations = $.authorizations;
        this.location = $.location;
        this.managedResourceGroupId = $.managedResourceGroupId;
        this.parameters = $.parameters;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.uiDefinitionUri = $.uiDefinitionUri;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceArgs $;

        public Builder() {
            $ = new WorkspaceArgs();
        }

        public Builder(WorkspaceArgs defaults) {
            $ = new WorkspaceArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorizations(@Nullable Output<List<WorkspaceProviderAuthorizationArgs>> authorizations) {
            $.authorizations = authorizations;
            return this;
        }

        public Builder authorizations(List<WorkspaceProviderAuthorizationArgs> authorizations) {
            return authorizations(Output.of(authorizations));
        }

        public Builder authorizations(WorkspaceProviderAuthorizationArgs... authorizations) {
            return authorizations(List.of(authorizations));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder managedResourceGroupId(Output<String> managedResourceGroupId) {
            $.managedResourceGroupId = managedResourceGroupId;
            return this;
        }

        public Builder managedResourceGroupId(String managedResourceGroupId) {
            return managedResourceGroupId(Output.of(managedResourceGroupId));
        }

        public Builder parameters(@Nullable Output<WorkspaceCustomParametersArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(WorkspaceCustomParametersArgs parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder sku(@Nullable Output<SkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(SkuArgs sku) {
            return sku(Output.of(sku));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder uiDefinitionUri(@Nullable Output<String> uiDefinitionUri) {
            $.uiDefinitionUri = uiDefinitionUri;
            return this;
        }

        public Builder uiDefinitionUri(String uiDefinitionUri) {
            return uiDefinitionUri(Output.of(uiDefinitionUri));
        }

        public Builder workspaceName(@Nullable Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public WorkspaceArgs build() {
            $.managedResourceGroupId = Objects.requireNonNull($.managedResourceGroupId, "expected parameter 'managedResourceGroupId' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
