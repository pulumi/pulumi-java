// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.documentdb.SqlResourceSqlRoleAssignmentArgs;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An Azure Cosmos DB Role Assignment
 * API Version: 2021-03-01-preview.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:documentdb:SqlResourceSqlRoleAssignment myRoleAssignmentId /subscriptions/mySubscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/sqlRoleAssignments/myRoleAssignmentId 
 * ```
 * 
 */
@ResourceType(type="azure-native:documentdb:SqlResourceSqlRoleAssignment")
public class SqlResourceSqlRoleAssignment extends com.pulumi.resources.CustomResource {
    /**
     * The name of the database account.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the database account.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
     * 
     */
    @Export(name="principalId", type=String.class, parameters={})
    private Output</* @Nullable */ String> principalId;

    /**
     * @return The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
     * 
     */
    public Output<Optional<String>> principalId() {
        return Codegen.optional(this.principalId);
    }
    /**
     * The unique identifier for the associated Role Definition.
     * 
     */
    @Export(name="roleDefinitionId", type=String.class, parameters={})
    private Output</* @Nullable */ String> roleDefinitionId;

    /**
     * @return The unique identifier for the associated Role Definition.
     * 
     */
    public Output<Optional<String>> roleDefinitionId() {
        return Codegen.optional(this.roleDefinitionId);
    }
    /**
     * The data plane resource path for which access is being granted through this Role Assignment.
     * 
     */
    @Export(name="scope", type=String.class, parameters={})
    private Output</* @Nullable */ String> scope;

    /**
     * @return The data plane resource path for which access is being granted through this Role Assignment.
     * 
     */
    public Output<Optional<String>> scope() {
        return Codegen.optional(this.scope);
    }
    /**
     * The type of Azure resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of Azure resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SqlResourceSqlRoleAssignment(String name) {
        this(name, SqlResourceSqlRoleAssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SqlResourceSqlRoleAssignment(String name, SqlResourceSqlRoleAssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SqlResourceSqlRoleAssignment(String name, SqlResourceSqlRoleAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:documentdb:SqlResourceSqlRoleAssignment", name, args == null ? SqlResourceSqlRoleAssignmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SqlResourceSqlRoleAssignment(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:documentdb:SqlResourceSqlRoleAssignment", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:documentdb/v20200601preview:SqlResourceSqlRoleAssignment").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20210301preview:SqlResourceSqlRoleAssignment").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20210401preview:SqlResourceSqlRoleAssignment").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20210415:SqlResourceSqlRoleAssignment").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20210515:SqlResourceSqlRoleAssignment").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20210615:SqlResourceSqlRoleAssignment").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20210701preview:SqlResourceSqlRoleAssignment").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20211015:SqlResourceSqlRoleAssignment").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20211015preview:SqlResourceSqlRoleAssignment").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20211115preview:SqlResourceSqlRoleAssignment").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20220215preview:SqlResourceSqlRoleAssignment").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SqlResourceSqlRoleAssignment get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SqlResourceSqlRoleAssignment(name, id, options);
    }
}
