// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * A site for the Webchat channel
 * 
 */
public final class WebChatSiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebChatSiteArgs Empty = new WebChatSiteArgs();

    /**
     * Whether this site is enabled for DirectLine channel
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return Whether this site is enabled for DirectLine channel
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * Whether this site is enabled for preview versions of Webchat
     * 
     */
    @Import(name="isWebchatPreviewEnabled", required=true)
    private Output<Boolean> isWebchatPreviewEnabled;

    /**
     * @return Whether this site is enabled for preview versions of Webchat
     * 
     */
    public Output<Boolean> isWebchatPreviewEnabled() {
        return this.isWebchatPreviewEnabled;
    }

    /**
     * Site name
     * 
     */
    @Import(name="siteName", required=true)
    private Output<String> siteName;

    /**
     * @return Site name
     * 
     */
    public Output<String> siteName() {
        return this.siteName;
    }

    private WebChatSiteArgs() {}

    private WebChatSiteArgs(WebChatSiteArgs $) {
        this.isEnabled = $.isEnabled;
        this.isWebchatPreviewEnabled = $.isWebchatPreviewEnabled;
        this.siteName = $.siteName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebChatSiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebChatSiteArgs $;

        public Builder() {
            $ = new WebChatSiteArgs();
        }

        public Builder(WebChatSiteArgs defaults) {
            $ = new WebChatSiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isEnabled Whether this site is enabled for DirectLine channel
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Whether this site is enabled for DirectLine channel
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param isWebchatPreviewEnabled Whether this site is enabled for preview versions of Webchat
         * 
         * @return builder
         * 
         */
        public Builder isWebchatPreviewEnabled(Output<Boolean> isWebchatPreviewEnabled) {
            $.isWebchatPreviewEnabled = isWebchatPreviewEnabled;
            return this;
        }

        /**
         * @param isWebchatPreviewEnabled Whether this site is enabled for preview versions of Webchat
         * 
         * @return builder
         * 
         */
        public Builder isWebchatPreviewEnabled(Boolean isWebchatPreviewEnabled) {
            return isWebchatPreviewEnabled(Output.of(isWebchatPreviewEnabled));
        }

        /**
         * @param siteName Site name
         * 
         * @return builder
         * 
         */
        public Builder siteName(Output<String> siteName) {
            $.siteName = siteName;
            return this;
        }

        /**
         * @param siteName Site name
         * 
         * @return builder
         * 
         */
        public Builder siteName(String siteName) {
            return siteName(Output.of(siteName));
        }

        public WebChatSiteArgs build() {
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            $.isWebchatPreviewEnabled = Codegen.booleanProp("isWebchatPreviewEnabled").output().arg($.isWebchatPreviewEnabled).def(false).require();
            $.siteName = Objects.requireNonNull($.siteName, "expected parameter 'siteName' to be non-null");
            return $;
        }
    }

}
