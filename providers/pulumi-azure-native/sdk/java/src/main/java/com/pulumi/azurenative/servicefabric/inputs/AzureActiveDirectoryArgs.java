// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The settings to enable AAD authentication on the cluster.
 * 
 */
public final class AzureActiveDirectoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureActiveDirectoryArgs Empty = new AzureActiveDirectoryArgs();

    /**
     * Azure active directory client application id.
     * 
     */
    @Import(name="clientApplication")
    private @Nullable Output<String> clientApplication;

    /**
     * @return Azure active directory client application id.
     * 
     */
    public Optional<Output<String>> clientApplication() {
        return Optional.ofNullable(this.clientApplication);
    }

    /**
     * Azure active directory cluster application id.
     * 
     */
    @Import(name="clusterApplication")
    private @Nullable Output<String> clusterApplication;

    /**
     * @return Azure active directory cluster application id.
     * 
     */
    public Optional<Output<String>> clusterApplication() {
        return Optional.ofNullable(this.clusterApplication);
    }

    /**
     * Azure active directory tenant id.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return Azure active directory tenant id.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private AzureActiveDirectoryArgs() {}

    private AzureActiveDirectoryArgs(AzureActiveDirectoryArgs $) {
        this.clientApplication = $.clientApplication;
        this.clusterApplication = $.clusterApplication;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureActiveDirectoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureActiveDirectoryArgs $;

        public Builder() {
            $ = new AzureActiveDirectoryArgs();
        }

        public Builder(AzureActiveDirectoryArgs defaults) {
            $ = new AzureActiveDirectoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientApplication Azure active directory client application id.
         * 
         * @return builder
         * 
         */
        public Builder clientApplication(@Nullable Output<String> clientApplication) {
            $.clientApplication = clientApplication;
            return this;
        }

        /**
         * @param clientApplication Azure active directory client application id.
         * 
         * @return builder
         * 
         */
        public Builder clientApplication(String clientApplication) {
            return clientApplication(Output.of(clientApplication));
        }

        /**
         * @param clusterApplication Azure active directory cluster application id.
         * 
         * @return builder
         * 
         */
        public Builder clusterApplication(@Nullable Output<String> clusterApplication) {
            $.clusterApplication = clusterApplication;
            return this;
        }

        /**
         * @param clusterApplication Azure active directory cluster application id.
         * 
         * @return builder
         * 
         */
        public Builder clusterApplication(String clusterApplication) {
            return clusterApplication(Output.of(clusterApplication));
        }

        /**
         * @param tenantId Azure active directory tenant id.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId Azure active directory tenant id.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public AzureActiveDirectoryArgs build() {
            return $;
        }
    }

}
