// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.vmwarecloudsimple.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Virtual network model
 * 
 */
public final class VirtualNetworkResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualNetworkResponse Empty = new VirtualNetworkResponse();

    /**
     * can be used in vm creation/deletion
     * 
     */
    @Import(name="assignable", required=true)
    private Boolean assignable;

    public Boolean assignable() {
        return this.assignable;
    }

    /**
     * virtual network id (privateCloudId:vsphereId)
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * Azure region
     * 
     */
    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    /**
     * {VirtualNetworkName}
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * The Private Cloud id
     * 
     */
    @Import(name="privateCloudId", required=true)
    private String privateCloudId;

    public String privateCloudId() {
        return this.privateCloudId;
    }

    /**
     * {resourceProviderNamespace}/{resourceType}
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private VirtualNetworkResponse() {}

    private VirtualNetworkResponse(VirtualNetworkResponse $) {
        this.assignable = $.assignable;
        this.id = $.id;
        this.location = $.location;
        this.name = $.name;
        this.privateCloudId = $.privateCloudId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNetworkResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNetworkResponse $;

        public Builder() {
            $ = new VirtualNetworkResponse();
        }

        public Builder(VirtualNetworkResponse defaults) {
            $ = new VirtualNetworkResponse(Objects.requireNonNull(defaults));
        }

        public Builder assignable(Boolean assignable) {
            $.assignable = assignable;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder privateCloudId(String privateCloudId) {
            $.privateCloudId = privateCloudId;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public VirtualNetworkResponse build() {
            $.assignable = Objects.requireNonNull($.assignable, "expected parameter 'assignable' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.privateCloudId = Objects.requireNonNull($.privateCloudId, "expected parameter 'privateCloudId' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
