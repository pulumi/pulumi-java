// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMachineGroupArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMachineGroupArgs Empty = new GetMachineGroupArgs();

    /**
     * UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    /**
     * @return UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow
     * 
     */
    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * Machine Group resource name.
     * 
     */
    @Import(name="machineGroupName", required=true)
    private Output<String> machineGroupName;

    /**
     * @return Machine Group resource name.
     * 
     */
    public Output<String> machineGroupName() {
        return this.machineGroupName;
    }

    /**
     * Resource group name within the specified subscriptionId.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Resource group name within the specified subscriptionId.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    /**
     * @return UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m
     * 
     */
    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * OMS workspace containing the resources of interest.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    /**
     * @return OMS workspace containing the resources of interest.
     * 
     */
    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private GetMachineGroupArgs() {}

    private GetMachineGroupArgs(GetMachineGroupArgs $) {
        this.endTime = $.endTime;
        this.machineGroupName = $.machineGroupName;
        this.resourceGroupName = $.resourceGroupName;
        this.startTime = $.startTime;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMachineGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMachineGroupArgs $;

        public Builder() {
            $ = new GetMachineGroupArgs();
        }

        public Builder(GetMachineGroupArgs defaults) {
            $ = new GetMachineGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endTime UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param machineGroupName Machine Group resource name.
         * 
         * @return builder
         * 
         */
        public Builder machineGroupName(Output<String> machineGroupName) {
            $.machineGroupName = machineGroupName;
            return this;
        }

        /**
         * @param machineGroupName Machine Group resource name.
         * 
         * @return builder
         * 
         */
        public Builder machineGroupName(String machineGroupName) {
            return machineGroupName(Output.of(machineGroupName));
        }

        /**
         * @param resourceGroupName Resource group name within the specified subscriptionId.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Resource group name within the specified subscriptionId.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param startTime UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        /**
         * @param workspaceName OMS workspace containing the resources of interest.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        /**
         * @param workspaceName OMS workspace containing the resources of interest.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public GetMachineGroupArgs build() {
            $.machineGroupName = Objects.requireNonNull($.machineGroupName, "expected parameter 'machineGroupName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
