// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.kubernetesconfiguration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Status condition of Kubernetes object
 * 
 */
public final class ObjectStatusConditionDefinitionResponse extends com.pulumi.resources.InvokeArgs {

    public static final ObjectStatusConditionDefinitionResponse Empty = new ObjectStatusConditionDefinitionResponse();

    /**
     * Last time this status condition has changed
     * 
     */
    @Import(name="lastTransitionTime")
    private @Nullable String lastTransitionTime;

    /**
     * @return Last time this status condition has changed
     * 
     */
    public Optional<String> lastTransitionTime() {
        return Optional.ofNullable(this.lastTransitionTime);
    }

    /**
     * A more verbose description of the object status condition
     * 
     */
    @Import(name="message")
    private @Nullable String message;

    /**
     * @return A more verbose description of the object status condition
     * 
     */
    public Optional<String> message() {
        return Optional.ofNullable(this.message);
    }

    /**
     * Reason for the specified status condition type status
     * 
     */
    @Import(name="reason")
    private @Nullable String reason;

    /**
     * @return Reason for the specified status condition type status
     * 
     */
    public Optional<String> reason() {
        return Optional.ofNullable(this.reason);
    }

    /**
     * Status of the Kubernetes object condition type
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return Status of the Kubernetes object condition type
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Object status condition type for this object
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return Object status condition type for this object
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private ObjectStatusConditionDefinitionResponse() {}

    private ObjectStatusConditionDefinitionResponse(ObjectStatusConditionDefinitionResponse $) {
        this.lastTransitionTime = $.lastTransitionTime;
        this.message = $.message;
        this.reason = $.reason;
        this.status = $.status;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectStatusConditionDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectStatusConditionDefinitionResponse $;

        public Builder() {
            $ = new ObjectStatusConditionDefinitionResponse();
        }

        public Builder(ObjectStatusConditionDefinitionResponse defaults) {
            $ = new ObjectStatusConditionDefinitionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param lastTransitionTime Last time this status condition has changed
         * 
         * @return builder
         * 
         */
        public Builder lastTransitionTime(@Nullable String lastTransitionTime) {
            $.lastTransitionTime = lastTransitionTime;
            return this;
        }

        /**
         * @param message A more verbose description of the object status condition
         * 
         * @return builder
         * 
         */
        public Builder message(@Nullable String message) {
            $.message = message;
            return this;
        }

        /**
         * @param reason Reason for the specified status condition type status
         * 
         * @return builder
         * 
         */
        public Builder reason(@Nullable String reason) {
            $.reason = reason;
            return this;
        }

        /**
         * @param status Status of the Kubernetes object condition type
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param type Object status condition type for this object
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public ObjectStatusConditionDefinitionResponse build() {
            return $;
        }
    }

}
