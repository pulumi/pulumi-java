// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cache.inputs;

import com.pulumi.azurenative.cache.enums.SkuName;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SKU parameters supplied to the create RedisEnterprise operation.
 * 
 */
public final class EnterpriseSkuArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnterpriseSkuArgs Empty = new EnterpriseSkuArgs();

    /**
     * The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.
     * 
     */
    @Import(name="capacity")
    private @Nullable Output<Integer> capacity;

    public Optional<Output<Integer>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
     * 
     */
    @Import(name="name", required=true)
    private Output<Either<String,SkuName>> name;

    public Output<Either<String,SkuName>> name() {
        return this.name;
    }

    private EnterpriseSkuArgs() {}

    private EnterpriseSkuArgs(EnterpriseSkuArgs $) {
        this.capacity = $.capacity;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnterpriseSkuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnterpriseSkuArgs $;

        public Builder() {
            $ = new EnterpriseSkuArgs();
        }

        public Builder(EnterpriseSkuArgs defaults) {
            $ = new EnterpriseSkuArgs(Objects.requireNonNull(defaults));
        }

        public Builder capacity(@Nullable Output<Integer> capacity) {
            $.capacity = capacity;
            return this;
        }

        public Builder capacity(Integer capacity) {
            return capacity(Output.of(capacity));
        }

        public Builder name(Output<Either<String,SkuName>> name) {
            $.name = name;
            return this;
        }

        public Builder name(Either<String,SkuName> name) {
            return name(Output.of(name));
        }

        public Builder name(String name) {
            return name(Either.ofLeft(name));
        }

        public Builder name(SkuName name) {
            return name(Either.ofRight(name));
        }

        public EnterpriseSkuArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
