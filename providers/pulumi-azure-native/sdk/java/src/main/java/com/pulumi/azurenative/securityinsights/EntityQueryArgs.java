// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights;

import com.pulumi.azurenative.securityinsights.enums.CustomEntityQueryKind;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EntityQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final EntityQueryArgs Empty = new EntityQueryArgs();

    /**
     * entity query ID
     * 
     */
    @Import(name="entityQueryId")
    private @Nullable Output<String> entityQueryId;

    public Optional<Output<String>> entityQueryId() {
        return Optional.ofNullable(this.entityQueryId);
    }

    /**
     * the entity query kind
     * 
     */
    @Import(name="kind", required=true)
    private Output<Either<String,CustomEntityQueryKind>> kind;

    public Output<Either<String,CustomEntityQueryKind>> kind() {
        return this.kind;
    }

    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     * 
     */
    @Import(name="operationalInsightsResourceProvider", required=true)
    private Output<String> operationalInsightsResourceProvider;

    public Output<String> operationalInsightsResourceProvider() {
        return this.operationalInsightsResourceProvider;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private EntityQueryArgs() {}

    private EntityQueryArgs(EntityQueryArgs $) {
        this.entityQueryId = $.entityQueryId;
        this.kind = $.kind;
        this.operationalInsightsResourceProvider = $.operationalInsightsResourceProvider;
        this.resourceGroupName = $.resourceGroupName;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntityQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntityQueryArgs $;

        public Builder() {
            $ = new EntityQueryArgs();
        }

        public Builder(EntityQueryArgs defaults) {
            $ = new EntityQueryArgs(Objects.requireNonNull(defaults));
        }

        public Builder entityQueryId(@Nullable Output<String> entityQueryId) {
            $.entityQueryId = entityQueryId;
            return this;
        }

        public Builder entityQueryId(String entityQueryId) {
            return entityQueryId(Output.of(entityQueryId));
        }

        public Builder kind(Output<Either<String,CustomEntityQueryKind>> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(Either<String,CustomEntityQueryKind> kind) {
            return kind(Output.of(kind));
        }

        public Builder kind(String kind) {
            return kind(Either.ofLeft(kind));
        }

        public Builder kind(CustomEntityQueryKind kind) {
            return kind(Either.ofRight(kind));
        }

        public Builder operationalInsightsResourceProvider(Output<String> operationalInsightsResourceProvider) {
            $.operationalInsightsResourceProvider = operationalInsightsResourceProvider;
            return this;
        }

        public Builder operationalInsightsResourceProvider(String operationalInsightsResourceProvider) {
            return operationalInsightsResourceProvider(Output.of(operationalInsightsResourceProvider));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public EntityQueryArgs build() {
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            $.operationalInsightsResourceProvider = Objects.requireNonNull($.operationalInsightsResourceProvider, "expected parameter 'operationalInsightsResourceProvider' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
