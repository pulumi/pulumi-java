// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.enums.OrganizationMembershipType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The multi cloud account&#39;s organizational data
 * 
 */
public final class SecurityConnectorPropertiesOrganizationalDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityConnectorPropertiesOrganizationalDataArgs Empty = new SecurityConnectorPropertiesOrganizationalDataArgs();

    /**
     * If the multi cloud account is of membership type organization, list of accounts excluded from offering
     * 
     */
    @Import(name="excludedAccountIds")
    private @Nullable Output<List<String>> excludedAccountIds;

    /**
     * @return If the multi cloud account is of membership type organization, list of accounts excluded from offering
     * 
     */
    public Optional<Output<List<String>>> excludedAccountIds() {
        return Optional.ofNullable(this.excludedAccountIds);
    }

    /**
     * The multi cloud account&#39;s membership type in the organization
     * 
     */
    @Import(name="organizationMembershipType")
    private @Nullable Output<Either<String,OrganizationMembershipType>> organizationMembershipType;

    /**
     * @return The multi cloud account&#39;s membership type in the organization
     * 
     */
    public Optional<Output<Either<String,OrganizationMembershipType>>> organizationMembershipType() {
        return Optional.ofNullable(this.organizationMembershipType);
    }

    /**
     * If the multi cloud account is not of membership type organization, this will be the ID of the account&#39;s parent
     * 
     */
    @Import(name="parentHierarchyId")
    private @Nullable Output<String> parentHierarchyId;

    /**
     * @return If the multi cloud account is not of membership type organization, this will be the ID of the account&#39;s parent
     * 
     */
    public Optional<Output<String>> parentHierarchyId() {
        return Optional.ofNullable(this.parentHierarchyId);
    }

    /**
     * If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
     * 
     */
    @Import(name="stacksetName")
    private @Nullable Output<String> stacksetName;

    /**
     * @return If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
     * 
     */
    public Optional<Output<String>> stacksetName() {
        return Optional.ofNullable(this.stacksetName);
    }

    private SecurityConnectorPropertiesOrganizationalDataArgs() {}

    private SecurityConnectorPropertiesOrganizationalDataArgs(SecurityConnectorPropertiesOrganizationalDataArgs $) {
        this.excludedAccountIds = $.excludedAccountIds;
        this.organizationMembershipType = $.organizationMembershipType;
        this.parentHierarchyId = $.parentHierarchyId;
        this.stacksetName = $.stacksetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityConnectorPropertiesOrganizationalDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityConnectorPropertiesOrganizationalDataArgs $;

        public Builder() {
            $ = new SecurityConnectorPropertiesOrganizationalDataArgs();
        }

        public Builder(SecurityConnectorPropertiesOrganizationalDataArgs defaults) {
            $ = new SecurityConnectorPropertiesOrganizationalDataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludedAccountIds If the multi cloud account is of membership type organization, list of accounts excluded from offering
         * 
         * @return builder
         * 
         */
        public Builder excludedAccountIds(@Nullable Output<List<String>> excludedAccountIds) {
            $.excludedAccountIds = excludedAccountIds;
            return this;
        }

        /**
         * @param excludedAccountIds If the multi cloud account is of membership type organization, list of accounts excluded from offering
         * 
         * @return builder
         * 
         */
        public Builder excludedAccountIds(List<String> excludedAccountIds) {
            return excludedAccountIds(Output.of(excludedAccountIds));
        }

        /**
         * @param excludedAccountIds If the multi cloud account is of membership type organization, list of accounts excluded from offering
         * 
         * @return builder
         * 
         */
        public Builder excludedAccountIds(String... excludedAccountIds) {
            return excludedAccountIds(List.of(excludedAccountIds));
        }

        /**
         * @param organizationMembershipType The multi cloud account&#39;s membership type in the organization
         * 
         * @return builder
         * 
         */
        public Builder organizationMembershipType(@Nullable Output<Either<String,OrganizationMembershipType>> organizationMembershipType) {
            $.organizationMembershipType = organizationMembershipType;
            return this;
        }

        /**
         * @param organizationMembershipType The multi cloud account&#39;s membership type in the organization
         * 
         * @return builder
         * 
         */
        public Builder organizationMembershipType(Either<String,OrganizationMembershipType> organizationMembershipType) {
            return organizationMembershipType(Output.of(organizationMembershipType));
        }

        /**
         * @param organizationMembershipType The multi cloud account&#39;s membership type in the organization
         * 
         * @return builder
         * 
         */
        public Builder organizationMembershipType(String organizationMembershipType) {
            return organizationMembershipType(Either.ofLeft(organizationMembershipType));
        }

        /**
         * @param organizationMembershipType The multi cloud account&#39;s membership type in the organization
         * 
         * @return builder
         * 
         */
        public Builder organizationMembershipType(OrganizationMembershipType organizationMembershipType) {
            return organizationMembershipType(Either.ofRight(organizationMembershipType));
        }

        /**
         * @param parentHierarchyId If the multi cloud account is not of membership type organization, this will be the ID of the account&#39;s parent
         * 
         * @return builder
         * 
         */
        public Builder parentHierarchyId(@Nullable Output<String> parentHierarchyId) {
            $.parentHierarchyId = parentHierarchyId;
            return this;
        }

        /**
         * @param parentHierarchyId If the multi cloud account is not of membership type organization, this will be the ID of the account&#39;s parent
         * 
         * @return builder
         * 
         */
        public Builder parentHierarchyId(String parentHierarchyId) {
            return parentHierarchyId(Output.of(parentHierarchyId));
        }

        /**
         * @param stacksetName If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
         * 
         * @return builder
         * 
         */
        public Builder stacksetName(@Nullable Output<String> stacksetName) {
            $.stacksetName = stacksetName;
            return this;
        }

        /**
         * @param stacksetName If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
         * 
         * @return builder
         * 
         */
        public Builder stacksetName(String stacksetName) {
            return stacksetName(Output.of(stacksetName));
        }

        public SecurityConnectorPropertiesOrganizationalDataArgs build() {
            return $;
        }
    }

}
