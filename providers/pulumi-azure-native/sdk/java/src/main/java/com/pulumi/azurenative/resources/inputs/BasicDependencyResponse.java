// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resources.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Deployment dependency information.
 * 
 */
public final class BasicDependencyResponse extends com.pulumi.resources.InvokeArgs {

    public static final BasicDependencyResponse Empty = new BasicDependencyResponse();

    /**
     * The ID of the dependency.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The ID of the dependency.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The dependency resource name.
     * 
     */
    @Import(name="resourceName")
    private @Nullable String resourceName;

    /**
     * @return The dependency resource name.
     * 
     */
    public Optional<String> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }

    /**
     * The dependency resource type.
     * 
     */
    @Import(name="resourceType")
    private @Nullable String resourceType;

    /**
     * @return The dependency resource type.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    private BasicDependencyResponse() {}

    private BasicDependencyResponse(BasicDependencyResponse $) {
        this.id = $.id;
        this.resourceName = $.resourceName;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BasicDependencyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BasicDependencyResponse $;

        public Builder() {
            $ = new BasicDependencyResponse();
        }

        public Builder(BasicDependencyResponse defaults) {
            $ = new BasicDependencyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the dependency.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param resourceName The dependency resource name.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(@Nullable String resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param resourceType The dependency resource type.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public BasicDependencyResponse build() {
            return $;
        }
    }

}
