// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UserSetResponse {
    /**
     * @return The description of the user.
     * 
     */
    private final @Nullable String description;
    /**
     * @return The object id of the user.
     * 
     */
    private final @Nullable String id;
    /**
     * @return The value indicating whether the user is a backup fallback approver
     * 
     */
    private final @Nullable Boolean isBackup;
    /**
     * @return The type of user.
     * 
     */
    private final @Nullable String userType;

    @CustomType.Constructor
    private UserSetResponse(
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("isBackup") @Nullable Boolean isBackup,
        @CustomType.Parameter("userType") @Nullable String userType) {
        this.description = description;
        this.id = id;
        this.isBackup = isBackup;
        this.userType = userType;
    }

    /**
     * @return The description of the user.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The object id of the user.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The value indicating whether the user is a backup fallback approver
     * 
     */
    public Optional<Boolean> isBackup() {
        return Optional.ofNullable(this.isBackup);
    }
    /**
     * @return The type of user.
     * 
     */
    public Optional<String> userType() {
        return Optional.ofNullable(this.userType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserSetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable Boolean isBackup;
        private @Nullable String userType;

        public Builder() {
    	      // Empty
        }

        public Builder(UserSetResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.isBackup = defaults.isBackup;
    	      this.userType = defaults.userType;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder isBackup(@Nullable Boolean isBackup) {
            this.isBackup = isBackup;
            return this;
        }
        public Builder userType(@Nullable String userType) {
            this.userType = userType;
            return this;
        }        public UserSetResponse build() {
            return new UserSetResponse(description, id, isBackup, userType);
        }
    }
}
