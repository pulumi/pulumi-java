// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.AzureKeyVaultSecretReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.IntegrationRuntimeReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.ParameterSpecificationResponse;
import com.pulumi.azurenative.datafactory.inputs.SecureStringResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SAP Business Warehouse Open Hub Destination Linked Service.
 * 
 */
public final class SapOpenHubLinkedServiceResponse extends com.pulumi.resources.InvokeArgs {

    public static final SapOpenHubLinkedServiceResponse Empty = new SapOpenHubLinkedServiceResponse();

    /**
     * List of tags that can be used for describing the linked service.
     * 
     */
    @Import(name="annotations")
    private @Nullable List<Object> annotations;

    /**
     * @return List of tags that can be used for describing the linked service.
     * 
     */
    public Optional<List<Object>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Client ID of the client on the BW system where the open hub destination is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="clientId")
    private @Nullable Object clientId;

    /**
     * @return Client ID of the client on the BW system where the open hub destination is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * The integration runtime reference.
     * 
     */
    @Import(name="connectVia")
    private @Nullable IntegrationRuntimeReferenceResponse connectVia;

    /**
     * @return The integration runtime reference.
     * 
     */
    public Optional<IntegrationRuntimeReferenceResponse> connectVia() {
        return Optional.ofNullable(this.connectVia);
    }

    /**
     * Linked service description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Linked service description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="encryptedCredential")
    private @Nullable Object encryptedCredential;

    /**
     * @return The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> encryptedCredential() {
        return Optional.ofNullable(this.encryptedCredential);
    }

    /**
     * Language of the BW system where the open hub destination is located. The default value is EN. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="language")
    private @Nullable Object language;

    /**
     * @return Language of the BW system where the open hub destination is located. The default value is EN. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> language() {
        return Optional.ofNullable(this.language);
    }

    /**
     * The Logon Group for the SAP System. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="logonGroup")
    private @Nullable Object logonGroup;

    /**
     * @return The Logon Group for the SAP System. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> logonGroup() {
        return Optional.ofNullable(this.logonGroup);
    }

    /**
     * The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="messageServer")
    private @Nullable Object messageServer;

    /**
     * @return The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> messageServer() {
        return Optional.ofNullable(this.messageServer);
    }

    /**
     * The service name or port number of the Message Server. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="messageServerService")
    private @Nullable Object messageServerService;

    /**
     * @return The service name or port number of the Message Server. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> messageServerService() {
        return Optional.ofNullable(this.messageServerService);
    }

    /**
     * Parameters for linked service.
     * 
     */
    @Import(name="parameters")
    private @Nullable Map<String,ParameterSpecificationResponse> parameters;

    /**
     * @return Parameters for linked service.
     * 
     */
    public Optional<Map<String,ParameterSpecificationResponse>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Password to access the SAP BW server where the open hub destination is located.
     * 
     */
    @Import(name="password")
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password;

    /**
     * @return Password to access the SAP BW server where the open hub destination is located.
     * 
     */
    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Host name of the SAP BW instance where the open hub destination is located. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="server")
    private @Nullable Object server;

    /**
     * @return Host name of the SAP BW instance where the open hub destination is located. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> server() {
        return Optional.ofNullable(this.server);
    }

    /**
     * SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="systemId")
    private @Nullable Object systemId;

    /**
     * @return SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> systemId() {
        return Optional.ofNullable(this.systemId);
    }

    /**
     * System number of the BW system where the open hub destination is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="systemNumber")
    private @Nullable Object systemNumber;

    /**
     * @return System number of the BW system where the open hub destination is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> systemNumber() {
        return Optional.ofNullable(this.systemNumber);
    }

    /**
     * Type of linked service.
     * Expected value is &#39;SapOpenHub&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Type of linked service.
     * Expected value is &#39;SapOpenHub&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * Username to access the SAP BW server where the open hub destination is located. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="userName")
    private @Nullable Object userName;

    /**
     * @return Username to access the SAP BW server where the open hub destination is located. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> userName() {
        return Optional.ofNullable(this.userName);
    }

    private SapOpenHubLinkedServiceResponse() {}

    private SapOpenHubLinkedServiceResponse(SapOpenHubLinkedServiceResponse $) {
        this.annotations = $.annotations;
        this.clientId = $.clientId;
        this.connectVia = $.connectVia;
        this.description = $.description;
        this.encryptedCredential = $.encryptedCredential;
        this.language = $.language;
        this.logonGroup = $.logonGroup;
        this.messageServer = $.messageServer;
        this.messageServerService = $.messageServerService;
        this.parameters = $.parameters;
        this.password = $.password;
        this.server = $.server;
        this.systemId = $.systemId;
        this.systemNumber = $.systemNumber;
        this.type = $.type;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SapOpenHubLinkedServiceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SapOpenHubLinkedServiceResponse $;

        public Builder() {
            $ = new SapOpenHubLinkedServiceResponse();
        }

        public Builder(SapOpenHubLinkedServiceResponse defaults) {
            $ = new SapOpenHubLinkedServiceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations List of tags that can be used for describing the linked service.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable List<Object> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations List of tags that can be used for describing the linked service.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Object... annotations) {
            return annotations(List.of(annotations));
        }

        /**
         * @param clientId Client ID of the client on the BW system where the open hub destination is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Object clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param connectVia The integration runtime reference.
         * 
         * @return builder
         * 
         */
        public Builder connectVia(@Nullable IntegrationRuntimeReferenceResponse connectVia) {
            $.connectVia = connectVia;
            return this;
        }

        /**
         * @param description Linked service description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param encryptedCredential The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder encryptedCredential(@Nullable Object encryptedCredential) {
            $.encryptedCredential = encryptedCredential;
            return this;
        }

        /**
         * @param language Language of the BW system where the open hub destination is located. The default value is EN. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder language(@Nullable Object language) {
            $.language = language;
            return this;
        }

        /**
         * @param logonGroup The Logon Group for the SAP System. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder logonGroup(@Nullable Object logonGroup) {
            $.logonGroup = logonGroup;
            return this;
        }

        /**
         * @param messageServer The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder messageServer(@Nullable Object messageServer) {
            $.messageServer = messageServer;
            return this;
        }

        /**
         * @param messageServerService The service name or port number of the Message Server. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder messageServerService(@Nullable Object messageServerService) {
            $.messageServerService = messageServerService;
            return this;
        }

        /**
         * @param parameters Parameters for linked service.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Map<String,ParameterSpecificationResponse> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param password Password to access the SAP BW server where the open hub destination is located.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Password to access the SAP BW server where the open hub destination is located.
         * 
         * @return builder
         * 
         */
        public Builder password(AzureKeyVaultSecretReferenceResponse password) {
            return password(Either.ofLeft(password));
        }

        /**
         * @param password Password to access the SAP BW server where the open hub destination is located.
         * 
         * @return builder
         * 
         */
        public Builder password(SecureStringResponse password) {
            return password(Either.ofRight(password));
        }

        /**
         * @param server Host name of the SAP BW instance where the open hub destination is located. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder server(@Nullable Object server) {
            $.server = server;
            return this;
        }

        /**
         * @param systemId SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder systemId(@Nullable Object systemId) {
            $.systemId = systemId;
            return this;
        }

        /**
         * @param systemNumber System number of the BW system where the open hub destination is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder systemNumber(@Nullable Object systemNumber) {
            $.systemNumber = systemNumber;
            return this;
        }

        /**
         * @param type Type of linked service.
         * Expected value is &#39;SapOpenHub&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param userName Username to access the SAP BW server where the open hub destination is located. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Object userName) {
            $.userName = userName;
            return this;
        }

        public SapOpenHubLinkedServiceResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
