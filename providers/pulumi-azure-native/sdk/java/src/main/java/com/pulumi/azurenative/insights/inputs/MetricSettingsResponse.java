// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.azurenative.insights.inputs.RetentionPolicyResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular metric.
 * 
 */
public final class MetricSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final MetricSettingsResponse Empty = new MetricSettingsResponse();

    /**
     * Name of a Diagnostic Metric category for a resource type this setting is applied to. To obtain the list of Diagnostic metric categories for a resource, first perform a GET diagnostic settings operation.
     * 
     */
    @Import(name="category")
    private @Nullable String category;

    /**
     * @return Name of a Diagnostic Metric category for a resource type this setting is applied to. To obtain the list of Diagnostic metric categories for a resource, first perform a GET diagnostic settings operation.
     * 
     */
    public Optional<String> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * a value indicating whether this category is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Boolean enabled;

    /**
     * @return a value indicating whether this category is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * the retention policy for this category.
     * 
     */
    @Import(name="retentionPolicy")
    private @Nullable RetentionPolicyResponse retentionPolicy;

    /**
     * @return the retention policy for this category.
     * 
     */
    public Optional<RetentionPolicyResponse> retentionPolicy() {
        return Optional.ofNullable(this.retentionPolicy);
    }

    /**
     * the timegrain of the metric in ISO8601 format.
     * 
     */
    @Import(name="timeGrain")
    private @Nullable String timeGrain;

    /**
     * @return the timegrain of the metric in ISO8601 format.
     * 
     */
    public Optional<String> timeGrain() {
        return Optional.ofNullable(this.timeGrain);
    }

    private MetricSettingsResponse() {}

    private MetricSettingsResponse(MetricSettingsResponse $) {
        this.category = $.category;
        this.enabled = $.enabled;
        this.retentionPolicy = $.retentionPolicy;
        this.timeGrain = $.timeGrain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricSettingsResponse $;

        public Builder() {
            $ = new MetricSettingsResponse();
        }

        public Builder(MetricSettingsResponse defaults) {
            $ = new MetricSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param category Name of a Diagnostic Metric category for a resource type this setting is applied to. To obtain the list of Diagnostic metric categories for a resource, first perform a GET diagnostic settings operation.
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable String category) {
            $.category = category;
            return this;
        }

        /**
         * @param enabled a value indicating whether this category is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param retentionPolicy the retention policy for this category.
         * 
         * @return builder
         * 
         */
        public Builder retentionPolicy(@Nullable RetentionPolicyResponse retentionPolicy) {
            $.retentionPolicy = retentionPolicy;
            return this;
        }

        /**
         * @param timeGrain the timegrain of the metric in ISO8601 format.
         * 
         * @return builder
         * 
         */
        public Builder timeGrain(@Nullable String timeGrain) {
            $.timeGrain = timeGrain;
            return this;
        }

        public MetricSettingsResponse build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
