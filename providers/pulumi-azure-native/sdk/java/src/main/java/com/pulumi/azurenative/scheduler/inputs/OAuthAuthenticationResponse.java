// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scheduler.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OAuthAuthenticationResponse extends com.pulumi.resources.InvokeArgs {

    public static final OAuthAuthenticationResponse Empty = new OAuthAuthenticationResponse();

    /**
     * Gets or sets the audience.
     * 
     */
    @Import(name="audience")
    private @Nullable String audience;

    public Optional<String> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * Gets or sets the client identifier.
     * 
     */
    @Import(name="clientId")
    private @Nullable String clientId;

    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Gets or sets the secret, return value will always be empty.
     * 
     */
    @Import(name="secret")
    private @Nullable String secret;

    public Optional<String> secret() {
        return Optional.ofNullable(this.secret);
    }

    /**
     * Gets or sets the tenant.
     * 
     */
    @Import(name="tenant")
    private @Nullable String tenant;

    public Optional<String> tenant() {
        return Optional.ofNullable(this.tenant);
    }

    /**
     * Gets or sets the HTTP authentication type.
     * Expected value is &#39;ActiveDirectoryOAuth&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private OAuthAuthenticationResponse() {}

    private OAuthAuthenticationResponse(OAuthAuthenticationResponse $) {
        this.audience = $.audience;
        this.clientId = $.clientId;
        this.secret = $.secret;
        this.tenant = $.tenant;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OAuthAuthenticationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OAuthAuthenticationResponse $;

        public Builder() {
            $ = new OAuthAuthenticationResponse();
        }

        public Builder(OAuthAuthenticationResponse defaults) {
            $ = new OAuthAuthenticationResponse(Objects.requireNonNull(defaults));
        }

        public Builder audience(@Nullable String audience) {
            $.audience = audience;
            return this;
        }

        public Builder clientId(@Nullable String clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder secret(@Nullable String secret) {
            $.secret = secret;
            return this;
        }

        public Builder tenant(@Nullable String tenant) {
            $.tenant = tenant;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public OAuthAuthenticationResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
