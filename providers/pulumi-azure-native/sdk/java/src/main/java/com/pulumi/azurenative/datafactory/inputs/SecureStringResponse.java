// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Azure Data Factory secure string definition. The string value will be masked with asterisks &#39;*&#39; during Get or List API calls.
 * 
 */
public final class SecureStringResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecureStringResponse Empty = new SecureStringResponse();

    /**
     * Type of the secret.
     * Expected value is &#39;SecureString&#39;.
     * 
     */
    @Import(name="type", required=true)
      private final String type;

    public String type() {
        return this.type;
    }

    /**
     * Value of secure string.
     * 
     */
    @Import(name="value", required=true)
      private final String value;

    public String value() {
        return this.value;
    }

    public SecureStringResponse(
        String type,
        String value) {
        this.type = Codegen.stringProp("type").arg(type).require();
        this.value = Objects.requireNonNull(value, "expected parameter 'value' to be non-null");
    }

    private SecureStringResponse() {
        this.type = null;
        this.value = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecureStringResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String type;
        private String value;

        public Builder() {
    	      // Empty
        }

        public Builder(SecureStringResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }        public SecureStringResponse build() {
            return new SecureStringResponse(type, value);
        }
    }
}
