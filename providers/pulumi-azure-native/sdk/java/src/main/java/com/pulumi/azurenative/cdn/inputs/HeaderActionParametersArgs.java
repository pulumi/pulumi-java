// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.enums.HeaderAction;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the parameters for the request header action.
 * 
 */
public final class HeaderActionParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final HeaderActionParametersArgs Empty = new HeaderActionParametersArgs();

    /**
     * Action to perform
     * 
     */
    @Import(name="headerAction", required=true)
    private Output<Either<String,HeaderAction>> headerAction;

    public Output<Either<String,HeaderAction>> headerAction() {
        return this.headerAction;
    }

    /**
     * Name of the header to modify
     * 
     */
    @Import(name="headerName", required=true)
    private Output<String> headerName;

    public Output<String> headerName() {
        return this.headerName;
    }

    @Import(name="odataType", required=true)
    private Output<String> odataType;

    public Output<String> odataType() {
        return this.odataType;
    }

    /**
     * Value for the specified action
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private HeaderActionParametersArgs() {}

    private HeaderActionParametersArgs(HeaderActionParametersArgs $) {
        this.headerAction = $.headerAction;
        this.headerName = $.headerName;
        this.odataType = $.odataType;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HeaderActionParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HeaderActionParametersArgs $;

        public Builder() {
            $ = new HeaderActionParametersArgs();
        }

        public Builder(HeaderActionParametersArgs defaults) {
            $ = new HeaderActionParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder headerAction(Output<Either<String,HeaderAction>> headerAction) {
            $.headerAction = headerAction;
            return this;
        }

        public Builder headerAction(Either<String,HeaderAction> headerAction) {
            return headerAction(Output.of(headerAction));
        }

        public Builder headerName(Output<String> headerName) {
            $.headerName = headerName;
            return this;
        }

        public Builder headerName(String headerName) {
            return headerName(Output.of(headerName));
        }

        public Builder odataType(Output<String> odataType) {
            $.odataType = odataType;
            return this;
        }

        public Builder odataType(String odataType) {
            return odataType(Output.of(odataType));
        }

        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        public Builder value(String value) {
            return value(Output.of(value));
        }

        public HeaderActionParametersArgs build() {
            $.headerAction = Objects.requireNonNull($.headerAction, "expected parameter 'headerAction' to be non-null");
            $.headerName = Objects.requireNonNull($.headerName, "expected parameter 'headerName' to be non-null");
            $.odataType = Objects.requireNonNull($.odataType, "expected parameter 'odataType' to be non-null");
            return $;
        }
    }

}
