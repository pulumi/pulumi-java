// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.alertsmanagement;

import com.pulumi.azurenative.alertsmanagement.inputs.ActionGroupArgs;
import com.pulumi.azurenative.alertsmanagement.inputs.DiagnosticsArgs;
import com.pulumi.azurenative.alertsmanagement.inputs.SuppressionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ActionRuleByNameArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionRuleByNameArgs Empty = new ActionRuleByNameArgs();

    /**
     * The name of action rule that needs to be created/updated
     * 
     */
    @Import(name="actionRuleName")
      private final @Nullable Output<String> actionRuleName;

    public Output<String> actionRuleName() {
        return this.actionRuleName == null ? Codegen.empty() : this.actionRuleName;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * action rule properties
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<Object> properties;

    public Output<Object> properties() {
        return this.properties == null ? Codegen.empty() : this.properties;
    }

    /**
     * Resource group name where the resource is created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public ActionRuleByNameArgs(
        @Nullable Output<String> actionRuleName,
        @Nullable Output<String> location,
        @Nullable Output<Object> properties,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.actionRuleName = actionRuleName;
        this.location = location;
        this.properties = properties;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private ActionRuleByNameArgs() {
        this.actionRuleName = Codegen.empty();
        this.location = Codegen.empty();
        this.properties = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActionRuleByNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> actionRuleName;
        private @Nullable Output<String> location;
        private @Nullable Output<Object> properties;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ActionRuleByNameArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionRuleName = defaults.actionRuleName;
    	      this.location = defaults.location;
    	      this.properties = defaults.properties;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder actionRuleName(@Nullable Output<String> actionRuleName) {
            this.actionRuleName = actionRuleName;
            return this;
        }
        public Builder actionRuleName(@Nullable String actionRuleName) {
            this.actionRuleName = Codegen.ofNullable(actionRuleName);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder properties(@Nullable Output<Object> properties) {
            this.properties = properties;
            return this;
        }
        public Builder properties(@Nullable Object properties) {
            this.properties = Codegen.ofNullable(properties);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public ActionRuleByNameArgs build() {
            return new ActionRuleByNameArgs(actionRuleName, location, properties, resourceGroupName, tags);
        }
    }
}
