// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.redhatopenshift.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * ClusterProfile represents a cluster profile.
 * 
 */
public final class ClusterProfileResponse extends com.pulumi.resources.InvokeArgs {

    public static final ClusterProfileResponse Empty = new ClusterProfileResponse();

    /**
     * The domain for the cluster (immutable).
     * 
     */
    @Import(name="domain")
    private @Nullable String domain;

    /**
     * @return The domain for the cluster (immutable).
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * The pull secret for the cluster (immutable).
     * 
     */
    @Import(name="pullSecret")
    private @Nullable String pullSecret;

    /**
     * @return The pull secret for the cluster (immutable).
     * 
     */
    public Optional<String> pullSecret() {
        return Optional.ofNullable(this.pullSecret);
    }

    /**
     * The ID of the cluster resource group (immutable).
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable String resourceGroupId;

    /**
     * @return The ID of the cluster resource group (immutable).
     * 
     */
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The version of the cluster (immutable).
     * 
     */
    @Import(name="version")
    private @Nullable String version;

    /**
     * @return The version of the cluster (immutable).
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    private ClusterProfileResponse() {}

    private ClusterProfileResponse(ClusterProfileResponse $) {
        this.domain = $.domain;
        this.pullSecret = $.pullSecret;
        this.resourceGroupId = $.resourceGroupId;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterProfileResponse $;

        public Builder() {
            $ = new ClusterProfileResponse();
        }

        public Builder(ClusterProfileResponse defaults) {
            $ = new ClusterProfileResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain The domain for the cluster (immutable).
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable String domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param pullSecret The pull secret for the cluster (immutable).
         * 
         * @return builder
         * 
         */
        public Builder pullSecret(@Nullable String pullSecret) {
            $.pullSecret = pullSecret;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the cluster resource group (immutable).
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable String resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param version The version of the cluster (immutable).
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable String version) {
            $.version = version;
            return this;
        }

        public ClusterProfileResponse build() {
            return $;
        }
    }

}
