// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datalakestore;

import com.pulumi.azurenative.datalakestore.enums.EncryptionState;
import com.pulumi.azurenative.datalakestore.enums.FirewallAllowAzureIpsState;
import com.pulumi.azurenative.datalakestore.enums.FirewallState;
import com.pulumi.azurenative.datalakestore.enums.TierType;
import com.pulumi.azurenative.datalakestore.enums.TrustedIdProviderState;
import com.pulumi.azurenative.datalakestore.inputs.CreateFirewallRuleWithAccountParametersArgs;
import com.pulumi.azurenative.datalakestore.inputs.CreateTrustedIdProviderWithAccountParametersArgs;
import com.pulumi.azurenative.datalakestore.inputs.CreateVirtualNetworkRuleWithAccountParametersArgs;
import com.pulumi.azurenative.datalakestore.inputs.EncryptionConfigArgs;
import com.pulumi.azurenative.datalakestore.inputs.EncryptionIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountArgs Empty = new AccountArgs();

    /**
     * The name of the Data Lake Store account.
     * 
     */
    @Import(name="accountName")
    private @Nullable Output<String> accountName;

    public Optional<Output<String>> accountName() {
        return Optional.ofNullable(this.accountName);
    }

    /**
     * The default owner group for all new folders and files created in the Data Lake Store account.
     * 
     */
    @Import(name="defaultGroup")
    private @Nullable Output<String> defaultGroup;

    public Optional<Output<String>> defaultGroup() {
        return Optional.ofNullable(this.defaultGroup);
    }

    /**
     * The Key Vault encryption configuration.
     * 
     */
    @Import(name="encryptionConfig")
    private @Nullable Output<EncryptionConfigArgs> encryptionConfig;

    public Optional<Output<EncryptionConfigArgs>> encryptionConfig() {
        return Optional.ofNullable(this.encryptionConfig);
    }

    /**
     * The current state of encryption for this Data Lake Store account.
     * 
     */
    @Import(name="encryptionState")
    private @Nullable Output<EncryptionState> encryptionState;

    public Optional<Output<EncryptionState>> encryptionState() {
        return Optional.ofNullable(this.encryptionState);
    }

    /**
     * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
     * 
     */
    @Import(name="firewallAllowAzureIps")
    private @Nullable Output<FirewallAllowAzureIpsState> firewallAllowAzureIps;

    public Optional<Output<FirewallAllowAzureIpsState>> firewallAllowAzureIps() {
        return Optional.ofNullable(this.firewallAllowAzureIps);
    }

    /**
     * The list of firewall rules associated with this Data Lake Store account.
     * 
     */
    @Import(name="firewallRules")
    private @Nullable Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules;

    public Optional<Output<List<CreateFirewallRuleWithAccountParametersArgs>>> firewallRules() {
        return Optional.ofNullable(this.firewallRules);
    }

    /**
     * The current state of the IP address firewall for this Data Lake Store account.
     * 
     */
    @Import(name="firewallState")
    private @Nullable Output<FirewallState> firewallState;

    public Optional<Output<FirewallState>> firewallState() {
        return Optional.ofNullable(this.firewallState);
    }

    /**
     * The Key Vault encryption identity, if any.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<EncryptionIdentityArgs> identity;

    public Optional<Output<EncryptionIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The commitment tier to use for next month.
     * 
     */
    @Import(name="newTier")
    private @Nullable Output<TierType> newTier;

    public Optional<Output<TierType>> newTier() {
        return Optional.ofNullable(this.newTier);
    }

    /**
     * The name of the Azure resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The current state of the trusted identity provider feature for this Data Lake Store account.
     * 
     */
    @Import(name="trustedIdProviderState")
    private @Nullable Output<TrustedIdProviderState> trustedIdProviderState;

    public Optional<Output<TrustedIdProviderState>> trustedIdProviderState() {
        return Optional.ofNullable(this.trustedIdProviderState);
    }

    /**
     * The list of trusted identity providers associated with this Data Lake Store account.
     * 
     */
    @Import(name="trustedIdProviders")
    private @Nullable Output<List<CreateTrustedIdProviderWithAccountParametersArgs>> trustedIdProviders;

    public Optional<Output<List<CreateTrustedIdProviderWithAccountParametersArgs>>> trustedIdProviders() {
        return Optional.ofNullable(this.trustedIdProviders);
    }

    /**
     * The list of virtual network rules associated with this Data Lake Store account.
     * 
     */
    @Import(name="virtualNetworkRules")
    private @Nullable Output<List<CreateVirtualNetworkRuleWithAccountParametersArgs>> virtualNetworkRules;

    public Optional<Output<List<CreateVirtualNetworkRuleWithAccountParametersArgs>>> virtualNetworkRules() {
        return Optional.ofNullable(this.virtualNetworkRules);
    }

    private AccountArgs() {}

    private AccountArgs(AccountArgs $) {
        this.accountName = $.accountName;
        this.defaultGroup = $.defaultGroup;
        this.encryptionConfig = $.encryptionConfig;
        this.encryptionState = $.encryptionState;
        this.firewallAllowAzureIps = $.firewallAllowAzureIps;
        this.firewallRules = $.firewallRules;
        this.firewallState = $.firewallState;
        this.identity = $.identity;
        this.location = $.location;
        this.newTier = $.newTier;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.trustedIdProviderState = $.trustedIdProviderState;
        this.trustedIdProviders = $.trustedIdProviders;
        this.virtualNetworkRules = $.virtualNetworkRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountArgs $;

        public Builder() {
            $ = new AccountArgs();
        }

        public Builder(AccountArgs defaults) {
            $ = new AccountArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountName(@Nullable Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        public Builder defaultGroup(@Nullable Output<String> defaultGroup) {
            $.defaultGroup = defaultGroup;
            return this;
        }

        public Builder defaultGroup(String defaultGroup) {
            return defaultGroup(Output.of(defaultGroup));
        }

        public Builder encryptionConfig(@Nullable Output<EncryptionConfigArgs> encryptionConfig) {
            $.encryptionConfig = encryptionConfig;
            return this;
        }

        public Builder encryptionConfig(EncryptionConfigArgs encryptionConfig) {
            return encryptionConfig(Output.of(encryptionConfig));
        }

        public Builder encryptionState(@Nullable Output<EncryptionState> encryptionState) {
            $.encryptionState = encryptionState;
            return this;
        }

        public Builder encryptionState(EncryptionState encryptionState) {
            return encryptionState(Output.of(encryptionState));
        }

        public Builder firewallAllowAzureIps(@Nullable Output<FirewallAllowAzureIpsState> firewallAllowAzureIps) {
            $.firewallAllowAzureIps = firewallAllowAzureIps;
            return this;
        }

        public Builder firewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps) {
            return firewallAllowAzureIps(Output.of(firewallAllowAzureIps));
        }

        public Builder firewallRules(@Nullable Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules) {
            $.firewallRules = firewallRules;
            return this;
        }

        public Builder firewallRules(List<CreateFirewallRuleWithAccountParametersArgs> firewallRules) {
            return firewallRules(Output.of(firewallRules));
        }

        public Builder firewallRules(CreateFirewallRuleWithAccountParametersArgs... firewallRules) {
            return firewallRules(List.of(firewallRules));
        }

        public Builder firewallState(@Nullable Output<FirewallState> firewallState) {
            $.firewallState = firewallState;
            return this;
        }

        public Builder firewallState(FirewallState firewallState) {
            return firewallState(Output.of(firewallState));
        }

        public Builder identity(@Nullable Output<EncryptionIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(EncryptionIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder newTier(@Nullable Output<TierType> newTier) {
            $.newTier = newTier;
            return this;
        }

        public Builder newTier(TierType newTier) {
            return newTier(Output.of(newTier));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder trustedIdProviderState(@Nullable Output<TrustedIdProviderState> trustedIdProviderState) {
            $.trustedIdProviderState = trustedIdProviderState;
            return this;
        }

        public Builder trustedIdProviderState(TrustedIdProviderState trustedIdProviderState) {
            return trustedIdProviderState(Output.of(trustedIdProviderState));
        }

        public Builder trustedIdProviders(@Nullable Output<List<CreateTrustedIdProviderWithAccountParametersArgs>> trustedIdProviders) {
            $.trustedIdProviders = trustedIdProviders;
            return this;
        }

        public Builder trustedIdProviders(List<CreateTrustedIdProviderWithAccountParametersArgs> trustedIdProviders) {
            return trustedIdProviders(Output.of(trustedIdProviders));
        }

        public Builder trustedIdProviders(CreateTrustedIdProviderWithAccountParametersArgs... trustedIdProviders) {
            return trustedIdProviders(List.of(trustedIdProviders));
        }

        public Builder virtualNetworkRules(@Nullable Output<List<CreateVirtualNetworkRuleWithAccountParametersArgs>> virtualNetworkRules) {
            $.virtualNetworkRules = virtualNetworkRules;
            return this;
        }

        public Builder virtualNetworkRules(List<CreateVirtualNetworkRuleWithAccountParametersArgs> virtualNetworkRules) {
            return virtualNetworkRules(Output.of(virtualNetworkRules));
        }

        public Builder virtualNetworkRules(CreateVirtualNetworkRuleWithAccountParametersArgs... virtualNetworkRules) {
            return virtualNetworkRules(List.of(virtualNetworkRules));
        }

        public AccountArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
