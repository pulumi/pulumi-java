// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn;

import com.pulumi.azurenative.cdn.inputs.HealthProbeParametersArgs;
import com.pulumi.azurenative.cdn.inputs.ResourceReferenceArgs;
import com.pulumi.azurenative.cdn.inputs.ResponseBasedOriginErrorDetectionParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OriginGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final OriginGroupArgs Empty = new OriginGroupArgs();

    /**
     * Name of the endpoint under the profile which is unique globally.
     * 
     */
    @Import(name="endpointName", required=true)
    private Output<String> endpointName;

    public Output<String> endpointName() {
        return this.endpointName;
    }

    /**
     * Health probe settings to the origin that is used to determine the health of the origin.
     * 
     */
    @Import(name="healthProbeSettings")
    private @Nullable Output<HealthProbeParametersArgs> healthProbeSettings;

    public Optional<Output<HealthProbeParametersArgs>> healthProbeSettings() {
        return Optional.ofNullable(this.healthProbeSettings);
    }

    /**
     * Name of the origin group which is unique within the endpoint.
     * 
     */
    @Import(name="originGroupName")
    private @Nullable Output<String> originGroupName;

    public Optional<Output<String>> originGroupName() {
        return Optional.ofNullable(this.originGroupName);
    }

    /**
     * The source of the content being delivered via CDN within given origin group.
     * 
     */
    @Import(name="origins", required=true)
    private Output<List<ResourceReferenceArgs>> origins;

    public Output<List<ResourceReferenceArgs>> origins() {
        return this.origins;
    }

    /**
     * Name of the CDN profile which is unique within the resource group.
     * 
     */
    @Import(name="profileName", required=true)
    private Output<String> profileName;

    public Output<String> profileName() {
        return this.profileName;
    }

    /**
     * Name of the Resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported.
     * 
     */
    @Import(name="responseBasedOriginErrorDetectionSettings")
    private @Nullable Output<ResponseBasedOriginErrorDetectionParametersArgs> responseBasedOriginErrorDetectionSettings;

    public Optional<Output<ResponseBasedOriginErrorDetectionParametersArgs>> responseBasedOriginErrorDetectionSettings() {
        return Optional.ofNullable(this.responseBasedOriginErrorDetectionSettings);
    }

    /**
     * Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
     * 
     */
    @Import(name="trafficRestorationTimeToHealedOrNewEndpointsInMinutes")
    private @Nullable Output<Integer> trafficRestorationTimeToHealedOrNewEndpointsInMinutes;

    public Optional<Output<Integer>> trafficRestorationTimeToHealedOrNewEndpointsInMinutes() {
        return Optional.ofNullable(this.trafficRestorationTimeToHealedOrNewEndpointsInMinutes);
    }

    private OriginGroupArgs() {}

    private OriginGroupArgs(OriginGroupArgs $) {
        this.endpointName = $.endpointName;
        this.healthProbeSettings = $.healthProbeSettings;
        this.originGroupName = $.originGroupName;
        this.origins = $.origins;
        this.profileName = $.profileName;
        this.resourceGroupName = $.resourceGroupName;
        this.responseBasedOriginErrorDetectionSettings = $.responseBasedOriginErrorDetectionSettings;
        this.trafficRestorationTimeToHealedOrNewEndpointsInMinutes = $.trafficRestorationTimeToHealedOrNewEndpointsInMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OriginGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OriginGroupArgs $;

        public Builder() {
            $ = new OriginGroupArgs();
        }

        public Builder(OriginGroupArgs defaults) {
            $ = new OriginGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder endpointName(Output<String> endpointName) {
            $.endpointName = endpointName;
            return this;
        }

        public Builder endpointName(String endpointName) {
            return endpointName(Output.of(endpointName));
        }

        public Builder healthProbeSettings(@Nullable Output<HealthProbeParametersArgs> healthProbeSettings) {
            $.healthProbeSettings = healthProbeSettings;
            return this;
        }

        public Builder healthProbeSettings(HealthProbeParametersArgs healthProbeSettings) {
            return healthProbeSettings(Output.of(healthProbeSettings));
        }

        public Builder originGroupName(@Nullable Output<String> originGroupName) {
            $.originGroupName = originGroupName;
            return this;
        }

        public Builder originGroupName(String originGroupName) {
            return originGroupName(Output.of(originGroupName));
        }

        public Builder origins(Output<List<ResourceReferenceArgs>> origins) {
            $.origins = origins;
            return this;
        }

        public Builder origins(List<ResourceReferenceArgs> origins) {
            return origins(Output.of(origins));
        }

        public Builder origins(ResourceReferenceArgs... origins) {
            return origins(List.of(origins));
        }

        public Builder profileName(Output<String> profileName) {
            $.profileName = profileName;
            return this;
        }

        public Builder profileName(String profileName) {
            return profileName(Output.of(profileName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder responseBasedOriginErrorDetectionSettings(@Nullable Output<ResponseBasedOriginErrorDetectionParametersArgs> responseBasedOriginErrorDetectionSettings) {
            $.responseBasedOriginErrorDetectionSettings = responseBasedOriginErrorDetectionSettings;
            return this;
        }

        public Builder responseBasedOriginErrorDetectionSettings(ResponseBasedOriginErrorDetectionParametersArgs responseBasedOriginErrorDetectionSettings) {
            return responseBasedOriginErrorDetectionSettings(Output.of(responseBasedOriginErrorDetectionSettings));
        }

        public Builder trafficRestorationTimeToHealedOrNewEndpointsInMinutes(@Nullable Output<Integer> trafficRestorationTimeToHealedOrNewEndpointsInMinutes) {
            $.trafficRestorationTimeToHealedOrNewEndpointsInMinutes = trafficRestorationTimeToHealedOrNewEndpointsInMinutes;
            return this;
        }

        public Builder trafficRestorationTimeToHealedOrNewEndpointsInMinutes(Integer trafficRestorationTimeToHealedOrNewEndpointsInMinutes) {
            return trafficRestorationTimeToHealedOrNewEndpointsInMinutes(Output.of(trafficRestorationTimeToHealedOrNewEndpointsInMinutes));
        }

        public OriginGroupArgs build() {
            $.endpointName = Objects.requireNonNull($.endpointName, "expected parameter 'endpointName' to be non-null");
            $.origins = Objects.requireNonNull($.origins, "expected parameter 'origins' to be non-null");
            $.profileName = Objects.requireNonNull($.profileName, "expected parameter 'profileName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
