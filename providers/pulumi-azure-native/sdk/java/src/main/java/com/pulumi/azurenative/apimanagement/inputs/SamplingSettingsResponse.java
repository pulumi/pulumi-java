// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Sampling settings for Diagnostic.
 * 
 */
public final class SamplingSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final SamplingSettingsResponse Empty = new SamplingSettingsResponse();

    /**
     * Rate of sampling for fixed-rate sampling.
     * 
     */
    @Import(name="percentage")
    private @Nullable Double percentage;

    public Optional<Double> percentage() {
        return Optional.ofNullable(this.percentage);
    }

    /**
     * Sampling type.
     * 
     */
    @Import(name="samplingType")
    private @Nullable String samplingType;

    public Optional<String> samplingType() {
        return Optional.ofNullable(this.samplingType);
    }

    private SamplingSettingsResponse() {}

    private SamplingSettingsResponse(SamplingSettingsResponse $) {
        this.percentage = $.percentage;
        this.samplingType = $.samplingType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SamplingSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SamplingSettingsResponse $;

        public Builder() {
            $ = new SamplingSettingsResponse();
        }

        public Builder(SamplingSettingsResponse defaults) {
            $ = new SamplingSettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder percentage(@Nullable Double percentage) {
            $.percentage = percentage;
            return this;
        }

        public Builder samplingType(@Nullable String samplingType) {
            $.samplingType = samplingType;
            return this;
        }

        public SamplingSettingsResponse build() {
            return $;
        }
    }

}
