// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagepool;

import com.pulumi.azurenative.storagepool.inputs.TargetPortalGroupCreateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IscsiTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final IscsiTargetArgs Empty = new IscsiTargetArgs();

    /**
     * The name of the Disk pool.
     * 
     */
    @Import(name="diskPoolName", required=true)
    private Output<String> diskPoolName;

    /**
     * @return The name of the Disk pool.
     * 
     */
    public Output<String> diskPoolName() {
        return this.diskPoolName;
    }

    /**
     * The name of the iSCSI target.
     * 
     */
    @Import(name="iscsiTargetName")
    private @Nullable Output<String> iscsiTargetName;

    /**
     * @return The name of the iSCSI target.
     * 
     */
    public Optional<Output<String>> iscsiTargetName() {
        return Optional.ofNullable(this.iscsiTargetName);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * iSCSI target IQN (iSCSI Qualified Name); example: &#34;iqn.2005-03.org.iscsi:server&#34;.
     * 
     */
    @Import(name="targetIqn")
    private @Nullable Output<String> targetIqn;

    /**
     * @return iSCSI target IQN (iSCSI Qualified Name); example: &#34;iqn.2005-03.org.iscsi:server&#34;.
     * 
     */
    public Optional<Output<String>> targetIqn() {
        return Optional.ofNullable(this.targetIqn);
    }

    /**
     * List of iSCSI target portal groups. Can have 1 portal group at most.
     * 
     */
    @Import(name="tpgs", required=true)
    private Output<List<TargetPortalGroupCreateArgs>> tpgs;

    /**
     * @return List of iSCSI target portal groups. Can have 1 portal group at most.
     * 
     */
    public Output<List<TargetPortalGroupCreateArgs>> tpgs() {
        return this.tpgs;
    }

    private IscsiTargetArgs() {}

    private IscsiTargetArgs(IscsiTargetArgs $) {
        this.diskPoolName = $.diskPoolName;
        this.iscsiTargetName = $.iscsiTargetName;
        this.resourceGroupName = $.resourceGroupName;
        this.targetIqn = $.targetIqn;
        this.tpgs = $.tpgs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IscsiTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IscsiTargetArgs $;

        public Builder() {
            $ = new IscsiTargetArgs();
        }

        public Builder(IscsiTargetArgs defaults) {
            $ = new IscsiTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param diskPoolName The name of the Disk pool.
         * 
         * @return builder
         * 
         */
        public Builder diskPoolName(Output<String> diskPoolName) {
            $.diskPoolName = diskPoolName;
            return this;
        }

        /**
         * @param diskPoolName The name of the Disk pool.
         * 
         * @return builder
         * 
         */
        public Builder diskPoolName(String diskPoolName) {
            return diskPoolName(Output.of(diskPoolName));
        }

        /**
         * @param iscsiTargetName The name of the iSCSI target.
         * 
         * @return builder
         * 
         */
        public Builder iscsiTargetName(@Nullable Output<String> iscsiTargetName) {
            $.iscsiTargetName = iscsiTargetName;
            return this;
        }

        /**
         * @param iscsiTargetName The name of the iSCSI target.
         * 
         * @return builder
         * 
         */
        public Builder iscsiTargetName(String iscsiTargetName) {
            return iscsiTargetName(Output.of(iscsiTargetName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param targetIqn iSCSI target IQN (iSCSI Qualified Name); example: &#34;iqn.2005-03.org.iscsi:server&#34;.
         * 
         * @return builder
         * 
         */
        public Builder targetIqn(@Nullable Output<String> targetIqn) {
            $.targetIqn = targetIqn;
            return this;
        }

        /**
         * @param targetIqn iSCSI target IQN (iSCSI Qualified Name); example: &#34;iqn.2005-03.org.iscsi:server&#34;.
         * 
         * @return builder
         * 
         */
        public Builder targetIqn(String targetIqn) {
            return targetIqn(Output.of(targetIqn));
        }

        /**
         * @param tpgs List of iSCSI target portal groups. Can have 1 portal group at most.
         * 
         * @return builder
         * 
         */
        public Builder tpgs(Output<List<TargetPortalGroupCreateArgs>> tpgs) {
            $.tpgs = tpgs;
            return this;
        }

        /**
         * @param tpgs List of iSCSI target portal groups. Can have 1 portal group at most.
         * 
         * @return builder
         * 
         */
        public Builder tpgs(List<TargetPortalGroupCreateArgs> tpgs) {
            return tpgs(Output.of(tpgs));
        }

        /**
         * @param tpgs List of iSCSI target portal groups. Can have 1 portal group at most.
         * 
         * @return builder
         * 
         */
        public Builder tpgs(TargetPortalGroupCreateArgs... tpgs) {
            return tpgs(List.of(tpgs));
        }

        public IscsiTargetArgs build() {
            $.diskPoolName = Objects.requireNonNull($.diskPoolName, "expected parameter 'diskPoolName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.tpgs = Objects.requireNonNull($.tpgs, "expected parameter 'tpgs' to be non-null");
            return $;
        }
    }

}
