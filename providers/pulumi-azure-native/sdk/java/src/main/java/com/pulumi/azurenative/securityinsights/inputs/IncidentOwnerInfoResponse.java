// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Information on the user an incident is assigned to
 * 
 */
public final class IncidentOwnerInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final IncidentOwnerInfoResponse Empty = new IncidentOwnerInfoResponse();

    /**
     * The name of the user the incident is assigned to.
     * 
     */
    @Import(name="assignedTo")
    private @Nullable String assignedTo;

    /**
     * @return The name of the user the incident is assigned to.
     * 
     */
    public Optional<String> assignedTo() {
        return Optional.ofNullable(this.assignedTo);
    }

    /**
     * The email of the user the incident is assigned to.
     * 
     */
    @Import(name="email")
    private @Nullable String email;

    /**
     * @return The email of the user the incident is assigned to.
     * 
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * The object id of the user the incident is assigned to.
     * 
     */
    @Import(name="objectId")
    private @Nullable String objectId;

    /**
     * @return The object id of the user the incident is assigned to.
     * 
     */
    public Optional<String> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * The user principal name of the user the incident is assigned to.
     * 
     */
    @Import(name="userPrincipalName")
    private @Nullable String userPrincipalName;

    /**
     * @return The user principal name of the user the incident is assigned to.
     * 
     */
    public Optional<String> userPrincipalName() {
        return Optional.ofNullable(this.userPrincipalName);
    }

    private IncidentOwnerInfoResponse() {}

    private IncidentOwnerInfoResponse(IncidentOwnerInfoResponse $) {
        this.assignedTo = $.assignedTo;
        this.email = $.email;
        this.objectId = $.objectId;
        this.userPrincipalName = $.userPrincipalName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IncidentOwnerInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IncidentOwnerInfoResponse $;

        public Builder() {
            $ = new IncidentOwnerInfoResponse();
        }

        public Builder(IncidentOwnerInfoResponse defaults) {
            $ = new IncidentOwnerInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param assignedTo The name of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder assignedTo(@Nullable String assignedTo) {
            $.assignedTo = assignedTo;
            return this;
        }

        /**
         * @param email The email of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable String email) {
            $.email = email;
            return this;
        }

        /**
         * @param objectId The object id of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable String objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param userPrincipalName The user principal name of the user the incident is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder userPrincipalName(@Nullable String userPrincipalName) {
            $.userPrincipalName = userPrincipalName;
            return this;
        }

        public IncidentOwnerInfoResponse build() {
            return $;
        }
    }

}
