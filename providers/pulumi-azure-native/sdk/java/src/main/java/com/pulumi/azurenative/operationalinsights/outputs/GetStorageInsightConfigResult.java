// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights.outputs;

import com.pulumi.azurenative.operationalinsights.outputs.StorageAccountResponse;
import com.pulumi.azurenative.operationalinsights.outputs.StorageInsightStatusResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStorageInsightConfigResult {
    /**
     * @return The names of the blob containers that the workspace should read
     * 
     */
    private final @Nullable List<String> containers;
    /**
     * @return The ETag of the storage insight.
     * 
     */
    private final @Nullable String eTag;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * @return The name of the resource
     * 
     */
    private final String name;
    /**
     * @return The status of the storage insight
     * 
     */
    private final StorageInsightStatusResponse status;
    /**
     * @return The storage account connection details
     * 
     */
    private final StorageAccountResponse storageAccount;
    /**
     * @return The names of the Azure tables that the workspace should read
     * 
     */
    private final @Nullable List<String> tables;
    /**
     * @return Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetStorageInsightConfigResult(
        @CustomType.Parameter("containers") @Nullable List<String> containers,
        @CustomType.Parameter("eTag") @Nullable String eTag,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("status") StorageInsightStatusResponse status,
        @CustomType.Parameter("storageAccount") StorageAccountResponse storageAccount,
        @CustomType.Parameter("tables") @Nullable List<String> tables,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.containers = containers;
        this.eTag = eTag;
        this.id = id;
        this.name = name;
        this.status = status;
        this.storageAccount = storageAccount;
        this.tables = tables;
        this.tags = tags;
        this.type = type;
    }

    /**
     * @return The names of the blob containers that the workspace should read
     * 
     */
    public List<String> containers() {
        return this.containers == null ? List.of() : this.containers;
    }
    /**
     * @return The ETag of the storage insight.
     * 
     */
    public Optional<String> eTag() {
        return Optional.ofNullable(this.eTag);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of the storage insight
     * 
     */
    public StorageInsightStatusResponse status() {
        return this.status;
    }
    /**
     * @return The storage account connection details
     * 
     */
    public StorageAccountResponse storageAccount() {
        return this.storageAccount;
    }
    /**
     * @return The names of the Azure tables that the workspace should read
     * 
     */
    public List<String> tables() {
        return this.tables == null ? List.of() : this.tables;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStorageInsightConfigResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> containers;
        private @Nullable String eTag;
        private String id;
        private String name;
        private StorageInsightStatusResponse status;
        private StorageAccountResponse storageAccount;
        private @Nullable List<String> tables;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStorageInsightConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containers = defaults.containers;
    	      this.eTag = defaults.eTag;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.storageAccount = defaults.storageAccount;
    	      this.tables = defaults.tables;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder containers(@Nullable List<String> containers) {
            this.containers = containers;
            return this;
        }
        public Builder containers(String... containers) {
            return containers(List.of(containers));
        }
        public Builder eTag(@Nullable String eTag) {
            this.eTag = eTag;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder status(StorageInsightStatusResponse status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder storageAccount(StorageAccountResponse storageAccount) {
            this.storageAccount = Objects.requireNonNull(storageAccount);
            return this;
        }
        public Builder tables(@Nullable List<String> tables) {
            this.tables = tables;
            return this;
        }
        public Builder tables(String... tables) {
            return tables(List.of(tables));
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetStorageInsightConfigResult build() {
            return new GetStorageInsightConfigResult(containers, eTag, id, name, status, storageAccount, tables, tags, type);
        }
    }
}
