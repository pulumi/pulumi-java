// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.CopyActivityLogSettingsResponse;
import com.pulumi.azurenative.datafactory.inputs.LogLocationSettingsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Log settings.
 * 
 */
public final class LogSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final LogSettingsResponse Empty = new LogSettingsResponse();

    /**
     * Specifies settings for copy activity log.
     * 
     */
    @Import(name="copyActivityLogSettings")
    private @Nullable CopyActivityLogSettingsResponse copyActivityLogSettings;

    /**
     * @return Specifies settings for copy activity log.
     * 
     */
    public Optional<CopyActivityLogSettingsResponse> copyActivityLogSettings() {
        return Optional.ofNullable(this.copyActivityLogSettings);
    }

    /**
     * Specifies whether to enable copy activity log. Type: boolean (or Expression with resultType boolean).
     * 
     */
    @Import(name="enableCopyActivityLog")
    private @Nullable Object enableCopyActivityLog;

    /**
     * @return Specifies whether to enable copy activity log. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Object> enableCopyActivityLog() {
        return Optional.ofNullable(this.enableCopyActivityLog);
    }

    /**
     * Log location settings customer needs to provide when enabling log.
     * 
     */
    @Import(name="logLocationSettings", required=true)
    private LogLocationSettingsResponse logLocationSettings;

    /**
     * @return Log location settings customer needs to provide when enabling log.
     * 
     */
    public LogLocationSettingsResponse logLocationSettings() {
        return this.logLocationSettings;
    }

    private LogSettingsResponse() {}

    private LogSettingsResponse(LogSettingsResponse $) {
        this.copyActivityLogSettings = $.copyActivityLogSettings;
        this.enableCopyActivityLog = $.enableCopyActivityLog;
        this.logLocationSettings = $.logLocationSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogSettingsResponse $;

        public Builder() {
            $ = new LogSettingsResponse();
        }

        public Builder(LogSettingsResponse defaults) {
            $ = new LogSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param copyActivityLogSettings Specifies settings for copy activity log.
         * 
         * @return builder
         * 
         */
        public Builder copyActivityLogSettings(@Nullable CopyActivityLogSettingsResponse copyActivityLogSettings) {
            $.copyActivityLogSettings = copyActivityLogSettings;
            return this;
        }

        /**
         * @param enableCopyActivityLog Specifies whether to enable copy activity log. Type: boolean (or Expression with resultType boolean).
         * 
         * @return builder
         * 
         */
        public Builder enableCopyActivityLog(@Nullable Object enableCopyActivityLog) {
            $.enableCopyActivityLog = enableCopyActivityLog;
            return this;
        }

        /**
         * @param logLocationSettings Log location settings customer needs to provide when enabling log.
         * 
         * @return builder
         * 
         */
        public Builder logLocationSettings(LogLocationSettingsResponse logLocationSettings) {
            $.logLocationSettings = logLocationSettings;
            return this;
        }

        public LogSettingsResponse build() {
            $.logLocationSettings = Objects.requireNonNull($.logLocationSettings, "expected parameter 'logLocationSettings' to be non-null");
            return $;
        }
    }

}
