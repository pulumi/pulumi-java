// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.enums.DiskAccountType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * InMageRcm disk input.
 * 
 */
public final class InMageRcmDisksDefaultInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final InMageRcmDisksDefaultInputArgs Empty = new InMageRcmDisksDefaultInputArgs();

    /**
     * The disk encryption set ARM Id.
     * 
     */
    @Import(name="diskEncryptionSetId")
    private @Nullable Output<String> diskEncryptionSetId;

    public Optional<Output<String>> diskEncryptionSetId() {
        return Optional.ofNullable(this.diskEncryptionSetId);
    }

    /**
     * The disk type.
     * 
     */
    @Import(name="diskType")
    private @Nullable Output<Either<String,DiskAccountType>> diskType;

    public Optional<Output<Either<String,DiskAccountType>>> diskType() {
        return Optional.ofNullable(this.diskType);
    }

    /**
     * The log storage account ARM Id.
     * 
     */
    @Import(name="logStorageAccountId")
    private @Nullable Output<String> logStorageAccountId;

    public Optional<Output<String>> logStorageAccountId() {
        return Optional.ofNullable(this.logStorageAccountId);
    }

    private InMageRcmDisksDefaultInputArgs() {}

    private InMageRcmDisksDefaultInputArgs(InMageRcmDisksDefaultInputArgs $) {
        this.diskEncryptionSetId = $.diskEncryptionSetId;
        this.diskType = $.diskType;
        this.logStorageAccountId = $.logStorageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InMageRcmDisksDefaultInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InMageRcmDisksDefaultInputArgs $;

        public Builder() {
            $ = new InMageRcmDisksDefaultInputArgs();
        }

        public Builder(InMageRcmDisksDefaultInputArgs defaults) {
            $ = new InMageRcmDisksDefaultInputArgs(Objects.requireNonNull(defaults));
        }

        public Builder diskEncryptionSetId(@Nullable Output<String> diskEncryptionSetId) {
            $.diskEncryptionSetId = diskEncryptionSetId;
            return this;
        }

        public Builder diskEncryptionSetId(String diskEncryptionSetId) {
            return diskEncryptionSetId(Output.of(diskEncryptionSetId));
        }

        public Builder diskType(@Nullable Output<Either<String,DiskAccountType>> diskType) {
            $.diskType = diskType;
            return this;
        }

        public Builder diskType(Either<String,DiskAccountType> diskType) {
            return diskType(Output.of(diskType));
        }

        public Builder logStorageAccountId(@Nullable Output<String> logStorageAccountId) {
            $.logStorageAccountId = logStorageAccountId;
            return this;
        }

        public Builder logStorageAccountId(String logStorageAccountId) {
            return logStorageAccountId(Output.of(logStorageAccountId));
        }

        public InMageRcmDisksDefaultInputArgs build() {
            return $;
        }
    }

}
