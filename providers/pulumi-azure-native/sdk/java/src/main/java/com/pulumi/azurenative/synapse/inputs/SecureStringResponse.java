// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Azure Synapse secure string definition. The string value will be masked with asterisks &#39;*&#39; during Get or List API calls.
 * 
 */
public final class SecureStringResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecureStringResponse Empty = new SecureStringResponse();

    /**
     * Type of the secret.
     * Expected value is &#39;SecureString&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    /**
     * Value of secure string.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    public String value() {
        return this.value;
    }

    private SecureStringResponse() {}

    private SecureStringResponse(SecureStringResponse $) {
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecureStringResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecureStringResponse $;

        public Builder() {
            $ = new SecureStringResponse();
        }

        public Builder(SecureStringResponse defaults) {
            $ = new SecureStringResponse(Objects.requireNonNull(defaults));
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public SecureStringResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
