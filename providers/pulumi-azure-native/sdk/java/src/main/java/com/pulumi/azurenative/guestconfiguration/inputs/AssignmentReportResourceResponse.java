// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.guestconfiguration.inputs;

import com.pulumi.azurenative.guestconfiguration.inputs.AssignmentReportResourceComplianceReasonResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The guest configuration assignment resource.
 * 
 */
public final class AssignmentReportResourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final AssignmentReportResourceResponse Empty = new AssignmentReportResourceResponse();

    /**
     * A value indicating compliance status of the machine for the assigned guest configuration.
     * 
     */
    @Import(name="complianceStatus", required=true)
    private String complianceStatus;

    /**
     * @return A value indicating compliance status of the machine for the assigned guest configuration.
     * 
     */
    public String complianceStatus() {
        return this.complianceStatus;
    }

    /**
     * Properties of a guest configuration assignment resource.
     * 
     */
    @Import(name="properties", required=true)
    private Object properties;

    /**
     * @return Properties of a guest configuration assignment resource.
     * 
     */
    public Object properties() {
        return this.properties;
    }

    /**
     * Compliance reason and reason code for a resource.
     * 
     */
    @Import(name="reasons")
    private @Nullable List<AssignmentReportResourceComplianceReasonResponse> reasons;

    /**
     * @return Compliance reason and reason code for a resource.
     * 
     */
    public Optional<List<AssignmentReportResourceComplianceReasonResponse>> reasons() {
        return Optional.ofNullable(this.reasons);
    }

    /**
     * Name of the guest configuration assignment resource setting.
     * 
     */
    @Import(name="resourceId", required=true)
    private String resourceId;

    /**
     * @return Name of the guest configuration assignment resource setting.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }

    private AssignmentReportResourceResponse() {}

    private AssignmentReportResourceResponse(AssignmentReportResourceResponse $) {
        this.complianceStatus = $.complianceStatus;
        this.properties = $.properties;
        this.reasons = $.reasons;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssignmentReportResourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssignmentReportResourceResponse $;

        public Builder() {
            $ = new AssignmentReportResourceResponse();
        }

        public Builder(AssignmentReportResourceResponse defaults) {
            $ = new AssignmentReportResourceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param complianceStatus A value indicating compliance status of the machine for the assigned guest configuration.
         * 
         * @return builder
         * 
         */
        public Builder complianceStatus(String complianceStatus) {
            $.complianceStatus = complianceStatus;
            return this;
        }

        /**
         * @param properties Properties of a guest configuration assignment resource.
         * 
         * @return builder
         * 
         */
        public Builder properties(Object properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param reasons Compliance reason and reason code for a resource.
         * 
         * @return builder
         * 
         */
        public Builder reasons(@Nullable List<AssignmentReportResourceComplianceReasonResponse> reasons) {
            $.reasons = reasons;
            return this;
        }

        /**
         * @param reasons Compliance reason and reason code for a resource.
         * 
         * @return builder
         * 
         */
        public Builder reasons(AssignmentReportResourceComplianceReasonResponse... reasons) {
            return reasons(List.of(reasons));
        }

        /**
         * @param resourceId Name of the guest configuration assignment resource setting.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public AssignmentReportResourceResponse build() {
            $.complianceStatus = Objects.requireNonNull($.complianceStatus, "expected parameter 'complianceStatus' to be non-null");
            $.properties = Objects.requireNonNull($.properties, "expected parameter 'properties' to be non-null");
            $.resourceId = Objects.requireNonNull($.resourceId, "expected parameter 'resourceId' to be non-null");
            return $;
        }
    }

}
