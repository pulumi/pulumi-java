// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.importexport.inputs;

import com.pulumi.azurenative.importexport.enums.EncryptionKekType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies the encryption key properties
 * 
 */
public final class EncryptionKeyDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EncryptionKeyDetailsArgs Empty = new EncryptionKeyDetailsArgs();

    /**
     * The type of kek encryption key
     * 
     */
    @Import(name="kekType")
    private @Nullable Output<Either<String,EncryptionKekType>> kekType;

    /**
     * @return The type of kek encryption key
     * 
     */
    public Optional<Output<Either<String,EncryptionKekType>>> kekType() {
        return Optional.ofNullable(this.kekType);
    }

    /**
     * Specifies the url for kek encryption key.
     * 
     */
    @Import(name="kekUrl")
    private @Nullable Output<String> kekUrl;

    /**
     * @return Specifies the url for kek encryption key.
     * 
     */
    public Optional<Output<String>> kekUrl() {
        return Optional.ofNullable(this.kekUrl);
    }

    /**
     * Specifies the keyvault resource id for kek encryption key.
     * 
     */
    @Import(name="kekVaultResourceID")
    private @Nullable Output<String> kekVaultResourceID;

    /**
     * @return Specifies the keyvault resource id for kek encryption key.
     * 
     */
    public Optional<Output<String>> kekVaultResourceID() {
        return Optional.ofNullable(this.kekVaultResourceID);
    }

    private EncryptionKeyDetailsArgs() {}

    private EncryptionKeyDetailsArgs(EncryptionKeyDetailsArgs $) {
        this.kekType = $.kekType;
        this.kekUrl = $.kekUrl;
        this.kekVaultResourceID = $.kekVaultResourceID;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionKeyDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionKeyDetailsArgs $;

        public Builder() {
            $ = new EncryptionKeyDetailsArgs();
        }

        public Builder(EncryptionKeyDetailsArgs defaults) {
            $ = new EncryptionKeyDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kekType The type of kek encryption key
         * 
         * @return builder
         * 
         */
        public Builder kekType(@Nullable Output<Either<String,EncryptionKekType>> kekType) {
            $.kekType = kekType;
            return this;
        }

        /**
         * @param kekType The type of kek encryption key
         * 
         * @return builder
         * 
         */
        public Builder kekType(Either<String,EncryptionKekType> kekType) {
            return kekType(Output.of(kekType));
        }

        /**
         * @param kekType The type of kek encryption key
         * 
         * @return builder
         * 
         */
        public Builder kekType(String kekType) {
            return kekType(Either.ofLeft(kekType));
        }

        /**
         * @param kekType The type of kek encryption key
         * 
         * @return builder
         * 
         */
        public Builder kekType(EncryptionKekType kekType) {
            return kekType(Either.ofRight(kekType));
        }

        /**
         * @param kekUrl Specifies the url for kek encryption key.
         * 
         * @return builder
         * 
         */
        public Builder kekUrl(@Nullable Output<String> kekUrl) {
            $.kekUrl = kekUrl;
            return this;
        }

        /**
         * @param kekUrl Specifies the url for kek encryption key.
         * 
         * @return builder
         * 
         */
        public Builder kekUrl(String kekUrl) {
            return kekUrl(Output.of(kekUrl));
        }

        /**
         * @param kekVaultResourceID Specifies the keyvault resource id for kek encryption key.
         * 
         * @return builder
         * 
         */
        public Builder kekVaultResourceID(@Nullable Output<String> kekVaultResourceID) {
            $.kekVaultResourceID = kekVaultResourceID;
            return this;
        }

        /**
         * @param kekVaultResourceID Specifies the keyvault resource id for kek encryption key.
         * 
         * @return builder
         * 
         */
        public Builder kekVaultResourceID(String kekVaultResourceID) {
            return kekVaultResourceID(Output.of(kekVaultResourceID));
        }

        public EncryptionKeyDetailsArgs build() {
            $.kekType = Codegen.stringProp("kekType").left(EncryptionKekType.class).output().arg($.kekType).def("MicrosoftManaged").getNullable();
            return $;
        }
    }

}
