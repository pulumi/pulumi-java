// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.enums.PossibleOperationsDirections;
import com.pulumi.azurenative.recoveryservices.enums.ReplicationProtectedItemOperation;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Recovery plan action details.
 * 
 */
public final class RecoveryPlanActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecoveryPlanActionArgs Empty = new RecoveryPlanActionArgs();

    /**
     * The action name.
     * 
     */
    @Import(name="actionName", required=true)
    private Output<String> actionName;

    /**
     * @return The action name.
     * 
     */
    public Output<String> actionName() {
        return this.actionName;
    }

    /**
     * The list of failover directions.
     * 
     */
    @Import(name="failoverDirections", required=true)
    private Output<List<Either<String,PossibleOperationsDirections>>> failoverDirections;

    /**
     * @return The list of failover directions.
     * 
     */
    public Output<List<Either<String,PossibleOperationsDirections>>> failoverDirections() {
        return this.failoverDirections;
    }

    /**
     * The list of failover types.
     * 
     */
    @Import(name="failoverTypes", required=true)
    private Output<List<Either<String,ReplicationProtectedItemOperation>>> failoverTypes;

    /**
     * @return The list of failover types.
     * 
     */
    public Output<List<Either<String,ReplicationProtectedItemOperation>>> failoverTypes() {
        return this.failoverTypes;
    }

    private RecoveryPlanActionArgs() {}

    private RecoveryPlanActionArgs(RecoveryPlanActionArgs $) {
        this.actionName = $.actionName;
        this.failoverDirections = $.failoverDirections;
        this.failoverTypes = $.failoverTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecoveryPlanActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecoveryPlanActionArgs $;

        public Builder() {
            $ = new RecoveryPlanActionArgs();
        }

        public Builder(RecoveryPlanActionArgs defaults) {
            $ = new RecoveryPlanActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionName The action name.
         * 
         * @return builder
         * 
         */
        public Builder actionName(Output<String> actionName) {
            $.actionName = actionName;
            return this;
        }

        /**
         * @param actionName The action name.
         * 
         * @return builder
         * 
         */
        public Builder actionName(String actionName) {
            return actionName(Output.of(actionName));
        }

        /**
         * @param failoverDirections The list of failover directions.
         * 
         * @return builder
         * 
         */
        public Builder failoverDirections(Output<List<Either<String,PossibleOperationsDirections>>> failoverDirections) {
            $.failoverDirections = failoverDirections;
            return this;
        }

        /**
         * @param failoverDirections The list of failover directions.
         * 
         * @return builder
         * 
         */
        public Builder failoverDirections(List<Either<String,PossibleOperationsDirections>> failoverDirections) {
            return failoverDirections(Output.of(failoverDirections));
        }

        /**
         * @param failoverDirections The list of failover directions.
         * 
         * @return builder
         * 
         */
        public Builder failoverDirections(Either<String,PossibleOperationsDirections>... failoverDirections) {
            return failoverDirections(List.of(failoverDirections));
        }

        /**
         * @param failoverTypes The list of failover types.
         * 
         * @return builder
         * 
         */
        public Builder failoverTypes(Output<List<Either<String,ReplicationProtectedItemOperation>>> failoverTypes) {
            $.failoverTypes = failoverTypes;
            return this;
        }

        /**
         * @param failoverTypes The list of failover types.
         * 
         * @return builder
         * 
         */
        public Builder failoverTypes(List<Either<String,ReplicationProtectedItemOperation>> failoverTypes) {
            return failoverTypes(Output.of(failoverTypes));
        }

        /**
         * @param failoverTypes The list of failover types.
         * 
         * @return builder
         * 
         */
        public Builder failoverTypes(Either<String,ReplicationProtectedItemOperation>... failoverTypes) {
            return failoverTypes(List.of(failoverTypes));
        }

        public RecoveryPlanActionArgs build() {
            $.actionName = Objects.requireNonNull($.actionName, "expected parameter 'actionName' to be non-null");
            $.failoverDirections = Objects.requireNonNull($.failoverDirections, "expected parameter 'failoverDirections' to be non-null");
            $.failoverTypes = Objects.requireNonNull($.failoverTypes, "expected parameter 'failoverTypes' to be non-null");
            return $;
        }
    }

}
