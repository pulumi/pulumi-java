// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.elastic.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Details of the user&#39;s elastic account.
 * 
 */
public final class ElasticCloudUserResponse extends com.pulumi.resources.InvokeArgs {

    public static final ElasticCloudUserResponse Empty = new ElasticCloudUserResponse();

    /**
     * Elastic cloud default dashboard sso URL of the Elastic user account.
     * 
     */
    @Import(name="elasticCloudSsoDefaultUrl", required=true)
    private String elasticCloudSsoDefaultUrl;

    /**
     * @return Elastic cloud default dashboard sso URL of the Elastic user account.
     * 
     */
    public String elasticCloudSsoDefaultUrl() {
        return this.elasticCloudSsoDefaultUrl;
    }

    /**
     * Email of the Elastic User Account.
     * 
     */
    @Import(name="emailAddress", required=true)
    private String emailAddress;

    /**
     * @return Email of the Elastic User Account.
     * 
     */
    public String emailAddress() {
        return this.emailAddress;
    }

    /**
     * User Id of the elastic account of the User.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return User Id of the elastic account of the User.
     * 
     */
    public String id() {
        return this.id;
    }

    private ElasticCloudUserResponse() {}

    private ElasticCloudUserResponse(ElasticCloudUserResponse $) {
        this.elasticCloudSsoDefaultUrl = $.elasticCloudSsoDefaultUrl;
        this.emailAddress = $.emailAddress;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElasticCloudUserResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElasticCloudUserResponse $;

        public Builder() {
            $ = new ElasticCloudUserResponse();
        }

        public Builder(ElasticCloudUserResponse defaults) {
            $ = new ElasticCloudUserResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param elasticCloudSsoDefaultUrl Elastic cloud default dashboard sso URL of the Elastic user account.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudSsoDefaultUrl(String elasticCloudSsoDefaultUrl) {
            $.elasticCloudSsoDefaultUrl = elasticCloudSsoDefaultUrl;
            return this;
        }

        /**
         * @param emailAddress Email of the Elastic User Account.
         * 
         * @return builder
         * 
         */
        public Builder emailAddress(String emailAddress) {
            $.emailAddress = emailAddress;
            return this;
        }

        /**
         * @param id User Id of the elastic account of the User.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public ElasticCloudUserResponse build() {
            $.elasticCloudSsoDefaultUrl = Objects.requireNonNull($.elasticCloudSsoDefaultUrl, "expected parameter 'elasticCloudSsoDefaultUrl' to be non-null");
            $.emailAddress = Objects.requireNonNull($.emailAddress, "expected parameter 'emailAddress' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
