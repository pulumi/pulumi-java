// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logz.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PlanDataResponse extends com.pulumi.resources.InvokeArgs {

    public static final PlanDataResponse Empty = new PlanDataResponse();

    /**
     * different billing cycles like MONTHLY/WEEKLY. this could be enum
     * 
     */
    @Import(name="billingCycle")
    private @Nullable String billingCycle;

    public Optional<String> billingCycle() {
        return Optional.ofNullable(this.billingCycle);
    }

    /**
     * date when plan was applied
     * 
     */
    @Import(name="effectiveDate")
    private @Nullable String effectiveDate;

    public Optional<String> effectiveDate() {
        return Optional.ofNullable(this.effectiveDate);
    }

    /**
     * plan id as published by Logz
     * 
     */
    @Import(name="planDetails")
    private @Nullable String planDetails;

    public Optional<String> planDetails() {
        return Optional.ofNullable(this.planDetails);
    }

    /**
     * different usage type like PAYG/COMMITTED. this could be enum
     * 
     */
    @Import(name="usageType")
    private @Nullable String usageType;

    public Optional<String> usageType() {
        return Optional.ofNullable(this.usageType);
    }

    private PlanDataResponse() {}

    private PlanDataResponse(PlanDataResponse $) {
        this.billingCycle = $.billingCycle;
        this.effectiveDate = $.effectiveDate;
        this.planDetails = $.planDetails;
        this.usageType = $.usageType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlanDataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlanDataResponse $;

        public Builder() {
            $ = new PlanDataResponse();
        }

        public Builder(PlanDataResponse defaults) {
            $ = new PlanDataResponse(Objects.requireNonNull(defaults));
        }

        public Builder billingCycle(@Nullable String billingCycle) {
            $.billingCycle = billingCycle;
            return this;
        }

        public Builder effectiveDate(@Nullable String effectiveDate) {
            $.effectiveDate = effectiveDate;
            return this;
        }

        public Builder planDetails(@Nullable String planDetails) {
            $.planDetails = planDetails;
            return this;
        }

        public Builder usageType(@Nullable String usageType) {
            $.usageType = usageType;
            return this;
        }

        public PlanDataResponse build() {
            return $;
        }
    }

}
