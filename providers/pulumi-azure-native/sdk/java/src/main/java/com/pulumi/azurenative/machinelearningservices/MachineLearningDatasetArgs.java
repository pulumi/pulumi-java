// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices;

import com.pulumi.azurenative.machinelearningservices.enums.DatasetType;
import com.pulumi.azurenative.machinelearningservices.inputs.DatasetCreateRequestParametersArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.DatasetCreateRequestRegistrationArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.DatasetCreateRequestTimeSeriesArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MachineLearningDatasetArgs extends com.pulumi.resources.ResourceArgs {

    public static final MachineLearningDatasetArgs Empty = new MachineLearningDatasetArgs();

    /**
     * The Dataset name.
     * 
     */
    @Import(name="datasetName")
    private @Nullable Output<String> datasetName;

    /**
     * @return The Dataset name.
     * 
     */
    public Optional<Output<String>> datasetName() {
        return Optional.ofNullable(this.datasetName);
    }

    /**
     * Specifies dataset type.
     * 
     */
    @Import(name="datasetType", required=true)
    private Output<Either<String,DatasetType>> datasetType;

    /**
     * @return Specifies dataset type.
     * 
     */
    public Output<Either<String,DatasetType>> datasetType() {
        return this.datasetType;
    }

    @Import(name="parameters", required=true)
    private Output<DatasetCreateRequestParametersArgs> parameters;

    public Output<DatasetCreateRequestParametersArgs> parameters() {
        return this.parameters;
    }

    @Import(name="registration", required=true)
    private Output<DatasetCreateRequestRegistrationArgs> registration;

    public Output<DatasetCreateRequestRegistrationArgs> registration() {
        return this.registration;
    }

    /**
     * Name of the resource group in which workspace is located.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group in which workspace is located.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Skip validation that ensures data can be loaded from the dataset before registration.
     * 
     */
    @Import(name="skipValidation")
    private @Nullable Output<Boolean> skipValidation;

    /**
     * @return Skip validation that ensures data can be loaded from the dataset before registration.
     * 
     */
    public Optional<Output<Boolean>> skipValidation() {
        return Optional.ofNullable(this.skipValidation);
    }

    @Import(name="timeSeries")
    private @Nullable Output<DatasetCreateRequestTimeSeriesArgs> timeSeries;

    public Optional<Output<DatasetCreateRequestTimeSeriesArgs>> timeSeries() {
        return Optional.ofNullable(this.timeSeries);
    }

    /**
     * Name of Azure Machine Learning workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    /**
     * @return Name of Azure Machine Learning workspace.
     * 
     */
    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private MachineLearningDatasetArgs() {}

    private MachineLearningDatasetArgs(MachineLearningDatasetArgs $) {
        this.datasetName = $.datasetName;
        this.datasetType = $.datasetType;
        this.parameters = $.parameters;
        this.registration = $.registration;
        this.resourceGroupName = $.resourceGroupName;
        this.skipValidation = $.skipValidation;
        this.timeSeries = $.timeSeries;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MachineLearningDatasetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MachineLearningDatasetArgs $;

        public Builder() {
            $ = new MachineLearningDatasetArgs();
        }

        public Builder(MachineLearningDatasetArgs defaults) {
            $ = new MachineLearningDatasetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetName The Dataset name.
         * 
         * @return builder
         * 
         */
        public Builder datasetName(@Nullable Output<String> datasetName) {
            $.datasetName = datasetName;
            return this;
        }

        /**
         * @param datasetName The Dataset name.
         * 
         * @return builder
         * 
         */
        public Builder datasetName(String datasetName) {
            return datasetName(Output.of(datasetName));
        }

        /**
         * @param datasetType Specifies dataset type.
         * 
         * @return builder
         * 
         */
        public Builder datasetType(Output<Either<String,DatasetType>> datasetType) {
            $.datasetType = datasetType;
            return this;
        }

        /**
         * @param datasetType Specifies dataset type.
         * 
         * @return builder
         * 
         */
        public Builder datasetType(Either<String,DatasetType> datasetType) {
            return datasetType(Output.of(datasetType));
        }

        /**
         * @param datasetType Specifies dataset type.
         * 
         * @return builder
         * 
         */
        public Builder datasetType(String datasetType) {
            return datasetType(Either.ofLeft(datasetType));
        }

        /**
         * @param datasetType Specifies dataset type.
         * 
         * @return builder
         * 
         */
        public Builder datasetType(DatasetType datasetType) {
            return datasetType(Either.ofRight(datasetType));
        }

        public Builder parameters(Output<DatasetCreateRequestParametersArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(DatasetCreateRequestParametersArgs parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder registration(Output<DatasetCreateRequestRegistrationArgs> registration) {
            $.registration = registration;
            return this;
        }

        public Builder registration(DatasetCreateRequestRegistrationArgs registration) {
            return registration(Output.of(registration));
        }

        /**
         * @param resourceGroupName Name of the resource group in which workspace is located.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group in which workspace is located.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skipValidation Skip validation that ensures data can be loaded from the dataset before registration.
         * 
         * @return builder
         * 
         */
        public Builder skipValidation(@Nullable Output<Boolean> skipValidation) {
            $.skipValidation = skipValidation;
            return this;
        }

        /**
         * @param skipValidation Skip validation that ensures data can be loaded from the dataset before registration.
         * 
         * @return builder
         * 
         */
        public Builder skipValidation(Boolean skipValidation) {
            return skipValidation(Output.of(skipValidation));
        }

        public Builder timeSeries(@Nullable Output<DatasetCreateRequestTimeSeriesArgs> timeSeries) {
            $.timeSeries = timeSeries;
            return this;
        }

        public Builder timeSeries(DatasetCreateRequestTimeSeriesArgs timeSeries) {
            return timeSeries(Output.of(timeSeries));
        }

        /**
         * @param workspaceName Name of Azure Machine Learning workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        /**
         * @param workspaceName Name of Azure Machine Learning workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public MachineLearningDatasetArgs build() {
            $.datasetType = Objects.requireNonNull($.datasetType, "expected parameter 'datasetType' to be non-null");
            $.parameters = Objects.requireNonNull($.parameters, "expected parameter 'parameters' to be non-null");
            $.registration = Objects.requireNonNull($.registration, "expected parameter 'registration' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.skipValidation = Codegen.booleanProp("skipValidation").output().arg($.skipValidation).def(false).getNullable();
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
