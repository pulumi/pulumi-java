// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Gets or sets private link service connection state.
 * 
 */
public final class VaultPrivateLinkServiceConnectionStateResponse extends com.pulumi.resources.InvokeArgs {

    public static final VaultPrivateLinkServiceConnectionStateResponse Empty = new VaultPrivateLinkServiceConnectionStateResponse();

    /**
     * Gets or sets actions required.
     * 
     */
    @Import(name="actionsRequired", required=true)
    private String actionsRequired;

    /**
     * @return Gets or sets actions required.
     * 
     */
    public String actionsRequired() {
        return this.actionsRequired;
    }

    /**
     * Gets or sets description.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return Gets or sets description.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * Gets or sets the status.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Gets or sets the status.
     * 
     */
    public String status() {
        return this.status;
    }

    private VaultPrivateLinkServiceConnectionStateResponse() {}

    private VaultPrivateLinkServiceConnectionStateResponse(VaultPrivateLinkServiceConnectionStateResponse $) {
        this.actionsRequired = $.actionsRequired;
        this.description = $.description;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VaultPrivateLinkServiceConnectionStateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VaultPrivateLinkServiceConnectionStateResponse $;

        public Builder() {
            $ = new VaultPrivateLinkServiceConnectionStateResponse();
        }

        public Builder(VaultPrivateLinkServiceConnectionStateResponse defaults) {
            $ = new VaultPrivateLinkServiceConnectionStateResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionsRequired Gets or sets actions required.
         * 
         * @return builder
         * 
         */
        public Builder actionsRequired(String actionsRequired) {
            $.actionsRequired = actionsRequired;
            return this;
        }

        /**
         * @param description Gets or sets description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param status Gets or sets the status.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public VaultPrivateLinkServiceConnectionStateResponse build() {
            $.actionsRequired = Objects.requireNonNull($.actionsRequired, "expected parameter 'actionsRequired' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
