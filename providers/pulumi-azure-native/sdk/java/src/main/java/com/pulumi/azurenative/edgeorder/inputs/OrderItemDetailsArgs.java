// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.inputs;

import com.pulumi.azurenative.edgeorder.enums.OrderItemType;
import com.pulumi.azurenative.edgeorder.inputs.PreferencesArgs;
import com.pulumi.azurenative.edgeorder.inputs.ProductDetailsArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Order item details
 * 
 */
public final class OrderItemDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrderItemDetailsArgs Empty = new OrderItemDetailsArgs();

    /**
     * Additional notification email list
     * 
     */
    @Import(name="notificationEmailList")
    private @Nullable Output<List<String>> notificationEmailList;

    /**
     * @return Additional notification email list
     * 
     */
    public Optional<Output<List<String>>> notificationEmailList() {
        return Optional.ofNullable(this.notificationEmailList);
    }

    /**
     * Order item type.
     * 
     */
    @Import(name="orderItemType", required=true)
    private Output<Either<String,OrderItemType>> orderItemType;

    /**
     * @return Order item type.
     * 
     */
    public Output<Either<String,OrderItemType>> orderItemType() {
        return this.orderItemType;
    }

    /**
     * Customer notification Preferences
     * 
     */
    @Import(name="preferences")
    private @Nullable Output<PreferencesArgs> preferences;

    /**
     * @return Customer notification Preferences
     * 
     */
    public Optional<Output<PreferencesArgs>> preferences() {
        return Optional.ofNullable(this.preferences);
    }

    /**
     * Unique identifier for configuration.
     * 
     */
    @Import(name="productDetails", required=true)
    private Output<ProductDetailsArgs> productDetails;

    /**
     * @return Unique identifier for configuration.
     * 
     */
    public Output<ProductDetailsArgs> productDetails() {
        return this.productDetails;
    }

    private OrderItemDetailsArgs() {}

    private OrderItemDetailsArgs(OrderItemDetailsArgs $) {
        this.notificationEmailList = $.notificationEmailList;
        this.orderItemType = $.orderItemType;
        this.preferences = $.preferences;
        this.productDetails = $.productDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrderItemDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrderItemDetailsArgs $;

        public Builder() {
            $ = new OrderItemDetailsArgs();
        }

        public Builder(OrderItemDetailsArgs defaults) {
            $ = new OrderItemDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param notificationEmailList Additional notification email list
         * 
         * @return builder
         * 
         */
        public Builder notificationEmailList(@Nullable Output<List<String>> notificationEmailList) {
            $.notificationEmailList = notificationEmailList;
            return this;
        }

        /**
         * @param notificationEmailList Additional notification email list
         * 
         * @return builder
         * 
         */
        public Builder notificationEmailList(List<String> notificationEmailList) {
            return notificationEmailList(Output.of(notificationEmailList));
        }

        /**
         * @param notificationEmailList Additional notification email list
         * 
         * @return builder
         * 
         */
        public Builder notificationEmailList(String... notificationEmailList) {
            return notificationEmailList(List.of(notificationEmailList));
        }

        /**
         * @param orderItemType Order item type.
         * 
         * @return builder
         * 
         */
        public Builder orderItemType(Output<Either<String,OrderItemType>> orderItemType) {
            $.orderItemType = orderItemType;
            return this;
        }

        /**
         * @param orderItemType Order item type.
         * 
         * @return builder
         * 
         */
        public Builder orderItemType(Either<String,OrderItemType> orderItemType) {
            return orderItemType(Output.of(orderItemType));
        }

        /**
         * @param orderItemType Order item type.
         * 
         * @return builder
         * 
         */
        public Builder orderItemType(String orderItemType) {
            return orderItemType(Either.ofLeft(orderItemType));
        }

        /**
         * @param orderItemType Order item type.
         * 
         * @return builder
         * 
         */
        public Builder orderItemType(OrderItemType orderItemType) {
            return orderItemType(Either.ofRight(orderItemType));
        }

        /**
         * @param preferences Customer notification Preferences
         * 
         * @return builder
         * 
         */
        public Builder preferences(@Nullable Output<PreferencesArgs> preferences) {
            $.preferences = preferences;
            return this;
        }

        /**
         * @param preferences Customer notification Preferences
         * 
         * @return builder
         * 
         */
        public Builder preferences(PreferencesArgs preferences) {
            return preferences(Output.of(preferences));
        }

        /**
         * @param productDetails Unique identifier for configuration.
         * 
         * @return builder
         * 
         */
        public Builder productDetails(Output<ProductDetailsArgs> productDetails) {
            $.productDetails = productDetails;
            return this;
        }

        /**
         * @param productDetails Unique identifier for configuration.
         * 
         * @return builder
         * 
         */
        public Builder productDetails(ProductDetailsArgs productDetails) {
            return productDetails(Output.of(productDetails));
        }

        public OrderItemDetailsArgs build() {
            $.orderItemType = Objects.requireNonNull($.orderItemType, "expected parameter 'orderItemType' to be non-null");
            $.productDetails = Objects.requireNonNull($.productDetails, "expected parameter 'productDetails' to be non-null");
            return $;
        }
    }

}
