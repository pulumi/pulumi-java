// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn;

import com.pulumi.azurenative.cdn.enums.EnabledState;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AFDEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final AFDEndpointArgs Empty = new AFDEndpointArgs();

    /**
     * Whether to enable use of this rule. Permitted values are &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
     */
    @Import(name="enabledState")
    private @Nullable Output<Either<String,EnabledState>> enabledState;

    public Optional<Output<Either<String,EnabledState>>> enabledState() {
        return Optional.ofNullable(this.enabledState);
    }

    /**
     * Name of the endpoint under the profile which is unique globally.
     * 
     */
    @Import(name="endpointName")
    private @Nullable Output<String> endpointName;

    public Optional<Output<String>> endpointName() {
        return Optional.ofNullable(this.endpointName);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.
     * 
     */
    @Import(name="originResponseTimeoutSeconds")
    private @Nullable Output<Integer> originResponseTimeoutSeconds;

    public Optional<Output<Integer>> originResponseTimeoutSeconds() {
        return Optional.ofNullable(this.originResponseTimeoutSeconds);
    }

    /**
     * Name of the CDN profile which is unique within the resource group.
     * 
     */
    @Import(name="profileName", required=true)
    private Output<String> profileName;

    public Output<String> profileName() {
        return this.profileName;
    }

    /**
     * Name of the Resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AFDEndpointArgs() {}

    private AFDEndpointArgs(AFDEndpointArgs $) {
        this.enabledState = $.enabledState;
        this.endpointName = $.endpointName;
        this.location = $.location;
        this.originResponseTimeoutSeconds = $.originResponseTimeoutSeconds;
        this.profileName = $.profileName;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AFDEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AFDEndpointArgs $;

        public Builder() {
            $ = new AFDEndpointArgs();
        }

        public Builder(AFDEndpointArgs defaults) {
            $ = new AFDEndpointArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabledState(@Nullable Output<Either<String,EnabledState>> enabledState) {
            $.enabledState = enabledState;
            return this;
        }

        public Builder enabledState(Either<String,EnabledState> enabledState) {
            return enabledState(Output.of(enabledState));
        }

        public Builder enabledState(String enabledState) {
            return enabledState(Either.ofLeft(enabledState));
        }

        public Builder enabledState(EnabledState enabledState) {
            return enabledState(Either.ofRight(enabledState));
        }

        public Builder endpointName(@Nullable Output<String> endpointName) {
            $.endpointName = endpointName;
            return this;
        }

        public Builder endpointName(String endpointName) {
            return endpointName(Output.of(endpointName));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder originResponseTimeoutSeconds(@Nullable Output<Integer> originResponseTimeoutSeconds) {
            $.originResponseTimeoutSeconds = originResponseTimeoutSeconds;
            return this;
        }

        public Builder originResponseTimeoutSeconds(Integer originResponseTimeoutSeconds) {
            return originResponseTimeoutSeconds(Output.of(originResponseTimeoutSeconds));
        }

        public Builder profileName(Output<String> profileName) {
            $.profileName = profileName;
            return this;
        }

        public Builder profileName(String profileName) {
            return profileName(Output.of(profileName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public AFDEndpointArgs build() {
            $.profileName = Objects.requireNonNull($.profileName, "expected parameter 'profileName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
