// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.ApiOAuthSettingsParameterResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * OAuth settings for the connection provider
 * 
 */
public final class ApiOAuthSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApiOAuthSettingsResponse Empty = new ApiOAuthSettingsResponse();

    /**
     * Resource provider client id
     * 
     */
    @Import(name="clientId")
    private @Nullable String clientId;

    /**
     * @return Resource provider client id
     * 
     */
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Client Secret needed for OAuth
     * 
     */
    @Import(name="clientSecret")
    private @Nullable String clientSecret;

    /**
     * @return Client Secret needed for OAuth
     * 
     */
    public Optional<String> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * OAuth parameters key is the name of parameter
     * 
     */
    @Import(name="customParameters")
    private @Nullable Map<String,ApiOAuthSettingsParameterResponse> customParameters;

    /**
     * @return OAuth parameters key is the name of parameter
     * 
     */
    public Optional<Map<String,ApiOAuthSettingsParameterResponse>> customParameters() {
        return Optional.ofNullable(this.customParameters);
    }

    /**
     * Identity provider
     * 
     */
    @Import(name="identityProvider")
    private @Nullable String identityProvider;

    /**
     * @return Identity provider
     * 
     */
    public Optional<String> identityProvider() {
        return Optional.ofNullable(this.identityProvider);
    }

    /**
     * Read only properties for this oauth setting.
     * 
     */
    @Import(name="properties")
    private @Nullable Object properties;

    /**
     * @return Read only properties for this oauth setting.
     * 
     */
    public Optional<Object> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Url
     * 
     */
    @Import(name="redirectUrl")
    private @Nullable String redirectUrl;

    /**
     * @return Url
     * 
     */
    public Optional<String> redirectUrl() {
        return Optional.ofNullable(this.redirectUrl);
    }

    /**
     * OAuth scopes
     * 
     */
    @Import(name="scopes")
    private @Nullable List<String> scopes;

    /**
     * @return OAuth scopes
     * 
     */
    public Optional<List<String>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    private ApiOAuthSettingsResponse() {}

    private ApiOAuthSettingsResponse(ApiOAuthSettingsResponse $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.customParameters = $.customParameters;
        this.identityProvider = $.identityProvider;
        this.properties = $.properties;
        this.redirectUrl = $.redirectUrl;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiOAuthSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiOAuthSettingsResponse $;

        public Builder() {
            $ = new ApiOAuthSettingsResponse();
        }

        public Builder(ApiOAuthSettingsResponse defaults) {
            $ = new ApiOAuthSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId Resource provider client id
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable String clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientSecret Client Secret needed for OAuth
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable String clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param customParameters OAuth parameters key is the name of parameter
         * 
         * @return builder
         * 
         */
        public Builder customParameters(@Nullable Map<String,ApiOAuthSettingsParameterResponse> customParameters) {
            $.customParameters = customParameters;
            return this;
        }

        /**
         * @param identityProvider Identity provider
         * 
         * @return builder
         * 
         */
        public Builder identityProvider(@Nullable String identityProvider) {
            $.identityProvider = identityProvider;
            return this;
        }

        /**
         * @param properties Read only properties for this oauth setting.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Object properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param redirectUrl Url
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(@Nullable String redirectUrl) {
            $.redirectUrl = redirectUrl;
            return this;
        }

        /**
         * @param scopes OAuth scopes
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable List<String> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes OAuth scopes
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public ApiOAuthSettingsResponse build() {
            return $;
        }
    }

}
