// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resources.inputs;

import com.pulumi.azurenative.resources.enums.ExpressionEvaluationOptionsScopeType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies whether template expressions are evaluated within the scope of the parent template or nested template.
 * 
 */
public final class ExpressionEvaluationOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExpressionEvaluationOptionsArgs Empty = new ExpressionEvaluationOptionsArgs();

    /**
     * The scope to be used for evaluation of parameters, variables and functions in a nested template.
     * 
     */
    @Import(name="scope")
      private final @Nullable Output<Either<String,ExpressionEvaluationOptionsScopeType>> scope;

    public Output<Either<String,ExpressionEvaluationOptionsScopeType>> scope() {
        return this.scope == null ? Codegen.empty() : this.scope;
    }

    public ExpressionEvaluationOptionsArgs(@Nullable Output<Either<String,ExpressionEvaluationOptionsScopeType>> scope) {
        this.scope = scope;
    }

    private ExpressionEvaluationOptionsArgs() {
        this.scope = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExpressionEvaluationOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,ExpressionEvaluationOptionsScopeType>> scope;

        public Builder() {
    	      // Empty
        }

        public Builder(ExpressionEvaluationOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scope = defaults.scope;
        }

        public Builder scope(@Nullable Output<Either<String,ExpressionEvaluationOptionsScopeType>> scope) {
            this.scope = scope;
            return this;
        }
        public Builder scope(@Nullable Either<String,ExpressionEvaluationOptionsScopeType> scope) {
            this.scope = Codegen.ofNullable(scope);
            return this;
        }        public ExpressionEvaluationOptionsArgs build() {
            return new ExpressionEvaluationOptionsArgs(scope);
        }
    }
}
