// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.timeseriesinsights.inputs;

import com.pulumi.azurenative.timeseriesinsights.enums.PropertyType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The structure of the property that a time series id can have. An environment can have multiple such properties.
 * 
 */
public final class TimeSeriesIdPropertyArgs extends com.pulumi.resources.ResourceArgs {

    public static final TimeSeriesIdPropertyArgs Empty = new TimeSeriesIdPropertyArgs();

    /**
     * The name of the property.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the property.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The type of the property.
     * 
     */
    @Import(name="type")
    private @Nullable Output<Either<String,PropertyType>> type;

    /**
     * @return The type of the property.
     * 
     */
    public Optional<Output<Either<String,PropertyType>>> type() {
        return Optional.ofNullable(this.type);
    }

    private TimeSeriesIdPropertyArgs() {}

    private TimeSeriesIdPropertyArgs(TimeSeriesIdPropertyArgs $) {
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TimeSeriesIdPropertyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TimeSeriesIdPropertyArgs $;

        public Builder() {
            $ = new TimeSeriesIdPropertyArgs();
        }

        public Builder(TimeSeriesIdPropertyArgs defaults) {
            $ = new TimeSeriesIdPropertyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the property.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the property.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type The type of the property.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<Either<String,PropertyType>> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the property.
         * 
         * @return builder
         * 
         */
        public Builder type(Either<String,PropertyType> type) {
            return type(Output.of(type));
        }

        /**
         * @param type The type of the property.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Either.ofLeft(type));
        }

        /**
         * @param type The type of the property.
         * 
         * @return builder
         * 
         */
        public Builder type(PropertyType type) {
            return type(Either.ofRight(type));
        }

        public TimeSeriesIdPropertyArgs build() {
            return $;
        }
    }

}
