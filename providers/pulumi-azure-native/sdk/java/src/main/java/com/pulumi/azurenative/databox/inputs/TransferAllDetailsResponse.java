// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databox.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details to transfer all data.
 * 
 */
public final class TransferAllDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final TransferAllDetailsResponse Empty = new TransferAllDetailsResponse();

    /**
     * Type of the account of data
     * 
     */
    @Import(name="dataAccountType", required=true)
      private final String dataAccountType;

    public String dataAccountType() {
        return this.dataAccountType;
    }

    /**
     * To indicate if all Azure blobs have to be transferred
     * 
     */
    @Import(name="transferAllBlobs")
      private final @Nullable Boolean transferAllBlobs;

    public Optional<Boolean> transferAllBlobs() {
        return this.transferAllBlobs == null ? Optional.empty() : Optional.ofNullable(this.transferAllBlobs);
    }

    /**
     * To indicate if all Azure Files have to be transferred
     * 
     */
    @Import(name="transferAllFiles")
      private final @Nullable Boolean transferAllFiles;

    public Optional<Boolean> transferAllFiles() {
        return this.transferAllFiles == null ? Optional.empty() : Optional.ofNullable(this.transferAllFiles);
    }

    public TransferAllDetailsResponse(
        String dataAccountType,
        @Nullable Boolean transferAllBlobs,
        @Nullable Boolean transferAllFiles) {
        this.dataAccountType = dataAccountType == null ? "StorageAccount" : Objects.requireNonNull(dataAccountType, "expected parameter 'dataAccountType' to be non-null");
        this.transferAllBlobs = transferAllBlobs;
        this.transferAllFiles = transferAllFiles;
    }

    private TransferAllDetailsResponse() {
        this.dataAccountType = null;
        this.transferAllBlobs = null;
        this.transferAllFiles = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferAllDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dataAccountType;
        private @Nullable Boolean transferAllBlobs;
        private @Nullable Boolean transferAllFiles;

        public Builder() {
    	      // Empty
        }

        public Builder(TransferAllDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataAccountType = defaults.dataAccountType;
    	      this.transferAllBlobs = defaults.transferAllBlobs;
    	      this.transferAllFiles = defaults.transferAllFiles;
        }

        public Builder dataAccountType(String dataAccountType) {
            this.dataAccountType = Objects.requireNonNull(dataAccountType);
            return this;
        }
        public Builder transferAllBlobs(@Nullable Boolean transferAllBlobs) {
            this.transferAllBlobs = transferAllBlobs;
            return this;
        }
        public Builder transferAllFiles(@Nullable Boolean transferAllFiles) {
            this.transferAllFiles = transferAllFiles;
            return this;
        }        public TransferAllDetailsResponse build() {
            return new TransferAllDetailsResponse(dataAccountType, transferAllBlobs, transferAllFiles);
        }
    }
}
