// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.inputs;

import com.pulumi.azurenative.batch.inputs.AutoScaleSettingsArgs;
import com.pulumi.azurenative.batch.inputs.FixedScaleSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the desired size of the pool. This can either be &#39;fixedScale&#39; where the requested targetDedicatedNodes is specified, or &#39;autoScale&#39; which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.
 * 
 */
public final class ScaleSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScaleSettingsArgs Empty = new ScaleSettingsArgs();

    /**
     * This property and fixedScale are mutually exclusive and one of the properties must be specified.
     * 
     */
    @Import(name="autoScale")
    private @Nullable Output<AutoScaleSettingsArgs> autoScale;

    /**
     * @return This property and fixedScale are mutually exclusive and one of the properties must be specified.
     * 
     */
    public Optional<Output<AutoScaleSettingsArgs>> autoScale() {
        return Optional.ofNullable(this.autoScale);
    }

    /**
     * This property and autoScale are mutually exclusive and one of the properties must be specified.
     * 
     */
    @Import(name="fixedScale")
    private @Nullable Output<FixedScaleSettingsArgs> fixedScale;

    /**
     * @return This property and autoScale are mutually exclusive and one of the properties must be specified.
     * 
     */
    public Optional<Output<FixedScaleSettingsArgs>> fixedScale() {
        return Optional.ofNullable(this.fixedScale);
    }

    private ScaleSettingsArgs() {}

    private ScaleSettingsArgs(ScaleSettingsArgs $) {
        this.autoScale = $.autoScale;
        this.fixedScale = $.fixedScale;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScaleSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScaleSettingsArgs $;

        public Builder() {
            $ = new ScaleSettingsArgs();
        }

        public Builder(ScaleSettingsArgs defaults) {
            $ = new ScaleSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoScale This property and fixedScale are mutually exclusive and one of the properties must be specified.
         * 
         * @return builder
         * 
         */
        public Builder autoScale(@Nullable Output<AutoScaleSettingsArgs> autoScale) {
            $.autoScale = autoScale;
            return this;
        }

        /**
         * @param autoScale This property and fixedScale are mutually exclusive and one of the properties must be specified.
         * 
         * @return builder
         * 
         */
        public Builder autoScale(AutoScaleSettingsArgs autoScale) {
            return autoScale(Output.of(autoScale));
        }

        /**
         * @param fixedScale This property and autoScale are mutually exclusive and one of the properties must be specified.
         * 
         * @return builder
         * 
         */
        public Builder fixedScale(@Nullable Output<FixedScaleSettingsArgs> fixedScale) {
            $.fixedScale = fixedScale;
            return this;
        }

        /**
         * @param fixedScale This property and autoScale are mutually exclusive and one of the properties must be specified.
         * 
         * @return builder
         * 
         */
        public Builder fixedScale(FixedScaleSettingsArgs fixedScale) {
            return fixedScale(Output.of(fixedScale));
        }

        public ScaleSettingsArgs build() {
            return $;
        }
    }

}
