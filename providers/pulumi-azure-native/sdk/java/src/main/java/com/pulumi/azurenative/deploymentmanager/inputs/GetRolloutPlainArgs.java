// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deploymentmanager.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRolloutPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRolloutPlainArgs Empty = new GetRolloutPlainArgs();

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Rollout retry attempt ordinal to get the result of. If not specified, result of the latest attempt will be returned.
     * 
     */
    @Import(name="retryAttempt")
    private @Nullable Integer retryAttempt;

    /**
     * @return Rollout retry attempt ordinal to get the result of. If not specified, result of the latest attempt will be returned.
     * 
     */
    public Optional<Integer> retryAttempt() {
        return Optional.ofNullable(this.retryAttempt);
    }

    /**
     * The rollout name.
     * 
     */
    @Import(name="rolloutName", required=true)
    private String rolloutName;

    /**
     * @return The rollout name.
     * 
     */
    public String rolloutName() {
        return this.rolloutName;
    }

    private GetRolloutPlainArgs() {}

    private GetRolloutPlainArgs(GetRolloutPlainArgs $) {
        this.resourceGroupName = $.resourceGroupName;
        this.retryAttempt = $.retryAttempt;
        this.rolloutName = $.rolloutName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRolloutPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRolloutPlainArgs $;

        public Builder() {
            $ = new GetRolloutPlainArgs();
        }

        public Builder(GetRolloutPlainArgs defaults) {
            $ = new GetRolloutPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param retryAttempt Rollout retry attempt ordinal to get the result of. If not specified, result of the latest attempt will be returned.
         * 
         * @return builder
         * 
         */
        public Builder retryAttempt(@Nullable Integer retryAttempt) {
            $.retryAttempt = retryAttempt;
            return this;
        }

        /**
         * @param rolloutName The rollout name.
         * 
         * @return builder
         * 
         */
        public Builder rolloutName(String rolloutName) {
            $.rolloutName = rolloutName;
            return this;
        }

        public GetRolloutPlainArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.rolloutName = Objects.requireNonNull($.rolloutName, "expected parameter 'rolloutName' to be non-null");
            return $;
        }
    }

}
