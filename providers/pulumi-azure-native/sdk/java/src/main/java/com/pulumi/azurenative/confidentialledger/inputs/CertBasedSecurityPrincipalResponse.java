// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.confidentialledger.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Cert based security principal with Ledger RoleName
 * 
 */
public final class CertBasedSecurityPrincipalResponse extends com.pulumi.resources.InvokeArgs {

    public static final CertBasedSecurityPrincipalResponse Empty = new CertBasedSecurityPrincipalResponse();

    /**
     * Base64 encoded public key of the user cert (.pem or .cer)
     * 
     */
    @Import(name="cert")
    private @Nullable String cert;

    /**
     * @return Base64 encoded public key of the user cert (.pem or .cer)
     * 
     */
    public Optional<String> cert() {
        return Optional.ofNullable(this.cert);
    }

    /**
     * LedgerRole associated with the Security Principal of Ledger
     * 
     */
    @Import(name="ledgerRoleName")
    private @Nullable String ledgerRoleName;

    /**
     * @return LedgerRole associated with the Security Principal of Ledger
     * 
     */
    public Optional<String> ledgerRoleName() {
        return Optional.ofNullable(this.ledgerRoleName);
    }

    private CertBasedSecurityPrincipalResponse() {}

    private CertBasedSecurityPrincipalResponse(CertBasedSecurityPrincipalResponse $) {
        this.cert = $.cert;
        this.ledgerRoleName = $.ledgerRoleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertBasedSecurityPrincipalResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertBasedSecurityPrincipalResponse $;

        public Builder() {
            $ = new CertBasedSecurityPrincipalResponse();
        }

        public Builder(CertBasedSecurityPrincipalResponse defaults) {
            $ = new CertBasedSecurityPrincipalResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param cert Base64 encoded public key of the user cert (.pem or .cer)
         * 
         * @return builder
         * 
         */
        public Builder cert(@Nullable String cert) {
            $.cert = cert;
            return this;
        }

        /**
         * @param ledgerRoleName LedgerRole associated with the Security Principal of Ledger
         * 
         * @return builder
         * 
         */
        public Builder ledgerRoleName(@Nullable String ledgerRoleName) {
            $.ledgerRoleName = ledgerRoleName;
            return this;
        }

        public CertBasedSecurityPrincipalResponse build() {
            return $;
        }
    }

}
