// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.autonomousdevelopmentplatform.outputs;

import com.pulumi.azurenative.autonomousdevelopmentplatform.outputs.DataPoolLocationResponse;
import com.pulumi.azurenative.autonomousdevelopmentplatform.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDataPoolResult {
    /**
     * The Data Pool&#39;s data-plane ID
     * 
     */
    private final String dataPoolId;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * Gets or sets the collection of locations where Data Pool resources should be created
     * 
     */
    private final List<DataPoolLocationResponse> locations;
    /**
     * The name of the resource
     * 
     */
    private final String name;
    /**
     * Gets the status of the data pool at the time the operation was called
     * 
     */
    private final String provisioningState;
    /**
     * The system meta data relating to this resource
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetDataPoolResult(
        @CustomType.Parameter("dataPoolId") String dataPoolId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("locations") List<DataPoolLocationResponse> locations,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("type") String type) {
        this.dataPoolId = dataPoolId;
        this.id = id;
        this.locations = locations;
        this.name = name;
        this.provisioningState = provisioningState;
        this.systemData = systemData;
        this.type = type;
    }

    /**
     * The Data Pool&#39;s data-plane ID
     * 
    */
    public String dataPoolId() {
        return this.dataPoolId;
    }
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * Gets or sets the collection of locations where Data Pool resources should be created
     * 
    */
    public List<DataPoolLocationResponse> locations() {
        return this.locations;
    }
    /**
     * The name of the resource
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * Gets the status of the data pool at the time the operation was called
     * 
    */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * The system meta data relating to this resource
     * 
    */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
    */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataPoolResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dataPoolId;
        private String id;
        private List<DataPoolLocationResponse> locations;
        private String name;
        private String provisioningState;
        private SystemDataResponse systemData;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDataPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataPoolId = defaults.dataPoolId;
    	      this.id = defaults.id;
    	      this.locations = defaults.locations;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        public Builder dataPoolId(String dataPoolId) {
            this.dataPoolId = Objects.requireNonNull(dataPoolId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder locations(List<DataPoolLocationResponse> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }
        public Builder locations(DataPoolLocationResponse... locations) {
            return locations(List.of(locations));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetDataPoolResult build() {
            return new GetDataPoolResult(dataPoolId, id, locations, name, provisioningState, systemData, type);
        }
    }
}
