// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app;

import com.pulumi.azurenative.app.inputs.AppLogsConfigurationArgs;
import com.pulumi.azurenative.app.inputs.VnetConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedEnvironmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedEnvironmentArgs Empty = new ManagedEnvironmentArgs();

    /**
     * Cluster configuration which enables the log daemon to export
     * app logs to a destination. Currently only &#34;log-analytics&#34; is
     * supported
     * 
     */
    @Import(name="appLogsConfiguration")
    private @Nullable Output<AppLogsConfigurationArgs> appLogsConfiguration;

    /**
     * @return Cluster configuration which enables the log daemon to export
     * app logs to a destination. Currently only &#34;log-analytics&#34; is
     * supported
     * 
     */
    public Optional<Output<AppLogsConfigurationArgs>> appLogsConfiguration() {
        return Optional.ofNullable(this.appLogsConfiguration);
    }

    /**
     * Application Insights connection string used by Dapr to export Service to Service communication telemetry
     * 
     */
    @Import(name="daprAIConnectionString")
    private @Nullable Output<String> daprAIConnectionString;

    /**
     * @return Application Insights connection string used by Dapr to export Service to Service communication telemetry
     * 
     */
    public Optional<Output<String>> daprAIConnectionString() {
        return Optional.ofNullable(this.daprAIConnectionString);
    }

    /**
     * Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
     * 
     */
    @Import(name="daprAIInstrumentationKey")
    private @Nullable Output<String> daprAIInstrumentationKey;

    /**
     * @return Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
     * 
     */
    public Optional<Output<String>> daprAIInstrumentationKey() {
        return Optional.ofNullable(this.daprAIInstrumentationKey);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the Environment.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Environment.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Vnet configuration for the environment
     * 
     */
    @Import(name="vnetConfiguration")
    private @Nullable Output<VnetConfigurationArgs> vnetConfiguration;

    /**
     * @return Vnet configuration for the environment
     * 
     */
    public Optional<Output<VnetConfigurationArgs>> vnetConfiguration() {
        return Optional.ofNullable(this.vnetConfiguration);
    }

    /**
     * Whether or not this Managed Environment is zone-redundant.
     * 
     */
    @Import(name="zoneRedundant")
    private @Nullable Output<Boolean> zoneRedundant;

    /**
     * @return Whether or not this Managed Environment is zone-redundant.
     * 
     */
    public Optional<Output<Boolean>> zoneRedundant() {
        return Optional.ofNullable(this.zoneRedundant);
    }

    private ManagedEnvironmentArgs() {}

    private ManagedEnvironmentArgs(ManagedEnvironmentArgs $) {
        this.appLogsConfiguration = $.appLogsConfiguration;
        this.daprAIConnectionString = $.daprAIConnectionString;
        this.daprAIInstrumentationKey = $.daprAIInstrumentationKey;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.vnetConfiguration = $.vnetConfiguration;
        this.zoneRedundant = $.zoneRedundant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedEnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedEnvironmentArgs $;

        public Builder() {
            $ = new ManagedEnvironmentArgs();
        }

        public Builder(ManagedEnvironmentArgs defaults) {
            $ = new ManagedEnvironmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appLogsConfiguration Cluster configuration which enables the log daemon to export
         * app logs to a destination. Currently only &#34;log-analytics&#34; is
         * supported
         * 
         * @return builder
         * 
         */
        public Builder appLogsConfiguration(@Nullable Output<AppLogsConfigurationArgs> appLogsConfiguration) {
            $.appLogsConfiguration = appLogsConfiguration;
            return this;
        }

        /**
         * @param appLogsConfiguration Cluster configuration which enables the log daemon to export
         * app logs to a destination. Currently only &#34;log-analytics&#34; is
         * supported
         * 
         * @return builder
         * 
         */
        public Builder appLogsConfiguration(AppLogsConfigurationArgs appLogsConfiguration) {
            return appLogsConfiguration(Output.of(appLogsConfiguration));
        }

        /**
         * @param daprAIConnectionString Application Insights connection string used by Dapr to export Service to Service communication telemetry
         * 
         * @return builder
         * 
         */
        public Builder daprAIConnectionString(@Nullable Output<String> daprAIConnectionString) {
            $.daprAIConnectionString = daprAIConnectionString;
            return this;
        }

        /**
         * @param daprAIConnectionString Application Insights connection string used by Dapr to export Service to Service communication telemetry
         * 
         * @return builder
         * 
         */
        public Builder daprAIConnectionString(String daprAIConnectionString) {
            return daprAIConnectionString(Output.of(daprAIConnectionString));
        }

        /**
         * @param daprAIInstrumentationKey Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
         * 
         * @return builder
         * 
         */
        public Builder daprAIInstrumentationKey(@Nullable Output<String> daprAIInstrumentationKey) {
            $.daprAIInstrumentationKey = daprAIInstrumentationKey;
            return this;
        }

        /**
         * @param daprAIInstrumentationKey Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
         * 
         * @return builder
         * 
         */
        public Builder daprAIInstrumentationKey(String daprAIInstrumentationKey) {
            return daprAIInstrumentationKey(Output.of(daprAIInstrumentationKey));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Name of the Environment.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Environment.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vnetConfiguration Vnet configuration for the environment
         * 
         * @return builder
         * 
         */
        public Builder vnetConfiguration(@Nullable Output<VnetConfigurationArgs> vnetConfiguration) {
            $.vnetConfiguration = vnetConfiguration;
            return this;
        }

        /**
         * @param vnetConfiguration Vnet configuration for the environment
         * 
         * @return builder
         * 
         */
        public Builder vnetConfiguration(VnetConfigurationArgs vnetConfiguration) {
            return vnetConfiguration(Output.of(vnetConfiguration));
        }

        /**
         * @param zoneRedundant Whether or not this Managed Environment is zone-redundant.
         * 
         * @return builder
         * 
         */
        public Builder zoneRedundant(@Nullable Output<Boolean> zoneRedundant) {
            $.zoneRedundant = zoneRedundant;
            return this;
        }

        /**
         * @param zoneRedundant Whether or not this Managed Environment is zone-redundant.
         * 
         * @return builder
         * 
         */
        public Builder zoneRedundant(Boolean zoneRedundant) {
            return zoneRedundant(Output.of(zoneRedundant));
        }

        public ManagedEnvironmentArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
