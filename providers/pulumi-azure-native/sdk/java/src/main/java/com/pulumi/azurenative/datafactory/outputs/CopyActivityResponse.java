// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.ActivityDependencyResponse;
import com.pulumi.azurenative.datafactory.outputs.ActivityPolicyResponse;
import com.pulumi.azurenative.datafactory.outputs.AmazonMWSSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AmazonRdsForOracleSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AmazonRdsForSqlServerSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AmazonRedshiftSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AvroSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AvroSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureBlobFSSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureBlobFSSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureDataExplorerSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureDataExplorerSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureDataLakeStoreSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureDataLakeStoreSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureDatabricksDeltaLakeSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureDatabricksDeltaLakeSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureMariaDBSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureMySqlSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureMySqlSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AzurePostgreSqlSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AzurePostgreSqlSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureQueueSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureSearchIndexSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureSqlSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureSqlSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureTableSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureTableSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.BinarySinkResponse;
import com.pulumi.azurenative.datafactory.outputs.BinarySourceResponse;
import com.pulumi.azurenative.datafactory.outputs.BlobSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.BlobSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.CassandraSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.CommonDataServiceForAppsSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.CommonDataServiceForAppsSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.ConcurSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.CosmosDbMongoDbApiSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.CosmosDbMongoDbApiSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.CosmosDbSqlApiSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.CosmosDbSqlApiSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.CouchbaseSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.DatasetReferenceResponse;
import com.pulumi.azurenative.datafactory.outputs.Db2SourceResponse;
import com.pulumi.azurenative.datafactory.outputs.DelimitedTextSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.DelimitedTextSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.DocumentDbCollectionSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.DocumentDbCollectionSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.DrillSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.DynamicsAXSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.DynamicsCrmSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.DynamicsCrmSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.DynamicsSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.DynamicsSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.EloquaSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.ExcelSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.FileSystemSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.FileSystemSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.GoogleAdWordsSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.GoogleBigQuerySourceResponse;
import com.pulumi.azurenative.datafactory.outputs.GreenplumSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.HBaseSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.HdfsSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.HiveSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.HttpSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.HubspotSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.ImpalaSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.InformixSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.InformixSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.JiraSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.JsonSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.JsonSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.LinkedServiceReferenceResponse;
import com.pulumi.azurenative.datafactory.outputs.LogSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.LogStorageSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.MagentoSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.MariaDBSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.MarketoSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.MicrosoftAccessSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.MicrosoftAccessSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.MongoDbAtlasSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.MongoDbAtlasSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.MongoDbSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.MongoDbV2SinkResponse;
import com.pulumi.azurenative.datafactory.outputs.MongoDbV2SourceResponse;
import com.pulumi.azurenative.datafactory.outputs.MySqlSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.NetezzaSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.ODataSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.OdbcSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.OdbcSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.Office365SourceResponse;
import com.pulumi.azurenative.datafactory.outputs.OracleServiceCloudSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.OracleSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.OracleSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.OrcSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.OrcSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.ParquetSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.ParquetSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.PaypalSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.PhoenixSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.PostgreSqlSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.PrestoSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.QuickBooksSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.RedirectIncompatibleRowSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.RelationalSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.ResponsysSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.RestSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.RestSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SalesforceMarketingCloudSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SalesforceServiceCloudSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.SalesforceServiceCloudSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SalesforceSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.SalesforceSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SapBwSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SapCloudForCustomerSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.SapCloudForCustomerSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SapEccSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SapHanaSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SapOpenHubSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SapTableSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.ServiceNowSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SharePointOnlineListSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.ShopifySourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SkipErrorFileResponse;
import com.pulumi.azurenative.datafactory.outputs.SnowflakeSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.SnowflakeSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SparkSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SqlDWSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.SqlDWSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SqlMISinkResponse;
import com.pulumi.azurenative.datafactory.outputs.SqlMISourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SqlServerSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.SqlServerSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SqlSinkResponse;
import com.pulumi.azurenative.datafactory.outputs.SqlSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.SquareSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.StagingSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.SybaseSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.TabularSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.TeradataSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.UserPropertyResponse;
import com.pulumi.azurenative.datafactory.outputs.VerticaSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.WebSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.XeroSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.XmlSourceResponse;
import com.pulumi.azurenative.datafactory.outputs.ZohoSourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CopyActivityResponse {
    /**
     * @return Maximum number of data integration units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
     * 
     */
    private final @Nullable Object dataIntegrationUnits;
    /**
     * @return Activity depends on condition.
     * 
     */
    private final @Nullable List<ActivityDependencyResponse> dependsOn;
    /**
     * @return Activity description.
     * 
     */
    private final @Nullable String description;
    /**
     * @return Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
     * 
     */
    private final @Nullable Object enableSkipIncompatibleRow;
    /**
     * @return Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
     * 
     */
    private final @Nullable Object enableStaging;
    /**
     * @return List of inputs for the activity.
     * 
     */
    private final @Nullable List<DatasetReferenceResponse> inputs;
    /**
     * @return Linked service reference.
     * 
     */
    private final @Nullable LinkedServiceReferenceResponse linkedServiceName;
    /**
     * @return Log settings customer needs provide when enabling log.
     * 
     */
    private final @Nullable LogSettingsResponse logSettings;
    /**
     * @return (Deprecated. Please use LogSettings) Log storage settings customer need to provide when enabling session log.
     * 
     */
    private final @Nullable LogStorageSettingsResponse logStorageSettings;
    /**
     * @return Activity name.
     * 
     */
    private final String name;
    /**
     * @return List of outputs for the activity.
     * 
     */
    private final @Nullable List<DatasetReferenceResponse> outputs;
    /**
     * @return Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
     * 
     */
    private final @Nullable Object parallelCopies;
    /**
     * @return Activity policy.
     * 
     */
    private final @Nullable ActivityPolicyResponse policy;
    /**
     * @return Preserve rules.
     * 
     */
    private final @Nullable List<Object> preserve;
    /**
     * @return Preserve Rules.
     * 
     */
    private final @Nullable List<Object> preserveRules;
    /**
     * @return Redirect incompatible row settings when EnableSkipIncompatibleRow is true.
     * 
     */
    private final @Nullable RedirectIncompatibleRowSettingsResponse redirectIncompatibleRowSettings;
    /**
     * @return Copy activity sink.
     * 
     */
    private final Object sink;
    /**
     * @return Specify the fault tolerance for data consistency.
     * 
     */
    private final @Nullable SkipErrorFileResponse skipErrorFile;
    /**
     * @return Copy activity source.
     * 
     */
    private final Object source;
    /**
     * @return Specifies interim staging settings when EnableStaging is true.
     * 
     */
    private final @Nullable StagingSettingsResponse stagingSettings;
    /**
     * @return Copy activity translator. If not specified, tabular translator is used.
     * 
     */
    private final @Nullable Object translator;
    /**
     * @return Type of activity.
     * Expected value is &#39;Copy&#39;.
     * 
     */
    private final String type;
    /**
     * @return Activity user properties.
     * 
     */
    private final @Nullable List<UserPropertyResponse> userProperties;
    /**
     * @return Whether to enable Data Consistency validation. Type: boolean (or Expression with resultType boolean).
     * 
     */
    private final @Nullable Object validateDataConsistency;

    @CustomType.Constructor
    private CopyActivityResponse(
        @CustomType.Parameter("dataIntegrationUnits") @Nullable Object dataIntegrationUnits,
        @CustomType.Parameter("dependsOn") @Nullable List<ActivityDependencyResponse> dependsOn,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("enableSkipIncompatibleRow") @Nullable Object enableSkipIncompatibleRow,
        @CustomType.Parameter("enableStaging") @Nullable Object enableStaging,
        @CustomType.Parameter("inputs") @Nullable List<DatasetReferenceResponse> inputs,
        @CustomType.Parameter("linkedServiceName") @Nullable LinkedServiceReferenceResponse linkedServiceName,
        @CustomType.Parameter("logSettings") @Nullable LogSettingsResponse logSettings,
        @CustomType.Parameter("logStorageSettings") @Nullable LogStorageSettingsResponse logStorageSettings,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("outputs") @Nullable List<DatasetReferenceResponse> outputs,
        @CustomType.Parameter("parallelCopies") @Nullable Object parallelCopies,
        @CustomType.Parameter("policy") @Nullable ActivityPolicyResponse policy,
        @CustomType.Parameter("preserve") @Nullable List<Object> preserve,
        @CustomType.Parameter("preserveRules") @Nullable List<Object> preserveRules,
        @CustomType.Parameter("redirectIncompatibleRowSettings") @Nullable RedirectIncompatibleRowSettingsResponse redirectIncompatibleRowSettings,
        @CustomType.Parameter("sink") Object sink,
        @CustomType.Parameter("skipErrorFile") @Nullable SkipErrorFileResponse skipErrorFile,
        @CustomType.Parameter("source") Object source,
        @CustomType.Parameter("stagingSettings") @Nullable StagingSettingsResponse stagingSettings,
        @CustomType.Parameter("translator") @Nullable Object translator,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("userProperties") @Nullable List<UserPropertyResponse> userProperties,
        @CustomType.Parameter("validateDataConsistency") @Nullable Object validateDataConsistency) {
        this.dataIntegrationUnits = dataIntegrationUnits;
        this.dependsOn = dependsOn;
        this.description = description;
        this.enableSkipIncompatibleRow = enableSkipIncompatibleRow;
        this.enableStaging = enableStaging;
        this.inputs = inputs;
        this.linkedServiceName = linkedServiceName;
        this.logSettings = logSettings;
        this.logStorageSettings = logStorageSettings;
        this.name = name;
        this.outputs = outputs;
        this.parallelCopies = parallelCopies;
        this.policy = policy;
        this.preserve = preserve;
        this.preserveRules = preserveRules;
        this.redirectIncompatibleRowSettings = redirectIncompatibleRowSettings;
        this.sink = sink;
        this.skipErrorFile = skipErrorFile;
        this.source = source;
        this.stagingSettings = stagingSettings;
        this.translator = translator;
        this.type = type;
        this.userProperties = userProperties;
        this.validateDataConsistency = validateDataConsistency;
    }

    /**
     * @return Maximum number of data integration units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
     * 
     */
    public Optional<Object> dataIntegrationUnits() {
        return Optional.ofNullable(this.dataIntegrationUnits);
    }
    /**
     * @return Activity depends on condition.
     * 
     */
    public List<ActivityDependencyResponse> dependsOn() {
        return this.dependsOn == null ? List.of() : this.dependsOn;
    }
    /**
     * @return Activity description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Object> enableSkipIncompatibleRow() {
        return Optional.ofNullable(this.enableSkipIncompatibleRow);
    }
    /**
     * @return Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Object> enableStaging() {
        return Optional.ofNullable(this.enableStaging);
    }
    /**
     * @return List of inputs for the activity.
     * 
     */
    public List<DatasetReferenceResponse> inputs() {
        return this.inputs == null ? List.of() : this.inputs;
    }
    /**
     * @return Linked service reference.
     * 
     */
    public Optional<LinkedServiceReferenceResponse> linkedServiceName() {
        return Optional.ofNullable(this.linkedServiceName);
    }
    /**
     * @return Log settings customer needs provide when enabling log.
     * 
     */
    public Optional<LogSettingsResponse> logSettings() {
        return Optional.ofNullable(this.logSettings);
    }
    /**
     * @return (Deprecated. Please use LogSettings) Log storage settings customer need to provide when enabling session log.
     * 
     */
    public Optional<LogStorageSettingsResponse> logStorageSettings() {
        return Optional.ofNullable(this.logStorageSettings);
    }
    /**
     * @return Activity name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of outputs for the activity.
     * 
     */
    public List<DatasetReferenceResponse> outputs() {
        return this.outputs == null ? List.of() : this.outputs;
    }
    /**
     * @return Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
     * 
     */
    public Optional<Object> parallelCopies() {
        return Optional.ofNullable(this.parallelCopies);
    }
    /**
     * @return Activity policy.
     * 
     */
    public Optional<ActivityPolicyResponse> policy() {
        return Optional.ofNullable(this.policy);
    }
    /**
     * @return Preserve rules.
     * 
     */
    public List<Object> preserve() {
        return this.preserve == null ? List.of() : this.preserve;
    }
    /**
     * @return Preserve Rules.
     * 
     */
    public List<Object> preserveRules() {
        return this.preserveRules == null ? List.of() : this.preserveRules;
    }
    /**
     * @return Redirect incompatible row settings when EnableSkipIncompatibleRow is true.
     * 
     */
    public Optional<RedirectIncompatibleRowSettingsResponse> redirectIncompatibleRowSettings() {
        return Optional.ofNullable(this.redirectIncompatibleRowSettings);
    }
    /**
     * @return Copy activity sink.
     * 
     */
    public Object sink() {
        return this.sink;
    }
    /**
     * @return Specify the fault tolerance for data consistency.
     * 
     */
    public Optional<SkipErrorFileResponse> skipErrorFile() {
        return Optional.ofNullable(this.skipErrorFile);
    }
    /**
     * @return Copy activity source.
     * 
     */
    public Object source() {
        return this.source;
    }
    /**
     * @return Specifies interim staging settings when EnableStaging is true.
     * 
     */
    public Optional<StagingSettingsResponse> stagingSettings() {
        return Optional.ofNullable(this.stagingSettings);
    }
    /**
     * @return Copy activity translator. If not specified, tabular translator is used.
     * 
     */
    public Optional<Object> translator() {
        return Optional.ofNullable(this.translator);
    }
    /**
     * @return Type of activity.
     * Expected value is &#39;Copy&#39;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Activity user properties.
     * 
     */
    public List<UserPropertyResponse> userProperties() {
        return this.userProperties == null ? List.of() : this.userProperties;
    }
    /**
     * @return Whether to enable Data Consistency validation. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Object> validateDataConsistency() {
        return Optional.ofNullable(this.validateDataConsistency);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CopyActivityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Object dataIntegrationUnits;
        private @Nullable List<ActivityDependencyResponse> dependsOn;
        private @Nullable String description;
        private @Nullable Object enableSkipIncompatibleRow;
        private @Nullable Object enableStaging;
        private @Nullable List<DatasetReferenceResponse> inputs;
        private @Nullable LinkedServiceReferenceResponse linkedServiceName;
        private @Nullable LogSettingsResponse logSettings;
        private @Nullable LogStorageSettingsResponse logStorageSettings;
        private String name;
        private @Nullable List<DatasetReferenceResponse> outputs;
        private @Nullable Object parallelCopies;
        private @Nullable ActivityPolicyResponse policy;
        private @Nullable List<Object> preserve;
        private @Nullable List<Object> preserveRules;
        private @Nullable RedirectIncompatibleRowSettingsResponse redirectIncompatibleRowSettings;
        private Object sink;
        private @Nullable SkipErrorFileResponse skipErrorFile;
        private Object source;
        private @Nullable StagingSettingsResponse stagingSettings;
        private @Nullable Object translator;
        private String type;
        private @Nullable List<UserPropertyResponse> userProperties;
        private @Nullable Object validateDataConsistency;

        public Builder() {
    	      // Empty
        }

        public Builder(CopyActivityResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataIntegrationUnits = defaults.dataIntegrationUnits;
    	      this.dependsOn = defaults.dependsOn;
    	      this.description = defaults.description;
    	      this.enableSkipIncompatibleRow = defaults.enableSkipIncompatibleRow;
    	      this.enableStaging = defaults.enableStaging;
    	      this.inputs = defaults.inputs;
    	      this.linkedServiceName = defaults.linkedServiceName;
    	      this.logSettings = defaults.logSettings;
    	      this.logStorageSettings = defaults.logStorageSettings;
    	      this.name = defaults.name;
    	      this.outputs = defaults.outputs;
    	      this.parallelCopies = defaults.parallelCopies;
    	      this.policy = defaults.policy;
    	      this.preserve = defaults.preserve;
    	      this.preserveRules = defaults.preserveRules;
    	      this.redirectIncompatibleRowSettings = defaults.redirectIncompatibleRowSettings;
    	      this.sink = defaults.sink;
    	      this.skipErrorFile = defaults.skipErrorFile;
    	      this.source = defaults.source;
    	      this.stagingSettings = defaults.stagingSettings;
    	      this.translator = defaults.translator;
    	      this.type = defaults.type;
    	      this.userProperties = defaults.userProperties;
    	      this.validateDataConsistency = defaults.validateDataConsistency;
        }

        public Builder dataIntegrationUnits(@Nullable Object dataIntegrationUnits) {
            this.dataIntegrationUnits = dataIntegrationUnits;
            return this;
        }
        public Builder dependsOn(@Nullable List<ActivityDependencyResponse> dependsOn) {
            this.dependsOn = dependsOn;
            return this;
        }
        public Builder dependsOn(ActivityDependencyResponse... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder enableSkipIncompatibleRow(@Nullable Object enableSkipIncompatibleRow) {
            this.enableSkipIncompatibleRow = enableSkipIncompatibleRow;
            return this;
        }
        public Builder enableStaging(@Nullable Object enableStaging) {
            this.enableStaging = enableStaging;
            return this;
        }
        public Builder inputs(@Nullable List<DatasetReferenceResponse> inputs) {
            this.inputs = inputs;
            return this;
        }
        public Builder inputs(DatasetReferenceResponse... inputs) {
            return inputs(List.of(inputs));
        }
        public Builder linkedServiceName(@Nullable LinkedServiceReferenceResponse linkedServiceName) {
            this.linkedServiceName = linkedServiceName;
            return this;
        }
        public Builder logSettings(@Nullable LogSettingsResponse logSettings) {
            this.logSettings = logSettings;
            return this;
        }
        public Builder logStorageSettings(@Nullable LogStorageSettingsResponse logStorageSettings) {
            this.logStorageSettings = logStorageSettings;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder outputs(@Nullable List<DatasetReferenceResponse> outputs) {
            this.outputs = outputs;
            return this;
        }
        public Builder outputs(DatasetReferenceResponse... outputs) {
            return outputs(List.of(outputs));
        }
        public Builder parallelCopies(@Nullable Object parallelCopies) {
            this.parallelCopies = parallelCopies;
            return this;
        }
        public Builder policy(@Nullable ActivityPolicyResponse policy) {
            this.policy = policy;
            return this;
        }
        public Builder preserve(@Nullable List<Object> preserve) {
            this.preserve = preserve;
            return this;
        }
        public Builder preserve(Object... preserve) {
            return preserve(List.of(preserve));
        }
        public Builder preserveRules(@Nullable List<Object> preserveRules) {
            this.preserveRules = preserveRules;
            return this;
        }
        public Builder preserveRules(Object... preserveRules) {
            return preserveRules(List.of(preserveRules));
        }
        public Builder redirectIncompatibleRowSettings(@Nullable RedirectIncompatibleRowSettingsResponse redirectIncompatibleRowSettings) {
            this.redirectIncompatibleRowSettings = redirectIncompatibleRowSettings;
            return this;
        }
        public Builder sink(Object sink) {
            this.sink = Objects.requireNonNull(sink);
            return this;
        }
        public Builder skipErrorFile(@Nullable SkipErrorFileResponse skipErrorFile) {
            this.skipErrorFile = skipErrorFile;
            return this;
        }
        public Builder source(Object source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        public Builder stagingSettings(@Nullable StagingSettingsResponse stagingSettings) {
            this.stagingSettings = stagingSettings;
            return this;
        }
        public Builder translator(@Nullable Object translator) {
            this.translator = translator;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder userProperties(@Nullable List<UserPropertyResponse> userProperties) {
            this.userProperties = userProperties;
            return this;
        }
        public Builder userProperties(UserPropertyResponse... userProperties) {
            return userProperties(List.of(userProperties));
        }
        public Builder validateDataConsistency(@Nullable Object validateDataConsistency) {
            this.validateDataConsistency = validateDataConsistency;
            return this;
        }        public CopyActivityResponse build() {
            return new CopyActivityResponse(dataIntegrationUnits, dependsOn, description, enableSkipIncompatibleRow, enableStaging, inputs, linkedServiceName, logSettings, logStorageSettings, name, outputs, parallelCopies, policy, preserve, preserveRules, redirectIncompatibleRowSettings, sink, skipErrorFile, source, stagingSettings, translator, type, userProperties, validateDataConsistency);
        }
    }
}
