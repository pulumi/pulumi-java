// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.inputs;

import com.pulumi.azurenative.containerservice.inputs.ContainerServiceSshConfigurationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Profile for Linux VMs in the container service cluster.
 * 
 */
public final class ContainerServiceLinuxProfileResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContainerServiceLinuxProfileResponse Empty = new ContainerServiceLinuxProfileResponse();

    /**
     * The administrator username to use for Linux VMs.
     * 
     */
    @Import(name="adminUsername", required=true)
    private String adminUsername;

    public String adminUsername() {
        return this.adminUsername;
    }

    /**
     * SSH configuration for Linux-based VMs running on Azure.
     * 
     */
    @Import(name="ssh", required=true)
    private ContainerServiceSshConfigurationResponse ssh;

    public ContainerServiceSshConfigurationResponse ssh() {
        return this.ssh;
    }

    private ContainerServiceLinuxProfileResponse() {}

    private ContainerServiceLinuxProfileResponse(ContainerServiceLinuxProfileResponse $) {
        this.adminUsername = $.adminUsername;
        this.ssh = $.ssh;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerServiceLinuxProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerServiceLinuxProfileResponse $;

        public Builder() {
            $ = new ContainerServiceLinuxProfileResponse();
        }

        public Builder(ContainerServiceLinuxProfileResponse defaults) {
            $ = new ContainerServiceLinuxProfileResponse(Objects.requireNonNull(defaults));
        }

        public Builder adminUsername(String adminUsername) {
            $.adminUsername = adminUsername;
            return this;
        }

        public Builder ssh(ContainerServiceSshConfigurationResponse ssh) {
            $.ssh = ssh;
            return this;
        }

        public ContainerServiceLinuxProfileResponse build() {
            $.adminUsername = Objects.requireNonNull($.adminUsername, "expected parameter 'adminUsername' to be non-null");
            $.ssh = Objects.requireNonNull($.ssh, "expected parameter 'ssh' to be non-null");
            return $;
        }
    }

}
