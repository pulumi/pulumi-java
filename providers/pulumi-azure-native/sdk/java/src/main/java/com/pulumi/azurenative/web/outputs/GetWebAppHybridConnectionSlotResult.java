// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWebAppHybridConnectionSlotResult {
    /**
     * The hostname of the endpoint.
     * 
     */
    private final @Nullable String hostname;
    /**
     * Resource Id.
     * 
     */
    private final String id;
    /**
     * Kind of resource.
     * 
     */
    private final @Nullable String kind;
    /**
     * Resource Name.
     * 
     */
    private final String name;
    /**
     * The port of the endpoint.
     * 
     */
    private final @Nullable Integer port;
    /**
     * The ARM URI to the Service Bus relay.
     * 
     */
    private final @Nullable String relayArmUri;
    /**
     * The name of the Service Bus relay.
     * 
     */
    private final @Nullable String relayName;
    /**
     * The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.
     * 
     */
    private final @Nullable String sendKeyName;
    /**
     * The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned
     * normally, use the POST /listKeys API instead.
     * 
     */
    private final @Nullable String sendKeyValue;
    /**
     * The name of the Service Bus namespace.
     * 
     */
    private final @Nullable String serviceBusNamespace;
    /**
     * The suffix for the service bus endpoint. By default this is .servicebus.windows.net
     * 
     */
    private final @Nullable String serviceBusSuffix;
    /**
     * Resource type.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetWebAppHybridConnectionSlotResult(
        @CustomType.Parameter("hostname") @Nullable String hostname,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("kind") @Nullable String kind,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("port") @Nullable Integer port,
        @CustomType.Parameter("relayArmUri") @Nullable String relayArmUri,
        @CustomType.Parameter("relayName") @Nullable String relayName,
        @CustomType.Parameter("sendKeyName") @Nullable String sendKeyName,
        @CustomType.Parameter("sendKeyValue") @Nullable String sendKeyValue,
        @CustomType.Parameter("serviceBusNamespace") @Nullable String serviceBusNamespace,
        @CustomType.Parameter("serviceBusSuffix") @Nullable String serviceBusSuffix,
        @CustomType.Parameter("type") String type) {
        this.hostname = hostname;
        this.id = id;
        this.kind = kind;
        this.name = name;
        this.port = port;
        this.relayArmUri = relayArmUri;
        this.relayName = relayName;
        this.sendKeyName = sendKeyName;
        this.sendKeyValue = sendKeyValue;
        this.serviceBusNamespace = serviceBusNamespace;
        this.serviceBusSuffix = serviceBusSuffix;
        this.type = type;
    }

    /**
     * The hostname of the endpoint.
     * 
    */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * Resource Id.
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * Kind of resource.
     * 
    */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * Resource Name.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * The port of the endpoint.
     * 
    */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * The ARM URI to the Service Bus relay.
     * 
    */
    public Optional<String> relayArmUri() {
        return Optional.ofNullable(this.relayArmUri);
    }
    /**
     * The name of the Service Bus relay.
     * 
    */
    public Optional<String> relayName() {
        return Optional.ofNullable(this.relayName);
    }
    /**
     * The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.
     * 
    */
    public Optional<String> sendKeyName() {
        return Optional.ofNullable(this.sendKeyName);
    }
    /**
     * The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned
     * normally, use the POST /listKeys API instead.
     * 
    */
    public Optional<String> sendKeyValue() {
        return Optional.ofNullable(this.sendKeyValue);
    }
    /**
     * The name of the Service Bus namespace.
     * 
    */
    public Optional<String> serviceBusNamespace() {
        return Optional.ofNullable(this.serviceBusNamespace);
    }
    /**
     * The suffix for the service bus endpoint. By default this is .servicebus.windows.net
     * 
    */
    public Optional<String> serviceBusSuffix() {
        return Optional.ofNullable(this.serviceBusSuffix);
    }
    /**
     * Resource type.
     * 
    */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebAppHybridConnectionSlotResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String hostname;
        private String id;
        private @Nullable String kind;
        private String name;
        private @Nullable Integer port;
        private @Nullable String relayArmUri;
        private @Nullable String relayName;
        private @Nullable String sendKeyName;
        private @Nullable String sendKeyValue;
        private @Nullable String serviceBusNamespace;
        private @Nullable String serviceBusSuffix;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWebAppHybridConnectionSlotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.port = defaults.port;
    	      this.relayArmUri = defaults.relayArmUri;
    	      this.relayName = defaults.relayName;
    	      this.sendKeyName = defaults.sendKeyName;
    	      this.sendKeyValue = defaults.sendKeyValue;
    	      this.serviceBusNamespace = defaults.serviceBusNamespace;
    	      this.serviceBusSuffix = defaults.serviceBusSuffix;
    	      this.type = defaults.type;
        }

        public Builder hostname(@Nullable String hostname) {
            this.hostname = hostname;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        public Builder relayArmUri(@Nullable String relayArmUri) {
            this.relayArmUri = relayArmUri;
            return this;
        }
        public Builder relayName(@Nullable String relayName) {
            this.relayName = relayName;
            return this;
        }
        public Builder sendKeyName(@Nullable String sendKeyName) {
            this.sendKeyName = sendKeyName;
            return this;
        }
        public Builder sendKeyValue(@Nullable String sendKeyValue) {
            this.sendKeyValue = sendKeyValue;
            return this;
        }
        public Builder serviceBusNamespace(@Nullable String serviceBusNamespace) {
            this.serviceBusNamespace = serviceBusNamespace;
            return this;
        }
        public Builder serviceBusSuffix(@Nullable String serviceBusSuffix) {
            this.serviceBusSuffix = serviceBusSuffix;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetWebAppHybridConnectionSlotResult build() {
            return new GetWebAppHybridConnectionSlotResult(hostname, id, kind, name, port, relayArmUri, relayName, sendKeyName, sendKeyValue, serviceBusNamespace, serviceBusSuffix, type);
        }
    }
}
