// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.azurenative.media.inputs.LiveEventInputTrackSelectionArgs;
import com.pulumi.azurenative.media.inputs.LiveEventOutputTranscriptionTrackArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the transcription tracks in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.
 * 
 */
public final class LiveEventTranscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LiveEventTranscriptionArgs Empty = new LiveEventTranscriptionArgs();

    /**
     * Provides a mechanism to select the audio track in the input live feed, to which speech-to-text transcription is applied. This property is reserved for future use, any value set on this property will be ignored.
     * 
     */
    @Import(name="inputTrackSelection")
    private @Nullable Output<List<LiveEventInputTrackSelectionArgs>> inputTrackSelection;

    /**
     * @return Provides a mechanism to select the audio track in the input live feed, to which speech-to-text transcription is applied. This property is reserved for future use, any value set on this property will be ignored.
     * 
     */
    public Optional<Output<List<LiveEventInputTrackSelectionArgs>>> inputTrackSelection() {
        return Optional.ofNullable(this.inputTrackSelection);
    }

    /**
     * Specifies the language (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: &#39;en-US&#39;). See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature and the list of supported languages.
     * 
     */
    @Import(name="language")
    private @Nullable Output<String> language;

    /**
     * @return Specifies the language (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: &#39;en-US&#39;). See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature and the list of supported languages.
     * 
     */
    public Optional<Output<String>> language() {
        return Optional.ofNullable(this.language);
    }

    /**
     * Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.
     * 
     */
    @Import(name="outputTranscriptionTrack")
    private @Nullable Output<LiveEventOutputTranscriptionTrackArgs> outputTranscriptionTrack;

    /**
     * @return Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.
     * 
     */
    public Optional<Output<LiveEventOutputTranscriptionTrackArgs>> outputTranscriptionTrack() {
        return Optional.ofNullable(this.outputTranscriptionTrack);
    }

    private LiveEventTranscriptionArgs() {}

    private LiveEventTranscriptionArgs(LiveEventTranscriptionArgs $) {
        this.inputTrackSelection = $.inputTrackSelection;
        this.language = $.language;
        this.outputTranscriptionTrack = $.outputTranscriptionTrack;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LiveEventTranscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LiveEventTranscriptionArgs $;

        public Builder() {
            $ = new LiveEventTranscriptionArgs();
        }

        public Builder(LiveEventTranscriptionArgs defaults) {
            $ = new LiveEventTranscriptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inputTrackSelection Provides a mechanism to select the audio track in the input live feed, to which speech-to-text transcription is applied. This property is reserved for future use, any value set on this property will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder inputTrackSelection(@Nullable Output<List<LiveEventInputTrackSelectionArgs>> inputTrackSelection) {
            $.inputTrackSelection = inputTrackSelection;
            return this;
        }

        /**
         * @param inputTrackSelection Provides a mechanism to select the audio track in the input live feed, to which speech-to-text transcription is applied. This property is reserved for future use, any value set on this property will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder inputTrackSelection(List<LiveEventInputTrackSelectionArgs> inputTrackSelection) {
            return inputTrackSelection(Output.of(inputTrackSelection));
        }

        /**
         * @param inputTrackSelection Provides a mechanism to select the audio track in the input live feed, to which speech-to-text transcription is applied. This property is reserved for future use, any value set on this property will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder inputTrackSelection(LiveEventInputTrackSelectionArgs... inputTrackSelection) {
            return inputTrackSelection(List.of(inputTrackSelection));
        }

        /**
         * @param language Specifies the language (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: &#39;en-US&#39;). See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature and the list of supported languages.
         * 
         * @return builder
         * 
         */
        public Builder language(@Nullable Output<String> language) {
            $.language = language;
            return this;
        }

        /**
         * @param language Specifies the language (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: &#39;en-US&#39;). See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature and the list of supported languages.
         * 
         * @return builder
         * 
         */
        public Builder language(String language) {
            return language(Output.of(language));
        }

        /**
         * @param outputTranscriptionTrack Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder outputTranscriptionTrack(@Nullable Output<LiveEventOutputTranscriptionTrackArgs> outputTranscriptionTrack) {
            $.outputTranscriptionTrack = outputTranscriptionTrack;
            return this;
        }

        /**
         * @param outputTranscriptionTrack Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder outputTranscriptionTrack(LiveEventOutputTranscriptionTrackArgs outputTranscriptionTrack) {
            return outputTranscriptionTrack(Output.of(outputTranscriptionTrack));
        }

        public LiveEventTranscriptionArgs build() {
            return $;
        }
    }

}
