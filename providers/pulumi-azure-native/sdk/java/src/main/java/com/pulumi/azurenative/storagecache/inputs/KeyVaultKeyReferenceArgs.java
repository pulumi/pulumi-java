// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagecache.inputs;

import com.pulumi.azurenative.storagecache.inputs.KeyVaultKeyReferenceSourceVaultArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Describes a reference to Key Vault Key.
 * 
 */
public final class KeyVaultKeyReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyVaultKeyReferenceArgs Empty = new KeyVaultKeyReferenceArgs();

    /**
     * The URL referencing a key encryption key in Key Vault.
     * 
     */
    @Import(name="keyUrl", required=true)
    private Output<String> keyUrl;

    /**
     * @return The URL referencing a key encryption key in Key Vault.
     * 
     */
    public Output<String> keyUrl() {
        return this.keyUrl;
    }

    /**
     * Describes a resource Id to source Key Vault.
     * 
     */
    @Import(name="sourceVault", required=true)
    private Output<KeyVaultKeyReferenceSourceVaultArgs> sourceVault;

    /**
     * @return Describes a resource Id to source Key Vault.
     * 
     */
    public Output<KeyVaultKeyReferenceSourceVaultArgs> sourceVault() {
        return this.sourceVault;
    }

    private KeyVaultKeyReferenceArgs() {}

    private KeyVaultKeyReferenceArgs(KeyVaultKeyReferenceArgs $) {
        this.keyUrl = $.keyUrl;
        this.sourceVault = $.sourceVault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyVaultKeyReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVaultKeyReferenceArgs $;

        public Builder() {
            $ = new KeyVaultKeyReferenceArgs();
        }

        public Builder(KeyVaultKeyReferenceArgs defaults) {
            $ = new KeyVaultKeyReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyUrl The URL referencing a key encryption key in Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyUrl(Output<String> keyUrl) {
            $.keyUrl = keyUrl;
            return this;
        }

        /**
         * @param keyUrl The URL referencing a key encryption key in Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyUrl(String keyUrl) {
            return keyUrl(Output.of(keyUrl));
        }

        /**
         * @param sourceVault Describes a resource Id to source Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder sourceVault(Output<KeyVaultKeyReferenceSourceVaultArgs> sourceVault) {
            $.sourceVault = sourceVault;
            return this;
        }

        /**
         * @param sourceVault Describes a resource Id to source Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder sourceVault(KeyVaultKeyReferenceSourceVaultArgs sourceVault) {
            return sourceVault(Output.of(sourceVault));
        }

        public KeyVaultKeyReferenceArgs build() {
            $.keyUrl = Objects.requireNonNull($.keyUrl, "expected parameter 'keyUrl' to be non-null");
            $.sourceVault = Objects.requireNonNull($.sourceVault, "expected parameter 'sourceVault' to be non-null");
            return $;
        }
    }

}
