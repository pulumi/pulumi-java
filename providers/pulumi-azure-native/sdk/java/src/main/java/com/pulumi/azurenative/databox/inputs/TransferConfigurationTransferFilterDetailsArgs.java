// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databox.inputs;

import com.pulumi.azurenative.databox.inputs.TransferFilterDetailsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
 * 
 */
public final class TransferConfigurationTransferFilterDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransferConfigurationTransferFilterDetailsArgs Empty = new TransferConfigurationTransferFilterDetailsArgs();

    /**
     * Details of the filtering the transfer of data.
     * 
     */
    @Import(name="include")
    private @Nullable Output<TransferFilterDetailsArgs> include;

    /**
     * @return Details of the filtering the transfer of data.
     * 
     */
    public Optional<Output<TransferFilterDetailsArgs>> include() {
        return Optional.ofNullable(this.include);
    }

    private TransferConfigurationTransferFilterDetailsArgs() {}

    private TransferConfigurationTransferFilterDetailsArgs(TransferConfigurationTransferFilterDetailsArgs $) {
        this.include = $.include;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransferConfigurationTransferFilterDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransferConfigurationTransferFilterDetailsArgs $;

        public Builder() {
            $ = new TransferConfigurationTransferFilterDetailsArgs();
        }

        public Builder(TransferConfigurationTransferFilterDetailsArgs defaults) {
            $ = new TransferConfigurationTransferFilterDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param include Details of the filtering the transfer of data.
         * 
         * @return builder
         * 
         */
        public Builder include(@Nullable Output<TransferFilterDetailsArgs> include) {
            $.include = include;
            return this;
        }

        /**
         * @param include Details of the filtering the transfer of data.
         * 
         * @return builder
         * 
         */
        public Builder include(TransferFilterDetailsArgs include) {
            return include(Output.of(include));
        }

        public TransferConfigurationTransferFilterDetailsArgs build() {
            return $;
        }
    }

}
