// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.enums.SetMultiVmSyncStatus;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A2A Policy creation input.
 * 
 */
public final class A2APolicyCreationInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final A2APolicyCreationInputArgs Empty = new A2APolicyCreationInputArgs();

    /**
     * The app consistent snapshot frequency (in minutes).
     * 
     */
    @Import(name="appConsistentFrequencyInMinutes")
    private @Nullable Output<Integer> appConsistentFrequencyInMinutes;

    public Optional<Output<Integer>> appConsistentFrequencyInMinutes() {
        return Optional.ofNullable(this.appConsistentFrequencyInMinutes);
    }

    /**
     * The crash consistent snapshot frequency (in minutes).
     * 
     */
    @Import(name="crashConsistentFrequencyInMinutes")
    private @Nullable Output<Integer> crashConsistentFrequencyInMinutes;

    public Optional<Output<Integer>> crashConsistentFrequencyInMinutes() {
        return Optional.ofNullable(this.crashConsistentFrequencyInMinutes);
    }

    /**
     * The class type.
     * Expected value is &#39;A2A&#39;.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * A value indicating whether multi-VM sync has to be enabled. Value should be &#39;Enabled&#39; or &#39;Disabled&#39;.
     * 
     */
    @Import(name="multiVmSyncStatus", required=true)
    private Output<Either<String,SetMultiVmSyncStatus>> multiVmSyncStatus;

    public Output<Either<String,SetMultiVmSyncStatus>> multiVmSyncStatus() {
        return this.multiVmSyncStatus;
    }

    /**
     * The duration in minutes until which the recovery points need to be stored.
     * 
     */
    @Import(name="recoveryPointHistory")
    private @Nullable Output<Integer> recoveryPointHistory;

    public Optional<Output<Integer>> recoveryPointHistory() {
        return Optional.ofNullable(this.recoveryPointHistory);
    }

    private A2APolicyCreationInputArgs() {}

    private A2APolicyCreationInputArgs(A2APolicyCreationInputArgs $) {
        this.appConsistentFrequencyInMinutes = $.appConsistentFrequencyInMinutes;
        this.crashConsistentFrequencyInMinutes = $.crashConsistentFrequencyInMinutes;
        this.instanceType = $.instanceType;
        this.multiVmSyncStatus = $.multiVmSyncStatus;
        this.recoveryPointHistory = $.recoveryPointHistory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(A2APolicyCreationInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private A2APolicyCreationInputArgs $;

        public Builder() {
            $ = new A2APolicyCreationInputArgs();
        }

        public Builder(A2APolicyCreationInputArgs defaults) {
            $ = new A2APolicyCreationInputArgs(Objects.requireNonNull(defaults));
        }

        public Builder appConsistentFrequencyInMinutes(@Nullable Output<Integer> appConsistentFrequencyInMinutes) {
            $.appConsistentFrequencyInMinutes = appConsistentFrequencyInMinutes;
            return this;
        }

        public Builder appConsistentFrequencyInMinutes(Integer appConsistentFrequencyInMinutes) {
            return appConsistentFrequencyInMinutes(Output.of(appConsistentFrequencyInMinutes));
        }

        public Builder crashConsistentFrequencyInMinutes(@Nullable Output<Integer> crashConsistentFrequencyInMinutes) {
            $.crashConsistentFrequencyInMinutes = crashConsistentFrequencyInMinutes;
            return this;
        }

        public Builder crashConsistentFrequencyInMinutes(Integer crashConsistentFrequencyInMinutes) {
            return crashConsistentFrequencyInMinutes(Output.of(crashConsistentFrequencyInMinutes));
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder multiVmSyncStatus(Output<Either<String,SetMultiVmSyncStatus>> multiVmSyncStatus) {
            $.multiVmSyncStatus = multiVmSyncStatus;
            return this;
        }

        public Builder multiVmSyncStatus(Either<String,SetMultiVmSyncStatus> multiVmSyncStatus) {
            return multiVmSyncStatus(Output.of(multiVmSyncStatus));
        }

        public Builder multiVmSyncStatus(String multiVmSyncStatus) {
            return multiVmSyncStatus(Either.ofLeft(multiVmSyncStatus));
        }

        public Builder multiVmSyncStatus(SetMultiVmSyncStatus multiVmSyncStatus) {
            return multiVmSyncStatus(Either.ofRight(multiVmSyncStatus));
        }

        public Builder recoveryPointHistory(@Nullable Output<Integer> recoveryPointHistory) {
            $.recoveryPointHistory = recoveryPointHistory;
            return this;
        }

        public Builder recoveryPointHistory(Integer recoveryPointHistory) {
            return recoveryPointHistory(Output.of(recoveryPointHistory));
        }

        public A2APolicyCreationInputArgs build() {
            $.instanceType = Codegen.stringProp("instanceType").output().arg($.instanceType).getNullable();
            $.multiVmSyncStatus = Objects.requireNonNull($.multiVmSyncStatus, "expected parameter 'multiVmSyncStatus' to be non-null");
            return $;
        }
    }

}
