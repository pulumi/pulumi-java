// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ThrottlingMetricResponse {
    private final @Nullable String interval;
    private final Double limit;
    private final String type;

    @CustomType.Constructor
    private ThrottlingMetricResponse(
        @CustomType.Parameter("interval") @Nullable String interval,
        @CustomType.Parameter("limit") Double limit,
        @CustomType.Parameter("type") String type) {
        this.interval = interval;
        this.limit = limit;
        this.type = type;
    }

    public Optional<String> interval() {
        return Optional.ofNullable(this.interval);
    }
    public Double limit() {
        return this.limit;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThrottlingMetricResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String interval;
        private Double limit;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ThrottlingMetricResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interval = defaults.interval;
    	      this.limit = defaults.limit;
    	      this.type = defaults.type;
        }

        public Builder interval(@Nullable String interval) {
            this.interval = interval;
            return this;
        }
        public Builder limit(Double limit) {
            this.limit = Objects.requireNonNull(limit);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public ThrottlingMetricResponse build() {
            return new ThrottlingMetricResponse(interval, limit, type);
        }
    }
}
