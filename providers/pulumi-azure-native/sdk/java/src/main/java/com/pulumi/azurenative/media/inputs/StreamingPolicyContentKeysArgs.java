// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.azurenative.media.inputs.DefaultKeyArgs;
import com.pulumi.azurenative.media.inputs.StreamingPolicyContentKeyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Class to specify properties of all content keys in Streaming Policy
 * 
 */
public final class StreamingPolicyContentKeysArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamingPolicyContentKeysArgs Empty = new StreamingPolicyContentKeysArgs();

    /**
     * Default content key for an encryption scheme
     * 
     */
    @Import(name="defaultKey")
      private final @Nullable Output<DefaultKeyArgs> defaultKey;

    public Output<DefaultKeyArgs> defaultKey() {
        return this.defaultKey == null ? Codegen.empty() : this.defaultKey;
    }

    /**
     * Representing tracks needs separate content key
     * 
     */
    @Import(name="keyToTrackMappings")
      private final @Nullable Output<List<StreamingPolicyContentKeyArgs>> keyToTrackMappings;

    public Output<List<StreamingPolicyContentKeyArgs>> keyToTrackMappings() {
        return this.keyToTrackMappings == null ? Codegen.empty() : this.keyToTrackMappings;
    }

    public StreamingPolicyContentKeysArgs(
        @Nullable Output<DefaultKeyArgs> defaultKey,
        @Nullable Output<List<StreamingPolicyContentKeyArgs>> keyToTrackMappings) {
        this.defaultKey = defaultKey;
        this.keyToTrackMappings = keyToTrackMappings;
    }

    private StreamingPolicyContentKeysArgs() {
        this.defaultKey = Codegen.empty();
        this.keyToTrackMappings = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingPolicyContentKeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<DefaultKeyArgs> defaultKey;
        private @Nullable Output<List<StreamingPolicyContentKeyArgs>> keyToTrackMappings;

        public Builder() {
    	      // Empty
        }

        public Builder(StreamingPolicyContentKeysArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultKey = defaults.defaultKey;
    	      this.keyToTrackMappings = defaults.keyToTrackMappings;
        }

        public Builder defaultKey(@Nullable Output<DefaultKeyArgs> defaultKey) {
            this.defaultKey = defaultKey;
            return this;
        }
        public Builder defaultKey(@Nullable DefaultKeyArgs defaultKey) {
            this.defaultKey = Codegen.ofNullable(defaultKey);
            return this;
        }
        public Builder keyToTrackMappings(@Nullable Output<List<StreamingPolicyContentKeyArgs>> keyToTrackMappings) {
            this.keyToTrackMappings = keyToTrackMappings;
            return this;
        }
        public Builder keyToTrackMappings(@Nullable List<StreamingPolicyContentKeyArgs> keyToTrackMappings) {
            this.keyToTrackMappings = Codegen.ofNullable(keyToTrackMappings);
            return this;
        }
        public Builder keyToTrackMappings(StreamingPolicyContentKeyArgs... keyToTrackMappings) {
            return keyToTrackMappings(List.of(keyToTrackMappings));
        }        public StreamingPolicyContentKeysArgs build() {
            return new StreamingPolicyContentKeysArgs(defaultKey, keyToTrackMappings);
        }
    }
}
