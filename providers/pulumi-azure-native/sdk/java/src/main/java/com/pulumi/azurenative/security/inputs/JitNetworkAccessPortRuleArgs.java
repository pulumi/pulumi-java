// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.enums.Protocol;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JitNetworkAccessPortRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final JitNetworkAccessPortRuleArgs Empty = new JitNetworkAccessPortRuleArgs();

    /**
     * Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16".
     * 
     */
    @Import(name="allowedSourceAddressPrefix")
      private final @Nullable Output<String> allowedSourceAddressPrefix;

    public Output<String> allowedSourceAddressPrefix() {
        return this.allowedSourceAddressPrefix == null ? Codegen.empty() : this.allowedSourceAddressPrefix;
    }

    /**
     * Mutually exclusive with the "allowedSourceAddressPrefix" parameter.
     * 
     */
    @Import(name="allowedSourceAddressPrefixes")
      private final @Nullable Output<List<String>> allowedSourceAddressPrefixes;

    public Output<List<String>> allowedSourceAddressPrefixes() {
        return this.allowedSourceAddressPrefixes == null ? Codegen.empty() : this.allowedSourceAddressPrefixes;
    }

    /**
     * Maximum duration requests can be made for. In ISO 8601 duration format. Minimum 5 minutes, maximum 1 day
     * 
     */
    @Import(name="maxRequestAccessDuration", required=true)
      private final Output<String> maxRequestAccessDuration;

    public Output<String> maxRequestAccessDuration() {
        return this.maxRequestAccessDuration;
    }

    @Import(name="number", required=true)
      private final Output<Integer> number;

    public Output<Integer> number() {
        return this.number;
    }

    @Import(name="protocol", required=true)
      private final Output<Either<String,Protocol>> protocol;

    public Output<Either<String,Protocol>> protocol() {
        return this.protocol;
    }

    public JitNetworkAccessPortRuleArgs(
        @Nullable Output<String> allowedSourceAddressPrefix,
        @Nullable Output<List<String>> allowedSourceAddressPrefixes,
        Output<String> maxRequestAccessDuration,
        Output<Integer> number,
        Output<Either<String,Protocol>> protocol) {
        this.allowedSourceAddressPrefix = allowedSourceAddressPrefix;
        this.allowedSourceAddressPrefixes = allowedSourceAddressPrefixes;
        this.maxRequestAccessDuration = Objects.requireNonNull(maxRequestAccessDuration, "expected parameter 'maxRequestAccessDuration' to be non-null");
        this.number = Objects.requireNonNull(number, "expected parameter 'number' to be non-null");
        this.protocol = Objects.requireNonNull(protocol, "expected parameter 'protocol' to be non-null");
    }

    private JitNetworkAccessPortRuleArgs() {
        this.allowedSourceAddressPrefix = Codegen.empty();
        this.allowedSourceAddressPrefixes = Codegen.empty();
        this.maxRequestAccessDuration = Codegen.empty();
        this.number = Codegen.empty();
        this.protocol = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JitNetworkAccessPortRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> allowedSourceAddressPrefix;
        private @Nullable Output<List<String>> allowedSourceAddressPrefixes;
        private Output<String> maxRequestAccessDuration;
        private Output<Integer> number;
        private Output<Either<String,Protocol>> protocol;

        public Builder() {
    	      // Empty
        }

        public Builder(JitNetworkAccessPortRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedSourceAddressPrefix = defaults.allowedSourceAddressPrefix;
    	      this.allowedSourceAddressPrefixes = defaults.allowedSourceAddressPrefixes;
    	      this.maxRequestAccessDuration = defaults.maxRequestAccessDuration;
    	      this.number = defaults.number;
    	      this.protocol = defaults.protocol;
        }

        public Builder allowedSourceAddressPrefix(@Nullable Output<String> allowedSourceAddressPrefix) {
            this.allowedSourceAddressPrefix = allowedSourceAddressPrefix;
            return this;
        }
        public Builder allowedSourceAddressPrefix(@Nullable String allowedSourceAddressPrefix) {
            this.allowedSourceAddressPrefix = Codegen.ofNullable(allowedSourceAddressPrefix);
            return this;
        }
        public Builder allowedSourceAddressPrefixes(@Nullable Output<List<String>> allowedSourceAddressPrefixes) {
            this.allowedSourceAddressPrefixes = allowedSourceAddressPrefixes;
            return this;
        }
        public Builder allowedSourceAddressPrefixes(@Nullable List<String> allowedSourceAddressPrefixes) {
            this.allowedSourceAddressPrefixes = Codegen.ofNullable(allowedSourceAddressPrefixes);
            return this;
        }
        public Builder allowedSourceAddressPrefixes(String... allowedSourceAddressPrefixes) {
            return allowedSourceAddressPrefixes(List.of(allowedSourceAddressPrefixes));
        }
        public Builder maxRequestAccessDuration(Output<String> maxRequestAccessDuration) {
            this.maxRequestAccessDuration = Objects.requireNonNull(maxRequestAccessDuration);
            return this;
        }
        public Builder maxRequestAccessDuration(String maxRequestAccessDuration) {
            this.maxRequestAccessDuration = Output.of(Objects.requireNonNull(maxRequestAccessDuration));
            return this;
        }
        public Builder number(Output<Integer> number) {
            this.number = Objects.requireNonNull(number);
            return this;
        }
        public Builder number(Integer number) {
            this.number = Output.of(Objects.requireNonNull(number));
            return this;
        }
        public Builder protocol(Output<Either<String,Protocol>> protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        public Builder protocol(Either<String,Protocol> protocol) {
            this.protocol = Output.of(Objects.requireNonNull(protocol));
            return this;
        }        public JitNetworkAccessPortRuleArgs build() {
            return new JitNetworkAccessPortRuleArgs(allowedSourceAddressPrefix, allowedSourceAddressPrefixes, maxRequestAccessDuration, number, protocol);
        }
    }
}
