// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


/**
 * Compute infrastructure Resource
 * 
 */
public final class ComputeResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ComputeResourceArgs Empty = new ComputeResourceArgs();

    /**
     * Memory in GB
     * 
     */
    @Import(name="memoryInGB", required=true)
    private Output<Double> memoryInGB;

    /**
     * @return Memory in GB
     * 
     */
    public Output<Double> memoryInGB() {
        return this.memoryInGB;
    }

    /**
     * Processor count
     * 
     */
    @Import(name="processorCount", required=true)
    private Output<Integer> processorCount;

    /**
     * @return Processor count
     * 
     */
    public Output<Integer> processorCount() {
        return this.processorCount;
    }

    private ComputeResourceArgs() {}

    private ComputeResourceArgs(ComputeResourceArgs $) {
        this.memoryInGB = $.memoryInGB;
        this.processorCount = $.processorCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComputeResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeResourceArgs $;

        public Builder() {
            $ = new ComputeResourceArgs();
        }

        public Builder(ComputeResourceArgs defaults) {
            $ = new ComputeResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param memoryInGB Memory in GB
         * 
         * @return builder
         * 
         */
        public Builder memoryInGB(Output<Double> memoryInGB) {
            $.memoryInGB = memoryInGB;
            return this;
        }

        /**
         * @param memoryInGB Memory in GB
         * 
         * @return builder
         * 
         */
        public Builder memoryInGB(Double memoryInGB) {
            return memoryInGB(Output.of(memoryInGB));
        }

        /**
         * @param processorCount Processor count
         * 
         * @return builder
         * 
         */
        public Builder processorCount(Output<Integer> processorCount) {
            $.processorCount = processorCount;
            return this;
        }

        /**
         * @param processorCount Processor count
         * 
         * @return builder
         * 
         */
        public Builder processorCount(Integer processorCount) {
            return processorCount(Output.of(processorCount));
        }

        public ComputeResourceArgs build() {
            $.memoryInGB = Objects.requireNonNull($.memoryInGB, "expected parameter 'memoryInGB' to be non-null");
            $.processorCount = Objects.requireNonNull($.processorCount, "expected parameter 'processorCount' to be non-null");
            return $;
        }
    }

}
