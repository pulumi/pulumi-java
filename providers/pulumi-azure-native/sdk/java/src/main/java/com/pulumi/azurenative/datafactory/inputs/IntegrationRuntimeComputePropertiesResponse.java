// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.IntegrationRuntimeDataFlowPropertiesResponse;
import com.pulumi.azurenative.datafactory.inputs.IntegrationRuntimeVNetPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The compute resource properties for managed integration runtime.
 * 
 */
public final class IntegrationRuntimeComputePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final IntegrationRuntimeComputePropertiesResponse Empty = new IntegrationRuntimeComputePropertiesResponse();

    /**
     * Data flow properties for managed integration runtime.
     * 
     */
    @Import(name="dataFlowProperties")
    private @Nullable IntegrationRuntimeDataFlowPropertiesResponse dataFlowProperties;

    /**
     * @return Data flow properties for managed integration runtime.
     * 
     */
    public Optional<IntegrationRuntimeDataFlowPropertiesResponse> dataFlowProperties() {
        return Optional.ofNullable(this.dataFlowProperties);
    }

    /**
     * The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    /**
     * @return The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Maximum parallel executions count per node for managed integration runtime.
     * 
     */
    @Import(name="maxParallelExecutionsPerNode")
    private @Nullable Integer maxParallelExecutionsPerNode;

    /**
     * @return Maximum parallel executions count per node for managed integration runtime.
     * 
     */
    public Optional<Integer> maxParallelExecutionsPerNode() {
        return Optional.ofNullable(this.maxParallelExecutionsPerNode);
    }

    /**
     * The node size requirement to managed integration runtime.
     * 
     */
    @Import(name="nodeSize")
    private @Nullable String nodeSize;

    /**
     * @return The node size requirement to managed integration runtime.
     * 
     */
    public Optional<String> nodeSize() {
        return Optional.ofNullable(this.nodeSize);
    }

    /**
     * The required number of nodes for managed integration runtime.
     * 
     */
    @Import(name="numberOfNodes")
    private @Nullable Integer numberOfNodes;

    /**
     * @return The required number of nodes for managed integration runtime.
     * 
     */
    public Optional<Integer> numberOfNodes() {
        return Optional.ofNullable(this.numberOfNodes);
    }

    /**
     * VNet properties for managed integration runtime.
     * 
     */
    @Import(name="vNetProperties")
    private @Nullable IntegrationRuntimeVNetPropertiesResponse vNetProperties;

    /**
     * @return VNet properties for managed integration runtime.
     * 
     */
    public Optional<IntegrationRuntimeVNetPropertiesResponse> vNetProperties() {
        return Optional.ofNullable(this.vNetProperties);
    }

    private IntegrationRuntimeComputePropertiesResponse() {}

    private IntegrationRuntimeComputePropertiesResponse(IntegrationRuntimeComputePropertiesResponse $) {
        this.dataFlowProperties = $.dataFlowProperties;
        this.location = $.location;
        this.maxParallelExecutionsPerNode = $.maxParallelExecutionsPerNode;
        this.nodeSize = $.nodeSize;
        this.numberOfNodes = $.numberOfNodes;
        this.vNetProperties = $.vNetProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationRuntimeComputePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationRuntimeComputePropertiesResponse $;

        public Builder() {
            $ = new IntegrationRuntimeComputePropertiesResponse();
        }

        public Builder(IntegrationRuntimeComputePropertiesResponse defaults) {
            $ = new IntegrationRuntimeComputePropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataFlowProperties Data flow properties for managed integration runtime.
         * 
         * @return builder
         * 
         */
        public Builder dataFlowProperties(@Nullable IntegrationRuntimeDataFlowPropertiesResponse dataFlowProperties) {
            $.dataFlowProperties = dataFlowProperties;
            return this;
        }

        /**
         * @param location The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        /**
         * @param maxParallelExecutionsPerNode Maximum parallel executions count per node for managed integration runtime.
         * 
         * @return builder
         * 
         */
        public Builder maxParallelExecutionsPerNode(@Nullable Integer maxParallelExecutionsPerNode) {
            $.maxParallelExecutionsPerNode = maxParallelExecutionsPerNode;
            return this;
        }

        /**
         * @param nodeSize The node size requirement to managed integration runtime.
         * 
         * @return builder
         * 
         */
        public Builder nodeSize(@Nullable String nodeSize) {
            $.nodeSize = nodeSize;
            return this;
        }

        /**
         * @param numberOfNodes The required number of nodes for managed integration runtime.
         * 
         * @return builder
         * 
         */
        public Builder numberOfNodes(@Nullable Integer numberOfNodes) {
            $.numberOfNodes = numberOfNodes;
            return this;
        }

        /**
         * @param vNetProperties VNet properties for managed integration runtime.
         * 
         * @return builder
         * 
         */
        public Builder vNetProperties(@Nullable IntegrationRuntimeVNetPropertiesResponse vNetProperties) {
            $.vNetProperties = vNetProperties;
            return this;
        }

        public IntegrationRuntimeComputePropertiesResponse build() {
            return $;
        }
    }

}
