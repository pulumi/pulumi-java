// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.azurenative.storage.inputs.TagPropertyResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The LegalHold property of a blob container.
 * 
 */
public final class LegalHoldPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final LegalHoldPropertiesResponse Empty = new LegalHoldPropertiesResponse();

    /**
     * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
     * 
     */
    @Import(name="hasLegalHold", required=true)
    private Boolean hasLegalHold;

    public Boolean hasLegalHold() {
        return this.hasLegalHold;
    }

    /**
     * The list of LegalHold tags of a blob container.
     * 
     */
    @Import(name="tags")
    private @Nullable List<TagPropertyResponse> tags;

    public Optional<List<TagPropertyResponse>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private LegalHoldPropertiesResponse() {}

    private LegalHoldPropertiesResponse(LegalHoldPropertiesResponse $) {
        this.hasLegalHold = $.hasLegalHold;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LegalHoldPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LegalHoldPropertiesResponse $;

        public Builder() {
            $ = new LegalHoldPropertiesResponse();
        }

        public Builder(LegalHoldPropertiesResponse defaults) {
            $ = new LegalHoldPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder hasLegalHold(Boolean hasLegalHold) {
            $.hasLegalHold = hasLegalHold;
            return this;
        }

        public Builder tags(@Nullable List<TagPropertyResponse> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(TagPropertyResponse... tags) {
            return tags(List.of(tags));
        }

        public LegalHoldPropertiesResponse build() {
            $.hasLegalHold = Objects.requireNonNull($.hasLegalHold, "expected parameter 'hasLegalHold' to be non-null");
            return $;
        }
    }

}
