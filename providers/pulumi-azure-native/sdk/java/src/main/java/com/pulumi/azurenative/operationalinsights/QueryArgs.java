// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights;

import com.pulumi.azurenative.operationalinsights.inputs.LogAnalyticsQueryPackQueryPropertiesRelatedArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final QueryArgs Empty = new QueryArgs();

    /**
     * Body of the query.
     * 
     */
    @Import(name="body", required=true)
    private Output<String> body;

    /**
     * @return Body of the query.
     * 
     */
    public Output<String> body() {
        return this.body;
    }

    /**
     * Description of the query.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the query.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Unique display name for your query within the Query Pack.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return Unique display name for your query within the Query Pack.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The id of a specific query defined in the Log Analytics QueryPack
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The id of a specific query defined in the Log Analytics QueryPack
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Additional properties that can be set for the query.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<Object> properties;

    /**
     * @return Additional properties that can be set for the query.
     * 
     */
    public Optional<Output<Object>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The name of the Log Analytics QueryPack resource.
     * 
     */
    @Import(name="queryPackName", required=true)
    private Output<String> queryPackName;

    /**
     * @return The name of the Log Analytics QueryPack resource.
     * 
     */
    public Output<String> queryPackName() {
        return this.queryPackName;
    }

    /**
     * The related metadata items for the function.
     * 
     */
    @Import(name="related")
    private @Nullable Output<LogAnalyticsQueryPackQueryPropertiesRelatedArgs> related;

    /**
     * @return The related metadata items for the function.
     * 
     */
    public Optional<Output<LogAnalyticsQueryPackQueryPropertiesRelatedArgs>> related() {
        return Optional.ofNullable(this.related);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Tags associated with the query.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,List<String>>> tags;

    /**
     * @return Tags associated with the query.
     * 
     */
    public Optional<Output<Map<String,List<String>>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private QueryArgs() {}

    private QueryArgs(QueryArgs $) {
        this.body = $.body;
        this.description = $.description;
        this.displayName = $.displayName;
        this.id = $.id;
        this.properties = $.properties;
        this.queryPackName = $.queryPackName;
        this.related = $.related;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueryArgs $;

        public Builder() {
            $ = new QueryArgs();
        }

        public Builder(QueryArgs defaults) {
            $ = new QueryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param body Body of the query.
         * 
         * @return builder
         * 
         */
        public Builder body(Output<String> body) {
            $.body = body;
            return this;
        }

        /**
         * @param body Body of the query.
         * 
         * @return builder
         * 
         */
        public Builder body(String body) {
            return body(Output.of(body));
        }

        /**
         * @param description Description of the query.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the query.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Unique display name for your query within the Query Pack.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Unique display name for your query within the Query Pack.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param id The id of a specific query defined in the Log Analytics QueryPack
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The id of a specific query defined in the Log Analytics QueryPack
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param properties Additional properties that can be set for the query.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<Object> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Additional properties that can be set for the query.
         * 
         * @return builder
         * 
         */
        public Builder properties(Object properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param queryPackName The name of the Log Analytics QueryPack resource.
         * 
         * @return builder
         * 
         */
        public Builder queryPackName(Output<String> queryPackName) {
            $.queryPackName = queryPackName;
            return this;
        }

        /**
         * @param queryPackName The name of the Log Analytics QueryPack resource.
         * 
         * @return builder
         * 
         */
        public Builder queryPackName(String queryPackName) {
            return queryPackName(Output.of(queryPackName));
        }

        /**
         * @param related The related metadata items for the function.
         * 
         * @return builder
         * 
         */
        public Builder related(@Nullable Output<LogAnalyticsQueryPackQueryPropertiesRelatedArgs> related) {
            $.related = related;
            return this;
        }

        /**
         * @param related The related metadata items for the function.
         * 
         * @return builder
         * 
         */
        public Builder related(LogAnalyticsQueryPackQueryPropertiesRelatedArgs related) {
            return related(Output.of(related));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Tags associated with the query.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,List<String>>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags associated with the query.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,List<String>> tags) {
            return tags(Output.of(tags));
        }

        public QueryArgs build() {
            $.body = Objects.requireNonNull($.body, "expected parameter 'body' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.queryPackName = Objects.requireNonNull($.queryPackName, "expected parameter 'queryPackName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
