// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.inputs.SkuZoneDetailResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SkuLocationInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final SkuLocationInfoResponse Empty = new SkuLocationInfoResponse();

    @Import(name="extendedLocations")
    private @Nullable List<String> extendedLocations;

    public Optional<List<String>> extendedLocations() {
        return Optional.ofNullable(this.extendedLocations);
    }

    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="zoneDetails")
    private @Nullable List<SkuZoneDetailResponse> zoneDetails;

    public Optional<List<SkuZoneDetailResponse>> zoneDetails() {
        return Optional.ofNullable(this.zoneDetails);
    }

    @Import(name="zones")
    private @Nullable List<String> zones;

    public Optional<List<String>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private SkuLocationInfoResponse() {}

    private SkuLocationInfoResponse(SkuLocationInfoResponse $) {
        this.extendedLocations = $.extendedLocations;
        this.location = $.location;
        this.type = $.type;
        this.zoneDetails = $.zoneDetails;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SkuLocationInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SkuLocationInfoResponse $;

        public Builder() {
            $ = new SkuLocationInfoResponse();
        }

        public Builder(SkuLocationInfoResponse defaults) {
            $ = new SkuLocationInfoResponse(Objects.requireNonNull(defaults));
        }

        public Builder extendedLocations(@Nullable List<String> extendedLocations) {
            $.extendedLocations = extendedLocations;
            return this;
        }

        public Builder extendedLocations(String... extendedLocations) {
            return extendedLocations(List.of(extendedLocations));
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public Builder zoneDetails(@Nullable List<SkuZoneDetailResponse> zoneDetails) {
            $.zoneDetails = zoneDetails;
            return this;
        }

        public Builder zoneDetails(SkuZoneDetailResponse... zoneDetails) {
            return zoneDetails(List.of(zoneDetails));
        }

        public Builder zones(@Nullable List<String> zones) {
            $.zones = zones;
            return this;
        }

        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public SkuLocationInfoResponse build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
