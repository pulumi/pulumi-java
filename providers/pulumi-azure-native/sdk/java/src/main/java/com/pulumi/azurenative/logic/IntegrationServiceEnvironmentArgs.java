// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic;

import com.pulumi.azurenative.logic.inputs.IntegrationServiceEnvironmentPropertiesArgs;
import com.pulumi.azurenative.logic.inputs.IntegrationServiceEnvironmentSkuArgs;
import com.pulumi.azurenative.logic.inputs.ManagedServiceIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationServiceEnvironmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationServiceEnvironmentArgs Empty = new IntegrationServiceEnvironmentArgs();

    /**
     * Managed service identity properties.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<ManagedServiceIdentityArgs> identity;

    /**
     * @return Managed service identity properties.
     * 
     */
    public Optional<Output<ManagedServiceIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The integration service environment name.
     * 
     */
    @Import(name="integrationServiceEnvironmentName")
    private @Nullable Output<String> integrationServiceEnvironmentName;

    /**
     * @return The integration service environment name.
     * 
     */
    public Optional<Output<String>> integrationServiceEnvironmentName() {
        return Optional.ofNullable(this.integrationServiceEnvironmentName);
    }

    /**
     * The resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The resource location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The integration service environment properties.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<IntegrationServiceEnvironmentPropertiesArgs> properties;

    /**
     * @return The integration service environment properties.
     * 
     */
    public Optional<Output<IntegrationServiceEnvironmentPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The resource group.
     * 
     */
    @Import(name="resourceGroup", required=true)
    private Output<String> resourceGroup;

    /**
     * @return The resource group.
     * 
     */
    public Output<String> resourceGroup() {
        return this.resourceGroup;
    }

    /**
     * The sku.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<IntegrationServiceEnvironmentSkuArgs> sku;

    /**
     * @return The sku.
     * 
     */
    public Optional<Output<IntegrationServiceEnvironmentSkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * The resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private IntegrationServiceEnvironmentArgs() {}

    private IntegrationServiceEnvironmentArgs(IntegrationServiceEnvironmentArgs $) {
        this.identity = $.identity;
        this.integrationServiceEnvironmentName = $.integrationServiceEnvironmentName;
        this.location = $.location;
        this.properties = $.properties;
        this.resourceGroup = $.resourceGroup;
        this.sku = $.sku;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationServiceEnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationServiceEnvironmentArgs $;

        public Builder() {
            $ = new IntegrationServiceEnvironmentArgs();
        }

        public Builder(IntegrationServiceEnvironmentArgs defaults) {
            $ = new IntegrationServiceEnvironmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identity Managed service identity properties.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<ManagedServiceIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity Managed service identity properties.
         * 
         * @return builder
         * 
         */
        public Builder identity(ManagedServiceIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param integrationServiceEnvironmentName The integration service environment name.
         * 
         * @return builder
         * 
         */
        public Builder integrationServiceEnvironmentName(@Nullable Output<String> integrationServiceEnvironmentName) {
            $.integrationServiceEnvironmentName = integrationServiceEnvironmentName;
            return this;
        }

        /**
         * @param integrationServiceEnvironmentName The integration service environment name.
         * 
         * @return builder
         * 
         */
        public Builder integrationServiceEnvironmentName(String integrationServiceEnvironmentName) {
            return integrationServiceEnvironmentName(Output.of(integrationServiceEnvironmentName));
        }

        /**
         * @param location The resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param properties The integration service environment properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<IntegrationServiceEnvironmentPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties The integration service environment properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(IntegrationServiceEnvironmentPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroup The resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(Output<String> resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceGroup The resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(String resourceGroup) {
            return resourceGroup(Output.of(resourceGroup));
        }

        /**
         * @param sku The sku.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<IntegrationServiceEnvironmentSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The sku.
         * 
         * @return builder
         * 
         */
        public Builder sku(IntegrationServiceEnvironmentSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags The resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public IntegrationServiceEnvironmentArgs build() {
            $.resourceGroup = Objects.requireNonNull($.resourceGroup, "expected parameter 'resourceGroup' to be non-null");
            return $;
        }
    }

}
