// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.iotsecurity.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetSensorPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSensorPlainArgs Empty = new GetSensorPlainArgs();

    /**
     * Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)
     * 
     */
    @Import(name="scope", required=true)
    private String scope;

    /**
     * @return Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)
     * 
     */
    public String scope() {
        return this.scope;
    }

    /**
     * Name of the IoT sensor
     * 
     */
    @Import(name="sensorName", required=true)
    private String sensorName;

    /**
     * @return Name of the IoT sensor
     * 
     */
    public String sensorName() {
        return this.sensorName;
    }

    private GetSensorPlainArgs() {}

    private GetSensorPlainArgs(GetSensorPlainArgs $) {
        this.scope = $.scope;
        this.sensorName = $.sensorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSensorPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSensorPlainArgs $;

        public Builder() {
            $ = new GetSensorPlainArgs();
        }

        public Builder(GetSensorPlainArgs defaults) {
            $ = new GetSensorPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param scope Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param sensorName Name of the IoT sensor
         * 
         * @return builder
         * 
         */
        public Builder sensorName(String sensorName) {
            $.sensorName = sensorName;
            return this;
        }

        public GetSensorPlainArgs build() {
            $.scope = Objects.requireNonNull($.scope, "expected parameter 'scope' to be non-null");
            $.sensorName = Objects.requireNonNull($.sensorName, "expected parameter 'sensorName' to be non-null");
            return $;
        }
    }

}
