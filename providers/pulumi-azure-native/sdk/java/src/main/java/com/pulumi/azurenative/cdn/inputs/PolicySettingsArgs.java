// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.enums.PolicyEnabledState;
import com.pulumi.azurenative.cdn.enums.PolicyMode;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines contents of a web application firewall global configuration
 * 
 */
public final class PolicySettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicySettingsArgs Empty = new PolicySettingsArgs();

    /**
     * If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
     * 
     */
    @Import(name="defaultCustomBlockResponseBody")
    private @Nullable Output<String> defaultCustomBlockResponseBody;

    public Optional<Output<String>> defaultCustomBlockResponseBody() {
        return Optional.ofNullable(this.defaultCustomBlockResponseBody);
    }

    /**
     * If the action type is block, this field defines the default customer overridable http response status code.
     * 
     */
    @Import(name="defaultCustomBlockResponseStatusCode")
    private @Nullable Output<Integer> defaultCustomBlockResponseStatusCode;

    public Optional<Output<Integer>> defaultCustomBlockResponseStatusCode() {
        return Optional.ofNullable(this.defaultCustomBlockResponseStatusCode);
    }

    /**
     * If action type is redirect, this field represents the default redirect URL for the client.
     * 
     */
    @Import(name="defaultRedirectUrl")
    private @Nullable Output<String> defaultRedirectUrl;

    public Optional<Output<String>> defaultRedirectUrl() {
        return Optional.ofNullable(this.defaultRedirectUrl);
    }

    /**
     * describes if the policy is in enabled state or disabled state
     * 
     */
    @Import(name="enabledState")
    private @Nullable Output<Either<String,PolicyEnabledState>> enabledState;

    public Optional<Output<Either<String,PolicyEnabledState>>> enabledState() {
        return Optional.ofNullable(this.enabledState);
    }

    /**
     * Describes if it is in detection mode or prevention mode at policy level.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<Either<String,PolicyMode>> mode;

    public Optional<Output<Either<String,PolicyMode>>> mode() {
        return Optional.ofNullable(this.mode);
    }

    private PolicySettingsArgs() {}

    private PolicySettingsArgs(PolicySettingsArgs $) {
        this.defaultCustomBlockResponseBody = $.defaultCustomBlockResponseBody;
        this.defaultCustomBlockResponseStatusCode = $.defaultCustomBlockResponseStatusCode;
        this.defaultRedirectUrl = $.defaultRedirectUrl;
        this.enabledState = $.enabledState;
        this.mode = $.mode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicySettingsArgs $;

        public Builder() {
            $ = new PolicySettingsArgs();
        }

        public Builder(PolicySettingsArgs defaults) {
            $ = new PolicySettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder defaultCustomBlockResponseBody(@Nullable Output<String> defaultCustomBlockResponseBody) {
            $.defaultCustomBlockResponseBody = defaultCustomBlockResponseBody;
            return this;
        }

        public Builder defaultCustomBlockResponseBody(String defaultCustomBlockResponseBody) {
            return defaultCustomBlockResponseBody(Output.of(defaultCustomBlockResponseBody));
        }

        public Builder defaultCustomBlockResponseStatusCode(@Nullable Output<Integer> defaultCustomBlockResponseStatusCode) {
            $.defaultCustomBlockResponseStatusCode = defaultCustomBlockResponseStatusCode;
            return this;
        }

        public Builder defaultCustomBlockResponseStatusCode(Integer defaultCustomBlockResponseStatusCode) {
            return defaultCustomBlockResponseStatusCode(Output.of(defaultCustomBlockResponseStatusCode));
        }

        public Builder defaultRedirectUrl(@Nullable Output<String> defaultRedirectUrl) {
            $.defaultRedirectUrl = defaultRedirectUrl;
            return this;
        }

        public Builder defaultRedirectUrl(String defaultRedirectUrl) {
            return defaultRedirectUrl(Output.of(defaultRedirectUrl));
        }

        public Builder enabledState(@Nullable Output<Either<String,PolicyEnabledState>> enabledState) {
            $.enabledState = enabledState;
            return this;
        }

        public Builder enabledState(Either<String,PolicyEnabledState> enabledState) {
            return enabledState(Output.of(enabledState));
        }

        public Builder enabledState(String enabledState) {
            return enabledState(Either.ofLeft(enabledState));
        }

        public Builder enabledState(PolicyEnabledState enabledState) {
            return enabledState(Either.ofRight(enabledState));
        }

        public Builder mode(@Nullable Output<Either<String,PolicyMode>> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(Either<String,PolicyMode> mode) {
            return mode(Output.of(mode));
        }

        public Builder mode(String mode) {
            return mode(Either.ofLeft(mode));
        }

        public Builder mode(PolicyMode mode) {
            return mode(Either.ofRight(mode));
        }

        public PolicySettingsArgs build() {
            return $;
        }
    }

}
