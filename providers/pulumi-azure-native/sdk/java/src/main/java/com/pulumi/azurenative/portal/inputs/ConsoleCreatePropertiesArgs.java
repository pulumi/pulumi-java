// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.portal.inputs;

import com.pulumi.azurenative.portal.enums.OsType;
import com.pulumi.azurenative.portal.enums.ProvisioningState;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Cloud shell properties for creating a console.
 * 
 */
public final class ConsoleCreatePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsoleCreatePropertiesArgs Empty = new ConsoleCreatePropertiesArgs();

    /**
     * The operating system type of the cloud shell.
     * 
     */
    @Import(name="osType", required=true)
      private final Output<Either<String,OsType>> osType;

    public Output<Either<String,OsType>> osType() {
        return this.osType;
    }

    /**
     * Provisioning state of the console.
     * 
     */
    @Import(name="provisioningState")
      private final @Nullable Output<Either<String,ProvisioningState>> provisioningState;

    public Output<Either<String,ProvisioningState>> provisioningState() {
        return this.provisioningState == null ? Codegen.empty() : this.provisioningState;
    }

    /**
     * Uri of the console.
     * 
     */
    @Import(name="uri")
      private final @Nullable Output<String> uri;

    public Output<String> uri() {
        return this.uri == null ? Codegen.empty() : this.uri;
    }

    public ConsoleCreatePropertiesArgs(
        Output<Either<String,OsType>> osType,
        @Nullable Output<Either<String,ProvisioningState>> provisioningState,
        @Nullable Output<String> uri) {
        this.osType = Objects.requireNonNull(osType, "expected parameter 'osType' to be non-null");
        this.provisioningState = provisioningState;
        this.uri = uri;
    }

    private ConsoleCreatePropertiesArgs() {
        this.osType = Codegen.empty();
        this.provisioningState = Codegen.empty();
        this.uri = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConsoleCreatePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Either<String,OsType>> osType;
        private @Nullable Output<Either<String,ProvisioningState>> provisioningState;
        private @Nullable Output<String> uri;

        public Builder() {
    	      // Empty
        }

        public Builder(ConsoleCreatePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.osType = defaults.osType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.uri = defaults.uri;
        }

        public Builder osType(Output<Either<String,OsType>> osType) {
            this.osType = Objects.requireNonNull(osType);
            return this;
        }
        public Builder osType(Either<String,OsType> osType) {
            this.osType = Output.of(Objects.requireNonNull(osType));
            return this;
        }
        public Builder provisioningState(@Nullable Output<Either<String,ProvisioningState>> provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        public Builder provisioningState(@Nullable Either<String,ProvisioningState> provisioningState) {
            this.provisioningState = Codegen.ofNullable(provisioningState);
            return this;
        }
        public Builder uri(@Nullable Output<String> uri) {
            this.uri = uri;
            return this;
        }
        public Builder uri(@Nullable String uri) {
            this.uri = Codegen.ofNullable(uri);
            return this;
        }        public ConsoleCreatePropertiesArgs build() {
            return new ConsoleCreatePropertiesArgs(osType, provisioningState, uri);
        }
    }
}
