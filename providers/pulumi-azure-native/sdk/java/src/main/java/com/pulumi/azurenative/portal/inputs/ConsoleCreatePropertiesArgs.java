// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.portal.inputs;

import com.pulumi.azurenative.portal.enums.OsType;
import com.pulumi.azurenative.portal.enums.ProvisioningState;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Cloud shell properties for creating a console.
 * 
 */
public final class ConsoleCreatePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsoleCreatePropertiesArgs Empty = new ConsoleCreatePropertiesArgs();

    /**
     * The operating system type of the cloud shell.
     * 
     */
    @Import(name="osType", required=true)
    private Output<Either<String,OsType>> osType;

    public Output<Either<String,OsType>> osType() {
        return this.osType;
    }

    /**
     * Provisioning state of the console.
     * 
     */
    @Import(name="provisioningState")
    private @Nullable Output<Either<String,ProvisioningState>> provisioningState;

    public Optional<Output<Either<String,ProvisioningState>>> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    /**
     * Uri of the console.
     * 
     */
    @Import(name="uri")
    private @Nullable Output<String> uri;

    public Optional<Output<String>> uri() {
        return Optional.ofNullable(this.uri);
    }

    private ConsoleCreatePropertiesArgs() {}

    private ConsoleCreatePropertiesArgs(ConsoleCreatePropertiesArgs $) {
        this.osType = $.osType;
        this.provisioningState = $.provisioningState;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsoleCreatePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsoleCreatePropertiesArgs $;

        public Builder() {
            $ = new ConsoleCreatePropertiesArgs();
        }

        public Builder(ConsoleCreatePropertiesArgs defaults) {
            $ = new ConsoleCreatePropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder osType(Output<Either<String,OsType>> osType) {
            $.osType = osType;
            return this;
        }

        public Builder osType(Either<String,OsType> osType) {
            return osType(Output.of(osType));
        }

        public Builder osType(String osType) {
            return osType(Either.ofLeft(osType));
        }

        public Builder osType(OsType osType) {
            return osType(Either.ofRight(osType));
        }

        public Builder provisioningState(@Nullable Output<Either<String,ProvisioningState>> provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder provisioningState(Either<String,ProvisioningState> provisioningState) {
            return provisioningState(Output.of(provisioningState));
        }

        public Builder provisioningState(String provisioningState) {
            return provisioningState(Either.ofLeft(provisioningState));
        }

        public Builder provisioningState(ProvisioningState provisioningState) {
            return provisioningState(Either.ofRight(provisioningState));
        }

        public Builder uri(@Nullable Output<String> uri) {
            $.uri = uri;
            return this;
        }

        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public ConsoleCreatePropertiesArgs build() {
            $.osType = Objects.requireNonNull($.osType, "expected parameter 'osType' to be non-null");
            return $;
        }
    }

}
