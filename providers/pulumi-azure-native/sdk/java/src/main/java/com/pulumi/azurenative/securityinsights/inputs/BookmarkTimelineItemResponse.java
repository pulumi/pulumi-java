// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.inputs;

import com.pulumi.azurenative.securityinsights.inputs.UserInfoResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents bookmark timeline item.
 * 
 */
public final class BookmarkTimelineItemResponse extends com.pulumi.resources.InvokeArgs {

    public static final BookmarkTimelineItemResponse Empty = new BookmarkTimelineItemResponse();

    /**
     * The bookmark azure resource id.
     * 
     */
    @Import(name="azureResourceId", required=true)
    private String azureResourceId;

    /**
     * @return The bookmark azure resource id.
     * 
     */
    public String azureResourceId() {
        return this.azureResourceId;
    }

    /**
     * Describes a user that created the bookmark
     * 
     */
    @Import(name="createdBy")
    private @Nullable UserInfoResponse createdBy;

    /**
     * @return Describes a user that created the bookmark
     * 
     */
    public Optional<UserInfoResponse> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * The bookmark display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return The bookmark display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The bookmark end time.
     * 
     */
    @Import(name="endTimeUtc")
    private @Nullable String endTimeUtc;

    /**
     * @return The bookmark end time.
     * 
     */
    public Optional<String> endTimeUtc() {
        return Optional.ofNullable(this.endTimeUtc);
    }

    /**
     * The bookmark event time.
     * 
     */
    @Import(name="eventTime")
    private @Nullable String eventTime;

    /**
     * @return The bookmark event time.
     * 
     */
    public Optional<String> eventTime() {
        return Optional.ofNullable(this.eventTime);
    }

    /**
     * The entity query kind
     * Expected value is &#39;Bookmark&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private String kind;

    /**
     * @return The entity query kind
     * Expected value is &#39;Bookmark&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }

    /**
     * List of labels relevant to this bookmark
     * 
     */
    @Import(name="labels")
    private @Nullable List<String> labels;

    /**
     * @return List of labels relevant to this bookmark
     * 
     */
    public Optional<List<String>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The notes of the bookmark
     * 
     */
    @Import(name="notes")
    private @Nullable String notes;

    /**
     * @return The notes of the bookmark
     * 
     */
    public Optional<String> notes() {
        return Optional.ofNullable(this.notes);
    }

    /**
     * The bookmark start time.
     * 
     */
    @Import(name="startTimeUtc")
    private @Nullable String startTimeUtc;

    /**
     * @return The bookmark start time.
     * 
     */
    public Optional<String> startTimeUtc() {
        return Optional.ofNullable(this.startTimeUtc);
    }

    private BookmarkTimelineItemResponse() {}

    private BookmarkTimelineItemResponse(BookmarkTimelineItemResponse $) {
        this.azureResourceId = $.azureResourceId;
        this.createdBy = $.createdBy;
        this.displayName = $.displayName;
        this.endTimeUtc = $.endTimeUtc;
        this.eventTime = $.eventTime;
        this.kind = $.kind;
        this.labels = $.labels;
        this.notes = $.notes;
        this.startTimeUtc = $.startTimeUtc;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BookmarkTimelineItemResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BookmarkTimelineItemResponse $;

        public Builder() {
            $ = new BookmarkTimelineItemResponse();
        }

        public Builder(BookmarkTimelineItemResponse defaults) {
            $ = new BookmarkTimelineItemResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureResourceId The bookmark azure resource id.
         * 
         * @return builder
         * 
         */
        public Builder azureResourceId(String azureResourceId) {
            $.azureResourceId = azureResourceId;
            return this;
        }

        /**
         * @param createdBy Describes a user that created the bookmark
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable UserInfoResponse createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param displayName The bookmark display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param endTimeUtc The bookmark end time.
         * 
         * @return builder
         * 
         */
        public Builder endTimeUtc(@Nullable String endTimeUtc) {
            $.endTimeUtc = endTimeUtc;
            return this;
        }

        /**
         * @param eventTime The bookmark event time.
         * 
         * @return builder
         * 
         */
        public Builder eventTime(@Nullable String eventTime) {
            $.eventTime = eventTime;
            return this;
        }

        /**
         * @param kind The entity query kind
         * Expected value is &#39;Bookmark&#39;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param labels List of labels relevant to this bookmark
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable List<String> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels List of labels relevant to this bookmark
         * 
         * @return builder
         * 
         */
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }

        /**
         * @param notes The notes of the bookmark
         * 
         * @return builder
         * 
         */
        public Builder notes(@Nullable String notes) {
            $.notes = notes;
            return this;
        }

        /**
         * @param startTimeUtc The bookmark start time.
         * 
         * @return builder
         * 
         */
        public Builder startTimeUtc(@Nullable String startTimeUtc) {
            $.startTimeUtc = startTimeUtc;
            return this;
        }

        public BookmarkTimelineItemResponse build() {
            $.azureResourceId = Objects.requireNonNull($.azureResourceId, "expected parameter 'azureResourceId' to be non-null");
            $.kind = Codegen.stringProp("kind").arg($.kind).require();
            return $;
        }
    }

}
