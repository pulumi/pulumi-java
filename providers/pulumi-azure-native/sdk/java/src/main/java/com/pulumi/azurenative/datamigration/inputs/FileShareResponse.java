// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * File share information with Path, Username, and Password.
 * 
 */
public final class FileShareResponse extends com.pulumi.resources.InvokeArgs {

    public static final FileShareResponse Empty = new FileShareResponse();

    /**
     * Password credential used to connect to the share location.
     * 
     */
    @Import(name="password")
    private @Nullable String password;

    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The folder path for this share.
     * 
     */
    @Import(name="path", required=true)
    private String path;

    public String path() {
        return this.path;
    }

    /**
     * User name credential to connect to the share location
     * 
     */
    @Import(name="userName")
    private @Nullable String userName;

    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }

    private FileShareResponse() {}

    private FileShareResponse(FileShareResponse $) {
        this.password = $.password;
        this.path = $.path;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileShareResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileShareResponse $;

        public Builder() {
            $ = new FileShareResponse();
        }

        public Builder(FileShareResponse defaults) {
            $ = new FileShareResponse(Objects.requireNonNull(defaults));
        }

        public Builder password(@Nullable String password) {
            $.password = password;
            return this;
        }

        public Builder path(String path) {
            $.path = path;
            return this;
        }

        public Builder userName(@Nullable String userName) {
            $.userName = userName;
            return this;
        }

        public FileShareResponse build() {
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            return $;
        }
    }

}
