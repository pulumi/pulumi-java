// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * File share information with Path, Username, and Password.
 * 
 */
public final class FileShareResponse extends com.pulumi.resources.InvokeArgs {

    public static final FileShareResponse Empty = new FileShareResponse();

    /**
     * Password credential used to connect to the share location.
     * 
     */
    @Import(name="password")
      private final @Nullable String password;

    public Optional<String> password() {
        return this.password == null ? Optional.empty() : Optional.ofNullable(this.password);
    }

    /**
     * The folder path for this share.
     * 
     */
    @Import(name="path", required=true)
      private final String path;

    public String path() {
        return this.path;
    }

    /**
     * User name credential to connect to the share location
     * 
     */
    @Import(name="userName")
      private final @Nullable String userName;

    public Optional<String> userName() {
        return this.userName == null ? Optional.empty() : Optional.ofNullable(this.userName);
    }

    public FileShareResponse(
        @Nullable String password,
        String path,
        @Nullable String userName) {
        this.password = password;
        this.path = Objects.requireNonNull(path, "expected parameter 'path' to be non-null");
        this.userName = userName;
    }

    private FileShareResponse() {
        this.password = null;
        this.path = null;
        this.userName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileShareResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String password;
        private String path;
        private @Nullable String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(FileShareResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.path = defaults.path;
    	      this.userName = defaults.userName;
        }

        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        public Builder userName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }        public FileShareResponse build() {
            return new FileShareResponse(password, path, userName);
        }
    }
}
