// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningcompute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The Azure service principal used by Kubernetes for configuring load balancers
 * 
 */
public final class ServicePrincipalPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServicePrincipalPropertiesArgs Empty = new ServicePrincipalPropertiesArgs();

    /**
     * The service principal client ID
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys.
     * 
     */
    @Import(name="secret", required=true)
    private Output<String> secret;

    public Output<String> secret() {
        return this.secret;
    }

    private ServicePrincipalPropertiesArgs() {}

    private ServicePrincipalPropertiesArgs(ServicePrincipalPropertiesArgs $) {
        this.clientId = $.clientId;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServicePrincipalPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServicePrincipalPropertiesArgs $;

        public Builder() {
            $ = new ServicePrincipalPropertiesArgs();
        }

        public Builder(ServicePrincipalPropertiesArgs defaults) {
            $ = new ServicePrincipalPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder secret(Output<String> secret) {
            $.secret = secret;
            return this;
        }

        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        public ServicePrincipalPropertiesArgs build() {
            $.clientId = Objects.requireNonNull($.clientId, "expected parameter 'clientId' to be non-null");
            $.secret = Objects.requireNonNull($.secret, "expected parameter 'secret' to be non-null");
            return $;
        }
    }

}
