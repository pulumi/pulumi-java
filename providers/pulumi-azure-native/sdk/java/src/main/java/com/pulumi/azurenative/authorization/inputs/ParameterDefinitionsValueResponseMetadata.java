// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * General metadata for the parameter.
 * 
 */
public final class ParameterDefinitionsValueResponseMetadata extends com.pulumi.resources.InvokeArgs {

    public static final ParameterDefinitionsValueResponseMetadata Empty = new ParameterDefinitionsValueResponseMetadata();

    /**
     * Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope.
     * 
     */
    @Import(name="assignPermissions")
    private @Nullable Boolean assignPermissions;

    public Optional<Boolean> assignPermissions() {
        return Optional.ofNullable(this.assignPermissions);
    }

    /**
     * The description of the parameter.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name for the parameter.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from.
     * 
     */
    @Import(name="strongType")
    private @Nullable String strongType;

    public Optional<String> strongType() {
        return Optional.ofNullable(this.strongType);
    }

    private ParameterDefinitionsValueResponseMetadata() {}

    private ParameterDefinitionsValueResponseMetadata(ParameterDefinitionsValueResponseMetadata $) {
        this.assignPermissions = $.assignPermissions;
        this.description = $.description;
        this.displayName = $.displayName;
        this.strongType = $.strongType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ParameterDefinitionsValueResponseMetadata defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ParameterDefinitionsValueResponseMetadata $;

        public Builder() {
            $ = new ParameterDefinitionsValueResponseMetadata();
        }

        public Builder(ParameterDefinitionsValueResponseMetadata defaults) {
            $ = new ParameterDefinitionsValueResponseMetadata(Objects.requireNonNull(defaults));
        }

        public Builder assignPermissions(@Nullable Boolean assignPermissions) {
            $.assignPermissions = assignPermissions;
            return this;
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder strongType(@Nullable String strongType) {
            $.strongType = strongType;
            return this;
        }

        public ParameterDefinitionsValueResponseMetadata build() {
            return $;
        }
    }

}
