// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resourceconnector.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class HybridConnectionConfigResponse {
    /**
     * Timestamp when this token will be expired.
     * 
     */
    private final Double expirationTime;
    /**
     * Name of the connection
     * 
     */
    private final String hybridConnectionName;
    /**
     * Name of the notification service.
     * 
     */
    private final String relay;
    /**
     * Listener access token
     * 
     */
    private final String token;

    @CustomType.Constructor
    private HybridConnectionConfigResponse(
        @CustomType.Parameter("expirationTime") Double expirationTime,
        @CustomType.Parameter("hybridConnectionName") String hybridConnectionName,
        @CustomType.Parameter("relay") String relay,
        @CustomType.Parameter("token") String token) {
        this.expirationTime = expirationTime;
        this.hybridConnectionName = hybridConnectionName;
        this.relay = relay;
        this.token = token;
    }

    /**
     * Timestamp when this token will be expired.
     * 
    */
    public Double expirationTime() {
        return this.expirationTime;
    }
    /**
     * Name of the connection
     * 
    */
    public String hybridConnectionName() {
        return this.hybridConnectionName;
    }
    /**
     * Name of the notification service.
     * 
    */
    public String relay() {
        return this.relay;
    }
    /**
     * Listener access token
     * 
    */
    public String token() {
        return this.token;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HybridConnectionConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double expirationTime;
        private String hybridConnectionName;
        private String relay;
        private String token;

        public Builder() {
    	      // Empty
        }

        public Builder(HybridConnectionConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationTime = defaults.expirationTime;
    	      this.hybridConnectionName = defaults.hybridConnectionName;
    	      this.relay = defaults.relay;
    	      this.token = defaults.token;
        }

        public Builder expirationTime(Double expirationTime) {
            this.expirationTime = Objects.requireNonNull(expirationTime);
            return this;
        }
        public Builder hybridConnectionName(String hybridConnectionName) {
            this.hybridConnectionName = Objects.requireNonNull(hybridConnectionName);
            return this;
        }
        public Builder relay(String relay) {
            this.relay = Objects.requireNonNull(relay);
            return this;
        }
        public Builder token(String token) {
            this.token = Objects.requireNonNull(token);
            return this;
        }        public HybridConnectionConfigResponse build() {
            return new HybridConnectionConfigResponse(expirationTime, hybridConnectionName, relay, token);
        }
    }
}
