// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databox.inputs;

import com.pulumi.azurenative.databox.inputs.AzureFileFilterDetailsResponse;
import com.pulumi.azurenative.databox.inputs.BlobFilterDetailsResponse;
import com.pulumi.azurenative.databox.inputs.FilterFileDetailsResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details of the filtering the transfer of data.
 * 
 */
public final class TransferFilterDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final TransferFilterDetailsResponse Empty = new TransferFilterDetailsResponse();

    /**
     * Filter details to transfer Azure files.
     * 
     */
    @Import(name="azureFileFilterDetails")
      private final @Nullable AzureFileFilterDetailsResponse azureFileFilterDetails;

    public Optional<AzureFileFilterDetailsResponse> azureFileFilterDetails() {
        return this.azureFileFilterDetails == null ? Optional.empty() : Optional.ofNullable(this.azureFileFilterDetails);
    }

    /**
     * Filter details to transfer blobs.
     * 
     */
    @Import(name="blobFilterDetails")
      private final @Nullable BlobFilterDetailsResponse blobFilterDetails;

    public Optional<BlobFilterDetailsResponse> blobFilterDetails() {
        return this.blobFilterDetails == null ? Optional.empty() : Optional.ofNullable(this.blobFilterDetails);
    }

    /**
     * Type of the account of data.
     * 
     */
    @Import(name="dataAccountType", required=true)
      private final String dataAccountType;

    public String dataAccountType() {
        return this.dataAccountType;
    }

    /**
     * Details of the filter files to be used for data transfer.
     * 
     */
    @Import(name="filterFileDetails")
      private final @Nullable List<FilterFileDetailsResponse> filterFileDetails;

    public List<FilterFileDetailsResponse> filterFileDetails() {
        return this.filterFileDetails == null ? List.of() : this.filterFileDetails;
    }

    public TransferFilterDetailsResponse(
        @Nullable AzureFileFilterDetailsResponse azureFileFilterDetails,
        @Nullable BlobFilterDetailsResponse blobFilterDetails,
        String dataAccountType,
        @Nullable List<FilterFileDetailsResponse> filterFileDetails) {
        this.azureFileFilterDetails = azureFileFilterDetails;
        this.blobFilterDetails = blobFilterDetails;
        this.dataAccountType = Codegen.stringProp("dataAccountType").arg(dataAccountType).def("StorageAccount").require();
        this.filterFileDetails = filterFileDetails;
    }

    private TransferFilterDetailsResponse() {
        this.azureFileFilterDetails = null;
        this.blobFilterDetails = null;
        this.dataAccountType = null;
        this.filterFileDetails = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferFilterDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AzureFileFilterDetailsResponse azureFileFilterDetails;
        private @Nullable BlobFilterDetailsResponse blobFilterDetails;
        private String dataAccountType;
        private @Nullable List<FilterFileDetailsResponse> filterFileDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(TransferFilterDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureFileFilterDetails = defaults.azureFileFilterDetails;
    	      this.blobFilterDetails = defaults.blobFilterDetails;
    	      this.dataAccountType = defaults.dataAccountType;
    	      this.filterFileDetails = defaults.filterFileDetails;
        }

        public Builder azureFileFilterDetails(@Nullable AzureFileFilterDetailsResponse azureFileFilterDetails) {
            this.azureFileFilterDetails = azureFileFilterDetails;
            return this;
        }
        public Builder blobFilterDetails(@Nullable BlobFilterDetailsResponse blobFilterDetails) {
            this.blobFilterDetails = blobFilterDetails;
            return this;
        }
        public Builder dataAccountType(String dataAccountType) {
            this.dataAccountType = Objects.requireNonNull(dataAccountType);
            return this;
        }
        public Builder filterFileDetails(@Nullable List<FilterFileDetailsResponse> filterFileDetails) {
            this.filterFileDetails = filterFileDetails;
            return this;
        }
        public Builder filterFileDetails(FilterFileDetailsResponse... filterFileDetails) {
            return filterFileDetails(List.of(filterFileDetails));
        }        public TransferFilterDetailsResponse build() {
            return new TransferFilterDetailsResponse(azureFileFilterDetails, blobFilterDetails, dataAccountType, filterFileDetails);
        }
    }
}
