// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage;

import com.pulumi.asset.AssetOrArchive;
import com.pulumi.azurenative.storage.enums.BlobAccessTier;
import com.pulumi.azurenative.storage.enums.BlobType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BlobArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlobArgs Empty = new BlobArgs();

    /**
     * The access tier of the storage blob.
     * 
     */
    @Import(name="accessTier")
      private final @Nullable Output<BlobAccessTier> accessTier;

    public Output<BlobAccessTier> accessTier() {
        return this.accessTier == null ? Codegen.empty() : this.accessTier;
    }

    /**
     * Specifies the storage account in which to create the storage container.
     * 
     */
    @Import(name="accountName", required=true)
      private final Output<String> accountName;

    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The name of the storage blob. Must be unique within the storage container the blob is located.
     * 
     */
    @Import(name="blobName")
      private final @Nullable Output<String> blobName;

    public Output<String> blobName() {
        return this.blobName == null ? Codegen.empty() : this.blobName;
    }

    /**
     * The name of the storage container in which this blob should be created.
     * 
     */
    @Import(name="containerName", required=true)
      private final Output<String> containerName;

    public Output<String> containerName() {
        return this.containerName;
    }

    /**
     * The MD5 sum of the blob contents. Cannot be defined if blob type is Append.
     * 
     */
    @Import(name="contentMd5")
      private final @Nullable Output<String> contentMd5;

    public Output<String> contentMd5() {
        return this.contentMd5 == null ? Codegen.empty() : this.contentMd5;
    }

    /**
     * The content type of the storage blob. Defaults to `application/octet-stream`.
     * 
     */
    @Import(name="contentType")
      private final @Nullable Output<String> contentType;

    public Output<String> contentType() {
        return this.contentType == null ? Codegen.empty() : this.contentType;
    }

    /**
     * A map of custom blob metadata.
     * 
     */
    @Import(name="metadata")
      private final @Nullable Output<Map<String,String>> metadata;

    public Output<Map<String,String>> metadata() {
        return this.metadata == null ? Codegen.empty() : this.metadata;
    }

    /**
     * The name of the resource group within the user's subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * An asset to copy to the blob contents. This field cannot be specified for Append blobs.
     * 
     */
    @Import(name="source")
      private final @Nullable Output<AssetOrArchive> source;

    public Output<AssetOrArchive> source() {
        return this.source == null ? Codegen.empty() : this.source;
    }

    /**
     * The type of the storage blob to be created. Defaults to 'Block'.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<BlobType> type;

    public Output<BlobType> type() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    public BlobArgs(
        @Nullable Output<BlobAccessTier> accessTier,
        Output<String> accountName,
        @Nullable Output<String> blobName,
        Output<String> containerName,
        @Nullable Output<String> contentMd5,
        @Nullable Output<String> contentType,
        @Nullable Output<Map<String,String>> metadata,
        Output<String> resourceGroupName,
        @Nullable Output<AssetOrArchive> source,
        @Nullable Output<BlobType> type) {
        this.accessTier = accessTier;
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.blobName = blobName;
        this.containerName = Objects.requireNonNull(containerName, "expected parameter 'containerName' to be non-null");
        this.contentMd5 = contentMd5;
        this.contentType = contentType;
        this.metadata = metadata;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.source = source;
        this.type = type == null ? Codegen.ofNullable(com.pulumi.azurenative.storage.enums.BlobType.Block) : type;
    }

    private BlobArgs() {
        this.accessTier = Codegen.empty();
        this.accountName = Codegen.empty();
        this.blobName = Codegen.empty();
        this.containerName = Codegen.empty();
        this.contentMd5 = Codegen.empty();
        this.contentType = Codegen.empty();
        this.metadata = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.source = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BlobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<BlobAccessTier> accessTier;
        private Output<String> accountName;
        private @Nullable Output<String> blobName;
        private Output<String> containerName;
        private @Nullable Output<String> contentMd5;
        private @Nullable Output<String> contentType;
        private @Nullable Output<Map<String,String>> metadata;
        private Output<String> resourceGroupName;
        private @Nullable Output<AssetOrArchive> source;
        private @Nullable Output<BlobType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(BlobArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessTier = defaults.accessTier;
    	      this.accountName = defaults.accountName;
    	      this.blobName = defaults.blobName;
    	      this.containerName = defaults.containerName;
    	      this.contentMd5 = defaults.contentMd5;
    	      this.contentType = defaults.contentType;
    	      this.metadata = defaults.metadata;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.source = defaults.source;
    	      this.type = defaults.type;
        }

        public Builder accessTier(@Nullable Output<BlobAccessTier> accessTier) {
            this.accessTier = accessTier;
            return this;
        }
        public Builder accessTier(@Nullable BlobAccessTier accessTier) {
            this.accessTier = Codegen.ofNullable(accessTier);
            return this;
        }
        public Builder accountName(Output<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }
        public Builder accountName(String accountName) {
            this.accountName = Output.of(Objects.requireNonNull(accountName));
            return this;
        }
        public Builder blobName(@Nullable Output<String> blobName) {
            this.blobName = blobName;
            return this;
        }
        public Builder blobName(@Nullable String blobName) {
            this.blobName = Codegen.ofNullable(blobName);
            return this;
        }
        public Builder containerName(Output<String> containerName) {
            this.containerName = Objects.requireNonNull(containerName);
            return this;
        }
        public Builder containerName(String containerName) {
            this.containerName = Output.of(Objects.requireNonNull(containerName));
            return this;
        }
        public Builder contentMd5(@Nullable Output<String> contentMd5) {
            this.contentMd5 = contentMd5;
            return this;
        }
        public Builder contentMd5(@Nullable String contentMd5) {
            this.contentMd5 = Codegen.ofNullable(contentMd5);
            return this;
        }
        public Builder contentType(@Nullable Output<String> contentType) {
            this.contentType = contentType;
            return this;
        }
        public Builder contentType(@Nullable String contentType) {
            this.contentType = Codegen.ofNullable(contentType);
            return this;
        }
        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            this.metadata = metadata;
            return this;
        }
        public Builder metadata(@Nullable Map<String,String> metadata) {
            this.metadata = Codegen.ofNullable(metadata);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder source(@Nullable Output<AssetOrArchive> source) {
            this.source = source;
            return this;
        }
        public Builder source(@Nullable AssetOrArchive source) {
            this.source = Codegen.ofNullable(source);
            return this;
        }
        public Builder type(@Nullable Output<BlobType> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable BlobType type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }        public BlobArgs build() {
            return new BlobArgs(accessTier, accountName, blobName, containerName, contentMd5, contentType, metadata, resourceGroupName, source, type);
        }
    }
}
