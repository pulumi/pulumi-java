// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * InMageRcm NIC details.
 * 
 */
public final class InMageRcmNicDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final InMageRcmNicDetailsResponse Empty = new InMageRcmNicDetailsResponse();

    /**
     * A value indicating whether this is the primary NIC.
     * 
     */
    @Import(name="isPrimaryNic", required=true)
    private String isPrimaryNic;

    public String isPrimaryNic() {
        return this.isPrimaryNic;
    }

    /**
     * A value indicating whether this NIC is selected for failover.
     * 
     */
    @Import(name="isSelectedForFailover", required=true)
    private String isSelectedForFailover;

    public String isSelectedForFailover() {
        return this.isSelectedForFailover;
    }

    /**
     * The NIC Id.
     * 
     */
    @Import(name="nicId", required=true)
    private String nicId;

    public String nicId() {
        return this.nicId;
    }

    /**
     * The source IP address.
     * 
     */
    @Import(name="sourceIPAddress", required=true)
    private String sourceIPAddress;

    public String sourceIPAddress() {
        return this.sourceIPAddress;
    }

    /**
     * The source IP address type.
     * 
     */
    @Import(name="sourceIPAddressType", required=true)
    private String sourceIPAddressType;

    public String sourceIPAddressType() {
        return this.sourceIPAddressType;
    }

    /**
     * Source network Id.
     * 
     */
    @Import(name="sourceNetworkId", required=true)
    private String sourceNetworkId;

    public String sourceNetworkId() {
        return this.sourceNetworkId;
    }

    /**
     * Source subnet name.
     * 
     */
    @Import(name="sourceSubnetName", required=true)
    private String sourceSubnetName;

    public String sourceSubnetName() {
        return this.sourceSubnetName;
    }

    /**
     * The target IP address.
     * 
     */
    @Import(name="targetIPAddress", required=true)
    private String targetIPAddress;

    public String targetIPAddress() {
        return this.targetIPAddress;
    }

    /**
     * The target IP address type.
     * 
     */
    @Import(name="targetIPAddressType", required=true)
    private String targetIPAddressType;

    public String targetIPAddressType() {
        return this.targetIPAddressType;
    }

    /**
     * Target subnet name.
     * 
     */
    @Import(name="targetSubnetName", required=true)
    private String targetSubnetName;

    public String targetSubnetName() {
        return this.targetSubnetName;
    }

    /**
     * The test IP address.
     * 
     */
    @Import(name="testIPAddress", required=true)
    private String testIPAddress;

    public String testIPAddress() {
        return this.testIPAddress;
    }

    /**
     * The test IP address type.
     * 
     */
    @Import(name="testIPAddressType", required=true)
    private String testIPAddressType;

    public String testIPAddressType() {
        return this.testIPAddressType;
    }

    /**
     * Test subnet name.
     * 
     */
    @Import(name="testSubnetName", required=true)
    private String testSubnetName;

    public String testSubnetName() {
        return this.testSubnetName;
    }

    private InMageRcmNicDetailsResponse() {}

    private InMageRcmNicDetailsResponse(InMageRcmNicDetailsResponse $) {
        this.isPrimaryNic = $.isPrimaryNic;
        this.isSelectedForFailover = $.isSelectedForFailover;
        this.nicId = $.nicId;
        this.sourceIPAddress = $.sourceIPAddress;
        this.sourceIPAddressType = $.sourceIPAddressType;
        this.sourceNetworkId = $.sourceNetworkId;
        this.sourceSubnetName = $.sourceSubnetName;
        this.targetIPAddress = $.targetIPAddress;
        this.targetIPAddressType = $.targetIPAddressType;
        this.targetSubnetName = $.targetSubnetName;
        this.testIPAddress = $.testIPAddress;
        this.testIPAddressType = $.testIPAddressType;
        this.testSubnetName = $.testSubnetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InMageRcmNicDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InMageRcmNicDetailsResponse $;

        public Builder() {
            $ = new InMageRcmNicDetailsResponse();
        }

        public Builder(InMageRcmNicDetailsResponse defaults) {
            $ = new InMageRcmNicDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder isPrimaryNic(String isPrimaryNic) {
            $.isPrimaryNic = isPrimaryNic;
            return this;
        }

        public Builder isSelectedForFailover(String isSelectedForFailover) {
            $.isSelectedForFailover = isSelectedForFailover;
            return this;
        }

        public Builder nicId(String nicId) {
            $.nicId = nicId;
            return this;
        }

        public Builder sourceIPAddress(String sourceIPAddress) {
            $.sourceIPAddress = sourceIPAddress;
            return this;
        }

        public Builder sourceIPAddressType(String sourceIPAddressType) {
            $.sourceIPAddressType = sourceIPAddressType;
            return this;
        }

        public Builder sourceNetworkId(String sourceNetworkId) {
            $.sourceNetworkId = sourceNetworkId;
            return this;
        }

        public Builder sourceSubnetName(String sourceSubnetName) {
            $.sourceSubnetName = sourceSubnetName;
            return this;
        }

        public Builder targetIPAddress(String targetIPAddress) {
            $.targetIPAddress = targetIPAddress;
            return this;
        }

        public Builder targetIPAddressType(String targetIPAddressType) {
            $.targetIPAddressType = targetIPAddressType;
            return this;
        }

        public Builder targetSubnetName(String targetSubnetName) {
            $.targetSubnetName = targetSubnetName;
            return this;
        }

        public Builder testIPAddress(String testIPAddress) {
            $.testIPAddress = testIPAddress;
            return this;
        }

        public Builder testIPAddressType(String testIPAddressType) {
            $.testIPAddressType = testIPAddressType;
            return this;
        }

        public Builder testSubnetName(String testSubnetName) {
            $.testSubnetName = testSubnetName;
            return this;
        }

        public InMageRcmNicDetailsResponse build() {
            $.isPrimaryNic = Objects.requireNonNull($.isPrimaryNic, "expected parameter 'isPrimaryNic' to be non-null");
            $.isSelectedForFailover = Objects.requireNonNull($.isSelectedForFailover, "expected parameter 'isSelectedForFailover' to be non-null");
            $.nicId = Objects.requireNonNull($.nicId, "expected parameter 'nicId' to be non-null");
            $.sourceIPAddress = Objects.requireNonNull($.sourceIPAddress, "expected parameter 'sourceIPAddress' to be non-null");
            $.sourceIPAddressType = Objects.requireNonNull($.sourceIPAddressType, "expected parameter 'sourceIPAddressType' to be non-null");
            $.sourceNetworkId = Objects.requireNonNull($.sourceNetworkId, "expected parameter 'sourceNetworkId' to be non-null");
            $.sourceSubnetName = Objects.requireNonNull($.sourceSubnetName, "expected parameter 'sourceSubnetName' to be non-null");
            $.targetIPAddress = Objects.requireNonNull($.targetIPAddress, "expected parameter 'targetIPAddress' to be non-null");
            $.targetIPAddressType = Objects.requireNonNull($.targetIPAddressType, "expected parameter 'targetIPAddressType' to be non-null");
            $.targetSubnetName = Objects.requireNonNull($.targetSubnetName, "expected parameter 'targetSubnetName' to be non-null");
            $.testIPAddress = Objects.requireNonNull($.testIPAddress, "expected parameter 'testIPAddress' to be non-null");
            $.testIPAddressType = Objects.requireNonNull($.testIPAddressType, "expected parameter 'testIPAddressType' to be non-null");
            $.testSubnetName = Objects.requireNonNull($.testSubnetName, "expected parameter 'testSubnetName' to be non-null");
            return $;
        }
    }

}
