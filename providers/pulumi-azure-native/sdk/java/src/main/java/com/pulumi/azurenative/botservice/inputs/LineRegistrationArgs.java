// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties corresponding to a line channel registration
 * 
 */
public final class LineRegistrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LineRegistrationArgs Empty = new LineRegistrationArgs();

    /**
     * Access token for the line channel registration
     * 
     */
    @Import(name="channelAccessToken")
    private @Nullable Output<String> channelAccessToken;

    /**
     * @return Access token for the line channel registration
     * 
     */
    public Optional<Output<String>> channelAccessToken() {
        return Optional.ofNullable(this.channelAccessToken);
    }

    /**
     * Secret for the line channel registration
     * 
     */
    @Import(name="channelSecret")
    private @Nullable Output<String> channelSecret;

    /**
     * @return Secret for the line channel registration
     * 
     */
    public Optional<Output<String>> channelSecret() {
        return Optional.ofNullable(this.channelSecret);
    }

    private LineRegistrationArgs() {}

    private LineRegistrationArgs(LineRegistrationArgs $) {
        this.channelAccessToken = $.channelAccessToken;
        this.channelSecret = $.channelSecret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LineRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LineRegistrationArgs $;

        public Builder() {
            $ = new LineRegistrationArgs();
        }

        public Builder(LineRegistrationArgs defaults) {
            $ = new LineRegistrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param channelAccessToken Access token for the line channel registration
         * 
         * @return builder
         * 
         */
        public Builder channelAccessToken(@Nullable Output<String> channelAccessToken) {
            $.channelAccessToken = channelAccessToken;
            return this;
        }

        /**
         * @param channelAccessToken Access token for the line channel registration
         * 
         * @return builder
         * 
         */
        public Builder channelAccessToken(String channelAccessToken) {
            return channelAccessToken(Output.of(channelAccessToken));
        }

        /**
         * @param channelSecret Secret for the line channel registration
         * 
         * @return builder
         * 
         */
        public Builder channelSecret(@Nullable Output<String> channelSecret) {
            $.channelSecret = channelSecret;
            return this;
        }

        /**
         * @param channelSecret Secret for the line channel registration
         * 
         * @return builder
         * 
         */
        public Builder channelSecret(String channelSecret) {
            return channelSecret(Output.of(channelSecret));
        }

        public LineRegistrationArgs build() {
            return $;
        }
    }

}
