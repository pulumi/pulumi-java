// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.inputs.AuthorizationActionMappingResponse;
import com.pulumi.azurenative.providerhub.inputs.ExtendedLocationOptionsResponse;
import com.pulumi.azurenative.providerhub.inputs.LinkedAccessCheckResponse;
import com.pulumi.azurenative.providerhub.inputs.LoggingRuleResponse;
import com.pulumi.azurenative.providerhub.inputs.ResourceTypeEndpointResponse;
import com.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseCheckNameAvailabilitySpecifications;
import com.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseExtensionOptions;
import com.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseFeaturesRule;
import com.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseIdentityManagement;
import com.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseRequestHeaderOptions;
import com.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseResourceMovePolicy;
import com.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications;
import com.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseTemplateDeploymentOptions;
import com.pulumi.azurenative.providerhub.inputs.ServiceTreeInfoResponse;
import com.pulumi.azurenative.providerhub.inputs.SubscriptionStateRuleResponse;
import com.pulumi.azurenative.providerhub.inputs.SwaggerSpecificationResponse;
import com.pulumi.azurenative.providerhub.inputs.ThrottlingRuleResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceTypeRegistrationResponseProperties extends com.pulumi.resources.InvokeArgs {

    public static final ResourceTypeRegistrationResponseProperties Empty = new ResourceTypeRegistrationResponseProperties();

    @Import(name="allowedUnauthorizedActions")
    private @Nullable List<String> allowedUnauthorizedActions;

    public Optional<List<String>> allowedUnauthorizedActions() {
        return Optional.ofNullable(this.allowedUnauthorizedActions);
    }

    @Import(name="authorizationActionMappings")
    private @Nullable List<AuthorizationActionMappingResponse> authorizationActionMappings;

    public Optional<List<AuthorizationActionMappingResponse>> authorizationActionMappings() {
        return Optional.ofNullable(this.authorizationActionMappings);
    }

    @Import(name="checkNameAvailabilitySpecifications")
    private @Nullable ResourceTypeRegistrationPropertiesResponseCheckNameAvailabilitySpecifications checkNameAvailabilitySpecifications;

    public Optional<ResourceTypeRegistrationPropertiesResponseCheckNameAvailabilitySpecifications> checkNameAvailabilitySpecifications() {
        return Optional.ofNullable(this.checkNameAvailabilitySpecifications);
    }

    @Import(name="defaultApiVersion")
    private @Nullable String defaultApiVersion;

    public Optional<String> defaultApiVersion() {
        return Optional.ofNullable(this.defaultApiVersion);
    }

    @Import(name="disallowedActionVerbs")
    private @Nullable List<String> disallowedActionVerbs;

    public Optional<List<String>> disallowedActionVerbs() {
        return Optional.ofNullable(this.disallowedActionVerbs);
    }

    @Import(name="enableAsyncOperation")
    private @Nullable Boolean enableAsyncOperation;

    public Optional<Boolean> enableAsyncOperation() {
        return Optional.ofNullable(this.enableAsyncOperation);
    }

    @Import(name="enableThirdPartyS2S")
    private @Nullable Boolean enableThirdPartyS2S;

    public Optional<Boolean> enableThirdPartyS2S() {
        return Optional.ofNullable(this.enableThirdPartyS2S);
    }

    @Import(name="endpoints")
    private @Nullable List<ResourceTypeEndpointResponse> endpoints;

    public Optional<List<ResourceTypeEndpointResponse>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    @Import(name="extendedLocations")
    private @Nullable List<ExtendedLocationOptionsResponse> extendedLocations;

    public Optional<List<ExtendedLocationOptionsResponse>> extendedLocations() {
        return Optional.ofNullable(this.extendedLocations);
    }

    @Import(name="extensionOptions")
    private @Nullable ResourceTypeRegistrationPropertiesResponseExtensionOptions extensionOptions;

    public Optional<ResourceTypeRegistrationPropertiesResponseExtensionOptions> extensionOptions() {
        return Optional.ofNullable(this.extensionOptions);
    }

    @Import(name="featuresRule")
    private @Nullable ResourceTypeRegistrationPropertiesResponseFeaturesRule featuresRule;

    public Optional<ResourceTypeRegistrationPropertiesResponseFeaturesRule> featuresRule() {
        return Optional.ofNullable(this.featuresRule);
    }

    @Import(name="identityManagement")
    private @Nullable ResourceTypeRegistrationPropertiesResponseIdentityManagement identityManagement;

    public Optional<ResourceTypeRegistrationPropertiesResponseIdentityManagement> identityManagement() {
        return Optional.ofNullable(this.identityManagement);
    }

    @Import(name="isPureProxy")
    private @Nullable Boolean isPureProxy;

    public Optional<Boolean> isPureProxy() {
        return Optional.ofNullable(this.isPureProxy);
    }

    @Import(name="linkedAccessChecks")
    private @Nullable List<LinkedAccessCheckResponse> linkedAccessChecks;

    public Optional<List<LinkedAccessCheckResponse>> linkedAccessChecks() {
        return Optional.ofNullable(this.linkedAccessChecks);
    }

    @Import(name="loggingRules")
    private @Nullable List<LoggingRuleResponse> loggingRules;

    public Optional<List<LoggingRuleResponse>> loggingRules() {
        return Optional.ofNullable(this.loggingRules);
    }

    @Import(name="marketplaceType")
    private @Nullable String marketplaceType;

    public Optional<String> marketplaceType() {
        return Optional.ofNullable(this.marketplaceType);
    }

    @Import(name="provisioningState")
    private @Nullable String provisioningState;

    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    @Import(name="regionality")
    private @Nullable String regionality;

    public Optional<String> regionality() {
        return Optional.ofNullable(this.regionality);
    }

    @Import(name="requestHeaderOptions")
    private @Nullable ResourceTypeRegistrationPropertiesResponseRequestHeaderOptions requestHeaderOptions;

    public Optional<ResourceTypeRegistrationPropertiesResponseRequestHeaderOptions> requestHeaderOptions() {
        return Optional.ofNullable(this.requestHeaderOptions);
    }

    @Import(name="requiredFeatures")
    private @Nullable List<String> requiredFeatures;

    public Optional<List<String>> requiredFeatures() {
        return Optional.ofNullable(this.requiredFeatures);
    }

    @Import(name="resourceDeletionPolicy")
    private @Nullable String resourceDeletionPolicy;

    public Optional<String> resourceDeletionPolicy() {
        return Optional.ofNullable(this.resourceDeletionPolicy);
    }

    @Import(name="resourceMovePolicy")
    private @Nullable ResourceTypeRegistrationPropertiesResponseResourceMovePolicy resourceMovePolicy;

    public Optional<ResourceTypeRegistrationPropertiesResponseResourceMovePolicy> resourceMovePolicy() {
        return Optional.ofNullable(this.resourceMovePolicy);
    }

    @Import(name="routingType")
    private @Nullable String routingType;

    public Optional<String> routingType() {
        return Optional.ofNullable(this.routingType);
    }

    @Import(name="serviceTreeInfos")
    private @Nullable List<ServiceTreeInfoResponse> serviceTreeInfos;

    public Optional<List<ServiceTreeInfoResponse>> serviceTreeInfos() {
        return Optional.ofNullable(this.serviceTreeInfos);
    }

    @Import(name="subscriptionLifecycleNotificationSpecifications")
    private @Nullable ResourceTypeRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications;

    public Optional<ResourceTypeRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications> subscriptionLifecycleNotificationSpecifications() {
        return Optional.ofNullable(this.subscriptionLifecycleNotificationSpecifications);
    }

    @Import(name="subscriptionStateRules")
    private @Nullable List<SubscriptionStateRuleResponse> subscriptionStateRules;

    public Optional<List<SubscriptionStateRuleResponse>> subscriptionStateRules() {
        return Optional.ofNullable(this.subscriptionStateRules);
    }

    @Import(name="swaggerSpecifications")
    private @Nullable List<SwaggerSpecificationResponse> swaggerSpecifications;

    public Optional<List<SwaggerSpecificationResponse>> swaggerSpecifications() {
        return Optional.ofNullable(this.swaggerSpecifications);
    }

    @Import(name="templateDeploymentOptions")
    private @Nullable ResourceTypeRegistrationPropertiesResponseTemplateDeploymentOptions templateDeploymentOptions;

    public Optional<ResourceTypeRegistrationPropertiesResponseTemplateDeploymentOptions> templateDeploymentOptions() {
        return Optional.ofNullable(this.templateDeploymentOptions);
    }

    @Import(name="throttlingRules")
    private @Nullable List<ThrottlingRuleResponse> throttlingRules;

    public Optional<List<ThrottlingRuleResponse>> throttlingRules() {
        return Optional.ofNullable(this.throttlingRules);
    }

    private ResourceTypeRegistrationResponseProperties() {}

    private ResourceTypeRegistrationResponseProperties(ResourceTypeRegistrationResponseProperties $) {
        this.allowedUnauthorizedActions = $.allowedUnauthorizedActions;
        this.authorizationActionMappings = $.authorizationActionMappings;
        this.checkNameAvailabilitySpecifications = $.checkNameAvailabilitySpecifications;
        this.defaultApiVersion = $.defaultApiVersion;
        this.disallowedActionVerbs = $.disallowedActionVerbs;
        this.enableAsyncOperation = $.enableAsyncOperation;
        this.enableThirdPartyS2S = $.enableThirdPartyS2S;
        this.endpoints = $.endpoints;
        this.extendedLocations = $.extendedLocations;
        this.extensionOptions = $.extensionOptions;
        this.featuresRule = $.featuresRule;
        this.identityManagement = $.identityManagement;
        this.isPureProxy = $.isPureProxy;
        this.linkedAccessChecks = $.linkedAccessChecks;
        this.loggingRules = $.loggingRules;
        this.marketplaceType = $.marketplaceType;
        this.provisioningState = $.provisioningState;
        this.regionality = $.regionality;
        this.requestHeaderOptions = $.requestHeaderOptions;
        this.requiredFeatures = $.requiredFeatures;
        this.resourceDeletionPolicy = $.resourceDeletionPolicy;
        this.resourceMovePolicy = $.resourceMovePolicy;
        this.routingType = $.routingType;
        this.serviceTreeInfos = $.serviceTreeInfos;
        this.subscriptionLifecycleNotificationSpecifications = $.subscriptionLifecycleNotificationSpecifications;
        this.subscriptionStateRules = $.subscriptionStateRules;
        this.swaggerSpecifications = $.swaggerSpecifications;
        this.templateDeploymentOptions = $.templateDeploymentOptions;
        this.throttlingRules = $.throttlingRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceTypeRegistrationResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceTypeRegistrationResponseProperties $;

        public Builder() {
            $ = new ResourceTypeRegistrationResponseProperties();
        }

        public Builder(ResourceTypeRegistrationResponseProperties defaults) {
            $ = new ResourceTypeRegistrationResponseProperties(Objects.requireNonNull(defaults));
        }

        public Builder allowedUnauthorizedActions(@Nullable List<String> allowedUnauthorizedActions) {
            $.allowedUnauthorizedActions = allowedUnauthorizedActions;
            return this;
        }

        public Builder allowedUnauthorizedActions(String... allowedUnauthorizedActions) {
            return allowedUnauthorizedActions(List.of(allowedUnauthorizedActions));
        }

        public Builder authorizationActionMappings(@Nullable List<AuthorizationActionMappingResponse> authorizationActionMappings) {
            $.authorizationActionMappings = authorizationActionMappings;
            return this;
        }

        public Builder authorizationActionMappings(AuthorizationActionMappingResponse... authorizationActionMappings) {
            return authorizationActionMappings(List.of(authorizationActionMappings));
        }

        public Builder checkNameAvailabilitySpecifications(@Nullable ResourceTypeRegistrationPropertiesResponseCheckNameAvailabilitySpecifications checkNameAvailabilitySpecifications) {
            $.checkNameAvailabilitySpecifications = checkNameAvailabilitySpecifications;
            return this;
        }

        public Builder defaultApiVersion(@Nullable String defaultApiVersion) {
            $.defaultApiVersion = defaultApiVersion;
            return this;
        }

        public Builder disallowedActionVerbs(@Nullable List<String> disallowedActionVerbs) {
            $.disallowedActionVerbs = disallowedActionVerbs;
            return this;
        }

        public Builder disallowedActionVerbs(String... disallowedActionVerbs) {
            return disallowedActionVerbs(List.of(disallowedActionVerbs));
        }

        public Builder enableAsyncOperation(@Nullable Boolean enableAsyncOperation) {
            $.enableAsyncOperation = enableAsyncOperation;
            return this;
        }

        public Builder enableThirdPartyS2S(@Nullable Boolean enableThirdPartyS2S) {
            $.enableThirdPartyS2S = enableThirdPartyS2S;
            return this;
        }

        public Builder endpoints(@Nullable List<ResourceTypeEndpointResponse> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        public Builder endpoints(ResourceTypeEndpointResponse... endpoints) {
            return endpoints(List.of(endpoints));
        }

        public Builder extendedLocations(@Nullable List<ExtendedLocationOptionsResponse> extendedLocations) {
            $.extendedLocations = extendedLocations;
            return this;
        }

        public Builder extendedLocations(ExtendedLocationOptionsResponse... extendedLocations) {
            return extendedLocations(List.of(extendedLocations));
        }

        public Builder extensionOptions(@Nullable ResourceTypeRegistrationPropertiesResponseExtensionOptions extensionOptions) {
            $.extensionOptions = extensionOptions;
            return this;
        }

        public Builder featuresRule(@Nullable ResourceTypeRegistrationPropertiesResponseFeaturesRule featuresRule) {
            $.featuresRule = featuresRule;
            return this;
        }

        public Builder identityManagement(@Nullable ResourceTypeRegistrationPropertiesResponseIdentityManagement identityManagement) {
            $.identityManagement = identityManagement;
            return this;
        }

        public Builder isPureProxy(@Nullable Boolean isPureProxy) {
            $.isPureProxy = isPureProxy;
            return this;
        }

        public Builder linkedAccessChecks(@Nullable List<LinkedAccessCheckResponse> linkedAccessChecks) {
            $.linkedAccessChecks = linkedAccessChecks;
            return this;
        }

        public Builder linkedAccessChecks(LinkedAccessCheckResponse... linkedAccessChecks) {
            return linkedAccessChecks(List.of(linkedAccessChecks));
        }

        public Builder loggingRules(@Nullable List<LoggingRuleResponse> loggingRules) {
            $.loggingRules = loggingRules;
            return this;
        }

        public Builder loggingRules(LoggingRuleResponse... loggingRules) {
            return loggingRules(List.of(loggingRules));
        }

        public Builder marketplaceType(@Nullable String marketplaceType) {
            $.marketplaceType = marketplaceType;
            return this;
        }

        public Builder provisioningState(@Nullable String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder regionality(@Nullable String regionality) {
            $.regionality = regionality;
            return this;
        }

        public Builder requestHeaderOptions(@Nullable ResourceTypeRegistrationPropertiesResponseRequestHeaderOptions requestHeaderOptions) {
            $.requestHeaderOptions = requestHeaderOptions;
            return this;
        }

        public Builder requiredFeatures(@Nullable List<String> requiredFeatures) {
            $.requiredFeatures = requiredFeatures;
            return this;
        }

        public Builder requiredFeatures(String... requiredFeatures) {
            return requiredFeatures(List.of(requiredFeatures));
        }

        public Builder resourceDeletionPolicy(@Nullable String resourceDeletionPolicy) {
            $.resourceDeletionPolicy = resourceDeletionPolicy;
            return this;
        }

        public Builder resourceMovePolicy(@Nullable ResourceTypeRegistrationPropertiesResponseResourceMovePolicy resourceMovePolicy) {
            $.resourceMovePolicy = resourceMovePolicy;
            return this;
        }

        public Builder routingType(@Nullable String routingType) {
            $.routingType = routingType;
            return this;
        }

        public Builder serviceTreeInfos(@Nullable List<ServiceTreeInfoResponse> serviceTreeInfos) {
            $.serviceTreeInfos = serviceTreeInfos;
            return this;
        }

        public Builder serviceTreeInfos(ServiceTreeInfoResponse... serviceTreeInfos) {
            return serviceTreeInfos(List.of(serviceTreeInfos));
        }

        public Builder subscriptionLifecycleNotificationSpecifications(@Nullable ResourceTypeRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications) {
            $.subscriptionLifecycleNotificationSpecifications = subscriptionLifecycleNotificationSpecifications;
            return this;
        }

        public Builder subscriptionStateRules(@Nullable List<SubscriptionStateRuleResponse> subscriptionStateRules) {
            $.subscriptionStateRules = subscriptionStateRules;
            return this;
        }

        public Builder subscriptionStateRules(SubscriptionStateRuleResponse... subscriptionStateRules) {
            return subscriptionStateRules(List.of(subscriptionStateRules));
        }

        public Builder swaggerSpecifications(@Nullable List<SwaggerSpecificationResponse> swaggerSpecifications) {
            $.swaggerSpecifications = swaggerSpecifications;
            return this;
        }

        public Builder swaggerSpecifications(SwaggerSpecificationResponse... swaggerSpecifications) {
            return swaggerSpecifications(List.of(swaggerSpecifications));
        }

        public Builder templateDeploymentOptions(@Nullable ResourceTypeRegistrationPropertiesResponseTemplateDeploymentOptions templateDeploymentOptions) {
            $.templateDeploymentOptions = templateDeploymentOptions;
            return this;
        }

        public Builder throttlingRules(@Nullable List<ThrottlingRuleResponse> throttlingRules) {
            $.throttlingRules = throttlingRules;
            return this;
        }

        public Builder throttlingRules(ThrottlingRuleResponse... throttlingRules) {
            return throttlingRules(List.of(throttlingRules));
        }

        public ResourceTypeRegistrationResponseProperties build() {
            return $;
        }
    }

}
