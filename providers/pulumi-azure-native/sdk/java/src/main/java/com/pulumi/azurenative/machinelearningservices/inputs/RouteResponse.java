// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class RouteResponse extends com.pulumi.resources.InvokeArgs {

    public static final RouteResponse Empty = new RouteResponse();

    /**
     * The path for the route.
     * 
     */
    @Import(name="path", required=true)
    private String path;

    /**
     * @return The path for the route.
     * 
     */
    public String path() {
        return this.path;
    }

    /**
     * The port for the route.
     * 
     */
    @Import(name="port", required=true)
    private Integer port;

    /**
     * @return The port for the route.
     * 
     */
    public Integer port() {
        return this.port;
    }

    private RouteResponse() {}

    private RouteResponse(RouteResponse $) {
        this.path = $.path;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteResponse $;

        public Builder() {
            $ = new RouteResponse();
        }

        public Builder(RouteResponse defaults) {
            $ = new RouteResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param path The path for the route.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            $.path = path;
            return this;
        }

        /**
         * @param port The port for the route.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            $.port = port;
            return this;
        }

        public RouteResponse build() {
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            $.port = Objects.requireNonNull($.port, "expected parameter 'port' to be non-null");
            return $;
        }
    }

}
