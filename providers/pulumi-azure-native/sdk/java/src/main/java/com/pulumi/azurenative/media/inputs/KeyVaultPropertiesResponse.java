// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyVaultPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final KeyVaultPropertiesResponse Empty = new KeyVaultPropertiesResponse();

    /**
     * The current key used to encrypt the Media Services account, including the key version.
     * 
     */
    @Import(name="currentKeyIdentifier", required=true)
    private String currentKeyIdentifier;

    /**
     * @return The current key used to encrypt the Media Services account, including the key version.
     * 
     */
    public String currentKeyIdentifier() {
        return this.currentKeyIdentifier;
    }

    /**
     * The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
     * 
     */
    @Import(name="keyIdentifier")
    private @Nullable String keyIdentifier;

    /**
     * @return The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
     * 
     */
    public Optional<String> keyIdentifier() {
        return Optional.ofNullable(this.keyIdentifier);
    }

    private KeyVaultPropertiesResponse() {}

    private KeyVaultPropertiesResponse(KeyVaultPropertiesResponse $) {
        this.currentKeyIdentifier = $.currentKeyIdentifier;
        this.keyIdentifier = $.keyIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyVaultPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVaultPropertiesResponse $;

        public Builder() {
            $ = new KeyVaultPropertiesResponse();
        }

        public Builder(KeyVaultPropertiesResponse defaults) {
            $ = new KeyVaultPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param currentKeyIdentifier The current key used to encrypt the Media Services account, including the key version.
         * 
         * @return builder
         * 
         */
        public Builder currentKeyIdentifier(String currentKeyIdentifier) {
            $.currentKeyIdentifier = currentKeyIdentifier;
            return this;
        }

        /**
         * @param keyIdentifier The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
         * 
         * @return builder
         * 
         */
        public Builder keyIdentifier(@Nullable String keyIdentifier) {
            $.keyIdentifier = keyIdentifier;
            return this;
        }

        public KeyVaultPropertiesResponse build() {
            $.currentKeyIdentifier = Objects.requireNonNull($.currentKeyIdentifier, "expected parameter 'currentKeyIdentifier' to be non-null");
            return $;
        }
    }

}
