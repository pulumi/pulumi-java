// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scheduler.inputs;

import com.pulumi.azurenative.scheduler.inputs.JobActionResponse;
import com.pulumi.azurenative.scheduler.inputs.JobRecurrenceResponse;
import com.pulumi.azurenative.scheduler.inputs.JobStatusResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final JobPropertiesResponse Empty = new JobPropertiesResponse();

    /**
     * Gets or sets the job action.
     * 
     */
    @Import(name="action")
    private @Nullable JobActionResponse action;

    public Optional<JobActionResponse> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * Gets or sets the job recurrence.
     * 
     */
    @Import(name="recurrence")
    private @Nullable JobRecurrenceResponse recurrence;

    public Optional<JobRecurrenceResponse> recurrence() {
        return Optional.ofNullable(this.recurrence);
    }

    /**
     * Gets or sets the job start time.
     * 
     */
    @Import(name="startTime")
    private @Nullable String startTime;

    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * Gets or set the job state.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Gets the job status.
     * 
     */
    @Import(name="status", required=true)
    private JobStatusResponse status;

    public JobStatusResponse status() {
        return this.status;
    }

    private JobPropertiesResponse() {}

    private JobPropertiesResponse(JobPropertiesResponse $) {
        this.action = $.action;
        this.recurrence = $.recurrence;
        this.startTime = $.startTime;
        this.state = $.state;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobPropertiesResponse $;

        public Builder() {
            $ = new JobPropertiesResponse();
        }

        public Builder(JobPropertiesResponse defaults) {
            $ = new JobPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder action(@Nullable JobActionResponse action) {
            $.action = action;
            return this;
        }

        public Builder recurrence(@Nullable JobRecurrenceResponse recurrence) {
            $.recurrence = recurrence;
            return this;
        }

        public Builder startTime(@Nullable String startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public Builder status(JobStatusResponse status) {
            $.status = status;
            return this;
        }

        public JobPropertiesResponse build() {
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
