// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.WebApplicationFirewallEnabledState;
import com.pulumi.azurenative.network.enums.WebApplicationFirewallMode;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines contents of a web application firewall global configuration.
 * 
 */
public final class PolicySettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicySettingsArgs Empty = new PolicySettingsArgs();

    /**
     * Maximum file upload size in Mb for WAF.
     * 
     */
    @Import(name="fileUploadLimitInMb")
    private @Nullable Output<Integer> fileUploadLimitInMb;

    public Optional<Output<Integer>> fileUploadLimitInMb() {
        return Optional.ofNullable(this.fileUploadLimitInMb);
    }

    /**
     * Maximum request body size in Kb for WAF.
     * 
     */
    @Import(name="maxRequestBodySizeInKb")
    private @Nullable Output<Integer> maxRequestBodySizeInKb;

    public Optional<Output<Integer>> maxRequestBodySizeInKb() {
        return Optional.ofNullable(this.maxRequestBodySizeInKb);
    }

    /**
     * The mode of the policy.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<Either<String,WebApplicationFirewallMode>> mode;

    public Optional<Output<Either<String,WebApplicationFirewallMode>>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Whether to allow WAF to check request Body.
     * 
     */
    @Import(name="requestBodyCheck")
    private @Nullable Output<Boolean> requestBodyCheck;

    public Optional<Output<Boolean>> requestBodyCheck() {
        return Optional.ofNullable(this.requestBodyCheck);
    }

    /**
     * The state of the policy.
     * 
     */
    @Import(name="state")
    private @Nullable Output<Either<String,WebApplicationFirewallEnabledState>> state;

    public Optional<Output<Either<String,WebApplicationFirewallEnabledState>>> state() {
        return Optional.ofNullable(this.state);
    }

    private PolicySettingsArgs() {}

    private PolicySettingsArgs(PolicySettingsArgs $) {
        this.fileUploadLimitInMb = $.fileUploadLimitInMb;
        this.maxRequestBodySizeInKb = $.maxRequestBodySizeInKb;
        this.mode = $.mode;
        this.requestBodyCheck = $.requestBodyCheck;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicySettingsArgs $;

        public Builder() {
            $ = new PolicySettingsArgs();
        }

        public Builder(PolicySettingsArgs defaults) {
            $ = new PolicySettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder fileUploadLimitInMb(@Nullable Output<Integer> fileUploadLimitInMb) {
            $.fileUploadLimitInMb = fileUploadLimitInMb;
            return this;
        }

        public Builder fileUploadLimitInMb(Integer fileUploadLimitInMb) {
            return fileUploadLimitInMb(Output.of(fileUploadLimitInMb));
        }

        public Builder maxRequestBodySizeInKb(@Nullable Output<Integer> maxRequestBodySizeInKb) {
            $.maxRequestBodySizeInKb = maxRequestBodySizeInKb;
            return this;
        }

        public Builder maxRequestBodySizeInKb(Integer maxRequestBodySizeInKb) {
            return maxRequestBodySizeInKb(Output.of(maxRequestBodySizeInKb));
        }

        public Builder mode(@Nullable Output<Either<String,WebApplicationFirewallMode>> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(Either<String,WebApplicationFirewallMode> mode) {
            return mode(Output.of(mode));
        }

        public Builder requestBodyCheck(@Nullable Output<Boolean> requestBodyCheck) {
            $.requestBodyCheck = requestBodyCheck;
            return this;
        }

        public Builder requestBodyCheck(Boolean requestBodyCheck) {
            return requestBodyCheck(Output.of(requestBodyCheck));
        }

        public Builder state(@Nullable Output<Either<String,WebApplicationFirewallEnabledState>> state) {
            $.state = state;
            return this;
        }

        public Builder state(Either<String,WebApplicationFirewallEnabledState> state) {
            return state(Output.of(state));
        }

        public PolicySettingsArgs build() {
            return $;
        }
    }

}
