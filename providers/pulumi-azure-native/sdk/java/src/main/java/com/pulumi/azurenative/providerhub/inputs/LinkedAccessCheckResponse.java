// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinkedAccessCheckResponse extends com.pulumi.resources.InvokeArgs {

    public static final LinkedAccessCheckResponse Empty = new LinkedAccessCheckResponse();

    @Import(name="actionName")
    private @Nullable String actionName;

    public Optional<String> actionName() {
        return Optional.ofNullable(this.actionName);
    }

    @Import(name="linkedAction")
    private @Nullable String linkedAction;

    public Optional<String> linkedAction() {
        return Optional.ofNullable(this.linkedAction);
    }

    @Import(name="linkedActionVerb")
    private @Nullable String linkedActionVerb;

    public Optional<String> linkedActionVerb() {
        return Optional.ofNullable(this.linkedActionVerb);
    }

    @Import(name="linkedProperty")
    private @Nullable String linkedProperty;

    public Optional<String> linkedProperty() {
        return Optional.ofNullable(this.linkedProperty);
    }

    @Import(name="linkedType")
    private @Nullable String linkedType;

    public Optional<String> linkedType() {
        return Optional.ofNullable(this.linkedType);
    }

    private LinkedAccessCheckResponse() {}

    private LinkedAccessCheckResponse(LinkedAccessCheckResponse $) {
        this.actionName = $.actionName;
        this.linkedAction = $.linkedAction;
        this.linkedActionVerb = $.linkedActionVerb;
        this.linkedProperty = $.linkedProperty;
        this.linkedType = $.linkedType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinkedAccessCheckResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinkedAccessCheckResponse $;

        public Builder() {
            $ = new LinkedAccessCheckResponse();
        }

        public Builder(LinkedAccessCheckResponse defaults) {
            $ = new LinkedAccessCheckResponse(Objects.requireNonNull(defaults));
        }

        public Builder actionName(@Nullable String actionName) {
            $.actionName = actionName;
            return this;
        }

        public Builder linkedAction(@Nullable String linkedAction) {
            $.linkedAction = linkedAction;
            return this;
        }

        public Builder linkedActionVerb(@Nullable String linkedActionVerb) {
            $.linkedActionVerb = linkedActionVerb;
            return this;
        }

        public Builder linkedProperty(@Nullable String linkedProperty) {
            $.linkedProperty = linkedProperty;
            return this;
        }

        public Builder linkedType(@Nullable String linkedType) {
            $.linkedType = linkedType;
            return this;
        }

        public LinkedAccessCheckResponse build() {
            return $;
        }
    }

}
