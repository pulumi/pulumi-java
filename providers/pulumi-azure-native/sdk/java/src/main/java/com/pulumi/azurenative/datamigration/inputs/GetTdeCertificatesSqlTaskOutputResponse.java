// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.azurenative.datamigration.inputs.ReportableExceptionResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


/**
 * Output of the task that gets TDE certificates in Base64 encoded format.
 * 
 */
public final class GetTdeCertificatesSqlTaskOutputResponse extends com.pulumi.resources.InvokeArgs {

    public static final GetTdeCertificatesSqlTaskOutputResponse Empty = new GetTdeCertificatesSqlTaskOutputResponse();

    /**
     * Mapping from certificate name to base 64 encoded format.
     * 
     */
    @Import(name="base64EncodedCertificates", required=true)
    private Map<String,List<String>> base64EncodedCertificates;

    public Map<String,List<String>> base64EncodedCertificates() {
        return this.base64EncodedCertificates;
    }

    /**
     * Validation errors
     * 
     */
    @Import(name="validationErrors", required=true)
    private List<ReportableExceptionResponse> validationErrors;

    public List<ReportableExceptionResponse> validationErrors() {
        return this.validationErrors;
    }

    private GetTdeCertificatesSqlTaskOutputResponse() {}

    private GetTdeCertificatesSqlTaskOutputResponse(GetTdeCertificatesSqlTaskOutputResponse $) {
        this.base64EncodedCertificates = $.base64EncodedCertificates;
        this.validationErrors = $.validationErrors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTdeCertificatesSqlTaskOutputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTdeCertificatesSqlTaskOutputResponse $;

        public Builder() {
            $ = new GetTdeCertificatesSqlTaskOutputResponse();
        }

        public Builder(GetTdeCertificatesSqlTaskOutputResponse defaults) {
            $ = new GetTdeCertificatesSqlTaskOutputResponse(Objects.requireNonNull(defaults));
        }

        public Builder base64EncodedCertificates(Map<String,List<String>> base64EncodedCertificates) {
            $.base64EncodedCertificates = base64EncodedCertificates;
            return this;
        }

        public Builder validationErrors(List<ReportableExceptionResponse> validationErrors) {
            $.validationErrors = validationErrors;
            return this;
        }

        public Builder validationErrors(ReportableExceptionResponse... validationErrors) {
            return validationErrors(List.of(validationErrors));
        }

        public GetTdeCertificatesSqlTaskOutputResponse build() {
            $.base64EncodedCertificates = Objects.requireNonNull($.base64EncodedCertificates, "expected parameter 'base64EncodedCertificates' to be non-null");
            $.validationErrors = Objects.requireNonNull($.validationErrors, "expected parameter 'validationErrors' to be non-null");
            return $;
        }
    }

}
