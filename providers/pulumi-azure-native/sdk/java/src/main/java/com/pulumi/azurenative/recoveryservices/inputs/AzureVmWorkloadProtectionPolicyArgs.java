// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.enums.WorkloadType;
import com.pulumi.azurenative.recoveryservices.inputs.SettingsArgs;
import com.pulumi.azurenative.recoveryservices.inputs.SubProtectionPolicyArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Azure VM (Mercury) workload-specific backup policy.
 * 
 */
public final class AzureVmWorkloadProtectionPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureVmWorkloadProtectionPolicyArgs Empty = new AzureVmWorkloadProtectionPolicyArgs();

    /**
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
     * Expected value is &#39;AzureWorkload&#39;.
     * 
     */
    @Import(name="backupManagementType", required=true)
    private Output<String> backupManagementType;

    public Output<String> backupManagementType() {
        return this.backupManagementType;
    }

    /**
     * Fix the policy inconsistency
     * 
     */
    @Import(name="makePolicyConsistent")
    private @Nullable Output<Boolean> makePolicyConsistent;

    public Optional<Output<Boolean>> makePolicyConsistent() {
        return Optional.ofNullable(this.makePolicyConsistent);
    }

    /**
     * Number of items associated with this policy.
     * 
     */
    @Import(name="protectedItemsCount")
    private @Nullable Output<Integer> protectedItemsCount;

    public Optional<Output<Integer>> protectedItemsCount() {
        return Optional.ofNullable(this.protectedItemsCount);
    }

    /**
     * Common settings for the backup management
     * 
     */
    @Import(name="settings")
    private @Nullable Output<SettingsArgs> settings;

    public Optional<Output<SettingsArgs>> settings() {
        return Optional.ofNullable(this.settings);
    }

    /**
     * List of sub-protection policies which includes schedule and retention
     * 
     */
    @Import(name="subProtectionPolicy")
    private @Nullable Output<List<SubProtectionPolicyArgs>> subProtectionPolicy;

    public Optional<Output<List<SubProtectionPolicyArgs>>> subProtectionPolicy() {
        return Optional.ofNullable(this.subProtectionPolicy);
    }

    /**
     * Type of workload for the backup management
     * 
     */
    @Import(name="workLoadType")
    private @Nullable Output<Either<String,WorkloadType>> workLoadType;

    public Optional<Output<Either<String,WorkloadType>>> workLoadType() {
        return Optional.ofNullable(this.workLoadType);
    }

    private AzureVmWorkloadProtectionPolicyArgs() {}

    private AzureVmWorkloadProtectionPolicyArgs(AzureVmWorkloadProtectionPolicyArgs $) {
        this.backupManagementType = $.backupManagementType;
        this.makePolicyConsistent = $.makePolicyConsistent;
        this.protectedItemsCount = $.protectedItemsCount;
        this.settings = $.settings;
        this.subProtectionPolicy = $.subProtectionPolicy;
        this.workLoadType = $.workLoadType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureVmWorkloadProtectionPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureVmWorkloadProtectionPolicyArgs $;

        public Builder() {
            $ = new AzureVmWorkloadProtectionPolicyArgs();
        }

        public Builder(AzureVmWorkloadProtectionPolicyArgs defaults) {
            $ = new AzureVmWorkloadProtectionPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder backupManagementType(Output<String> backupManagementType) {
            $.backupManagementType = backupManagementType;
            return this;
        }

        public Builder backupManagementType(String backupManagementType) {
            return backupManagementType(Output.of(backupManagementType));
        }

        public Builder makePolicyConsistent(@Nullable Output<Boolean> makePolicyConsistent) {
            $.makePolicyConsistent = makePolicyConsistent;
            return this;
        }

        public Builder makePolicyConsistent(Boolean makePolicyConsistent) {
            return makePolicyConsistent(Output.of(makePolicyConsistent));
        }

        public Builder protectedItemsCount(@Nullable Output<Integer> protectedItemsCount) {
            $.protectedItemsCount = protectedItemsCount;
            return this;
        }

        public Builder protectedItemsCount(Integer protectedItemsCount) {
            return protectedItemsCount(Output.of(protectedItemsCount));
        }

        public Builder settings(@Nullable Output<SettingsArgs> settings) {
            $.settings = settings;
            return this;
        }

        public Builder settings(SettingsArgs settings) {
            return settings(Output.of(settings));
        }

        public Builder subProtectionPolicy(@Nullable Output<List<SubProtectionPolicyArgs>> subProtectionPolicy) {
            $.subProtectionPolicy = subProtectionPolicy;
            return this;
        }

        public Builder subProtectionPolicy(List<SubProtectionPolicyArgs> subProtectionPolicy) {
            return subProtectionPolicy(Output.of(subProtectionPolicy));
        }

        public Builder subProtectionPolicy(SubProtectionPolicyArgs... subProtectionPolicy) {
            return subProtectionPolicy(List.of(subProtectionPolicy));
        }

        public Builder workLoadType(@Nullable Output<Either<String,WorkloadType>> workLoadType) {
            $.workLoadType = workLoadType;
            return this;
        }

        public Builder workLoadType(Either<String,WorkloadType> workLoadType) {
            return workLoadType(Output.of(workLoadType));
        }

        public Builder workLoadType(String workLoadType) {
            return workLoadType(Either.ofLeft(workLoadType));
        }

        public Builder workLoadType(WorkloadType workLoadType) {
            return workLoadType(Either.ofRight(workLoadType));
        }

        public AzureVmWorkloadProtectionPolicyArgs build() {
            $.backupManagementType = Codegen.stringProp("backupManagementType").output().arg($.backupManagementType).require();
            return $;
        }
    }

}
