// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.inputs;

import com.pulumi.azurenative.containerinstance.inputs.ContainerExecArgs;
import com.pulumi.azurenative.containerinstance.inputs.ContainerHttpGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The container probe, for liveness or readiness
 * 
 */
public final class ContainerProbeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerProbeArgs Empty = new ContainerProbeArgs();

    /**
     * The execution command to probe
     * 
     */
    @Import(name="exec")
    private @Nullable Output<ContainerExecArgs> exec;

    public Optional<Output<ContainerExecArgs>> exec() {
        return Optional.ofNullable(this.exec);
    }

    /**
     * The failure threshold.
     * 
     */
    @Import(name="failureThreshold")
    private @Nullable Output<Integer> failureThreshold;

    public Optional<Output<Integer>> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }

    /**
     * The Http Get settings to probe
     * 
     */
    @Import(name="httpGet")
    private @Nullable Output<ContainerHttpGetArgs> httpGet;

    public Optional<Output<ContainerHttpGetArgs>> httpGet() {
        return Optional.ofNullable(this.httpGet);
    }

    /**
     * The initial delay seconds.
     * 
     */
    @Import(name="initialDelaySeconds")
    private @Nullable Output<Integer> initialDelaySeconds;

    public Optional<Output<Integer>> initialDelaySeconds() {
        return Optional.ofNullable(this.initialDelaySeconds);
    }

    /**
     * The period seconds.
     * 
     */
    @Import(name="periodSeconds")
    private @Nullable Output<Integer> periodSeconds;

    public Optional<Output<Integer>> periodSeconds() {
        return Optional.ofNullable(this.periodSeconds);
    }

    /**
     * The success threshold.
     * 
     */
    @Import(name="successThreshold")
    private @Nullable Output<Integer> successThreshold;

    public Optional<Output<Integer>> successThreshold() {
        return Optional.ofNullable(this.successThreshold);
    }

    /**
     * The timeout seconds.
     * 
     */
    @Import(name="timeoutSeconds")
    private @Nullable Output<Integer> timeoutSeconds;

    public Optional<Output<Integer>> timeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }

    private ContainerProbeArgs() {}

    private ContainerProbeArgs(ContainerProbeArgs $) {
        this.exec = $.exec;
        this.failureThreshold = $.failureThreshold;
        this.httpGet = $.httpGet;
        this.initialDelaySeconds = $.initialDelaySeconds;
        this.periodSeconds = $.periodSeconds;
        this.successThreshold = $.successThreshold;
        this.timeoutSeconds = $.timeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerProbeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerProbeArgs $;

        public Builder() {
            $ = new ContainerProbeArgs();
        }

        public Builder(ContainerProbeArgs defaults) {
            $ = new ContainerProbeArgs(Objects.requireNonNull(defaults));
        }

        public Builder exec(@Nullable Output<ContainerExecArgs> exec) {
            $.exec = exec;
            return this;
        }

        public Builder exec(ContainerExecArgs exec) {
            return exec(Output.of(exec));
        }

        public Builder failureThreshold(@Nullable Output<Integer> failureThreshold) {
            $.failureThreshold = failureThreshold;
            return this;
        }

        public Builder failureThreshold(Integer failureThreshold) {
            return failureThreshold(Output.of(failureThreshold));
        }

        public Builder httpGet(@Nullable Output<ContainerHttpGetArgs> httpGet) {
            $.httpGet = httpGet;
            return this;
        }

        public Builder httpGet(ContainerHttpGetArgs httpGet) {
            return httpGet(Output.of(httpGet));
        }

        public Builder initialDelaySeconds(@Nullable Output<Integer> initialDelaySeconds) {
            $.initialDelaySeconds = initialDelaySeconds;
            return this;
        }

        public Builder initialDelaySeconds(Integer initialDelaySeconds) {
            return initialDelaySeconds(Output.of(initialDelaySeconds));
        }

        public Builder periodSeconds(@Nullable Output<Integer> periodSeconds) {
            $.periodSeconds = periodSeconds;
            return this;
        }

        public Builder periodSeconds(Integer periodSeconds) {
            return periodSeconds(Output.of(periodSeconds));
        }

        public Builder successThreshold(@Nullable Output<Integer> successThreshold) {
            $.successThreshold = successThreshold;
            return this;
        }

        public Builder successThreshold(Integer successThreshold) {
            return successThreshold(Output.of(successThreshold));
        }

        public Builder timeoutSeconds(@Nullable Output<Integer> timeoutSeconds) {
            $.timeoutSeconds = timeoutSeconds;
            return this;
        }

        public Builder timeoutSeconds(Integer timeoutSeconds) {
            return timeoutSeconds(Output.of(timeoutSeconds));
        }

        public ContainerProbeArgs build() {
            return $;
        }
    }

}
