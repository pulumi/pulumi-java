// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybridnetwork;

import com.pulumi.azurenative.hybridnetwork.inputs.NetworkFunctionUserConfigurationArgs;
import com.pulumi.azurenative.hybridnetwork.inputs.SubResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFunctionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFunctionArgs Empty = new NetworkFunctionArgs();

    /**
     * The reference to the device resource.
     * 
     */
    @Import(name="device")
    private @Nullable Output<SubResourceArgs> device;

    /**
     * @return The reference to the device resource.
     * 
     */
    public Optional<Output<SubResourceArgs>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The parameters for the managed application.
     * 
     */
    @Import(name="managedApplicationParameters")
    private @Nullable Output<Object> managedApplicationParameters;

    /**
     * @return The parameters for the managed application.
     * 
     */
    public Optional<Output<Object>> managedApplicationParameters() {
        return Optional.ofNullable(this.managedApplicationParameters);
    }

    /**
     * Resource name for the network function resource.
     * 
     */
    @Import(name="networkFunctionName")
    private @Nullable Output<String> networkFunctionName;

    /**
     * @return Resource name for the network function resource.
     * 
     */
    public Optional<Output<String>> networkFunctionName() {
        return Optional.ofNullable(this.networkFunctionName);
    }

    /**
     * The network function configurations from the user.
     * 
     */
    @Import(name="networkFunctionUserConfigurations")
    private @Nullable Output<List<NetworkFunctionUserConfigurationArgs>> networkFunctionUserConfigurations;

    /**
     * @return The network function configurations from the user.
     * 
     */
    public Optional<Output<List<NetworkFunctionUserConfigurationArgs>>> networkFunctionUserConfigurations() {
        return Optional.ofNullable(this.networkFunctionUserConfigurations);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The sku name for the network function.
     * 
     */
    @Import(name="skuName")
    private @Nullable Output<String> skuName;

    /**
     * @return The sku name for the network function.
     * 
     */
    public Optional<Output<String>> skuName() {
        return Optional.ofNullable(this.skuName);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The vendor name for the network function.
     * 
     */
    @Import(name="vendorName")
    private @Nullable Output<String> vendorName;

    /**
     * @return The vendor name for the network function.
     * 
     */
    public Optional<Output<String>> vendorName() {
        return Optional.ofNullable(this.vendorName);
    }

    private NetworkFunctionArgs() {}

    private NetworkFunctionArgs(NetworkFunctionArgs $) {
        this.device = $.device;
        this.location = $.location;
        this.managedApplicationParameters = $.managedApplicationParameters;
        this.networkFunctionName = $.networkFunctionName;
        this.networkFunctionUserConfigurations = $.networkFunctionUserConfigurations;
        this.resourceGroupName = $.resourceGroupName;
        this.skuName = $.skuName;
        this.tags = $.tags;
        this.vendorName = $.vendorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFunctionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFunctionArgs $;

        public Builder() {
            $ = new NetworkFunctionArgs();
        }

        public Builder(NetworkFunctionArgs defaults) {
            $ = new NetworkFunctionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param device The reference to the device resource.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<SubResourceArgs> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The reference to the device resource.
         * 
         * @return builder
         * 
         */
        public Builder device(SubResourceArgs device) {
            return device(Output.of(device));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managedApplicationParameters The parameters for the managed application.
         * 
         * @return builder
         * 
         */
        public Builder managedApplicationParameters(@Nullable Output<Object> managedApplicationParameters) {
            $.managedApplicationParameters = managedApplicationParameters;
            return this;
        }

        /**
         * @param managedApplicationParameters The parameters for the managed application.
         * 
         * @return builder
         * 
         */
        public Builder managedApplicationParameters(Object managedApplicationParameters) {
            return managedApplicationParameters(Output.of(managedApplicationParameters));
        }

        /**
         * @param networkFunctionName Resource name for the network function resource.
         * 
         * @return builder
         * 
         */
        public Builder networkFunctionName(@Nullable Output<String> networkFunctionName) {
            $.networkFunctionName = networkFunctionName;
            return this;
        }

        /**
         * @param networkFunctionName Resource name for the network function resource.
         * 
         * @return builder
         * 
         */
        public Builder networkFunctionName(String networkFunctionName) {
            return networkFunctionName(Output.of(networkFunctionName));
        }

        /**
         * @param networkFunctionUserConfigurations The network function configurations from the user.
         * 
         * @return builder
         * 
         */
        public Builder networkFunctionUserConfigurations(@Nullable Output<List<NetworkFunctionUserConfigurationArgs>> networkFunctionUserConfigurations) {
            $.networkFunctionUserConfigurations = networkFunctionUserConfigurations;
            return this;
        }

        /**
         * @param networkFunctionUserConfigurations The network function configurations from the user.
         * 
         * @return builder
         * 
         */
        public Builder networkFunctionUserConfigurations(List<NetworkFunctionUserConfigurationArgs> networkFunctionUserConfigurations) {
            return networkFunctionUserConfigurations(Output.of(networkFunctionUserConfigurations));
        }

        /**
         * @param networkFunctionUserConfigurations The network function configurations from the user.
         * 
         * @return builder
         * 
         */
        public Builder networkFunctionUserConfigurations(NetworkFunctionUserConfigurationArgs... networkFunctionUserConfigurations) {
            return networkFunctionUserConfigurations(List.of(networkFunctionUserConfigurations));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skuName The sku name for the network function.
         * 
         * @return builder
         * 
         */
        public Builder skuName(@Nullable Output<String> skuName) {
            $.skuName = skuName;
            return this;
        }

        /**
         * @param skuName The sku name for the network function.
         * 
         * @return builder
         * 
         */
        public Builder skuName(String skuName) {
            return skuName(Output.of(skuName));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vendorName The vendor name for the network function.
         * 
         * @return builder
         * 
         */
        public Builder vendorName(@Nullable Output<String> vendorName) {
            $.vendorName = vendorName;
            return this;
        }

        /**
         * @param vendorName The vendor name for the network function.
         * 
         * @return builder
         * 
         */
        public Builder vendorName(String vendorName) {
            return vendorName(Output.of(vendorName));
        }

        public NetworkFunctionArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
