// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resources.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The debug setting.
 * 
 */
public final class DebugSettingResponse extends com.pulumi.resources.InvokeArgs {

    public static final DebugSettingResponse Empty = new DebugSettingResponse();

    /**
     * Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
     * 
     */
    @Import(name="detailLevel")
    private @Nullable String detailLevel;

    /**
     * @return Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
     * 
     */
    public Optional<String> detailLevel() {
        return Optional.ofNullable(this.detailLevel);
    }

    private DebugSettingResponse() {}

    private DebugSettingResponse(DebugSettingResponse $) {
        this.detailLevel = $.detailLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DebugSettingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DebugSettingResponse $;

        public Builder() {
            $ = new DebugSettingResponse();
        }

        public Builder(DebugSettingResponse defaults) {
            $ = new DebugSettingResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param detailLevel Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
         * 
         * @return builder
         * 
         */
        public Builder detailLevel(@Nullable String detailLevel) {
            $.detailLevel = detailLevel;
            return this;
        }

        public DebugSettingResponse build() {
            return $;
        }
    }

}
