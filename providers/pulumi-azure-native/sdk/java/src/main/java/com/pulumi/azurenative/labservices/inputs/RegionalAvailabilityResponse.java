// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.inputs;

import com.pulumi.azurenative.labservices.inputs.SizeAvailabilityResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The availability information of sizes across regions
 * 
 */
public final class RegionalAvailabilityResponse extends com.pulumi.resources.InvokeArgs {

    public static final RegionalAvailabilityResponse Empty = new RegionalAvailabilityResponse();

    /**
     * Corresponding region
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return Corresponding region
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * List of all the size information for the region
     * 
     */
    @Import(name="sizeAvailabilities")
    private @Nullable List<SizeAvailabilityResponse> sizeAvailabilities;

    /**
     * @return List of all the size information for the region
     * 
     */
    public Optional<List<SizeAvailabilityResponse>> sizeAvailabilities() {
        return Optional.ofNullable(this.sizeAvailabilities);
    }

    private RegionalAvailabilityResponse() {}

    private RegionalAvailabilityResponse(RegionalAvailabilityResponse $) {
        this.region = $.region;
        this.sizeAvailabilities = $.sizeAvailabilities;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionalAvailabilityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionalAvailabilityResponse $;

        public Builder() {
            $ = new RegionalAvailabilityResponse();
        }

        public Builder(RegionalAvailabilityResponse defaults) {
            $ = new RegionalAvailabilityResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param region Corresponding region
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param sizeAvailabilities List of all the size information for the region
         * 
         * @return builder
         * 
         */
        public Builder sizeAvailabilities(@Nullable List<SizeAvailabilityResponse> sizeAvailabilities) {
            $.sizeAvailabilities = sizeAvailabilities;
            return this;
        }

        /**
         * @param sizeAvailabilities List of all the size information for the region
         * 
         * @return builder
         * 
         */
        public Builder sizeAvailabilities(SizeAvailabilityResponse... sizeAvailabilities) {
            return sizeAvailabilities(List.of(sizeAvailabilities));
        }

        public RegionalAvailabilityResponse build() {
            return $;
        }
    }

}
