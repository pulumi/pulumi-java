// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The GitHub action container configuration.
 * 
 */
public final class GitHubActionContainerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitHubActionContainerConfigurationArgs Empty = new GitHubActionContainerConfigurationArgs();

    /**
     * The image name for the build.
     * 
     */
    @Import(name="imageName")
      private final @Nullable Output<String> imageName;

    public Output<String> imageName() {
        return this.imageName == null ? Codegen.empty() : this.imageName;
    }

    /**
     * The password used to upload the image to the container registry.
     * 
     */
    @Import(name="password")
      private final @Nullable Output<String> password;

    public Output<String> password() {
        return this.password == null ? Codegen.empty() : this.password;
    }

    /**
     * The server URL for the container registry where the build will be hosted.
     * 
     */
    @Import(name="serverUrl")
      private final @Nullable Output<String> serverUrl;

    public Output<String> serverUrl() {
        return this.serverUrl == null ? Codegen.empty() : this.serverUrl;
    }

    /**
     * The username used to upload the image to the container registry.
     * 
     */
    @Import(name="username")
      private final @Nullable Output<String> username;

    public Output<String> username() {
        return this.username == null ? Codegen.empty() : this.username;
    }

    public GitHubActionContainerConfigurationArgs(
        @Nullable Output<String> imageName,
        @Nullable Output<String> password,
        @Nullable Output<String> serverUrl,
        @Nullable Output<String> username) {
        this.imageName = imageName;
        this.password = password;
        this.serverUrl = serverUrl;
        this.username = username;
    }

    private GitHubActionContainerConfigurationArgs() {
        this.imageName = Codegen.empty();
        this.password = Codegen.empty();
        this.serverUrl = Codegen.empty();
        this.username = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitHubActionContainerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> imageName;
        private @Nullable Output<String> password;
        private @Nullable Output<String> serverUrl;
        private @Nullable Output<String> username;

        public Builder() {
    	      // Empty
        }

        public Builder(GitHubActionContainerConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageName = defaults.imageName;
    	      this.password = defaults.password;
    	      this.serverUrl = defaults.serverUrl;
    	      this.username = defaults.username;
        }

        public Builder imageName(@Nullable Output<String> imageName) {
            this.imageName = imageName;
            return this;
        }
        public Builder imageName(@Nullable String imageName) {
            this.imageName = Codegen.ofNullable(imageName);
            return this;
        }
        public Builder password(@Nullable Output<String> password) {
            this.password = password;
            return this;
        }
        public Builder password(@Nullable String password) {
            this.password = Codegen.ofNullable(password);
            return this;
        }
        public Builder serverUrl(@Nullable Output<String> serverUrl) {
            this.serverUrl = serverUrl;
            return this;
        }
        public Builder serverUrl(@Nullable String serverUrl) {
            this.serverUrl = Codegen.ofNullable(serverUrl);
            return this;
        }
        public Builder username(@Nullable Output<String> username) {
            this.username = username;
            return this;
        }
        public Builder username(@Nullable String username) {
            this.username = Codegen.ofNullable(username);
            return this;
        }        public GitHubActionContainerConfigurationArgs build() {
            return new GitHubActionContainerConfigurationArgs(imageName, password, serverUrl, username);
        }
    }
}
