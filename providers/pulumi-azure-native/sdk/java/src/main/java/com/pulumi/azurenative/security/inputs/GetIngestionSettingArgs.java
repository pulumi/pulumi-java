// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetIngestionSettingArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIngestionSettingArgs Empty = new GetIngestionSettingArgs();

    /**
     * Name of the ingestion setting
     * 
     */
    @Import(name="ingestionSettingName", required=true)
    private Output<String> ingestionSettingName;

    /**
     * @return Name of the ingestion setting
     * 
     */
    public Output<String> ingestionSettingName() {
        return this.ingestionSettingName;
    }

    private GetIngestionSettingArgs() {}

    private GetIngestionSettingArgs(GetIngestionSettingArgs $) {
        this.ingestionSettingName = $.ingestionSettingName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIngestionSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIngestionSettingArgs $;

        public Builder() {
            $ = new GetIngestionSettingArgs();
        }

        public Builder(GetIngestionSettingArgs defaults) {
            $ = new GetIngestionSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ingestionSettingName Name of the ingestion setting
         * 
         * @return builder
         * 
         */
        public Builder ingestionSettingName(Output<String> ingestionSettingName) {
            $.ingestionSettingName = ingestionSettingName;
            return this;
        }

        /**
         * @param ingestionSettingName Name of the ingestion setting
         * 
         * @return builder
         * 
         */
        public Builder ingestionSettingName(String ingestionSettingName) {
            return ingestionSettingName(Output.of(ingestionSettingName));
        }

        public GetIngestionSettingArgs build() {
            $.ingestionSettingName = Objects.requireNonNull($.ingestionSettingName, "expected parameter 'ingestionSettingName' to be non-null");
            return $;
        }
    }

}
