// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security;

import com.pulumi.azurenative.security.inputs.SecurityContactPropertiesAlertNotificationsArgs;
import com.pulumi.azurenative.security.inputs.SecurityContactPropertiesNotificationsByRoleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityContactArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityContactArgs Empty = new SecurityContactArgs();

    /**
     * Defines whether to send email notifications about new security alerts
     * 
     */
    @Import(name="alertNotifications")
    private @Nullable Output<SecurityContactPropertiesAlertNotificationsArgs> alertNotifications;

    public Optional<Output<SecurityContactPropertiesAlertNotificationsArgs>> alertNotifications() {
        return Optional.ofNullable(this.alertNotifications);
    }

    /**
     * List of email addresses which will get notifications from Azure Security Center by the configurations defined in this security contact.
     * 
     */
    @Import(name="emails")
    private @Nullable Output<String> emails;

    public Optional<Output<String>> emails() {
        return Optional.ofNullable(this.emails);
    }

    /**
     * Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
     * 
     */
    @Import(name="notificationsByRole")
    private @Nullable Output<SecurityContactPropertiesNotificationsByRoleArgs> notificationsByRole;

    public Optional<Output<SecurityContactPropertiesNotificationsByRoleArgs>> notificationsByRole() {
        return Optional.ofNullable(this.notificationsByRole);
    }

    /**
     * The security contact&#39;s phone number
     * 
     */
    @Import(name="phone")
    private @Nullable Output<String> phone;

    public Optional<Output<String>> phone() {
        return Optional.ofNullable(this.phone);
    }

    /**
     * Name of the security contact object
     * 
     */
    @Import(name="securityContactName")
    private @Nullable Output<String> securityContactName;

    public Optional<Output<String>> securityContactName() {
        return Optional.ofNullable(this.securityContactName);
    }

    private SecurityContactArgs() {}

    private SecurityContactArgs(SecurityContactArgs $) {
        this.alertNotifications = $.alertNotifications;
        this.emails = $.emails;
        this.notificationsByRole = $.notificationsByRole;
        this.phone = $.phone;
        this.securityContactName = $.securityContactName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityContactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityContactArgs $;

        public Builder() {
            $ = new SecurityContactArgs();
        }

        public Builder(SecurityContactArgs defaults) {
            $ = new SecurityContactArgs(Objects.requireNonNull(defaults));
        }

        public Builder alertNotifications(@Nullable Output<SecurityContactPropertiesAlertNotificationsArgs> alertNotifications) {
            $.alertNotifications = alertNotifications;
            return this;
        }

        public Builder alertNotifications(SecurityContactPropertiesAlertNotificationsArgs alertNotifications) {
            return alertNotifications(Output.of(alertNotifications));
        }

        public Builder emails(@Nullable Output<String> emails) {
            $.emails = emails;
            return this;
        }

        public Builder emails(String emails) {
            return emails(Output.of(emails));
        }

        public Builder notificationsByRole(@Nullable Output<SecurityContactPropertiesNotificationsByRoleArgs> notificationsByRole) {
            $.notificationsByRole = notificationsByRole;
            return this;
        }

        public Builder notificationsByRole(SecurityContactPropertiesNotificationsByRoleArgs notificationsByRole) {
            return notificationsByRole(Output.of(notificationsByRole));
        }

        public Builder phone(@Nullable Output<String> phone) {
            $.phone = phone;
            return this;
        }

        public Builder phone(String phone) {
            return phone(Output.of(phone));
        }

        public Builder securityContactName(@Nullable Output<String> securityContactName) {
            $.securityContactName = securityContactName;
            return this;
        }

        public Builder securityContactName(String securityContactName) {
            return securityContactName(Output.of(securityContactName));
        }

        public SecurityContactArgs build() {
            return $;
        }
    }

}
