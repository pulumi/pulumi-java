// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web;

import com.pulumi.azurenative.web.enums.AzureResourceType;
import com.pulumi.azurenative.web.enums.CustomHostNameDnsRecordType;
import com.pulumi.azurenative.web.enums.HostNameType;
import com.pulumi.azurenative.web.enums.SslState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAppHostNameBindingSlotArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAppHostNameBindingSlotArgs Empty = new WebAppHostNameBindingSlotArgs();

    /**
     * Azure resource name.
     * 
     */
    @Import(name="azureResourceName")
    private @Nullable Output<String> azureResourceName;

    /**
     * @return Azure resource name.
     * 
     */
    public Optional<Output<String>> azureResourceName() {
        return Optional.ofNullable(this.azureResourceName);
    }

    /**
     * Azure resource type.
     * 
     */
    @Import(name="azureResourceType")
    private @Nullable Output<AzureResourceType> azureResourceType;

    /**
     * @return Azure resource type.
     * 
     */
    public Optional<Output<AzureResourceType>> azureResourceType() {
        return Optional.ofNullable(this.azureResourceType);
    }

    /**
     * Custom DNS record type.
     * 
     */
    @Import(name="customHostNameDnsRecordType")
    private @Nullable Output<CustomHostNameDnsRecordType> customHostNameDnsRecordType;

    /**
     * @return Custom DNS record type.
     * 
     */
    public Optional<Output<CustomHostNameDnsRecordType>> customHostNameDnsRecordType() {
        return Optional.ofNullable(this.customHostNameDnsRecordType);
    }

    /**
     * Fully qualified ARM domain resource URI.
     * 
     */
    @Import(name="domainId")
    private @Nullable Output<String> domainId;

    /**
     * @return Fully qualified ARM domain resource URI.
     * 
     */
    public Optional<Output<String>> domainId() {
        return Optional.ofNullable(this.domainId);
    }

    /**
     * Hostname in the hostname binding.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return Hostname in the hostname binding.
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * Hostname type.
     * 
     */
    @Import(name="hostNameType")
    private @Nullable Output<HostNameType> hostNameType;

    /**
     * @return Hostname type.
     * 
     */
    public Optional<Output<HostNameType>> hostNameType() {
        return Optional.ofNullable(this.hostNameType);
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Kind of resource.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Name of the app.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the app.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group to which the resource belongs.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * App Service app name.
     * 
     */
    @Import(name="siteName")
    private @Nullable Output<String> siteName;

    /**
     * @return App Service app name.
     * 
     */
    public Optional<Output<String>> siteName() {
        return Optional.ofNullable(this.siteName);
    }

    /**
     * Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.
     * 
     */
    @Import(name="slot", required=true)
    private Output<String> slot;

    /**
     * @return Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.
     * 
     */
    public Output<String> slot() {
        return this.slot;
    }

    /**
     * SSL type
     * 
     */
    @Import(name="sslState")
    private @Nullable Output<SslState> sslState;

    /**
     * @return SSL type
     * 
     */
    public Optional<Output<SslState>> sslState() {
        return Optional.ofNullable(this.sslState);
    }

    /**
     * SSL certificate thumbprint
     * 
     */
    @Import(name="thumbprint")
    private @Nullable Output<String> thumbprint;

    /**
     * @return SSL certificate thumbprint
     * 
     */
    public Optional<Output<String>> thumbprint() {
        return Optional.ofNullable(this.thumbprint);
    }

    private WebAppHostNameBindingSlotArgs() {}

    private WebAppHostNameBindingSlotArgs(WebAppHostNameBindingSlotArgs $) {
        this.azureResourceName = $.azureResourceName;
        this.azureResourceType = $.azureResourceType;
        this.customHostNameDnsRecordType = $.customHostNameDnsRecordType;
        this.domainId = $.domainId;
        this.hostName = $.hostName;
        this.hostNameType = $.hostNameType;
        this.kind = $.kind;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.siteName = $.siteName;
        this.slot = $.slot;
        this.sslState = $.sslState;
        this.thumbprint = $.thumbprint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppHostNameBindingSlotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppHostNameBindingSlotArgs $;

        public Builder() {
            $ = new WebAppHostNameBindingSlotArgs();
        }

        public Builder(WebAppHostNameBindingSlotArgs defaults) {
            $ = new WebAppHostNameBindingSlotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureResourceName Azure resource name.
         * 
         * @return builder
         * 
         */
        public Builder azureResourceName(@Nullable Output<String> azureResourceName) {
            $.azureResourceName = azureResourceName;
            return this;
        }

        /**
         * @param azureResourceName Azure resource name.
         * 
         * @return builder
         * 
         */
        public Builder azureResourceName(String azureResourceName) {
            return azureResourceName(Output.of(azureResourceName));
        }

        /**
         * @param azureResourceType Azure resource type.
         * 
         * @return builder
         * 
         */
        public Builder azureResourceType(@Nullable Output<AzureResourceType> azureResourceType) {
            $.azureResourceType = azureResourceType;
            return this;
        }

        /**
         * @param azureResourceType Azure resource type.
         * 
         * @return builder
         * 
         */
        public Builder azureResourceType(AzureResourceType azureResourceType) {
            return azureResourceType(Output.of(azureResourceType));
        }

        /**
         * @param customHostNameDnsRecordType Custom DNS record type.
         * 
         * @return builder
         * 
         */
        public Builder customHostNameDnsRecordType(@Nullable Output<CustomHostNameDnsRecordType> customHostNameDnsRecordType) {
            $.customHostNameDnsRecordType = customHostNameDnsRecordType;
            return this;
        }

        /**
         * @param customHostNameDnsRecordType Custom DNS record type.
         * 
         * @return builder
         * 
         */
        public Builder customHostNameDnsRecordType(CustomHostNameDnsRecordType customHostNameDnsRecordType) {
            return customHostNameDnsRecordType(Output.of(customHostNameDnsRecordType));
        }

        /**
         * @param domainId Fully qualified ARM domain resource URI.
         * 
         * @return builder
         * 
         */
        public Builder domainId(@Nullable Output<String> domainId) {
            $.domainId = domainId;
            return this;
        }

        /**
         * @param domainId Fully qualified ARM domain resource URI.
         * 
         * @return builder
         * 
         */
        public Builder domainId(String domainId) {
            return domainId(Output.of(domainId));
        }

        /**
         * @param hostName Hostname in the hostname binding.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName Hostname in the hostname binding.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param hostNameType Hostname type.
         * 
         * @return builder
         * 
         */
        public Builder hostNameType(@Nullable Output<HostNameType> hostNameType) {
            $.hostNameType = hostNameType;
            return this;
        }

        /**
         * @param hostNameType Hostname type.
         * 
         * @return builder
         * 
         */
        public Builder hostNameType(HostNameType hostNameType) {
            return hostNameType(Output.of(hostNameType));
        }

        /**
         * @param kind Kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name Name of the app.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the app.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Name of the resource group to which the resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group to which the resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param siteName App Service app name.
         * 
         * @return builder
         * 
         */
        public Builder siteName(@Nullable Output<String> siteName) {
            $.siteName = siteName;
            return this;
        }

        /**
         * @param siteName App Service app name.
         * 
         * @return builder
         * 
         */
        public Builder siteName(String siteName) {
            return siteName(Output.of(siteName));
        }

        /**
         * @param slot Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.
         * 
         * @return builder
         * 
         */
        public Builder slot(Output<String> slot) {
            $.slot = slot;
            return this;
        }

        /**
         * @param slot Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.
         * 
         * @return builder
         * 
         */
        public Builder slot(String slot) {
            return slot(Output.of(slot));
        }

        /**
         * @param sslState SSL type
         * 
         * @return builder
         * 
         */
        public Builder sslState(@Nullable Output<SslState> sslState) {
            $.sslState = sslState;
            return this;
        }

        /**
         * @param sslState SSL type
         * 
         * @return builder
         * 
         */
        public Builder sslState(SslState sslState) {
            return sslState(Output.of(sslState));
        }

        /**
         * @param thumbprint SSL certificate thumbprint
         * 
         * @return builder
         * 
         */
        public Builder thumbprint(@Nullable Output<String> thumbprint) {
            $.thumbprint = thumbprint;
            return this;
        }

        /**
         * @param thumbprint SSL certificate thumbprint
         * 
         * @return builder
         * 
         */
        public Builder thumbprint(String thumbprint) {
            return thumbprint(Output.of(thumbprint));
        }

        public WebAppHostNameBindingSlotArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.slot = Objects.requireNonNull($.slot, "expected parameter 'slot' to be non-null");
            return $;
        }
    }

}
