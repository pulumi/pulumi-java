// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.avs;

import com.pulumi.azurenative.avs.inputs.DiskPoolVolumeArgs;
import com.pulumi.azurenative.avs.inputs.NetAppVolumeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatastoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatastoreArgs Empty = new DatastoreArgs();

    /**
     * Name of the cluster in the private cloud
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return Name of the cluster in the private cloud
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * Name of the datastore in the private cloud cluster
     * 
     */
    @Import(name="datastoreName")
    private @Nullable Output<String> datastoreName;

    /**
     * @return Name of the datastore in the private cloud cluster
     * 
     */
    public Optional<Output<String>> datastoreName() {
        return Optional.ofNullable(this.datastoreName);
    }

    /**
     * An iSCSI volume
     * 
     */
    @Import(name="diskPoolVolume")
    private @Nullable Output<DiskPoolVolumeArgs> diskPoolVolume;

    /**
     * @return An iSCSI volume
     * 
     */
    public Optional<Output<DiskPoolVolumeArgs>> diskPoolVolume() {
        return Optional.ofNullable(this.diskPoolVolume);
    }

    /**
     * An Azure NetApp Files volume
     * 
     */
    @Import(name="netAppVolume")
    private @Nullable Output<NetAppVolumeArgs> netAppVolume;

    /**
     * @return An Azure NetApp Files volume
     * 
     */
    public Optional<Output<NetAppVolumeArgs>> netAppVolume() {
        return Optional.ofNullable(this.netAppVolume);
    }

    /**
     * Name of the private cloud
     * 
     */
    @Import(name="privateCloudName", required=true)
    private Output<String> privateCloudName;

    /**
     * @return Name of the private cloud
     * 
     */
    public Output<String> privateCloudName() {
        return this.privateCloudName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private DatastoreArgs() {}

    private DatastoreArgs(DatastoreArgs $) {
        this.clusterName = $.clusterName;
        this.datastoreName = $.datastoreName;
        this.diskPoolVolume = $.diskPoolVolume;
        this.netAppVolume = $.netAppVolume;
        this.privateCloudName = $.privateCloudName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatastoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatastoreArgs $;

        public Builder() {
            $ = new DatastoreArgs();
        }

        public Builder(DatastoreArgs defaults) {
            $ = new DatastoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName Name of the cluster in the private cloud
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName Name of the cluster in the private cloud
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param datastoreName Name of the datastore in the private cloud cluster
         * 
         * @return builder
         * 
         */
        public Builder datastoreName(@Nullable Output<String> datastoreName) {
            $.datastoreName = datastoreName;
            return this;
        }

        /**
         * @param datastoreName Name of the datastore in the private cloud cluster
         * 
         * @return builder
         * 
         */
        public Builder datastoreName(String datastoreName) {
            return datastoreName(Output.of(datastoreName));
        }

        /**
         * @param diskPoolVolume An iSCSI volume
         * 
         * @return builder
         * 
         */
        public Builder diskPoolVolume(@Nullable Output<DiskPoolVolumeArgs> diskPoolVolume) {
            $.diskPoolVolume = diskPoolVolume;
            return this;
        }

        /**
         * @param diskPoolVolume An iSCSI volume
         * 
         * @return builder
         * 
         */
        public Builder diskPoolVolume(DiskPoolVolumeArgs diskPoolVolume) {
            return diskPoolVolume(Output.of(diskPoolVolume));
        }

        /**
         * @param netAppVolume An Azure NetApp Files volume
         * 
         * @return builder
         * 
         */
        public Builder netAppVolume(@Nullable Output<NetAppVolumeArgs> netAppVolume) {
            $.netAppVolume = netAppVolume;
            return this;
        }

        /**
         * @param netAppVolume An Azure NetApp Files volume
         * 
         * @return builder
         * 
         */
        public Builder netAppVolume(NetAppVolumeArgs netAppVolume) {
            return netAppVolume(Output.of(netAppVolume));
        }

        /**
         * @param privateCloudName Name of the private cloud
         * 
         * @return builder
         * 
         */
        public Builder privateCloudName(Output<String> privateCloudName) {
            $.privateCloudName = privateCloudName;
            return this;
        }

        /**
         * @param privateCloudName Name of the private cloud
         * 
         * @return builder
         * 
         */
        public Builder privateCloudName(String privateCloudName) {
            return privateCloudName(Output.of(privateCloudName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public DatastoreArgs build() {
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.privateCloudName = Objects.requireNonNull($.privateCloudName, "expected parameter 'privateCloudName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
