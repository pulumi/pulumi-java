// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scheduler;

import com.pulumi.azurenative.scheduler.inputs.JobCollectionPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobCollectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobCollectionArgs Empty = new JobCollectionArgs();

    /**
     * The job collection name.
     * 
     */
    @Import(name="jobCollectionName")
    private @Nullable Output<String> jobCollectionName;

    /**
     * @return The job collection name.
     * 
     */
    public Optional<Output<String>> jobCollectionName() {
        return Optional.ofNullable(this.jobCollectionName);
    }

    /**
     * Gets or sets the storage account location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Gets or sets the storage account location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Gets or sets the job collection resource name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Gets or sets the job collection resource name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Gets or sets the job collection properties.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<JobCollectionPropertiesArgs> properties;

    /**
     * @return Gets or sets the job collection properties.
     * 
     */
    public Optional<Output<JobCollectionPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets the tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Gets or sets the tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private JobCollectionArgs() {}

    private JobCollectionArgs(JobCollectionArgs $) {
        this.jobCollectionName = $.jobCollectionName;
        this.location = $.location;
        this.name = $.name;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobCollectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobCollectionArgs $;

        public Builder() {
            $ = new JobCollectionArgs();
        }

        public Builder(JobCollectionArgs defaults) {
            $ = new JobCollectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jobCollectionName The job collection name.
         * 
         * @return builder
         * 
         */
        public Builder jobCollectionName(@Nullable Output<String> jobCollectionName) {
            $.jobCollectionName = jobCollectionName;
            return this;
        }

        /**
         * @param jobCollectionName The job collection name.
         * 
         * @return builder
         * 
         */
        public Builder jobCollectionName(String jobCollectionName) {
            return jobCollectionName(Output.of(jobCollectionName));
        }

        /**
         * @param location Gets or sets the storage account location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Gets or sets the storage account location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Gets or sets the job collection resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Gets or sets the job collection resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param properties Gets or sets the job collection properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<JobCollectionPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Gets or sets the job collection properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(JobCollectionPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Gets or sets the tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Gets or sets the tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public JobCollectionArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
