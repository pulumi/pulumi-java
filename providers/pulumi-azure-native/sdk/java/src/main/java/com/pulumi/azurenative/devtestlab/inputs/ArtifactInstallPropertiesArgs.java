// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.azurenative.devtestlab.inputs.ArtifactParameterPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of an artifact.
 * 
 */
public final class ArtifactInstallPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ArtifactInstallPropertiesArgs Empty = new ArtifactInstallPropertiesArgs();

    /**
     * The artifact&#39;s identifier.
     * 
     */
    @Import(name="artifactId")
    private @Nullable Output<String> artifactId;

    public Optional<Output<String>> artifactId() {
        return Optional.ofNullable(this.artifactId);
    }

    /**
     * The artifact&#39;s title.
     * 
     */
    @Import(name="artifactTitle")
    private @Nullable Output<String> artifactTitle;

    public Optional<Output<String>> artifactTitle() {
        return Optional.ofNullable(this.artifactTitle);
    }

    /**
     * The status message from the deployment.
     * 
     */
    @Import(name="deploymentStatusMessage")
    private @Nullable Output<String> deploymentStatusMessage;

    public Optional<Output<String>> deploymentStatusMessage() {
        return Optional.ofNullable(this.deploymentStatusMessage);
    }

    /**
     * The time that the artifact starts to install on the virtual machine.
     * 
     */
    @Import(name="installTime")
    private @Nullable Output<String> installTime;

    public Optional<Output<String>> installTime() {
        return Optional.ofNullable(this.installTime);
    }

    /**
     * The parameters of the artifact.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<ArtifactParameterPropertiesArgs>> parameters;

    public Optional<Output<List<ArtifactParameterPropertiesArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The status of the artifact.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The status message from the virtual machine extension.
     * 
     */
    @Import(name="vmExtensionStatusMessage")
    private @Nullable Output<String> vmExtensionStatusMessage;

    public Optional<Output<String>> vmExtensionStatusMessage() {
        return Optional.ofNullable(this.vmExtensionStatusMessage);
    }

    private ArtifactInstallPropertiesArgs() {}

    private ArtifactInstallPropertiesArgs(ArtifactInstallPropertiesArgs $) {
        this.artifactId = $.artifactId;
        this.artifactTitle = $.artifactTitle;
        this.deploymentStatusMessage = $.deploymentStatusMessage;
        this.installTime = $.installTime;
        this.parameters = $.parameters;
        this.status = $.status;
        this.vmExtensionStatusMessage = $.vmExtensionStatusMessage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ArtifactInstallPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ArtifactInstallPropertiesArgs $;

        public Builder() {
            $ = new ArtifactInstallPropertiesArgs();
        }

        public Builder(ArtifactInstallPropertiesArgs defaults) {
            $ = new ArtifactInstallPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder artifactId(@Nullable Output<String> artifactId) {
            $.artifactId = artifactId;
            return this;
        }

        public Builder artifactId(String artifactId) {
            return artifactId(Output.of(artifactId));
        }

        public Builder artifactTitle(@Nullable Output<String> artifactTitle) {
            $.artifactTitle = artifactTitle;
            return this;
        }

        public Builder artifactTitle(String artifactTitle) {
            return artifactTitle(Output.of(artifactTitle));
        }

        public Builder deploymentStatusMessage(@Nullable Output<String> deploymentStatusMessage) {
            $.deploymentStatusMessage = deploymentStatusMessage;
            return this;
        }

        public Builder deploymentStatusMessage(String deploymentStatusMessage) {
            return deploymentStatusMessage(Output.of(deploymentStatusMessage));
        }

        public Builder installTime(@Nullable Output<String> installTime) {
            $.installTime = installTime;
            return this;
        }

        public Builder installTime(String installTime) {
            return installTime(Output.of(installTime));
        }

        public Builder parameters(@Nullable Output<List<ArtifactParameterPropertiesArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(List<ArtifactParameterPropertiesArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder parameters(ArtifactParameterPropertiesArgs... parameters) {
            return parameters(List.of(parameters));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder vmExtensionStatusMessage(@Nullable Output<String> vmExtensionStatusMessage) {
            $.vmExtensionStatusMessage = vmExtensionStatusMessage;
            return this;
        }

        public Builder vmExtensionStatusMessage(String vmExtensionStatusMessage) {
            return vmExtensionStatusMessage(Output.of(vmExtensionStatusMessage));
        }

        public ArtifactInstallPropertiesArgs build() {
            return $;
        }
    }

}
