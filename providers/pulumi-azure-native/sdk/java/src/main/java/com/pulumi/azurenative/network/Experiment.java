// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.network.ExperimentArgs;
import com.pulumi.azurenative.network.outputs.ExperimentEndpointResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Defines the properties of an Experiment
 * API Version: 2019-11-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:Experiment MyExperiment /subscriptions/subid/resourceGroups/MyResourceGroup/providers/Microsoft.Network/NetworkExperimentProfiles/MyProfile/Experiments/MyExperiment 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:Experiment")
public class Experiment extends com.pulumi.resources.CustomResource {
    /**
     * The description of the details or intents of the Experiment
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the details or intents of the Experiment
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The state of the Experiment
     * 
     */
    @Export(name="enabledState", type=String.class, parameters={})
    private Output</* @Nullable */ String> enabledState;

    /**
     * @return The state of the Experiment
     * 
     */
    public Output<Optional<String>> enabledState() {
        return Codegen.optional(this.enabledState);
    }
    /**
     * The endpoint A of an experiment
     * 
     */
    @Export(name="endpointA", type=ExperimentEndpointResponse.class, parameters={})
    private Output</* @Nullable */ ExperimentEndpointResponse> endpointA;

    /**
     * @return The endpoint A of an experiment
     * 
     */
    public Output<Optional<ExperimentEndpointResponse>> endpointA() {
        return Codegen.optional(this.endpointA);
    }
    /**
     * The endpoint B of an experiment
     * 
     */
    @Export(name="endpointB", type=ExperimentEndpointResponse.class, parameters={})
    private Output</* @Nullable */ ExperimentEndpointResponse> endpointB;

    /**
     * @return The endpoint B of an experiment
     * 
     */
    public Output<Optional<ExperimentEndpointResponse>> endpointB() {
        return Codegen.optional(this.endpointB);
    }
    /**
     * Resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Resource status.
     * 
     */
    @Export(name="resourceState", type=String.class, parameters={})
    private Output<String> resourceState;

    /**
     * @return Resource status.
     * 
     */
    public Output<String> resourceState() {
        return this.resourceState;
    }
    /**
     * The uri to the Script used in the Experiment
     * 
     */
    @Export(name="scriptFileUri", type=String.class, parameters={})
    private Output<String> scriptFileUri;

    /**
     * @return The uri to the Script used in the Experiment
     * 
     */
    public Output<String> scriptFileUri() {
        return this.scriptFileUri;
    }
    /**
     * The description of Experiment status from the server side
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The description of Experiment status from the server side
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Experiment(String name) {
        this(name, ExperimentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Experiment(String name, ExperimentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Experiment(String name, ExperimentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:Experiment", name, args == null ? ExperimentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Experiment(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:Experiment", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:network/v20191101:Experiment").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Experiment get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Experiment(name, id, options);
    }
}
