// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub;

import com.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceTypeRegistrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceTypeRegistrationArgs Empty = new ResourceTypeRegistrationArgs();

    @Import(name="properties")
    private @Nullable Output<ResourceTypeRegistrationPropertiesArgs> properties;

    public Optional<Output<ResourceTypeRegistrationPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The name of the resource provider hosted within ProviderHub.
     * 
     */
    @Import(name="providerNamespace", required=true)
    private Output<String> providerNamespace;

    /**
     * @return The name of the resource provider hosted within ProviderHub.
     * 
     */
    public Output<String> providerNamespace() {
        return this.providerNamespace;
    }

    /**
     * The resource type.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The resource type.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    private ResourceTypeRegistrationArgs() {}

    private ResourceTypeRegistrationArgs(ResourceTypeRegistrationArgs $) {
        this.properties = $.properties;
        this.providerNamespace = $.providerNamespace;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceTypeRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceTypeRegistrationArgs $;

        public Builder() {
            $ = new ResourceTypeRegistrationArgs();
        }

        public Builder(ResourceTypeRegistrationArgs defaults) {
            $ = new ResourceTypeRegistrationArgs(Objects.requireNonNull(defaults));
        }

        public Builder properties(@Nullable Output<ResourceTypeRegistrationPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(ResourceTypeRegistrationPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param providerNamespace The name of the resource provider hosted within ProviderHub.
         * 
         * @return builder
         * 
         */
        public Builder providerNamespace(Output<String> providerNamespace) {
            $.providerNamespace = providerNamespace;
            return this;
        }

        /**
         * @param providerNamespace The name of the resource provider hosted within ProviderHub.
         * 
         * @return builder
         * 
         */
        public Builder providerNamespace(String providerNamespace) {
            return providerNamespace(Output.of(providerNamespace));
        }

        /**
         * @param resourceType The resource type.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The resource type.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public ResourceTypeRegistrationArgs build() {
            $.providerNamespace = Objects.requireNonNull($.providerNamespace, "expected parameter 'providerNamespace' to be non-null");
            return $;
        }
    }

}
