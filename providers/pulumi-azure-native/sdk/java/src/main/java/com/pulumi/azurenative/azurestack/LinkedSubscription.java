// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurestack;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.azurestack.LinkedSubscriptionArgs;
import com.pulumi.azurenative.azurestack.outputs.SystemDataResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Linked Subscription information.
 * API Version: 2020-06-01-preview.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:azurestack:LinkedSubscription testLinkedSubscription /subscriptions/dd8597b4-8739-4467-8b10-f8679f62bfbf/resourceGroups/azurestack/providers/Microsoft.AzureStack/linkedSubscriptions/testLinkedSubscription 
 * ```
 * 
 */
@ResourceType(type="azure-native:azurestack:LinkedSubscription")
public class LinkedSubscription extends com.pulumi.resources.CustomResource {
    /**
     * The status of the remote management connection of the Azure Stack device.
     * 
     */
    @Export(name="deviceConnectionStatus", type=String.class, parameters={})
    private Output<String> deviceConnectionStatus;

    /**
     * @return The status of the remote management connection of the Azure Stack device.
     * 
     */
    public Output<String> deviceConnectionStatus() {
        return this.deviceConnectionStatus;
    }
    /**
     * The identifier of the Azure Stack device for remote management.
     * 
     */
    @Export(name="deviceId", type=String.class, parameters={})
    private Output<String> deviceId;

    /**
     * @return The identifier of the Azure Stack device for remote management.
     * 
     */
    public Output<String> deviceId() {
        return this.deviceId;
    }
    /**
     * The connection state of the Azure Stack device.
     * 
     */
    @Export(name="deviceLinkState", type=String.class, parameters={})
    private Output<String> deviceLinkState;

    /**
     * @return The connection state of the Azure Stack device.
     * 
     */
    public Output<String> deviceLinkState() {
        return this.deviceLinkState;
    }
    /**
     * The object identifier associated with the Azure Stack device connecting to Azure.
     * 
     */
    @Export(name="deviceObjectId", type=String.class, parameters={})
    private Output<String> deviceObjectId;

    /**
     * @return The object identifier associated with the Azure Stack device connecting to Azure.
     * 
     */
    public Output<String> deviceObjectId() {
        return this.deviceObjectId;
    }
    /**
     * The entity tag used for optimistic concurrency when modifying the resource.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output</* @Nullable */ String> etag;

    /**
     * @return The entity tag used for optimistic concurrency when modifying the resource.
     * 
     */
    public Output<Optional<String>> etag() {
        return Codegen.optional(this.etag);
    }
    /**
     * The kind of the resource.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return The kind of the resource.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * The last remote management connection time for the Azure Stack device connected to the linked subscription resource.
     * 
     */
    @Export(name="lastConnectedTime", type=String.class, parameters={})
    private Output<String> lastConnectedTime;

    /**
     * @return The last remote management connection time for the Azure Stack device connected to the linked subscription resource.
     * 
     */
    public Output<String> lastConnectedTime() {
        return this.lastConnectedTime;
    }
    /**
     * The identifier associated with the device subscription.
     * 
     */
    @Export(name="linkedSubscriptionId", type=String.class, parameters={})
    private Output</* @Nullable */ String> linkedSubscriptionId;

    /**
     * @return The identifier associated with the device subscription.
     * 
     */
    public Output<Optional<String>> linkedSubscriptionId() {
        return Codegen.optional(this.linkedSubscriptionId);
    }
    /**
     * Location of the resource.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Location of the resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The identifier associated with the device registration.
     * 
     */
    @Export(name="registrationResourceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> registrationResourceId;

    /**
     * @return The identifier associated with the device registration.
     * 
     */
    public Output<Optional<String>> registrationResourceId() {
        return Codegen.optional(this.registrationResourceId);
    }
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Custom tags for the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Custom tags for the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Type of Resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of Resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LinkedSubscription(String name) {
        this(name, LinkedSubscriptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LinkedSubscription(String name, LinkedSubscriptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LinkedSubscription(String name, LinkedSubscriptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:azurestack:LinkedSubscription", name, args == null ? LinkedSubscriptionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LinkedSubscription(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:azurestack:LinkedSubscription", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:azurestack/v20200601preview:LinkedSubscription").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LinkedSubscription get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LinkedSubscription(name, id, options);
    }
}
