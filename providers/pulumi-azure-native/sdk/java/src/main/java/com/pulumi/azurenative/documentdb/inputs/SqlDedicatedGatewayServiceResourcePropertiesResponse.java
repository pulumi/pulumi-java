// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.azurenative.documentdb.inputs.SqlDedicatedGatewayRegionalServiceResourceResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties for SqlDedicatedGatewayServiceResource.
 * 
 */
public final class SqlDedicatedGatewayServiceResourcePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final SqlDedicatedGatewayServiceResourcePropertiesResponse Empty = new SqlDedicatedGatewayServiceResourcePropertiesResponse();

    /**
     * Time of the last state change (ISO-8601 format).
     * 
     */
    @Import(name="creationTime", required=true)
    private String creationTime;

    /**
     * @return Time of the last state change (ISO-8601 format).
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }

    /**
     * Instance count for the service.
     * 
     */
    @Import(name="instanceCount")
    private @Nullable Integer instanceCount;

    /**
     * @return Instance count for the service.
     * 
     */
    public Optional<Integer> instanceCount() {
        return Optional.ofNullable(this.instanceCount);
    }

    /**
     * Instance type for the service.
     * 
     */
    @Import(name="instanceSize")
    private @Nullable String instanceSize;

    /**
     * @return Instance type for the service.
     * 
     */
    public Optional<String> instanceSize() {
        return Optional.ofNullable(this.instanceSize);
    }

    /**
     * An array that contains all of the locations for the service.
     * 
     */
    @Import(name="locations", required=true)
    private List<SqlDedicatedGatewayRegionalServiceResourceResponse> locations;

    /**
     * @return An array that contains all of the locations for the service.
     * 
     */
    public List<SqlDedicatedGatewayRegionalServiceResourceResponse> locations() {
        return this.locations;
    }

    /**
     * ServiceType for the service.
     * Expected value is &#39;SqlDedicatedGateway&#39;.
     * 
     */
    @Import(name="serviceType", required=true)
    private String serviceType;

    /**
     * @return ServiceType for the service.
     * Expected value is &#39;SqlDedicatedGateway&#39;.
     * 
     */
    public String serviceType() {
        return this.serviceType;
    }

    /**
     * SqlDedicatedGateway endpoint for the service.
     * 
     */
    @Import(name="sqlDedicatedGatewayEndpoint")
    private @Nullable String sqlDedicatedGatewayEndpoint;

    /**
     * @return SqlDedicatedGateway endpoint for the service.
     * 
     */
    public Optional<String> sqlDedicatedGatewayEndpoint() {
        return Optional.ofNullable(this.sqlDedicatedGatewayEndpoint);
    }

    /**
     * Describes the status of a service.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Describes the status of a service.
     * 
     */
    public String status() {
        return this.status;
    }

    private SqlDedicatedGatewayServiceResourcePropertiesResponse() {}

    private SqlDedicatedGatewayServiceResourcePropertiesResponse(SqlDedicatedGatewayServiceResourcePropertiesResponse $) {
        this.creationTime = $.creationTime;
        this.instanceCount = $.instanceCount;
        this.instanceSize = $.instanceSize;
        this.locations = $.locations;
        this.serviceType = $.serviceType;
        this.sqlDedicatedGatewayEndpoint = $.sqlDedicatedGatewayEndpoint;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlDedicatedGatewayServiceResourcePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlDedicatedGatewayServiceResourcePropertiesResponse $;

        public Builder() {
            $ = new SqlDedicatedGatewayServiceResourcePropertiesResponse();
        }

        public Builder(SqlDedicatedGatewayServiceResourcePropertiesResponse defaults) {
            $ = new SqlDedicatedGatewayServiceResourcePropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationTime Time of the last state change (ISO-8601 format).
         * 
         * @return builder
         * 
         */
        public Builder creationTime(String creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        /**
         * @param instanceCount Instance count for the service.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(@Nullable Integer instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        /**
         * @param instanceSize Instance type for the service.
         * 
         * @return builder
         * 
         */
        public Builder instanceSize(@Nullable String instanceSize) {
            $.instanceSize = instanceSize;
            return this;
        }

        /**
         * @param locations An array that contains all of the locations for the service.
         * 
         * @return builder
         * 
         */
        public Builder locations(List<SqlDedicatedGatewayRegionalServiceResourceResponse> locations) {
            $.locations = locations;
            return this;
        }

        /**
         * @param locations An array that contains all of the locations for the service.
         * 
         * @return builder
         * 
         */
        public Builder locations(SqlDedicatedGatewayRegionalServiceResourceResponse... locations) {
            return locations(List.of(locations));
        }

        /**
         * @param serviceType ServiceType for the service.
         * Expected value is &#39;SqlDedicatedGateway&#39;.
         * 
         * @return builder
         * 
         */
        public Builder serviceType(String serviceType) {
            $.serviceType = serviceType;
            return this;
        }

        /**
         * @param sqlDedicatedGatewayEndpoint SqlDedicatedGateway endpoint for the service.
         * 
         * @return builder
         * 
         */
        public Builder sqlDedicatedGatewayEndpoint(@Nullable String sqlDedicatedGatewayEndpoint) {
            $.sqlDedicatedGatewayEndpoint = sqlDedicatedGatewayEndpoint;
            return this;
        }

        /**
         * @param status Describes the status of a service.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public SqlDedicatedGatewayServiceResourcePropertiesResponse build() {
            $.creationTime = Objects.requireNonNull($.creationTime, "expected parameter 'creationTime' to be non-null");
            $.locations = Objects.requireNonNull($.locations, "expected parameter 'locations' to be non-null");
            $.serviceType = Codegen.stringProp("serviceType").arg($.serviceType).require();
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
