// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.inputs;

import com.pulumi.azurenative.labservices.inputs.LatestOperationResultResponse;
import com.pulumi.azurenative.labservices.inputs.VirtualMachineDetailsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * This represents the details about a User&#39;s environment and its state.
 * 
 */
public final class EnvironmentDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final EnvironmentDetailsResponse Empty = new EnvironmentDetailsResponse();

    /**
     * Description of the Environment
     * 
     */
    @Import(name="description", required=true)
    private String description;

    public String description() {
        return this.description;
    }

    /**
     * Publishing state of the environment setting Possible values are Creating, Created, Failed
     * 
     */
    @Import(name="environmentState", required=true)
    private String environmentState;

    public String environmentState() {
        return this.environmentState;
    }

    /**
     * Resource Id of the environment
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * The details of the latest operation. ex: status, error
     * 
     */
    @Import(name="latestOperationResult", required=true)
    private LatestOperationResultResponse latestOperationResult;

    public LatestOperationResultResponse latestOperationResult() {
        return this.latestOperationResult;
    }

    /**
     * Name of the Environment
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * When the password was last reset on the environment.
     * 
     */
    @Import(name="passwordLastReset", required=true)
    private String passwordLastReset;

    public String passwordLastReset() {
        return this.passwordLastReset;
    }

    /**
     * The provisioning state of the environment. This also includes LabIsFull and NotYetProvisioned status.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * How long the environment has been used by a lab user
     * 
     */
    @Import(name="totalUsage", required=true)
    private String totalUsage;

    public String totalUsage() {
        return this.totalUsage;
    }

    /**
     * Details of backing DTL virtual machine with compute and network details.
     * 
     */
    @Import(name="virtualMachineDetails", required=true)
    private VirtualMachineDetailsResponse virtualMachineDetails;

    public VirtualMachineDetailsResponse virtualMachineDetails() {
        return this.virtualMachineDetails;
    }

    private EnvironmentDetailsResponse() {}

    private EnvironmentDetailsResponse(EnvironmentDetailsResponse $) {
        this.description = $.description;
        this.environmentState = $.environmentState;
        this.id = $.id;
        this.latestOperationResult = $.latestOperationResult;
        this.name = $.name;
        this.passwordLastReset = $.passwordLastReset;
        this.provisioningState = $.provisioningState;
        this.totalUsage = $.totalUsage;
        this.virtualMachineDetails = $.virtualMachineDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentDetailsResponse $;

        public Builder() {
            $ = new EnvironmentDetailsResponse();
        }

        public Builder(EnvironmentDetailsResponse defaults) {
            $ = new EnvironmentDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(String description) {
            $.description = description;
            return this;
        }

        public Builder environmentState(String environmentState) {
            $.environmentState = environmentState;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder latestOperationResult(LatestOperationResultResponse latestOperationResult) {
            $.latestOperationResult = latestOperationResult;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder passwordLastReset(String passwordLastReset) {
            $.passwordLastReset = passwordLastReset;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder totalUsage(String totalUsage) {
            $.totalUsage = totalUsage;
            return this;
        }

        public Builder virtualMachineDetails(VirtualMachineDetailsResponse virtualMachineDetails) {
            $.virtualMachineDetails = virtualMachineDetails;
            return this;
        }

        public EnvironmentDetailsResponse build() {
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.environmentState = Objects.requireNonNull($.environmentState, "expected parameter 'environmentState' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.latestOperationResult = Objects.requireNonNull($.latestOperationResult, "expected parameter 'latestOperationResult' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.passwordLastReset = Objects.requireNonNull($.passwordLastReset, "expected parameter 'passwordLastReset' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.totalUsage = Objects.requireNonNull($.totalUsage, "expected parameter 'totalUsage' to be non-null");
            $.virtualMachineDetails = Objects.requireNonNull($.virtualMachineDetails, "expected parameter 'virtualMachineDetails' to be non-null");
            return $;
        }
    }

}
