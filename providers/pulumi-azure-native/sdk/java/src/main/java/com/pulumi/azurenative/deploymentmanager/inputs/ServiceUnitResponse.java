// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deploymentmanager.inputs;

import com.pulumi.azurenative.deploymentmanager.inputs.RolloutStepResponse;
import com.pulumi.azurenative.deploymentmanager.inputs.ServiceUnitArtifactsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines a service unit.
 * 
 */
public final class ServiceUnitResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServiceUnitResponse Empty = new ServiceUnitResponse();

    /**
     * The artifacts for the service unit.
     * 
     */
    @Import(name="artifacts")
    private @Nullable ServiceUnitArtifactsResponse artifacts;

    public Optional<ServiceUnitArtifactsResponse> artifacts() {
        return Optional.ofNullable(this.artifacts);
    }

    /**
     * Describes the type of ARM deployment to be performed on the resource.
     * 
     */
    @Import(name="deploymentMode", required=true)
    private String deploymentMode;

    public String deploymentMode() {
        return this.deploymentMode;
    }

    /**
     * Name of the service unit.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Detailed step information, if present.
     * 
     */
    @Import(name="steps")
    private @Nullable List<RolloutStepResponse> steps;

    public Optional<List<RolloutStepResponse>> steps() {
        return Optional.ofNullable(this.steps);
    }

    /**
     * The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
     * 
     */
    @Import(name="targetResourceGroup", required=true)
    private String targetResourceGroup;

    public String targetResourceGroup() {
        return this.targetResourceGroup;
    }

    private ServiceUnitResponse() {}

    private ServiceUnitResponse(ServiceUnitResponse $) {
        this.artifacts = $.artifacts;
        this.deploymentMode = $.deploymentMode;
        this.name = $.name;
        this.steps = $.steps;
        this.targetResourceGroup = $.targetResourceGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceUnitResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceUnitResponse $;

        public Builder() {
            $ = new ServiceUnitResponse();
        }

        public Builder(ServiceUnitResponse defaults) {
            $ = new ServiceUnitResponse(Objects.requireNonNull(defaults));
        }

        public Builder artifacts(@Nullable ServiceUnitArtifactsResponse artifacts) {
            $.artifacts = artifacts;
            return this;
        }

        public Builder deploymentMode(String deploymentMode) {
            $.deploymentMode = deploymentMode;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder steps(@Nullable List<RolloutStepResponse> steps) {
            $.steps = steps;
            return this;
        }

        public Builder steps(RolloutStepResponse... steps) {
            return steps(List.of(steps));
        }

        public Builder targetResourceGroup(String targetResourceGroup) {
            $.targetResourceGroup = targetResourceGroup;
            return this;
        }

        public ServiceUnitResponse build() {
            $.deploymentMode = Objects.requireNonNull($.deploymentMode, "expected parameter 'deploymentMode' to be non-null");
            $.targetResourceGroup = Objects.requireNonNull($.targetResourceGroup, "expected parameter 'targetResourceGroup' to be non-null");
            return $;
        }
    }

}
