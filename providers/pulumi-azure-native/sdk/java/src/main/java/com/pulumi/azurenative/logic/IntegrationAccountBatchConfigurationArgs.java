// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic;

import com.pulumi.azurenative.logic.inputs.BatchConfigurationPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationAccountBatchConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationAccountBatchConfigurationArgs Empty = new IntegrationAccountBatchConfigurationArgs();

    /**
     * The batch configuration name.
     * 
     */
    @Import(name="batchConfigurationName")
    private @Nullable Output<String> batchConfigurationName;

    /**
     * @return The batch configuration name.
     * 
     */
    public Optional<Output<String>> batchConfigurationName() {
        return Optional.ofNullable(this.batchConfigurationName);
    }

    /**
     * The integration account name.
     * 
     */
    @Import(name="integrationAccountName", required=true)
    private Output<String> integrationAccountName;

    /**
     * @return The integration account name.
     * 
     */
    public Output<String> integrationAccountName() {
        return this.integrationAccountName;
    }

    /**
     * The resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The resource location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The batch configuration properties.
     * 
     */
    @Import(name="properties", required=true)
    private Output<BatchConfigurationPropertiesArgs> properties;

    /**
     * @return The batch configuration properties.
     * 
     */
    public Output<BatchConfigurationPropertiesArgs> properties() {
        return this.properties;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private IntegrationAccountBatchConfigurationArgs() {}

    private IntegrationAccountBatchConfigurationArgs(IntegrationAccountBatchConfigurationArgs $) {
        this.batchConfigurationName = $.batchConfigurationName;
        this.integrationAccountName = $.integrationAccountName;
        this.location = $.location;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationAccountBatchConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationAccountBatchConfigurationArgs $;

        public Builder() {
            $ = new IntegrationAccountBatchConfigurationArgs();
        }

        public Builder(IntegrationAccountBatchConfigurationArgs defaults) {
            $ = new IntegrationAccountBatchConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param batchConfigurationName The batch configuration name.
         * 
         * @return builder
         * 
         */
        public Builder batchConfigurationName(@Nullable Output<String> batchConfigurationName) {
            $.batchConfigurationName = batchConfigurationName;
            return this;
        }

        /**
         * @param batchConfigurationName The batch configuration name.
         * 
         * @return builder
         * 
         */
        public Builder batchConfigurationName(String batchConfigurationName) {
            return batchConfigurationName(Output.of(batchConfigurationName));
        }

        /**
         * @param integrationAccountName The integration account name.
         * 
         * @return builder
         * 
         */
        public Builder integrationAccountName(Output<String> integrationAccountName) {
            $.integrationAccountName = integrationAccountName;
            return this;
        }

        /**
         * @param integrationAccountName The integration account name.
         * 
         * @return builder
         * 
         */
        public Builder integrationAccountName(String integrationAccountName) {
            return integrationAccountName(Output.of(integrationAccountName));
        }

        /**
         * @param location The resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param properties The batch configuration properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(Output<BatchConfigurationPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties The batch configuration properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(BatchConfigurationPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags The resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public IntegrationAccountBatchConfigurationArgs build() {
            $.integrationAccountName = Objects.requireNonNull($.integrationAccountName, "expected parameter 'integrationAccountName' to be non-null");
            $.properties = Objects.requireNonNull($.properties, "expected parameter 'properties' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
