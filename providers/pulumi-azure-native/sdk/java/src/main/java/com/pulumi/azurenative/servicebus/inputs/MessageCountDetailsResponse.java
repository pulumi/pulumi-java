// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicebus.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


/**
 * Message Count Details.
 * 
 */
public final class MessageCountDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final MessageCountDetailsResponse Empty = new MessageCountDetailsResponse();

    /**
     * Number of active messages in the queue, topic, or subscription.
     * 
     */
    @Import(name="activeMessageCount", required=true)
    private Double activeMessageCount;

    public Double activeMessageCount() {
        return this.activeMessageCount;
    }

    /**
     * Number of messages that are dead lettered.
     * 
     */
    @Import(name="deadLetterMessageCount", required=true)
    private Double deadLetterMessageCount;

    public Double deadLetterMessageCount() {
        return this.deadLetterMessageCount;
    }

    /**
     * Number of scheduled messages.
     * 
     */
    @Import(name="scheduledMessageCount", required=true)
    private Double scheduledMessageCount;

    public Double scheduledMessageCount() {
        return this.scheduledMessageCount;
    }

    /**
     * Number of messages transferred into dead letters.
     * 
     */
    @Import(name="transferDeadLetterMessageCount", required=true)
    private Double transferDeadLetterMessageCount;

    public Double transferDeadLetterMessageCount() {
        return this.transferDeadLetterMessageCount;
    }

    /**
     * Number of messages transferred to another queue, topic, or subscription.
     * 
     */
    @Import(name="transferMessageCount", required=true)
    private Double transferMessageCount;

    public Double transferMessageCount() {
        return this.transferMessageCount;
    }

    private MessageCountDetailsResponse() {}

    private MessageCountDetailsResponse(MessageCountDetailsResponse $) {
        this.activeMessageCount = $.activeMessageCount;
        this.deadLetterMessageCount = $.deadLetterMessageCount;
        this.scheduledMessageCount = $.scheduledMessageCount;
        this.transferDeadLetterMessageCount = $.transferDeadLetterMessageCount;
        this.transferMessageCount = $.transferMessageCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MessageCountDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MessageCountDetailsResponse $;

        public Builder() {
            $ = new MessageCountDetailsResponse();
        }

        public Builder(MessageCountDetailsResponse defaults) {
            $ = new MessageCountDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder activeMessageCount(Double activeMessageCount) {
            $.activeMessageCount = activeMessageCount;
            return this;
        }

        public Builder deadLetterMessageCount(Double deadLetterMessageCount) {
            $.deadLetterMessageCount = deadLetterMessageCount;
            return this;
        }

        public Builder scheduledMessageCount(Double scheduledMessageCount) {
            $.scheduledMessageCount = scheduledMessageCount;
            return this;
        }

        public Builder transferDeadLetterMessageCount(Double transferDeadLetterMessageCount) {
            $.transferDeadLetterMessageCount = transferDeadLetterMessageCount;
            return this;
        }

        public Builder transferMessageCount(Double transferMessageCount) {
            $.transferMessageCount = transferMessageCount;
            return this;
        }

        public MessageCountDetailsResponse build() {
            $.activeMessageCount = Objects.requireNonNull($.activeMessageCount, "expected parameter 'activeMessageCount' to be non-null");
            $.deadLetterMessageCount = Objects.requireNonNull($.deadLetterMessageCount, "expected parameter 'deadLetterMessageCount' to be non-null");
            $.scheduledMessageCount = Objects.requireNonNull($.scheduledMessageCount, "expected parameter 'scheduledMessageCount' to be non-null");
            $.transferDeadLetterMessageCount = Objects.requireNonNull($.transferDeadLetterMessageCount, "expected parameter 'transferDeadLetterMessageCount' to be non-null");
            $.transferMessageCount = Objects.requireNonNull($.transferMessageCount, "expected parameter 'transferMessageCount' to be non-null");
            return $;
        }
    }

}
