// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.azurenative.datamigration.inputs.SqlConnectionInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * Input for the task that validates connection to Azure SQL DB and target server requirements
 * 
 */
public final class ConnectToTargetSqlSqlDbSyncTaskInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectToTargetSqlSqlDbSyncTaskInputArgs Empty = new ConnectToTargetSqlSqlDbSyncTaskInputArgs();

    /**
     * Connection information for source SQL Server
     * 
     */
    @Import(name="sourceConnectionInfo", required=true)
    private Output<SqlConnectionInfoArgs> sourceConnectionInfo;

    /**
     * @return Connection information for source SQL Server
     * 
     */
    public Output<SqlConnectionInfoArgs> sourceConnectionInfo() {
        return this.sourceConnectionInfo;
    }

    /**
     * Connection information for target SQL DB
     * 
     */
    @Import(name="targetConnectionInfo", required=true)
    private Output<SqlConnectionInfoArgs> targetConnectionInfo;

    /**
     * @return Connection information for target SQL DB
     * 
     */
    public Output<SqlConnectionInfoArgs> targetConnectionInfo() {
        return this.targetConnectionInfo;
    }

    private ConnectToTargetSqlSqlDbSyncTaskInputArgs() {}

    private ConnectToTargetSqlSqlDbSyncTaskInputArgs(ConnectToTargetSqlSqlDbSyncTaskInputArgs $) {
        this.sourceConnectionInfo = $.sourceConnectionInfo;
        this.targetConnectionInfo = $.targetConnectionInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectToTargetSqlSqlDbSyncTaskInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectToTargetSqlSqlDbSyncTaskInputArgs $;

        public Builder() {
            $ = new ConnectToTargetSqlSqlDbSyncTaskInputArgs();
        }

        public Builder(ConnectToTargetSqlSqlDbSyncTaskInputArgs defaults) {
            $ = new ConnectToTargetSqlSqlDbSyncTaskInputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceConnectionInfo Connection information for source SQL Server
         * 
         * @return builder
         * 
         */
        public Builder sourceConnectionInfo(Output<SqlConnectionInfoArgs> sourceConnectionInfo) {
            $.sourceConnectionInfo = sourceConnectionInfo;
            return this;
        }

        /**
         * @param sourceConnectionInfo Connection information for source SQL Server
         * 
         * @return builder
         * 
         */
        public Builder sourceConnectionInfo(SqlConnectionInfoArgs sourceConnectionInfo) {
            return sourceConnectionInfo(Output.of(sourceConnectionInfo));
        }

        /**
         * @param targetConnectionInfo Connection information for target SQL DB
         * 
         * @return builder
         * 
         */
        public Builder targetConnectionInfo(Output<SqlConnectionInfoArgs> targetConnectionInfo) {
            $.targetConnectionInfo = targetConnectionInfo;
            return this;
        }

        /**
         * @param targetConnectionInfo Connection information for target SQL DB
         * 
         * @return builder
         * 
         */
        public Builder targetConnectionInfo(SqlConnectionInfoArgs targetConnectionInfo) {
            return targetConnectionInfo(Output.of(targetConnectionInfo));
        }

        public ConnectToTargetSqlSqlDbSyncTaskInputArgs build() {
            $.sourceConnectionInfo = Objects.requireNonNull($.sourceConnectionInfo, "expected parameter 'sourceConnectionInfo' to be non-null");
            $.targetConnectionInfo = Objects.requireNonNull($.targetConnectionInfo, "expected parameter 'targetConnectionInfo' to be non-null");
            return $;
        }
    }

}
