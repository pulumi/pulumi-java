// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A service that allows server-side encryption to be used.
 * 
 */
public final class EncryptionServiceResponse extends com.pulumi.resources.InvokeArgs {

    public static final EncryptionServiceResponse Empty = new EncryptionServiceResponse();

    /**
     * A boolean indicating whether or not the service encrypts the data as it is stored.
     * 
     */
    @Import(name="enabled")
    private @Nullable Boolean enabled;

    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Encryption key type to be used for the encryption service. &#39;Account&#39; key type implies that an account-scoped encryption key will be used. &#39;Service&#39; key type implies that a default service key is used.
     * 
     */
    @Import(name="keyType")
    private @Nullable String keyType;

    public Optional<String> keyType() {
        return Optional.ofNullable(this.keyType);
    }

    /**
     * Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
     * 
     */
    @Import(name="lastEnabledTime", required=true)
    private String lastEnabledTime;

    public String lastEnabledTime() {
        return this.lastEnabledTime;
    }

    private EncryptionServiceResponse() {}

    private EncryptionServiceResponse(EncryptionServiceResponse $) {
        this.enabled = $.enabled;
        this.keyType = $.keyType;
        this.lastEnabledTime = $.lastEnabledTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionServiceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionServiceResponse $;

        public Builder() {
            $ = new EncryptionServiceResponse();
        }

        public Builder(EncryptionServiceResponse defaults) {
            $ = new EncryptionServiceResponse(Objects.requireNonNull(defaults));
        }

        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder keyType(@Nullable String keyType) {
            $.keyType = keyType;
            return this;
        }

        public Builder lastEnabledTime(String lastEnabledTime) {
            $.lastEnabledTime = lastEnabledTime;
            return this;
        }

        public EncryptionServiceResponse build() {
            $.lastEnabledTime = Objects.requireNonNull($.lastEnabledTime, "expected parameter 'lastEnabledTime' to be non-null");
            return $;
        }
    }

}
