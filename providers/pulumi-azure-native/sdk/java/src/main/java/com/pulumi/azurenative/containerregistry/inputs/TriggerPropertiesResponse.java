// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.azurenative.containerregistry.inputs.BaseImageTriggerResponse;
import com.pulumi.azurenative.containerregistry.inputs.SourceTriggerResponse;
import com.pulumi.azurenative.containerregistry.inputs.TimerTriggerResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties of a trigger.
 * 
 */
public final class TriggerPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final TriggerPropertiesResponse Empty = new TriggerPropertiesResponse();

    /**
     * The trigger based on base image dependencies.
     * 
     */
    @Import(name="baseImageTrigger")
    private @Nullable BaseImageTriggerResponse baseImageTrigger;

    public Optional<BaseImageTriggerResponse> baseImageTrigger() {
        return Optional.ofNullable(this.baseImageTrigger);
    }

    /**
     * The collection of triggers based on source code repository.
     * 
     */
    @Import(name="sourceTriggers")
    private @Nullable List<SourceTriggerResponse> sourceTriggers;

    public Optional<List<SourceTriggerResponse>> sourceTriggers() {
        return Optional.ofNullable(this.sourceTriggers);
    }

    /**
     * The collection of timer triggers.
     * 
     */
    @Import(name="timerTriggers")
    private @Nullable List<TimerTriggerResponse> timerTriggers;

    public Optional<List<TimerTriggerResponse>> timerTriggers() {
        return Optional.ofNullable(this.timerTriggers);
    }

    private TriggerPropertiesResponse() {}

    private TriggerPropertiesResponse(TriggerPropertiesResponse $) {
        this.baseImageTrigger = $.baseImageTrigger;
        this.sourceTriggers = $.sourceTriggers;
        this.timerTriggers = $.timerTriggers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerPropertiesResponse $;

        public Builder() {
            $ = new TriggerPropertiesResponse();
        }

        public Builder(TriggerPropertiesResponse defaults) {
            $ = new TriggerPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder baseImageTrigger(@Nullable BaseImageTriggerResponse baseImageTrigger) {
            $.baseImageTrigger = baseImageTrigger;
            return this;
        }

        public Builder sourceTriggers(@Nullable List<SourceTriggerResponse> sourceTriggers) {
            $.sourceTriggers = sourceTriggers;
            return this;
        }

        public Builder sourceTriggers(SourceTriggerResponse... sourceTriggers) {
            return sourceTriggers(List.of(sourceTriggers));
        }

        public Builder timerTriggers(@Nullable List<TimerTriggerResponse> timerTriggers) {
            $.timerTriggers = timerTriggers;
            return this;
        }

        public Builder timerTriggers(TimerTriggerResponse... timerTriggers) {
            return timerTriggers(List.of(timerTriggers));
        }

        public TriggerPropertiesResponse build() {
            return $;
        }
    }

}
