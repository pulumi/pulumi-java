// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An email receiver.
 * 
 */
public final class EmailReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailReceiverArgs Empty = new EmailReceiverArgs();

    /**
     * The email address of this receiver.
     * 
     */
    @Import(name="emailAddress", required=true)
      private final Output<String> emailAddress;

    public Output<String> emailAddress() {
        return this.emailAddress;
    }

    /**
     * The name of the email receiver. Names must be unique across all receivers within an action group.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Indicates whether to use common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
      private final @Nullable Output<Boolean> useCommonAlertSchema;

    public Output<Boolean> useCommonAlertSchema() {
        return this.useCommonAlertSchema == null ? Codegen.empty() : this.useCommonAlertSchema;
    }

    public EmailReceiverArgs(
        Output<String> emailAddress,
        Output<String> name,
        @Nullable Output<Boolean> useCommonAlertSchema) {
        this.emailAddress = Objects.requireNonNull(emailAddress, "expected parameter 'emailAddress' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.useCommonAlertSchema = useCommonAlertSchema == null ? Codegen.ofNullable(false) : useCommonAlertSchema;
    }

    private EmailReceiverArgs() {
        this.emailAddress = Codegen.empty();
        this.name = Codegen.empty();
        this.useCommonAlertSchema = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EmailReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> emailAddress;
        private Output<String> name;
        private @Nullable Output<Boolean> useCommonAlertSchema;

        public Builder() {
    	      // Empty
        }

        public Builder(EmailReceiverArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.emailAddress = defaults.emailAddress;
    	      this.name = defaults.name;
    	      this.useCommonAlertSchema = defaults.useCommonAlertSchema;
        }

        public Builder emailAddress(Output<String> emailAddress) {
            this.emailAddress = Objects.requireNonNull(emailAddress);
            return this;
        }
        public Builder emailAddress(String emailAddress) {
            this.emailAddress = Output.of(Objects.requireNonNull(emailAddress));
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder useCommonAlertSchema(@Nullable Output<Boolean> useCommonAlertSchema) {
            this.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }
        public Builder useCommonAlertSchema(@Nullable Boolean useCommonAlertSchema) {
            this.useCommonAlertSchema = Codegen.ofNullable(useCommonAlertSchema);
            return this;
        }        public EmailReceiverArgs build() {
            return new EmailReceiverArgs(emailAddress, name, useCommonAlertSchema);
        }
    }
}
