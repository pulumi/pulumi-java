// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.healthcareapis.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Event Hub ingestion endpoint configuration
 * 
 */
public final class IotEventHubIngestionEndpointConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final IotEventHubIngestionEndpointConfigurationResponse Empty = new IotEventHubIngestionEndpointConfigurationResponse();

    /**
     * Consumer group of the event hub to connected to.
     * 
     */
    @Import(name="consumerGroup")
    private @Nullable String consumerGroup;

    /**
     * @return Consumer group of the event hub to connected to.
     * 
     */
    public Optional<String> consumerGroup() {
        return Optional.ofNullable(this.consumerGroup);
    }

    /**
     * Event Hub name to connect to.
     * 
     */
    @Import(name="eventHubName")
    private @Nullable String eventHubName;

    /**
     * @return Event Hub name to connect to.
     * 
     */
    public Optional<String> eventHubName() {
        return Optional.ofNullable(this.eventHubName);
    }

    /**
     * Fully qualified namespace of the Event Hub to connect to.
     * 
     */
    @Import(name="fullyQualifiedEventHubNamespace")
    private @Nullable String fullyQualifiedEventHubNamespace;

    /**
     * @return Fully qualified namespace of the Event Hub to connect to.
     * 
     */
    public Optional<String> fullyQualifiedEventHubNamespace() {
        return Optional.ofNullable(this.fullyQualifiedEventHubNamespace);
    }

    private IotEventHubIngestionEndpointConfigurationResponse() {}

    private IotEventHubIngestionEndpointConfigurationResponse(IotEventHubIngestionEndpointConfigurationResponse $) {
        this.consumerGroup = $.consumerGroup;
        this.eventHubName = $.eventHubName;
        this.fullyQualifiedEventHubNamespace = $.fullyQualifiedEventHubNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IotEventHubIngestionEndpointConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IotEventHubIngestionEndpointConfigurationResponse $;

        public Builder() {
            $ = new IotEventHubIngestionEndpointConfigurationResponse();
        }

        public Builder(IotEventHubIngestionEndpointConfigurationResponse defaults) {
            $ = new IotEventHubIngestionEndpointConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumerGroup Consumer group of the event hub to connected to.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroup(@Nullable String consumerGroup) {
            $.consumerGroup = consumerGroup;
            return this;
        }

        /**
         * @param eventHubName Event Hub name to connect to.
         * 
         * @return builder
         * 
         */
        public Builder eventHubName(@Nullable String eventHubName) {
            $.eventHubName = eventHubName;
            return this;
        }

        /**
         * @param fullyQualifiedEventHubNamespace Fully qualified namespace of the Event Hub to connect to.
         * 
         * @return builder
         * 
         */
        public Builder fullyQualifiedEventHubNamespace(@Nullable String fullyQualifiedEventHubNamespace) {
            $.fullyQualifiedEventHubNamespace = fullyQualifiedEventHubNamespace;
            return this;
        }

        public IotEventHubIngestionEndpointConfigurationResponse build() {
            return $;
        }
    }

}
