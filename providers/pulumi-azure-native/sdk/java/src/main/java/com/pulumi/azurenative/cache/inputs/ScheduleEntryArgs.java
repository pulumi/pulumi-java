// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cache.inputs;

import com.pulumi.azurenative.cache.enums.DayOfWeek;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Patch schedule entry for a Premium Redis Cache.
 * 
 */
public final class ScheduleEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleEntryArgs Empty = new ScheduleEntryArgs();

    /**
     * Day of the week when a cache can be patched.
     * 
     */
    @Import(name="dayOfWeek", required=true)
      private final Output<DayOfWeek> dayOfWeek;

    public Output<DayOfWeek> dayOfWeek() {
        return this.dayOfWeek;
    }

    /**
     * ISO8601 timespan specifying how much time cache patching can take.
     * 
     */
    @Import(name="maintenanceWindow")
      private final @Nullable Output<String> maintenanceWindow;

    public Output<String> maintenanceWindow() {
        return this.maintenanceWindow == null ? Codegen.empty() : this.maintenanceWindow;
    }

    /**
     * Start hour after which cache patching can start.
     * 
     */
    @Import(name="startHourUtc", required=true)
      private final Output<Integer> startHourUtc;

    public Output<Integer> startHourUtc() {
        return this.startHourUtc;
    }

    public ScheduleEntryArgs(
        Output<DayOfWeek> dayOfWeek,
        @Nullable Output<String> maintenanceWindow,
        Output<Integer> startHourUtc) {
        this.dayOfWeek = Objects.requireNonNull(dayOfWeek, "expected parameter 'dayOfWeek' to be non-null");
        this.maintenanceWindow = maintenanceWindow;
        this.startHourUtc = Objects.requireNonNull(startHourUtc, "expected parameter 'startHourUtc' to be non-null");
    }

    private ScheduleEntryArgs() {
        this.dayOfWeek = Codegen.empty();
        this.maintenanceWindow = Codegen.empty();
        this.startHourUtc = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduleEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<DayOfWeek> dayOfWeek;
        private @Nullable Output<String> maintenanceWindow;
        private Output<Integer> startHourUtc;

        public Builder() {
    	      // Empty
        }

        public Builder(ScheduleEntryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.maintenanceWindow = defaults.maintenanceWindow;
    	      this.startHourUtc = defaults.startHourUtc;
        }

        public Builder dayOfWeek(Output<DayOfWeek> dayOfWeek) {
            this.dayOfWeek = Objects.requireNonNull(dayOfWeek);
            return this;
        }
        public Builder dayOfWeek(DayOfWeek dayOfWeek) {
            this.dayOfWeek = Output.of(Objects.requireNonNull(dayOfWeek));
            return this;
        }
        public Builder maintenanceWindow(@Nullable Output<String> maintenanceWindow) {
            this.maintenanceWindow = maintenanceWindow;
            return this;
        }
        public Builder maintenanceWindow(@Nullable String maintenanceWindow) {
            this.maintenanceWindow = Codegen.ofNullable(maintenanceWindow);
            return this;
        }
        public Builder startHourUtc(Output<Integer> startHourUtc) {
            this.startHourUtc = Objects.requireNonNull(startHourUtc);
            return this;
        }
        public Builder startHourUtc(Integer startHourUtc) {
            this.startHourUtc = Output.of(Objects.requireNonNull(startHourUtc));
            return this;
        }        public ScheduleEntryArgs build() {
            return new ScheduleEntryArgs(dayOfWeek, maintenanceWindow, startHourUtc);
        }
    }
}
