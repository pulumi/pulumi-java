// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cache.inputs;

import com.pulumi.azurenative.cache.enums.DayOfWeek;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Patch schedule entry for a Premium Redis Cache.
 * 
 */
public final class ScheduleEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleEntryArgs Empty = new ScheduleEntryArgs();

    /**
     * Day of the week when a cache can be patched.
     * 
     */
    @Import(name="dayOfWeek", required=true)
    private Output<DayOfWeek> dayOfWeek;

    public Output<DayOfWeek> dayOfWeek() {
        return this.dayOfWeek;
    }

    /**
     * ISO8601 timespan specifying how much time cache patching can take.
     * 
     */
    @Import(name="maintenanceWindow")
    private @Nullable Output<String> maintenanceWindow;

    public Optional<Output<String>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * Start hour after which cache patching can start.
     * 
     */
    @Import(name="startHourUtc", required=true)
    private Output<Integer> startHourUtc;

    public Output<Integer> startHourUtc() {
        return this.startHourUtc;
    }

    private ScheduleEntryArgs() {}

    private ScheduleEntryArgs(ScheduleEntryArgs $) {
        this.dayOfWeek = $.dayOfWeek;
        this.maintenanceWindow = $.maintenanceWindow;
        this.startHourUtc = $.startHourUtc;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleEntryArgs $;

        public Builder() {
            $ = new ScheduleEntryArgs();
        }

        public Builder(ScheduleEntryArgs defaults) {
            $ = new ScheduleEntryArgs(Objects.requireNonNull(defaults));
        }

        public Builder dayOfWeek(Output<DayOfWeek> dayOfWeek) {
            $.dayOfWeek = dayOfWeek;
            return this;
        }

        public Builder dayOfWeek(DayOfWeek dayOfWeek) {
            return dayOfWeek(Output.of(dayOfWeek));
        }

        public Builder maintenanceWindow(@Nullable Output<String> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        public Builder maintenanceWindow(String maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        public Builder startHourUtc(Output<Integer> startHourUtc) {
            $.startHourUtc = startHourUtc;
            return this;
        }

        public Builder startHourUtc(Integer startHourUtc) {
            return startHourUtc(Output.of(startHourUtc));
        }

        public ScheduleEntryArgs build() {
            $.dayOfWeek = Objects.requireNonNull($.dayOfWeek, "expected parameter 'dayOfWeek' to be non-null");
            $.startHourUtc = Objects.requireNonNull($.startHourUtc, "expected parameter 'startHourUtc' to be non-null");
            return $;
        }
    }

}
