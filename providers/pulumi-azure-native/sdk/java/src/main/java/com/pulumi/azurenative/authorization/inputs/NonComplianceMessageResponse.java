// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A message that describes why a resource is non-compliant with the policy. This is shown in &#39;deny&#39; error messages and on resource&#39;s non-compliant compliance results.
 * 
 */
public final class NonComplianceMessageResponse extends com.pulumi.resources.InvokeArgs {

    public static final NonComplianceMessageResponse Empty = new NonComplianceMessageResponse();

    /**
     * A message that describes why a resource is non-compliant with the policy. This is shown in &#39;deny&#39; error messages and on resource&#39;s non-compliant compliance results.
     * 
     */
    @Import(name="message", required=true)
    private String message;

    /**
     * @return A message that describes why a resource is non-compliant with the policy. This is shown in &#39;deny&#39; error messages and on resource&#39;s non-compliant compliance results.
     * 
     */
    public String message() {
        return this.message;
    }

    /**
     * The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If this is not provided the message applies to all policies assigned by this policy assignment.
     * 
     */
    @Import(name="policyDefinitionReferenceId")
    private @Nullable String policyDefinitionReferenceId;

    /**
     * @return The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If this is not provided the message applies to all policies assigned by this policy assignment.
     * 
     */
    public Optional<String> policyDefinitionReferenceId() {
        return Optional.ofNullable(this.policyDefinitionReferenceId);
    }

    private NonComplianceMessageResponse() {}

    private NonComplianceMessageResponse(NonComplianceMessageResponse $) {
        this.message = $.message;
        this.policyDefinitionReferenceId = $.policyDefinitionReferenceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NonComplianceMessageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NonComplianceMessageResponse $;

        public Builder() {
            $ = new NonComplianceMessageResponse();
        }

        public Builder(NonComplianceMessageResponse defaults) {
            $ = new NonComplianceMessageResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param message A message that describes why a resource is non-compliant with the policy. This is shown in &#39;deny&#39; error messages and on resource&#39;s non-compliant compliance results.
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            $.message = message;
            return this;
        }

        /**
         * @param policyDefinitionReferenceId The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If this is not provided the message applies to all policies assigned by this policy assignment.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferenceId(@Nullable String policyDefinitionReferenceId) {
            $.policyDefinitionReferenceId = policyDefinitionReferenceId;
            return this;
        }

        public NonComplianceMessageResponse build() {
            $.message = Objects.requireNonNull($.message, "expected parameter 'message' to be non-null");
            return $;
        }
    }

}
