// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties to attach new disk to the Virtual Machine.
 * 
 */
public final class AttachNewDataDiskOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final AttachNewDataDiskOptionsResponse Empty = new AttachNewDataDiskOptionsResponse();

    /**
     * The name of the disk to be attached.
     * 
     */
    @Import(name="diskName")
    private @Nullable String diskName;

    public Optional<String> diskName() {
        return Optional.ofNullable(this.diskName);
    }

    /**
     * Size of the disk to be attached in Gibibytes.
     * 
     */
    @Import(name="diskSizeGiB")
    private @Nullable Integer diskSizeGiB;

    public Optional<Integer> diskSizeGiB() {
        return Optional.ofNullable(this.diskSizeGiB);
    }

    /**
     * The storage type for the disk (i.e. Standard, Premium).
     * 
     */
    @Import(name="diskType")
    private @Nullable String diskType;

    public Optional<String> diskType() {
        return Optional.ofNullable(this.diskType);
    }

    private AttachNewDataDiskOptionsResponse() {}

    private AttachNewDataDiskOptionsResponse(AttachNewDataDiskOptionsResponse $) {
        this.diskName = $.diskName;
        this.diskSizeGiB = $.diskSizeGiB;
        this.diskType = $.diskType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AttachNewDataDiskOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AttachNewDataDiskOptionsResponse $;

        public Builder() {
            $ = new AttachNewDataDiskOptionsResponse();
        }

        public Builder(AttachNewDataDiskOptionsResponse defaults) {
            $ = new AttachNewDataDiskOptionsResponse(Objects.requireNonNull(defaults));
        }

        public Builder diskName(@Nullable String diskName) {
            $.diskName = diskName;
            return this;
        }

        public Builder diskSizeGiB(@Nullable Integer diskSizeGiB) {
            $.diskSizeGiB = diskSizeGiB;
            return this;
        }

        public Builder diskType(@Nullable String diskType) {
            $.diskType = diskType;
            return this;
        }

        public AttachNewDataDiskOptionsResponse build() {
            return $;
        }
    }

}
