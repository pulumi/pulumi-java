// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.outputs;

import com.pulumi.azurenative.media.outputs.StreamingLocatorContentKeyResponse;
import com.pulumi.azurenative.media.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStreamingLocatorResult {
    /**
     * @return Alternative Media ID of this Streaming Locator
     * 
     */
    private final @Nullable String alternativeMediaId;
    /**
     * @return Asset Name
     * 
     */
    private final String assetName;
    /**
     * @return The ContentKeys used by this Streaming Locator.
     * 
     */
    private final @Nullable List<StreamingLocatorContentKeyResponse> contentKeys;
    /**
     * @return The creation time of the Streaming Locator.
     * 
     */
    private final String created;
    /**
     * @return Name of the default ContentKeyPolicy used by this Streaming Locator.
     * 
     */
    private final @Nullable String defaultContentKeyPolicyName;
    /**
     * @return The end time of the Streaming Locator.
     * 
     */
    private final @Nullable String endTime;
    /**
     * @return A list of asset or account filters which apply to this streaming locator
     * 
     */
    private final @Nullable List<String> filters;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * @return The name of the resource
     * 
     */
    private final String name;
    /**
     * @return The start time of the Streaming Locator.
     * 
     */
    private final @Nullable String startTime;
    /**
     * @return The StreamingLocatorId of the Streaming Locator.
     * 
     */
    private final @Nullable String streamingLocatorId;
    /**
     * @return Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: &#39;Predefined_DownloadOnly&#39;, &#39;Predefined_ClearStreamingOnly&#39;, &#39;Predefined_DownloadAndClearStreaming&#39;, &#39;Predefined_ClearKey&#39;, &#39;Predefined_MultiDrmCencStreaming&#39; and &#39;Predefined_MultiDrmStreaming&#39;
     * 
     */
    private final String streamingPolicyName;
    /**
     * @return The system metadata relating to this resource.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetStreamingLocatorResult(
        @CustomType.Parameter("alternativeMediaId") @Nullable String alternativeMediaId,
        @CustomType.Parameter("assetName") String assetName,
        @CustomType.Parameter("contentKeys") @Nullable List<StreamingLocatorContentKeyResponse> contentKeys,
        @CustomType.Parameter("created") String created,
        @CustomType.Parameter("defaultContentKeyPolicyName") @Nullable String defaultContentKeyPolicyName,
        @CustomType.Parameter("endTime") @Nullable String endTime,
        @CustomType.Parameter("filters") @Nullable List<String> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("startTime") @Nullable String startTime,
        @CustomType.Parameter("streamingLocatorId") @Nullable String streamingLocatorId,
        @CustomType.Parameter("streamingPolicyName") String streamingPolicyName,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("type") String type) {
        this.alternativeMediaId = alternativeMediaId;
        this.assetName = assetName;
        this.contentKeys = contentKeys;
        this.created = created;
        this.defaultContentKeyPolicyName = defaultContentKeyPolicyName;
        this.endTime = endTime;
        this.filters = filters;
        this.id = id;
        this.name = name;
        this.startTime = startTime;
        this.streamingLocatorId = streamingLocatorId;
        this.streamingPolicyName = streamingPolicyName;
        this.systemData = systemData;
        this.type = type;
    }

    /**
     * @return Alternative Media ID of this Streaming Locator
     * 
     */
    public Optional<String> alternativeMediaId() {
        return Optional.ofNullable(this.alternativeMediaId);
    }
    /**
     * @return Asset Name
     * 
     */
    public String assetName() {
        return this.assetName;
    }
    /**
     * @return The ContentKeys used by this Streaming Locator.
     * 
     */
    public List<StreamingLocatorContentKeyResponse> contentKeys() {
        return this.contentKeys == null ? List.of() : this.contentKeys;
    }
    /**
     * @return The creation time of the Streaming Locator.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return Name of the default ContentKeyPolicy used by this Streaming Locator.
     * 
     */
    public Optional<String> defaultContentKeyPolicyName() {
        return Optional.ofNullable(this.defaultContentKeyPolicyName);
    }
    /**
     * @return The end time of the Streaming Locator.
     * 
     */
    public Optional<String> endTime() {
        return Optional.ofNullable(this.endTime);
    }
    /**
     * @return A list of asset or account filters which apply to this streaming locator
     * 
     */
    public List<String> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The start time of the Streaming Locator.
     * 
     */
    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }
    /**
     * @return The StreamingLocatorId of the Streaming Locator.
     * 
     */
    public Optional<String> streamingLocatorId() {
        return Optional.ofNullable(this.streamingLocatorId);
    }
    /**
     * @return Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: &#39;Predefined_DownloadOnly&#39;, &#39;Predefined_ClearStreamingOnly&#39;, &#39;Predefined_DownloadAndClearStreaming&#39;, &#39;Predefined_ClearKey&#39;, &#39;Predefined_MultiDrmCencStreaming&#39; and &#39;Predefined_MultiDrmStreaming&#39;
     * 
     */
    public String streamingPolicyName() {
        return this.streamingPolicyName;
    }
    /**
     * @return The system metadata relating to this resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamingLocatorResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String alternativeMediaId;
        private String assetName;
        private @Nullable List<StreamingLocatorContentKeyResponse> contentKeys;
        private String created;
        private @Nullable String defaultContentKeyPolicyName;
        private @Nullable String endTime;
        private @Nullable List<String> filters;
        private String id;
        private String name;
        private @Nullable String startTime;
        private @Nullable String streamingLocatorId;
        private String streamingPolicyName;
        private SystemDataResponse systemData;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStreamingLocatorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternativeMediaId = defaults.alternativeMediaId;
    	      this.assetName = defaults.assetName;
    	      this.contentKeys = defaults.contentKeys;
    	      this.created = defaults.created;
    	      this.defaultContentKeyPolicyName = defaults.defaultContentKeyPolicyName;
    	      this.endTime = defaults.endTime;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.startTime = defaults.startTime;
    	      this.streamingLocatorId = defaults.streamingLocatorId;
    	      this.streamingPolicyName = defaults.streamingPolicyName;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        public Builder alternativeMediaId(@Nullable String alternativeMediaId) {
            this.alternativeMediaId = alternativeMediaId;
            return this;
        }
        public Builder assetName(String assetName) {
            this.assetName = Objects.requireNonNull(assetName);
            return this;
        }
        public Builder contentKeys(@Nullable List<StreamingLocatorContentKeyResponse> contentKeys) {
            this.contentKeys = contentKeys;
            return this;
        }
        public Builder contentKeys(StreamingLocatorContentKeyResponse... contentKeys) {
            return contentKeys(List.of(contentKeys));
        }
        public Builder created(String created) {
            this.created = Objects.requireNonNull(created);
            return this;
        }
        public Builder defaultContentKeyPolicyName(@Nullable String defaultContentKeyPolicyName) {
            this.defaultContentKeyPolicyName = defaultContentKeyPolicyName;
            return this;
        }
        public Builder endTime(@Nullable String endTime) {
            this.endTime = endTime;
            return this;
        }
        public Builder filters(@Nullable List<String> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(String... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder startTime(@Nullable String startTime) {
            this.startTime = startTime;
            return this;
        }
        public Builder streamingLocatorId(@Nullable String streamingLocatorId) {
            this.streamingLocatorId = streamingLocatorId;
            return this;
        }
        public Builder streamingPolicyName(String streamingPolicyName) {
            this.streamingPolicyName = Objects.requireNonNull(streamingPolicyName);
            return this;
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetStreamingLocatorResult build() {
            return new GetStreamingLocatorResult(alternativeMediaId, assetName, contentKeys, created, defaultContentKeyPolicyName, endTime, filters, id, name, startTime, streamingLocatorId, streamingPolicyName, systemData, type);
        }
    }
}
