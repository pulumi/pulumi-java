// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configuration for compute binding.
 * 
 */
public final class ComputeConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ComputeConfigurationResponse Empty = new ComputeConfigurationResponse();

    /**
     * Number of instances or nodes.
     * 
     */
    @Import(name="instanceCount")
    private @Nullable Integer instanceCount;

    public Optional<Integer> instanceCount() {
        return Optional.ofNullable(this.instanceCount);
    }

    /**
     * SKU type to run on.
     * 
     */
    @Import(name="instanceType")
    private @Nullable String instanceType;

    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * Set to true for jobs running on local compute.
     * 
     */
    @Import(name="isLocal")
    private @Nullable Boolean isLocal;

    public Optional<Boolean> isLocal() {
        return Optional.ofNullable(this.isLocal);
    }

    /**
     * Location for virtual cluster run.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Additional properties.
     * 
     */
    @Import(name="properties")
    private @Nullable Map<String,String> properties;

    public Optional<Map<String,String>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * ARM resource ID of the compute resource.
     * 
     */
    @Import(name="target")
    private @Nullable String target;

    public Optional<String> target() {
        return Optional.ofNullable(this.target);
    }

    private ComputeConfigurationResponse() {}

    private ComputeConfigurationResponse(ComputeConfigurationResponse $) {
        this.instanceCount = $.instanceCount;
        this.instanceType = $.instanceType;
        this.isLocal = $.isLocal;
        this.location = $.location;
        this.properties = $.properties;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComputeConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeConfigurationResponse $;

        public Builder() {
            $ = new ComputeConfigurationResponse();
        }

        public Builder(ComputeConfigurationResponse defaults) {
            $ = new ComputeConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder instanceCount(@Nullable Integer instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        public Builder instanceType(@Nullable String instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder isLocal(@Nullable Boolean isLocal) {
            $.isLocal = isLocal;
            return this;
        }

        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        public Builder properties(@Nullable Map<String,String> properties) {
            $.properties = properties;
            return this;
        }

        public Builder target(@Nullable String target) {
            $.target = target;
            return this;
        }

        public ComputeConfigurationResponse build() {
            return $;
        }
    }

}
