// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.IPAllocationMethod;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * IP configuration.
 * 
 */
public final class InboundEndpointIPConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final InboundEndpointIPConfigurationArgs Empty = new InboundEndpointIPConfigurationArgs();

    /**
     * Private IP address of the IP configuration.
     * 
     */
    @Import(name="privateIpAddress")
    private @Nullable Output<String> privateIpAddress;

    /**
     * @return Private IP address of the IP configuration.
     * 
     */
    public Optional<Output<String>> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * Private IP address allocation method.
     * 
     */
    @Import(name="privateIpAllocationMethod")
    private @Nullable Output<Either<String,IPAllocationMethod>> privateIpAllocationMethod;

    /**
     * @return Private IP address allocation method.
     * 
     */
    public Optional<Output<Either<String,IPAllocationMethod>>> privateIpAllocationMethod() {
        return Optional.ofNullable(this.privateIpAllocationMethod);
    }

    /**
     * The reference to the subnet bound to the IP configuration.
     * 
     */
    @Import(name="subnet")
    private @Nullable Output<SubResourceArgs> subnet;

    /**
     * @return The reference to the subnet bound to the IP configuration.
     * 
     */
    public Optional<Output<SubResourceArgs>> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    private InboundEndpointIPConfigurationArgs() {}

    private InboundEndpointIPConfigurationArgs(InboundEndpointIPConfigurationArgs $) {
        this.privateIpAddress = $.privateIpAddress;
        this.privateIpAllocationMethod = $.privateIpAllocationMethod;
        this.subnet = $.subnet;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InboundEndpointIPConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InboundEndpointIPConfigurationArgs $;

        public Builder() {
            $ = new InboundEndpointIPConfigurationArgs();
        }

        public Builder(InboundEndpointIPConfigurationArgs defaults) {
            $ = new InboundEndpointIPConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param privateIpAddress Private IP address of the IP configuration.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param privateIpAddress Private IP address of the IP configuration.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        /**
         * @param privateIpAllocationMethod Private IP address allocation method.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAllocationMethod(@Nullable Output<Either<String,IPAllocationMethod>> privateIpAllocationMethod) {
            $.privateIpAllocationMethod = privateIpAllocationMethod;
            return this;
        }

        /**
         * @param privateIpAllocationMethod Private IP address allocation method.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAllocationMethod(Either<String,IPAllocationMethod> privateIpAllocationMethod) {
            return privateIpAllocationMethod(Output.of(privateIpAllocationMethod));
        }

        /**
         * @param privateIpAllocationMethod Private IP address allocation method.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAllocationMethod(String privateIpAllocationMethod) {
            return privateIpAllocationMethod(Either.ofLeft(privateIpAllocationMethod));
        }

        /**
         * @param privateIpAllocationMethod Private IP address allocation method.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAllocationMethod(IPAllocationMethod privateIpAllocationMethod) {
            return privateIpAllocationMethod(Either.ofRight(privateIpAllocationMethod));
        }

        /**
         * @param subnet The reference to the subnet bound to the IP configuration.
         * 
         * @return builder
         * 
         */
        public Builder subnet(@Nullable Output<SubResourceArgs> subnet) {
            $.subnet = subnet;
            return this;
        }

        /**
         * @param subnet The reference to the subnet bound to the IP configuration.
         * 
         * @return builder
         * 
         */
        public Builder subnet(SubResourceArgs subnet) {
            return subnet(Output.of(subnet));
        }

        public InboundEndpointIPConfigurationArgs build() {
            $.privateIpAllocationMethod = Codegen.stringProp("privateIpAllocationMethod").left(IPAllocationMethod.class).output().arg($.privateIpAllocationMethod).def("Dynamic").getNullable();
            return $;
        }
    }

}
