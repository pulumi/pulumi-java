// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs Empty = new GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs();

    /**
     * The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
     * 
     */
    @Import(name="baselineName", required=true)
    private String baselineName;

    /**
     * @return The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
     * 
     */
    public String baselineName() {
        return this.baselineName;
    }

    /**
     * The name of the database for which the vulnerability assessment rule baseline is defined.
     * 
     */
    @Import(name="databaseName", required=true)
    private String databaseName;

    /**
     * @return The name of the database for which the vulnerability assessment rule baseline is defined.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The vulnerability assessment rule ID.
     * 
     */
    @Import(name="ruleId", required=true)
    private String ruleId;

    /**
     * @return The vulnerability assessment rule ID.
     * 
     */
    public String ruleId() {
        return this.ruleId;
    }

    /**
     * The name of the server.
     * 
     */
    @Import(name="serverName", required=true)
    private String serverName;

    /**
     * @return The name of the server.
     * 
     */
    public String serverName() {
        return this.serverName;
    }

    /**
     * The name of the vulnerability assessment.
     * 
     */
    @Import(name="vulnerabilityAssessmentName", required=true)
    private String vulnerabilityAssessmentName;

    /**
     * @return The name of the vulnerability assessment.
     * 
     */
    public String vulnerabilityAssessmentName() {
        return this.vulnerabilityAssessmentName;
    }

    private GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs() {}

    private GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs(GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs $) {
        this.baselineName = $.baselineName;
        this.databaseName = $.databaseName;
        this.resourceGroupName = $.resourceGroupName;
        this.ruleId = $.ruleId;
        this.serverName = $.serverName;
        this.vulnerabilityAssessmentName = $.vulnerabilityAssessmentName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs $;

        public Builder() {
            $ = new GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs();
        }

        public Builder(GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs defaults) {
            $ = new GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
         * 
         * @return builder
         * 
         */
        public Builder baselineName(String baselineName) {
            $.baselineName = baselineName;
            return this;
        }

        /**
         * @param databaseName The name of the database for which the vulnerability assessment rule baseline is defined.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param ruleId The vulnerability assessment rule ID.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(String ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param serverName The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder serverName(String serverName) {
            $.serverName = serverName;
            return this;
        }

        /**
         * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
         * 
         * @return builder
         * 
         */
        public Builder vulnerabilityAssessmentName(String vulnerabilityAssessmentName) {
            $.vulnerabilityAssessmentName = vulnerabilityAssessmentName;
            return this;
        }

        public GetDatabaseVulnerabilityAssessmentRuleBaselinePlainArgs build() {
            $.baselineName = Objects.requireNonNull($.baselineName, "expected parameter 'baselineName' to be non-null");
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.ruleId = Objects.requireNonNull($.ruleId, "expected parameter 'ruleId' to be non-null");
            $.serverName = Objects.requireNonNull($.serverName, "expected parameter 'serverName' to be non-null");
            $.vulnerabilityAssessmentName = Objects.requireNonNull($.vulnerabilityAssessmentName, "expected parameter 'vulnerabilityAssessmentName' to be non-null");
            return $;
        }
    }

}
