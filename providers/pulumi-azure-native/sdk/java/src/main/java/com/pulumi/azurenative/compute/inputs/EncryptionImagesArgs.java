// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.DataDiskImageEncryptionArgs;
import com.pulumi.azurenative.compute.inputs.OSDiskImageEncryptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
 * 
 */
public final class EncryptionImagesArgs extends com.pulumi.resources.ResourceArgs {

    public static final EncryptionImagesArgs Empty = new EncryptionImagesArgs();

    /**
     * A list of encryption specifications for data disk images.
     * 
     */
    @Import(name="dataDiskImages")
    private @Nullable Output<List<DataDiskImageEncryptionArgs>> dataDiskImages;

    /**
     * @return A list of encryption specifications for data disk images.
     * 
     */
    public Optional<Output<List<DataDiskImageEncryptionArgs>>> dataDiskImages() {
        return Optional.ofNullable(this.dataDiskImages);
    }

    /**
     * Contains encryption settings for an OS disk image.
     * 
     */
    @Import(name="osDiskImage")
    private @Nullable Output<OSDiskImageEncryptionArgs> osDiskImage;

    /**
     * @return Contains encryption settings for an OS disk image.
     * 
     */
    public Optional<Output<OSDiskImageEncryptionArgs>> osDiskImage() {
        return Optional.ofNullable(this.osDiskImage);
    }

    private EncryptionImagesArgs() {}

    private EncryptionImagesArgs(EncryptionImagesArgs $) {
        this.dataDiskImages = $.dataDiskImages;
        this.osDiskImage = $.osDiskImage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionImagesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionImagesArgs $;

        public Builder() {
            $ = new EncryptionImagesArgs();
        }

        public Builder(EncryptionImagesArgs defaults) {
            $ = new EncryptionImagesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataDiskImages A list of encryption specifications for data disk images.
         * 
         * @return builder
         * 
         */
        public Builder dataDiskImages(@Nullable Output<List<DataDiskImageEncryptionArgs>> dataDiskImages) {
            $.dataDiskImages = dataDiskImages;
            return this;
        }

        /**
         * @param dataDiskImages A list of encryption specifications for data disk images.
         * 
         * @return builder
         * 
         */
        public Builder dataDiskImages(List<DataDiskImageEncryptionArgs> dataDiskImages) {
            return dataDiskImages(Output.of(dataDiskImages));
        }

        /**
         * @param dataDiskImages A list of encryption specifications for data disk images.
         * 
         * @return builder
         * 
         */
        public Builder dataDiskImages(DataDiskImageEncryptionArgs... dataDiskImages) {
            return dataDiskImages(List.of(dataDiskImages));
        }

        /**
         * @param osDiskImage Contains encryption settings for an OS disk image.
         * 
         * @return builder
         * 
         */
        public Builder osDiskImage(@Nullable Output<OSDiskImageEncryptionArgs> osDiskImage) {
            $.osDiskImage = osDiskImage;
            return this;
        }

        /**
         * @param osDiskImage Contains encryption settings for an OS disk image.
         * 
         * @return builder
         * 
         */
        public Builder osDiskImage(OSDiskImageEncryptionArgs osDiskImage) {
            return osDiskImage(Output.of(osDiskImage));
        }

        public EncryptionImagesArgs build() {
            return $;
        }
    }

}
