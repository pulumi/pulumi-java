// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.azurenative.devtestlab.inputs.PortResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configuration for public IP address sharing.
 * 
 */
public final class SubnetSharedPublicIpAddressConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final SubnetSharedPublicIpAddressConfigurationResponse Empty = new SubnetSharedPublicIpAddressConfigurationResponse();

    /**
     * Backend ports that virtual machines on this subnet are allowed to expose
     * 
     */
    @Import(name="allowedPorts")
    private @Nullable List<PortResponse> allowedPorts;

    /**
     * @return Backend ports that virtual machines on this subnet are allowed to expose
     * 
     */
    public Optional<List<PortResponse>> allowedPorts() {
        return Optional.ofNullable(this.allowedPorts);
    }

    private SubnetSharedPublicIpAddressConfigurationResponse() {}

    private SubnetSharedPublicIpAddressConfigurationResponse(SubnetSharedPublicIpAddressConfigurationResponse $) {
        this.allowedPorts = $.allowedPorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubnetSharedPublicIpAddressConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubnetSharedPublicIpAddressConfigurationResponse $;

        public Builder() {
            $ = new SubnetSharedPublicIpAddressConfigurationResponse();
        }

        public Builder(SubnetSharedPublicIpAddressConfigurationResponse defaults) {
            $ = new SubnetSharedPublicIpAddressConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedPorts Backend ports that virtual machines on this subnet are allowed to expose
         * 
         * @return builder
         * 
         */
        public Builder allowedPorts(@Nullable List<PortResponse> allowedPorts) {
            $.allowedPorts = allowedPorts;
            return this;
        }

        /**
         * @param allowedPorts Backend ports that virtual machines on this subnet are allowed to expose
         * 
         * @return builder
         * 
         */
        public Builder allowedPorts(PortResponse... allowedPorts) {
            return allowedPorts(List.of(allowedPorts));
        }

        public SubnetSharedPublicIpAddressConfigurationResponse build() {
            return $;
        }
    }

}
