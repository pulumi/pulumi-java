// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * AADProfile specifies attributes for Azure Active Directory integration.
 * 
 */
public final class ManagedClusterAADProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedClusterAADProfileArgs Empty = new ManagedClusterAADProfileArgs();

    /**
     * AAD group object IDs that will have admin role of the cluster.
     * 
     */
    @Import(name="adminGroupObjectIDs")
    private @Nullable Output<List<String>> adminGroupObjectIDs;

    /**
     * @return AAD group object IDs that will have admin role of the cluster.
     * 
     */
    public Optional<Output<List<String>>> adminGroupObjectIDs() {
        return Optional.ofNullable(this.adminGroupObjectIDs);
    }

    /**
     * The client AAD application ID.
     * 
     */
    @Import(name="clientAppID")
    private @Nullable Output<String> clientAppID;

    /**
     * @return The client AAD application ID.
     * 
     */
    public Optional<Output<String>> clientAppID() {
        return Optional.ofNullable(this.clientAppID);
    }

    /**
     * Whether to enable Azure RBAC for Kubernetes authorization.
     * 
     */
    @Import(name="enableAzureRBAC")
    private @Nullable Output<Boolean> enableAzureRBAC;

    /**
     * @return Whether to enable Azure RBAC for Kubernetes authorization.
     * 
     */
    public Optional<Output<Boolean>> enableAzureRBAC() {
        return Optional.ofNullable(this.enableAzureRBAC);
    }

    /**
     * Whether to enable managed AAD.
     * 
     */
    @Import(name="managed")
    private @Nullable Output<Boolean> managed;

    /**
     * @return Whether to enable managed AAD.
     * 
     */
    public Optional<Output<Boolean>> managed() {
        return Optional.ofNullable(this.managed);
    }

    /**
     * The server AAD application ID.
     * 
     */
    @Import(name="serverAppID")
    private @Nullable Output<String> serverAppID;

    /**
     * @return The server AAD application ID.
     * 
     */
    public Optional<Output<String>> serverAppID() {
        return Optional.ofNullable(this.serverAppID);
    }

    /**
     * The server AAD application secret.
     * 
     */
    @Import(name="serverAppSecret")
    private @Nullable Output<String> serverAppSecret;

    /**
     * @return The server AAD application secret.
     * 
     */
    public Optional<Output<String>> serverAppSecret() {
        return Optional.ofNullable(this.serverAppSecret);
    }

    /**
     * The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
     * 
     */
    @Import(name="tenantID")
    private @Nullable Output<String> tenantID;

    /**
     * @return The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
     * 
     */
    public Optional<Output<String>> tenantID() {
        return Optional.ofNullable(this.tenantID);
    }

    private ManagedClusterAADProfileArgs() {}

    private ManagedClusterAADProfileArgs(ManagedClusterAADProfileArgs $) {
        this.adminGroupObjectIDs = $.adminGroupObjectIDs;
        this.clientAppID = $.clientAppID;
        this.enableAzureRBAC = $.enableAzureRBAC;
        this.managed = $.managed;
        this.serverAppID = $.serverAppID;
        this.serverAppSecret = $.serverAppSecret;
        this.tenantID = $.tenantID;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedClusterAADProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedClusterAADProfileArgs $;

        public Builder() {
            $ = new ManagedClusterAADProfileArgs();
        }

        public Builder(ManagedClusterAADProfileArgs defaults) {
            $ = new ManagedClusterAADProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminGroupObjectIDs AAD group object IDs that will have admin role of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder adminGroupObjectIDs(@Nullable Output<List<String>> adminGroupObjectIDs) {
            $.adminGroupObjectIDs = adminGroupObjectIDs;
            return this;
        }

        /**
         * @param adminGroupObjectIDs AAD group object IDs that will have admin role of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder adminGroupObjectIDs(List<String> adminGroupObjectIDs) {
            return adminGroupObjectIDs(Output.of(adminGroupObjectIDs));
        }

        /**
         * @param adminGroupObjectIDs AAD group object IDs that will have admin role of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder adminGroupObjectIDs(String... adminGroupObjectIDs) {
            return adminGroupObjectIDs(List.of(adminGroupObjectIDs));
        }

        /**
         * @param clientAppID The client AAD application ID.
         * 
         * @return builder
         * 
         */
        public Builder clientAppID(@Nullable Output<String> clientAppID) {
            $.clientAppID = clientAppID;
            return this;
        }

        /**
         * @param clientAppID The client AAD application ID.
         * 
         * @return builder
         * 
         */
        public Builder clientAppID(String clientAppID) {
            return clientAppID(Output.of(clientAppID));
        }

        /**
         * @param enableAzureRBAC Whether to enable Azure RBAC for Kubernetes authorization.
         * 
         * @return builder
         * 
         */
        public Builder enableAzureRBAC(@Nullable Output<Boolean> enableAzureRBAC) {
            $.enableAzureRBAC = enableAzureRBAC;
            return this;
        }

        /**
         * @param enableAzureRBAC Whether to enable Azure RBAC for Kubernetes authorization.
         * 
         * @return builder
         * 
         */
        public Builder enableAzureRBAC(Boolean enableAzureRBAC) {
            return enableAzureRBAC(Output.of(enableAzureRBAC));
        }

        /**
         * @param managed Whether to enable managed AAD.
         * 
         * @return builder
         * 
         */
        public Builder managed(@Nullable Output<Boolean> managed) {
            $.managed = managed;
            return this;
        }

        /**
         * @param managed Whether to enable managed AAD.
         * 
         * @return builder
         * 
         */
        public Builder managed(Boolean managed) {
            return managed(Output.of(managed));
        }

        /**
         * @param serverAppID The server AAD application ID.
         * 
         * @return builder
         * 
         */
        public Builder serverAppID(@Nullable Output<String> serverAppID) {
            $.serverAppID = serverAppID;
            return this;
        }

        /**
         * @param serverAppID The server AAD application ID.
         * 
         * @return builder
         * 
         */
        public Builder serverAppID(String serverAppID) {
            return serverAppID(Output.of(serverAppID));
        }

        /**
         * @param serverAppSecret The server AAD application secret.
         * 
         * @return builder
         * 
         */
        public Builder serverAppSecret(@Nullable Output<String> serverAppSecret) {
            $.serverAppSecret = serverAppSecret;
            return this;
        }

        /**
         * @param serverAppSecret The server AAD application secret.
         * 
         * @return builder
         * 
         */
        public Builder serverAppSecret(String serverAppSecret) {
            return serverAppSecret(Output.of(serverAppSecret));
        }

        /**
         * @param tenantID The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
         * 
         * @return builder
         * 
         */
        public Builder tenantID(@Nullable Output<String> tenantID) {
            $.tenantID = tenantID;
            return this;
        }

        /**
         * @param tenantID The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
         * 
         * @return builder
         * 
         */
        public Builder tenantID(String tenantID) {
            return tenantID(Output.of(tenantID));
        }

        public ManagedClusterAADProfileArgs build() {
            return $;
        }
    }

}
