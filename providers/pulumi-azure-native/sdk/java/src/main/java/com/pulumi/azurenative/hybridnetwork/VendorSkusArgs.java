// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybridnetwork;

import com.pulumi.azurenative.hybridnetwork.enums.SkuDeploymentMode;
import com.pulumi.azurenative.hybridnetwork.enums.SkuType;
import com.pulumi.azurenative.hybridnetwork.inputs.NetworkFunctionTemplateArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VendorSkusArgs extends com.pulumi.resources.ResourceArgs {

    public static final VendorSkusArgs Empty = new VendorSkusArgs();

    /**
     * The sku deployment mode.
     * 
     */
    @Import(name="deploymentMode")
    private @Nullable Output<Either<String,SkuDeploymentMode>> deploymentMode;

    /**
     * @return The sku deployment mode.
     * 
     */
    public Optional<Output<Either<String,SkuDeploymentMode>>> deploymentMode() {
        return Optional.ofNullable(this.deploymentMode);
    }

    /**
     * The parameters for the managed application to be supplied by the vendor.
     * 
     */
    @Import(name="managedApplicationParameters")
    private @Nullable Output<Object> managedApplicationParameters;

    /**
     * @return The parameters for the managed application to be supplied by the vendor.
     * 
     */
    public Optional<Output<Object>> managedApplicationParameters() {
        return Optional.ofNullable(this.managedApplicationParameters);
    }

    /**
     * The template for the managed application deployment.
     * 
     */
    @Import(name="managedApplicationTemplate")
    private @Nullable Output<Object> managedApplicationTemplate;

    /**
     * @return The template for the managed application deployment.
     * 
     */
    public Optional<Output<Object>> managedApplicationTemplate() {
        return Optional.ofNullable(this.managedApplicationTemplate);
    }

    /**
     * The template definition of the network function.
     * 
     */
    @Import(name="networkFunctionTemplate")
    private @Nullable Output<NetworkFunctionTemplateArgs> networkFunctionTemplate;

    /**
     * @return The template definition of the network function.
     * 
     */
    public Optional<Output<NetworkFunctionTemplateArgs>> networkFunctionTemplate() {
        return Optional.ofNullable(this.networkFunctionTemplate);
    }

    /**
     * Indicates if the vendor sku is in preview mode.
     * 
     */
    @Import(name="preview")
    private @Nullable Output<Boolean> preview;

    /**
     * @return Indicates if the vendor sku is in preview mode.
     * 
     */
    public Optional<Output<Boolean>> preview() {
        return Optional.ofNullable(this.preview);
    }

    /**
     * The name of the sku.
     * 
     */
    @Import(name="skuName")
    private @Nullable Output<String> skuName;

    /**
     * @return The name of the sku.
     * 
     */
    public Optional<Output<String>> skuName() {
        return Optional.ofNullable(this.skuName);
    }

    /**
     * The sku type.
     * 
     */
    @Import(name="skuType")
    private @Nullable Output<Either<String,SkuType>> skuType;

    /**
     * @return The sku type.
     * 
     */
    public Optional<Output<Either<String,SkuType>>> skuType() {
        return Optional.ofNullable(this.skuType);
    }

    /**
     * The name of the vendor.
     * 
     */
    @Import(name="vendorName", required=true)
    private Output<String> vendorName;

    /**
     * @return The name of the vendor.
     * 
     */
    public Output<String> vendorName() {
        return this.vendorName;
    }

    private VendorSkusArgs() {}

    private VendorSkusArgs(VendorSkusArgs $) {
        this.deploymentMode = $.deploymentMode;
        this.managedApplicationParameters = $.managedApplicationParameters;
        this.managedApplicationTemplate = $.managedApplicationTemplate;
        this.networkFunctionTemplate = $.networkFunctionTemplate;
        this.preview = $.preview;
        this.skuName = $.skuName;
        this.skuType = $.skuType;
        this.vendorName = $.vendorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VendorSkusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VendorSkusArgs $;

        public Builder() {
            $ = new VendorSkusArgs();
        }

        public Builder(VendorSkusArgs defaults) {
            $ = new VendorSkusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentMode The sku deployment mode.
         * 
         * @return builder
         * 
         */
        public Builder deploymentMode(@Nullable Output<Either<String,SkuDeploymentMode>> deploymentMode) {
            $.deploymentMode = deploymentMode;
            return this;
        }

        /**
         * @param deploymentMode The sku deployment mode.
         * 
         * @return builder
         * 
         */
        public Builder deploymentMode(Either<String,SkuDeploymentMode> deploymentMode) {
            return deploymentMode(Output.of(deploymentMode));
        }

        /**
         * @param deploymentMode The sku deployment mode.
         * 
         * @return builder
         * 
         */
        public Builder deploymentMode(String deploymentMode) {
            return deploymentMode(Either.ofLeft(deploymentMode));
        }

        /**
         * @param deploymentMode The sku deployment mode.
         * 
         * @return builder
         * 
         */
        public Builder deploymentMode(SkuDeploymentMode deploymentMode) {
            return deploymentMode(Either.ofRight(deploymentMode));
        }

        /**
         * @param managedApplicationParameters The parameters for the managed application to be supplied by the vendor.
         * 
         * @return builder
         * 
         */
        public Builder managedApplicationParameters(@Nullable Output<Object> managedApplicationParameters) {
            $.managedApplicationParameters = managedApplicationParameters;
            return this;
        }

        /**
         * @param managedApplicationParameters The parameters for the managed application to be supplied by the vendor.
         * 
         * @return builder
         * 
         */
        public Builder managedApplicationParameters(Object managedApplicationParameters) {
            return managedApplicationParameters(Output.of(managedApplicationParameters));
        }

        /**
         * @param managedApplicationTemplate The template for the managed application deployment.
         * 
         * @return builder
         * 
         */
        public Builder managedApplicationTemplate(@Nullable Output<Object> managedApplicationTemplate) {
            $.managedApplicationTemplate = managedApplicationTemplate;
            return this;
        }

        /**
         * @param managedApplicationTemplate The template for the managed application deployment.
         * 
         * @return builder
         * 
         */
        public Builder managedApplicationTemplate(Object managedApplicationTemplate) {
            return managedApplicationTemplate(Output.of(managedApplicationTemplate));
        }

        /**
         * @param networkFunctionTemplate The template definition of the network function.
         * 
         * @return builder
         * 
         */
        public Builder networkFunctionTemplate(@Nullable Output<NetworkFunctionTemplateArgs> networkFunctionTemplate) {
            $.networkFunctionTemplate = networkFunctionTemplate;
            return this;
        }

        /**
         * @param networkFunctionTemplate The template definition of the network function.
         * 
         * @return builder
         * 
         */
        public Builder networkFunctionTemplate(NetworkFunctionTemplateArgs networkFunctionTemplate) {
            return networkFunctionTemplate(Output.of(networkFunctionTemplate));
        }

        /**
         * @param preview Indicates if the vendor sku is in preview mode.
         * 
         * @return builder
         * 
         */
        public Builder preview(@Nullable Output<Boolean> preview) {
            $.preview = preview;
            return this;
        }

        /**
         * @param preview Indicates if the vendor sku is in preview mode.
         * 
         * @return builder
         * 
         */
        public Builder preview(Boolean preview) {
            return preview(Output.of(preview));
        }

        /**
         * @param skuName The name of the sku.
         * 
         * @return builder
         * 
         */
        public Builder skuName(@Nullable Output<String> skuName) {
            $.skuName = skuName;
            return this;
        }

        /**
         * @param skuName The name of the sku.
         * 
         * @return builder
         * 
         */
        public Builder skuName(String skuName) {
            return skuName(Output.of(skuName));
        }

        /**
         * @param skuType The sku type.
         * 
         * @return builder
         * 
         */
        public Builder skuType(@Nullable Output<Either<String,SkuType>> skuType) {
            $.skuType = skuType;
            return this;
        }

        /**
         * @param skuType The sku type.
         * 
         * @return builder
         * 
         */
        public Builder skuType(Either<String,SkuType> skuType) {
            return skuType(Output.of(skuType));
        }

        /**
         * @param skuType The sku type.
         * 
         * @return builder
         * 
         */
        public Builder skuType(String skuType) {
            return skuType(Either.ofLeft(skuType));
        }

        /**
         * @param skuType The sku type.
         * 
         * @return builder
         * 
         */
        public Builder skuType(SkuType skuType) {
            return skuType(Either.ofRight(skuType));
        }

        /**
         * @param vendorName The name of the vendor.
         * 
         * @return builder
         * 
         */
        public Builder vendorName(Output<String> vendorName) {
            $.vendorName = vendorName;
            return this;
        }

        /**
         * @param vendorName The name of the vendor.
         * 
         * @return builder
         * 
         */
        public Builder vendorName(String vendorName) {
            return vendorName(Output.of(vendorName));
        }

        public VendorSkusArgs build() {
            $.vendorName = Objects.requireNonNull($.vendorName, "expected parameter 'vendorName' to be non-null");
            return $;
        }
    }

}
