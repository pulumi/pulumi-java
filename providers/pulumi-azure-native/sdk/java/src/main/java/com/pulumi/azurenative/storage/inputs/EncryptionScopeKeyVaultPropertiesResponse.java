// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The key vault properties for the encryption scope. This is a required field if encryption scope &#39;source&#39; attribute is set to &#39;Microsoft.KeyVault&#39;.
 * 
 */
public final class EncryptionScopeKeyVaultPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final EncryptionScopeKeyVaultPropertiesResponse Empty = new EncryptionScopeKeyVaultPropertiesResponse();

    /**
     * The object identifier of the current versioned Key Vault Key in use.
     * 
     */
    @Import(name="currentVersionedKeyIdentifier", required=true)
    private String currentVersionedKeyIdentifier;

    /**
     * @return The object identifier of the current versioned Key Vault Key in use.
     * 
     */
    public String currentVersionedKeyIdentifier() {
        return this.currentVersionedKeyIdentifier;
    }

    /**
     * The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
     * 
     */
    @Import(name="keyUri")
    private @Nullable String keyUri;

    /**
     * @return The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
     * 
     */
    public Optional<String> keyUri() {
        return Optional.ofNullable(this.keyUri);
    }

    /**
     * Timestamp of last rotation of the Key Vault Key.
     * 
     */
    @Import(name="lastKeyRotationTimestamp", required=true)
    private String lastKeyRotationTimestamp;

    /**
     * @return Timestamp of last rotation of the Key Vault Key.
     * 
     */
    public String lastKeyRotationTimestamp() {
        return this.lastKeyRotationTimestamp;
    }

    private EncryptionScopeKeyVaultPropertiesResponse() {}

    private EncryptionScopeKeyVaultPropertiesResponse(EncryptionScopeKeyVaultPropertiesResponse $) {
        this.currentVersionedKeyIdentifier = $.currentVersionedKeyIdentifier;
        this.keyUri = $.keyUri;
        this.lastKeyRotationTimestamp = $.lastKeyRotationTimestamp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionScopeKeyVaultPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionScopeKeyVaultPropertiesResponse $;

        public Builder() {
            $ = new EncryptionScopeKeyVaultPropertiesResponse();
        }

        public Builder(EncryptionScopeKeyVaultPropertiesResponse defaults) {
            $ = new EncryptionScopeKeyVaultPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param currentVersionedKeyIdentifier The object identifier of the current versioned Key Vault Key in use.
         * 
         * @return builder
         * 
         */
        public Builder currentVersionedKeyIdentifier(String currentVersionedKeyIdentifier) {
            $.currentVersionedKeyIdentifier = currentVersionedKeyIdentifier;
            return this;
        }

        /**
         * @param keyUri The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
         * 
         * @return builder
         * 
         */
        public Builder keyUri(@Nullable String keyUri) {
            $.keyUri = keyUri;
            return this;
        }

        /**
         * @param lastKeyRotationTimestamp Timestamp of last rotation of the Key Vault Key.
         * 
         * @return builder
         * 
         */
        public Builder lastKeyRotationTimestamp(String lastKeyRotationTimestamp) {
            $.lastKeyRotationTimestamp = lastKeyRotationTimestamp;
            return this;
        }

        public EncryptionScopeKeyVaultPropertiesResponse build() {
            $.currentVersionedKeyIdentifier = Objects.requireNonNull($.currentVersionedKeyIdentifier, "expected parameter 'currentVersionedKeyIdentifier' to be non-null");
            $.lastKeyRotationTimestamp = Objects.requireNonNull($.lastKeyRotationTimestamp, "expected parameter 'lastKeyRotationTimestamp' to be non-null");
            return $;
        }
    }

}
