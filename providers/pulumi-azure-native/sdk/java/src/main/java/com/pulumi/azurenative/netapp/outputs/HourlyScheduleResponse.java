// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HourlyScheduleResponse {
    /**
     * @return Indicates which minute snapshot should be taken
     * 
     */
    private final @Nullable Integer minute;
    /**
     * @return Hourly snapshot count to keep
     * 
     */
    private final @Nullable Integer snapshotsToKeep;
    /**
     * @return Resource size in bytes, current storage usage for the volume in bytes
     * 
     */
    private final @Nullable Double usedBytes;

    @CustomType.Constructor
    private HourlyScheduleResponse(
        @CustomType.Parameter("minute") @Nullable Integer minute,
        @CustomType.Parameter("snapshotsToKeep") @Nullable Integer snapshotsToKeep,
        @CustomType.Parameter("usedBytes") @Nullable Double usedBytes) {
        this.minute = minute;
        this.snapshotsToKeep = snapshotsToKeep;
        this.usedBytes = usedBytes;
    }

    /**
     * @return Indicates which minute snapshot should be taken
     * 
     */
    public Optional<Integer> minute() {
        return Optional.ofNullable(this.minute);
    }
    /**
     * @return Hourly snapshot count to keep
     * 
     */
    public Optional<Integer> snapshotsToKeep() {
        return Optional.ofNullable(this.snapshotsToKeep);
    }
    /**
     * @return Resource size in bytes, current storage usage for the volume in bytes
     * 
     */
    public Optional<Double> usedBytes() {
        return Optional.ofNullable(this.usedBytes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HourlyScheduleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer minute;
        private @Nullable Integer snapshotsToKeep;
        private @Nullable Double usedBytes;

        public Builder() {
    	      // Empty
        }

        public Builder(HourlyScheduleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.minute = defaults.minute;
    	      this.snapshotsToKeep = defaults.snapshotsToKeep;
    	      this.usedBytes = defaults.usedBytes;
        }

        public Builder minute(@Nullable Integer minute) {
            this.minute = minute;
            return this;
        }
        public Builder snapshotsToKeep(@Nullable Integer snapshotsToKeep) {
            this.snapshotsToKeep = snapshotsToKeep;
            return this;
        }
        public Builder usedBytes(@Nullable Double usedBytes) {
            this.usedBytes = usedBytes;
            return this;
        }        public HourlyScheduleResponse build() {
            return new HourlyScheduleResponse(minute, snapshotsToKeep, usedBytes);
        }
    }
}
