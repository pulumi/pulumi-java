// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The auto scaler properties.
 * 
 */
public final class AKSServiceResponseResponseAutoScaler extends com.pulumi.resources.InvokeArgs {

    public static final AKSServiceResponseResponseAutoScaler Empty = new AKSServiceResponseResponseAutoScaler();

    /**
     * Option to enable/disable auto scaling.
     * 
     */
    @Import(name="autoscaleEnabled")
    private @Nullable Boolean autoscaleEnabled;

    /**
     * @return Option to enable/disable auto scaling.
     * 
     */
    public Optional<Boolean> autoscaleEnabled() {
        return Optional.ofNullable(this.autoscaleEnabled);
    }

    /**
     * The maximum number of replicas in the cluster.
     * 
     */
    @Import(name="maxReplicas")
    private @Nullable Integer maxReplicas;

    /**
     * @return The maximum number of replicas in the cluster.
     * 
     */
    public Optional<Integer> maxReplicas() {
        return Optional.ofNullable(this.maxReplicas);
    }

    /**
     * The minimum number of replicas to scale down to.
     * 
     */
    @Import(name="minReplicas")
    private @Nullable Integer minReplicas;

    /**
     * @return The minimum number of replicas to scale down to.
     * 
     */
    public Optional<Integer> minReplicas() {
        return Optional.ofNullable(this.minReplicas);
    }

    /**
     * The amount of seconds to wait between auto scale updates.
     * 
     */
    @Import(name="refreshPeriodInSeconds")
    private @Nullable Integer refreshPeriodInSeconds;

    /**
     * @return The amount of seconds to wait between auto scale updates.
     * 
     */
    public Optional<Integer> refreshPeriodInSeconds() {
        return Optional.ofNullable(this.refreshPeriodInSeconds);
    }

    /**
     * The target utilization percentage to use for determining whether to scale the cluster.
     * 
     */
    @Import(name="targetUtilization")
    private @Nullable Integer targetUtilization;

    /**
     * @return The target utilization percentage to use for determining whether to scale the cluster.
     * 
     */
    public Optional<Integer> targetUtilization() {
        return Optional.ofNullable(this.targetUtilization);
    }

    private AKSServiceResponseResponseAutoScaler() {}

    private AKSServiceResponseResponseAutoScaler(AKSServiceResponseResponseAutoScaler $) {
        this.autoscaleEnabled = $.autoscaleEnabled;
        this.maxReplicas = $.maxReplicas;
        this.minReplicas = $.minReplicas;
        this.refreshPeriodInSeconds = $.refreshPeriodInSeconds;
        this.targetUtilization = $.targetUtilization;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AKSServiceResponseResponseAutoScaler defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AKSServiceResponseResponseAutoScaler $;

        public Builder() {
            $ = new AKSServiceResponseResponseAutoScaler();
        }

        public Builder(AKSServiceResponseResponseAutoScaler defaults) {
            $ = new AKSServiceResponseResponseAutoScaler(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscaleEnabled Option to enable/disable auto scaling.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleEnabled(@Nullable Boolean autoscaleEnabled) {
            $.autoscaleEnabled = autoscaleEnabled;
            return this;
        }

        /**
         * @param maxReplicas The maximum number of replicas in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder maxReplicas(@Nullable Integer maxReplicas) {
            $.maxReplicas = maxReplicas;
            return this;
        }

        /**
         * @param minReplicas The minimum number of replicas to scale down to.
         * 
         * @return builder
         * 
         */
        public Builder minReplicas(@Nullable Integer minReplicas) {
            $.minReplicas = minReplicas;
            return this;
        }

        /**
         * @param refreshPeriodInSeconds The amount of seconds to wait between auto scale updates.
         * 
         * @return builder
         * 
         */
        public Builder refreshPeriodInSeconds(@Nullable Integer refreshPeriodInSeconds) {
            $.refreshPeriodInSeconds = refreshPeriodInSeconds;
            return this;
        }

        /**
         * @param targetUtilization The target utilization percentage to use for determining whether to scale the cluster.
         * 
         * @return builder
         * 
         */
        public Builder targetUtilization(@Nullable Integer targetUtilization) {
            $.targetUtilization = targetUtilization;
            return this;
        }

        public AKSServiceResponseResponseAutoScaler build() {
            return $;
        }
    }

}
