// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * The time.
 * 
 */
public final class TimeResponse extends com.pulumi.resources.InvokeArgs {

    public static final TimeResponse Empty = new TimeResponse();

    /**
     * The hour.
     * 
     */
    @Import(name="hours", required=true)
    private Integer hours;

    /**
     * @return The hour.
     * 
     */
    public Integer hours() {
        return this.hours;
    }

    /**
     * The minute.
     * 
     */
    @Import(name="minutes", required=true)
    private Integer minutes;

    /**
     * @return The minute.
     * 
     */
    public Integer minutes() {
        return this.minutes;
    }

    /**
     * The second.
     * 
     */
    @Import(name="seconds", required=true)
    private Integer seconds;

    /**
     * @return The second.
     * 
     */
    public Integer seconds() {
        return this.seconds;
    }

    private TimeResponse() {}

    private TimeResponse(TimeResponse $) {
        this.hours = $.hours;
        this.minutes = $.minutes;
        this.seconds = $.seconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TimeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TimeResponse $;

        public Builder() {
            $ = new TimeResponse();
        }

        public Builder(TimeResponse defaults) {
            $ = new TimeResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param hours The hour.
         * 
         * @return builder
         * 
         */
        public Builder hours(Integer hours) {
            $.hours = hours;
            return this;
        }

        /**
         * @param minutes The minute.
         * 
         * @return builder
         * 
         */
        public Builder minutes(Integer minutes) {
            $.minutes = minutes;
            return this;
        }

        /**
         * @param seconds The second.
         * 
         * @return builder
         * 
         */
        public Builder seconds(Integer seconds) {
            $.seconds = seconds;
            return this;
        }

        public TimeResponse build() {
            $.hours = Objects.requireNonNull($.hours, "expected parameter 'hours' to be non-null");
            $.minutes = Objects.requireNonNull($.minutes, "expected parameter 'minutes' to be non-null");
            $.seconds = Objects.requireNonNull($.seconds, "expected parameter 'seconds' to be non-null");
            return $;
        }
    }

}
