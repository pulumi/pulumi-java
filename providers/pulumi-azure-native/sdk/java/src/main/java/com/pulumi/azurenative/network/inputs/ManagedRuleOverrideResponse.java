// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines a managed rule group override setting.
 * 
 */
public final class ManagedRuleOverrideResponse extends com.pulumi.resources.InvokeArgs {

    public static final ManagedRuleOverrideResponse Empty = new ManagedRuleOverrideResponse();

    /**
     * Identifier for the managed rule.
     * 
     */
    @Import(name="ruleId", required=true)
    private String ruleId;

    public String ruleId() {
        return this.ruleId;
    }

    /**
     * The state of the managed rule. Defaults to Disabled if not specified.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private ManagedRuleOverrideResponse() {}

    private ManagedRuleOverrideResponse(ManagedRuleOverrideResponse $) {
        this.ruleId = $.ruleId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedRuleOverrideResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedRuleOverrideResponse $;

        public Builder() {
            $ = new ManagedRuleOverrideResponse();
        }

        public Builder(ManagedRuleOverrideResponse defaults) {
            $ = new ManagedRuleOverrideResponse(Objects.requireNonNull(defaults));
        }

        public Builder ruleId(String ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public ManagedRuleOverrideResponse build() {
            $.ruleId = Objects.requireNonNull($.ruleId, "expected parameter 'ruleId' to be non-null");
            return $;
        }
    }

}
