// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scheduler.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RetryPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final RetryPolicyResponse Empty = new RetryPolicyResponse();

    /**
     * Gets or sets the number of times a retry should be attempted.
     * 
     */
    @Import(name="retryCount")
    private @Nullable Integer retryCount;

    public Optional<Integer> retryCount() {
        return Optional.ofNullable(this.retryCount);
    }

    /**
     * Gets or sets the retry interval between retries, specify duration in ISO 8601 format.
     * 
     */
    @Import(name="retryInterval")
    private @Nullable String retryInterval;

    public Optional<String> retryInterval() {
        return Optional.ofNullable(this.retryInterval);
    }

    /**
     * Gets or sets the retry strategy to be used.
     * 
     */
    @Import(name="retryType")
    private @Nullable String retryType;

    public Optional<String> retryType() {
        return Optional.ofNullable(this.retryType);
    }

    private RetryPolicyResponse() {}

    private RetryPolicyResponse(RetryPolicyResponse $) {
        this.retryCount = $.retryCount;
        this.retryInterval = $.retryInterval;
        this.retryType = $.retryType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RetryPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RetryPolicyResponse $;

        public Builder() {
            $ = new RetryPolicyResponse();
        }

        public Builder(RetryPolicyResponse defaults) {
            $ = new RetryPolicyResponse(Objects.requireNonNull(defaults));
        }

        public Builder retryCount(@Nullable Integer retryCount) {
            $.retryCount = retryCount;
            return this;
        }

        public Builder retryInterval(@Nullable String retryInterval) {
            $.retryInterval = retryInterval;
            return this;
        }

        public Builder retryType(@Nullable String retryType) {
            $.retryType = retryType;
            return this;
        }

        public RetryPolicyResponse build() {
            return $;
        }
    }

}
