// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.azurenative.servicefabricmesh.inputs.AutoScalingResourceMetricArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Describes the average load trigger used for auto scaling.
 * 
 */
public final class AverageLoadScalingTriggerArgs extends com.pulumi.resources.ResourceArgs {

    public static final AverageLoadScalingTriggerArgs Empty = new AverageLoadScalingTriggerArgs();

    /**
     * Enumerates the triggers for auto scaling.
     * Expected value is &#39;AverageLoad&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    /**
     * @return Enumerates the triggers for auto scaling.
     * Expected value is &#39;AverageLoad&#39;.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }

    /**
     * Lower load threshold (if average load is below this threshold, service will scale down).
     * 
     */
    @Import(name="lowerLoadThreshold", required=true)
    private Output<Double> lowerLoadThreshold;

    /**
     * @return Lower load threshold (if average load is below this threshold, service will scale down).
     * 
     */
    public Output<Double> lowerLoadThreshold() {
        return this.lowerLoadThreshold;
    }

    /**
     * Description of the metric that is used for scaling.
     * 
     */
    @Import(name="metric", required=true)
    private Output<AutoScalingResourceMetricArgs> metric;

    /**
     * @return Description of the metric that is used for scaling.
     * 
     */
    public Output<AutoScalingResourceMetricArgs> metric() {
        return this.metric;
    }

    /**
     * Scale interval that indicates how often will this trigger be checked.
     * 
     */
    @Import(name="scaleIntervalInSeconds", required=true)
    private Output<Integer> scaleIntervalInSeconds;

    /**
     * @return Scale interval that indicates how often will this trigger be checked.
     * 
     */
    public Output<Integer> scaleIntervalInSeconds() {
        return this.scaleIntervalInSeconds;
    }

    /**
     * Upper load threshold (if average load is above this threshold, service will scale up).
     * 
     */
    @Import(name="upperLoadThreshold", required=true)
    private Output<Double> upperLoadThreshold;

    /**
     * @return Upper load threshold (if average load is above this threshold, service will scale up).
     * 
     */
    public Output<Double> upperLoadThreshold() {
        return this.upperLoadThreshold;
    }

    private AverageLoadScalingTriggerArgs() {}

    private AverageLoadScalingTriggerArgs(AverageLoadScalingTriggerArgs $) {
        this.kind = $.kind;
        this.lowerLoadThreshold = $.lowerLoadThreshold;
        this.metric = $.metric;
        this.scaleIntervalInSeconds = $.scaleIntervalInSeconds;
        this.upperLoadThreshold = $.upperLoadThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AverageLoadScalingTriggerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AverageLoadScalingTriggerArgs $;

        public Builder() {
            $ = new AverageLoadScalingTriggerArgs();
        }

        public Builder(AverageLoadScalingTriggerArgs defaults) {
            $ = new AverageLoadScalingTriggerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kind Enumerates the triggers for auto scaling.
         * Expected value is &#39;AverageLoad&#39;.
         * 
         * @return builder
         * 
         */
        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Enumerates the triggers for auto scaling.
         * Expected value is &#39;AverageLoad&#39;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param lowerLoadThreshold Lower load threshold (if average load is below this threshold, service will scale down).
         * 
         * @return builder
         * 
         */
        public Builder lowerLoadThreshold(Output<Double> lowerLoadThreshold) {
            $.lowerLoadThreshold = lowerLoadThreshold;
            return this;
        }

        /**
         * @param lowerLoadThreshold Lower load threshold (if average load is below this threshold, service will scale down).
         * 
         * @return builder
         * 
         */
        public Builder lowerLoadThreshold(Double lowerLoadThreshold) {
            return lowerLoadThreshold(Output.of(lowerLoadThreshold));
        }

        /**
         * @param metric Description of the metric that is used for scaling.
         * 
         * @return builder
         * 
         */
        public Builder metric(Output<AutoScalingResourceMetricArgs> metric) {
            $.metric = metric;
            return this;
        }

        /**
         * @param metric Description of the metric that is used for scaling.
         * 
         * @return builder
         * 
         */
        public Builder metric(AutoScalingResourceMetricArgs metric) {
            return metric(Output.of(metric));
        }

        /**
         * @param scaleIntervalInSeconds Scale interval that indicates how often will this trigger be checked.
         * 
         * @return builder
         * 
         */
        public Builder scaleIntervalInSeconds(Output<Integer> scaleIntervalInSeconds) {
            $.scaleIntervalInSeconds = scaleIntervalInSeconds;
            return this;
        }

        /**
         * @param scaleIntervalInSeconds Scale interval that indicates how often will this trigger be checked.
         * 
         * @return builder
         * 
         */
        public Builder scaleIntervalInSeconds(Integer scaleIntervalInSeconds) {
            return scaleIntervalInSeconds(Output.of(scaleIntervalInSeconds));
        }

        /**
         * @param upperLoadThreshold Upper load threshold (if average load is above this threshold, service will scale up).
         * 
         * @return builder
         * 
         */
        public Builder upperLoadThreshold(Output<Double> upperLoadThreshold) {
            $.upperLoadThreshold = upperLoadThreshold;
            return this;
        }

        /**
         * @param upperLoadThreshold Upper load threshold (if average load is above this threshold, service will scale up).
         * 
         * @return builder
         * 
         */
        public Builder upperLoadThreshold(Double upperLoadThreshold) {
            return upperLoadThreshold(Output.of(upperLoadThreshold));
        }

        public AverageLoadScalingTriggerArgs build() {
            $.kind = Codegen.stringProp("kind").output().arg($.kind).require();
            $.lowerLoadThreshold = Objects.requireNonNull($.lowerLoadThreshold, "expected parameter 'lowerLoadThreshold' to be non-null");
            $.metric = Objects.requireNonNull($.metric, "expected parameter 'metric' to be non-null");
            $.scaleIntervalInSeconds = Objects.requireNonNull($.scaleIntervalInSeconds, "expected parameter 'scaleIntervalInSeconds' to be non-null");
            $.upperLoadThreshold = Objects.requireNonNull($.upperLoadThreshold, "expected parameter 'upperLoadThreshold' to be non-null");
            return $;
        }
    }

}
