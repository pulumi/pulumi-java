// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datashare.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A ShareSynchronization data transfer object.
 * 
 */
public final class ShareSynchronizationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ShareSynchronizationResponse Empty = new ShareSynchronizationResponse();

    /**
     * Email of the user who created the synchronization
     * 
     */
    @Import(name="consumerEmail")
    private @Nullable String consumerEmail;

    public Optional<String> consumerEmail() {
        return Optional.ofNullable(this.consumerEmail);
    }

    /**
     * Name of the user who created the synchronization
     * 
     */
    @Import(name="consumerName")
    private @Nullable String consumerName;

    public Optional<String> consumerName() {
        return Optional.ofNullable(this.consumerName);
    }

    /**
     * Tenant name of the consumer who created the synchronization
     * 
     */
    @Import(name="consumerTenantName")
    private @Nullable String consumerTenantName;

    public Optional<String> consumerTenantName() {
        return Optional.ofNullable(this.consumerTenantName);
    }

    /**
     * synchronization duration
     * 
     */
    @Import(name="durationMs")
    private @Nullable Integer durationMs;

    public Optional<Integer> durationMs() {
        return Optional.ofNullable(this.durationMs);
    }

    /**
     * End time of synchronization
     * 
     */
    @Import(name="endTime")
    private @Nullable String endTime;

    public Optional<String> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * message of synchronization
     * 
     */
    @Import(name="message")
    private @Nullable String message;

    public Optional<String> message() {
        return Optional.ofNullable(this.message);
    }

    /**
     * start time of synchronization
     * 
     */
    @Import(name="startTime")
    private @Nullable String startTime;

    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * Raw Status
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Synchronization id
     * 
     */
    @Import(name="synchronizationId")
    private @Nullable String synchronizationId;

    public Optional<String> synchronizationId() {
        return Optional.ofNullable(this.synchronizationId);
    }

    /**
     * Synchronization mode
     * 
     */
    @Import(name="synchronizationMode", required=true)
    private String synchronizationMode;

    public String synchronizationMode() {
        return this.synchronizationMode;
    }

    private ShareSynchronizationResponse() {}

    private ShareSynchronizationResponse(ShareSynchronizationResponse $) {
        this.consumerEmail = $.consumerEmail;
        this.consumerName = $.consumerName;
        this.consumerTenantName = $.consumerTenantName;
        this.durationMs = $.durationMs;
        this.endTime = $.endTime;
        this.message = $.message;
        this.startTime = $.startTime;
        this.status = $.status;
        this.synchronizationId = $.synchronizationId;
        this.synchronizationMode = $.synchronizationMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShareSynchronizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShareSynchronizationResponse $;

        public Builder() {
            $ = new ShareSynchronizationResponse();
        }

        public Builder(ShareSynchronizationResponse defaults) {
            $ = new ShareSynchronizationResponse(Objects.requireNonNull(defaults));
        }

        public Builder consumerEmail(@Nullable String consumerEmail) {
            $.consumerEmail = consumerEmail;
            return this;
        }

        public Builder consumerName(@Nullable String consumerName) {
            $.consumerName = consumerName;
            return this;
        }

        public Builder consumerTenantName(@Nullable String consumerTenantName) {
            $.consumerTenantName = consumerTenantName;
            return this;
        }

        public Builder durationMs(@Nullable Integer durationMs) {
            $.durationMs = durationMs;
            return this;
        }

        public Builder endTime(@Nullable String endTime) {
            $.endTime = endTime;
            return this;
        }

        public Builder message(@Nullable String message) {
            $.message = message;
            return this;
        }

        public Builder startTime(@Nullable String startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public Builder synchronizationId(@Nullable String synchronizationId) {
            $.synchronizationId = synchronizationId;
            return this;
        }

        public Builder synchronizationMode(String synchronizationMode) {
            $.synchronizationMode = synchronizationMode;
            return this;
        }

        public ShareSynchronizationResponse build() {
            $.synchronizationMode = Objects.requireNonNull($.synchronizationMode, "expected parameter 'synchronizationMode' to be non-null");
            return $;
        }
    }

}
