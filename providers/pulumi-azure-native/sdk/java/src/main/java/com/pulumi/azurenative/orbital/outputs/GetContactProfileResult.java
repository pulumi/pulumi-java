// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.orbital.outputs;

import com.pulumi.azurenative.orbital.outputs.ContactProfileLinkResponse;
import com.pulumi.azurenative.orbital.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetContactProfileResult {
    /**
     * @return Auto track configuration.
     * 
     */
    private final @Nullable String autoTrackingConfiguration;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private final String etag;
    /**
     * @return The URI of the Event Hub used for telemetry
     * 
     */
    private final @Nullable String eventHubUri;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * @return Links of the Contact Profile
     * 
     */
    private final List<ContactProfileLinkResponse> links;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private final String location;
    /**
     * @return Minimum viable elevation for the contact in decimal degrees.
     * 
     */
    private final @Nullable Double minimumElevationDegrees;
    /**
     * @return Minimum viable contact duration in ISO 8601 format.
     * 
     */
    private final @Nullable String minimumViableContactDuration;
    /**
     * @return The name of the resource
     * 
     */
    private final String name;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * @return Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetContactProfileResult(
        @CustomType.Parameter("autoTrackingConfiguration") @Nullable String autoTrackingConfiguration,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("eventHubUri") @Nullable String eventHubUri,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("links") List<ContactProfileLinkResponse> links,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("minimumElevationDegrees") @Nullable Double minimumElevationDegrees,
        @CustomType.Parameter("minimumViableContactDuration") @Nullable String minimumViableContactDuration,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.autoTrackingConfiguration = autoTrackingConfiguration;
        this.etag = etag;
        this.eventHubUri = eventHubUri;
        this.id = id;
        this.links = links;
        this.location = location;
        this.minimumElevationDegrees = minimumElevationDegrees;
        this.minimumViableContactDuration = minimumViableContactDuration;
        this.name = name;
        this.systemData = systemData;
        this.tags = tags;
        this.type = type;
    }

    /**
     * @return Auto track configuration.
     * 
     */
    public Optional<String> autoTrackingConfiguration() {
        return Optional.ofNullable(this.autoTrackingConfiguration);
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The URI of the Event Hub used for telemetry
     * 
     */
    public Optional<String> eventHubUri() {
        return Optional.ofNullable(this.eventHubUri);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Links of the Contact Profile
     * 
     */
    public List<ContactProfileLinkResponse> links() {
        return this.links;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Minimum viable elevation for the contact in decimal degrees.
     * 
     */
    public Optional<Double> minimumElevationDegrees() {
        return Optional.ofNullable(this.minimumElevationDegrees);
    }
    /**
     * @return Minimum viable contact duration in ISO 8601 format.
     * 
     */
    public Optional<String> minimumViableContactDuration() {
        return Optional.ofNullable(this.minimumViableContactDuration);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContactProfileResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String autoTrackingConfiguration;
        private String etag;
        private @Nullable String eventHubUri;
        private String id;
        private List<ContactProfileLinkResponse> links;
        private String location;
        private @Nullable Double minimumElevationDegrees;
        private @Nullable String minimumViableContactDuration;
        private String name;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetContactProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoTrackingConfiguration = defaults.autoTrackingConfiguration;
    	      this.etag = defaults.etag;
    	      this.eventHubUri = defaults.eventHubUri;
    	      this.id = defaults.id;
    	      this.links = defaults.links;
    	      this.location = defaults.location;
    	      this.minimumElevationDegrees = defaults.minimumElevationDegrees;
    	      this.minimumViableContactDuration = defaults.minimumViableContactDuration;
    	      this.name = defaults.name;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder autoTrackingConfiguration(@Nullable String autoTrackingConfiguration) {
            this.autoTrackingConfiguration = autoTrackingConfiguration;
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder eventHubUri(@Nullable String eventHubUri) {
            this.eventHubUri = eventHubUri;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder links(List<ContactProfileLinkResponse> links) {
            this.links = Objects.requireNonNull(links);
            return this;
        }
        public Builder links(ContactProfileLinkResponse... links) {
            return links(List.of(links));
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder minimumElevationDegrees(@Nullable Double minimumElevationDegrees) {
            this.minimumElevationDegrees = minimumElevationDegrees;
            return this;
        }
        public Builder minimumViableContactDuration(@Nullable String minimumViableContactDuration) {
            this.minimumViableContactDuration = minimumViableContactDuration;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetContactProfileResult build() {
            return new GetContactProfileResult(autoTrackingConfiguration, etag, eventHubUri, id, links, location, minimumElevationDegrees, minimumViableContactDuration, name, systemData, tags, type);
        }
    }
}
