// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The mapping between a particular user and the access type on the SMB share.
 * 
 */
public final class UserAccessRightResponse extends com.pulumi.resources.InvokeArgs {

    public static final UserAccessRightResponse Empty = new UserAccessRightResponse();

    /**
     * Type of access to be allowed for the user.
     * 
     */
    @Import(name="accessType", required=true)
    private String accessType;

    public String accessType() {
        return this.accessType;
    }

    /**
     * User ID (already existing in the device).
     * 
     */
    @Import(name="userId", required=true)
    private String userId;

    public String userId() {
        return this.userId;
    }

    private UserAccessRightResponse() {}

    private UserAccessRightResponse(UserAccessRightResponse $) {
        this.accessType = $.accessType;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAccessRightResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAccessRightResponse $;

        public Builder() {
            $ = new UserAccessRightResponse();
        }

        public Builder(UserAccessRightResponse defaults) {
            $ = new UserAccessRightResponse(Objects.requireNonNull(defaults));
        }

        public Builder accessType(String accessType) {
            $.accessType = accessType;
            return this;
        }

        public Builder userId(String userId) {
            $.userId = userId;
            return this;
        }

        public UserAccessRightResponse build() {
            $.accessType = Objects.requireNonNull($.accessType, "expected parameter 'accessType' to be non-null");
            $.userId = Objects.requireNonNull($.userId, "expected parameter 'userId' to be non-null");
            return $;
        }
    }

}
