// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAppDeploymentSlotArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAppDeploymentSlotArgs Empty = new WebAppDeploymentSlotArgs();

    /**
     * True if deployment is currently active, false if completed and null if not started.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * Who authored the deployment.
     * 
     */
    @Import(name="author")
    private @Nullable Output<String> author;

    public Optional<Output<String>> author() {
        return Optional.ofNullable(this.author);
    }

    /**
     * Author email.
     * 
     */
    @Import(name="authorEmail")
    private @Nullable Output<String> authorEmail;

    public Optional<Output<String>> authorEmail() {
        return Optional.ofNullable(this.authorEmail);
    }

    /**
     * Who performed the deployment.
     * 
     */
    @Import(name="deployer")
    private @Nullable Output<String> deployer;

    public Optional<Output<String>> deployer() {
        return Optional.ofNullable(this.deployer);
    }

    /**
     * Details on deployment.
     * 
     */
    @Import(name="details")
    private @Nullable Output<String> details;

    public Optional<Output<String>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * End time.
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * ID of an existing deployment.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Details about deployment status.
     * 
     */
    @Import(name="message")
    private @Nullable Output<String> message;

    public Optional<Output<String>> message() {
        return Optional.ofNullable(this.message);
    }

    /**
     * Name of the app.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the deployment slot. If a slot is not specified, the API creates a deployment for the production slot.
     * 
     */
    @Import(name="slot", required=true)
    private Output<String> slot;

    public Output<String> slot() {
        return this.slot;
    }

    /**
     * Start time.
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * Deployment status.
     * 
     */
    @Import(name="status")
    private @Nullable Output<Integer> status;

    public Optional<Output<Integer>> status() {
        return Optional.ofNullable(this.status);
    }

    private WebAppDeploymentSlotArgs() {}

    private WebAppDeploymentSlotArgs(WebAppDeploymentSlotArgs $) {
        this.active = $.active;
        this.author = $.author;
        this.authorEmail = $.authorEmail;
        this.deployer = $.deployer;
        this.details = $.details;
        this.endTime = $.endTime;
        this.id = $.id;
        this.kind = $.kind;
        this.message = $.message;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.slot = $.slot;
        this.startTime = $.startTime;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppDeploymentSlotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppDeploymentSlotArgs $;

        public Builder() {
            $ = new WebAppDeploymentSlotArgs();
        }

        public Builder(WebAppDeploymentSlotArgs defaults) {
            $ = new WebAppDeploymentSlotArgs(Objects.requireNonNull(defaults));
        }

        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        public Builder author(@Nullable Output<String> author) {
            $.author = author;
            return this;
        }

        public Builder author(String author) {
            return author(Output.of(author));
        }

        public Builder authorEmail(@Nullable Output<String> authorEmail) {
            $.authorEmail = authorEmail;
            return this;
        }

        public Builder authorEmail(String authorEmail) {
            return authorEmail(Output.of(authorEmail));
        }

        public Builder deployer(@Nullable Output<String> deployer) {
            $.deployer = deployer;
            return this;
        }

        public Builder deployer(String deployer) {
            return deployer(Output.of(deployer));
        }

        public Builder details(@Nullable Output<String> details) {
            $.details = details;
            return this;
        }

        public Builder details(String details) {
            return details(Output.of(details));
        }

        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder message(@Nullable Output<String> message) {
            $.message = message;
            return this;
        }

        public Builder message(String message) {
            return message(Output.of(message));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder slot(Output<String> slot) {
            $.slot = slot;
            return this;
        }

        public Builder slot(String slot) {
            return slot(Output.of(slot));
        }

        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public Builder status(@Nullable Output<Integer> status) {
            $.status = status;
            return this;
        }

        public Builder status(Integer status) {
            return status(Output.of(status));
        }

        public WebAppDeploymentSlotArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.slot = Objects.requireNonNull($.slot, "expected parameter 'slot' to be non-null");
            return $;
        }
    }

}
