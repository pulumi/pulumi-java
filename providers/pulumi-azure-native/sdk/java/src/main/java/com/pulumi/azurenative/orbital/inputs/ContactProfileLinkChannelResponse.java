// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.orbital.inputs;

import com.pulumi.azurenative.orbital.inputs.EndPointResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Contact Profile Link Channel
 * 
 */
public final class ContactProfileLinkChannelResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContactProfileLinkChannelResponse Empty = new ContactProfileLinkChannelResponse();

    /**
     * Bandwidth in MHz
     * 
     */
    @Import(name="bandwidthMHz", required=true)
    private Double bandwidthMHz;

    public Double bandwidthMHz() {
        return this.bandwidthMHz;
    }

    /**
     * Center Frequency in MHz
     * 
     */
    @Import(name="centerFrequencyMHz", required=true)
    private Double centerFrequencyMHz;

    public Double centerFrequencyMHz() {
        return this.centerFrequencyMHz;
    }

    /**
     * Configuration for decoding
     * 
     */
    @Import(name="decodingConfiguration")
    private @Nullable String decodingConfiguration;

    public Optional<String> decodingConfiguration() {
        return Optional.ofNullable(this.decodingConfiguration);
    }

    /**
     * Configuration for demodulation
     * 
     */
    @Import(name="demodulationConfiguration")
    private @Nullable String demodulationConfiguration;

    public Optional<String> demodulationConfiguration() {
        return Optional.ofNullable(this.demodulationConfiguration);
    }

    /**
     * Configuration for encoding
     * 
     */
    @Import(name="encodingConfiguration")
    private @Nullable String encodingConfiguration;

    public Optional<String> encodingConfiguration() {
        return Optional.ofNullable(this.encodingConfiguration);
    }

    /**
     * Customer End point to store/retrieve data during a contact.
     * 
     */
    @Import(name="endPoint", required=true)
    private EndPointResponse endPoint;

    public EndPointResponse endPoint() {
        return this.endPoint;
    }

    /**
     * Configuration for modulation
     * 
     */
    @Import(name="modulationConfiguration")
    private @Nullable String modulationConfiguration;

    public Optional<String> modulationConfiguration() {
        return Optional.ofNullable(this.modulationConfiguration);
    }

    private ContactProfileLinkChannelResponse() {}

    private ContactProfileLinkChannelResponse(ContactProfileLinkChannelResponse $) {
        this.bandwidthMHz = $.bandwidthMHz;
        this.centerFrequencyMHz = $.centerFrequencyMHz;
        this.decodingConfiguration = $.decodingConfiguration;
        this.demodulationConfiguration = $.demodulationConfiguration;
        this.encodingConfiguration = $.encodingConfiguration;
        this.endPoint = $.endPoint;
        this.modulationConfiguration = $.modulationConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContactProfileLinkChannelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContactProfileLinkChannelResponse $;

        public Builder() {
            $ = new ContactProfileLinkChannelResponse();
        }

        public Builder(ContactProfileLinkChannelResponse defaults) {
            $ = new ContactProfileLinkChannelResponse(Objects.requireNonNull(defaults));
        }

        public Builder bandwidthMHz(Double bandwidthMHz) {
            $.bandwidthMHz = bandwidthMHz;
            return this;
        }

        public Builder centerFrequencyMHz(Double centerFrequencyMHz) {
            $.centerFrequencyMHz = centerFrequencyMHz;
            return this;
        }

        public Builder decodingConfiguration(@Nullable String decodingConfiguration) {
            $.decodingConfiguration = decodingConfiguration;
            return this;
        }

        public Builder demodulationConfiguration(@Nullable String demodulationConfiguration) {
            $.demodulationConfiguration = demodulationConfiguration;
            return this;
        }

        public Builder encodingConfiguration(@Nullable String encodingConfiguration) {
            $.encodingConfiguration = encodingConfiguration;
            return this;
        }

        public Builder endPoint(EndPointResponse endPoint) {
            $.endPoint = endPoint;
            return this;
        }

        public Builder modulationConfiguration(@Nullable String modulationConfiguration) {
            $.modulationConfiguration = modulationConfiguration;
            return this;
        }

        public ContactProfileLinkChannelResponse build() {
            $.bandwidthMHz = Objects.requireNonNull($.bandwidthMHz, "expected parameter 'bandwidthMHz' to be non-null");
            $.centerFrequencyMHz = Objects.requireNonNull($.centerFrequencyMHz, "expected parameter 'centerFrequencyMHz' to be non-null");
            $.endPoint = Objects.requireNonNull($.endPoint, "expected parameter 'endPoint' to be non-null");
            return $;
        }
    }

}
