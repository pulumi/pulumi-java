// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Service Endpoint policy definitions.
 * 
 */
public final class ServiceEndpointPolicyDefinitionResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServiceEndpointPolicyDefinitionResponse Empty = new ServiceEndpointPolicyDefinitionResponse();

    /**
     * A description for this rule. Restricted to 140 chars.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return A description for this rule. Restricted to 140 chars.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The provisioning state of the service endpoint policy definition resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return The provisioning state of the service endpoint policy definition resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Service endpoint name.
     * 
     */
    @Import(name="service")
    private @Nullable String service;

    /**
     * @return Service endpoint name.
     * 
     */
    public Optional<String> service() {
        return Optional.ofNullable(this.service);
    }

    /**
     * A list of service resources.
     * 
     */
    @Import(name="serviceResources")
    private @Nullable List<String> serviceResources;

    /**
     * @return A list of service resources.
     * 
     */
    public Optional<List<String>> serviceResources() {
        return Optional.ofNullable(this.serviceResources);
    }

    private ServiceEndpointPolicyDefinitionResponse() {}

    private ServiceEndpointPolicyDefinitionResponse(ServiceEndpointPolicyDefinitionResponse $) {
        this.description = $.description;
        this.etag = $.etag;
        this.id = $.id;
        this.name = $.name;
        this.provisioningState = $.provisioningState;
        this.service = $.service;
        this.serviceResources = $.serviceResources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEndpointPolicyDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEndpointPolicyDefinitionResponse $;

        public Builder() {
            $ = new ServiceEndpointPolicyDefinitionResponse();
        }

        public Builder(ServiceEndpointPolicyDefinitionResponse defaults) {
            $ = new ServiceEndpointPolicyDefinitionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A description for this rule. Restricted to 140 chars.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param etag A unique read-only string that changes whenever the resource is updated.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param name The name of the resource that is unique within a resource group. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param provisioningState The provisioning state of the service endpoint policy definition resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param service Service endpoint name.
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable String service) {
            $.service = service;
            return this;
        }

        /**
         * @param serviceResources A list of service resources.
         * 
         * @return builder
         * 
         */
        public Builder serviceResources(@Nullable List<String> serviceResources) {
            $.serviceResources = serviceResources;
            return this;
        }

        /**
         * @param serviceResources A list of service resources.
         * 
         * @return builder
         * 
         */
        public Builder serviceResources(String... serviceResources) {
            return serviceResources(List.of(serviceResources));
        }

        public ServiceEndpointPolicyDefinitionResponse build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
