// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.enums.DayOfWeek;
import com.pulumi.azurenative.recoveryservices.enums.ScheduleRunType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Simple policy schedule.
 * 
 */
public final class SimpleSchedulePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SimpleSchedulePolicyArgs Empty = new SimpleSchedulePolicyArgs();

    /**
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
     * Expected value is &#39;SimpleSchedulePolicy&#39;.
     * 
     */
    @Import(name="schedulePolicyType", required=true)
    private Output<String> schedulePolicyType;

    /**
     * @return This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
     * Expected value is &#39;SimpleSchedulePolicy&#39;.
     * 
     */
    public Output<String> schedulePolicyType() {
        return this.schedulePolicyType;
    }

    /**
     * List of days of week this schedule has to be run.
     * 
     */
    @Import(name="scheduleRunDays")
    private @Nullable Output<List<DayOfWeek>> scheduleRunDays;

    /**
     * @return List of days of week this schedule has to be run.
     * 
     */
    public Optional<Output<List<DayOfWeek>>> scheduleRunDays() {
        return Optional.ofNullable(this.scheduleRunDays);
    }

    /**
     * Frequency of the schedule operation of this policy.
     * 
     */
    @Import(name="scheduleRunFrequency")
    private @Nullable Output<Either<String,ScheduleRunType>> scheduleRunFrequency;

    /**
     * @return Frequency of the schedule operation of this policy.
     * 
     */
    public Optional<Output<Either<String,ScheduleRunType>>> scheduleRunFrequency() {
        return Optional.ofNullable(this.scheduleRunFrequency);
    }

    /**
     * List of times of day this schedule has to be run.
     * 
     */
    @Import(name="scheduleRunTimes")
    private @Nullable Output<List<String>> scheduleRunTimes;

    /**
     * @return List of times of day this schedule has to be run.
     * 
     */
    public Optional<Output<List<String>>> scheduleRunTimes() {
        return Optional.ofNullable(this.scheduleRunTimes);
    }

    /**
     * At every number weeks this schedule has to be run.
     * 
     */
    @Import(name="scheduleWeeklyFrequency")
    private @Nullable Output<Integer> scheduleWeeklyFrequency;

    /**
     * @return At every number weeks this schedule has to be run.
     * 
     */
    public Optional<Output<Integer>> scheduleWeeklyFrequency() {
        return Optional.ofNullable(this.scheduleWeeklyFrequency);
    }

    private SimpleSchedulePolicyArgs() {}

    private SimpleSchedulePolicyArgs(SimpleSchedulePolicyArgs $) {
        this.schedulePolicyType = $.schedulePolicyType;
        this.scheduleRunDays = $.scheduleRunDays;
        this.scheduleRunFrequency = $.scheduleRunFrequency;
        this.scheduleRunTimes = $.scheduleRunTimes;
        this.scheduleWeeklyFrequency = $.scheduleWeeklyFrequency;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SimpleSchedulePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SimpleSchedulePolicyArgs $;

        public Builder() {
            $ = new SimpleSchedulePolicyArgs();
        }

        public Builder(SimpleSchedulePolicyArgs defaults) {
            $ = new SimpleSchedulePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param schedulePolicyType This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
         * Expected value is &#39;SimpleSchedulePolicy&#39;.
         * 
         * @return builder
         * 
         */
        public Builder schedulePolicyType(Output<String> schedulePolicyType) {
            $.schedulePolicyType = schedulePolicyType;
            return this;
        }

        /**
         * @param schedulePolicyType This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
         * Expected value is &#39;SimpleSchedulePolicy&#39;.
         * 
         * @return builder
         * 
         */
        public Builder schedulePolicyType(String schedulePolicyType) {
            return schedulePolicyType(Output.of(schedulePolicyType));
        }

        /**
         * @param scheduleRunDays List of days of week this schedule has to be run.
         * 
         * @return builder
         * 
         */
        public Builder scheduleRunDays(@Nullable Output<List<DayOfWeek>> scheduleRunDays) {
            $.scheduleRunDays = scheduleRunDays;
            return this;
        }

        /**
         * @param scheduleRunDays List of days of week this schedule has to be run.
         * 
         * @return builder
         * 
         */
        public Builder scheduleRunDays(List<DayOfWeek> scheduleRunDays) {
            return scheduleRunDays(Output.of(scheduleRunDays));
        }

        /**
         * @param scheduleRunDays List of days of week this schedule has to be run.
         * 
         * @return builder
         * 
         */
        public Builder scheduleRunDays(DayOfWeek... scheduleRunDays) {
            return scheduleRunDays(List.of(scheduleRunDays));
        }

        /**
         * @param scheduleRunFrequency Frequency of the schedule operation of this policy.
         * 
         * @return builder
         * 
         */
        public Builder scheduleRunFrequency(@Nullable Output<Either<String,ScheduleRunType>> scheduleRunFrequency) {
            $.scheduleRunFrequency = scheduleRunFrequency;
            return this;
        }

        /**
         * @param scheduleRunFrequency Frequency of the schedule operation of this policy.
         * 
         * @return builder
         * 
         */
        public Builder scheduleRunFrequency(Either<String,ScheduleRunType> scheduleRunFrequency) {
            return scheduleRunFrequency(Output.of(scheduleRunFrequency));
        }

        /**
         * @param scheduleRunFrequency Frequency of the schedule operation of this policy.
         * 
         * @return builder
         * 
         */
        public Builder scheduleRunFrequency(String scheduleRunFrequency) {
            return scheduleRunFrequency(Either.ofLeft(scheduleRunFrequency));
        }

        /**
         * @param scheduleRunFrequency Frequency of the schedule operation of this policy.
         * 
         * @return builder
         * 
         */
        public Builder scheduleRunFrequency(ScheduleRunType scheduleRunFrequency) {
            return scheduleRunFrequency(Either.ofRight(scheduleRunFrequency));
        }

        /**
         * @param scheduleRunTimes List of times of day this schedule has to be run.
         * 
         * @return builder
         * 
         */
        public Builder scheduleRunTimes(@Nullable Output<List<String>> scheduleRunTimes) {
            $.scheduleRunTimes = scheduleRunTimes;
            return this;
        }

        /**
         * @param scheduleRunTimes List of times of day this schedule has to be run.
         * 
         * @return builder
         * 
         */
        public Builder scheduleRunTimes(List<String> scheduleRunTimes) {
            return scheduleRunTimes(Output.of(scheduleRunTimes));
        }

        /**
         * @param scheduleRunTimes List of times of day this schedule has to be run.
         * 
         * @return builder
         * 
         */
        public Builder scheduleRunTimes(String... scheduleRunTimes) {
            return scheduleRunTimes(List.of(scheduleRunTimes));
        }

        /**
         * @param scheduleWeeklyFrequency At every number weeks this schedule has to be run.
         * 
         * @return builder
         * 
         */
        public Builder scheduleWeeklyFrequency(@Nullable Output<Integer> scheduleWeeklyFrequency) {
            $.scheduleWeeklyFrequency = scheduleWeeklyFrequency;
            return this;
        }

        /**
         * @param scheduleWeeklyFrequency At every number weeks this schedule has to be run.
         * 
         * @return builder
         * 
         */
        public Builder scheduleWeeklyFrequency(Integer scheduleWeeklyFrequency) {
            return scheduleWeeklyFrequency(Output.of(scheduleWeeklyFrequency));
        }

        public SimpleSchedulePolicyArgs build() {
            $.schedulePolicyType = Codegen.stringProp("schedulePolicyType").output().arg($.schedulePolicyType).require();
            return $;
        }
    }

}
