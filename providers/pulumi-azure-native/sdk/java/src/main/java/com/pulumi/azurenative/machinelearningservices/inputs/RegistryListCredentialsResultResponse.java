// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.PasswordResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistryListCredentialsResultResponse extends com.pulumi.resources.InvokeArgs {

    public static final RegistryListCredentialsResultResponse Empty = new RegistryListCredentialsResultResponse();

    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    @Import(name="passwords")
    private @Nullable List<PasswordResponse> passwords;

    public Optional<List<PasswordResponse>> passwords() {
        return Optional.ofNullable(this.passwords);
    }

    @Import(name="username", required=true)
    private String username;

    public String username() {
        return this.username;
    }

    private RegistryListCredentialsResultResponse() {}

    private RegistryListCredentialsResultResponse(RegistryListCredentialsResultResponse $) {
        this.location = $.location;
        this.passwords = $.passwords;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistryListCredentialsResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistryListCredentialsResultResponse $;

        public Builder() {
            $ = new RegistryListCredentialsResultResponse();
        }

        public Builder(RegistryListCredentialsResultResponse defaults) {
            $ = new RegistryListCredentialsResultResponse(Objects.requireNonNull(defaults));
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder passwords(@Nullable List<PasswordResponse> passwords) {
            $.passwords = passwords;
            return this;
        }

        public Builder passwords(PasswordResponse... passwords) {
            return passwords(List.of(passwords));
        }

        public Builder username(String username) {
            $.username = username;
            return this;
        }

        public RegistryListCredentialsResultResponse build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
