// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scheduler.inputs;

import com.pulumi.azurenative.scheduler.inputs.BasicAuthenticationResponse;
import com.pulumi.azurenative.scheduler.inputs.ClientCertAuthenticationResponse;
import com.pulumi.azurenative.scheduler.inputs.OAuthAuthenticationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HttpRequestResponse extends com.pulumi.resources.InvokeArgs {

    public static final HttpRequestResponse Empty = new HttpRequestResponse();

    /**
     * Gets or sets the authentication method of the request.
     * 
     */
    @Import(name="authentication")
      private final @Nullable Object authentication;

    public Object authentication() {
        return this.authentication == null ? null : this.authentication;
    }

    /**
     * Gets or sets the request body.
     * 
     */
    @Import(name="body")
      private final @Nullable String body;

    public Optional<String> body() {
        return this.body == null ? Optional.empty() : Optional.ofNullable(this.body);
    }

    /**
     * Gets or sets the headers.
     * 
     */
    @Import(name="headers")
      private final @Nullable Map<String,String> headers;

    public Map<String,String> headers() {
        return this.headers == null ? Map.of() : this.headers;
    }

    /**
     * Gets or sets the method of the request.
     * 
     */
    @Import(name="method")
      private final @Nullable String method;

    public Optional<String> method() {
        return this.method == null ? Optional.empty() : Optional.ofNullable(this.method);
    }

    /**
     * Gets or sets the URI of the request.
     * 
     */
    @Import(name="uri")
      private final @Nullable String uri;

    public Optional<String> uri() {
        return this.uri == null ? Optional.empty() : Optional.ofNullable(this.uri);
    }

    public HttpRequestResponse(
        @Nullable Object authentication,
        @Nullable String body,
        @Nullable Map<String,String> headers,
        @Nullable String method,
        @Nullable String uri) {
        this.authentication = authentication;
        this.body = body;
        this.headers = headers;
        this.method = method;
        this.uri = uri;
    }

    private HttpRequestResponse() {
        this.authentication = null;
        this.body = null;
        this.headers = Map.of();
        this.method = null;
        this.uri = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpRequestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Object authentication;
        private @Nullable String body;
        private @Nullable Map<String,String> headers;
        private @Nullable String method;
        private @Nullable String uri;

        public Builder() {
    	      // Empty
        }

        public Builder(HttpRequestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authentication = defaults.authentication;
    	      this.body = defaults.body;
    	      this.headers = defaults.headers;
    	      this.method = defaults.method;
    	      this.uri = defaults.uri;
        }

        public Builder authentication(@Nullable Object authentication) {
            this.authentication = authentication;
            return this;
        }
        public Builder body(@Nullable String body) {
            this.body = body;
            return this;
        }
        public Builder headers(@Nullable Map<String,String> headers) {
            this.headers = headers;
            return this;
        }
        public Builder method(@Nullable String method) {
            this.method = method;
            return this;
        }
        public Builder uri(@Nullable String uri) {
            this.uri = uri;
            return this;
        }        public HttpRequestResponse build() {
            return new HttpRequestResponse(authentication, body, headers, method, uri);
        }
    }
}
