// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.azurenative.storage.enums.HttpProtocol;
import com.pulumi.azurenative.storage.enums.Permissions;
import com.pulumi.azurenative.storage.enums.SignedResource;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ListStorageAccountServiceSASArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListStorageAccountServiceSASArgs Empty = new ListStorageAccountServiceSASArgs();

    /**
     * The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The response header override for cache control.
     * 
     */
    @Import(name="cacheControl")
    private Output</* @Nullable */ String> cacheControl;

    /**
     * @return The response header override for cache control.
     * 
     */
    public Output</* @Nullable */ String> cacheControl() {
        return this.cacheControl;
    }

    /**
     * The canonical path to the signed resource.
     * 
     */
    @Import(name="canonicalizedResource", required=true)
    private Output<String> canonicalizedResource;

    /**
     * @return The canonical path to the signed resource.
     * 
     */
    public Output<String> canonicalizedResource() {
        return this.canonicalizedResource;
    }

    /**
     * The response header override for content disposition.
     * 
     */
    @Import(name="contentDisposition")
    private Output</* @Nullable */ String> contentDisposition;

    /**
     * @return The response header override for content disposition.
     * 
     */
    public Output</* @Nullable */ String> contentDisposition() {
        return this.contentDisposition;
    }

    /**
     * The response header override for content encoding.
     * 
     */
    @Import(name="contentEncoding")
    private Output</* @Nullable */ String> contentEncoding;

    /**
     * @return The response header override for content encoding.
     * 
     */
    public Output</* @Nullable */ String> contentEncoding() {
        return this.contentEncoding;
    }

    /**
     * The response header override for content language.
     * 
     */
    @Import(name="contentLanguage")
    private Output</* @Nullable */ String> contentLanguage;

    /**
     * @return The response header override for content language.
     * 
     */
    public Output</* @Nullable */ String> contentLanguage() {
        return this.contentLanguage;
    }

    /**
     * The response header override for content type.
     * 
     */
    @Import(name="contentType")
    private Output</* @Nullable */ String> contentType;

    /**
     * @return The response header override for content type.
     * 
     */
    public Output</* @Nullable */ String> contentType() {
        return this.contentType;
    }

    /**
     * An IP address or a range of IP addresses from which to accept requests.
     * 
     */
    @Import(name="iPAddressOrRange")
    private Output</* @Nullable */ String> iPAddressOrRange;

    /**
     * @return An IP address or a range of IP addresses from which to accept requests.
     * 
     */
    public Output</* @Nullable */ String> iPAddressOrRange() {
        return this.iPAddressOrRange;
    }

    /**
     * A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.
     * 
     */
    @Import(name="identifier")
    private Output</* @Nullable */ String> identifier;

    /**
     * @return A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.
     * 
     */
    public Output</* @Nullable */ String> identifier() {
        return this.identifier;
    }

    /**
     * The key to sign the account SAS token with.
     * 
     */
    @Import(name="keyToSign")
    private Output</* @Nullable */ String> keyToSign;

    /**
     * @return The key to sign the account SAS token with.
     * 
     */
    public Output</* @Nullable */ String> keyToSign() {
        return this.keyToSign;
    }

    /**
     * The end of partition key.
     * 
     */
    @Import(name="partitionKeyEnd")
    private Output</* @Nullable */ String> partitionKeyEnd;

    /**
     * @return The end of partition key.
     * 
     */
    public Output</* @Nullable */ String> partitionKeyEnd() {
        return this.partitionKeyEnd;
    }

    /**
     * The start of partition key.
     * 
     */
    @Import(name="partitionKeyStart")
    private Output</* @Nullable */ String> partitionKeyStart;

    /**
     * @return The start of partition key.
     * 
     */
    public Output</* @Nullable */ String> partitionKeyStart() {
        return this.partitionKeyStart;
    }

    /**
     * The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).
     * 
     */
    @Import(name="permissions")
    private Output</* @Nullable */ Either<String,Permissions>> permissions;

    /**
     * @return The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).
     * 
     */
    public Output</* @Nullable */ Either<String,Permissions>> permissions() {
        return this.permissions;
    }

    /**
     * The protocol permitted for a request made with the account SAS.
     * 
     */
    @Import(name="protocols")
    private Output</* @Nullable */ HttpProtocol> protocols;

    /**
     * @return The protocol permitted for a request made with the account SAS.
     * 
     */
    public Output</* @Nullable */ HttpProtocol> protocols() {
        return this.protocols;
    }

    /**
     * The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).
     * 
     */
    @Import(name="resource")
    private Output</* @Nullable */ Either<String,SignedResource>> resource;

    /**
     * @return The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).
     * 
     */
    public Output</* @Nullable */ Either<String,SignedResource>> resource() {
        return this.resource;
    }

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The end of row key.
     * 
     */
    @Import(name="rowKeyEnd")
    private Output</* @Nullable */ String> rowKeyEnd;

    /**
     * @return The end of row key.
     * 
     */
    public Output</* @Nullable */ String> rowKeyEnd() {
        return this.rowKeyEnd;
    }

    /**
     * The start of row key.
     * 
     */
    @Import(name="rowKeyStart")
    private Output</* @Nullable */ String> rowKeyStart;

    /**
     * @return The start of row key.
     * 
     */
    public Output</* @Nullable */ String> rowKeyStart() {
        return this.rowKeyStart;
    }

    /**
     * The time at which the shared access signature becomes invalid.
     * 
     */
    @Import(name="sharedAccessExpiryTime")
    private Output</* @Nullable */ String> sharedAccessExpiryTime;

    /**
     * @return The time at which the shared access signature becomes invalid.
     * 
     */
    public Output</* @Nullable */ String> sharedAccessExpiryTime() {
        return this.sharedAccessExpiryTime;
    }

    /**
     * The time at which the SAS becomes valid.
     * 
     */
    @Import(name="sharedAccessStartTime")
    private Output</* @Nullable */ String> sharedAccessStartTime;

    /**
     * @return The time at which the SAS becomes valid.
     * 
     */
    public Output</* @Nullable */ String> sharedAccessStartTime() {
        return this.sharedAccessStartTime;
    }

    private ListStorageAccountServiceSASArgs() {}

    private ListStorageAccountServiceSASArgs(ListStorageAccountServiceSASArgs $) {
        this.accountName = $.accountName;
        this.cacheControl = $.cacheControl;
        this.canonicalizedResource = $.canonicalizedResource;
        this.contentDisposition = $.contentDisposition;
        this.contentEncoding = $.contentEncoding;
        this.contentLanguage = $.contentLanguage;
        this.contentType = $.contentType;
        this.iPAddressOrRange = $.iPAddressOrRange;
        this.identifier = $.identifier;
        this.keyToSign = $.keyToSign;
        this.partitionKeyEnd = $.partitionKeyEnd;
        this.partitionKeyStart = $.partitionKeyStart;
        this.permissions = $.permissions;
        this.protocols = $.protocols;
        this.resource = $.resource;
        this.resourceGroupName = $.resourceGroupName;
        this.rowKeyEnd = $.rowKeyEnd;
        this.rowKeyStart = $.rowKeyStart;
        this.sharedAccessExpiryTime = $.sharedAccessExpiryTime;
        this.sharedAccessStartTime = $.sharedAccessStartTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListStorageAccountServiceSASArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListStorageAccountServiceSASArgs $;

        public Builder() {
            $ = new ListStorageAccountServiceSASArgs();
        }

        public Builder(ListStorageAccountServiceSASArgs defaults) {
            $ = new ListStorageAccountServiceSASArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param cacheControl The response header override for cache control.
         * 
         * @return builder
         * 
         */
        public Builder cacheControl(Output</* @Nullable */ String> cacheControl) {
            $.cacheControl = cacheControl;
            return this;
        }

        /**
         * @param cacheControl The response header override for cache control.
         * 
         * @return builder
         * 
         */
        public Builder cacheControl(@Nullable String cacheControl) {
            return cacheControl(Output.of(cacheControl));
        }

        /**
         * @param canonicalizedResource The canonical path to the signed resource.
         * 
         * @return builder
         * 
         */
        public Builder canonicalizedResource(Output<String> canonicalizedResource) {
            $.canonicalizedResource = canonicalizedResource;
            return this;
        }

        /**
         * @param canonicalizedResource The canonical path to the signed resource.
         * 
         * @return builder
         * 
         */
        public Builder canonicalizedResource(String canonicalizedResource) {
            return canonicalizedResource(Output.of(canonicalizedResource));
        }

        /**
         * @param contentDisposition The response header override for content disposition.
         * 
         * @return builder
         * 
         */
        public Builder contentDisposition(Output</* @Nullable */ String> contentDisposition) {
            $.contentDisposition = contentDisposition;
            return this;
        }

        /**
         * @param contentDisposition The response header override for content disposition.
         * 
         * @return builder
         * 
         */
        public Builder contentDisposition(@Nullable String contentDisposition) {
            return contentDisposition(Output.of(contentDisposition));
        }

        /**
         * @param contentEncoding The response header override for content encoding.
         * 
         * @return builder
         * 
         */
        public Builder contentEncoding(Output</* @Nullable */ String> contentEncoding) {
            $.contentEncoding = contentEncoding;
            return this;
        }

        /**
         * @param contentEncoding The response header override for content encoding.
         * 
         * @return builder
         * 
         */
        public Builder contentEncoding(@Nullable String contentEncoding) {
            return contentEncoding(Output.of(contentEncoding));
        }

        /**
         * @param contentLanguage The response header override for content language.
         * 
         * @return builder
         * 
         */
        public Builder contentLanguage(Output</* @Nullable */ String> contentLanguage) {
            $.contentLanguage = contentLanguage;
            return this;
        }

        /**
         * @param contentLanguage The response header override for content language.
         * 
         * @return builder
         * 
         */
        public Builder contentLanguage(@Nullable String contentLanguage) {
            return contentLanguage(Output.of(contentLanguage));
        }

        /**
         * @param contentType The response header override for content type.
         * 
         * @return builder
         * 
         */
        public Builder contentType(Output</* @Nullable */ String> contentType) {
            $.contentType = contentType;
            return this;
        }

        /**
         * @param contentType The response header override for content type.
         * 
         * @return builder
         * 
         */
        public Builder contentType(@Nullable String contentType) {
            return contentType(Output.of(contentType));
        }

        /**
         * @param iPAddressOrRange An IP address or a range of IP addresses from which to accept requests.
         * 
         * @return builder
         * 
         */
        public Builder iPAddressOrRange(Output</* @Nullable */ String> iPAddressOrRange) {
            $.iPAddressOrRange = iPAddressOrRange;
            return this;
        }

        /**
         * @param iPAddressOrRange An IP address or a range of IP addresses from which to accept requests.
         * 
         * @return builder
         * 
         */
        public Builder iPAddressOrRange(@Nullable String iPAddressOrRange) {
            return iPAddressOrRange(Output.of(iPAddressOrRange));
        }

        /**
         * @param identifier A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.
         * 
         * @return builder
         * 
         */
        public Builder identifier(Output</* @Nullable */ String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param keyToSign The key to sign the account SAS token with.
         * 
         * @return builder
         * 
         */
        public Builder keyToSign(Output</* @Nullable */ String> keyToSign) {
            $.keyToSign = keyToSign;
            return this;
        }

        /**
         * @param keyToSign The key to sign the account SAS token with.
         * 
         * @return builder
         * 
         */
        public Builder keyToSign(@Nullable String keyToSign) {
            return keyToSign(Output.of(keyToSign));
        }

        /**
         * @param partitionKeyEnd The end of partition key.
         * 
         * @return builder
         * 
         */
        public Builder partitionKeyEnd(Output</* @Nullable */ String> partitionKeyEnd) {
            $.partitionKeyEnd = partitionKeyEnd;
            return this;
        }

        /**
         * @param partitionKeyEnd The end of partition key.
         * 
         * @return builder
         * 
         */
        public Builder partitionKeyEnd(@Nullable String partitionKeyEnd) {
            return partitionKeyEnd(Output.of(partitionKeyEnd));
        }

        /**
         * @param partitionKeyStart The start of partition key.
         * 
         * @return builder
         * 
         */
        public Builder partitionKeyStart(Output</* @Nullable */ String> partitionKeyStart) {
            $.partitionKeyStart = partitionKeyStart;
            return this;
        }

        /**
         * @param partitionKeyStart The start of partition key.
         * 
         * @return builder
         * 
         */
        public Builder partitionKeyStart(@Nullable String partitionKeyStart) {
            return partitionKeyStart(Output.of(partitionKeyStart));
        }

        /**
         * @param permissions The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).
         * 
         * @return builder
         * 
         */
        public Builder permissions(Output</* @Nullable */ Either<String,Permissions>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Either<String,Permissions> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).
         * 
         * @return builder
         * 
         */
        public Builder permissions(String permissions) {
            return permissions(Either.ofLeft(permissions));
        }

        /**
         * @param permissions The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).
         * 
         * @return builder
         * 
         */
        public Builder permissions(Permissions permissions) {
            return permissions(Either.ofRight(permissions));
        }

        /**
         * @param protocols The protocol permitted for a request made with the account SAS.
         * 
         * @return builder
         * 
         */
        public Builder protocols(Output</* @Nullable */ HttpProtocol> protocols) {
            $.protocols = protocols;
            return this;
        }

        /**
         * @param protocols The protocol permitted for a request made with the account SAS.
         * 
         * @return builder
         * 
         */
        public Builder protocols(@Nullable HttpProtocol protocols) {
            return protocols(Output.of(protocols));
        }

        /**
         * @param resource The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).
         * 
         * @return builder
         * 
         */
        public Builder resource(Output</* @Nullable */ Either<String,SignedResource>> resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param resource The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).
         * 
         * @return builder
         * 
         */
        public Builder resource(@Nullable Either<String,SignedResource> resource) {
            return resource(Output.of(resource));
        }

        /**
         * @param resource The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).
         * 
         * @return builder
         * 
         */
        public Builder resource(String resource) {
            return resource(Either.ofLeft(resource));
        }

        /**
         * @param resource The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).
         * 
         * @return builder
         * 
         */
        public Builder resource(SignedResource resource) {
            return resource(Either.ofRight(resource));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param rowKeyEnd The end of row key.
         * 
         * @return builder
         * 
         */
        public Builder rowKeyEnd(Output</* @Nullable */ String> rowKeyEnd) {
            $.rowKeyEnd = rowKeyEnd;
            return this;
        }

        /**
         * @param rowKeyEnd The end of row key.
         * 
         * @return builder
         * 
         */
        public Builder rowKeyEnd(@Nullable String rowKeyEnd) {
            return rowKeyEnd(Output.of(rowKeyEnd));
        }

        /**
         * @param rowKeyStart The start of row key.
         * 
         * @return builder
         * 
         */
        public Builder rowKeyStart(Output</* @Nullable */ String> rowKeyStart) {
            $.rowKeyStart = rowKeyStart;
            return this;
        }

        /**
         * @param rowKeyStart The start of row key.
         * 
         * @return builder
         * 
         */
        public Builder rowKeyStart(@Nullable String rowKeyStart) {
            return rowKeyStart(Output.of(rowKeyStart));
        }

        /**
         * @param sharedAccessExpiryTime The time at which the shared access signature becomes invalid.
         * 
         * @return builder
         * 
         */
        public Builder sharedAccessExpiryTime(Output</* @Nullable */ String> sharedAccessExpiryTime) {
            $.sharedAccessExpiryTime = sharedAccessExpiryTime;
            return this;
        }

        /**
         * @param sharedAccessExpiryTime The time at which the shared access signature becomes invalid.
         * 
         * @return builder
         * 
         */
        public Builder sharedAccessExpiryTime(@Nullable String sharedAccessExpiryTime) {
            return sharedAccessExpiryTime(Output.of(sharedAccessExpiryTime));
        }

        /**
         * @param sharedAccessStartTime The time at which the SAS becomes valid.
         * 
         * @return builder
         * 
         */
        public Builder sharedAccessStartTime(Output</* @Nullable */ String> sharedAccessStartTime) {
            $.sharedAccessStartTime = sharedAccessStartTime;
            return this;
        }

        /**
         * @param sharedAccessStartTime The time at which the SAS becomes valid.
         * 
         * @return builder
         * 
         */
        public Builder sharedAccessStartTime(@Nullable String sharedAccessStartTime) {
            return sharedAccessStartTime(Output.of(sharedAccessStartTime));
        }

        public ListStorageAccountServiceSASArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.canonicalizedResource = Objects.requireNonNull($.canonicalizedResource, "expected parameter 'canonicalizedResource' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
