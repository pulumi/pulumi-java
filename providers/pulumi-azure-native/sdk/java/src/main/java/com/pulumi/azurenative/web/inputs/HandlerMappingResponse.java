// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
 * For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
 * 
 */
public final class HandlerMappingResponse extends com.pulumi.resources.InvokeArgs {

    public static final HandlerMappingResponse Empty = new HandlerMappingResponse();

    /**
     * Command-line arguments to be passed to the script processor.
     * 
     */
    @Import(name="arguments")
    private @Nullable String arguments;

    /**
     * @return Command-line arguments to be passed to the script processor.
     * 
     */
    public Optional<String> arguments() {
        return Optional.ofNullable(this.arguments);
    }

    /**
     * Requests with this extension will be handled using the specified FastCGI application.
     * 
     */
    @Import(name="extension")
    private @Nullable String extension;

    /**
     * @return Requests with this extension will be handled using the specified FastCGI application.
     * 
     */
    public Optional<String> extension() {
        return Optional.ofNullable(this.extension);
    }

    /**
     * The absolute path to the FastCGI application.
     * 
     */
    @Import(name="scriptProcessor")
    private @Nullable String scriptProcessor;

    /**
     * @return The absolute path to the FastCGI application.
     * 
     */
    public Optional<String> scriptProcessor() {
        return Optional.ofNullable(this.scriptProcessor);
    }

    private HandlerMappingResponse() {}

    private HandlerMappingResponse(HandlerMappingResponse $) {
        this.arguments = $.arguments;
        this.extension = $.extension;
        this.scriptProcessor = $.scriptProcessor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HandlerMappingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HandlerMappingResponse $;

        public Builder() {
            $ = new HandlerMappingResponse();
        }

        public Builder(HandlerMappingResponse defaults) {
            $ = new HandlerMappingResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param arguments Command-line arguments to be passed to the script processor.
         * 
         * @return builder
         * 
         */
        public Builder arguments(@Nullable String arguments) {
            $.arguments = arguments;
            return this;
        }

        /**
         * @param extension Requests with this extension will be handled using the specified FastCGI application.
         * 
         * @return builder
         * 
         */
        public Builder extension(@Nullable String extension) {
            $.extension = extension;
            return this;
        }

        /**
         * @param scriptProcessor The absolute path to the FastCGI application.
         * 
         * @return builder
         * 
         */
        public Builder scriptProcessor(@Nullable String scriptProcessor) {
            $.scriptProcessor = scriptProcessor;
            return this;
        }

        public HandlerMappingResponse build() {
            return $;
        }
    }

}
