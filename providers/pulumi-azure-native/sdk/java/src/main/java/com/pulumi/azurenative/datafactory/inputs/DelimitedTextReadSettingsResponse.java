// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.TarGZipReadSettingsResponse;
import com.pulumi.azurenative.datafactory.inputs.TarReadSettingsResponse;
import com.pulumi.azurenative.datafactory.inputs.ZipDeflateReadSettingsResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Delimited text read settings.
 * 
 */
public final class DelimitedTextReadSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final DelimitedTextReadSettingsResponse Empty = new DelimitedTextReadSettingsResponse();

    /**
     * Compression settings.
     * 
     */
    @Import(name="compressionProperties")
      private final @Nullable Object compressionProperties;

    public Object compressionProperties() {
        return this.compressionProperties == null ? null : this.compressionProperties;
    }

    /**
     * Indicates the number of non-empty rows to skip when reading data from input files. Type: integer (or Expression with resultType integer).
     * 
     */
    @Import(name="skipLineCount")
      private final @Nullable Object skipLineCount;

    public Optional<Object> skipLineCount() {
        return this.skipLineCount == null ? Optional.empty() : Optional.ofNullable(this.skipLineCount);
    }

    /**
     * The read setting type.
     * Expected value is &#39;DelimitedTextReadSettings&#39;.
     * 
     */
    @Import(name="type", required=true)
      private final String type;

    public String type() {
        return this.type;
    }

    public DelimitedTextReadSettingsResponse(
        @Nullable Object compressionProperties,
        @Nullable Object skipLineCount,
        String type) {
        this.compressionProperties = compressionProperties;
        this.skipLineCount = skipLineCount;
        this.type = Codegen.stringProp("type").arg(type).require();
    }

    private DelimitedTextReadSettingsResponse() {
        this.compressionProperties = null;
        this.skipLineCount = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DelimitedTextReadSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Object compressionProperties;
        private @Nullable Object skipLineCount;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(DelimitedTextReadSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compressionProperties = defaults.compressionProperties;
    	      this.skipLineCount = defaults.skipLineCount;
    	      this.type = defaults.type;
        }

        public Builder compressionProperties(@Nullable Object compressionProperties) {
            this.compressionProperties = compressionProperties;
            return this;
        }
        public Builder skipLineCount(@Nullable Object skipLineCount) {
            this.skipLineCount = skipLineCount;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public DelimitedTextReadSettingsResponse build() {
            return new DelimitedTextReadSettingsResponse(compressionProperties, skipLineCount, type);
        }
    }
}
