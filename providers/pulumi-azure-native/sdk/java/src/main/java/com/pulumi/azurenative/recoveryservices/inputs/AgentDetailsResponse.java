// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.AgentDiskDetailsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Agent details.
 * 
 */
public final class AgentDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final AgentDetailsResponse Empty = new AgentDetailsResponse();

    /**
     * The Id of the agent running on the server.
     * 
     */
    @Import(name="agentId", required=true)
    private String agentId;

    public String agentId() {
        return this.agentId;
    }

    /**
     * The machine BIOS Id.
     * 
     */
    @Import(name="biosId", required=true)
    private String biosId;

    public String biosId() {
        return this.biosId;
    }

    /**
     * The details of agent disks.
     * 
     */
    @Import(name="disks", required=true)
    private List<AgentDiskDetailsResponse> disks;

    public List<AgentDiskDetailsResponse> disks() {
        return this.disks;
    }

    /**
     * The machine FQDN.
     * 
     */
    @Import(name="fqdn", required=true)
    private String fqdn;

    public String fqdn() {
        return this.fqdn;
    }

    /**
     * The Id of the machine to which the agent is registered.
     * 
     */
    @Import(name="machineId", required=true)
    private String machineId;

    public String machineId() {
        return this.machineId;
    }

    private AgentDetailsResponse() {}

    private AgentDetailsResponse(AgentDetailsResponse $) {
        this.agentId = $.agentId;
        this.biosId = $.biosId;
        this.disks = $.disks;
        this.fqdn = $.fqdn;
        this.machineId = $.machineId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentDetailsResponse $;

        public Builder() {
            $ = new AgentDetailsResponse();
        }

        public Builder(AgentDetailsResponse defaults) {
            $ = new AgentDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder agentId(String agentId) {
            $.agentId = agentId;
            return this;
        }

        public Builder biosId(String biosId) {
            $.biosId = biosId;
            return this;
        }

        public Builder disks(List<AgentDiskDetailsResponse> disks) {
            $.disks = disks;
            return this;
        }

        public Builder disks(AgentDiskDetailsResponse... disks) {
            return disks(List.of(disks));
        }

        public Builder fqdn(String fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        public Builder machineId(String machineId) {
            $.machineId = machineId;
            return this;
        }

        public AgentDetailsResponse build() {
            $.agentId = Objects.requireNonNull($.agentId, "expected parameter 'agentId' to be non-null");
            $.biosId = Objects.requireNonNull($.biosId, "expected parameter 'biosId' to be non-null");
            $.disks = Objects.requireNonNull($.disks, "expected parameter 'disks' to be non-null");
            $.fqdn = Objects.requireNonNull($.fqdn, "expected parameter 'fqdn' to be non-null");
            $.machineId = Objects.requireNonNull($.machineId, "expected parameter 'machineId' to be non-null");
            return $;
        }
    }

}
