// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationsmanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Solution properties supported by the OperationsManagement resource provider.
 * 
 */
public final class SolutionPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final SolutionPropertiesArgs Empty = new SolutionPropertiesArgs();

    /**
     * The azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.
     * 
     */
    @Import(name="containedResources")
    private @Nullable Output<List<String>> containedResources;

    /**
     * @return The azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.
     * 
     */
    public Optional<Output<List<String>>> containedResources() {
        return Optional.ofNullable(this.containedResources);
    }

    /**
     * The resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.
     * 
     */
    @Import(name="referencedResources")
    private @Nullable Output<List<String>> referencedResources;

    /**
     * @return The resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.
     * 
     */
    public Optional<Output<List<String>>> referencedResources() {
        return Optional.ofNullable(this.referencedResources);
    }

    /**
     * The azure resourceId for the workspace where the solution will be deployed/enabled.
     * 
     */
    @Import(name="workspaceResourceId", required=true)
    private Output<String> workspaceResourceId;

    /**
     * @return The azure resourceId for the workspace where the solution will be deployed/enabled.
     * 
     */
    public Output<String> workspaceResourceId() {
        return this.workspaceResourceId;
    }

    private SolutionPropertiesArgs() {}

    private SolutionPropertiesArgs(SolutionPropertiesArgs $) {
        this.containedResources = $.containedResources;
        this.referencedResources = $.referencedResources;
        this.workspaceResourceId = $.workspaceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SolutionPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SolutionPropertiesArgs $;

        public Builder() {
            $ = new SolutionPropertiesArgs();
        }

        public Builder(SolutionPropertiesArgs defaults) {
            $ = new SolutionPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containedResources The azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.
         * 
         * @return builder
         * 
         */
        public Builder containedResources(@Nullable Output<List<String>> containedResources) {
            $.containedResources = containedResources;
            return this;
        }

        /**
         * @param containedResources The azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.
         * 
         * @return builder
         * 
         */
        public Builder containedResources(List<String> containedResources) {
            return containedResources(Output.of(containedResources));
        }

        /**
         * @param containedResources The azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.
         * 
         * @return builder
         * 
         */
        public Builder containedResources(String... containedResources) {
            return containedResources(List.of(containedResources));
        }

        /**
         * @param referencedResources The resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.
         * 
         * @return builder
         * 
         */
        public Builder referencedResources(@Nullable Output<List<String>> referencedResources) {
            $.referencedResources = referencedResources;
            return this;
        }

        /**
         * @param referencedResources The resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.
         * 
         * @return builder
         * 
         */
        public Builder referencedResources(List<String> referencedResources) {
            return referencedResources(Output.of(referencedResources));
        }

        /**
         * @param referencedResources The resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.
         * 
         * @return builder
         * 
         */
        public Builder referencedResources(String... referencedResources) {
            return referencedResources(List.of(referencedResources));
        }

        /**
         * @param workspaceResourceId The azure resourceId for the workspace where the solution will be deployed/enabled.
         * 
         * @return builder
         * 
         */
        public Builder workspaceResourceId(Output<String> workspaceResourceId) {
            $.workspaceResourceId = workspaceResourceId;
            return this;
        }

        /**
         * @param workspaceResourceId The azure resourceId for the workspace where the solution will be deployed/enabled.
         * 
         * @return builder
         * 
         */
        public Builder workspaceResourceId(String workspaceResourceId) {
            return workspaceResourceId(Output.of(workspaceResourceId));
        }

        public SolutionPropertiesArgs build() {
            $.workspaceResourceId = Objects.requireNonNull($.workspaceResourceId, "expected parameter 'workspaceResourceId' to be non-null");
            return $;
        }
    }

}
