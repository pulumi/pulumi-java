// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
 * 
 */
public final class RoutingPreferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final RoutingPreferenceResponse Empty = new RoutingPreferenceResponse();

    /**
     * A boolean flag which indicates whether internet routing storage endpoints are to be published
     * 
     */
    @Import(name="publishInternetEndpoints")
    private @Nullable Boolean publishInternetEndpoints;

    /**
     * @return A boolean flag which indicates whether internet routing storage endpoints are to be published
     * 
     */
    public Optional<Boolean> publishInternetEndpoints() {
        return Optional.ofNullable(this.publishInternetEndpoints);
    }

    /**
     * A boolean flag which indicates whether microsoft routing storage endpoints are to be published
     * 
     */
    @Import(name="publishMicrosoftEndpoints")
    private @Nullable Boolean publishMicrosoftEndpoints;

    /**
     * @return A boolean flag which indicates whether microsoft routing storage endpoints are to be published
     * 
     */
    public Optional<Boolean> publishMicrosoftEndpoints() {
        return Optional.ofNullable(this.publishMicrosoftEndpoints);
    }

    /**
     * Routing Choice defines the kind of network routing opted by the user.
     * 
     */
    @Import(name="routingChoice")
    private @Nullable String routingChoice;

    /**
     * @return Routing Choice defines the kind of network routing opted by the user.
     * 
     */
    public Optional<String> routingChoice() {
        return Optional.ofNullable(this.routingChoice);
    }

    private RoutingPreferenceResponse() {}

    private RoutingPreferenceResponse(RoutingPreferenceResponse $) {
        this.publishInternetEndpoints = $.publishInternetEndpoints;
        this.publishMicrosoftEndpoints = $.publishMicrosoftEndpoints;
        this.routingChoice = $.routingChoice;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutingPreferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutingPreferenceResponse $;

        public Builder() {
            $ = new RoutingPreferenceResponse();
        }

        public Builder(RoutingPreferenceResponse defaults) {
            $ = new RoutingPreferenceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param publishInternetEndpoints A boolean flag which indicates whether internet routing storage endpoints are to be published
         * 
         * @return builder
         * 
         */
        public Builder publishInternetEndpoints(@Nullable Boolean publishInternetEndpoints) {
            $.publishInternetEndpoints = publishInternetEndpoints;
            return this;
        }

        /**
         * @param publishMicrosoftEndpoints A boolean flag which indicates whether microsoft routing storage endpoints are to be published
         * 
         * @return builder
         * 
         */
        public Builder publishMicrosoftEndpoints(@Nullable Boolean publishMicrosoftEndpoints) {
            $.publishMicrosoftEndpoints = publishMicrosoftEndpoints;
            return this;
        }

        /**
         * @param routingChoice Routing Choice defines the kind of network routing opted by the user.
         * 
         * @return builder
         * 
         */
        public Builder routingChoice(@Nullable String routingChoice) {
            $.routingChoice = routingChoice;
            return this;
        }

        public RoutingPreferenceResponse build() {
            return $;
        }
    }

}
