// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The TLS certificate properties of the connected registry login server.
 * 
 */
public final class TlsCertificatePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final TlsCertificatePropertiesResponse Empty = new TlsCertificatePropertiesResponse();

    /**
     * Indicates the location of the certificates.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return Indicates the location of the certificates.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * The type of certificate location.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of certificate location.
     * 
     */
    public String type() {
        return this.type;
    }

    private TlsCertificatePropertiesResponse() {}

    private TlsCertificatePropertiesResponse(TlsCertificatePropertiesResponse $) {
        this.location = $.location;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TlsCertificatePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TlsCertificatePropertiesResponse $;

        public Builder() {
            $ = new TlsCertificatePropertiesResponse();
        }

        public Builder(TlsCertificatePropertiesResponse defaults) {
            $ = new TlsCertificatePropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param location Indicates the location of the certificates.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param type The type of certificate location.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public TlsCertificatePropertiesResponse build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
