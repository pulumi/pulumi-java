// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SSIS embedded child package.
 * 
 */
public final class SSISChildPackageResponse extends com.pulumi.resources.InvokeArgs {

    public static final SSISChildPackageResponse Empty = new SSISChildPackageResponse();

    /**
     * Content for embedded child package. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="packageContent", required=true)
    private Object packageContent;

    /**
     * @return Content for embedded child package. Type: string (or Expression with resultType string).
     * 
     */
    public Object packageContent() {
        return this.packageContent;
    }

    /**
     * Last modified date for embedded child package.
     * 
     */
    @Import(name="packageLastModifiedDate")
    private @Nullable String packageLastModifiedDate;

    /**
     * @return Last modified date for embedded child package.
     * 
     */
    public Optional<String> packageLastModifiedDate() {
        return Optional.ofNullable(this.packageLastModifiedDate);
    }

    /**
     * Name for embedded child package.
     * 
     */
    @Import(name="packageName")
    private @Nullable String packageName;

    /**
     * @return Name for embedded child package.
     * 
     */
    public Optional<String> packageName() {
        return Optional.ofNullable(this.packageName);
    }

    /**
     * Path for embedded child package. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="packagePath", required=true)
    private Object packagePath;

    /**
     * @return Path for embedded child package. Type: string (or Expression with resultType string).
     * 
     */
    public Object packagePath() {
        return this.packagePath;
    }

    private SSISChildPackageResponse() {}

    private SSISChildPackageResponse(SSISChildPackageResponse $) {
        this.packageContent = $.packageContent;
        this.packageLastModifiedDate = $.packageLastModifiedDate;
        this.packageName = $.packageName;
        this.packagePath = $.packagePath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SSISChildPackageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SSISChildPackageResponse $;

        public Builder() {
            $ = new SSISChildPackageResponse();
        }

        public Builder(SSISChildPackageResponse defaults) {
            $ = new SSISChildPackageResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param packageContent Content for embedded child package. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder packageContent(Object packageContent) {
            $.packageContent = packageContent;
            return this;
        }

        /**
         * @param packageLastModifiedDate Last modified date for embedded child package.
         * 
         * @return builder
         * 
         */
        public Builder packageLastModifiedDate(@Nullable String packageLastModifiedDate) {
            $.packageLastModifiedDate = packageLastModifiedDate;
            return this;
        }

        /**
         * @param packageName Name for embedded child package.
         * 
         * @return builder
         * 
         */
        public Builder packageName(@Nullable String packageName) {
            $.packageName = packageName;
            return this;
        }

        /**
         * @param packagePath Path for embedded child package. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder packagePath(Object packagePath) {
            $.packagePath = packagePath;
            return this;
        }

        public SSISChildPackageResponse build() {
            $.packageContent = Objects.requireNonNull($.packageContent, "expected parameter 'packageContent' to be non-null");
            $.packagePath = Objects.requireNonNull($.packagePath, "expected parameter 'packagePath' to be non-null");
            return $;
        }
    }

}
