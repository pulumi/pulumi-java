// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Admin credentials for virtual machine
 * 
 */
public final class VirtualMachineSshCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineSshCredentialsArgs Empty = new VirtualMachineSshCredentialsArgs();

    /**
     * Password of admin account
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Password of admin account
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Private key data
     * 
     */
    @Import(name="privateKeyData")
    private @Nullable Output<String> privateKeyData;

    /**
     * @return Private key data
     * 
     */
    public Optional<Output<String>> privateKeyData() {
        return Optional.ofNullable(this.privateKeyData);
    }

    /**
     * Public key data
     * 
     */
    @Import(name="publicKeyData")
    private @Nullable Output<String> publicKeyData;

    /**
     * @return Public key data
     * 
     */
    public Optional<Output<String>> publicKeyData() {
        return Optional.ofNullable(this.publicKeyData);
    }

    /**
     * Username of admin account
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return Username of admin account
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private VirtualMachineSshCredentialsArgs() {}

    private VirtualMachineSshCredentialsArgs(VirtualMachineSshCredentialsArgs $) {
        this.password = $.password;
        this.privateKeyData = $.privateKeyData;
        this.publicKeyData = $.publicKeyData;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineSshCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineSshCredentialsArgs $;

        public Builder() {
            $ = new VirtualMachineSshCredentialsArgs();
        }

        public Builder(VirtualMachineSshCredentialsArgs defaults) {
            $ = new VirtualMachineSshCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param password Password of admin account
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Password of admin account
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param privateKeyData Private key data
         * 
         * @return builder
         * 
         */
        public Builder privateKeyData(@Nullable Output<String> privateKeyData) {
            $.privateKeyData = privateKeyData;
            return this;
        }

        /**
         * @param privateKeyData Private key data
         * 
         * @return builder
         * 
         */
        public Builder privateKeyData(String privateKeyData) {
            return privateKeyData(Output.of(privateKeyData));
        }

        /**
         * @param publicKeyData Public key data
         * 
         * @return builder
         * 
         */
        public Builder publicKeyData(@Nullable Output<String> publicKeyData) {
            $.publicKeyData = publicKeyData;
            return this;
        }

        /**
         * @param publicKeyData Public key data
         * 
         * @return builder
         * 
         */
        public Builder publicKeyData(String publicKeyData) {
            return publicKeyData(Output.of(publicKeyData));
        }

        /**
         * @param username Username of admin account
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Username of admin account
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public VirtualMachineSshCredentialsArgs build() {
            return $;
        }
    }

}
