// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.outputs;

import com.pulumi.azurenative.servicefabric.outputs.AzureActiveDirectoryResponse;
import com.pulumi.azurenative.servicefabric.outputs.ClientCertificateResponse;
import com.pulumi.azurenative.servicefabric.outputs.LoadBalancingRuleResponse;
import com.pulumi.azurenative.servicefabric.outputs.SettingsSectionDescriptionResponse;
import com.pulumi.azurenative.servicefabric.outputs.SkuResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedClusterResult {
    /**
     * @return client certificates for the cluster.
     * 
     */
    private final @Nullable List<String> addonFeatures;
    /**
     * @return vm admin user password.
     * 
     */
    private final @Nullable String adminPassword;
    /**
     * @return vm admin user name.
     * 
     */
    private final String adminUserName;
    /**
     * @return Azure active directory.
     * 
     */
    private final @Nullable AzureActiveDirectoryResponse azureActiveDirectory;
    /**
     * @return The port used for client connections to the cluster.
     * 
     */
    private final @Nullable Integer clientConnectionPort;
    /**
     * @return client certificates for the cluster.
     * 
     */
    private final @Nullable List<ClientCertificateResponse> clients;
    /**
     * @return The cluster certificate thumbprint used node to node communication.
     * 
     */
    private final String clusterCertificateThumbprint;
    /**
     * @return The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to &#39;Manual&#39;. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
     * 
     */
    private final @Nullable String clusterCodeVersion;
    /**
     * @return A service generated unique identifier for the cluster resource.
     * 
     */
    private final String clusterId;
    /**
     * @return The current state of the cluster.
     * 
     */
    private final String clusterState;
    /**
     * @return The cluster dns name.
     * 
     */
    private final String dnsName;
    /**
     * @return Azure resource etag.
     * 
     */
    private final String etag;
    /**
     * @return The list of custom fabric settings to configure the cluster.
     * 
     */
    private final @Nullable List<SettingsSectionDescriptionResponse> fabricSettings;
    /**
     * @return the cluster Fully qualified domain name.
     * 
     */
    private final String fqdn;
    /**
     * @return The port used for http connections to the cluster.
     * 
     */
    private final @Nullable Integer httpGatewayConnectionPort;
    /**
     * @return Azure resource identifier.
     * 
     */
    private final String id;
    /**
     * @return Describes load balancing rules.
     * 
     */
    private final @Nullable List<LoadBalancingRuleResponse> loadBalancingRules;
    /**
     * @return Azure resource location.
     * 
     */
    private final String location;
    /**
     * @return Azure resource name.
     * 
     */
    private final String name;
    /**
     * @return The provisioning state of the managed cluster resource.
     * 
     */
    private final String provisioningState;
    /**
     * @return The sku of the managed cluster
     * 
     */
    private final @Nullable SkuResponse sku;
    /**
     * @return Azure resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return Azure resource type.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetManagedClusterResult(
        @CustomType.Parameter("addonFeatures") @Nullable List<String> addonFeatures,
        @CustomType.Parameter("adminPassword") @Nullable String adminPassword,
        @CustomType.Parameter("adminUserName") String adminUserName,
        @CustomType.Parameter("azureActiveDirectory") @Nullable AzureActiveDirectoryResponse azureActiveDirectory,
        @CustomType.Parameter("clientConnectionPort") @Nullable Integer clientConnectionPort,
        @CustomType.Parameter("clients") @Nullable List<ClientCertificateResponse> clients,
        @CustomType.Parameter("clusterCertificateThumbprint") String clusterCertificateThumbprint,
        @CustomType.Parameter("clusterCodeVersion") @Nullable String clusterCodeVersion,
        @CustomType.Parameter("clusterId") String clusterId,
        @CustomType.Parameter("clusterState") String clusterState,
        @CustomType.Parameter("dnsName") String dnsName,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("fabricSettings") @Nullable List<SettingsSectionDescriptionResponse> fabricSettings,
        @CustomType.Parameter("fqdn") String fqdn,
        @CustomType.Parameter("httpGatewayConnectionPort") @Nullable Integer httpGatewayConnectionPort,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("loadBalancingRules") @Nullable List<LoadBalancingRuleResponse> loadBalancingRules,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("sku") @Nullable SkuResponse sku,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.addonFeatures = addonFeatures;
        this.adminPassword = adminPassword;
        this.adminUserName = adminUserName;
        this.azureActiveDirectory = azureActiveDirectory;
        this.clientConnectionPort = clientConnectionPort;
        this.clients = clients;
        this.clusterCertificateThumbprint = clusterCertificateThumbprint;
        this.clusterCodeVersion = clusterCodeVersion;
        this.clusterId = clusterId;
        this.clusterState = clusterState;
        this.dnsName = dnsName;
        this.etag = etag;
        this.fabricSettings = fabricSettings;
        this.fqdn = fqdn;
        this.httpGatewayConnectionPort = httpGatewayConnectionPort;
        this.id = id;
        this.loadBalancingRules = loadBalancingRules;
        this.location = location;
        this.name = name;
        this.provisioningState = provisioningState;
        this.sku = sku;
        this.tags = tags;
        this.type = type;
    }

    /**
     * @return client certificates for the cluster.
     * 
     */
    public List<String> addonFeatures() {
        return this.addonFeatures == null ? List.of() : this.addonFeatures;
    }
    /**
     * @return vm admin user password.
     * 
     */
    public Optional<String> adminPassword() {
        return Optional.ofNullable(this.adminPassword);
    }
    /**
     * @return vm admin user name.
     * 
     */
    public String adminUserName() {
        return this.adminUserName;
    }
    /**
     * @return Azure active directory.
     * 
     */
    public Optional<AzureActiveDirectoryResponse> azureActiveDirectory() {
        return Optional.ofNullable(this.azureActiveDirectory);
    }
    /**
     * @return The port used for client connections to the cluster.
     * 
     */
    public Optional<Integer> clientConnectionPort() {
        return Optional.ofNullable(this.clientConnectionPort);
    }
    /**
     * @return client certificates for the cluster.
     * 
     */
    public List<ClientCertificateResponse> clients() {
        return this.clients == null ? List.of() : this.clients;
    }
    /**
     * @return The cluster certificate thumbprint used node to node communication.
     * 
     */
    public String clusterCertificateThumbprint() {
        return this.clusterCertificateThumbprint;
    }
    /**
     * @return The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to &#39;Manual&#39;. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
     * 
     */
    public Optional<String> clusterCodeVersion() {
        return Optional.ofNullable(this.clusterCodeVersion);
    }
    /**
     * @return A service generated unique identifier for the cluster resource.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The current state of the cluster.
     * 
     */
    public String clusterState() {
        return this.clusterState;
    }
    /**
     * @return The cluster dns name.
     * 
     */
    public String dnsName() {
        return this.dnsName;
    }
    /**
     * @return Azure resource etag.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The list of custom fabric settings to configure the cluster.
     * 
     */
    public List<SettingsSectionDescriptionResponse> fabricSettings() {
        return this.fabricSettings == null ? List.of() : this.fabricSettings;
    }
    /**
     * @return the cluster Fully qualified domain name.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The port used for http connections to the cluster.
     * 
     */
    public Optional<Integer> httpGatewayConnectionPort() {
        return Optional.ofNullable(this.httpGatewayConnectionPort);
    }
    /**
     * @return Azure resource identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Describes load balancing rules.
     * 
     */
    public List<LoadBalancingRuleResponse> loadBalancingRules() {
        return this.loadBalancingRules == null ? List.of() : this.loadBalancingRules;
    }
    /**
     * @return Azure resource location.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Azure resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioning state of the managed cluster resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The sku of the managed cluster
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Azure resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Azure resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> addonFeatures;
        private @Nullable String adminPassword;
        private String adminUserName;
        private @Nullable AzureActiveDirectoryResponse azureActiveDirectory;
        private @Nullable Integer clientConnectionPort;
        private @Nullable List<ClientCertificateResponse> clients;
        private String clusterCertificateThumbprint;
        private @Nullable String clusterCodeVersion;
        private String clusterId;
        private String clusterState;
        private String dnsName;
        private String etag;
        private @Nullable List<SettingsSectionDescriptionResponse> fabricSettings;
        private String fqdn;
        private @Nullable Integer httpGatewayConnectionPort;
        private String id;
        private @Nullable List<LoadBalancingRuleResponse> loadBalancingRules;
        private String location;
        private String name;
        private String provisioningState;
        private @Nullable SkuResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonFeatures = defaults.addonFeatures;
    	      this.adminPassword = defaults.adminPassword;
    	      this.adminUserName = defaults.adminUserName;
    	      this.azureActiveDirectory = defaults.azureActiveDirectory;
    	      this.clientConnectionPort = defaults.clientConnectionPort;
    	      this.clients = defaults.clients;
    	      this.clusterCertificateThumbprint = defaults.clusterCertificateThumbprint;
    	      this.clusterCodeVersion = defaults.clusterCodeVersion;
    	      this.clusterId = defaults.clusterId;
    	      this.clusterState = defaults.clusterState;
    	      this.dnsName = defaults.dnsName;
    	      this.etag = defaults.etag;
    	      this.fabricSettings = defaults.fabricSettings;
    	      this.fqdn = defaults.fqdn;
    	      this.httpGatewayConnectionPort = defaults.httpGatewayConnectionPort;
    	      this.id = defaults.id;
    	      this.loadBalancingRules = defaults.loadBalancingRules;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder addonFeatures(@Nullable List<String> addonFeatures) {
            this.addonFeatures = addonFeatures;
            return this;
        }
        public Builder addonFeatures(String... addonFeatures) {
            return addonFeatures(List.of(addonFeatures));
        }
        public Builder adminPassword(@Nullable String adminPassword) {
            this.adminPassword = adminPassword;
            return this;
        }
        public Builder adminUserName(String adminUserName) {
            this.adminUserName = Objects.requireNonNull(adminUserName);
            return this;
        }
        public Builder azureActiveDirectory(@Nullable AzureActiveDirectoryResponse azureActiveDirectory) {
            this.azureActiveDirectory = azureActiveDirectory;
            return this;
        }
        public Builder clientConnectionPort(@Nullable Integer clientConnectionPort) {
            this.clientConnectionPort = clientConnectionPort;
            return this;
        }
        public Builder clients(@Nullable List<ClientCertificateResponse> clients) {
            this.clients = clients;
            return this;
        }
        public Builder clients(ClientCertificateResponse... clients) {
            return clients(List.of(clients));
        }
        public Builder clusterCertificateThumbprint(String clusterCertificateThumbprint) {
            this.clusterCertificateThumbprint = Objects.requireNonNull(clusterCertificateThumbprint);
            return this;
        }
        public Builder clusterCodeVersion(@Nullable String clusterCodeVersion) {
            this.clusterCodeVersion = clusterCodeVersion;
            return this;
        }
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        public Builder clusterState(String clusterState) {
            this.clusterState = Objects.requireNonNull(clusterState);
            return this;
        }
        public Builder dnsName(String dnsName) {
            this.dnsName = Objects.requireNonNull(dnsName);
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder fabricSettings(@Nullable List<SettingsSectionDescriptionResponse> fabricSettings) {
            this.fabricSettings = fabricSettings;
            return this;
        }
        public Builder fabricSettings(SettingsSectionDescriptionResponse... fabricSettings) {
            return fabricSettings(List.of(fabricSettings));
        }
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        public Builder httpGatewayConnectionPort(@Nullable Integer httpGatewayConnectionPort) {
            this.httpGatewayConnectionPort = httpGatewayConnectionPort;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder loadBalancingRules(@Nullable List<LoadBalancingRuleResponse> loadBalancingRules) {
            this.loadBalancingRules = loadBalancingRules;
            return this;
        }
        public Builder loadBalancingRules(LoadBalancingRuleResponse... loadBalancingRules) {
            return loadBalancingRules(List.of(loadBalancingRules));
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetManagedClusterResult build() {
            return new GetManagedClusterResult(addonFeatures, adminPassword, adminUserName, azureActiveDirectory, clientConnectionPort, clients, clusterCertificateThumbprint, clusterCodeVersion, clusterId, clusterState, dnsName, etag, fabricSettings, fqdn, httpGatewayConnectionPort, id, loadBalancingRules, location, name, provisioningState, sku, tags, type);
        }
    }
}
