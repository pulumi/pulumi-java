// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.elastic.inputs;

import com.pulumi.azurenative.elastic.inputs.CompanyInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * User Information to be passed to partners.
 * 
 */
public final class UserInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserInfoArgs Empty = new UserInfoArgs();

    /**
     * Company information of the user to be passed to partners.
     * 
     */
    @Import(name="companyInfo")
    private @Nullable Output<CompanyInfoArgs> companyInfo;

    public Optional<Output<CompanyInfoArgs>> companyInfo() {
        return Optional.ofNullable(this.companyInfo);
    }

    /**
     * Company name of the user
     * 
     */
    @Import(name="companyName")
    private @Nullable Output<String> companyName;

    public Optional<Output<String>> companyName() {
        return Optional.ofNullable(this.companyName);
    }

    /**
     * Email of the user used by Elastic for contacting them if needed
     * 
     */
    @Import(name="emailAddress")
    private @Nullable Output<String> emailAddress;

    public Optional<Output<String>> emailAddress() {
        return Optional.ofNullable(this.emailAddress);
    }

    /**
     * First name of the user
     * 
     */
    @Import(name="firstName")
    private @Nullable Output<String> firstName;

    public Optional<Output<String>> firstName() {
        return Optional.ofNullable(this.firstName);
    }

    /**
     * Last name of the user
     * 
     */
    @Import(name="lastName")
    private @Nullable Output<String> lastName;

    public Optional<Output<String>> lastName() {
        return Optional.ofNullable(this.lastName);
    }

    private UserInfoArgs() {}

    private UserInfoArgs(UserInfoArgs $) {
        this.companyInfo = $.companyInfo;
        this.companyName = $.companyName;
        this.emailAddress = $.emailAddress;
        this.firstName = $.firstName;
        this.lastName = $.lastName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserInfoArgs $;

        public Builder() {
            $ = new UserInfoArgs();
        }

        public Builder(UserInfoArgs defaults) {
            $ = new UserInfoArgs(Objects.requireNonNull(defaults));
        }

        public Builder companyInfo(@Nullable Output<CompanyInfoArgs> companyInfo) {
            $.companyInfo = companyInfo;
            return this;
        }

        public Builder companyInfo(CompanyInfoArgs companyInfo) {
            return companyInfo(Output.of(companyInfo));
        }

        public Builder companyName(@Nullable Output<String> companyName) {
            $.companyName = companyName;
            return this;
        }

        public Builder companyName(String companyName) {
            return companyName(Output.of(companyName));
        }

        public Builder emailAddress(@Nullable Output<String> emailAddress) {
            $.emailAddress = emailAddress;
            return this;
        }

        public Builder emailAddress(String emailAddress) {
            return emailAddress(Output.of(emailAddress));
        }

        public Builder firstName(@Nullable Output<String> firstName) {
            $.firstName = firstName;
            return this;
        }

        public Builder firstName(String firstName) {
            return firstName(Output.of(firstName));
        }

        public Builder lastName(@Nullable Output<String> lastName) {
            $.lastName = lastName;
            return this;
        }

        public Builder lastName(String lastName) {
            return lastName(Output.of(lastName));
        }

        public UserInfoArgs build() {
            return $;
        }
    }

}
