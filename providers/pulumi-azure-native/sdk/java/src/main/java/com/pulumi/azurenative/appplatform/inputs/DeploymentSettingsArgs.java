// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.azurenative.appplatform.enums.RuntimeVersion;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Deployment settings payload
 * 
 */
public final class DeploymentSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSettingsArgs Empty = new DeploymentSettingsArgs();

    /**
     * Required CPU, basic tier should be 1, standard tier should be in range (1, 4)
     * 
     */
    @Import(name="cpu")
      private final @Nullable Output<Integer> cpu;

    public Output<Integer> cpu() {
        return this.cpu == null ? Codegen.empty() : this.cpu;
    }

    /**
     * Collection of environment variables
     * 
     */
    @Import(name="environmentVariables")
      private final @Nullable Output<Map<String,String>> environmentVariables;

    public Output<Map<String,String>> environmentVariables() {
        return this.environmentVariables == null ? Codegen.empty() : this.environmentVariables;
    }

    /**
     * JVM parameter
     * 
     */
    @Import(name="jvmOptions")
      private final @Nullable Output<String> jvmOptions;

    public Output<String> jvmOptions() {
        return this.jvmOptions == null ? Codegen.empty() : this.jvmOptions;
    }

    /**
     * Required Memory size in GB, basic tier should be in range (1, 2), standard tier should be in range (1, 8)
     * 
     */
    @Import(name="memoryInGB")
      private final @Nullable Output<Integer> memoryInGB;

    public Output<Integer> memoryInGB() {
        return this.memoryInGB == null ? Codegen.empty() : this.memoryInGB;
    }

    /**
     * The path to the .NET executable relative to zip root
     * 
     */
    @Import(name="netCoreMainEntryPath")
      private final @Nullable Output<String> netCoreMainEntryPath;

    public Output<String> netCoreMainEntryPath() {
        return this.netCoreMainEntryPath == null ? Codegen.empty() : this.netCoreMainEntryPath;
    }

    /**
     * Runtime version
     * 
     */
    @Import(name="runtimeVersion")
      private final @Nullable Output<Either<String,RuntimeVersion>> runtimeVersion;

    public Output<Either<String,RuntimeVersion>> runtimeVersion() {
        return this.runtimeVersion == null ? Codegen.empty() : this.runtimeVersion;
    }

    public DeploymentSettingsArgs(
        @Nullable Output<Integer> cpu,
        @Nullable Output<Map<String,String>> environmentVariables,
        @Nullable Output<String> jvmOptions,
        @Nullable Output<Integer> memoryInGB,
        @Nullable Output<String> netCoreMainEntryPath,
        @Nullable Output<Either<String,RuntimeVersion>> runtimeVersion) {
        this.cpu = cpu == null ? Codegen.ofNullable(1) : cpu;
        this.environmentVariables = environmentVariables;
        this.jvmOptions = jvmOptions;
        this.memoryInGB = memoryInGB == null ? Codegen.ofNullable(1) : memoryInGB;
        this.netCoreMainEntryPath = netCoreMainEntryPath;
        this.runtimeVersion = runtimeVersion == null ? Output.ofLeft("Java_8") : runtimeVersion;
    }

    private DeploymentSettingsArgs() {
        this.cpu = Codegen.empty();
        this.environmentVariables = Codegen.empty();
        this.jvmOptions = Codegen.empty();
        this.memoryInGB = Codegen.empty();
        this.netCoreMainEntryPath = Codegen.empty();
        this.runtimeVersion = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> cpu;
        private @Nullable Output<Map<String,String>> environmentVariables;
        private @Nullable Output<String> jvmOptions;
        private @Nullable Output<Integer> memoryInGB;
        private @Nullable Output<String> netCoreMainEntryPath;
        private @Nullable Output<Either<String,RuntimeVersion>> runtimeVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpu = defaults.cpu;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.jvmOptions = defaults.jvmOptions;
    	      this.memoryInGB = defaults.memoryInGB;
    	      this.netCoreMainEntryPath = defaults.netCoreMainEntryPath;
    	      this.runtimeVersion = defaults.runtimeVersion;
        }

        public Builder cpu(@Nullable Output<Integer> cpu) {
            this.cpu = cpu;
            return this;
        }
        public Builder cpu(@Nullable Integer cpu) {
            this.cpu = Codegen.ofNullable(cpu);
            return this;
        }
        public Builder environmentVariables(@Nullable Output<Map<String,String>> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }
        public Builder environmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = Codegen.ofNullable(environmentVariables);
            return this;
        }
        public Builder jvmOptions(@Nullable Output<String> jvmOptions) {
            this.jvmOptions = jvmOptions;
            return this;
        }
        public Builder jvmOptions(@Nullable String jvmOptions) {
            this.jvmOptions = Codegen.ofNullable(jvmOptions);
            return this;
        }
        public Builder memoryInGB(@Nullable Output<Integer> memoryInGB) {
            this.memoryInGB = memoryInGB;
            return this;
        }
        public Builder memoryInGB(@Nullable Integer memoryInGB) {
            this.memoryInGB = Codegen.ofNullable(memoryInGB);
            return this;
        }
        public Builder netCoreMainEntryPath(@Nullable Output<String> netCoreMainEntryPath) {
            this.netCoreMainEntryPath = netCoreMainEntryPath;
            return this;
        }
        public Builder netCoreMainEntryPath(@Nullable String netCoreMainEntryPath) {
            this.netCoreMainEntryPath = Codegen.ofNullable(netCoreMainEntryPath);
            return this;
        }
        public Builder runtimeVersion(@Nullable Output<Either<String,RuntimeVersion>> runtimeVersion) {
            this.runtimeVersion = runtimeVersion;
            return this;
        }
        public Builder runtimeVersion(@Nullable Either<String,RuntimeVersion> runtimeVersion) {
            this.runtimeVersion = Codegen.ofNullable(runtimeVersion);
            return this;
        }        public DeploymentSettingsArgs build() {
            return new DeploymentSettingsArgs(cpu, environmentVariables, jvmOptions, memoryInGB, netCoreMainEntryPath, runtimeVersion);
        }
    }
}
