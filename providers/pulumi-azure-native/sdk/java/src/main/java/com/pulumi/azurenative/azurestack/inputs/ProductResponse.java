// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurestack.inputs;

import com.pulumi.azurenative.azurestack.inputs.CompatibilityResponse;
import com.pulumi.azurenative.azurestack.inputs.IconUrisResponse;
import com.pulumi.azurenative.azurestack.inputs.ProductLinkResponse;
import com.pulumi.azurenative.azurestack.inputs.ProductPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Product information.
 * 
 */
public final class ProductResponse extends com.pulumi.resources.InvokeArgs {

    public static final ProductResponse Empty = new ProductResponse();

    /**
     * The part number used for billing purposes.
     * 
     */
    @Import(name="billingPartNumber")
    private @Nullable String billingPartNumber;

    public Optional<String> billingPartNumber() {
        return Optional.ofNullable(this.billingPartNumber);
    }

    /**
     * Product compatibility with current device.
     * 
     */
    @Import(name="compatibility")
    private @Nullable CompatibilityResponse compatibility;

    public Optional<CompatibilityResponse> compatibility() {
        return Optional.ofNullable(this.compatibility);
    }

    /**
     * The description of the product.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name of the product.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The entity tag used for optimistic concurrency when modifying the resource.
     * 
     */
    @Import(name="etag")
    private @Nullable String etag;

    public Optional<String> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The identifier of the gallery item corresponding to the product.
     * 
     */
    @Import(name="galleryItemIdentity")
    private @Nullable String galleryItemIdentity;

    public Optional<String> galleryItemIdentity() {
        return Optional.ofNullable(this.galleryItemIdentity);
    }

    /**
     * Additional links available for this product.
     * 
     */
    @Import(name="iconUris")
    private @Nullable IconUrisResponse iconUris;

    public Optional<IconUrisResponse> iconUris() {
        return Optional.ofNullable(this.iconUris);
    }

    /**
     * ID of the resource.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * The legal terms.
     * 
     */
    @Import(name="legalTerms")
    private @Nullable String legalTerms;

    public Optional<String> legalTerms() {
        return Optional.ofNullable(this.legalTerms);
    }

    /**
     * Additional links available for this product.
     * 
     */
    @Import(name="links")
    private @Nullable List<ProductLinkResponse> links;

    public Optional<List<ProductLinkResponse>> links() {
        return Optional.ofNullable(this.links);
    }

    /**
     * Name of the resource.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * The offer representing the product.
     * 
     */
    @Import(name="offer")
    private @Nullable String offer;

    public Optional<String> offer() {
        return Optional.ofNullable(this.offer);
    }

    /**
     * The version of the product offer.
     * 
     */
    @Import(name="offerVersion")
    private @Nullable String offerVersion;

    public Optional<String> offerVersion() {
        return Optional.ofNullable(this.offerVersion);
    }

    /**
     * The length of product content.
     * 
     */
    @Import(name="payloadLength")
    private @Nullable Double payloadLength;

    public Optional<Double> payloadLength() {
        return Optional.ofNullable(this.payloadLength);
    }

    /**
     * The privacy policy.
     * 
     */
    @Import(name="privacyPolicy")
    private @Nullable String privacyPolicy;

    public Optional<String> privacyPolicy() {
        return Optional.ofNullable(this.privacyPolicy);
    }

    /**
     * The kind of the product (virtualMachine or virtualMachineExtension)
     * 
     */
    @Import(name="productKind")
    private @Nullable String productKind;

    public Optional<String> productKind() {
        return Optional.ofNullable(this.productKind);
    }

    /**
     * Additional properties for the product.
     * 
     */
    @Import(name="productProperties")
    private @Nullable ProductPropertiesResponse productProperties;

    public Optional<ProductPropertiesResponse> productProperties() {
        return Optional.ofNullable(this.productProperties);
    }

    /**
     * The user-friendly name of the product publisher.
     * 
     */
    @Import(name="publisherDisplayName")
    private @Nullable String publisherDisplayName;

    public Optional<String> publisherDisplayName() {
        return Optional.ofNullable(this.publisherDisplayName);
    }

    /**
     * Publisher identifier.
     * 
     */
    @Import(name="publisherIdentifier")
    private @Nullable String publisherIdentifier;

    public Optional<String> publisherIdentifier() {
        return Optional.ofNullable(this.publisherIdentifier);
    }

    /**
     * The product SKU.
     * 
     */
    @Import(name="sku")
    private @Nullable String sku;

    public Optional<String> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Type of Resource.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    /**
     * The type of the Virtual Machine Extension.
     * 
     */
    @Import(name="vmExtensionType")
    private @Nullable String vmExtensionType;

    public Optional<String> vmExtensionType() {
        return Optional.ofNullable(this.vmExtensionType);
    }

    private ProductResponse() {}

    private ProductResponse(ProductResponse $) {
        this.billingPartNumber = $.billingPartNumber;
        this.compatibility = $.compatibility;
        this.description = $.description;
        this.displayName = $.displayName;
        this.etag = $.etag;
        this.galleryItemIdentity = $.galleryItemIdentity;
        this.iconUris = $.iconUris;
        this.id = $.id;
        this.legalTerms = $.legalTerms;
        this.links = $.links;
        this.name = $.name;
        this.offer = $.offer;
        this.offerVersion = $.offerVersion;
        this.payloadLength = $.payloadLength;
        this.privacyPolicy = $.privacyPolicy;
        this.productKind = $.productKind;
        this.productProperties = $.productProperties;
        this.publisherDisplayName = $.publisherDisplayName;
        this.publisherIdentifier = $.publisherIdentifier;
        this.sku = $.sku;
        this.type = $.type;
        this.vmExtensionType = $.vmExtensionType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProductResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProductResponse $;

        public Builder() {
            $ = new ProductResponse();
        }

        public Builder(ProductResponse defaults) {
            $ = new ProductResponse(Objects.requireNonNull(defaults));
        }

        public Builder billingPartNumber(@Nullable String billingPartNumber) {
            $.billingPartNumber = billingPartNumber;
            return this;
        }

        public Builder compatibility(@Nullable CompatibilityResponse compatibility) {
            $.compatibility = compatibility;
            return this;
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder etag(@Nullable String etag) {
            $.etag = etag;
            return this;
        }

        public Builder galleryItemIdentity(@Nullable String galleryItemIdentity) {
            $.galleryItemIdentity = galleryItemIdentity;
            return this;
        }

        public Builder iconUris(@Nullable IconUrisResponse iconUris) {
            $.iconUris = iconUris;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder legalTerms(@Nullable String legalTerms) {
            $.legalTerms = legalTerms;
            return this;
        }

        public Builder links(@Nullable List<ProductLinkResponse> links) {
            $.links = links;
            return this;
        }

        public Builder links(ProductLinkResponse... links) {
            return links(List.of(links));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder offer(@Nullable String offer) {
            $.offer = offer;
            return this;
        }

        public Builder offerVersion(@Nullable String offerVersion) {
            $.offerVersion = offerVersion;
            return this;
        }

        public Builder payloadLength(@Nullable Double payloadLength) {
            $.payloadLength = payloadLength;
            return this;
        }

        public Builder privacyPolicy(@Nullable String privacyPolicy) {
            $.privacyPolicy = privacyPolicy;
            return this;
        }

        public Builder productKind(@Nullable String productKind) {
            $.productKind = productKind;
            return this;
        }

        public Builder productProperties(@Nullable ProductPropertiesResponse productProperties) {
            $.productProperties = productProperties;
            return this;
        }

        public Builder publisherDisplayName(@Nullable String publisherDisplayName) {
            $.publisherDisplayName = publisherDisplayName;
            return this;
        }

        public Builder publisherIdentifier(@Nullable String publisherIdentifier) {
            $.publisherIdentifier = publisherIdentifier;
            return this;
        }

        public Builder sku(@Nullable String sku) {
            $.sku = sku;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder vmExtensionType(@Nullable String vmExtensionType) {
            $.vmExtensionType = vmExtensionType;
            return this;
        }

        public ProductResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
