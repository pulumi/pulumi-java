// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.azurenative.appplatform.inputs.BuildpackBindingLaunchPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of a buildpack binding
 * 
 */
public final class BuildpackBindingPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final BuildpackBindingPropertiesResponse Empty = new BuildpackBindingPropertiesResponse();

    /**
     * Buildpack Binding Type
     * 
     */
    @Import(name="bindingType")
    private @Nullable String bindingType;

    /**
     * @return Buildpack Binding Type
     * 
     */
    public Optional<String> bindingType() {
        return Optional.ofNullable(this.bindingType);
    }

    /**
     * The object describes the buildpack binding launch properties
     * 
     */
    @Import(name="launchProperties")
    private @Nullable BuildpackBindingLaunchPropertiesResponse launchProperties;

    /**
     * @return The object describes the buildpack binding launch properties
     * 
     */
    public Optional<BuildpackBindingLaunchPropertiesResponse> launchProperties() {
        return Optional.ofNullable(this.launchProperties);
    }

    /**
     * State of the Buildpack Binding.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return State of the Buildpack Binding.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    private BuildpackBindingPropertiesResponse() {}

    private BuildpackBindingPropertiesResponse(BuildpackBindingPropertiesResponse $) {
        this.bindingType = $.bindingType;
        this.launchProperties = $.launchProperties;
        this.provisioningState = $.provisioningState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildpackBindingPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildpackBindingPropertiesResponse $;

        public Builder() {
            $ = new BuildpackBindingPropertiesResponse();
        }

        public Builder(BuildpackBindingPropertiesResponse defaults) {
            $ = new BuildpackBindingPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param bindingType Buildpack Binding Type
         * 
         * @return builder
         * 
         */
        public Builder bindingType(@Nullable String bindingType) {
            $.bindingType = bindingType;
            return this;
        }

        /**
         * @param launchProperties The object describes the buildpack binding launch properties
         * 
         * @return builder
         * 
         */
        public Builder launchProperties(@Nullable BuildpackBindingLaunchPropertiesResponse launchProperties) {
            $.launchProperties = launchProperties;
            return this;
        }

        /**
         * @param provisioningState State of the Buildpack Binding.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public BuildpackBindingPropertiesResponse build() {
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
