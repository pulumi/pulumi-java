// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetBuildServiceBuildResultLogArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBuildServiceBuildResultLogArgs Empty = new GetBuildServiceBuildResultLogArgs();

    /**
     * The name of the build resource.
     * 
     */
    @Import(name="buildName", required=true)
    private Output<String> buildName;

    /**
     * @return The name of the build resource.
     * 
     */
    public Output<String> buildName() {
        return this.buildName;
    }

    /**
     * The name of the build result resource.
     * 
     */
    @Import(name="buildResultName", required=true)
    private Output<String> buildResultName;

    /**
     * @return The name of the build result resource.
     * 
     */
    public Output<String> buildResultName() {
        return this.buildResultName;
    }

    /**
     * The name of the build service resource.
     * 
     */
    @Import(name="buildServiceName", required=true)
    private Output<String> buildServiceName;

    /**
     * @return The name of the build service resource.
     * 
     */
    public Output<String> buildServiceName() {
        return this.buildServiceName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Service resource.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the Service resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private GetBuildServiceBuildResultLogArgs() {}

    private GetBuildServiceBuildResultLogArgs(GetBuildServiceBuildResultLogArgs $) {
        this.buildName = $.buildName;
        this.buildResultName = $.buildResultName;
        this.buildServiceName = $.buildServiceName;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBuildServiceBuildResultLogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBuildServiceBuildResultLogArgs $;

        public Builder() {
            $ = new GetBuildServiceBuildResultLogArgs();
        }

        public Builder(GetBuildServiceBuildResultLogArgs defaults) {
            $ = new GetBuildServiceBuildResultLogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param buildName The name of the build resource.
         * 
         * @return builder
         * 
         */
        public Builder buildName(Output<String> buildName) {
            $.buildName = buildName;
            return this;
        }

        /**
         * @param buildName The name of the build resource.
         * 
         * @return builder
         * 
         */
        public Builder buildName(String buildName) {
            return buildName(Output.of(buildName));
        }

        /**
         * @param buildResultName The name of the build result resource.
         * 
         * @return builder
         * 
         */
        public Builder buildResultName(Output<String> buildResultName) {
            $.buildResultName = buildResultName;
            return this;
        }

        /**
         * @param buildResultName The name of the build result resource.
         * 
         * @return builder
         * 
         */
        public Builder buildResultName(String buildResultName) {
            return buildResultName(Output.of(buildResultName));
        }

        /**
         * @param buildServiceName The name of the build service resource.
         * 
         * @return builder
         * 
         */
        public Builder buildServiceName(Output<String> buildServiceName) {
            $.buildServiceName = buildServiceName;
            return this;
        }

        /**
         * @param buildServiceName The name of the build service resource.
         * 
         * @return builder
         * 
         */
        public Builder buildServiceName(String buildServiceName) {
            return buildServiceName(Output.of(buildServiceName));
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serviceName The name of the Service resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the Service resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public GetBuildServiceBuildResultLogArgs build() {
            $.buildName = Objects.requireNonNull($.buildName, "expected parameter 'buildName' to be non-null");
            $.buildResultName = Objects.requireNonNull($.buildResultName, "expected parameter 'buildResultName' to be non-null");
            $.buildServiceName = Objects.requireNonNull($.buildServiceName, "expected parameter 'buildServiceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
