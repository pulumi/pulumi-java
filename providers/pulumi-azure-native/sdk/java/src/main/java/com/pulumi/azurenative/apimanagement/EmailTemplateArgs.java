// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement;

import com.pulumi.azurenative.apimanagement.inputs.EmailTemplateParametersContractPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailTemplateArgs Empty = new EmailTemplateArgs();

    /**
     * Email Template Body. This should be a valid XDocument
     * 
     */
    @Import(name="body")
    private @Nullable Output<String> body;

    /**
     * @return Email Template Body. This should be a valid XDocument
     * 
     */
    public Optional<Output<String>> body() {
        return Optional.ofNullable(this.body);
    }

    /**
     * Description of the Email Template.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the Email Template.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Email Template Parameter values.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<EmailTemplateParametersContractPropertiesArgs>> parameters;

    /**
     * @return Email Template Parameter values.
     * 
     */
    public Optional<Output<List<EmailTemplateParametersContractPropertiesArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the API Management service.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Subject of the Template.
     * 
     */
    @Import(name="subject")
    private @Nullable Output<String> subject;

    /**
     * @return Subject of the Template.
     * 
     */
    public Optional<Output<String>> subject() {
        return Optional.ofNullable(this.subject);
    }

    /**
     * Email Template Name Identifier.
     * 
     */
    @Import(name="templateName")
    private @Nullable Output<String> templateName;

    /**
     * @return Email Template Name Identifier.
     * 
     */
    public Optional<Output<String>> templateName() {
        return Optional.ofNullable(this.templateName);
    }

    /**
     * Title of the Template.
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    /**
     * @return Title of the Template.
     * 
     */
    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    private EmailTemplateArgs() {}

    private EmailTemplateArgs(EmailTemplateArgs $) {
        this.body = $.body;
        this.description = $.description;
        this.parameters = $.parameters;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceName = $.serviceName;
        this.subject = $.subject;
        this.templateName = $.templateName;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailTemplateArgs $;

        public Builder() {
            $ = new EmailTemplateArgs();
        }

        public Builder(EmailTemplateArgs defaults) {
            $ = new EmailTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param body Email Template Body. This should be a valid XDocument
         * 
         * @return builder
         * 
         */
        public Builder body(@Nullable Output<String> body) {
            $.body = body;
            return this;
        }

        /**
         * @param body Email Template Body. This should be a valid XDocument
         * 
         * @return builder
         * 
         */
        public Builder body(String body) {
            return body(Output.of(body));
        }

        /**
         * @param description Description of the Email Template.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the Email Template.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param parameters Email Template Parameter values.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<EmailTemplateParametersContractPropertiesArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Email Template Parameter values.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<EmailTemplateParametersContractPropertiesArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters Email Template Parameter values.
         * 
         * @return builder
         * 
         */
        public Builder parameters(EmailTemplateParametersContractPropertiesArgs... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serviceName The name of the API Management service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the API Management service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param subject Subject of the Template.
         * 
         * @return builder
         * 
         */
        public Builder subject(@Nullable Output<String> subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param subject Subject of the Template.
         * 
         * @return builder
         * 
         */
        public Builder subject(String subject) {
            return subject(Output.of(subject));
        }

        /**
         * @param templateName Email Template Name Identifier.
         * 
         * @return builder
         * 
         */
        public Builder templateName(@Nullable Output<String> templateName) {
            $.templateName = templateName;
            return this;
        }

        /**
         * @param templateName Email Template Name Identifier.
         * 
         * @return builder
         * 
         */
        public Builder templateName(String templateName) {
            return templateName(Output.of(templateName));
        }

        /**
         * @param title Title of the Template.
         * 
         * @return builder
         * 
         */
        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title Title of the Template.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        public EmailTemplateArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
