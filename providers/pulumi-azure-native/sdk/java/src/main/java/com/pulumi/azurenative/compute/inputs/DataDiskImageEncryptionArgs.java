// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Contains encryption settings for a data disk image.
 * 
 */
public final class DataDiskImageEncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataDiskImageEncryptionArgs Empty = new DataDiskImageEncryptionArgs();

    /**
     * A relative URI containing the resource ID of the disk encryption set.
     * 
     */
    @Import(name="diskEncryptionSetId")
      private final @Nullable Output<String> diskEncryptionSetId;

    public Output<String> diskEncryptionSetId() {
        return this.diskEncryptionSetId == null ? Codegen.empty() : this.diskEncryptionSetId;
    }

    /**
     * This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
     * 
     */
    @Import(name="lun", required=true)
      private final Output<Integer> lun;

    public Output<Integer> lun() {
        return this.lun;
    }

    public DataDiskImageEncryptionArgs(
        @Nullable Output<String> diskEncryptionSetId,
        Output<Integer> lun) {
        this.diskEncryptionSetId = diskEncryptionSetId;
        this.lun = Objects.requireNonNull(lun, "expected parameter 'lun' to be non-null");
    }

    private DataDiskImageEncryptionArgs() {
        this.diskEncryptionSetId = Codegen.empty();
        this.lun = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataDiskImageEncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> diskEncryptionSetId;
        private Output<Integer> lun;

        public Builder() {
    	      // Empty
        }

        public Builder(DataDiskImageEncryptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskEncryptionSetId = defaults.diskEncryptionSetId;
    	      this.lun = defaults.lun;
        }

        public Builder diskEncryptionSetId(@Nullable Output<String> diskEncryptionSetId) {
            this.diskEncryptionSetId = diskEncryptionSetId;
            return this;
        }
        public Builder diskEncryptionSetId(@Nullable String diskEncryptionSetId) {
            this.diskEncryptionSetId = Codegen.ofNullable(diskEncryptionSetId);
            return this;
        }
        public Builder lun(Output<Integer> lun) {
            this.lun = Objects.requireNonNull(lun);
            return this;
        }
        public Builder lun(Integer lun) {
            this.lun = Output.of(Objects.requireNonNull(lun));
            return this;
        }        public DataDiskImageEncryptionArgs build() {
            return new DataDiskImageEncryptionArgs(diskEncryptionSetId, lun);
        }
    }
}
