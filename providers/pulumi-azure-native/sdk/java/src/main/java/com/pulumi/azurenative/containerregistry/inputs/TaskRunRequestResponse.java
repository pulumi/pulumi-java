// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.azurenative.containerregistry.inputs.OverrideTaskStepPropertiesResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The parameters for a task run request.
 * 
 */
public final class TaskRunRequestResponse extends com.pulumi.resources.InvokeArgs {

    public static final TaskRunRequestResponse Empty = new TaskRunRequestResponse();

    /**
     * The dedicated agent pool for the run.
     * 
     */
    @Import(name="agentPoolName")
    private @Nullable String agentPoolName;

    public Optional<String> agentPoolName() {
        return Optional.ofNullable(this.agentPoolName);
    }

    /**
     * The value that indicates whether archiving is enabled for the run or not.
     * 
     */
    @Import(name="isArchiveEnabled")
    private @Nullable Boolean isArchiveEnabled;

    public Optional<Boolean> isArchiveEnabled() {
        return Optional.ofNullable(this.isArchiveEnabled);
    }

    /**
     * The template that describes the repository and tag information for run log artifact.
     * 
     */
    @Import(name="logTemplate")
    private @Nullable String logTemplate;

    public Optional<String> logTemplate() {
        return Optional.ofNullable(this.logTemplate);
    }

    /**
     * Set of overridable parameters that can be passed when running a Task.
     * 
     */
    @Import(name="overrideTaskStepProperties")
    private @Nullable OverrideTaskStepPropertiesResponse overrideTaskStepProperties;

    public Optional<OverrideTaskStepPropertiesResponse> overrideTaskStepProperties() {
        return Optional.ofNullable(this.overrideTaskStepProperties);
    }

    /**
     * The resource ID of task against which run has to be queued.
     * 
     */
    @Import(name="taskId", required=true)
    private String taskId;

    public String taskId() {
        return this.taskId;
    }

    /**
     * The type of the run request.
     * Expected value is &#39;TaskRunRequest&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private TaskRunRequestResponse() {}

    private TaskRunRequestResponse(TaskRunRequestResponse $) {
        this.agentPoolName = $.agentPoolName;
        this.isArchiveEnabled = $.isArchiveEnabled;
        this.logTemplate = $.logTemplate;
        this.overrideTaskStepProperties = $.overrideTaskStepProperties;
        this.taskId = $.taskId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskRunRequestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskRunRequestResponse $;

        public Builder() {
            $ = new TaskRunRequestResponse();
        }

        public Builder(TaskRunRequestResponse defaults) {
            $ = new TaskRunRequestResponse(Objects.requireNonNull(defaults));
        }

        public Builder agentPoolName(@Nullable String agentPoolName) {
            $.agentPoolName = agentPoolName;
            return this;
        }

        public Builder isArchiveEnabled(@Nullable Boolean isArchiveEnabled) {
            $.isArchiveEnabled = isArchiveEnabled;
            return this;
        }

        public Builder logTemplate(@Nullable String logTemplate) {
            $.logTemplate = logTemplate;
            return this;
        }

        public Builder overrideTaskStepProperties(@Nullable OverrideTaskStepPropertiesResponse overrideTaskStepProperties) {
            $.overrideTaskStepProperties = overrideTaskStepProperties;
            return this;
        }

        public Builder taskId(String taskId) {
            $.taskId = taskId;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public TaskRunRequestResponse build() {
            $.isArchiveEnabled = Codegen.booleanProp("isArchiveEnabled").arg($.isArchiveEnabled).def(false).getNullable();
            $.taskId = Objects.requireNonNull($.taskId, "expected parameter 'taskId' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
