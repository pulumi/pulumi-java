// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement;

import com.pulumi.azurenative.costmanagement.enums.FormatType;
import com.pulumi.azurenative.costmanagement.inputs.ReportDefinitionArgs;
import com.pulumi.azurenative.costmanagement.inputs.ReportDeliveryInfoArgs;
import com.pulumi.azurenative.costmanagement.inputs.ReportScheduleArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReportByResourceGroupNameArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReportByResourceGroupNameArgs Empty = new ReportByResourceGroupNameArgs();

    /**
     * Has definition for the report.
     * 
     */
    @Import(name="definition", required=true)
    private Output<ReportDefinitionArgs> definition;

    /**
     * @return Has definition for the report.
     * 
     */
    public Output<ReportDefinitionArgs> definition() {
        return this.definition;
    }

    /**
     * Has delivery information for the report.
     * 
     */
    @Import(name="deliveryInfo", required=true)
    private Output<ReportDeliveryInfoArgs> deliveryInfo;

    /**
     * @return Has delivery information for the report.
     * 
     */
    public Output<ReportDeliveryInfoArgs> deliveryInfo() {
        return this.deliveryInfo;
    }

    /**
     * The format of the report being delivered.
     * 
     */
    @Import(name="format")
    private @Nullable Output<Either<String,FormatType>> format;

    /**
     * @return The format of the report being delivered.
     * 
     */
    public Optional<Output<Either<String,FormatType>>> format() {
        return Optional.ofNullable(this.format);
    }

    /**
     * Report Name.
     * 
     */
    @Import(name="reportName")
    private @Nullable Output<String> reportName;

    /**
     * @return Report Name.
     * 
     */
    public Optional<Output<String>> reportName() {
        return Optional.ofNullable(this.reportName);
    }

    /**
     * Azure Resource Group Name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Azure Resource Group Name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Has schedule information for the report.
     * 
     */
    @Import(name="schedule")
    private @Nullable Output<ReportScheduleArgs> schedule;

    /**
     * @return Has schedule information for the report.
     * 
     */
    public Optional<Output<ReportScheduleArgs>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    private ReportByResourceGroupNameArgs() {}

    private ReportByResourceGroupNameArgs(ReportByResourceGroupNameArgs $) {
        this.definition = $.definition;
        this.deliveryInfo = $.deliveryInfo;
        this.format = $.format;
        this.reportName = $.reportName;
        this.resourceGroupName = $.resourceGroupName;
        this.schedule = $.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReportByResourceGroupNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReportByResourceGroupNameArgs $;

        public Builder() {
            $ = new ReportByResourceGroupNameArgs();
        }

        public Builder(ReportByResourceGroupNameArgs defaults) {
            $ = new ReportByResourceGroupNameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param definition Has definition for the report.
         * 
         * @return builder
         * 
         */
        public Builder definition(Output<ReportDefinitionArgs> definition) {
            $.definition = definition;
            return this;
        }

        /**
         * @param definition Has definition for the report.
         * 
         * @return builder
         * 
         */
        public Builder definition(ReportDefinitionArgs definition) {
            return definition(Output.of(definition));
        }

        /**
         * @param deliveryInfo Has delivery information for the report.
         * 
         * @return builder
         * 
         */
        public Builder deliveryInfo(Output<ReportDeliveryInfoArgs> deliveryInfo) {
            $.deliveryInfo = deliveryInfo;
            return this;
        }

        /**
         * @param deliveryInfo Has delivery information for the report.
         * 
         * @return builder
         * 
         */
        public Builder deliveryInfo(ReportDeliveryInfoArgs deliveryInfo) {
            return deliveryInfo(Output.of(deliveryInfo));
        }

        /**
         * @param format The format of the report being delivered.
         * 
         * @return builder
         * 
         */
        public Builder format(@Nullable Output<Either<String,FormatType>> format) {
            $.format = format;
            return this;
        }

        /**
         * @param format The format of the report being delivered.
         * 
         * @return builder
         * 
         */
        public Builder format(Either<String,FormatType> format) {
            return format(Output.of(format));
        }

        /**
         * @param format The format of the report being delivered.
         * 
         * @return builder
         * 
         */
        public Builder format(String format) {
            return format(Either.ofLeft(format));
        }

        /**
         * @param format The format of the report being delivered.
         * 
         * @return builder
         * 
         */
        public Builder format(FormatType format) {
            return format(Either.ofRight(format));
        }

        /**
         * @param reportName Report Name.
         * 
         * @return builder
         * 
         */
        public Builder reportName(@Nullable Output<String> reportName) {
            $.reportName = reportName;
            return this;
        }

        /**
         * @param reportName Report Name.
         * 
         * @return builder
         * 
         */
        public Builder reportName(String reportName) {
            return reportName(Output.of(reportName));
        }

        /**
         * @param resourceGroupName Azure Resource Group Name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Azure Resource Group Name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param schedule Has schedule information for the report.
         * 
         * @return builder
         * 
         */
        public Builder schedule(@Nullable Output<ReportScheduleArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        /**
         * @param schedule Has schedule information for the report.
         * 
         * @return builder
         * 
         */
        public Builder schedule(ReportScheduleArgs schedule) {
            return schedule(Output.of(schedule));
        }

        public ReportByResourceGroupNameArgs build() {
            $.definition = Objects.requireNonNull($.definition, "expected parameter 'definition' to be non-null");
            $.deliveryInfo = Objects.requireNonNull($.deliveryInfo, "expected parameter 'deliveryInfo' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
