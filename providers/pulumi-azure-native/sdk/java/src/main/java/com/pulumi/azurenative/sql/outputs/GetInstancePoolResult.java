// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.outputs;

import com.pulumi.azurenative.sql.outputs.SkuResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstancePoolResult {
    /**
     * @return Resource ID.
     * 
     */
    private final String id;
    /**
     * @return The license type. Possible values are &#39;LicenseIncluded&#39; (price for SQL license is included) and &#39;BasePrice&#39; (without SQL license price).
     * 
     */
    private final String licenseType;
    /**
     * @return Resource location.
     * 
     */
    private final String location;
    /**
     * @return Resource name.
     * 
     */
    private final String name;
    /**
     * @return The name and tier of the SKU.
     * 
     */
    private final @Nullable SkuResponse sku;
    /**
     * @return Resource ID of the subnet to place this instance pool in.
     * 
     */
    private final String subnetId;
    /**
     * @return Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return Resource type.
     * 
     */
    private final String type;
    /**
     * @return Count of vCores belonging to this instance pool.
     * 
     */
    private final Integer vCores;

    @CustomType.Constructor
    private GetInstancePoolResult(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("licenseType") String licenseType,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("sku") @Nullable SkuResponse sku,
        @CustomType.Parameter("subnetId") String subnetId,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("vCores") Integer vCores) {
        this.id = id;
        this.licenseType = licenseType;
        this.location = location;
        this.name = name;
        this.sku = sku;
        this.subnetId = subnetId;
        this.tags = tags;
        this.type = type;
        this.vCores = vCores;
    }

    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The license type. Possible values are &#39;LicenseIncluded&#39; (price for SQL license is included) and &#39;BasePrice&#39; (without SQL license price).
     * 
     */
    public String licenseType() {
        return this.licenseType;
    }
    /**
     * @return Resource location.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The name and tier of the SKU.
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Resource ID of the subnet to place this instance pool in.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Count of vCores belonging to this instance pool.
     * 
     */
    public Integer vCores() {
        return this.vCores;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancePoolResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private String licenseType;
        private String location;
        private String name;
        private @Nullable SkuResponse sku;
        private String subnetId;
        private @Nullable Map<String,String> tags;
        private String type;
        private Integer vCores;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancePoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.licenseType = defaults.licenseType;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.sku = defaults.sku;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.vCores = defaults.vCores;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder licenseType(String licenseType) {
            this.licenseType = Objects.requireNonNull(licenseType);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder vCores(Integer vCores) {
            this.vCores = Objects.requireNonNull(vCores);
            return this;
        }        public GetInstancePoolResult build() {
            return new GetInstancePoolResult(id, licenseType, location, name, sku, subnetId, tags, type, vCores);
        }
    }
}
