// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The metric dimension
 * 
 */
public final class MetricDimensionResponse extends com.pulumi.resources.InvokeArgs {

    public static final MetricDimensionResponse Empty = new MetricDimensionResponse();

    /**
     * The dimension value.
     * 
     */
    @Import(name="sourceName", required=true)
    private String sourceName;

    /**
     * @return The dimension value.
     * 
     */
    public String sourceName() {
        return this.sourceName;
    }

    /**
     * The dimension type.
     * 
     */
    @Import(name="sourceType", required=true)
    private String sourceType;

    /**
     * @return The dimension type.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }

    private MetricDimensionResponse() {}

    private MetricDimensionResponse(MetricDimensionResponse $) {
        this.sourceName = $.sourceName;
        this.sourceType = $.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricDimensionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricDimensionResponse $;

        public Builder() {
            $ = new MetricDimensionResponse();
        }

        public Builder(MetricDimensionResponse defaults) {
            $ = new MetricDimensionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceName The dimension value.
         * 
         * @return builder
         * 
         */
        public Builder sourceName(String sourceName) {
            $.sourceName = sourceName;
            return this;
        }

        /**
         * @param sourceType The dimension type.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        public MetricDimensionResponse build() {
            $.sourceName = Objects.requireNonNull($.sourceName, "expected parameter 'sourceName' to be non-null");
            $.sourceType = Objects.requireNonNull($.sourceType, "expected parameter 'sourceType' to be non-null");
            return $;
        }
    }

}
