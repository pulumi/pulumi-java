// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.azurenative.documentdb.inputs.PeriodicModePropertiesResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The object representing periodic mode backup policy.
 * 
 */
public final class PeriodicModeBackupPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final PeriodicModeBackupPolicyResponse Empty = new PeriodicModeBackupPolicyResponse();

    /**
     * Configuration values for periodic mode backup
     * 
     */
    @Import(name="periodicModeProperties")
    private @Nullable PeriodicModePropertiesResponse periodicModeProperties;

    /**
     * @return Configuration values for periodic mode backup
     * 
     */
    public Optional<PeriodicModePropertiesResponse> periodicModeProperties() {
        return Optional.ofNullable(this.periodicModeProperties);
    }

    /**
     * Describes the mode of backups.
     * Expected value is &#39;Periodic&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Describes the mode of backups.
     * Expected value is &#39;Periodic&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    private PeriodicModeBackupPolicyResponse() {}

    private PeriodicModeBackupPolicyResponse(PeriodicModeBackupPolicyResponse $) {
        this.periodicModeProperties = $.periodicModeProperties;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PeriodicModeBackupPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PeriodicModeBackupPolicyResponse $;

        public Builder() {
            $ = new PeriodicModeBackupPolicyResponse();
        }

        public Builder(PeriodicModeBackupPolicyResponse defaults) {
            $ = new PeriodicModeBackupPolicyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param periodicModeProperties Configuration values for periodic mode backup
         * 
         * @return builder
         * 
         */
        public Builder periodicModeProperties(@Nullable PeriodicModePropertiesResponse periodicModeProperties) {
            $.periodicModeProperties = periodicModeProperties;
            return this;
        }

        /**
         * @param type Describes the mode of backups.
         * Expected value is &#39;Periodic&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public PeriodicModeBackupPolicyResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
