// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web;

import com.pulumi.azurenative.web.inputs.ConfigurationArgs;
import com.pulumi.azurenative.web.inputs.TemplateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerAppArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerAppArgs Empty = new ContainerAppArgs();

    /**
     * Non versioned Container App configuration properties.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<ConfigurationArgs> configuration;

    /**
     * @return Non versioned Container App configuration properties.
     * 
     */
    public Optional<Output<ConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Kind of resource.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Resource ID of the Container App&#39;s KubeEnvironment.
     * 
     */
    @Import(name="kubeEnvironmentId")
    private @Nullable Output<String> kubeEnvironmentId;

    /**
     * @return Resource ID of the Container App&#39;s KubeEnvironment.
     * 
     */
    public Optional<Output<String>> kubeEnvironmentId() {
        return Optional.ofNullable(this.kubeEnvironmentId);
    }

    /**
     * Resource Location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource Location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the Container App.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Container App.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group to which the resource belongs.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Container App versioned application definition.
     * 
     */
    @Import(name="template")
    private @Nullable Output<TemplateArgs> template;

    /**
     * @return Container App versioned application definition.
     * 
     */
    public Optional<Output<TemplateArgs>> template() {
        return Optional.ofNullable(this.template);
    }

    private ContainerAppArgs() {}

    private ContainerAppArgs(ContainerAppArgs $) {
        this.configuration = $.configuration;
        this.kind = $.kind;
        this.kubeEnvironmentId = $.kubeEnvironmentId;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.template = $.template;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerAppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerAppArgs $;

        public Builder() {
            $ = new ContainerAppArgs();
        }

        public Builder(ContainerAppArgs defaults) {
            $ = new ContainerAppArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration Non versioned Container App configuration properties.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<ConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration Non versioned Container App configuration properties.
         * 
         * @return builder
         * 
         */
        public Builder configuration(ConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param kind Kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param kubeEnvironmentId Resource ID of the Container App&#39;s KubeEnvironment.
         * 
         * @return builder
         * 
         */
        public Builder kubeEnvironmentId(@Nullable Output<String> kubeEnvironmentId) {
            $.kubeEnvironmentId = kubeEnvironmentId;
            return this;
        }

        /**
         * @param kubeEnvironmentId Resource ID of the Container App&#39;s KubeEnvironment.
         * 
         * @return builder
         * 
         */
        public Builder kubeEnvironmentId(String kubeEnvironmentId) {
            return kubeEnvironmentId(Output.of(kubeEnvironmentId));
        }

        /**
         * @param location Resource Location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource Location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Name of the Container App.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Container App.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Name of the resource group to which the resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group to which the resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param template Container App versioned application definition.
         * 
         * @return builder
         * 
         */
        public Builder template(@Nullable Output<TemplateArgs> template) {
            $.template = template;
            return this;
        }

        /**
         * @param template Container App versioned application definition.
         * 
         * @return builder
         * 
         */
        public Builder template(TemplateArgs template) {
            return template(Output.of(template));
        }

        public ContainerAppArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
