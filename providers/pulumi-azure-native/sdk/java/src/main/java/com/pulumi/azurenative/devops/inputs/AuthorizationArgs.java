// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devops.inputs;

import com.pulumi.azurenative.devops.enums.AuthorizationType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Authorization info used to access a resource (like code repository).
 * 
 */
public final class AuthorizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthorizationArgs Empty = new AuthorizationArgs();

    /**
     * Type of authorization.
     * 
     */
    @Import(name="authorizationType", required=true)
      private final Output<Either<String,AuthorizationType>> authorizationType;

    public Output<Either<String,AuthorizationType>> authorizationType() {
        return this.authorizationType;
    }

    /**
     * Authorization parameters corresponding to the authorization type.
     * 
     */
    @Import(name="parameters")
      private final @Nullable Output<Map<String,String>> parameters;

    public Output<Map<String,String>> parameters() {
        return this.parameters == null ? Codegen.empty() : this.parameters;
    }

    public AuthorizationArgs(
        Output<Either<String,AuthorizationType>> authorizationType,
        @Nullable Output<Map<String,String>> parameters) {
        this.authorizationType = Objects.requireNonNull(authorizationType, "expected parameter 'authorizationType' to be non-null");
        this.parameters = parameters;
    }

    private AuthorizationArgs() {
        this.authorizationType = Codegen.empty();
        this.parameters = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Either<String,AuthorizationType>> authorizationType;
        private @Nullable Output<Map<String,String>> parameters;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthorizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationType = defaults.authorizationType;
    	      this.parameters = defaults.parameters;
        }

        public Builder authorizationType(Output<Either<String,AuthorizationType>> authorizationType) {
            this.authorizationType = Objects.requireNonNull(authorizationType);
            return this;
        }
        public Builder authorizationType(Either<String,AuthorizationType> authorizationType) {
            this.authorizationType = Output.of(Objects.requireNonNull(authorizationType));
            return this;
        }
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(@Nullable Map<String,String> parameters) {
            this.parameters = Codegen.ofNullable(parameters);
            return this;
        }        public AuthorizationArgs build() {
            return new AuthorizationArgs(authorizationType, parameters);
        }
    }
}
