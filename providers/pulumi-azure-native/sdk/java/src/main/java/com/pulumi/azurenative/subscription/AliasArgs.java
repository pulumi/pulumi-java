// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.subscription;

import com.pulumi.azurenative.subscription.inputs.PutAliasRequestPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AliasArgs extends com.pulumi.resources.ResourceArgs {

    public static final AliasArgs Empty = new AliasArgs();

    /**
     * Name for this subscription creation request also known as alias. Note that this is not the same as subscription name and this doesnâ€™t have any other lifecycle need beyond the request for subscription creation.
     * 
     */
    @Import(name="aliasName")
    private @Nullable Output<String> aliasName;

    public Optional<Output<String>> aliasName() {
        return Optional.ofNullable(this.aliasName);
    }

    /**
     * Put alias request properties.
     * 
     */
    @Import(name="properties", required=true)
    private Output<PutAliasRequestPropertiesArgs> properties;

    public Output<PutAliasRequestPropertiesArgs> properties() {
        return this.properties;
    }

    private AliasArgs() {}

    private AliasArgs(AliasArgs $) {
        this.aliasName = $.aliasName;
        this.properties = $.properties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AliasArgs $;

        public Builder() {
            $ = new AliasArgs();
        }

        public Builder(AliasArgs defaults) {
            $ = new AliasArgs(Objects.requireNonNull(defaults));
        }

        public Builder aliasName(@Nullable Output<String> aliasName) {
            $.aliasName = aliasName;
            return this;
        }

        public Builder aliasName(String aliasName) {
            return aliasName(Output.of(aliasName));
        }

        public Builder properties(Output<PutAliasRequestPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(PutAliasRequestPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        public AliasArgs build() {
            $.properties = Objects.requireNonNull($.properties, "expected parameter 'properties' to be non-null");
            return $;
        }
    }

}
