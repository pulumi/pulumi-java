// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Availability information of a product system.
 * 
 */
public final class AvailabilityInformationResponse extends com.pulumi.resources.InvokeArgs {

    public static final AvailabilityInformationResponse Empty = new AvailabilityInformationResponse();

    /**
     * Current availability stage of the product. Availability stage
     * 
     */
    @Import(name="availabilityStage", required=true)
    private String availabilityStage;

    /**
     * @return Current availability stage of the product. Availability stage
     * 
     */
    public String availabilityStage() {
        return this.availabilityStage;
    }

    /**
     * Reason why the product is disabled.
     * 
     */
    @Import(name="disabledReason", required=true)
    private String disabledReason;

    /**
     * @return Reason why the product is disabled.
     * 
     */
    public String disabledReason() {
        return this.disabledReason;
    }

    /**
     * Message for why the product is disabled.
     * 
     */
    @Import(name="disabledReasonMessage", required=true)
    private String disabledReasonMessage;

    /**
     * @return Message for why the product is disabled.
     * 
     */
    public String disabledReasonMessage() {
        return this.disabledReasonMessage;
    }

    private AvailabilityInformationResponse() {}

    private AvailabilityInformationResponse(AvailabilityInformationResponse $) {
        this.availabilityStage = $.availabilityStage;
        this.disabledReason = $.disabledReason;
        this.disabledReasonMessage = $.disabledReasonMessage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AvailabilityInformationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AvailabilityInformationResponse $;

        public Builder() {
            $ = new AvailabilityInformationResponse();
        }

        public Builder(AvailabilityInformationResponse defaults) {
            $ = new AvailabilityInformationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityStage Current availability stage of the product. Availability stage
         * 
         * @return builder
         * 
         */
        public Builder availabilityStage(String availabilityStage) {
            $.availabilityStage = availabilityStage;
            return this;
        }

        /**
         * @param disabledReason Reason why the product is disabled.
         * 
         * @return builder
         * 
         */
        public Builder disabledReason(String disabledReason) {
            $.disabledReason = disabledReason;
            return this;
        }

        /**
         * @param disabledReasonMessage Message for why the product is disabled.
         * 
         * @return builder
         * 
         */
        public Builder disabledReasonMessage(String disabledReasonMessage) {
            $.disabledReasonMessage = disabledReasonMessage;
            return this;
        }

        public AvailabilityInformationResponse build() {
            $.availabilityStage = Objects.requireNonNull($.availabilityStage, "expected parameter 'availabilityStage' to be non-null");
            $.disabledReason = Objects.requireNonNull($.disabledReason, "expected parameter 'disabledReason' to be non-null");
            $.disabledReasonMessage = Objects.requireNonNull($.disabledReasonMessage, "expected parameter 'disabledReasonMessage' to be non-null");
            return $;
        }
    }

}
