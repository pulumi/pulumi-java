// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.search.inputs;

import com.pulumi.azurenative.search.inputs.IpRuleResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Network specific rules that determine how the Azure Cognitive Search service may be reached.
 * 
 */
public final class NetworkRuleSetResponse extends com.pulumi.resources.InvokeArgs {

    public static final NetworkRuleSetResponse Empty = new NetworkRuleSetResponse();

    /**
     * A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the &#39;publicNetworkAccess&#39; of the search service is &#39;enabled&#39;; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
     * 
     */
    @Import(name="ipRules")
    private @Nullable List<IpRuleResponse> ipRules;

    /**
     * @return A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the &#39;publicNetworkAccess&#39; of the search service is &#39;enabled&#39;; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
     * 
     */
    public Optional<List<IpRuleResponse>> ipRules() {
        return Optional.ofNullable(this.ipRules);
    }

    private NetworkRuleSetResponse() {}

    private NetworkRuleSetResponse(NetworkRuleSetResponse $) {
        this.ipRules = $.ipRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkRuleSetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkRuleSetResponse $;

        public Builder() {
            $ = new NetworkRuleSetResponse();
        }

        public Builder(NetworkRuleSetResponse defaults) {
            $ = new NetworkRuleSetResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipRules A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the &#39;publicNetworkAccess&#39; of the search service is &#39;enabled&#39;; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(@Nullable List<IpRuleResponse> ipRules) {
            $.ipRules = ipRules;
            return this;
        }

        /**
         * @param ipRules A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the &#39;publicNetworkAccess&#39; of the search service is &#39;enabled&#39;; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(IpRuleResponse... ipRules) {
            return ipRules(List.of(ipRules));
        }

        public NetworkRuleSetResponse build() {
            return $;
        }
    }

}
