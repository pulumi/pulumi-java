// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.VpnAuthenticationType;
import com.pulumi.azurenative.network.enums.VpnClientProtocol;
import com.pulumi.azurenative.network.inputs.AddressSpaceArgs;
import com.pulumi.azurenative.network.inputs.IpsecPolicyArgs;
import com.pulumi.azurenative.network.inputs.RadiusServerArgs;
import com.pulumi.azurenative.network.inputs.VpnClientRevokedCertificateArgs;
import com.pulumi.azurenative.network.inputs.VpnClientRootCertificateArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * VpnClientConfiguration for P2S client.
 * 
 */
public final class VpnClientConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnClientConfigurationArgs Empty = new VpnClientConfigurationArgs();

    /**
     * The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     * 
     */
    @Import(name="aadAudience")
    private @Nullable Output<String> aadAudience;

    public Optional<Output<String>> aadAudience() {
        return Optional.ofNullable(this.aadAudience);
    }

    /**
     * The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     * 
     */
    @Import(name="aadIssuer")
    private @Nullable Output<String> aadIssuer;

    public Optional<Output<String>> aadIssuer() {
        return Optional.ofNullable(this.aadIssuer);
    }

    /**
     * The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     * 
     */
    @Import(name="aadTenant")
    private @Nullable Output<String> aadTenant;

    public Optional<Output<String>> aadTenant() {
        return Optional.ofNullable(this.aadTenant);
    }

    /**
     * The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
     * 
     */
    @Import(name="radiusServerAddress")
    private @Nullable Output<String> radiusServerAddress;

    public Optional<Output<String>> radiusServerAddress() {
        return Optional.ofNullable(this.radiusServerAddress);
    }

    /**
     * The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
     * 
     */
    @Import(name="radiusServerSecret")
    private @Nullable Output<String> radiusServerSecret;

    public Optional<Output<String>> radiusServerSecret() {
        return Optional.ofNullable(this.radiusServerSecret);
    }

    /**
     * The radiusServers property for multiple radius server configuration.
     * 
     */
    @Import(name="radiusServers")
    private @Nullable Output<List<RadiusServerArgs>> radiusServers;

    public Optional<Output<List<RadiusServerArgs>>> radiusServers() {
        return Optional.ofNullable(this.radiusServers);
    }

    /**
     * VPN authentication types for the virtual network gateway..
     * 
     */
    @Import(name="vpnAuthenticationTypes")
    private @Nullable Output<List<Either<String,VpnAuthenticationType>>> vpnAuthenticationTypes;

    public Optional<Output<List<Either<String,VpnAuthenticationType>>>> vpnAuthenticationTypes() {
        return Optional.ofNullable(this.vpnAuthenticationTypes);
    }

    /**
     * The reference to the address space resource which represents Address space for P2S VpnClient.
     * 
     */
    @Import(name="vpnClientAddressPool")
    private @Nullable Output<AddressSpaceArgs> vpnClientAddressPool;

    public Optional<Output<AddressSpaceArgs>> vpnClientAddressPool() {
        return Optional.ofNullable(this.vpnClientAddressPool);
    }

    /**
     * VpnClientIpsecPolicies for virtual network gateway P2S client.
     * 
     */
    @Import(name="vpnClientIpsecPolicies")
    private @Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies;

    public Optional<Output<List<IpsecPolicyArgs>>> vpnClientIpsecPolicies() {
        return Optional.ofNullable(this.vpnClientIpsecPolicies);
    }

    /**
     * VpnClientProtocols for Virtual network gateway.
     * 
     */
    @Import(name="vpnClientProtocols")
    private @Nullable Output<List<Either<String,VpnClientProtocol>>> vpnClientProtocols;

    public Optional<Output<List<Either<String,VpnClientProtocol>>>> vpnClientProtocols() {
        return Optional.ofNullable(this.vpnClientProtocols);
    }

    /**
     * VpnClientRevokedCertificate for Virtual network gateway.
     * 
     */
    @Import(name="vpnClientRevokedCertificates")
    private @Nullable Output<List<VpnClientRevokedCertificateArgs>> vpnClientRevokedCertificates;

    public Optional<Output<List<VpnClientRevokedCertificateArgs>>> vpnClientRevokedCertificates() {
        return Optional.ofNullable(this.vpnClientRevokedCertificates);
    }

    /**
     * VpnClientRootCertificate for virtual network gateway.
     * 
     */
    @Import(name="vpnClientRootCertificates")
    private @Nullable Output<List<VpnClientRootCertificateArgs>> vpnClientRootCertificates;

    public Optional<Output<List<VpnClientRootCertificateArgs>>> vpnClientRootCertificates() {
        return Optional.ofNullable(this.vpnClientRootCertificates);
    }

    private VpnClientConfigurationArgs() {}

    private VpnClientConfigurationArgs(VpnClientConfigurationArgs $) {
        this.aadAudience = $.aadAudience;
        this.aadIssuer = $.aadIssuer;
        this.aadTenant = $.aadTenant;
        this.radiusServerAddress = $.radiusServerAddress;
        this.radiusServerSecret = $.radiusServerSecret;
        this.radiusServers = $.radiusServers;
        this.vpnAuthenticationTypes = $.vpnAuthenticationTypes;
        this.vpnClientAddressPool = $.vpnClientAddressPool;
        this.vpnClientIpsecPolicies = $.vpnClientIpsecPolicies;
        this.vpnClientProtocols = $.vpnClientProtocols;
        this.vpnClientRevokedCertificates = $.vpnClientRevokedCertificates;
        this.vpnClientRootCertificates = $.vpnClientRootCertificates;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnClientConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnClientConfigurationArgs $;

        public Builder() {
            $ = new VpnClientConfigurationArgs();
        }

        public Builder(VpnClientConfigurationArgs defaults) {
            $ = new VpnClientConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder aadAudience(@Nullable Output<String> aadAudience) {
            $.aadAudience = aadAudience;
            return this;
        }

        public Builder aadAudience(String aadAudience) {
            return aadAudience(Output.of(aadAudience));
        }

        public Builder aadIssuer(@Nullable Output<String> aadIssuer) {
            $.aadIssuer = aadIssuer;
            return this;
        }

        public Builder aadIssuer(String aadIssuer) {
            return aadIssuer(Output.of(aadIssuer));
        }

        public Builder aadTenant(@Nullable Output<String> aadTenant) {
            $.aadTenant = aadTenant;
            return this;
        }

        public Builder aadTenant(String aadTenant) {
            return aadTenant(Output.of(aadTenant));
        }

        public Builder radiusServerAddress(@Nullable Output<String> radiusServerAddress) {
            $.radiusServerAddress = radiusServerAddress;
            return this;
        }

        public Builder radiusServerAddress(String radiusServerAddress) {
            return radiusServerAddress(Output.of(radiusServerAddress));
        }

        public Builder radiusServerSecret(@Nullable Output<String> radiusServerSecret) {
            $.radiusServerSecret = radiusServerSecret;
            return this;
        }

        public Builder radiusServerSecret(String radiusServerSecret) {
            return radiusServerSecret(Output.of(radiusServerSecret));
        }

        public Builder radiusServers(@Nullable Output<List<RadiusServerArgs>> radiusServers) {
            $.radiusServers = radiusServers;
            return this;
        }

        public Builder radiusServers(List<RadiusServerArgs> radiusServers) {
            return radiusServers(Output.of(radiusServers));
        }

        public Builder radiusServers(RadiusServerArgs... radiusServers) {
            return radiusServers(List.of(radiusServers));
        }

        public Builder vpnAuthenticationTypes(@Nullable Output<List<Either<String,VpnAuthenticationType>>> vpnAuthenticationTypes) {
            $.vpnAuthenticationTypes = vpnAuthenticationTypes;
            return this;
        }

        public Builder vpnAuthenticationTypes(List<Either<String,VpnAuthenticationType>> vpnAuthenticationTypes) {
            return vpnAuthenticationTypes(Output.of(vpnAuthenticationTypes));
        }

        public Builder vpnAuthenticationTypes(Either<String,VpnAuthenticationType>... vpnAuthenticationTypes) {
            return vpnAuthenticationTypes(List.of(vpnAuthenticationTypes));
        }

        public Builder vpnClientAddressPool(@Nullable Output<AddressSpaceArgs> vpnClientAddressPool) {
            $.vpnClientAddressPool = vpnClientAddressPool;
            return this;
        }

        public Builder vpnClientAddressPool(AddressSpaceArgs vpnClientAddressPool) {
            return vpnClientAddressPool(Output.of(vpnClientAddressPool));
        }

        public Builder vpnClientIpsecPolicies(@Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies) {
            $.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
            return this;
        }

        public Builder vpnClientIpsecPolicies(List<IpsecPolicyArgs> vpnClientIpsecPolicies) {
            return vpnClientIpsecPolicies(Output.of(vpnClientIpsecPolicies));
        }

        public Builder vpnClientIpsecPolicies(IpsecPolicyArgs... vpnClientIpsecPolicies) {
            return vpnClientIpsecPolicies(List.of(vpnClientIpsecPolicies));
        }

        public Builder vpnClientProtocols(@Nullable Output<List<Either<String,VpnClientProtocol>>> vpnClientProtocols) {
            $.vpnClientProtocols = vpnClientProtocols;
            return this;
        }

        public Builder vpnClientProtocols(List<Either<String,VpnClientProtocol>> vpnClientProtocols) {
            return vpnClientProtocols(Output.of(vpnClientProtocols));
        }

        public Builder vpnClientProtocols(Either<String,VpnClientProtocol>... vpnClientProtocols) {
            return vpnClientProtocols(List.of(vpnClientProtocols));
        }

        public Builder vpnClientRevokedCertificates(@Nullable Output<List<VpnClientRevokedCertificateArgs>> vpnClientRevokedCertificates) {
            $.vpnClientRevokedCertificates = vpnClientRevokedCertificates;
            return this;
        }

        public Builder vpnClientRevokedCertificates(List<VpnClientRevokedCertificateArgs> vpnClientRevokedCertificates) {
            return vpnClientRevokedCertificates(Output.of(vpnClientRevokedCertificates));
        }

        public Builder vpnClientRevokedCertificates(VpnClientRevokedCertificateArgs... vpnClientRevokedCertificates) {
            return vpnClientRevokedCertificates(List.of(vpnClientRevokedCertificates));
        }

        public Builder vpnClientRootCertificates(@Nullable Output<List<VpnClientRootCertificateArgs>> vpnClientRootCertificates) {
            $.vpnClientRootCertificates = vpnClientRootCertificates;
            return this;
        }

        public Builder vpnClientRootCertificates(List<VpnClientRootCertificateArgs> vpnClientRootCertificates) {
            return vpnClientRootCertificates(Output.of(vpnClientRootCertificates));
        }

        public Builder vpnClientRootCertificates(VpnClientRootCertificateArgs... vpnClientRootCertificates) {
            return vpnClientRootCertificates(List.of(vpnClientRootCertificates));
        }

        public VpnClientConfigurationArgs build() {
            return $;
        }
    }

}
