// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListDnsResolverByVirtualNetworkArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListDnsResolverByVirtualNetworkArgs Empty = new ListDnsResolverByVirtualNetworkArgs();

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The maximum number of results to return. If not specified, returns up to 100 results.
     * 
     */
    @Import(name="top")
    private @Nullable Output<Integer> top;

    /**
     * @return The maximum number of results to return. If not specified, returns up to 100 results.
     * 
     */
    public Optional<Output<Integer>> top() {
        return Optional.ofNullable(this.top);
    }

    /**
     * The name of the virtual network.
     * 
     */
    @Import(name="virtualNetworkName", required=true)
    private Output<String> virtualNetworkName;

    /**
     * @return The name of the virtual network.
     * 
     */
    public Output<String> virtualNetworkName() {
        return this.virtualNetworkName;
    }

    private ListDnsResolverByVirtualNetworkArgs() {}

    private ListDnsResolverByVirtualNetworkArgs(ListDnsResolverByVirtualNetworkArgs $) {
        this.resourceGroupName = $.resourceGroupName;
        this.top = $.top;
        this.virtualNetworkName = $.virtualNetworkName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListDnsResolverByVirtualNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListDnsResolverByVirtualNetworkArgs $;

        public Builder() {
            $ = new ListDnsResolverByVirtualNetworkArgs();
        }

        public Builder(ListDnsResolverByVirtualNetworkArgs defaults) {
            $ = new ListDnsResolverByVirtualNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param top The maximum number of results to return. If not specified, returns up to 100 results.
         * 
         * @return builder
         * 
         */
        public Builder top(@Nullable Output<Integer> top) {
            $.top = top;
            return this;
        }

        /**
         * @param top The maximum number of results to return. If not specified, returns up to 100 results.
         * 
         * @return builder
         * 
         */
        public Builder top(Integer top) {
            return top(Output.of(top));
        }

        /**
         * @param virtualNetworkName The name of the virtual network.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkName(Output<String> virtualNetworkName) {
            $.virtualNetworkName = virtualNetworkName;
            return this;
        }

        /**
         * @param virtualNetworkName The name of the virtual network.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkName(String virtualNetworkName) {
            return virtualNetworkName(Output.of(virtualNetworkName));
        }

        public ListDnsResolverByVirtualNetworkArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.virtualNetworkName = Objects.requireNonNull($.virtualNetworkName, "expected parameter 'virtualNetworkName' to be non-null");
            return $;
        }
    }

}
