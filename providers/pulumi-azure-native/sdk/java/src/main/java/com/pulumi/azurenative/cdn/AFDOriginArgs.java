// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn;

import com.pulumi.azurenative.cdn.enums.EnabledState;
import com.pulumi.azurenative.cdn.inputs.ResourceReferenceArgs;
import com.pulumi.azurenative.cdn.inputs.SharedPrivateLinkResourcePropertiesArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AFDOriginArgs extends com.pulumi.resources.ResourceArgs {

    public static final AFDOriginArgs Empty = new AFDOriginArgs();

    /**
     * Resource reference to the Azure origin resource.
     * 
     */
    @Import(name="azureOrigin")
    private @Nullable Output<ResourceReferenceArgs> azureOrigin;

    public Optional<Output<ResourceReferenceArgs>> azureOrigin() {
        return Optional.ofNullable(this.azureOrigin);
    }

    /**
     * Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
     * 
     */
    @Import(name="enabledState")
    private @Nullable Output<Either<String,EnabledState>> enabledState;

    public Optional<Output<Either<String,EnabledState>>> enabledState() {
        return Optional.ofNullable(this.enabledState);
    }

    /**
     * The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.
     * 
     */
    @Import(name="hostName", required=true)
    private Output<String> hostName;

    public Output<String> hostName() {
        return this.hostName;
    }

    /**
     * The value of the HTTP port. Must be between 1 and 65535.
     * 
     */
    @Import(name="httpPort")
    private @Nullable Output<Integer> httpPort;

    public Optional<Output<Integer>> httpPort() {
        return Optional.ofNullable(this.httpPort);
    }

    /**
     * The value of the HTTPS port. Must be between 1 and 65535.
     * 
     */
    @Import(name="httpsPort")
    private @Nullable Output<Integer> httpsPort;

    public Optional<Output<Integer>> httpsPort() {
        return Optional.ofNullable(this.httpsPort);
    }

    /**
     * Name of the origin group which is unique within the profile.
     * 
     */
    @Import(name="originGroupName", required=true)
    private Output<String> originGroupName;

    public Output<String> originGroupName() {
        return this.originGroupName;
    }

    /**
     * The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
     * 
     */
    @Import(name="originHostHeader")
    private @Nullable Output<String> originHostHeader;

    public Optional<Output<String>> originHostHeader() {
        return Optional.ofNullable(this.originHostHeader);
    }

    /**
     * Name of the origin that is unique within the profile.
     * 
     */
    @Import(name="originName")
    private @Nullable Output<String> originName;

    public Optional<Output<String>> originName() {
        return Optional.ofNullable(this.originName);
    }

    /**
     * Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Name of the CDN profile which is unique within the resource group.
     * 
     */
    @Import(name="profileName", required=true)
    private Output<String> profileName;

    public Output<String> profileName() {
        return this.profileName;
    }

    /**
     * Name of the Resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The properties of the private link resource for private origin.
     * 
     */
    @Import(name="sharedPrivateLinkResource")
    private @Nullable Output<SharedPrivateLinkResourcePropertiesArgs> sharedPrivateLinkResource;

    public Optional<Output<SharedPrivateLinkResourcePropertiesArgs>> sharedPrivateLinkResource() {
        return Optional.ofNullable(this.sharedPrivateLinkResource);
    }

    /**
     * Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private AFDOriginArgs() {}

    private AFDOriginArgs(AFDOriginArgs $) {
        this.azureOrigin = $.azureOrigin;
        this.enabledState = $.enabledState;
        this.hostName = $.hostName;
        this.httpPort = $.httpPort;
        this.httpsPort = $.httpsPort;
        this.originGroupName = $.originGroupName;
        this.originHostHeader = $.originHostHeader;
        this.originName = $.originName;
        this.priority = $.priority;
        this.profileName = $.profileName;
        this.resourceGroupName = $.resourceGroupName;
        this.sharedPrivateLinkResource = $.sharedPrivateLinkResource;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AFDOriginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AFDOriginArgs $;

        public Builder() {
            $ = new AFDOriginArgs();
        }

        public Builder(AFDOriginArgs defaults) {
            $ = new AFDOriginArgs(Objects.requireNonNull(defaults));
        }

        public Builder azureOrigin(@Nullable Output<ResourceReferenceArgs> azureOrigin) {
            $.azureOrigin = azureOrigin;
            return this;
        }

        public Builder azureOrigin(ResourceReferenceArgs azureOrigin) {
            return azureOrigin(Output.of(azureOrigin));
        }

        public Builder enabledState(@Nullable Output<Either<String,EnabledState>> enabledState) {
            $.enabledState = enabledState;
            return this;
        }

        public Builder enabledState(Either<String,EnabledState> enabledState) {
            return enabledState(Output.of(enabledState));
        }

        public Builder hostName(Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        public Builder httpPort(@Nullable Output<Integer> httpPort) {
            $.httpPort = httpPort;
            return this;
        }

        public Builder httpPort(Integer httpPort) {
            return httpPort(Output.of(httpPort));
        }

        public Builder httpsPort(@Nullable Output<Integer> httpsPort) {
            $.httpsPort = httpsPort;
            return this;
        }

        public Builder httpsPort(Integer httpsPort) {
            return httpsPort(Output.of(httpsPort));
        }

        public Builder originGroupName(Output<String> originGroupName) {
            $.originGroupName = originGroupName;
            return this;
        }

        public Builder originGroupName(String originGroupName) {
            return originGroupName(Output.of(originGroupName));
        }

        public Builder originHostHeader(@Nullable Output<String> originHostHeader) {
            $.originHostHeader = originHostHeader;
            return this;
        }

        public Builder originHostHeader(String originHostHeader) {
            return originHostHeader(Output.of(originHostHeader));
        }

        public Builder originName(@Nullable Output<String> originName) {
            $.originName = originName;
            return this;
        }

        public Builder originName(String originName) {
            return originName(Output.of(originName));
        }

        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public Builder profileName(Output<String> profileName) {
            $.profileName = profileName;
            return this;
        }

        public Builder profileName(String profileName) {
            return profileName(Output.of(profileName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder sharedPrivateLinkResource(@Nullable Output<SharedPrivateLinkResourcePropertiesArgs> sharedPrivateLinkResource) {
            $.sharedPrivateLinkResource = sharedPrivateLinkResource;
            return this;
        }

        public Builder sharedPrivateLinkResource(SharedPrivateLinkResourcePropertiesArgs sharedPrivateLinkResource) {
            return sharedPrivateLinkResource(Output.of(sharedPrivateLinkResource));
        }

        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public AFDOriginArgs build() {
            $.hostName = Objects.requireNonNull($.hostName, "expected parameter 'hostName' to be non-null");
            $.originGroupName = Objects.requireNonNull($.originGroupName, "expected parameter 'originGroupName' to be non-null");
            $.profileName = Objects.requireNonNull($.profileName, "expected parameter 'profileName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
