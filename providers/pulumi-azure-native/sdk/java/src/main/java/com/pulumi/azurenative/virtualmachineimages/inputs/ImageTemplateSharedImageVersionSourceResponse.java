// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.virtualmachineimages.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Describes an image source that is an image version in a shared image gallery.
 * 
 */
public final class ImageTemplateSharedImageVersionSourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final ImageTemplateSharedImageVersionSourceResponse Empty = new ImageTemplateSharedImageVersionSourceResponse();

    /**
     * ARM resource id of the image version in the shared image gallery
     * 
     */
    @Import(name="imageVersionId", required=true)
      private final String imageVersionId;

    public String imageVersionId() {
        return this.imageVersionId;
    }

    /**
     * Specifies the type of source image you want to start with.
     * Expected value is 'SharedImageVersion'.
     * 
     */
    @Import(name="type", required=true)
      private final String type;

    public String type() {
        return this.type;
    }

    public ImageTemplateSharedImageVersionSourceResponse(
        String imageVersionId,
        String type) {
        this.imageVersionId = Objects.requireNonNull(imageVersionId, "expected parameter 'imageVersionId' to be non-null");
        this.type = Codegen.stringProp("type").arg(type).require();
    }

    private ImageTemplateSharedImageVersionSourceResponse() {
        this.imageVersionId = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageTemplateSharedImageVersionSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String imageVersionId;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageTemplateSharedImageVersionSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageVersionId = defaults.imageVersionId;
    	      this.type = defaults.type;
        }

        public Builder imageVersionId(String imageVersionId) {
            this.imageVersionId = Objects.requireNonNull(imageVersionId);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public ImageTemplateSharedImageVersionSourceResponse build() {
            return new ImageTemplateSharedImageVersionSourceResponse(imageVersionId, type);
        }
    }
}
