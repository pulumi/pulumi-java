// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The API backend service
 * 
 */
public final class ApiResourceBackendServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiResourceBackendServiceArgs Empty = new ApiResourceBackendServiceArgs();

    /**
     * The service URL
     * 
     */
    @Import(name="serviceUrl")
    private @Nullable Output<String> serviceUrl;

    /**
     * @return The service URL
     * 
     */
    public Optional<Output<String>> serviceUrl() {
        return Optional.ofNullable(this.serviceUrl);
    }

    private ApiResourceBackendServiceArgs() {}

    private ApiResourceBackendServiceArgs(ApiResourceBackendServiceArgs $) {
        this.serviceUrl = $.serviceUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiResourceBackendServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiResourceBackendServiceArgs $;

        public Builder() {
            $ = new ApiResourceBackendServiceArgs();
        }

        public Builder(ApiResourceBackendServiceArgs defaults) {
            $ = new ApiResourceBackendServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param serviceUrl The service URL
         * 
         * @return builder
         * 
         */
        public Builder serviceUrl(@Nullable Output<String> serviceUrl) {
            $.serviceUrl = serviceUrl;
            return this;
        }

        /**
         * @param serviceUrl The service URL
         * 
         * @return builder
         * 
         */
        public Builder serviceUrl(String serviceUrl) {
            return serviceUrl(Output.of(serviceUrl));
        }

        public ApiResourceBackendServiceArgs build() {
            return $;
        }
    }

}
