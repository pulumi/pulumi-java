// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS, Premium_ZRS, or StandardSSD_ZRS.
 * 
 */
public final class DiskSkuResponse extends com.pulumi.resources.InvokeArgs {

    public static final DiskSkuResponse Empty = new DiskSkuResponse();

    /**
     * The sku name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The sku name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The sku tier.
     * 
     */
    @Import(name="tier", required=true)
    private String tier;

    /**
     * @return The sku tier.
     * 
     */
    public String tier() {
        return this.tier;
    }

    private DiskSkuResponse() {}

    private DiskSkuResponse(DiskSkuResponse $) {
        this.name = $.name;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskSkuResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskSkuResponse $;

        public Builder() {
            $ = new DiskSkuResponse();
        }

        public Builder(DiskSkuResponse defaults) {
            $ = new DiskSkuResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The sku name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param tier The sku tier.
         * 
         * @return builder
         * 
         */
        public Builder tier(String tier) {
            $.tier = tier;
            return this;
        }

        public DiskSkuResponse build() {
            $.tier = Objects.requireNonNull($.tier, "expected parameter 'tier' to be non-null");
            return $;
        }
    }

}
