// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.azurenative.appplatform.inputs.DeploymentInstanceResponse;
import com.pulumi.azurenative.appplatform.inputs.DeploymentSettingsResponse;
import com.pulumi.azurenative.appplatform.inputs.UserSourceInfoResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Deployment resource properties payload
 * 
 */
public final class DeploymentResourcePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final DeploymentResourcePropertiesResponse Empty = new DeploymentResourcePropertiesResponse();

    /**
     * Indicates whether the Deployment is active
     * 
     */
    @Import(name="active", required=true)
    private Boolean active;

    public Boolean active() {
        return this.active;
    }

    /**
     * App name of the deployment
     * 
     */
    @Import(name="appName", required=true)
    private String appName;

    public String appName() {
        return this.appName;
    }

    /**
     * Date time when the resource is created
     * 
     */
    @Import(name="createdTime", required=true)
    private String createdTime;

    public String createdTime() {
        return this.createdTime;
    }

    /**
     * Deployment settings of the Deployment
     * 
     */
    @Import(name="deploymentSettings")
    private @Nullable DeploymentSettingsResponse deploymentSettings;

    public Optional<DeploymentSettingsResponse> deploymentSettings() {
        return Optional.ofNullable(this.deploymentSettings);
    }

    /**
     * Collection of instances belong to the Deployment
     * 
     */
    @Import(name="instances", required=true)
    private List<DeploymentInstanceResponse> instances;

    public List<DeploymentInstanceResponse> instances() {
        return this.instances;
    }

    /**
     * Provisioning state of the Deployment
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Uploaded source information of the deployment.
     * 
     */
    @Import(name="source")
    private @Nullable UserSourceInfoResponse source;

    public Optional<UserSourceInfoResponse> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * Status of the Deployment
     * 
     */
    @Import(name="status", required=true)
    private String status;

    public String status() {
        return this.status;
    }

    private DeploymentResourcePropertiesResponse() {}

    private DeploymentResourcePropertiesResponse(DeploymentResourcePropertiesResponse $) {
        this.active = $.active;
        this.appName = $.appName;
        this.createdTime = $.createdTime;
        this.deploymentSettings = $.deploymentSettings;
        this.instances = $.instances;
        this.provisioningState = $.provisioningState;
        this.source = $.source;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentResourcePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentResourcePropertiesResponse $;

        public Builder() {
            $ = new DeploymentResourcePropertiesResponse();
        }

        public Builder(DeploymentResourcePropertiesResponse defaults) {
            $ = new DeploymentResourcePropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder active(Boolean active) {
            $.active = active;
            return this;
        }

        public Builder appName(String appName) {
            $.appName = appName;
            return this;
        }

        public Builder createdTime(String createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        public Builder deploymentSettings(@Nullable DeploymentSettingsResponse deploymentSettings) {
            $.deploymentSettings = deploymentSettings;
            return this;
        }

        public Builder instances(List<DeploymentInstanceResponse> instances) {
            $.instances = instances;
            return this;
        }

        public Builder instances(DeploymentInstanceResponse... instances) {
            return instances(List.of(instances));
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder source(@Nullable UserSourceInfoResponse source) {
            $.source = source;
            return this;
        }

        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public DeploymentResourcePropertiesResponse build() {
            $.active = Objects.requireNonNull($.active, "expected parameter 'active' to be non-null");
            $.appName = Objects.requireNonNull($.appName, "expected parameter 'appName' to be non-null");
            $.createdTime = Objects.requireNonNull($.createdTime, "expected parameter 'createdTime' to be non-null");
            $.instances = Objects.requireNonNull($.instances, "expected parameter 'instances' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
