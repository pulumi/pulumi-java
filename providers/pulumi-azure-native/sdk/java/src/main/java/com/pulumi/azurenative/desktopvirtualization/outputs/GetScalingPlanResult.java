// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization.outputs;

import com.pulumi.azurenative.desktopvirtualization.outputs.ResourceModelWithAllowedPropertySetResponseIdentity;
import com.pulumi.azurenative.desktopvirtualization.outputs.ResourceModelWithAllowedPropertySetResponsePlan;
import com.pulumi.azurenative.desktopvirtualization.outputs.ResourceModelWithAllowedPropertySetResponseSku;
import com.pulumi.azurenative.desktopvirtualization.outputs.ScalingHostPoolReferenceResponse;
import com.pulumi.azurenative.desktopvirtualization.outputs.ScalingScheduleResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetScalingPlanResult {
    /**
     * Description of scaling plan.
     * 
     */
    private final @Nullable String description;
    /**
     * The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
     * 
     */
    private final String etag;
    /**
     * Exclusion tag for scaling plan.
     * 
     */
    private final @Nullable String exclusionTag;
    /**
     * User friendly name of scaling plan.
     * 
     */
    private final @Nullable String friendlyName;
    /**
     * List of ScalingHostPoolReference definitions.
     * 
     */
    private final @Nullable List<ScalingHostPoolReferenceResponse> hostPoolReferences;
    /**
     * HostPool type for desktop.
     * 
     */
    private final @Nullable String hostPoolType;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    private final @Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    private final @Nullable String kind;
    /**
     * The geo-location where the resource lives
     * 
     */
    private final @Nullable String location;
    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
     */
    private final @Nullable String managedBy;
    /**
     * The name of the resource
     * 
     */
    private final String name;
    /**
     * ObjectId of scaling plan. (internal use)
     * 
     */
    private final String objectId;
    private final @Nullable ResourceModelWithAllowedPropertySetResponsePlan plan;
    /**
     * The ring number of scaling plan.
     * 
     */
    private final @Nullable Integer ring;
    /**
     * List of ScalingSchedule definitions.
     * 
     */
    private final @Nullable List<ScalingScheduleResponse> schedules;
    private final @Nullable ResourceModelWithAllowedPropertySetResponseSku sku;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Timezone of the scaling plan.
     * 
     */
    private final @Nullable String timeZone;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetScalingPlanResult(
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("exclusionTag") @Nullable String exclusionTag,
        @CustomType.Parameter("friendlyName") @Nullable String friendlyName,
        @CustomType.Parameter("hostPoolReferences") @Nullable List<ScalingHostPoolReferenceResponse> hostPoolReferences,
        @CustomType.Parameter("hostPoolType") @Nullable String hostPoolType,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identity") @Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity,
        @CustomType.Parameter("kind") @Nullable String kind,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("managedBy") @Nullable String managedBy,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("objectId") String objectId,
        @CustomType.Parameter("plan") @Nullable ResourceModelWithAllowedPropertySetResponsePlan plan,
        @CustomType.Parameter("ring") @Nullable Integer ring,
        @CustomType.Parameter("schedules") @Nullable List<ScalingScheduleResponse> schedules,
        @CustomType.Parameter("sku") @Nullable ResourceModelWithAllowedPropertySetResponseSku sku,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("timeZone") @Nullable String timeZone,
        @CustomType.Parameter("type") String type) {
        this.description = description;
        this.etag = etag;
        this.exclusionTag = exclusionTag;
        this.friendlyName = friendlyName;
        this.hostPoolReferences = hostPoolReferences;
        this.hostPoolType = hostPoolType;
        this.id = id;
        this.identity = identity;
        this.kind = kind;
        this.location = location;
        this.managedBy = managedBy;
        this.name = name;
        this.objectId = objectId;
        this.plan = plan;
        this.ring = ring;
        this.schedules = schedules;
        this.sku = sku;
        this.tags = tags;
        this.timeZone = timeZone;
        this.type = type;
    }

    /**
     * Description of scaling plan.
     * 
    */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
     * 
    */
    public String etag() {
        return this.etag;
    }
    /**
     * Exclusion tag for scaling plan.
     * 
    */
    public Optional<String> exclusionTag() {
        return Optional.ofNullable(this.exclusionTag);
    }
    /**
     * User friendly name of scaling plan.
     * 
    */
    public Optional<String> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }
    /**
     * List of ScalingHostPoolReference definitions.
     * 
    */
    public List<ScalingHostPoolReferenceResponse> hostPoolReferences() {
        return this.hostPoolReferences == null ? List.of() : this.hostPoolReferences;
    }
    /**
     * HostPool type for desktop.
     * 
    */
    public Optional<String> hostPoolType() {
        return Optional.ofNullable(this.hostPoolType);
    }
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
    */
    public String id() {
        return this.id;
    }
    public Optional<ResourceModelWithAllowedPropertySetResponseIdentity> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
    */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * The geo-location where the resource lives
     * 
    */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
    */
    public Optional<String> managedBy() {
        return Optional.ofNullable(this.managedBy);
    }
    /**
     * The name of the resource
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * ObjectId of scaling plan. (internal use)
     * 
    */
    public String objectId() {
        return this.objectId;
    }
    public Optional<ResourceModelWithAllowedPropertySetResponsePlan> plan() {
        return Optional.ofNullable(this.plan);
    }
    /**
     * The ring number of scaling plan.
     * 
    */
    public Optional<Integer> ring() {
        return Optional.ofNullable(this.ring);
    }
    /**
     * List of ScalingSchedule definitions.
     * 
    */
    public List<ScalingScheduleResponse> schedules() {
        return this.schedules == null ? List.of() : this.schedules;
    }
    public Optional<ResourceModelWithAllowedPropertySetResponseSku> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Timezone of the scaling plan.
     * 
    */
    public Optional<String> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
    */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScalingPlanResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private String etag;
        private @Nullable String exclusionTag;
        private @Nullable String friendlyName;
        private @Nullable List<ScalingHostPoolReferenceResponse> hostPoolReferences;
        private @Nullable String hostPoolType;
        private String id;
        private @Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity;
        private @Nullable String kind;
        private @Nullable String location;
        private @Nullable String managedBy;
        private String name;
        private String objectId;
        private @Nullable ResourceModelWithAllowedPropertySetResponsePlan plan;
        private @Nullable Integer ring;
        private @Nullable List<ScalingScheduleResponse> schedules;
        private @Nullable ResourceModelWithAllowedPropertySetResponseSku sku;
        private @Nullable Map<String,String> tags;
        private @Nullable String timeZone;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetScalingPlanResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.exclusionTag = defaults.exclusionTag;
    	      this.friendlyName = defaults.friendlyName;
    	      this.hostPoolReferences = defaults.hostPoolReferences;
    	      this.hostPoolType = defaults.hostPoolType;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.managedBy = defaults.managedBy;
    	      this.name = defaults.name;
    	      this.objectId = defaults.objectId;
    	      this.plan = defaults.plan;
    	      this.ring = defaults.ring;
    	      this.schedules = defaults.schedules;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.timeZone = defaults.timeZone;
    	      this.type = defaults.type;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder exclusionTag(@Nullable String exclusionTag) {
            this.exclusionTag = exclusionTag;
            return this;
        }
        public Builder friendlyName(@Nullable String friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }
        public Builder hostPoolReferences(@Nullable List<ScalingHostPoolReferenceResponse> hostPoolReferences) {
            this.hostPoolReferences = hostPoolReferences;
            return this;
        }
        public Builder hostPoolReferences(ScalingHostPoolReferenceResponse... hostPoolReferences) {
            return hostPoolReferences(List.of(hostPoolReferences));
        }
        public Builder hostPoolType(@Nullable String hostPoolType) {
            this.hostPoolType = hostPoolType;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identity(@Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity) {
            this.identity = identity;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder managedBy(@Nullable String managedBy) {
            this.managedBy = managedBy;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder objectId(String objectId) {
            this.objectId = Objects.requireNonNull(objectId);
            return this;
        }
        public Builder plan(@Nullable ResourceModelWithAllowedPropertySetResponsePlan plan) {
            this.plan = plan;
            return this;
        }
        public Builder ring(@Nullable Integer ring) {
            this.ring = ring;
            return this;
        }
        public Builder schedules(@Nullable List<ScalingScheduleResponse> schedules) {
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(ScalingScheduleResponse... schedules) {
            return schedules(List.of(schedules));
        }
        public Builder sku(@Nullable ResourceModelWithAllowedPropertySetResponseSku sku) {
            this.sku = sku;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder timeZone(@Nullable String timeZone) {
            this.timeZone = timeZone;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetScalingPlanResult build() {
            return new GetScalingPlanResult(description, etag, exclusionTag, friendlyName, hostPoolReferences, hostPoolType, id, identity, kind, location, managedBy, name, objectId, plan, ring, schedules, sku, tags, timeZone, type);
        }
    }
}
