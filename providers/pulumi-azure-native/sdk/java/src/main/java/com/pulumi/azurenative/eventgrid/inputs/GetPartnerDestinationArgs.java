// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetPartnerDestinationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPartnerDestinationArgs Empty = new GetPartnerDestinationArgs();

    /**
     * Name of the partner destination.
     * 
     */
    @Import(name="partnerDestinationName", required=true)
    private Output<String> partnerDestinationName;

    /**
     * @return Name of the partner destination.
     * 
     */
    public Output<String> partnerDestinationName() {
        return this.partnerDestinationName;
    }

    /**
     * The name of the resource group within the user&#39;s subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetPartnerDestinationArgs() {}

    private GetPartnerDestinationArgs(GetPartnerDestinationArgs $) {
        this.partnerDestinationName = $.partnerDestinationName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPartnerDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPartnerDestinationArgs $;

        public Builder() {
            $ = new GetPartnerDestinationArgs();
        }

        public Builder(GetPartnerDestinationArgs defaults) {
            $ = new GetPartnerDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param partnerDestinationName Name of the partner destination.
         * 
         * @return builder
         * 
         */
        public Builder partnerDestinationName(Output<String> partnerDestinationName) {
            $.partnerDestinationName = partnerDestinationName;
            return this;
        }

        /**
         * @param partnerDestinationName Name of the partner destination.
         * 
         * @return builder
         * 
         */
        public Builder partnerDestinationName(String partnerDestinationName) {
            return partnerDestinationName(Output.of(partnerDestinationName));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetPartnerDestinationArgs build() {
            $.partnerDestinationName = Objects.requireNonNull($.partnerDestinationName, "expected parameter 'partnerDestinationName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
