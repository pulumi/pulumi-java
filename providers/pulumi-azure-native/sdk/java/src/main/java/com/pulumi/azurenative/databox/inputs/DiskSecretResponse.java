// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databox.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Contains all the secrets of a Disk.
 * 
 */
public final class DiskSecretResponse extends com.pulumi.resources.InvokeArgs {

    public static final DiskSecretResponse Empty = new DiskSecretResponse();

    /**
     * Bit Locker key of the disk which can be used to unlock the disk to copy data.
     * 
     */
    @Import(name="bitLockerKey", required=true)
    private String bitLockerKey;

    public String bitLockerKey() {
        return this.bitLockerKey;
    }

    /**
     * Serial number of the assigned disk.
     * 
     */
    @Import(name="diskSerialNumber", required=true)
    private String diskSerialNumber;

    public String diskSerialNumber() {
        return this.diskSerialNumber;
    }

    private DiskSecretResponse() {}

    private DiskSecretResponse(DiskSecretResponse $) {
        this.bitLockerKey = $.bitLockerKey;
        this.diskSerialNumber = $.diskSerialNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskSecretResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskSecretResponse $;

        public Builder() {
            $ = new DiskSecretResponse();
        }

        public Builder(DiskSecretResponse defaults) {
            $ = new DiskSecretResponse(Objects.requireNonNull(defaults));
        }

        public Builder bitLockerKey(String bitLockerKey) {
            $.bitLockerKey = bitLockerKey;
            return this;
        }

        public Builder diskSerialNumber(String diskSerialNumber) {
            $.diskSerialNumber = diskSerialNumber;
            return this;
        }

        public DiskSecretResponse build() {
            $.bitLockerKey = Objects.requireNonNull($.bitLockerKey, "expected parameter 'bitLockerKey' to be non-null");
            $.diskSerialNumber = Objects.requireNonNull($.diskSerialNumber, "expected parameter 'diskSerialNumber' to be non-null");
            return $;
        }
    }

}
