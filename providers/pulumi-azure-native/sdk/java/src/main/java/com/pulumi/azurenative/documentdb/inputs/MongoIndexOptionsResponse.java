// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Cosmos DB MongoDB collection index options
 * 
 */
public final class MongoIndexOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final MongoIndexOptionsResponse Empty = new MongoIndexOptionsResponse();

    /**
     * Expire after seconds
     * 
     */
    @Import(name="expireAfterSeconds")
    private @Nullable Integer expireAfterSeconds;

    public Optional<Integer> expireAfterSeconds() {
        return Optional.ofNullable(this.expireAfterSeconds);
    }

    /**
     * Is unique or not
     * 
     */
    @Import(name="unique")
    private @Nullable Boolean unique;

    public Optional<Boolean> unique() {
        return Optional.ofNullable(this.unique);
    }

    private MongoIndexOptionsResponse() {}

    private MongoIndexOptionsResponse(MongoIndexOptionsResponse $) {
        this.expireAfterSeconds = $.expireAfterSeconds;
        this.unique = $.unique;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MongoIndexOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MongoIndexOptionsResponse $;

        public Builder() {
            $ = new MongoIndexOptionsResponse();
        }

        public Builder(MongoIndexOptionsResponse defaults) {
            $ = new MongoIndexOptionsResponse(Objects.requireNonNull(defaults));
        }

        public Builder expireAfterSeconds(@Nullable Integer expireAfterSeconds) {
            $.expireAfterSeconds = expireAfterSeconds;
            return this;
        }

        public Builder unique(@Nullable Boolean unique) {
            $.unique = unique;
            return this;
        }

        public MongoIndexOptionsResponse build() {
            return $;
        }
    }

}
