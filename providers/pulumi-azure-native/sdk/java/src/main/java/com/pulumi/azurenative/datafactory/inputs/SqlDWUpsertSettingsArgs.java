// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Sql DW upsert option settings
 * 
 */
public final class SqlDWUpsertSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlDWUpsertSettingsArgs Empty = new SqlDWUpsertSettingsArgs();

    /**
     * Schema name for interim table. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="interimSchemaName")
    private @Nullable Output<Object> interimSchemaName;

    /**
     * @return Schema name for interim table. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Output<Object>> interimSchemaName() {
        return Optional.ofNullable(this.interimSchemaName);
    }

    /**
     * Key column names for unique row identification. Type: array of strings (or Expression with resultType array of strings).
     * 
     */
    @Import(name="keys")
    private @Nullable Output<Object> keys;

    /**
     * @return Key column names for unique row identification. Type: array of strings (or Expression with resultType array of strings).
     * 
     */
    public Optional<Output<Object>> keys() {
        return Optional.ofNullable(this.keys);
    }

    private SqlDWUpsertSettingsArgs() {}

    private SqlDWUpsertSettingsArgs(SqlDWUpsertSettingsArgs $) {
        this.interimSchemaName = $.interimSchemaName;
        this.keys = $.keys;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlDWUpsertSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlDWUpsertSettingsArgs $;

        public Builder() {
            $ = new SqlDWUpsertSettingsArgs();
        }

        public Builder(SqlDWUpsertSettingsArgs defaults) {
            $ = new SqlDWUpsertSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interimSchemaName Schema name for interim table. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder interimSchemaName(@Nullable Output<Object> interimSchemaName) {
            $.interimSchemaName = interimSchemaName;
            return this;
        }

        /**
         * @param interimSchemaName Schema name for interim table. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder interimSchemaName(Object interimSchemaName) {
            return interimSchemaName(Output.of(interimSchemaName));
        }

        /**
         * @param keys Key column names for unique row identification. Type: array of strings (or Expression with resultType array of strings).
         * 
         * @return builder
         * 
         */
        public Builder keys(@Nullable Output<Object> keys) {
            $.keys = keys;
            return this;
        }

        /**
         * @param keys Key column names for unique row identification. Type: array of strings (or Expression with resultType array of strings).
         * 
         * @return builder
         * 
         */
        public Builder keys(Object keys) {
            return keys(Output.of(keys));
        }

        public SqlDWUpsertSettingsArgs build() {
            return $;
        }
    }

}
