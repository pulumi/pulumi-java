// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.inputs;

import com.pulumi.azurenative.databoxedge.enums.ShareAccessType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * The mapping between a particular user and the access type on the SMB share.
 * 
 */
public final class UserAccessRightArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserAccessRightArgs Empty = new UserAccessRightArgs();

    /**
     * Type of access to be allowed for the user.
     * 
     */
    @Import(name="accessType", required=true)
      private final Output<Either<String,ShareAccessType>> accessType;

    public Output<Either<String,ShareAccessType>> accessType() {
        return this.accessType;
    }

    /**
     * User ID (already existing in the device).
     * 
     */
    @Import(name="userId", required=true)
      private final Output<String> userId;

    public Output<String> userId() {
        return this.userId;
    }

    public UserAccessRightArgs(
        Output<Either<String,ShareAccessType>> accessType,
        Output<String> userId) {
        this.accessType = Objects.requireNonNull(accessType, "expected parameter 'accessType' to be non-null");
        this.userId = Objects.requireNonNull(userId, "expected parameter 'userId' to be non-null");
    }

    private UserAccessRightArgs() {
        this.accessType = Codegen.empty();
        this.userId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserAccessRightArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Either<String,ShareAccessType>> accessType;
        private Output<String> userId;

        public Builder() {
    	      // Empty
        }

        public Builder(UserAccessRightArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessType = defaults.accessType;
    	      this.userId = defaults.userId;
        }

        public Builder accessType(Output<Either<String,ShareAccessType>> accessType) {
            this.accessType = Objects.requireNonNull(accessType);
            return this;
        }
        public Builder accessType(Either<String,ShareAccessType> accessType) {
            this.accessType = Output.of(Objects.requireNonNull(accessType));
            return this;
        }
        public Builder userId(Output<String> userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }
        public Builder userId(String userId) {
            this.userId = Output.of(Objects.requireNonNull(userId));
            return this;
        }        public UserAccessRightArgs build() {
            return new UserAccessRightArgs(accessType, userId);
        }
    }
}
