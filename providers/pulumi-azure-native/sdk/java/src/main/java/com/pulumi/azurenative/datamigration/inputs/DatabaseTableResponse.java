// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Table properties
 * 
 */
public final class DatabaseTableResponse extends com.pulumi.resources.InvokeArgs {

    public static final DatabaseTableResponse Empty = new DatabaseTableResponse();

    /**
     * Indicates whether table is empty or not
     * 
     */
    @Import(name="hasRows", required=true)
    private Boolean hasRows;

    public Boolean hasRows() {
        return this.hasRows;
    }

    /**
     * Schema-qualified name of the table
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    private DatabaseTableResponse() {}

    private DatabaseTableResponse(DatabaseTableResponse $) {
        this.hasRows = $.hasRows;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseTableResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseTableResponse $;

        public Builder() {
            $ = new DatabaseTableResponse();
        }

        public Builder(DatabaseTableResponse defaults) {
            $ = new DatabaseTableResponse(Objects.requireNonNull(defaults));
        }

        public Builder hasRows(Boolean hasRows) {
            $.hasRows = hasRows;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public DatabaseTableResponse build() {
            $.hasRows = Objects.requireNonNull($.hasRows, "expected parameter 'hasRows' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
