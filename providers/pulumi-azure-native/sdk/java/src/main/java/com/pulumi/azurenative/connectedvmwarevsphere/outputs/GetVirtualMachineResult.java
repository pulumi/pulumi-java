// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere.outputs;

import com.pulumi.azurenative.connectedvmwarevsphere.outputs.ExtendedLocationResponse;
import com.pulumi.azurenative.connectedvmwarevsphere.outputs.GuestAgentProfileResponse;
import com.pulumi.azurenative.connectedvmwarevsphere.outputs.HardwareProfileResponse;
import com.pulumi.azurenative.connectedvmwarevsphere.outputs.IdentityResponse;
import com.pulumi.azurenative.connectedvmwarevsphere.outputs.NetworkProfileResponse;
import com.pulumi.azurenative.connectedvmwarevsphere.outputs.OsProfileResponse;
import com.pulumi.azurenative.connectedvmwarevsphere.outputs.PlacementProfileResponse;
import com.pulumi.azurenative.connectedvmwarevsphere.outputs.ResourceStatusResponse;
import com.pulumi.azurenative.connectedvmwarevsphere.outputs.StorageProfileResponse;
import com.pulumi.azurenative.connectedvmwarevsphere.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualMachineResult {
    /**
     * @return Gets the name of the corresponding resource in Kubernetes.
     * 
     */
    private final String customResourceName;
    /**
     * @return Gets or sets the extended location.
     * 
     */
    private final @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * @return Firmware type
     * 
     */
    private final @Nullable String firmwareType;
    /**
     * @return Gets or sets the folder path of the vm.
     * 
     */
    private final String folderPath;
    /**
     * @return Guest agent status properties.
     * 
     */
    private final @Nullable GuestAgentProfileResponse guestAgentProfile;
    /**
     * @return Hardware properties.
     * 
     */
    private final @Nullable HardwareProfileResponse hardwareProfile;
    /**
     * @return Gets or sets the Id.
     * 
     */
    private final String id;
    /**
     * @return The identity of the resource.
     * 
     */
    private final @Nullable IdentityResponse identity;
    /**
     * @return Gets or sets the instance uuid of the vm.
     * 
     */
    private final String instanceUuid;
    /**
     * @return Gets or sets the inventory Item ID for the virtual machine.
     * 
     */
    private final @Nullable String inventoryItemId;
    /**
     * @return Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    private final @Nullable String kind;
    /**
     * @return Gets or sets the location.
     * 
     */
    private final String location;
    /**
     * @return Gets or sets the vCenter Managed Object name for the virtual machine.
     * 
     */
    private final String moName;
    /**
     * @return Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
     * 
     */
    private final @Nullable String moRefId;
    /**
     * @return Gets or sets the name.
     * 
     */
    private final String name;
    /**
     * @return Network properties.
     * 
     */
    private final @Nullable NetworkProfileResponse networkProfile;
    /**
     * @return OS properties.
     * 
     */
    private final @Nullable OsProfileResponse osProfile;
    /**
     * @return Placement properties.
     * 
     */
    private final @Nullable PlacementProfileResponse placementProfile;
    /**
     * @return Gets the power state of the virtual machine.
     * 
     */
    private final String powerState;
    /**
     * @return Gets or sets the provisioning state.
     * 
     */
    private final String provisioningState;
    /**
     * @return Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will
     * deploy.
     * 
     */
    private final @Nullable String resourcePoolId;
    /**
     * @return Gets or sets the SMBIOS UUID of the vm.
     * 
     */
    private final @Nullable String smbiosUuid;
    /**
     * @return The resource status information.
     * 
     */
    private final List<ResourceStatusResponse> statuses;
    /**
     * @return Storage properties.
     * 
     */
    private final @Nullable StorageProfileResponse storageProfile;
    /**
     * @return The system data.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * @return Gets or sets the Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return Gets or sets the ARM Id of the template resource to deploy the virtual machine.
     * 
     */
    private final @Nullable String templateId;
    /**
     * @return Gets or sets the type of the resource.
     * 
     */
    private final String type;
    /**
     * @return Gets or sets a unique identifier for this resource.
     * 
     */
    private final String uuid;
    /**
     * @return Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
     * 
     */
    private final @Nullable String vCenterId;
    /**
     * @return Gets or sets a unique identifier for the vm resource.
     * 
     */
    private final String vmId;

    @CustomType.Constructor
    private GetVirtualMachineResult(
        @CustomType.Parameter("customResourceName") String customResourceName,
        @CustomType.Parameter("extendedLocation") @Nullable ExtendedLocationResponse extendedLocation,
        @CustomType.Parameter("firmwareType") @Nullable String firmwareType,
        @CustomType.Parameter("folderPath") String folderPath,
        @CustomType.Parameter("guestAgentProfile") @Nullable GuestAgentProfileResponse guestAgentProfile,
        @CustomType.Parameter("hardwareProfile") @Nullable HardwareProfileResponse hardwareProfile,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identity") @Nullable IdentityResponse identity,
        @CustomType.Parameter("instanceUuid") String instanceUuid,
        @CustomType.Parameter("inventoryItemId") @Nullable String inventoryItemId,
        @CustomType.Parameter("kind") @Nullable String kind,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("moName") String moName,
        @CustomType.Parameter("moRefId") @Nullable String moRefId,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkProfile") @Nullable NetworkProfileResponse networkProfile,
        @CustomType.Parameter("osProfile") @Nullable OsProfileResponse osProfile,
        @CustomType.Parameter("placementProfile") @Nullable PlacementProfileResponse placementProfile,
        @CustomType.Parameter("powerState") String powerState,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("resourcePoolId") @Nullable String resourcePoolId,
        @CustomType.Parameter("smbiosUuid") @Nullable String smbiosUuid,
        @CustomType.Parameter("statuses") List<ResourceStatusResponse> statuses,
        @CustomType.Parameter("storageProfile") @Nullable StorageProfileResponse storageProfile,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("templateId") @Nullable String templateId,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uuid") String uuid,
        @CustomType.Parameter("vCenterId") @Nullable String vCenterId,
        @CustomType.Parameter("vmId") String vmId) {
        this.customResourceName = customResourceName;
        this.extendedLocation = extendedLocation;
        this.firmwareType = firmwareType;
        this.folderPath = folderPath;
        this.guestAgentProfile = guestAgentProfile;
        this.hardwareProfile = hardwareProfile;
        this.id = id;
        this.identity = identity;
        this.instanceUuid = instanceUuid;
        this.inventoryItemId = inventoryItemId;
        this.kind = kind;
        this.location = location;
        this.moName = moName;
        this.moRefId = moRefId;
        this.name = name;
        this.networkProfile = networkProfile;
        this.osProfile = osProfile;
        this.placementProfile = placementProfile;
        this.powerState = powerState;
        this.provisioningState = provisioningState;
        this.resourcePoolId = resourcePoolId;
        this.smbiosUuid = smbiosUuid;
        this.statuses = statuses;
        this.storageProfile = storageProfile;
        this.systemData = systemData;
        this.tags = tags;
        this.templateId = templateId;
        this.type = type;
        this.uuid = uuid;
        this.vCenterId = vCenterId;
        this.vmId = vmId;
    }

    /**
     * @return Gets the name of the corresponding resource in Kubernetes.
     * 
     */
    public String customResourceName() {
        return this.customResourceName;
    }
    /**
     * @return Gets or sets the extended location.
     * 
     */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * @return Firmware type
     * 
     */
    public Optional<String> firmwareType() {
        return Optional.ofNullable(this.firmwareType);
    }
    /**
     * @return Gets or sets the folder path of the vm.
     * 
     */
    public String folderPath() {
        return this.folderPath;
    }
    /**
     * @return Guest agent status properties.
     * 
     */
    public Optional<GuestAgentProfileResponse> guestAgentProfile() {
        return Optional.ofNullable(this.guestAgentProfile);
    }
    /**
     * @return Hardware properties.
     * 
     */
    public Optional<HardwareProfileResponse> hardwareProfile() {
        return Optional.ofNullable(this.hardwareProfile);
    }
    /**
     * @return Gets or sets the Id.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The identity of the resource.
     * 
     */
    public Optional<IdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return Gets or sets the instance uuid of the vm.
     * 
     */
    public String instanceUuid() {
        return this.instanceUuid;
    }
    /**
     * @return Gets or sets the inventory Item ID for the virtual machine.
     * 
     */
    public Optional<String> inventoryItemId() {
        return Optional.ofNullable(this.inventoryItemId);
    }
    /**
     * @return Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return Gets or sets the location.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Gets or sets the vCenter Managed Object name for the virtual machine.
     * 
     */
    public String moName() {
        return this.moName;
    }
    /**
     * @return Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
     * 
     */
    public Optional<String> moRefId() {
        return Optional.ofNullable(this.moRefId);
    }
    /**
     * @return Gets or sets the name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Network properties.
     * 
     */
    public Optional<NetworkProfileResponse> networkProfile() {
        return Optional.ofNullable(this.networkProfile);
    }
    /**
     * @return OS properties.
     * 
     */
    public Optional<OsProfileResponse> osProfile() {
        return Optional.ofNullable(this.osProfile);
    }
    /**
     * @return Placement properties.
     * 
     */
    public Optional<PlacementProfileResponse> placementProfile() {
        return Optional.ofNullable(this.placementProfile);
    }
    /**
     * @return Gets the power state of the virtual machine.
     * 
     */
    public String powerState() {
        return this.powerState;
    }
    /**
     * @return Gets or sets the provisioning state.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will
     * deploy.
     * 
     */
    public Optional<String> resourcePoolId() {
        return Optional.ofNullable(this.resourcePoolId);
    }
    /**
     * @return Gets or sets the SMBIOS UUID of the vm.
     * 
     */
    public Optional<String> smbiosUuid() {
        return Optional.ofNullable(this.smbiosUuid);
    }
    /**
     * @return The resource status information.
     * 
     */
    public List<ResourceStatusResponse> statuses() {
        return this.statuses;
    }
    /**
     * @return Storage properties.
     * 
     */
    public Optional<StorageProfileResponse> storageProfile() {
        return Optional.ofNullable(this.storageProfile);
    }
    /**
     * @return The system data.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Gets or sets the Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Gets or sets the ARM Id of the template resource to deploy the virtual machine.
     * 
     */
    public Optional<String> templateId() {
        return Optional.ofNullable(this.templateId);
    }
    /**
     * @return Gets or sets the type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Gets or sets a unique identifier for this resource.
     * 
     */
    public String uuid() {
        return this.uuid;
    }
    /**
     * @return Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
     * 
     */
    public Optional<String> vCenterId() {
        return Optional.ofNullable(this.vCenterId);
    }
    /**
     * @return Gets or sets a unique identifier for the vm resource.
     * 
     */
    public String vmId() {
        return this.vmId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualMachineResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String customResourceName;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private @Nullable String firmwareType;
        private String folderPath;
        private @Nullable GuestAgentProfileResponse guestAgentProfile;
        private @Nullable HardwareProfileResponse hardwareProfile;
        private String id;
        private @Nullable IdentityResponse identity;
        private String instanceUuid;
        private @Nullable String inventoryItemId;
        private @Nullable String kind;
        private String location;
        private String moName;
        private @Nullable String moRefId;
        private String name;
        private @Nullable NetworkProfileResponse networkProfile;
        private @Nullable OsProfileResponse osProfile;
        private @Nullable PlacementProfileResponse placementProfile;
        private String powerState;
        private String provisioningState;
        private @Nullable String resourcePoolId;
        private @Nullable String smbiosUuid;
        private List<ResourceStatusResponse> statuses;
        private @Nullable StorageProfileResponse storageProfile;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private @Nullable String templateId;
        private String type;
        private String uuid;
        private @Nullable String vCenterId;
        private String vmId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualMachineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customResourceName = defaults.customResourceName;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.firmwareType = defaults.firmwareType;
    	      this.folderPath = defaults.folderPath;
    	      this.guestAgentProfile = defaults.guestAgentProfile;
    	      this.hardwareProfile = defaults.hardwareProfile;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.instanceUuid = defaults.instanceUuid;
    	      this.inventoryItemId = defaults.inventoryItemId;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.moName = defaults.moName;
    	      this.moRefId = defaults.moRefId;
    	      this.name = defaults.name;
    	      this.networkProfile = defaults.networkProfile;
    	      this.osProfile = defaults.osProfile;
    	      this.placementProfile = defaults.placementProfile;
    	      this.powerState = defaults.powerState;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourcePoolId = defaults.resourcePoolId;
    	      this.smbiosUuid = defaults.smbiosUuid;
    	      this.statuses = defaults.statuses;
    	      this.storageProfile = defaults.storageProfile;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.templateId = defaults.templateId;
    	      this.type = defaults.type;
    	      this.uuid = defaults.uuid;
    	      this.vCenterId = defaults.vCenterId;
    	      this.vmId = defaults.vmId;
        }

        public Builder customResourceName(String customResourceName) {
            this.customResourceName = Objects.requireNonNull(customResourceName);
            return this;
        }
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        public Builder firmwareType(@Nullable String firmwareType) {
            this.firmwareType = firmwareType;
            return this;
        }
        public Builder folderPath(String folderPath) {
            this.folderPath = Objects.requireNonNull(folderPath);
            return this;
        }
        public Builder guestAgentProfile(@Nullable GuestAgentProfileResponse guestAgentProfile) {
            this.guestAgentProfile = guestAgentProfile;
            return this;
        }
        public Builder hardwareProfile(@Nullable HardwareProfileResponse hardwareProfile) {
            this.hardwareProfile = hardwareProfile;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identity(@Nullable IdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        public Builder instanceUuid(String instanceUuid) {
            this.instanceUuid = Objects.requireNonNull(instanceUuid);
            return this;
        }
        public Builder inventoryItemId(@Nullable String inventoryItemId) {
            this.inventoryItemId = inventoryItemId;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder moName(String moName) {
            this.moName = Objects.requireNonNull(moName);
            return this;
        }
        public Builder moRefId(@Nullable String moRefId) {
            this.moRefId = moRefId;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkProfile(@Nullable NetworkProfileResponse networkProfile) {
            this.networkProfile = networkProfile;
            return this;
        }
        public Builder osProfile(@Nullable OsProfileResponse osProfile) {
            this.osProfile = osProfile;
            return this;
        }
        public Builder placementProfile(@Nullable PlacementProfileResponse placementProfile) {
            this.placementProfile = placementProfile;
            return this;
        }
        public Builder powerState(String powerState) {
            this.powerState = Objects.requireNonNull(powerState);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder resourcePoolId(@Nullable String resourcePoolId) {
            this.resourcePoolId = resourcePoolId;
            return this;
        }
        public Builder smbiosUuid(@Nullable String smbiosUuid) {
            this.smbiosUuid = smbiosUuid;
            return this;
        }
        public Builder statuses(List<ResourceStatusResponse> statuses) {
            this.statuses = Objects.requireNonNull(statuses);
            return this;
        }
        public Builder statuses(ResourceStatusResponse... statuses) {
            return statuses(List.of(statuses));
        }
        public Builder storageProfile(@Nullable StorageProfileResponse storageProfile) {
            this.storageProfile = storageProfile;
            return this;
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder templateId(@Nullable String templateId) {
            this.templateId = templateId;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uuid(String uuid) {
            this.uuid = Objects.requireNonNull(uuid);
            return this;
        }
        public Builder vCenterId(@Nullable String vCenterId) {
            this.vCenterId = vCenterId;
            return this;
        }
        public Builder vmId(String vmId) {
            this.vmId = Objects.requireNonNull(vmId);
            return this;
        }        public GetVirtualMachineResult build() {
            return new GetVirtualMachineResult(customResourceName, extendedLocation, firmwareType, folderPath, guestAgentProfile, hardwareProfile, id, identity, instanceUuid, inventoryItemId, kind, location, moName, moRefId, name, networkProfile, osProfile, placementProfile, powerState, provisioningState, resourcePoolId, smbiosUuid, statuses, storageProfile, systemData, tags, templateId, type, uuid, vCenterId, vmId);
        }
    }
}
