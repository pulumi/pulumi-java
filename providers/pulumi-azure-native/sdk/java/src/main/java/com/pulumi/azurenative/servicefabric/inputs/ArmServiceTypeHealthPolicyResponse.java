// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents the health policy used to evaluate the health of services belonging to a service type.
 * 
 */
public final class ArmServiceTypeHealthPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final ArmServiceTypeHealthPolicyResponse Empty = new ArmServiceTypeHealthPolicyResponse();

    /**
     * The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.
     * 
     */
    @Import(name="maxPercentUnhealthyPartitionsPerService")
      private final @Nullable Integer maxPercentUnhealthyPartitionsPerService;

    public Optional<Integer> maxPercentUnhealthyPartitionsPerService() {
        return this.maxPercentUnhealthyPartitionsPerService == null ? Optional.empty() : Optional.ofNullable(this.maxPercentUnhealthyPartitionsPerService);
    }

    /**
     * The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.
     * 
     */
    @Import(name="maxPercentUnhealthyReplicasPerPartition")
      private final @Nullable Integer maxPercentUnhealthyReplicasPerPartition;

    public Optional<Integer> maxPercentUnhealthyReplicasPerPartition() {
        return this.maxPercentUnhealthyReplicasPerPartition == null ? Optional.empty() : Optional.ofNullable(this.maxPercentUnhealthyReplicasPerPartition);
    }

    /**
     * The maximum percentage of services allowed to be unhealthy before your application is considered in error.
     * 
     */
    @Import(name="maxPercentUnhealthyServices")
      private final @Nullable Integer maxPercentUnhealthyServices;

    public Optional<Integer> maxPercentUnhealthyServices() {
        return this.maxPercentUnhealthyServices == null ? Optional.empty() : Optional.ofNullable(this.maxPercentUnhealthyServices);
    }

    public ArmServiceTypeHealthPolicyResponse(
        @Nullable Integer maxPercentUnhealthyPartitionsPerService,
        @Nullable Integer maxPercentUnhealthyReplicasPerPartition,
        @Nullable Integer maxPercentUnhealthyServices) {
        this.maxPercentUnhealthyPartitionsPerService = Codegen.integerProp("maxPercentUnhealthyPartitionsPerService").arg(maxPercentUnhealthyPartitionsPerService).def(0).getNullable();
        this.maxPercentUnhealthyReplicasPerPartition = Codegen.integerProp("maxPercentUnhealthyReplicasPerPartition").arg(maxPercentUnhealthyReplicasPerPartition).def(0).getNullable();
        this.maxPercentUnhealthyServices = Codegen.integerProp("maxPercentUnhealthyServices").arg(maxPercentUnhealthyServices).def(0).getNullable();
    }

    private ArmServiceTypeHealthPolicyResponse() {
        this.maxPercentUnhealthyPartitionsPerService = null;
        this.maxPercentUnhealthyReplicasPerPartition = null;
        this.maxPercentUnhealthyServices = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ArmServiceTypeHealthPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer maxPercentUnhealthyPartitionsPerService;
        private @Nullable Integer maxPercentUnhealthyReplicasPerPartition;
        private @Nullable Integer maxPercentUnhealthyServices;

        public Builder() {
    	      // Empty
        }

        public Builder(ArmServiceTypeHealthPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxPercentUnhealthyPartitionsPerService = defaults.maxPercentUnhealthyPartitionsPerService;
    	      this.maxPercentUnhealthyReplicasPerPartition = defaults.maxPercentUnhealthyReplicasPerPartition;
    	      this.maxPercentUnhealthyServices = defaults.maxPercentUnhealthyServices;
        }

        public Builder maxPercentUnhealthyPartitionsPerService(@Nullable Integer maxPercentUnhealthyPartitionsPerService) {
            this.maxPercentUnhealthyPartitionsPerService = maxPercentUnhealthyPartitionsPerService;
            return this;
        }
        public Builder maxPercentUnhealthyReplicasPerPartition(@Nullable Integer maxPercentUnhealthyReplicasPerPartition) {
            this.maxPercentUnhealthyReplicasPerPartition = maxPercentUnhealthyReplicasPerPartition;
            return this;
        }
        public Builder maxPercentUnhealthyServices(@Nullable Integer maxPercentUnhealthyServices) {
            this.maxPercentUnhealthyServices = maxPercentUnhealthyServices;
            return this;
        }        public ArmServiceTypeHealthPolicyResponse build() {
            return new ArmServiceTypeHealthPolicyResponse(maxPercentUnhealthyPartitionsPerService, maxPercentUnhealthyReplicasPerPartition, maxPercentUnhealthyServices);
        }
    }
}
