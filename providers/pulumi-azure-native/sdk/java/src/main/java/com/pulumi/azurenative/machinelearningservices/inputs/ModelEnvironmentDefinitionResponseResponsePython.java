// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Settings for a Python environment.
 * 
 */
public final class ModelEnvironmentDefinitionResponseResponsePython extends com.pulumi.resources.InvokeArgs {

    public static final ModelEnvironmentDefinitionResponseResponsePython Empty = new ModelEnvironmentDefinitionResponseResponsePython();

    @Import(name="baseCondaEnvironment")
    private @Nullable String baseCondaEnvironment;

    public Optional<String> baseCondaEnvironment() {
        return Optional.ofNullable(this.baseCondaEnvironment);
    }

    /**
     * A JObject containing Conda dependencies.
     * 
     */
    @Import(name="condaDependencies")
    private @Nullable Object condaDependencies;

    /**
     * @return A JObject containing Conda dependencies.
     * 
     */
    public Optional<Object> condaDependencies() {
        return Optional.ofNullable(this.condaDependencies);
    }

    /**
     * The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
     * 
     */
    @Import(name="interpreterPath")
    private @Nullable String interpreterPath;

    /**
     * @return The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
     * 
     */
    public Optional<String> interpreterPath() {
        return Optional.ofNullable(this.interpreterPath);
    }

    /**
     * True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
     * 
     */
    @Import(name="userManagedDependencies")
    private @Nullable Boolean userManagedDependencies;

    /**
     * @return True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
     * 
     */
    public Optional<Boolean> userManagedDependencies() {
        return Optional.ofNullable(this.userManagedDependencies);
    }

    private ModelEnvironmentDefinitionResponseResponsePython() {}

    private ModelEnvironmentDefinitionResponseResponsePython(ModelEnvironmentDefinitionResponseResponsePython $) {
        this.baseCondaEnvironment = $.baseCondaEnvironment;
        this.condaDependencies = $.condaDependencies;
        this.interpreterPath = $.interpreterPath;
        this.userManagedDependencies = $.userManagedDependencies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelEnvironmentDefinitionResponseResponsePython defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelEnvironmentDefinitionResponseResponsePython $;

        public Builder() {
            $ = new ModelEnvironmentDefinitionResponseResponsePython();
        }

        public Builder(ModelEnvironmentDefinitionResponseResponsePython defaults) {
            $ = new ModelEnvironmentDefinitionResponseResponsePython(Objects.requireNonNull(defaults));
        }

        public Builder baseCondaEnvironment(@Nullable String baseCondaEnvironment) {
            $.baseCondaEnvironment = baseCondaEnvironment;
            return this;
        }

        /**
         * @param condaDependencies A JObject containing Conda dependencies.
         * 
         * @return builder
         * 
         */
        public Builder condaDependencies(@Nullable Object condaDependencies) {
            $.condaDependencies = condaDependencies;
            return this;
        }

        /**
         * @param interpreterPath The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
         * 
         * @return builder
         * 
         */
        public Builder interpreterPath(@Nullable String interpreterPath) {
            $.interpreterPath = interpreterPath;
            return this;
        }

        /**
         * @param userManagedDependencies True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
         * 
         * @return builder
         * 
         */
        public Builder userManagedDependencies(@Nullable Boolean userManagedDependencies) {
            $.userManagedDependencies = userManagedDependencies;
            return this;
        }

        public ModelEnvironmentDefinitionResponseResponsePython build() {
            return $;
        }
    }

}
