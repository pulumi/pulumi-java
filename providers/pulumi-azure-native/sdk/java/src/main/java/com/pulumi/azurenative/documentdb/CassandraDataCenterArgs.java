// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb;

import com.pulumi.azurenative.documentdb.inputs.DataCenterResourcePropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CassandraDataCenterArgs extends com.pulumi.resources.ResourceArgs {

    public static final CassandraDataCenterArgs Empty = new CassandraDataCenterArgs();

    /**
     * Managed Cassandra cluster name.
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * Data center name in a managed Cassandra cluster.
     * 
     */
    @Import(name="dataCenterName")
    private @Nullable Output<String> dataCenterName;

    public Optional<Output<String>> dataCenterName() {
        return Optional.ofNullable(this.dataCenterName);
    }

    /**
     * Properties of a managed Cassandra data center.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<DataCenterResourcePropertiesArgs> properties;

    public Optional<Output<DataCenterResourcePropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private CassandraDataCenterArgs() {}

    private CassandraDataCenterArgs(CassandraDataCenterArgs $) {
        this.clusterName = $.clusterName;
        this.dataCenterName = $.dataCenterName;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CassandraDataCenterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CassandraDataCenterArgs $;

        public Builder() {
            $ = new CassandraDataCenterArgs();
        }

        public Builder(CassandraDataCenterArgs defaults) {
            $ = new CassandraDataCenterArgs(Objects.requireNonNull(defaults));
        }

        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        public Builder dataCenterName(@Nullable Output<String> dataCenterName) {
            $.dataCenterName = dataCenterName;
            return this;
        }

        public Builder dataCenterName(String dataCenterName) {
            return dataCenterName(Output.of(dataCenterName));
        }

        public Builder properties(@Nullable Output<DataCenterResourcePropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(DataCenterResourcePropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public CassandraDataCenterArgs build() {
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
