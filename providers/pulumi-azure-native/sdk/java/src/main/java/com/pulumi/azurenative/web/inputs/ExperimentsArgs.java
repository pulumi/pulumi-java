// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.RampUpRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Routing rules in production experiments.
 * 
 */
public final class ExperimentsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExperimentsArgs Empty = new ExperimentsArgs();

    /**
     * List of ramp-up rules.
     * 
     */
    @Import(name="rampUpRules")
    private @Nullable Output<List<RampUpRuleArgs>> rampUpRules;

    /**
     * @return List of ramp-up rules.
     * 
     */
    public Optional<Output<List<RampUpRuleArgs>>> rampUpRules() {
        return Optional.ofNullable(this.rampUpRules);
    }

    private ExperimentsArgs() {}

    private ExperimentsArgs(ExperimentsArgs $) {
        this.rampUpRules = $.rampUpRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExperimentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExperimentsArgs $;

        public Builder() {
            $ = new ExperimentsArgs();
        }

        public Builder(ExperimentsArgs defaults) {
            $ = new ExperimentsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rampUpRules List of ramp-up rules.
         * 
         * @return builder
         * 
         */
        public Builder rampUpRules(@Nullable Output<List<RampUpRuleArgs>> rampUpRules) {
            $.rampUpRules = rampUpRules;
            return this;
        }

        /**
         * @param rampUpRules List of ramp-up rules.
         * 
         * @return builder
         * 
         */
        public Builder rampUpRules(List<RampUpRuleArgs> rampUpRules) {
            return rampUpRules(Output.of(rampUpRules));
        }

        /**
         * @param rampUpRules List of ramp-up rules.
         * 
         * @return builder
         * 
         */
        public Builder rampUpRules(RampUpRuleArgs... rampUpRules) {
            return rampUpRules(List.of(rampUpRules));
        }

        public ExperimentsArgs build() {
            return $;
        }
    }

}
