// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logz.inputs;

import com.pulumi.azurenative.logz.inputs.MetricRulesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Definition of the properties for a TagRules resource.
 * 
 */
public final class MetricsTagRulesPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricsTagRulesPropertiesArgs Empty = new MetricsTagRulesPropertiesArgs();

    @Import(name="metricRules")
    private @Nullable Output<List<MetricRulesArgs>> metricRules;

    public Optional<Output<List<MetricRulesArgs>>> metricRules() {
        return Optional.ofNullable(this.metricRules);
    }

    /**
     * Flag specifying if metrics from Azure resources should be sent for the Monitor resource.
     * 
     */
    @Import(name="sendMetrics")
    private @Nullable Output<Boolean> sendMetrics;

    /**
     * @return Flag specifying if metrics from Azure resources should be sent for the Monitor resource.
     * 
     */
    public Optional<Output<Boolean>> sendMetrics() {
        return Optional.ofNullable(this.sendMetrics);
    }

    private MetricsTagRulesPropertiesArgs() {}

    private MetricsTagRulesPropertiesArgs(MetricsTagRulesPropertiesArgs $) {
        this.metricRules = $.metricRules;
        this.sendMetrics = $.sendMetrics;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricsTagRulesPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricsTagRulesPropertiesArgs $;

        public Builder() {
            $ = new MetricsTagRulesPropertiesArgs();
        }

        public Builder(MetricsTagRulesPropertiesArgs defaults) {
            $ = new MetricsTagRulesPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder metricRules(@Nullable Output<List<MetricRulesArgs>> metricRules) {
            $.metricRules = metricRules;
            return this;
        }

        public Builder metricRules(List<MetricRulesArgs> metricRules) {
            return metricRules(Output.of(metricRules));
        }

        public Builder metricRules(MetricRulesArgs... metricRules) {
            return metricRules(List.of(metricRules));
        }

        /**
         * @param sendMetrics Flag specifying if metrics from Azure resources should be sent for the Monitor resource.
         * 
         * @return builder
         * 
         */
        public Builder sendMetrics(@Nullable Output<Boolean> sendMetrics) {
            $.sendMetrics = sendMetrics;
            return this;
        }

        /**
         * @param sendMetrics Flag specifying if metrics from Azure resources should be sent for the Monitor resource.
         * 
         * @return builder
         * 
         */
        public Builder sendMetrics(Boolean sendMetrics) {
            return sendMetrics(Output.of(sendMetrics));
        }

        public MetricsTagRulesPropertiesArgs build() {
            return $;
        }
    }

}
