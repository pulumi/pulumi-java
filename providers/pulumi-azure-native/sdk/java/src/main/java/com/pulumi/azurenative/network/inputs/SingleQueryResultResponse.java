// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SingleQueryResultResponse extends com.pulumi.resources.InvokeArgs {

    public static final SingleQueryResultResponse Empty = new SingleQueryResultResponse();

    /**
     * Describes what is the signature enforces
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Describes what is the signature enforces
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Describes the list of destination ports related to this signature
     * 
     */
    @Import(name="destinationPorts")
    private @Nullable List<String> destinationPorts;

    /**
     * @return Describes the list of destination ports related to this signature
     * 
     */
    public Optional<List<String>> destinationPorts() {
        return Optional.ofNullable(this.destinationPorts);
    }

    /**
     * Describes in which direction signature is being enforced: 0 - Inbound, 1 - OutBound, 2 - Bidirectional
     * 
     */
    @Import(name="direction")
    private @Nullable Integer direction;

    /**
     * @return Describes in which direction signature is being enforced: 0 - Inbound, 1 - OutBound, 2 - Bidirectional
     * 
     */
    public Optional<Integer> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Describes the groups the signature belongs to
     * 
     */
    @Import(name="group")
    private @Nullable String group;

    /**
     * @return Describes the groups the signature belongs to
     * 
     */
    public Optional<String> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * Describes if this override is inherited from base policy or not
     * 
     */
    @Import(name="inheritedFromParentPolicy")
    private @Nullable Boolean inheritedFromParentPolicy;

    /**
     * @return Describes if this override is inherited from base policy or not
     * 
     */
    public Optional<Boolean> inheritedFromParentPolicy() {
        return Optional.ofNullable(this.inheritedFromParentPolicy);
    }

    /**
     * Describes the last updated time of the signature (provided from 3rd party vendor)
     * 
     */
    @Import(name="lastUpdated")
    private @Nullable String lastUpdated;

    /**
     * @return Describes the last updated time of the signature (provided from 3rd party vendor)
     * 
     */
    public Optional<String> lastUpdated() {
        return Optional.ofNullable(this.lastUpdated);
    }

    /**
     * The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny
     * 
     */
    @Import(name="mode")
    private @Nullable Integer mode;

    /**
     * @return The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny
     * 
     */
    public Optional<Integer> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Describes the protocol the signatures is being enforced in
     * 
     */
    @Import(name="protocol")
    private @Nullable String protocol;

    /**
     * @return Describes the protocol the signatures is being enforced in
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Describes the severity of signature: 1 - Low, 2 - Medium, 3 - High
     * 
     */
    @Import(name="severity")
    private @Nullable Integer severity;

    /**
     * @return Describes the severity of signature: 1 - Low, 2 - Medium, 3 - High
     * 
     */
    public Optional<Integer> severity() {
        return Optional.ofNullable(this.severity);
    }

    /**
     * The ID of the signature
     * 
     */
    @Import(name="signatureId")
    private @Nullable Integer signatureId;

    /**
     * @return The ID of the signature
     * 
     */
    public Optional<Integer> signatureId() {
        return Optional.ofNullable(this.signatureId);
    }

    /**
     * Describes the list of source ports related to this signature
     * 
     */
    @Import(name="sourcePorts")
    private @Nullable List<String> sourcePorts;

    /**
     * @return Describes the list of source ports related to this signature
     * 
     */
    public Optional<List<String>> sourcePorts() {
        return Optional.ofNullable(this.sourcePorts);
    }

    private SingleQueryResultResponse() {}

    private SingleQueryResultResponse(SingleQueryResultResponse $) {
        this.description = $.description;
        this.destinationPorts = $.destinationPorts;
        this.direction = $.direction;
        this.group = $.group;
        this.inheritedFromParentPolicy = $.inheritedFromParentPolicy;
        this.lastUpdated = $.lastUpdated;
        this.mode = $.mode;
        this.protocol = $.protocol;
        this.severity = $.severity;
        this.signatureId = $.signatureId;
        this.sourcePorts = $.sourcePorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SingleQueryResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SingleQueryResultResponse $;

        public Builder() {
            $ = new SingleQueryResultResponse();
        }

        public Builder(SingleQueryResultResponse defaults) {
            $ = new SingleQueryResultResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Describes what is the signature enforces
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param destinationPorts Describes the list of destination ports related to this signature
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(@Nullable List<String> destinationPorts) {
            $.destinationPorts = destinationPorts;
            return this;
        }

        /**
         * @param destinationPorts Describes the list of destination ports related to this signature
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(String... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }

        /**
         * @param direction Describes in which direction signature is being enforced: 0 - Inbound, 1 - OutBound, 2 - Bidirectional
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Integer direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param group Describes the groups the signature belongs to
         * 
         * @return builder
         * 
         */
        public Builder group(@Nullable String group) {
            $.group = group;
            return this;
        }

        /**
         * @param inheritedFromParentPolicy Describes if this override is inherited from base policy or not
         * 
         * @return builder
         * 
         */
        public Builder inheritedFromParentPolicy(@Nullable Boolean inheritedFromParentPolicy) {
            $.inheritedFromParentPolicy = inheritedFromParentPolicy;
            return this;
        }

        /**
         * @param lastUpdated Describes the last updated time of the signature (provided from 3rd party vendor)
         * 
         * @return builder
         * 
         */
        public Builder lastUpdated(@Nullable String lastUpdated) {
            $.lastUpdated = lastUpdated;
            return this;
        }

        /**
         * @param mode The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Integer mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param protocol Describes the protocol the signatures is being enforced in
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable String protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param severity Describes the severity of signature: 1 - Low, 2 - Medium, 3 - High
         * 
         * @return builder
         * 
         */
        public Builder severity(@Nullable Integer severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param signatureId The ID of the signature
         * 
         * @return builder
         * 
         */
        public Builder signatureId(@Nullable Integer signatureId) {
            $.signatureId = signatureId;
            return this;
        }

        /**
         * @param sourcePorts Describes the list of source ports related to this signature
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(@Nullable List<String> sourcePorts) {
            $.sourcePorts = sourcePorts;
            return this;
        }

        /**
         * @param sourcePorts Describes the list of source ports related to this signature
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(String... sourcePorts) {
            return sourcePorts(List.of(sourcePorts));
        }

        public SingleQueryResultResponse build() {
            return $;
        }
    }

}
