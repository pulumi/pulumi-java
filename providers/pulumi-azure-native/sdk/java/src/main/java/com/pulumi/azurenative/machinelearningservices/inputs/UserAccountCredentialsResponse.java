// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Settings for user account that gets created on each on the nodes of a compute.
 * 
 */
public final class UserAccountCredentialsResponse extends com.pulumi.resources.InvokeArgs {

    public static final UserAccountCredentialsResponse Empty = new UserAccountCredentialsResponse();

    /**
     * Name of the administrator user account which can be used to SSH to nodes.
     * 
     */
    @Import(name="adminUserName", required=true)
      private final String adminUserName;

    public String adminUserName() {
        return this.adminUserName;
    }

    /**
     * Password of the administrator user account.
     * 
     */
    @Import(name="adminUserPassword")
      private final @Nullable String adminUserPassword;

    public Optional<String> adminUserPassword() {
        return this.adminUserPassword == null ? Optional.empty() : Optional.ofNullable(this.adminUserPassword);
    }

    /**
     * SSH public key of the administrator user account.
     * 
     */
    @Import(name="adminUserSshPublicKey")
      private final @Nullable String adminUserSshPublicKey;

    public Optional<String> adminUserSshPublicKey() {
        return this.adminUserSshPublicKey == null ? Optional.empty() : Optional.ofNullable(this.adminUserSshPublicKey);
    }

    public UserAccountCredentialsResponse(
        String adminUserName,
        @Nullable String adminUserPassword,
        @Nullable String adminUserSshPublicKey) {
        this.adminUserName = Objects.requireNonNull(adminUserName, "expected parameter 'adminUserName' to be non-null");
        this.adminUserPassword = adminUserPassword;
        this.adminUserSshPublicKey = adminUserSshPublicKey;
    }

    private UserAccountCredentialsResponse() {
        this.adminUserName = null;
        this.adminUserPassword = null;
        this.adminUserSshPublicKey = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserAccountCredentialsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String adminUserName;
        private @Nullable String adminUserPassword;
        private @Nullable String adminUserSshPublicKey;

        public Builder() {
    	      // Empty
        }

        public Builder(UserAccountCredentialsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminUserName = defaults.adminUserName;
    	      this.adminUserPassword = defaults.adminUserPassword;
    	      this.adminUserSshPublicKey = defaults.adminUserSshPublicKey;
        }

        public Builder adminUserName(String adminUserName) {
            this.adminUserName = Objects.requireNonNull(adminUserName);
            return this;
        }
        public Builder adminUserPassword(@Nullable String adminUserPassword) {
            this.adminUserPassword = adminUserPassword;
            return this;
        }
        public Builder adminUserSshPublicKey(@Nullable String adminUserSshPublicKey) {
            this.adminUserSshPublicKey = adminUserSshPublicKey;
            return this;
        }        public UserAccountCredentialsResponse build() {
            return new UserAccountCredentialsResponse(adminUserName, adminUserPassword, adminUserSshPublicKey);
        }
    }
}
