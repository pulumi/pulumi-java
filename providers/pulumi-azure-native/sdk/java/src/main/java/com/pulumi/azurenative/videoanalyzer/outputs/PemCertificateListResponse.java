// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class PemCertificateListResponse {
    /**
     * @return PEM formatted public certificates. One certificate per entry.
     * 
     */
    private final List<String> certificates;
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.VideoAnalyzer.PemCertificateList&#39;.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private PemCertificateListResponse(
        @CustomType.Parameter("certificates") List<String> certificates,
        @CustomType.Parameter("type") String type) {
        this.certificates = certificates;
        this.type = type;
    }

    /**
     * @return PEM formatted public certificates. One certificate per entry.
     * 
     */
    public List<String> certificates() {
        return this.certificates;
    }
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.VideoAnalyzer.PemCertificateList&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PemCertificateListResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> certificates;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(PemCertificateListResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificates = defaults.certificates;
    	      this.type = defaults.type;
        }

        public Builder certificates(List<String> certificates) {
            this.certificates = Objects.requireNonNull(certificates);
            return this;
        }
        public Builder certificates(String... certificates) {
            return certificates(List.of(certificates));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public PemCertificateListResponse build() {
            return new PemCertificateListResponse(certificates, type);
        }
    }
}
