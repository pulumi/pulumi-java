// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices;

import com.pulumi.azurenative.machinelearningservices.enums.ValueFormat;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkspaceConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceConnectionArgs Empty = new WorkspaceConnectionArgs();

    /**
     * Authorization type of the workspace connection.
     * 
     */
    @Import(name="authType")
      private final @Nullable Output<String> authType;

    public Output<String> authType() {
        return this.authType == null ? Codegen.empty() : this.authType;
    }

    /**
     * Category of the workspace connection.
     * 
     */
    @Import(name="category")
      private final @Nullable Output<String> category;

    public Output<String> category() {
        return this.category == null ? Codegen.empty() : this.category;
    }

    /**
     * Friendly name of the workspace connection
     * 
     */
    @Import(name="connectionName")
      private final @Nullable Output<String> connectionName;

    public Output<String> connectionName() {
        return this.connectionName == null ? Codegen.empty() : this.connectionName;
    }

    /**
     * Friendly name of the workspace connection
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Name of the resource group in which workspace is located.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Target of the workspace connection.
     * 
     */
    @Import(name="target")
      private final @Nullable Output<String> target;

    public Output<String> target() {
        return this.target == null ? Codegen.empty() : this.target;
    }

    /**
     * Value details of the workspace connection.
     * 
     */
    @Import(name="value")
      private final @Nullable Output<String> value;

    public Output<String> value() {
        return this.value == null ? Codegen.empty() : this.value;
    }

    /**
     * format for the workspace connection value
     * 
     */
    @Import(name="valueFormat")
      private final @Nullable Output<Either<String,ValueFormat>> valueFormat;

    public Output<Either<String,ValueFormat>> valueFormat() {
        return this.valueFormat == null ? Codegen.empty() : this.valueFormat;
    }

    /**
     * Name of Azure Machine Learning workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
      private final Output<String> workspaceName;

    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    public WorkspaceConnectionArgs(
        @Nullable Output<String> authType,
        @Nullable Output<String> category,
        @Nullable Output<String> connectionName,
        @Nullable Output<String> name,
        Output<String> resourceGroupName,
        @Nullable Output<String> target,
        @Nullable Output<String> value,
        @Nullable Output<Either<String,ValueFormat>> valueFormat,
        Output<String> workspaceName) {
        this.authType = authType;
        this.category = category;
        this.connectionName = connectionName;
        this.name = name;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.target = target;
        this.value = value;
        this.valueFormat = valueFormat;
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private WorkspaceConnectionArgs() {
        this.authType = Codegen.empty();
        this.category = Codegen.empty();
        this.connectionName = Codegen.empty();
        this.name = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.target = Codegen.empty();
        this.value = Codegen.empty();
        this.valueFormat = Codegen.empty();
        this.workspaceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> authType;
        private @Nullable Output<String> category;
        private @Nullable Output<String> connectionName;
        private @Nullable Output<String> name;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> target;
        private @Nullable Output<String> value;
        private @Nullable Output<Either<String,ValueFormat>> valueFormat;
        private Output<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkspaceConnectionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authType = defaults.authType;
    	      this.category = defaults.category;
    	      this.connectionName = defaults.connectionName;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.target = defaults.target;
    	      this.value = defaults.value;
    	      this.valueFormat = defaults.valueFormat;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder authType(@Nullable Output<String> authType) {
            this.authType = authType;
            return this;
        }
        public Builder authType(@Nullable String authType) {
            this.authType = Codegen.ofNullable(authType);
            return this;
        }
        public Builder category(@Nullable Output<String> category) {
            this.category = category;
            return this;
        }
        public Builder category(@Nullable String category) {
            this.category = Codegen.ofNullable(category);
            return this;
        }
        public Builder connectionName(@Nullable Output<String> connectionName) {
            this.connectionName = connectionName;
            return this;
        }
        public Builder connectionName(@Nullable String connectionName) {
            this.connectionName = Codegen.ofNullable(connectionName);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder target(@Nullable Output<String> target) {
            this.target = target;
            return this;
        }
        public Builder target(@Nullable String target) {
            this.target = Codegen.ofNullable(target);
            return this;
        }
        public Builder value(@Nullable Output<String> value) {
            this.value = value;
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = Codegen.ofNullable(value);
            return this;
        }
        public Builder valueFormat(@Nullable Output<Either<String,ValueFormat>> valueFormat) {
            this.valueFormat = valueFormat;
            return this;
        }
        public Builder valueFormat(@Nullable Either<String,ValueFormat> valueFormat) {
            this.valueFormat = Codegen.ofNullable(valueFormat);
            return this;
        }
        public Builder workspaceName(Output<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }
        public Builder workspaceName(String workspaceName) {
            this.workspaceName = Output.of(Objects.requireNonNull(workspaceName));
            return this;
        }        public WorkspaceConnectionArgs build() {
            return new WorkspaceConnectionArgs(authType, category, connectionName, name, resourceGroupName, target, value, valueFormat, workspaceName);
        }
    }
}
