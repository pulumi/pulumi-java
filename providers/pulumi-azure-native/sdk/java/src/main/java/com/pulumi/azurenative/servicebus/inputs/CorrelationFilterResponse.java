// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicebus.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents the correlation filter expression.
 * 
 */
public final class CorrelationFilterResponse extends com.pulumi.resources.InvokeArgs {

    public static final CorrelationFilterResponse Empty = new CorrelationFilterResponse();

    /**
     * Content type of the message.
     * 
     */
    @Import(name="contentType")
    private @Nullable String contentType;

    public Optional<String> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    /**
     * Identifier of the correlation.
     * 
     */
    @Import(name="correlationId")
    private @Nullable String correlationId;

    public Optional<String> correlationId() {
        return Optional.ofNullable(this.correlationId);
    }

    /**
     * Application specific label.
     * 
     */
    @Import(name="label")
    private @Nullable String label;

    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * Identifier of the message.
     * 
     */
    @Import(name="messageId")
    private @Nullable String messageId;

    public Optional<String> messageId() {
        return Optional.ofNullable(this.messageId);
    }

    /**
     * dictionary object for custom filters
     * 
     */
    @Import(name="properties")
    private @Nullable Map<String,String> properties;

    public Optional<Map<String,String>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Address of the queue to reply to.
     * 
     */
    @Import(name="replyTo")
    private @Nullable String replyTo;

    public Optional<String> replyTo() {
        return Optional.ofNullable(this.replyTo);
    }

    /**
     * Session identifier to reply to.
     * 
     */
    @Import(name="replyToSessionId")
    private @Nullable String replyToSessionId;

    public Optional<String> replyToSessionId() {
        return Optional.ofNullable(this.replyToSessionId);
    }

    /**
     * Value that indicates whether the rule action requires preprocessing.
     * 
     */
    @Import(name="requiresPreprocessing")
    private @Nullable Boolean requiresPreprocessing;

    public Optional<Boolean> requiresPreprocessing() {
        return Optional.ofNullable(this.requiresPreprocessing);
    }

    /**
     * Session identifier.
     * 
     */
    @Import(name="sessionId")
    private @Nullable String sessionId;

    public Optional<String> sessionId() {
        return Optional.ofNullable(this.sessionId);
    }

    /**
     * Address to send to.
     * 
     */
    @Import(name="to")
    private @Nullable String to;

    public Optional<String> to() {
        return Optional.ofNullable(this.to);
    }

    private CorrelationFilterResponse() {}

    private CorrelationFilterResponse(CorrelationFilterResponse $) {
        this.contentType = $.contentType;
        this.correlationId = $.correlationId;
        this.label = $.label;
        this.messageId = $.messageId;
        this.properties = $.properties;
        this.replyTo = $.replyTo;
        this.replyToSessionId = $.replyToSessionId;
        this.requiresPreprocessing = $.requiresPreprocessing;
        this.sessionId = $.sessionId;
        this.to = $.to;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CorrelationFilterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CorrelationFilterResponse $;

        public Builder() {
            $ = new CorrelationFilterResponse();
        }

        public Builder(CorrelationFilterResponse defaults) {
            $ = new CorrelationFilterResponse(Objects.requireNonNull(defaults));
        }

        public Builder contentType(@Nullable String contentType) {
            $.contentType = contentType;
            return this;
        }

        public Builder correlationId(@Nullable String correlationId) {
            $.correlationId = correlationId;
            return this;
        }

        public Builder label(@Nullable String label) {
            $.label = label;
            return this;
        }

        public Builder messageId(@Nullable String messageId) {
            $.messageId = messageId;
            return this;
        }

        public Builder properties(@Nullable Map<String,String> properties) {
            $.properties = properties;
            return this;
        }

        public Builder replyTo(@Nullable String replyTo) {
            $.replyTo = replyTo;
            return this;
        }

        public Builder replyToSessionId(@Nullable String replyToSessionId) {
            $.replyToSessionId = replyToSessionId;
            return this;
        }

        public Builder requiresPreprocessing(@Nullable Boolean requiresPreprocessing) {
            $.requiresPreprocessing = requiresPreprocessing;
            return this;
        }

        public Builder sessionId(@Nullable String sessionId) {
            $.sessionId = sessionId;
            return this;
        }

        public Builder to(@Nullable String to) {
            $.to = to;
            return this;
        }

        public CorrelationFilterResponse build() {
            $.requiresPreprocessing = Codegen.booleanProp("requiresPreprocessing").arg($.requiresPreprocessing).def(true).getNullable();
            return $;
        }
    }

}
