// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deploymentmanager.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Individual resource operation information.
 * 
 */
public final class ResourceOperationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResourceOperationResponse Empty = new ResourceOperationResponse();

    /**
     * Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.
     * 
     */
    @Import(name="operationId", required=true)
    private String operationId;

    public String operationId() {
        return this.operationId;
    }

    /**
     * State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.
     * 
     */
    @Import(name="resourceName")
    private @Nullable String resourceName;

    public Optional<String> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }

    /**
     * Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.
     * 
     */
    @Import(name="resourceType")
    private @Nullable String resourceType;

    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * Http status code of the operation.
     * 
     */
    @Import(name="statusCode", required=true)
    private String statusCode;

    public String statusCode() {
        return this.statusCode;
    }

    /**
     * Descriptive information of the resource operation.
     * 
     */
    @Import(name="statusMessage", required=true)
    private String statusMessage;

    public String statusMessage() {
        return this.statusMessage;
    }

    private ResourceOperationResponse() {}

    private ResourceOperationResponse(ResourceOperationResponse $) {
        this.operationId = $.operationId;
        this.provisioningState = $.provisioningState;
        this.resourceName = $.resourceName;
        this.resourceType = $.resourceType;
        this.statusCode = $.statusCode;
        this.statusMessage = $.statusMessage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceOperationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceOperationResponse $;

        public Builder() {
            $ = new ResourceOperationResponse();
        }

        public Builder(ResourceOperationResponse defaults) {
            $ = new ResourceOperationResponse(Objects.requireNonNull(defaults));
        }

        public Builder operationId(String operationId) {
            $.operationId = operationId;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder resourceName(@Nullable String resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        public Builder resourceType(@Nullable String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder statusCode(String statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public Builder statusMessage(String statusMessage) {
            $.statusMessage = statusMessage;
            return this;
        }

        public ResourceOperationResponse build() {
            $.operationId = Objects.requireNonNull($.operationId, "expected parameter 'operationId' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.statusCode = Objects.requireNonNull($.statusCode, "expected parameter 'statusCode' to be non-null");
            $.statusMessage = Objects.requireNonNull($.statusMessage, "expected parameter 'statusMessage' to be non-null");
            return $;
        }
    }

}
