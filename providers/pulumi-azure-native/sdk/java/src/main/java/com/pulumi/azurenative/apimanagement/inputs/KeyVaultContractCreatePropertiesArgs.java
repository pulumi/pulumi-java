// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Create keyVault contract details.
 * 
 */
public final class KeyVaultContractCreatePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyVaultContractCreatePropertiesArgs Empty = new KeyVaultContractCreatePropertiesArgs();

    /**
     * Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
     * 
     */
    @Import(name="identityClientId")
    private @Nullable Output<String> identityClientId;

    /**
     * @return Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
     * 
     */
    public Optional<Output<String>> identityClientId() {
        return Optional.ofNullable(this.identityClientId);
    }

    /**
     * Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires Api Management service to be configured with aka.ms/apimmsi
     * 
     */
    @Import(name="secretIdentifier")
    private @Nullable Output<String> secretIdentifier;

    /**
     * @return Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires Api Management service to be configured with aka.ms/apimmsi
     * 
     */
    public Optional<Output<String>> secretIdentifier() {
        return Optional.ofNullable(this.secretIdentifier);
    }

    private KeyVaultContractCreatePropertiesArgs() {}

    private KeyVaultContractCreatePropertiesArgs(KeyVaultContractCreatePropertiesArgs $) {
        this.identityClientId = $.identityClientId;
        this.secretIdentifier = $.secretIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyVaultContractCreatePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVaultContractCreatePropertiesArgs $;

        public Builder() {
            $ = new KeyVaultContractCreatePropertiesArgs();
        }

        public Builder(KeyVaultContractCreatePropertiesArgs defaults) {
            $ = new KeyVaultContractCreatePropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identityClientId Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
         * 
         * @return builder
         * 
         */
        public Builder identityClientId(@Nullable Output<String> identityClientId) {
            $.identityClientId = identityClientId;
            return this;
        }

        /**
         * @param identityClientId Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
         * 
         * @return builder
         * 
         */
        public Builder identityClientId(String identityClientId) {
            return identityClientId(Output.of(identityClientId));
        }

        /**
         * @param secretIdentifier Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires Api Management service to be configured with aka.ms/apimmsi
         * 
         * @return builder
         * 
         */
        public Builder secretIdentifier(@Nullable Output<String> secretIdentifier) {
            $.secretIdentifier = secretIdentifier;
            return this;
        }

        /**
         * @param secretIdentifier Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires Api Management service to be configured with aka.ms/apimmsi
         * 
         * @return builder
         * 
         */
        public Builder secretIdentifier(String secretIdentifier) {
            return secretIdentifier(Output.of(secretIdentifier));
        }

        public KeyVaultContractCreatePropertiesArgs build() {
            return $;
        }
    }

}
