// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric;

import com.pulumi.azurenative.servicefabric.inputs.AzureActiveDirectoryArgs;
import com.pulumi.azurenative.servicefabric.inputs.ClientCertificateArgs;
import com.pulumi.azurenative.servicefabric.inputs.LoadBalancingRuleArgs;
import com.pulumi.azurenative.servicefabric.inputs.SettingsSectionDescriptionArgs;
import com.pulumi.azurenative.servicefabric.inputs.SkuArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ManagedClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedClusterArgs Empty = new ManagedClusterArgs();

    /**
     * client certificates for the cluster.
     * 
     */
    @Import(name="addonFeatures")
      private final @Nullable Output<List<String>> addonFeatures;

    public Output<List<String>> addonFeatures() {
        return this.addonFeatures == null ? Codegen.empty() : this.addonFeatures;
    }

    /**
     * vm admin user password.
     * 
     */
    @Import(name="adminPassword")
      private final @Nullable Output<String> adminPassword;

    public Output<String> adminPassword() {
        return this.adminPassword == null ? Codegen.empty() : this.adminPassword;
    }

    /**
     * vm admin user name.
     * 
     */
    @Import(name="adminUserName", required=true)
      private final Output<String> adminUserName;

    public Output<String> adminUserName() {
        return this.adminUserName;
    }

    /**
     * Azure active directory.
     * 
     */
    @Import(name="azureActiveDirectory")
      private final @Nullable Output<AzureActiveDirectoryArgs> azureActiveDirectory;

    public Output<AzureActiveDirectoryArgs> azureActiveDirectory() {
        return this.azureActiveDirectory == null ? Codegen.empty() : this.azureActiveDirectory;
    }

    /**
     * The port used for client connections to the cluster.
     * 
     */
    @Import(name="clientConnectionPort")
      private final @Nullable Output<Integer> clientConnectionPort;

    public Output<Integer> clientConnectionPort() {
        return this.clientConnectionPort == null ? Codegen.empty() : this.clientConnectionPort;
    }

    /**
     * client certificates for the cluster.
     * 
     */
    @Import(name="clients")
      private final @Nullable Output<List<ClientCertificateArgs>> clients;

    public Output<List<ClientCertificateArgs>> clients() {
        return this.clients == null ? Codegen.empty() : this.clients;
    }

    /**
     * The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
     * 
     */
    @Import(name="clusterCodeVersion")
      private final @Nullable Output<String> clusterCodeVersion;

    public Output<String> clusterCodeVersion() {
        return this.clusterCodeVersion == null ? Codegen.empty() : this.clusterCodeVersion;
    }

    /**
     * The name of the cluster resource.
     * 
     */
    @Import(name="clusterName")
      private final @Nullable Output<String> clusterName;

    public Output<String> clusterName() {
        return this.clusterName == null ? Codegen.empty() : this.clusterName;
    }

    /**
     * The cluster dns name.
     * 
     */
    @Import(name="dnsName", required=true)
      private final Output<String> dnsName;

    public Output<String> dnsName() {
        return this.dnsName;
    }

    /**
     * The list of custom fabric settings to configure the cluster.
     * 
     */
    @Import(name="fabricSettings")
      private final @Nullable Output<List<SettingsSectionDescriptionArgs>> fabricSettings;

    public Output<List<SettingsSectionDescriptionArgs>> fabricSettings() {
        return this.fabricSettings == null ? Codegen.empty() : this.fabricSettings;
    }

    /**
     * The port used for http connections to the cluster.
     * 
     */
    @Import(name="httpGatewayConnectionPort")
      private final @Nullable Output<Integer> httpGatewayConnectionPort;

    public Output<Integer> httpGatewayConnectionPort() {
        return this.httpGatewayConnectionPort == null ? Codegen.empty() : this.httpGatewayConnectionPort;
    }

    /**
     * Describes load balancing rules.
     * 
     */
    @Import(name="loadBalancingRules")
      private final @Nullable Output<List<LoadBalancingRuleArgs>> loadBalancingRules;

    public Output<List<LoadBalancingRuleArgs>> loadBalancingRules() {
        return this.loadBalancingRules == null ? Codegen.empty() : this.loadBalancingRules;
    }

    /**
     * Azure resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The sku of the managed cluster
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<SkuArgs> sku;

    public Output<SkuArgs> sku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    /**
     * Azure resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public ManagedClusterArgs(
        @Nullable Output<List<String>> addonFeatures,
        @Nullable Output<String> adminPassword,
        Output<String> adminUserName,
        @Nullable Output<AzureActiveDirectoryArgs> azureActiveDirectory,
        @Nullable Output<Integer> clientConnectionPort,
        @Nullable Output<List<ClientCertificateArgs>> clients,
        @Nullable Output<String> clusterCodeVersion,
        @Nullable Output<String> clusterName,
        Output<String> dnsName,
        @Nullable Output<List<SettingsSectionDescriptionArgs>> fabricSettings,
        @Nullable Output<Integer> httpGatewayConnectionPort,
        @Nullable Output<List<LoadBalancingRuleArgs>> loadBalancingRules,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<SkuArgs> sku,
        @Nullable Output<Map<String,String>> tags) {
        this.addonFeatures = addonFeatures;
        this.adminPassword = adminPassword;
        this.adminUserName = Objects.requireNonNull(adminUserName, "expected parameter 'adminUserName' to be non-null");
        this.azureActiveDirectory = azureActiveDirectory;
        this.clientConnectionPort = Codegen.integerProp("clientConnectionPort").output().arg(clientConnectionPort).def(19000).getNullable();
        this.clients = clients;
        this.clusterCodeVersion = clusterCodeVersion;
        this.clusterName = clusterName;
        this.dnsName = Objects.requireNonNull(dnsName, "expected parameter 'dnsName' to be non-null");
        this.fabricSettings = fabricSettings;
        this.httpGatewayConnectionPort = Codegen.integerProp("httpGatewayConnectionPort").output().arg(httpGatewayConnectionPort).def(19080).getNullable();
        this.loadBalancingRules = loadBalancingRules;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sku = sku;
        this.tags = tags;
    }

    private ManagedClusterArgs() {
        this.addonFeatures = Codegen.empty();
        this.adminPassword = Codegen.empty();
        this.adminUserName = Codegen.empty();
        this.azureActiveDirectory = Codegen.empty();
        this.clientConnectionPort = Codegen.empty();
        this.clients = Codegen.empty();
        this.clusterCodeVersion = Codegen.empty();
        this.clusterName = Codegen.empty();
        this.dnsName = Codegen.empty();
        this.fabricSettings = Codegen.empty();
        this.httpGatewayConnectionPort = Codegen.empty();
        this.loadBalancingRules = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.sku = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> addonFeatures;
        private @Nullable Output<String> adminPassword;
        private Output<String> adminUserName;
        private @Nullable Output<AzureActiveDirectoryArgs> azureActiveDirectory;
        private @Nullable Output<Integer> clientConnectionPort;
        private @Nullable Output<List<ClientCertificateArgs>> clients;
        private @Nullable Output<String> clusterCodeVersion;
        private @Nullable Output<String> clusterName;
        private Output<String> dnsName;
        private @Nullable Output<List<SettingsSectionDescriptionArgs>> fabricSettings;
        private @Nullable Output<Integer> httpGatewayConnectionPort;
        private @Nullable Output<List<LoadBalancingRuleArgs>> loadBalancingRules;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<SkuArgs> sku;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonFeatures = defaults.addonFeatures;
    	      this.adminPassword = defaults.adminPassword;
    	      this.adminUserName = defaults.adminUserName;
    	      this.azureActiveDirectory = defaults.azureActiveDirectory;
    	      this.clientConnectionPort = defaults.clientConnectionPort;
    	      this.clients = defaults.clients;
    	      this.clusterCodeVersion = defaults.clusterCodeVersion;
    	      this.clusterName = defaults.clusterName;
    	      this.dnsName = defaults.dnsName;
    	      this.fabricSettings = defaults.fabricSettings;
    	      this.httpGatewayConnectionPort = defaults.httpGatewayConnectionPort;
    	      this.loadBalancingRules = defaults.loadBalancingRules;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
        }

        public Builder addonFeatures(@Nullable Output<List<String>> addonFeatures) {
            this.addonFeatures = addonFeatures;
            return this;
        }
        public Builder addonFeatures(@Nullable List<String> addonFeatures) {
            this.addonFeatures = Codegen.ofNullable(addonFeatures);
            return this;
        }
        public Builder addonFeatures(String... addonFeatures) {
            return addonFeatures(List.of(addonFeatures));
        }
        public Builder adminPassword(@Nullable Output<String> adminPassword) {
            this.adminPassword = adminPassword;
            return this;
        }
        public Builder adminPassword(@Nullable String adminPassword) {
            this.adminPassword = Codegen.ofNullable(adminPassword);
            return this;
        }
        public Builder adminUserName(Output<String> adminUserName) {
            this.adminUserName = Objects.requireNonNull(adminUserName);
            return this;
        }
        public Builder adminUserName(String adminUserName) {
            this.adminUserName = Output.of(Objects.requireNonNull(adminUserName));
            return this;
        }
        public Builder azureActiveDirectory(@Nullable Output<AzureActiveDirectoryArgs> azureActiveDirectory) {
            this.azureActiveDirectory = azureActiveDirectory;
            return this;
        }
        public Builder azureActiveDirectory(@Nullable AzureActiveDirectoryArgs azureActiveDirectory) {
            this.azureActiveDirectory = Codegen.ofNullable(azureActiveDirectory);
            return this;
        }
        public Builder clientConnectionPort(@Nullable Output<Integer> clientConnectionPort) {
            this.clientConnectionPort = clientConnectionPort;
            return this;
        }
        public Builder clientConnectionPort(@Nullable Integer clientConnectionPort) {
            this.clientConnectionPort = Codegen.ofNullable(clientConnectionPort);
            return this;
        }
        public Builder clients(@Nullable Output<List<ClientCertificateArgs>> clients) {
            this.clients = clients;
            return this;
        }
        public Builder clients(@Nullable List<ClientCertificateArgs> clients) {
            this.clients = Codegen.ofNullable(clients);
            return this;
        }
        public Builder clients(ClientCertificateArgs... clients) {
            return clients(List.of(clients));
        }
        public Builder clusterCodeVersion(@Nullable Output<String> clusterCodeVersion) {
            this.clusterCodeVersion = clusterCodeVersion;
            return this;
        }
        public Builder clusterCodeVersion(@Nullable String clusterCodeVersion) {
            this.clusterCodeVersion = Codegen.ofNullable(clusterCodeVersion);
            return this;
        }
        public Builder clusterName(@Nullable Output<String> clusterName) {
            this.clusterName = clusterName;
            return this;
        }
        public Builder clusterName(@Nullable String clusterName) {
            this.clusterName = Codegen.ofNullable(clusterName);
            return this;
        }
        public Builder dnsName(Output<String> dnsName) {
            this.dnsName = Objects.requireNonNull(dnsName);
            return this;
        }
        public Builder dnsName(String dnsName) {
            this.dnsName = Output.of(Objects.requireNonNull(dnsName));
            return this;
        }
        public Builder fabricSettings(@Nullable Output<List<SettingsSectionDescriptionArgs>> fabricSettings) {
            this.fabricSettings = fabricSettings;
            return this;
        }
        public Builder fabricSettings(@Nullable List<SettingsSectionDescriptionArgs> fabricSettings) {
            this.fabricSettings = Codegen.ofNullable(fabricSettings);
            return this;
        }
        public Builder fabricSettings(SettingsSectionDescriptionArgs... fabricSettings) {
            return fabricSettings(List.of(fabricSettings));
        }
        public Builder httpGatewayConnectionPort(@Nullable Output<Integer> httpGatewayConnectionPort) {
            this.httpGatewayConnectionPort = httpGatewayConnectionPort;
            return this;
        }
        public Builder httpGatewayConnectionPort(@Nullable Integer httpGatewayConnectionPort) {
            this.httpGatewayConnectionPort = Codegen.ofNullable(httpGatewayConnectionPort);
            return this;
        }
        public Builder loadBalancingRules(@Nullable Output<List<LoadBalancingRuleArgs>> loadBalancingRules) {
            this.loadBalancingRules = loadBalancingRules;
            return this;
        }
        public Builder loadBalancingRules(@Nullable List<LoadBalancingRuleArgs> loadBalancingRules) {
            this.loadBalancingRules = Codegen.ofNullable(loadBalancingRules);
            return this;
        }
        public Builder loadBalancingRules(LoadBalancingRuleArgs... loadBalancingRules) {
            return loadBalancingRules(List.of(loadBalancingRules));
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder sku(@Nullable Output<SkuArgs> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable SkuArgs sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public ManagedClusterArgs build() {
            return new ManagedClusterArgs(addonFeatures, adminPassword, adminUserName, azureActiveDirectory, clientConnectionPort, clients, clusterCodeVersion, clusterName, dnsName, fabricSettings, httpGatewayConnectionPort, loadBalancingRules, location, resourceGroupName, sku, tags);
        }
    }
}
