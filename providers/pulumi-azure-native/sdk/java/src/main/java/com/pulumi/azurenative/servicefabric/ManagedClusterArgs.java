// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric;

import com.pulumi.azurenative.servicefabric.inputs.AzureActiveDirectoryArgs;
import com.pulumi.azurenative.servicefabric.inputs.ClientCertificateArgs;
import com.pulumi.azurenative.servicefabric.inputs.LoadBalancingRuleArgs;
import com.pulumi.azurenative.servicefabric.inputs.SettingsSectionDescriptionArgs;
import com.pulumi.azurenative.servicefabric.inputs.SkuArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedClusterArgs Empty = new ManagedClusterArgs();

    /**
     * client certificates for the cluster.
     * 
     */
    @Import(name="addonFeatures")
    private @Nullable Output<List<String>> addonFeatures;

    /**
     * @return client certificates for the cluster.
     * 
     */
    public Optional<Output<List<String>>> addonFeatures() {
        return Optional.ofNullable(this.addonFeatures);
    }

    /**
     * vm admin user password.
     * 
     */
    @Import(name="adminPassword")
    private @Nullable Output<String> adminPassword;

    /**
     * @return vm admin user password.
     * 
     */
    public Optional<Output<String>> adminPassword() {
        return Optional.ofNullable(this.adminPassword);
    }

    /**
     * vm admin user name.
     * 
     */
    @Import(name="adminUserName", required=true)
    private Output<String> adminUserName;

    /**
     * @return vm admin user name.
     * 
     */
    public Output<String> adminUserName() {
        return this.adminUserName;
    }

    /**
     * Azure active directory.
     * 
     */
    @Import(name="azureActiveDirectory")
    private @Nullable Output<AzureActiveDirectoryArgs> azureActiveDirectory;

    /**
     * @return Azure active directory.
     * 
     */
    public Optional<Output<AzureActiveDirectoryArgs>> azureActiveDirectory() {
        return Optional.ofNullable(this.azureActiveDirectory);
    }

    /**
     * The port used for client connections to the cluster.
     * 
     */
    @Import(name="clientConnectionPort")
    private @Nullable Output<Integer> clientConnectionPort;

    /**
     * @return The port used for client connections to the cluster.
     * 
     */
    public Optional<Output<Integer>> clientConnectionPort() {
        return Optional.ofNullable(this.clientConnectionPort);
    }

    /**
     * client certificates for the cluster.
     * 
     */
    @Import(name="clients")
    private @Nullable Output<List<ClientCertificateArgs>> clients;

    /**
     * @return client certificates for the cluster.
     * 
     */
    public Optional<Output<List<ClientCertificateArgs>>> clients() {
        return Optional.ofNullable(this.clients);
    }

    /**
     * The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to &#39;Manual&#39;. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
     * 
     */
    @Import(name="clusterCodeVersion")
    private @Nullable Output<String> clusterCodeVersion;

    /**
     * @return The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to &#39;Manual&#39;. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
     * 
     */
    public Optional<Output<String>> clusterCodeVersion() {
        return Optional.ofNullable(this.clusterCodeVersion);
    }

    /**
     * The name of the cluster resource.
     * 
     */
    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    /**
     * @return The name of the cluster resource.
     * 
     */
    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    /**
     * The cluster dns name.
     * 
     */
    @Import(name="dnsName", required=true)
    private Output<String> dnsName;

    /**
     * @return The cluster dns name.
     * 
     */
    public Output<String> dnsName() {
        return this.dnsName;
    }

    /**
     * The list of custom fabric settings to configure the cluster.
     * 
     */
    @Import(name="fabricSettings")
    private @Nullable Output<List<SettingsSectionDescriptionArgs>> fabricSettings;

    /**
     * @return The list of custom fabric settings to configure the cluster.
     * 
     */
    public Optional<Output<List<SettingsSectionDescriptionArgs>>> fabricSettings() {
        return Optional.ofNullable(this.fabricSettings);
    }

    /**
     * The port used for http connections to the cluster.
     * 
     */
    @Import(name="httpGatewayConnectionPort")
    private @Nullable Output<Integer> httpGatewayConnectionPort;

    /**
     * @return The port used for http connections to the cluster.
     * 
     */
    public Optional<Output<Integer>> httpGatewayConnectionPort() {
        return Optional.ofNullable(this.httpGatewayConnectionPort);
    }

    /**
     * Describes load balancing rules.
     * 
     */
    @Import(name="loadBalancingRules")
    private @Nullable Output<List<LoadBalancingRuleArgs>> loadBalancingRules;

    /**
     * @return Describes load balancing rules.
     * 
     */
    public Optional<Output<List<LoadBalancingRuleArgs>>> loadBalancingRules() {
        return Optional.ofNullable(this.loadBalancingRules);
    }

    /**
     * Azure resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Azure resource location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The sku of the managed cluster
     * 
     */
    @Import(name="sku")
    private @Nullable Output<SkuArgs> sku;

    /**
     * @return The sku of the managed cluster
     * 
     */
    public Optional<Output<SkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Azure resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Azure resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ManagedClusterArgs() {}

    private ManagedClusterArgs(ManagedClusterArgs $) {
        this.addonFeatures = $.addonFeatures;
        this.adminPassword = $.adminPassword;
        this.adminUserName = $.adminUserName;
        this.azureActiveDirectory = $.azureActiveDirectory;
        this.clientConnectionPort = $.clientConnectionPort;
        this.clients = $.clients;
        this.clusterCodeVersion = $.clusterCodeVersion;
        this.clusterName = $.clusterName;
        this.dnsName = $.dnsName;
        this.fabricSettings = $.fabricSettings;
        this.httpGatewayConnectionPort = $.httpGatewayConnectionPort;
        this.loadBalancingRules = $.loadBalancingRules;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedClusterArgs $;

        public Builder() {
            $ = new ManagedClusterArgs();
        }

        public Builder(ManagedClusterArgs defaults) {
            $ = new ManagedClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addonFeatures client certificates for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder addonFeatures(@Nullable Output<List<String>> addonFeatures) {
            $.addonFeatures = addonFeatures;
            return this;
        }

        /**
         * @param addonFeatures client certificates for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder addonFeatures(List<String> addonFeatures) {
            return addonFeatures(Output.of(addonFeatures));
        }

        /**
         * @param addonFeatures client certificates for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder addonFeatures(String... addonFeatures) {
            return addonFeatures(List.of(addonFeatures));
        }

        /**
         * @param adminPassword vm admin user password.
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(@Nullable Output<String> adminPassword) {
            $.adminPassword = adminPassword;
            return this;
        }

        /**
         * @param adminPassword vm admin user password.
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(String adminPassword) {
            return adminPassword(Output.of(adminPassword));
        }

        /**
         * @param adminUserName vm admin user name.
         * 
         * @return builder
         * 
         */
        public Builder adminUserName(Output<String> adminUserName) {
            $.adminUserName = adminUserName;
            return this;
        }

        /**
         * @param adminUserName vm admin user name.
         * 
         * @return builder
         * 
         */
        public Builder adminUserName(String adminUserName) {
            return adminUserName(Output.of(adminUserName));
        }

        /**
         * @param azureActiveDirectory Azure active directory.
         * 
         * @return builder
         * 
         */
        public Builder azureActiveDirectory(@Nullable Output<AzureActiveDirectoryArgs> azureActiveDirectory) {
            $.azureActiveDirectory = azureActiveDirectory;
            return this;
        }

        /**
         * @param azureActiveDirectory Azure active directory.
         * 
         * @return builder
         * 
         */
        public Builder azureActiveDirectory(AzureActiveDirectoryArgs azureActiveDirectory) {
            return azureActiveDirectory(Output.of(azureActiveDirectory));
        }

        /**
         * @param clientConnectionPort The port used for client connections to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clientConnectionPort(@Nullable Output<Integer> clientConnectionPort) {
            $.clientConnectionPort = clientConnectionPort;
            return this;
        }

        /**
         * @param clientConnectionPort The port used for client connections to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clientConnectionPort(Integer clientConnectionPort) {
            return clientConnectionPort(Output.of(clientConnectionPort));
        }

        /**
         * @param clients client certificates for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clients(@Nullable Output<List<ClientCertificateArgs>> clients) {
            $.clients = clients;
            return this;
        }

        /**
         * @param clients client certificates for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clients(List<ClientCertificateArgs> clients) {
            return clients(Output.of(clients));
        }

        /**
         * @param clients client certificates for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clients(ClientCertificateArgs... clients) {
            return clients(List.of(clients));
        }

        /**
         * @param clusterCodeVersion The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to &#39;Manual&#39;. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
         * 
         * @return builder
         * 
         */
        public Builder clusterCodeVersion(@Nullable Output<String> clusterCodeVersion) {
            $.clusterCodeVersion = clusterCodeVersion;
            return this;
        }

        /**
         * @param clusterCodeVersion The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to &#39;Manual&#39;. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
         * 
         * @return builder
         * 
         */
        public Builder clusterCodeVersion(String clusterCodeVersion) {
            return clusterCodeVersion(Output.of(clusterCodeVersion));
        }

        /**
         * @param clusterName The name of the cluster resource.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the cluster resource.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param dnsName The cluster dns name.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(Output<String> dnsName) {
            $.dnsName = dnsName;
            return this;
        }

        /**
         * @param dnsName The cluster dns name.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(String dnsName) {
            return dnsName(Output.of(dnsName));
        }

        /**
         * @param fabricSettings The list of custom fabric settings to configure the cluster.
         * 
         * @return builder
         * 
         */
        public Builder fabricSettings(@Nullable Output<List<SettingsSectionDescriptionArgs>> fabricSettings) {
            $.fabricSettings = fabricSettings;
            return this;
        }

        /**
         * @param fabricSettings The list of custom fabric settings to configure the cluster.
         * 
         * @return builder
         * 
         */
        public Builder fabricSettings(List<SettingsSectionDescriptionArgs> fabricSettings) {
            return fabricSettings(Output.of(fabricSettings));
        }

        /**
         * @param fabricSettings The list of custom fabric settings to configure the cluster.
         * 
         * @return builder
         * 
         */
        public Builder fabricSettings(SettingsSectionDescriptionArgs... fabricSettings) {
            return fabricSettings(List.of(fabricSettings));
        }

        /**
         * @param httpGatewayConnectionPort The port used for http connections to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder httpGatewayConnectionPort(@Nullable Output<Integer> httpGatewayConnectionPort) {
            $.httpGatewayConnectionPort = httpGatewayConnectionPort;
            return this;
        }

        /**
         * @param httpGatewayConnectionPort The port used for http connections to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder httpGatewayConnectionPort(Integer httpGatewayConnectionPort) {
            return httpGatewayConnectionPort(Output.of(httpGatewayConnectionPort));
        }

        /**
         * @param loadBalancingRules Describes load balancing rules.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancingRules(@Nullable Output<List<LoadBalancingRuleArgs>> loadBalancingRules) {
            $.loadBalancingRules = loadBalancingRules;
            return this;
        }

        /**
         * @param loadBalancingRules Describes load balancing rules.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancingRules(List<LoadBalancingRuleArgs> loadBalancingRules) {
            return loadBalancingRules(Output.of(loadBalancingRules));
        }

        /**
         * @param loadBalancingRules Describes load balancing rules.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancingRules(LoadBalancingRuleArgs... loadBalancingRules) {
            return loadBalancingRules(List.of(loadBalancingRules));
        }

        /**
         * @param location Azure resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Azure resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku The sku of the managed cluster
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<SkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The sku of the managed cluster
         * 
         * @return builder
         * 
         */
        public Builder sku(SkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags Azure resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Azure resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ManagedClusterArgs build() {
            $.adminUserName = Objects.requireNonNull($.adminUserName, "expected parameter 'adminUserName' to be non-null");
            $.clientConnectionPort = Codegen.integerProp("clientConnectionPort").output().arg($.clientConnectionPort).def(19000).getNullable();
            $.dnsName = Objects.requireNonNull($.dnsName, "expected parameter 'dnsName' to be non-null");
            $.httpGatewayConnectionPort = Codegen.integerProp("httpGatewayConnectionPort").output().arg($.httpGatewayConnectionPort).def(19080).getNullable();
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
