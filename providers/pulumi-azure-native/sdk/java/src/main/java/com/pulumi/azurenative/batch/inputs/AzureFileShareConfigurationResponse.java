// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureFileShareConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final AzureFileShareConfigurationResponse Empty = new AzureFileShareConfigurationResponse();

    @Import(name="accountKey", required=true)
    private String accountKey;

    public String accountKey() {
        return this.accountKey;
    }

    @Import(name="accountName", required=true)
    private String accountName;

    public String accountName() {
        return this.accountName;
    }

    /**
     * This is of the form &#39;https://{account}.file.core.windows.net/&#39;.
     * 
     */
    @Import(name="azureFileUrl", required=true)
    private String azureFileUrl;

    public String azureFileUrl() {
        return this.azureFileUrl;
    }

    /**
     * These are &#39;net use&#39; options in Windows and &#39;mount&#39; options in Linux.
     * 
     */
    @Import(name="mountOptions")
    private @Nullable String mountOptions;

    public Optional<String> mountOptions() {
        return Optional.ofNullable(this.mountOptions);
    }

    /**
     * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
     * 
     */
    @Import(name="relativeMountPath", required=true)
    private String relativeMountPath;

    public String relativeMountPath() {
        return this.relativeMountPath;
    }

    private AzureFileShareConfigurationResponse() {}

    private AzureFileShareConfigurationResponse(AzureFileShareConfigurationResponse $) {
        this.accountKey = $.accountKey;
        this.accountName = $.accountName;
        this.azureFileUrl = $.azureFileUrl;
        this.mountOptions = $.mountOptions;
        this.relativeMountPath = $.relativeMountPath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureFileShareConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureFileShareConfigurationResponse $;

        public Builder() {
            $ = new AzureFileShareConfigurationResponse();
        }

        public Builder(AzureFileShareConfigurationResponse defaults) {
            $ = new AzureFileShareConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder accountKey(String accountKey) {
            $.accountKey = accountKey;
            return this;
        }

        public Builder accountName(String accountName) {
            $.accountName = accountName;
            return this;
        }

        public Builder azureFileUrl(String azureFileUrl) {
            $.azureFileUrl = azureFileUrl;
            return this;
        }

        public Builder mountOptions(@Nullable String mountOptions) {
            $.mountOptions = mountOptions;
            return this;
        }

        public Builder relativeMountPath(String relativeMountPath) {
            $.relativeMountPath = relativeMountPath;
            return this;
        }

        public AzureFileShareConfigurationResponse build() {
            $.accountKey = Objects.requireNonNull($.accountKey, "expected parameter 'accountKey' to be non-null");
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.azureFileUrl = Objects.requireNonNull($.azureFileUrl, "expected parameter 'azureFileUrl' to be non-null");
            $.relativeMountPath = Objects.requireNonNull($.relativeMountPath, "expected parameter 'relativeMountPath' to be non-null");
            return $;
        }
    }

}
