// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cognitiveservices.inputs;

import com.pulumi.azurenative.cognitiveservices.inputs.CognitiveServicesAccountApiPropertiesResponse;
import com.pulumi.azurenative.cognitiveservices.inputs.CognitiveServicesAccountSkuChangeInfoResponse;
import com.pulumi.azurenative.cognitiveservices.inputs.EncryptionResponse;
import com.pulumi.azurenative.cognitiveservices.inputs.NetworkRuleSetResponse;
import com.pulumi.azurenative.cognitiveservices.inputs.PrivateEndpointConnectionResponse;
import com.pulumi.azurenative.cognitiveservices.inputs.SkuCapabilityResponse;
import com.pulumi.azurenative.cognitiveservices.inputs.UserOwnedStorageResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of Cognitive Services account.
 * 
 */
public final class CognitiveServicesAccountPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final CognitiveServicesAccountPropertiesResponse Empty = new CognitiveServicesAccountPropertiesResponse();

    /**
     * The api properties for special APIs.
     * 
     */
    @Import(name="apiProperties")
    private @Nullable CognitiveServicesAccountApiPropertiesResponse apiProperties;

    public Optional<CognitiveServicesAccountApiPropertiesResponse> apiProperties() {
        return Optional.ofNullable(this.apiProperties);
    }

    /**
     * Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only.
     * 
     */
    @Import(name="capabilities", required=true)
    private List<SkuCapabilityResponse> capabilities;

    public List<SkuCapabilityResponse> capabilities() {
        return this.capabilities;
    }

    /**
     * Optional subdomain name used for token-based authentication.
     * 
     */
    @Import(name="customSubDomainName")
    private @Nullable String customSubDomainName;

    public Optional<String> customSubDomainName() {
        return Optional.ofNullable(this.customSubDomainName);
    }

    /**
     * Gets the date of cognitive services account creation.
     * 
     */
    @Import(name="dateCreated", required=true)
    private String dateCreated;

    public String dateCreated() {
        return this.dateCreated;
    }

    /**
     * The encryption properties for this resource.
     * 
     */
    @Import(name="encryption")
    private @Nullable EncryptionResponse encryption;

    public Optional<EncryptionResponse> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * Endpoint of the created account.
     * 
     */
    @Import(name="endpoint", required=true)
    private String endpoint;

    public String endpoint() {
        return this.endpoint;
    }

    /**
     * The internal identifier.
     * 
     */
    @Import(name="internalId", required=true)
    private String internalId;

    public String internalId() {
        return this.internalId;
    }

    /**
     * If the resource is migrated from an existing key.
     * 
     */
    @Import(name="isMigrated", required=true)
    private Boolean isMigrated;

    public Boolean isMigrated() {
        return this.isMigrated;
    }

    /**
     * A collection of rules governing the accessibility from specific network locations.
     * 
     */
    @Import(name="networkAcls")
    private @Nullable NetworkRuleSetResponse networkAcls;

    public Optional<NetworkRuleSetResponse> networkAcls() {
        return Optional.ofNullable(this.networkAcls);
    }

    /**
     * The private endpoint connection associated with the Cognitive Services account.
     * 
     */
    @Import(name="privateEndpointConnections")
    private @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;

    public Optional<List<PrivateEndpointConnectionResponse>> privateEndpointConnections() {
        return Optional.ofNullable(this.privateEndpointConnections);
    }

    /**
     * Gets the status of the cognitive services account at the time the operation was called.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Whether or not public endpoint access is allowed for this account. Value is optional but if passed in, must be &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
     */
    @Import(name="publicNetworkAccess")
    private @Nullable String publicNetworkAccess;

    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }

    /**
     * Sku change info of account.
     * 
     */
    @Import(name="skuChangeInfo", required=true)
    private CognitiveServicesAccountSkuChangeInfoResponse skuChangeInfo;

    public CognitiveServicesAccountSkuChangeInfoResponse skuChangeInfo() {
        return this.skuChangeInfo;
    }

    /**
     * The storage accounts for this resource.
     * 
     */
    @Import(name="userOwnedStorage")
    private @Nullable List<UserOwnedStorageResponse> userOwnedStorage;

    public Optional<List<UserOwnedStorageResponse>> userOwnedStorage() {
        return Optional.ofNullable(this.userOwnedStorage);
    }

    private CognitiveServicesAccountPropertiesResponse() {}

    private CognitiveServicesAccountPropertiesResponse(CognitiveServicesAccountPropertiesResponse $) {
        this.apiProperties = $.apiProperties;
        this.capabilities = $.capabilities;
        this.customSubDomainName = $.customSubDomainName;
        this.dateCreated = $.dateCreated;
        this.encryption = $.encryption;
        this.endpoint = $.endpoint;
        this.internalId = $.internalId;
        this.isMigrated = $.isMigrated;
        this.networkAcls = $.networkAcls;
        this.privateEndpointConnections = $.privateEndpointConnections;
        this.provisioningState = $.provisioningState;
        this.publicNetworkAccess = $.publicNetworkAccess;
        this.skuChangeInfo = $.skuChangeInfo;
        this.userOwnedStorage = $.userOwnedStorage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CognitiveServicesAccountPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CognitiveServicesAccountPropertiesResponse $;

        public Builder() {
            $ = new CognitiveServicesAccountPropertiesResponse();
        }

        public Builder(CognitiveServicesAccountPropertiesResponse defaults) {
            $ = new CognitiveServicesAccountPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder apiProperties(@Nullable CognitiveServicesAccountApiPropertiesResponse apiProperties) {
            $.apiProperties = apiProperties;
            return this;
        }

        public Builder capabilities(List<SkuCapabilityResponse> capabilities) {
            $.capabilities = capabilities;
            return this;
        }

        public Builder capabilities(SkuCapabilityResponse... capabilities) {
            return capabilities(List.of(capabilities));
        }

        public Builder customSubDomainName(@Nullable String customSubDomainName) {
            $.customSubDomainName = customSubDomainName;
            return this;
        }

        public Builder dateCreated(String dateCreated) {
            $.dateCreated = dateCreated;
            return this;
        }

        public Builder encryption(@Nullable EncryptionResponse encryption) {
            $.encryption = encryption;
            return this;
        }

        public Builder endpoint(String endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder internalId(String internalId) {
            $.internalId = internalId;
            return this;
        }

        public Builder isMigrated(Boolean isMigrated) {
            $.isMigrated = isMigrated;
            return this;
        }

        public Builder networkAcls(@Nullable NetworkRuleSetResponse networkAcls) {
            $.networkAcls = networkAcls;
            return this;
        }

        public Builder privateEndpointConnections(@Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            $.privateEndpointConnections = privateEndpointConnections;
            return this;
        }

        public Builder privateEndpointConnections(PrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            $.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        public Builder skuChangeInfo(CognitiveServicesAccountSkuChangeInfoResponse skuChangeInfo) {
            $.skuChangeInfo = skuChangeInfo;
            return this;
        }

        public Builder userOwnedStorage(@Nullable List<UserOwnedStorageResponse> userOwnedStorage) {
            $.userOwnedStorage = userOwnedStorage;
            return this;
        }

        public Builder userOwnedStorage(UserOwnedStorageResponse... userOwnedStorage) {
            return userOwnedStorage(List.of(userOwnedStorage));
        }

        public CognitiveServicesAccountPropertiesResponse build() {
            $.capabilities = Objects.requireNonNull($.capabilities, "expected parameter 'capabilities' to be non-null");
            $.dateCreated = Objects.requireNonNull($.dateCreated, "expected parameter 'dateCreated' to be non-null");
            $.endpoint = Objects.requireNonNull($.endpoint, "expected parameter 'endpoint' to be non-null");
            $.internalId = Objects.requireNonNull($.internalId, "expected parameter 'internalId' to be non-null");
            $.isMigrated = Objects.requireNonNull($.isMigrated, "expected parameter 'isMigrated' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.skuChangeInfo = Objects.requireNonNull($.skuChangeInfo, "expected parameter 'skuChangeInfo' to be non-null");
            return $;
        }
    }

}
