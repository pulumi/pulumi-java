// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.peering;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.peering.RegisteredAsnArgs;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The customer&#39;s ASN that is registered by the peering service provider.
 * API Version: 2021-01-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:peering:RegisteredAsn registeredAsnName /subscriptions/subId/resourceGroups/rgName/providers/Microsoft.Peering/peerings/peeringName/registeredAsns/registeredAsnName 
 * ```
 * 
 */
@ResourceType(type="azure-native:peering:RegisteredAsn")
public class RegisteredAsn extends com.pulumi.resources.CustomResource {
    /**
     * The customer&#39;s ASN from which traffic originates.
     * 
     */
    @Export(name="asn", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> asn;

    /**
     * @return The customer&#39;s ASN from which traffic originates.
     * 
     */
    public Output<Optional<Integer>> asn() {
        return Codegen.optional(this.asn);
    }
    /**
     * The name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The peering service prefix key that is to be shared with the customer.
     * 
     */
    @Export(name="peeringServicePrefixKey", type=String.class, parameters={})
    private Output<String> peeringServicePrefixKey;

    /**
     * @return The peering service prefix key that is to be shared with the customer.
     * 
     */
    public Output<String> peeringServicePrefixKey() {
        return this.peeringServicePrefixKey;
    }
    /**
     * The provisioning state of the resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * The type of the resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RegisteredAsn(String name) {
        this(name, RegisteredAsnArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RegisteredAsn(String name, RegisteredAsnArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RegisteredAsn(String name, RegisteredAsnArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:peering:RegisteredAsn", name, args == null ? RegisteredAsnArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RegisteredAsn(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:peering:RegisteredAsn", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:peering/v20200101preview:RegisteredAsn").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20200401:RegisteredAsn").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20201001:RegisteredAsn").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20210101:RegisteredAsn").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20210601:RegisteredAsn").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20220101:RegisteredAsn").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RegisteredAsn get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RegisteredAsn(name, id, options);
    }
}
