// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.ApiConnectionTestLinkArgs;
import com.pulumi.azurenative.web.inputs.ApiReferenceArgs;
import com.pulumi.azurenative.web.inputs.ConnectionStatusDefinitionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiConnectionDefinitionPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiConnectionDefinitionPropertiesArgs Empty = new ApiConnectionDefinitionPropertiesArgs();

    @Import(name="api")
    private @Nullable Output<ApiReferenceArgs> api;

    public Optional<Output<ApiReferenceArgs>> api() {
        return Optional.ofNullable(this.api);
    }

    /**
     * Timestamp of last connection change
     * 
     */
    @Import(name="changedTime")
    private @Nullable Output<String> changedTime;

    public Optional<Output<String>> changedTime() {
        return Optional.ofNullable(this.changedTime);
    }

    /**
     * Timestamp of the connection creation
     * 
     */
    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    /**
     * Dictionary of custom parameter values
     * 
     */
    @Import(name="customParameterValues")
    private @Nullable Output<Map<String,String>> customParameterValues;

    public Optional<Output<Map<String,String>>> customParameterValues() {
        return Optional.ofNullable(this.customParameterValues);
    }

    /**
     * Display name
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Dictionary of nonsecret parameter values
     * 
     */
    @Import(name="nonSecretParameterValues")
    private @Nullable Output<Map<String,String>> nonSecretParameterValues;

    public Optional<Output<Map<String,String>>> nonSecretParameterValues() {
        return Optional.ofNullable(this.nonSecretParameterValues);
    }

    /**
     * Dictionary of parameter values
     * 
     */
    @Import(name="parameterValues")
    private @Nullable Output<Map<String,String>> parameterValues;

    public Optional<Output<Map<String,String>>> parameterValues() {
        return Optional.ofNullable(this.parameterValues);
    }

    /**
     * Status of the connection
     * 
     */
    @Import(name="statuses")
    private @Nullable Output<List<ConnectionStatusDefinitionArgs>> statuses;

    public Optional<Output<List<ConnectionStatusDefinitionArgs>>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    /**
     * Links to test the API connection
     * 
     */
    @Import(name="testLinks")
    private @Nullable Output<List<ApiConnectionTestLinkArgs>> testLinks;

    public Optional<Output<List<ApiConnectionTestLinkArgs>>> testLinks() {
        return Optional.ofNullable(this.testLinks);
    }

    private ApiConnectionDefinitionPropertiesArgs() {}

    private ApiConnectionDefinitionPropertiesArgs(ApiConnectionDefinitionPropertiesArgs $) {
        this.api = $.api;
        this.changedTime = $.changedTime;
        this.createdTime = $.createdTime;
        this.customParameterValues = $.customParameterValues;
        this.displayName = $.displayName;
        this.nonSecretParameterValues = $.nonSecretParameterValues;
        this.parameterValues = $.parameterValues;
        this.statuses = $.statuses;
        this.testLinks = $.testLinks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiConnectionDefinitionPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiConnectionDefinitionPropertiesArgs $;

        public Builder() {
            $ = new ApiConnectionDefinitionPropertiesArgs();
        }

        public Builder(ApiConnectionDefinitionPropertiesArgs defaults) {
            $ = new ApiConnectionDefinitionPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder api(@Nullable Output<ApiReferenceArgs> api) {
            $.api = api;
            return this;
        }

        public Builder api(ApiReferenceArgs api) {
            return api(Output.of(api));
        }

        public Builder changedTime(@Nullable Output<String> changedTime) {
            $.changedTime = changedTime;
            return this;
        }

        public Builder changedTime(String changedTime) {
            return changedTime(Output.of(changedTime));
        }

        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        public Builder customParameterValues(@Nullable Output<Map<String,String>> customParameterValues) {
            $.customParameterValues = customParameterValues;
            return this;
        }

        public Builder customParameterValues(Map<String,String> customParameterValues) {
            return customParameterValues(Output.of(customParameterValues));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder nonSecretParameterValues(@Nullable Output<Map<String,String>> nonSecretParameterValues) {
            $.nonSecretParameterValues = nonSecretParameterValues;
            return this;
        }

        public Builder nonSecretParameterValues(Map<String,String> nonSecretParameterValues) {
            return nonSecretParameterValues(Output.of(nonSecretParameterValues));
        }

        public Builder parameterValues(@Nullable Output<Map<String,String>> parameterValues) {
            $.parameterValues = parameterValues;
            return this;
        }

        public Builder parameterValues(Map<String,String> parameterValues) {
            return parameterValues(Output.of(parameterValues));
        }

        public Builder statuses(@Nullable Output<List<ConnectionStatusDefinitionArgs>> statuses) {
            $.statuses = statuses;
            return this;
        }

        public Builder statuses(List<ConnectionStatusDefinitionArgs> statuses) {
            return statuses(Output.of(statuses));
        }

        public Builder statuses(ConnectionStatusDefinitionArgs... statuses) {
            return statuses(List.of(statuses));
        }

        public Builder testLinks(@Nullable Output<List<ApiConnectionTestLinkArgs>> testLinks) {
            $.testLinks = testLinks;
            return this;
        }

        public Builder testLinks(List<ApiConnectionTestLinkArgs> testLinks) {
            return testLinks(Output.of(testLinks));
        }

        public Builder testLinks(ApiConnectionTestLinkArgs... testLinks) {
            return testLinks(List.of(testLinks));
        }

        public ApiConnectionDefinitionPropertiesArgs build() {
            return $;
        }
    }

}
