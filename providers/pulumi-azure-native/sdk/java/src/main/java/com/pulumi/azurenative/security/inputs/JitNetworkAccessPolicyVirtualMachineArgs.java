// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.inputs.JitNetworkAccessPortRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JitNetworkAccessPolicyVirtualMachineArgs extends com.pulumi.resources.ResourceArgs {

    public static final JitNetworkAccessPolicyVirtualMachineArgs Empty = new JitNetworkAccessPolicyVirtualMachineArgs();

    /**
     * Resource ID of the virtual machine that is linked to this policy
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Resource ID of the virtual machine that is linked to this policy
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Port configurations for the virtual machine
     * 
     */
    @Import(name="ports", required=true)
    private Output<List<JitNetworkAccessPortRuleArgs>> ports;

    /**
     * @return Port configurations for the virtual machine
     * 
     */
    public Output<List<JitNetworkAccessPortRuleArgs>> ports() {
        return this.ports;
    }

    /**
     * Public IP address of the Azure Firewall that is linked to this policy, if applicable
     * 
     */
    @Import(name="publicIpAddress")
    private @Nullable Output<String> publicIpAddress;

    /**
     * @return Public IP address of the Azure Firewall that is linked to this policy, if applicable
     * 
     */
    public Optional<Output<String>> publicIpAddress() {
        return Optional.ofNullable(this.publicIpAddress);
    }

    private JitNetworkAccessPolicyVirtualMachineArgs() {}

    private JitNetworkAccessPolicyVirtualMachineArgs(JitNetworkAccessPolicyVirtualMachineArgs $) {
        this.id = $.id;
        this.ports = $.ports;
        this.publicIpAddress = $.publicIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JitNetworkAccessPolicyVirtualMachineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JitNetworkAccessPolicyVirtualMachineArgs $;

        public Builder() {
            $ = new JitNetworkAccessPolicyVirtualMachineArgs();
        }

        public Builder(JitNetworkAccessPolicyVirtualMachineArgs defaults) {
            $ = new JitNetworkAccessPolicyVirtualMachineArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Resource ID of the virtual machine that is linked to this policy
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Resource ID of the virtual machine that is linked to this policy
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param ports Port configurations for the virtual machine
         * 
         * @return builder
         * 
         */
        public Builder ports(Output<List<JitNetworkAccessPortRuleArgs>> ports) {
            $.ports = ports;
            return this;
        }

        /**
         * @param ports Port configurations for the virtual machine
         * 
         * @return builder
         * 
         */
        public Builder ports(List<JitNetworkAccessPortRuleArgs> ports) {
            return ports(Output.of(ports));
        }

        /**
         * @param ports Port configurations for the virtual machine
         * 
         * @return builder
         * 
         */
        public Builder ports(JitNetworkAccessPortRuleArgs... ports) {
            return ports(List.of(ports));
        }

        /**
         * @param publicIpAddress Public IP address of the Azure Firewall that is linked to this policy, if applicable
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddress(@Nullable Output<String> publicIpAddress) {
            $.publicIpAddress = publicIpAddress;
            return this;
        }

        /**
         * @param publicIpAddress Public IP address of the Azure Firewall that is linked to this policy, if applicable
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddress(String publicIpAddress) {
            return publicIpAddress(Output.of(publicIpAddress));
        }

        public JitNetworkAccessPolicyVirtualMachineArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.ports = Objects.requireNonNull($.ports, "expected parameter 'ports' to be non-null");
            return $;
        }
    }

}
