// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The parameters to provide for the Sms channel.
 * 
 */
public final class SmsChannelPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final SmsChannelPropertiesResponse Empty = new SmsChannelPropertiesResponse();

    /**
     * The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    @Import(name="accountSID", required=true)
    private String accountSID;

    /**
     * @return The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    public String accountSID() {
        return this.accountSID;
    }

    /**
     * The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    @Import(name="authToken")
    private @Nullable String authToken;

    /**
     * @return The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    public Optional<String> authToken() {
        return Optional.ofNullable(this.authToken);
    }

    /**
     * Whether this channel is enabled for the bot
     * 
     */
    @Import(name="isEnabled", required=true)
    private Boolean isEnabled;

    /**
     * @return Whether this channel is enabled for the bot
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }

    /**
     * Whether this channel is validated for the bot
     * 
     */
    @Import(name="isValidated")
    private @Nullable Boolean isValidated;

    /**
     * @return Whether this channel is validated for the bot
     * 
     */
    public Optional<Boolean> isValidated() {
        return Optional.ofNullable(this.isValidated);
    }

    /**
     * The Sms phone
     * 
     */
    @Import(name="phone", required=true)
    private String phone;

    /**
     * @return The Sms phone
     * 
     */
    public String phone() {
        return this.phone;
    }

    private SmsChannelPropertiesResponse() {}

    private SmsChannelPropertiesResponse(SmsChannelPropertiesResponse $) {
        this.accountSID = $.accountSID;
        this.authToken = $.authToken;
        this.isEnabled = $.isEnabled;
        this.isValidated = $.isValidated;
        this.phone = $.phone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SmsChannelPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SmsChannelPropertiesResponse $;

        public Builder() {
            $ = new SmsChannelPropertiesResponse();
        }

        public Builder(SmsChannelPropertiesResponse defaults) {
            $ = new SmsChannelPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountSID The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
         * 
         * @return builder
         * 
         */
        public Builder accountSID(String accountSID) {
            $.accountSID = accountSID;
            return this;
        }

        /**
         * @param authToken The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
         * 
         * @return builder
         * 
         */
        public Builder authToken(@Nullable String authToken) {
            $.authToken = authToken;
            return this;
        }

        /**
         * @param isEnabled Whether this channel is enabled for the bot
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isValidated Whether this channel is validated for the bot
         * 
         * @return builder
         * 
         */
        public Builder isValidated(@Nullable Boolean isValidated) {
            $.isValidated = isValidated;
            return this;
        }

        /**
         * @param phone The Sms phone
         * 
         * @return builder
         * 
         */
        public Builder phone(String phone) {
            $.phone = phone;
            return this;
        }

        public SmsChannelPropertiesResponse build() {
            $.accountSID = Objects.requireNonNull($.accountSID, "expected parameter 'accountSID' to be non-null");
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            $.phone = Objects.requireNonNull($.phone, "expected parameter 'phone' to be non-null");
            return $;
        }
    }

}
