// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Asset sink.
 * 
 */
public final class MediaGraphAssetSinkArgs extends com.pulumi.resources.ResourceArgs {

    public static final MediaGraphAssetSinkArgs Empty = new MediaGraphAssetSinkArgs();

    /**
     * Asset name.
     * 
     */
    @Import(name="assetName", required=true)
    private Output<String> assetName;

    public Output<String> assetName() {
        return this.assetName;
    }

    /**
     * Sink inputs.
     * 
     */
    @Import(name="inputs", required=true)
    private Output<List<String>> inputs;

    public Output<List<String>> inputs() {
        return this.inputs;
    }

    /**
     * Sink name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.MediaGraphAssetSink&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private Output<String> odataType;

    public Output<String> odataType() {
        return this.odataType;
    }

    private MediaGraphAssetSinkArgs() {}

    private MediaGraphAssetSinkArgs(MediaGraphAssetSinkArgs $) {
        this.assetName = $.assetName;
        this.inputs = $.inputs;
        this.name = $.name;
        this.odataType = $.odataType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MediaGraphAssetSinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MediaGraphAssetSinkArgs $;

        public Builder() {
            $ = new MediaGraphAssetSinkArgs();
        }

        public Builder(MediaGraphAssetSinkArgs defaults) {
            $ = new MediaGraphAssetSinkArgs(Objects.requireNonNull(defaults));
        }

        public Builder assetName(Output<String> assetName) {
            $.assetName = assetName;
            return this;
        }

        public Builder assetName(String assetName) {
            return assetName(Output.of(assetName));
        }

        public Builder inputs(Output<List<String>> inputs) {
            $.inputs = inputs;
            return this;
        }

        public Builder inputs(List<String> inputs) {
            return inputs(Output.of(inputs));
        }

        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder odataType(Output<String> odataType) {
            $.odataType = odataType;
            return this;
        }

        public Builder odataType(String odataType) {
            return odataType(Output.of(odataType));
        }

        public MediaGraphAssetSinkArgs build() {
            $.assetName = Objects.requireNonNull($.assetName, "expected parameter 'assetName' to be non-null");
            $.inputs = Objects.requireNonNull($.inputs, "expected parameter 'inputs' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.odataType = Codegen.stringProp("odataType").output().arg($.odataType).require();
            return $;
        }
    }

}
