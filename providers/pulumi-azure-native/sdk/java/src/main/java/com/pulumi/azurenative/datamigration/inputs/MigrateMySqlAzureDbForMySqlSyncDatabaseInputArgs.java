// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Database specific information for MySQL to Azure Database for MySQL migration task inputs
 * 
 */
public final class MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs Empty = new MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs();

    /**
     * Migration settings which tune the migration behavior
     * 
     */
    @Import(name="migrationSetting")
    private @Nullable Output<Map<String,String>> migrationSetting;

    /**
     * @return Migration settings which tune the migration behavior
     * 
     */
    public Optional<Output<Map<String,String>>> migrationSetting() {
        return Optional.ofNullable(this.migrationSetting);
    }

    /**
     * Name of the database
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the database
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Source settings to tune source endpoint migration behavior
     * 
     */
    @Import(name="sourceSetting")
    private @Nullable Output<Map<String,String>> sourceSetting;

    /**
     * @return Source settings to tune source endpoint migration behavior
     * 
     */
    public Optional<Output<Map<String,String>>> sourceSetting() {
        return Optional.ofNullable(this.sourceSetting);
    }

    /**
     * Name of target database. Note: Target database will be truncated before starting migration.
     * 
     */
    @Import(name="targetDatabaseName")
    private @Nullable Output<String> targetDatabaseName;

    /**
     * @return Name of target database. Note: Target database will be truncated before starting migration.
     * 
     */
    public Optional<Output<String>> targetDatabaseName() {
        return Optional.ofNullable(this.targetDatabaseName);
    }

    /**
     * Target settings to tune target endpoint migration behavior
     * 
     */
    @Import(name="targetSetting")
    private @Nullable Output<Map<String,String>> targetSetting;

    /**
     * @return Target settings to tune target endpoint migration behavior
     * 
     */
    public Optional<Output<Map<String,String>>> targetSetting() {
        return Optional.ofNullable(this.targetSetting);
    }

    private MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs() {}

    private MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs $) {
        this.migrationSetting = $.migrationSetting;
        this.name = $.name;
        this.sourceSetting = $.sourceSetting;
        this.targetDatabaseName = $.targetDatabaseName;
        this.targetSetting = $.targetSetting;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs $;

        public Builder() {
            $ = new MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs();
        }

        public Builder(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs defaults) {
            $ = new MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param migrationSetting Migration settings which tune the migration behavior
         * 
         * @return builder
         * 
         */
        public Builder migrationSetting(@Nullable Output<Map<String,String>> migrationSetting) {
            $.migrationSetting = migrationSetting;
            return this;
        }

        /**
         * @param migrationSetting Migration settings which tune the migration behavior
         * 
         * @return builder
         * 
         */
        public Builder migrationSetting(Map<String,String> migrationSetting) {
            return migrationSetting(Output.of(migrationSetting));
        }

        /**
         * @param name Name of the database
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the database
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sourceSetting Source settings to tune source endpoint migration behavior
         * 
         * @return builder
         * 
         */
        public Builder sourceSetting(@Nullable Output<Map<String,String>> sourceSetting) {
            $.sourceSetting = sourceSetting;
            return this;
        }

        /**
         * @param sourceSetting Source settings to tune source endpoint migration behavior
         * 
         * @return builder
         * 
         */
        public Builder sourceSetting(Map<String,String> sourceSetting) {
            return sourceSetting(Output.of(sourceSetting));
        }

        /**
         * @param targetDatabaseName Name of target database. Note: Target database will be truncated before starting migration.
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseName(@Nullable Output<String> targetDatabaseName) {
            $.targetDatabaseName = targetDatabaseName;
            return this;
        }

        /**
         * @param targetDatabaseName Name of target database. Note: Target database will be truncated before starting migration.
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseName(String targetDatabaseName) {
            return targetDatabaseName(Output.of(targetDatabaseName));
        }

        /**
         * @param targetSetting Target settings to tune target endpoint migration behavior
         * 
         * @return builder
         * 
         */
        public Builder targetSetting(@Nullable Output<Map<String,String>> targetSetting) {
            $.targetSetting = targetSetting;
            return this;
        }

        /**
         * @param targetSetting Target settings to tune target endpoint migration behavior
         * 
         * @return builder
         * 
         */
        public Builder targetSetting(Map<String,String> targetSetting) {
            return targetSetting(Output.of(targetSetting));
        }

        public MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs build() {
            return $;
        }
    }

}
