// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.AADProperties;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRecoveryPointAccessTokenPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRecoveryPointAccessTokenPlainArgs Empty = new GetRecoveryPointAccessTokenPlainArgs();

    /**
     * Name of the container.
     * 
     */
    @Import(name="containerName", required=true)
    private String containerName;

    /**
     * @return Name of the container.
     * 
     */
    public String containerName() {
        return this.containerName;
    }

    /**
     * Optional ETag.
     * 
     */
    @Import(name="eTag")
    private @Nullable String eTag;

    /**
     * @return Optional ETag.
     * 
     */
    public Optional<String> eTag() {
        return Optional.ofNullable(this.eTag);
    }

    /**
     * Fabric name associated with the container.
     * 
     */
    @Import(name="fabricName", required=true)
    private String fabricName;

    /**
     * @return Fabric name associated with the container.
     * 
     */
    public String fabricName() {
        return this.fabricName;
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * AADPropertiesResource properties
     * 
     */
    @Import(name="properties")
    private @Nullable AADProperties properties;

    /**
     * @return AADPropertiesResource properties
     * 
     */
    public Optional<AADProperties> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Name of the Protected Item.
     * 
     */
    @Import(name="protectedItemName", required=true)
    private String protectedItemName;

    /**
     * @return Name of the Protected Item.
     * 
     */
    public String protectedItemName() {
        return this.protectedItemName;
    }

    /**
     * Recovery Point Id
     * 
     */
    @Import(name="recoveryPointId", required=true)
    private String recoveryPointId;

    /**
     * @return Recovery Point Id
     * 
     */
    public String recoveryPointId() {
        return this.recoveryPointId;
    }

    /**
     * The name of the resource group where the recovery services vault is present.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group where the recovery services vault is present.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The name of the recovery services vault.
     * 
     */
    @Import(name="vaultName", required=true)
    private String vaultName;

    /**
     * @return The name of the recovery services vault.
     * 
     */
    public String vaultName() {
        return this.vaultName;
    }

    private GetRecoveryPointAccessTokenPlainArgs() {}

    private GetRecoveryPointAccessTokenPlainArgs(GetRecoveryPointAccessTokenPlainArgs $) {
        this.containerName = $.containerName;
        this.eTag = $.eTag;
        this.fabricName = $.fabricName;
        this.location = $.location;
        this.properties = $.properties;
        this.protectedItemName = $.protectedItemName;
        this.recoveryPointId = $.recoveryPointId;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.vaultName = $.vaultName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRecoveryPointAccessTokenPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRecoveryPointAccessTokenPlainArgs $;

        public Builder() {
            $ = new GetRecoveryPointAccessTokenPlainArgs();
        }

        public Builder(GetRecoveryPointAccessTokenPlainArgs defaults) {
            $ = new GetRecoveryPointAccessTokenPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerName Name of the container.
         * 
         * @return builder
         * 
         */
        public Builder containerName(String containerName) {
            $.containerName = containerName;
            return this;
        }

        /**
         * @param eTag Optional ETag.
         * 
         * @return builder
         * 
         */
        public Builder eTag(@Nullable String eTag) {
            $.eTag = eTag;
            return this;
        }

        /**
         * @param fabricName Fabric name associated with the container.
         * 
         * @return builder
         * 
         */
        public Builder fabricName(String fabricName) {
            $.fabricName = fabricName;
            return this;
        }

        /**
         * @param location Resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        /**
         * @param properties AADPropertiesResource properties
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable AADProperties properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param protectedItemName Name of the Protected Item.
         * 
         * @return builder
         * 
         */
        public Builder protectedItemName(String protectedItemName) {
            $.protectedItemName = protectedItemName;
            return this;
        }

        /**
         * @param recoveryPointId Recovery Point Id
         * 
         * @return builder
         * 
         */
        public Builder recoveryPointId(String recoveryPointId) {
            $.recoveryPointId = recoveryPointId;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group where the recovery services vault is present.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param vaultName The name of the recovery services vault.
         * 
         * @return builder
         * 
         */
        public Builder vaultName(String vaultName) {
            $.vaultName = vaultName;
            return this;
        }

        public GetRecoveryPointAccessTokenPlainArgs build() {
            $.containerName = Objects.requireNonNull($.containerName, "expected parameter 'containerName' to be non-null");
            $.fabricName = Objects.requireNonNull($.fabricName, "expected parameter 'fabricName' to be non-null");
            $.protectedItemName = Objects.requireNonNull($.protectedItemName, "expected parameter 'protectedItemName' to be non-null");
            $.recoveryPointId = Objects.requireNonNull($.recoveryPointId, "expected parameter 'recoveryPointId' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.vaultName = Objects.requireNonNull($.vaultName, "expected parameter 'vaultName' to be non-null");
            return $;
        }
    }

}
