// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.domainregistration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details of a hostname derived from a domain.
 * 
 */
public final class HostNameResponse extends com.pulumi.resources.InvokeArgs {

    public static final HostNameResponse Empty = new HostNameResponse();

    /**
     * Name of the Azure resource the hostname is assigned to. If it is assigned to a Traffic Manager then it will be the Traffic Manager name otherwise it will be the app name.
     * 
     */
    @Import(name="azureResourceName")
    private @Nullable String azureResourceName;

    /**
     * @return Name of the Azure resource the hostname is assigned to. If it is assigned to a Traffic Manager then it will be the Traffic Manager name otherwise it will be the app name.
     * 
     */
    public Optional<String> azureResourceName() {
        return Optional.ofNullable(this.azureResourceName);
    }

    /**
     * Type of the Azure resource the hostname is assigned to.
     * 
     */
    @Import(name="azureResourceType")
    private @Nullable String azureResourceType;

    /**
     * @return Type of the Azure resource the hostname is assigned to.
     * 
     */
    public Optional<String> azureResourceType() {
        return Optional.ofNullable(this.azureResourceType);
    }

    /**
     * Type of the DNS record.
     * 
     */
    @Import(name="customHostNameDnsRecordType")
    private @Nullable String customHostNameDnsRecordType;

    /**
     * @return Type of the DNS record.
     * 
     */
    public Optional<String> customHostNameDnsRecordType() {
        return Optional.ofNullable(this.customHostNameDnsRecordType);
    }

    /**
     * Type of the hostname.
     * 
     */
    @Import(name="hostNameType")
    private @Nullable String hostNameType;

    /**
     * @return Type of the hostname.
     * 
     */
    public Optional<String> hostNameType() {
        return Optional.ofNullable(this.hostNameType);
    }

    /**
     * Name of the hostname.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the hostname.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of apps the hostname is assigned to. This list will have more than one app only if the hostname is pointing to a Traffic Manager.
     * 
     */
    @Import(name="siteNames")
    private @Nullable List<String> siteNames;

    /**
     * @return List of apps the hostname is assigned to. This list will have more than one app only if the hostname is pointing to a Traffic Manager.
     * 
     */
    public Optional<List<String>> siteNames() {
        return Optional.ofNullable(this.siteNames);
    }

    private HostNameResponse() {}

    private HostNameResponse(HostNameResponse $) {
        this.azureResourceName = $.azureResourceName;
        this.azureResourceType = $.azureResourceType;
        this.customHostNameDnsRecordType = $.customHostNameDnsRecordType;
        this.hostNameType = $.hostNameType;
        this.name = $.name;
        this.siteNames = $.siteNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostNameResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostNameResponse $;

        public Builder() {
            $ = new HostNameResponse();
        }

        public Builder(HostNameResponse defaults) {
            $ = new HostNameResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureResourceName Name of the Azure resource the hostname is assigned to. If it is assigned to a Traffic Manager then it will be the Traffic Manager name otherwise it will be the app name.
         * 
         * @return builder
         * 
         */
        public Builder azureResourceName(@Nullable String azureResourceName) {
            $.azureResourceName = azureResourceName;
            return this;
        }

        /**
         * @param azureResourceType Type of the Azure resource the hostname is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder azureResourceType(@Nullable String azureResourceType) {
            $.azureResourceType = azureResourceType;
            return this;
        }

        /**
         * @param customHostNameDnsRecordType Type of the DNS record.
         * 
         * @return builder
         * 
         */
        public Builder customHostNameDnsRecordType(@Nullable String customHostNameDnsRecordType) {
            $.customHostNameDnsRecordType = customHostNameDnsRecordType;
            return this;
        }

        /**
         * @param hostNameType Type of the hostname.
         * 
         * @return builder
         * 
         */
        public Builder hostNameType(@Nullable String hostNameType) {
            $.hostNameType = hostNameType;
            return this;
        }

        /**
         * @param name Name of the hostname.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param siteNames List of apps the hostname is assigned to. This list will have more than one app only if the hostname is pointing to a Traffic Manager.
         * 
         * @return builder
         * 
         */
        public Builder siteNames(@Nullable List<String> siteNames) {
            $.siteNames = siteNames;
            return this;
        }

        /**
         * @param siteNames List of apps the hostname is assigned to. This list will have more than one app only if the hostname is pointing to a Traffic Manager.
         * 
         * @return builder
         * 
         */
        public Builder siteNames(String... siteNames) {
            return siteNames(List.of(siteNames));
        }

        public HostNameResponse build() {
            return $;
        }
    }

}
