// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties required to create a connection to Azure SQL database Managed instance
 * 
 */
public final class MiSqlConnectionInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final MiSqlConnectionInfoResponse Empty = new MiSqlConnectionInfoResponse();

    /**
     * Resource id for Azure SQL database Managed instance
     * 
     */
    @Import(name="managedInstanceResourceId", required=true)
    private String managedInstanceResourceId;

    /**
     * @return Resource id for Azure SQL database Managed instance
     * 
     */
    public String managedInstanceResourceId() {
        return this.managedInstanceResourceId;
    }

    /**
     * Password credential.
     * 
     */
    @Import(name="password")
    private @Nullable String password;

    /**
     * @return Password credential.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Type of connection info
     * Expected value is &#39;MiSqlConnectionInfo&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Type of connection info
     * Expected value is &#39;MiSqlConnectionInfo&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * User name
     * 
     */
    @Import(name="userName")
    private @Nullable String userName;

    /**
     * @return User name
     * 
     */
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }

    private MiSqlConnectionInfoResponse() {}

    private MiSqlConnectionInfoResponse(MiSqlConnectionInfoResponse $) {
        this.managedInstanceResourceId = $.managedInstanceResourceId;
        this.password = $.password;
        this.type = $.type;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MiSqlConnectionInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MiSqlConnectionInfoResponse $;

        public Builder() {
            $ = new MiSqlConnectionInfoResponse();
        }

        public Builder(MiSqlConnectionInfoResponse defaults) {
            $ = new MiSqlConnectionInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param managedInstanceResourceId Resource id for Azure SQL database Managed instance
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceResourceId(String managedInstanceResourceId) {
            $.managedInstanceResourceId = managedInstanceResourceId;
            return this;
        }

        /**
         * @param password Password credential.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable String password) {
            $.password = password;
            return this;
        }

        /**
         * @param type Type of connection info
         * Expected value is &#39;MiSqlConnectionInfo&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param userName User name
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable String userName) {
            $.userName = userName;
            return this;
        }

        public MiSqlConnectionInfoResponse build() {
            $.managedInstanceResourceId = Objects.requireNonNull($.managedInstanceResourceId, "expected parameter 'managedInstanceResourceId' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
