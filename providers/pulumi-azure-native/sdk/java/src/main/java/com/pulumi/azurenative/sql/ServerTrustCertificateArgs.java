// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerTrustCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerTrustCertificateArgs Empty = new ServerTrustCertificateArgs();

    /**
     * Name of of the certificate to upload.
     * 
     */
    @Import(name="certificateName")
    private @Nullable Output<String> certificateName;

    /**
     * @return Name of of the certificate to upload.
     * 
     */
    public Optional<Output<String>> certificateName() {
        return Optional.ofNullable(this.certificateName);
    }

    /**
     * The name of the managed instance.
     * 
     */
    @Import(name="managedInstanceName", required=true)
    private Output<String> managedInstanceName;

    /**
     * @return The name of the managed instance.
     * 
     */
    public Output<String> managedInstanceName() {
        return this.managedInstanceName;
    }

    /**
     * The certificate public blob
     * 
     */
    @Import(name="publicBlob")
    private @Nullable Output<String> publicBlob;

    /**
     * @return The certificate public blob
     * 
     */
    public Optional<Output<String>> publicBlob() {
        return Optional.ofNullable(this.publicBlob);
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private ServerTrustCertificateArgs() {}

    private ServerTrustCertificateArgs(ServerTrustCertificateArgs $) {
        this.certificateName = $.certificateName;
        this.managedInstanceName = $.managedInstanceName;
        this.publicBlob = $.publicBlob;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerTrustCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerTrustCertificateArgs $;

        public Builder() {
            $ = new ServerTrustCertificateArgs();
        }

        public Builder(ServerTrustCertificateArgs defaults) {
            $ = new ServerTrustCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateName Name of of the certificate to upload.
         * 
         * @return builder
         * 
         */
        public Builder certificateName(@Nullable Output<String> certificateName) {
            $.certificateName = certificateName;
            return this;
        }

        /**
         * @param certificateName Name of of the certificate to upload.
         * 
         * @return builder
         * 
         */
        public Builder certificateName(String certificateName) {
            return certificateName(Output.of(certificateName));
        }

        /**
         * @param managedInstanceName The name of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceName(Output<String> managedInstanceName) {
            $.managedInstanceName = managedInstanceName;
            return this;
        }

        /**
         * @param managedInstanceName The name of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceName(String managedInstanceName) {
            return managedInstanceName(Output.of(managedInstanceName));
        }

        /**
         * @param publicBlob The certificate public blob
         * 
         * @return builder
         * 
         */
        public Builder publicBlob(@Nullable Output<String> publicBlob) {
            $.publicBlob = publicBlob;
            return this;
        }

        /**
         * @param publicBlob The certificate public blob
         * 
         * @return builder
         * 
         */
        public Builder publicBlob(String publicBlob) {
            return publicBlob(Output.of(publicBlob));
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ServerTrustCertificateArgs build() {
            $.managedInstanceName = Objects.requireNonNull($.managedInstanceName, "expected parameter 'managedInstanceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
