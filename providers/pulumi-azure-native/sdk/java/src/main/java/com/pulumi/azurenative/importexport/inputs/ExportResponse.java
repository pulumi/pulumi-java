// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.importexport.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
 * 
 */
public final class ExportResponse extends com.pulumi.resources.InvokeArgs {

    public static final ExportResponse Empty = new ExportResponse();

    /**
     * The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
     * 
     */
    @Import(name="blobListBlobPath")
    private @Nullable String blobListBlobPath;

    /**
     * @return The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
     * 
     */
    public Optional<String> blobListBlobPath() {
        return Optional.ofNullable(this.blobListBlobPath);
    }

    /**
     * A collection of blob-path strings.
     * 
     */
    @Import(name="blobPath")
    private @Nullable List<String> blobPath;

    /**
     * @return A collection of blob-path strings.
     * 
     */
    public Optional<List<String>> blobPath() {
        return Optional.ofNullable(this.blobPath);
    }

    /**
     * A collection of blob-prefix strings.
     * 
     */
    @Import(name="blobPathPrefix")
    private @Nullable List<String> blobPathPrefix;

    /**
     * @return A collection of blob-prefix strings.
     * 
     */
    public Optional<List<String>> blobPathPrefix() {
        return Optional.ofNullable(this.blobPathPrefix);
    }

    private ExportResponse() {}

    private ExportResponse(ExportResponse $) {
        this.blobListBlobPath = $.blobListBlobPath;
        this.blobPath = $.blobPath;
        this.blobPathPrefix = $.blobPathPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExportResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExportResponse $;

        public Builder() {
            $ = new ExportResponse();
        }

        public Builder(ExportResponse defaults) {
            $ = new ExportResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param blobListBlobPath The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
         * 
         * @return builder
         * 
         */
        public Builder blobListBlobPath(@Nullable String blobListBlobPath) {
            $.blobListBlobPath = blobListBlobPath;
            return this;
        }

        /**
         * @param blobPath A collection of blob-path strings.
         * 
         * @return builder
         * 
         */
        public Builder blobPath(@Nullable List<String> blobPath) {
            $.blobPath = blobPath;
            return this;
        }

        /**
         * @param blobPath A collection of blob-path strings.
         * 
         * @return builder
         * 
         */
        public Builder blobPath(String... blobPath) {
            return blobPath(List.of(blobPath));
        }

        /**
         * @param blobPathPrefix A collection of blob-prefix strings.
         * 
         * @return builder
         * 
         */
        public Builder blobPathPrefix(@Nullable List<String> blobPathPrefix) {
            $.blobPathPrefix = blobPathPrefix;
            return this;
        }

        /**
         * @param blobPathPrefix A collection of blob-prefix strings.
         * 
         * @return builder
         * 
         */
        public Builder blobPathPrefix(String... blobPathPrefix) {
            return blobPathPrefix(List.of(blobPathPrefix));
        }

        public ExportResponse build() {
            return $;
        }
    }

}
