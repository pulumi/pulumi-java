// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.inputs.WorkflowTriggerRecurrenceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The batch release criteria.
 * 
 */
public final class BatchReleaseCriteriaResponse extends com.pulumi.resources.InvokeArgs {

    public static final BatchReleaseCriteriaResponse Empty = new BatchReleaseCriteriaResponse();

    /**
     * The batch size in bytes.
     * 
     */
    @Import(name="batchSize")
    private @Nullable Integer batchSize;

    public Optional<Integer> batchSize() {
        return Optional.ofNullable(this.batchSize);
    }

    /**
     * The message count.
     * 
     */
    @Import(name="messageCount")
    private @Nullable Integer messageCount;

    public Optional<Integer> messageCount() {
        return Optional.ofNullable(this.messageCount);
    }

    /**
     * The recurrence.
     * 
     */
    @Import(name="recurrence")
    private @Nullable WorkflowTriggerRecurrenceResponse recurrence;

    public Optional<WorkflowTriggerRecurrenceResponse> recurrence() {
        return Optional.ofNullable(this.recurrence);
    }

    private BatchReleaseCriteriaResponse() {}

    private BatchReleaseCriteriaResponse(BatchReleaseCriteriaResponse $) {
        this.batchSize = $.batchSize;
        this.messageCount = $.messageCount;
        this.recurrence = $.recurrence;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BatchReleaseCriteriaResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BatchReleaseCriteriaResponse $;

        public Builder() {
            $ = new BatchReleaseCriteriaResponse();
        }

        public Builder(BatchReleaseCriteriaResponse defaults) {
            $ = new BatchReleaseCriteriaResponse(Objects.requireNonNull(defaults));
        }

        public Builder batchSize(@Nullable Integer batchSize) {
            $.batchSize = batchSize;
            return this;
        }

        public Builder messageCount(@Nullable Integer messageCount) {
            $.messageCount = messageCount;
            return this;
        }

        public Builder recurrence(@Nullable WorkflowTriggerRecurrenceResponse recurrence) {
            $.recurrence = recurrence;
            return this;
        }

        public BatchReleaseCriteriaResponse build() {
            return $;
        }
    }

}
