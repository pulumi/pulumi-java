// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices;

import com.pulumi.azurenative.machinelearningservices.inputs.IdentityArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.LinkedServicePropsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinkedServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinkedServiceArgs Empty = new LinkedServiceArgs();

    /**
     * Identity for the resource.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<IdentityArgs> identity;

    /**
     * @return Identity for the resource.
     * 
     */
    public Optional<Output<IdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Friendly name of the linked workspace
     * 
     */
    @Import(name="linkName")
    private @Nullable Output<String> linkName;

    /**
     * @return Friendly name of the linked workspace
     * 
     */
    public Optional<Output<String>> linkName() {
        return Optional.ofNullable(this.linkName);
    }

    /**
     * location of the linked service.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return location of the linked service.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Friendly name of the linked service
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Friendly name of the linked service
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * LinkedService specific properties.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<LinkedServicePropsArgs> properties;

    /**
     * @return LinkedService specific properties.
     * 
     */
    public Optional<Output<LinkedServicePropsArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Name of the resource group in which workspace is located.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group in which workspace is located.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of Azure Machine Learning workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    /**
     * @return Name of Azure Machine Learning workspace.
     * 
     */
    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private LinkedServiceArgs() {}

    private LinkedServiceArgs(LinkedServiceArgs $) {
        this.identity = $.identity;
        this.linkName = $.linkName;
        this.location = $.location;
        this.name = $.name;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinkedServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinkedServiceArgs $;

        public Builder() {
            $ = new LinkedServiceArgs();
        }

        public Builder(LinkedServiceArgs defaults) {
            $ = new LinkedServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identity Identity for the resource.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<IdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity Identity for the resource.
         * 
         * @return builder
         * 
         */
        public Builder identity(IdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param linkName Friendly name of the linked workspace
         * 
         * @return builder
         * 
         */
        public Builder linkName(@Nullable Output<String> linkName) {
            $.linkName = linkName;
            return this;
        }

        /**
         * @param linkName Friendly name of the linked workspace
         * 
         * @return builder
         * 
         */
        public Builder linkName(String linkName) {
            return linkName(Output.of(linkName));
        }

        /**
         * @param location location of the linked service.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location location of the linked service.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Friendly name of the linked service
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Friendly name of the linked service
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param properties LinkedService specific properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<LinkedServicePropsArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties LinkedService specific properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(LinkedServicePropsArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroupName Name of the resource group in which workspace is located.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group in which workspace is located.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param workspaceName Name of Azure Machine Learning workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        /**
         * @param workspaceName Name of Azure Machine Learning workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public LinkedServiceArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
