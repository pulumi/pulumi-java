// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.alertsmanagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The detector information. By default this is not populated, unless it&#39;s specified in expandDetector
 * 
 */
public final class DetectorResponse extends com.pulumi.resources.InvokeArgs {

    public static final DetectorResponse Empty = new DetectorResponse();

    /**
     * The Smart Detector description. By default this is not populated, unless it&#39;s specified in expandDetector
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The detector id.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * The Smart Detector image path. By default this is not populated, unless it&#39;s specified in expandDetector
     * 
     */
    @Import(name="imagePaths")
    private @Nullable List<String> imagePaths;

    public Optional<List<String>> imagePaths() {
        return Optional.ofNullable(this.imagePaths);
    }

    /**
     * The Smart Detector name. By default this is not populated, unless it&#39;s specified in expandDetector
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The detector&#39;s parameters.&#39;
     * 
     */
    @Import(name="parameters")
    private @Nullable Map<String,Object> parameters;

    public Optional<Map<String,Object>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The Smart Detector supported resource types. By default this is not populated, unless it&#39;s specified in expandDetector
     * 
     */
    @Import(name="supportedResourceTypes")
    private @Nullable List<String> supportedResourceTypes;

    public Optional<List<String>> supportedResourceTypes() {
        return Optional.ofNullable(this.supportedResourceTypes);
    }

    private DetectorResponse() {}

    private DetectorResponse(DetectorResponse $) {
        this.description = $.description;
        this.id = $.id;
        this.imagePaths = $.imagePaths;
        this.name = $.name;
        this.parameters = $.parameters;
        this.supportedResourceTypes = $.supportedResourceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorResponse $;

        public Builder() {
            $ = new DetectorResponse();
        }

        public Builder(DetectorResponse defaults) {
            $ = new DetectorResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder imagePaths(@Nullable List<String> imagePaths) {
            $.imagePaths = imagePaths;
            return this;
        }

        public Builder imagePaths(String... imagePaths) {
            return imagePaths(List.of(imagePaths));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder parameters(@Nullable Map<String,Object> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder supportedResourceTypes(@Nullable List<String> supportedResourceTypes) {
            $.supportedResourceTypes = supportedResourceTypes;
            return this;
        }

        public Builder supportedResourceTypes(String... supportedResourceTypes) {
            return supportedResourceTypes(List.of(supportedResourceTypes));
        }

        public DetectorResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
