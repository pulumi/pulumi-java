// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Set a patching window during which Windows and SQL patches will be applied.
 * 
 */
public final class AutoPatchingSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final AutoPatchingSettingsResponse Empty = new AutoPatchingSettingsResponse();

    /**
     * Day of week to apply the patch on.
     * 
     */
    @Import(name="dayOfWeek")
    private @Nullable String dayOfWeek;

    public Optional<String> dayOfWeek() {
        return Optional.ofNullable(this.dayOfWeek);
    }

    /**
     * Enable or disable autopatching on SQL virtual machine.
     * 
     */
    @Import(name="enable")
    private @Nullable Boolean enable;

    public Optional<Boolean> enable() {
        return Optional.ofNullable(this.enable);
    }

    /**
     * Duration of patching.
     * 
     */
    @Import(name="maintenanceWindowDuration")
    private @Nullable Integer maintenanceWindowDuration;

    public Optional<Integer> maintenanceWindowDuration() {
        return Optional.ofNullable(this.maintenanceWindowDuration);
    }

    /**
     * Hour of the day when patching is initiated. Local VM time.
     * 
     */
    @Import(name="maintenanceWindowStartingHour")
    private @Nullable Integer maintenanceWindowStartingHour;

    public Optional<Integer> maintenanceWindowStartingHour() {
        return Optional.ofNullable(this.maintenanceWindowStartingHour);
    }

    private AutoPatchingSettingsResponse() {}

    private AutoPatchingSettingsResponse(AutoPatchingSettingsResponse $) {
        this.dayOfWeek = $.dayOfWeek;
        this.enable = $.enable;
        this.maintenanceWindowDuration = $.maintenanceWindowDuration;
        this.maintenanceWindowStartingHour = $.maintenanceWindowStartingHour;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoPatchingSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoPatchingSettingsResponse $;

        public Builder() {
            $ = new AutoPatchingSettingsResponse();
        }

        public Builder(AutoPatchingSettingsResponse defaults) {
            $ = new AutoPatchingSettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder dayOfWeek(@Nullable String dayOfWeek) {
            $.dayOfWeek = dayOfWeek;
            return this;
        }

        public Builder enable(@Nullable Boolean enable) {
            $.enable = enable;
            return this;
        }

        public Builder maintenanceWindowDuration(@Nullable Integer maintenanceWindowDuration) {
            $.maintenanceWindowDuration = maintenanceWindowDuration;
            return this;
        }

        public Builder maintenanceWindowStartingHour(@Nullable Integer maintenanceWindowStartingHour) {
            $.maintenanceWindowStartingHour = maintenanceWindowStartingHour;
            return this;
        }

        public AutoPatchingSettingsResponse build() {
            return $;
        }
    }

}
