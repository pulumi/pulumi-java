// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.AddressSpaceResponse;
import com.pulumi.azurenative.network.inputs.RoutingConfigurationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * P2SConnectionConfiguration Resource.
 * 
 */
public final class P2SConnectionConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final P2SConnectionConfigurationResponse Empty = new P2SConnectionConfigurationResponse();

    /**
     * Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
     * 
     */
    @Import(name="enableInternetSecurity")
      private final @Nullable Boolean enableInternetSecurity;

    public Optional<Boolean> enableInternetSecurity() {
        return this.enableInternetSecurity == null ? Optional.empty() : Optional.ofNullable(this.enableInternetSecurity);
    }

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
      private final String etag;

    public String etag() {
        return this.etag;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable String id;

    public Optional<String> id() {
        return this.id == null ? Optional.empty() : Optional.ofNullable(this.id);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
      private final @Nullable String name;

    public Optional<String> name() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    /**
     * The provisioning state of the P2SConnectionConfiguration resource.
     * 
     */
    @Import(name="provisioningState", required=true)
      private final String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * The Routing Configuration indicating the associated and propagated route tables on this connection.
     * 
     */
    @Import(name="routingConfiguration")
      private final @Nullable RoutingConfigurationResponse routingConfiguration;

    public Optional<RoutingConfigurationResponse> routingConfiguration() {
        return this.routingConfiguration == null ? Optional.empty() : Optional.ofNullable(this.routingConfiguration);
    }

    /**
     * The reference to the address space resource which represents Address space for P2S VpnClient.
     * 
     */
    @Import(name="vpnClientAddressPool")
      private final @Nullable AddressSpaceResponse vpnClientAddressPool;

    public Optional<AddressSpaceResponse> vpnClientAddressPool() {
        return this.vpnClientAddressPool == null ? Optional.empty() : Optional.ofNullable(this.vpnClientAddressPool);
    }

    public P2SConnectionConfigurationResponse(
        @Nullable Boolean enableInternetSecurity,
        String etag,
        @Nullable String id,
        @Nullable String name,
        String provisioningState,
        @Nullable RoutingConfigurationResponse routingConfiguration,
        @Nullable AddressSpaceResponse vpnClientAddressPool) {
        this.enableInternetSecurity = enableInternetSecurity;
        this.etag = Objects.requireNonNull(etag, "expected parameter 'etag' to be non-null");
        this.id = id;
        this.name = name;
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.routingConfiguration = routingConfiguration;
        this.vpnClientAddressPool = vpnClientAddressPool;
    }

    private P2SConnectionConfigurationResponse() {
        this.enableInternetSecurity = null;
        this.etag = null;
        this.id = null;
        this.name = null;
        this.provisioningState = null;
        this.routingConfiguration = null;
        this.vpnClientAddressPool = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(P2SConnectionConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enableInternetSecurity;
        private String etag;
        private @Nullable String id;
        private @Nullable String name;
        private String provisioningState;
        private @Nullable RoutingConfigurationResponse routingConfiguration;
        private @Nullable AddressSpaceResponse vpnClientAddressPool;

        public Builder() {
    	      // Empty
        }

        public Builder(P2SConnectionConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableInternetSecurity = defaults.enableInternetSecurity;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.routingConfiguration = defaults.routingConfiguration;
    	      this.vpnClientAddressPool = defaults.vpnClientAddressPool;
        }

        public Builder enableInternetSecurity(@Nullable Boolean enableInternetSecurity) {
            this.enableInternetSecurity = enableInternetSecurity;
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder routingConfiguration(@Nullable RoutingConfigurationResponse routingConfiguration) {
            this.routingConfiguration = routingConfiguration;
            return this;
        }
        public Builder vpnClientAddressPool(@Nullable AddressSpaceResponse vpnClientAddressPool) {
            this.vpnClientAddressPool = vpnClientAddressPool;
            return this;
        }        public P2SConnectionConfigurationResponse build() {
            return new P2SConnectionConfigurationResponse(enableInternetSecurity, etag, id, name, provisioningState, routingConfiguration, vpnClientAddressPool);
        }
    }
}
