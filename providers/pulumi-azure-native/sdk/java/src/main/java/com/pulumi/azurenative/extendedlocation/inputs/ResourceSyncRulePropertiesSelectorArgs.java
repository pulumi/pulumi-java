// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.extendedlocation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A label selector is composed of two parts, matchLabels and matchExpressions. The first part, matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &#39;key&#39;, the operator is &#39;In&#39;, and the values array contains only &#39;value&#39;. The second part, matchExpressions is a list of resource selector requirements. Valid operators include In, NotIn, Exists, and DoesNotExist. The values set must be non-empty in the case of In and NotIn. The values set must be empty in the case of Exists and DoesNotExist. All of the requirements, from both matchLabels and matchExpressions must all be satisfied in order to match.
 * 
 */
public final class ResourceSyncRulePropertiesSelectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceSyncRulePropertiesSelectorArgs Empty = new ResourceSyncRulePropertiesSelectorArgs();

    /**
     * MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &#39;key&#39;, the operator is &#39;In&#39;, and the values array contains only &#39;value&#39;.
     * 
     */
    @Import(name="matchLabels")
    private @Nullable Output<Map<String,String>> matchLabels;

    /**
     * @return MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &#39;key&#39;, the operator is &#39;In&#39;, and the values array contains only &#39;value&#39;.
     * 
     */
    public Optional<Output<Map<String,String>>> matchLabels() {
        return Optional.ofNullable(this.matchLabels);
    }

    private ResourceSyncRulePropertiesSelectorArgs() {}

    private ResourceSyncRulePropertiesSelectorArgs(ResourceSyncRulePropertiesSelectorArgs $) {
        this.matchLabels = $.matchLabels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceSyncRulePropertiesSelectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceSyncRulePropertiesSelectorArgs $;

        public Builder() {
            $ = new ResourceSyncRulePropertiesSelectorArgs();
        }

        public Builder(ResourceSyncRulePropertiesSelectorArgs defaults) {
            $ = new ResourceSyncRulePropertiesSelectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param matchLabels MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &#39;key&#39;, the operator is &#39;In&#39;, and the values array contains only &#39;value&#39;.
         * 
         * @return builder
         * 
         */
        public Builder matchLabels(@Nullable Output<Map<String,String>> matchLabels) {
            $.matchLabels = matchLabels;
            return this;
        }

        /**
         * @param matchLabels MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &#39;key&#39;, the operator is &#39;In&#39;, and the values array contains only &#39;value&#39;.
         * 
         * @return builder
         * 
         */
        public Builder matchLabels(Map<String,String> matchLabels) {
            return matchLabels(Output.of(matchLabels));
        }

        public ResourceSyncRulePropertiesSelectorArgs build() {
            return $;
        }
    }

}
