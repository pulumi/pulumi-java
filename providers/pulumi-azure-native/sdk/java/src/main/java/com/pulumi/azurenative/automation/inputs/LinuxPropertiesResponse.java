// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Linux specific update configuration.
 * 
 */
public final class LinuxPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final LinuxPropertiesResponse Empty = new LinuxPropertiesResponse();

    /**
     * packages excluded from the software update configuration.
     * 
     */
    @Import(name="excludedPackageNameMasks")
    private @Nullable List<String> excludedPackageNameMasks;

    public Optional<List<String>> excludedPackageNameMasks() {
        return Optional.ofNullable(this.excludedPackageNameMasks);
    }

    /**
     * Update classifications included in the software update configuration.
     * 
     */
    @Import(name="includedPackageClassifications")
    private @Nullable String includedPackageClassifications;

    public Optional<String> includedPackageClassifications() {
        return Optional.ofNullable(this.includedPackageClassifications);
    }

    /**
     * packages included from the software update configuration.
     * 
     */
    @Import(name="includedPackageNameMasks")
    private @Nullable List<String> includedPackageNameMasks;

    public Optional<List<String>> includedPackageNameMasks() {
        return Optional.ofNullable(this.includedPackageNameMasks);
    }

    /**
     * Reboot setting for the software update configuration.
     * 
     */
    @Import(name="rebootSetting")
    private @Nullable String rebootSetting;

    public Optional<String> rebootSetting() {
        return Optional.ofNullable(this.rebootSetting);
    }

    private LinuxPropertiesResponse() {}

    private LinuxPropertiesResponse(LinuxPropertiesResponse $) {
        this.excludedPackageNameMasks = $.excludedPackageNameMasks;
        this.includedPackageClassifications = $.includedPackageClassifications;
        this.includedPackageNameMasks = $.includedPackageNameMasks;
        this.rebootSetting = $.rebootSetting;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxPropertiesResponse $;

        public Builder() {
            $ = new LinuxPropertiesResponse();
        }

        public Builder(LinuxPropertiesResponse defaults) {
            $ = new LinuxPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder excludedPackageNameMasks(@Nullable List<String> excludedPackageNameMasks) {
            $.excludedPackageNameMasks = excludedPackageNameMasks;
            return this;
        }

        public Builder excludedPackageNameMasks(String... excludedPackageNameMasks) {
            return excludedPackageNameMasks(List.of(excludedPackageNameMasks));
        }

        public Builder includedPackageClassifications(@Nullable String includedPackageClassifications) {
            $.includedPackageClassifications = includedPackageClassifications;
            return this;
        }

        public Builder includedPackageNameMasks(@Nullable List<String> includedPackageNameMasks) {
            $.includedPackageNameMasks = includedPackageNameMasks;
            return this;
        }

        public Builder includedPackageNameMasks(String... includedPackageNameMasks) {
            return includedPackageNameMasks(List.of(includedPackageNameMasks));
        }

        public Builder rebootSetting(@Nullable String rebootSetting) {
            $.rebootSetting = rebootSetting;
            return this;
        }

        public LinuxPropertiesResponse build() {
            return $;
        }
    }

}
