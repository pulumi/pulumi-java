// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datashare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A type of synchronization setting based on schedule
 * 
 */
public final class ScheduledSourceSynchronizationSettingResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScheduledSourceSynchronizationSettingResponse Empty = new ScheduledSourceSynchronizationSettingResponse();

    /**
     * Kind of synchronization setting on share.
     * Expected value is &#39;ScheduleBased&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private String kind;

    public String kind() {
        return this.kind;
    }

    /**
     * Recurrence Interval
     * 
     */
    @Import(name="recurrenceInterval")
    private @Nullable String recurrenceInterval;

    public Optional<String> recurrenceInterval() {
        return Optional.ofNullable(this.recurrenceInterval);
    }

    /**
     * Synchronization time
     * 
     */
    @Import(name="synchronizationTime")
    private @Nullable String synchronizationTime;

    public Optional<String> synchronizationTime() {
        return Optional.ofNullable(this.synchronizationTime);
    }

    private ScheduledSourceSynchronizationSettingResponse() {}

    private ScheduledSourceSynchronizationSettingResponse(ScheduledSourceSynchronizationSettingResponse $) {
        this.kind = $.kind;
        this.recurrenceInterval = $.recurrenceInterval;
        this.synchronizationTime = $.synchronizationTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledSourceSynchronizationSettingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledSourceSynchronizationSettingResponse $;

        public Builder() {
            $ = new ScheduledSourceSynchronizationSettingResponse();
        }

        public Builder(ScheduledSourceSynchronizationSettingResponse defaults) {
            $ = new ScheduledSourceSynchronizationSettingResponse(Objects.requireNonNull(defaults));
        }

        public Builder kind(String kind) {
            $.kind = kind;
            return this;
        }

        public Builder recurrenceInterval(@Nullable String recurrenceInterval) {
            $.recurrenceInterval = recurrenceInterval;
            return this;
        }

        public Builder synchronizationTime(@Nullable String synchronizationTime) {
            $.synchronizationTime = synchronizationTime;
            return this;
        }

        public ScheduledSourceSynchronizationSettingResponse build() {
            $.kind = Codegen.stringProp("kind").arg($.kind).require();
            return $;
        }
    }

}
