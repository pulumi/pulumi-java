// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the public IP address resource settings.
 * 
 */
public final class PublicIPAddressResourceSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PublicIPAddressResourceSettingsArgs Empty = new PublicIPAddressResourceSettingsArgs();

    /**
     * Gets or sets the domain name label.
     * 
     */
    @Import(name="domainNameLabel")
    private @Nullable Output<String> domainNameLabel;

    public Optional<Output<String>> domainNameLabel() {
        return Optional.ofNullable(this.domainNameLabel);
    }

    /**
     * Gets or sets the fully qualified domain name.
     * 
     */
    @Import(name="fqdn")
    private @Nullable Output<String> fqdn;

    public Optional<Output<String>> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }

    /**
     * Gets or sets public IP allocation method.
     * 
     */
    @Import(name="publicIpAllocationMethod")
    private @Nullable Output<String> publicIpAllocationMethod;

    public Optional<Output<String>> publicIpAllocationMethod() {
        return Optional.ofNullable(this.publicIpAllocationMethod);
    }

    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is &#39;Microsoft.Network/publicIPAddresses&#39;.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * Gets or sets public IP sku.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<String> sku;

    public Optional<Output<String>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Gets or sets the target Resource name.
     * 
     */
    @Import(name="targetResourceName", required=true)
    private Output<String> targetResourceName;

    public Output<String> targetResourceName() {
        return this.targetResourceName;
    }

    /**
     * Gets or sets public IP zones.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<String> zones;

    public Optional<Output<String>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private PublicIPAddressResourceSettingsArgs() {}

    private PublicIPAddressResourceSettingsArgs(PublicIPAddressResourceSettingsArgs $) {
        this.domainNameLabel = $.domainNameLabel;
        this.fqdn = $.fqdn;
        this.publicIpAllocationMethod = $.publicIpAllocationMethod;
        this.resourceType = $.resourceType;
        this.sku = $.sku;
        this.targetResourceName = $.targetResourceName;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicIPAddressResourceSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicIPAddressResourceSettingsArgs $;

        public Builder() {
            $ = new PublicIPAddressResourceSettingsArgs();
        }

        public Builder(PublicIPAddressResourceSettingsArgs defaults) {
            $ = new PublicIPAddressResourceSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder domainNameLabel(@Nullable Output<String> domainNameLabel) {
            $.domainNameLabel = domainNameLabel;
            return this;
        }

        public Builder domainNameLabel(String domainNameLabel) {
            return domainNameLabel(Output.of(domainNameLabel));
        }

        public Builder fqdn(@Nullable Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        public Builder publicIpAllocationMethod(@Nullable Output<String> publicIpAllocationMethod) {
            $.publicIpAllocationMethod = publicIpAllocationMethod;
            return this;
        }

        public Builder publicIpAllocationMethod(String publicIpAllocationMethod) {
            return publicIpAllocationMethod(Output.of(publicIpAllocationMethod));
        }

        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public Builder sku(@Nullable Output<String> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(String sku) {
            return sku(Output.of(sku));
        }

        public Builder targetResourceName(Output<String> targetResourceName) {
            $.targetResourceName = targetResourceName;
            return this;
        }

        public Builder targetResourceName(String targetResourceName) {
            return targetResourceName(Output.of(targetResourceName));
        }

        public Builder zones(@Nullable Output<String> zones) {
            $.zones = zones;
            return this;
        }

        public Builder zones(String zones) {
            return zones(Output.of(zones));
        }

        public PublicIPAddressResourceSettingsArgs build() {
            $.resourceType = Codegen.stringProp("resourceType").output().arg($.resourceType).require();
            $.targetResourceName = Objects.requireNonNull($.targetResourceName, "expected parameter 'targetResourceName' to be non-null");
            return $;
        }
    }

}
