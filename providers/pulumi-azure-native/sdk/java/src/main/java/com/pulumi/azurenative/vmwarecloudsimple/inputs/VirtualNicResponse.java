// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.vmwarecloudsimple.inputs;

import com.pulumi.azurenative.vmwarecloudsimple.inputs.GuestOSNICCustomizationResponse;
import com.pulumi.azurenative.vmwarecloudsimple.inputs.VirtualNetworkResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Virtual NIC model
 * 
 */
public final class VirtualNicResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualNicResponse Empty = new VirtualNicResponse();

    /**
     * guest OS customization for nic
     * 
     */
    @Import(name="customization")
    private @Nullable GuestOSNICCustomizationResponse customization;

    public Optional<GuestOSNICCustomizationResponse> customization() {
        return Optional.ofNullable(this.customization);
    }

    /**
     * NIC ip address
     * 
     */
    @Import(name="ipAddresses")
    private @Nullable List<String> ipAddresses;

    public Optional<List<String>> ipAddresses() {
        return Optional.ofNullable(this.ipAddresses);
    }

    /**
     * NIC MAC address
     * 
     */
    @Import(name="macAddress")
    private @Nullable String macAddress;

    public Optional<String> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    /**
     * Virtual Network
     * 
     */
    @Import(name="network", required=true)
    private VirtualNetworkResponse network;

    public VirtualNetworkResponse network() {
        return this.network;
    }

    /**
     * NIC type
     * 
     */
    @Import(name="nicType", required=true)
    private String nicType;

    public String nicType() {
        return this.nicType;
    }

    /**
     * Is NIC powered on/off on boot
     * 
     */
    @Import(name="powerOnBoot")
    private @Nullable Boolean powerOnBoot;

    public Optional<Boolean> powerOnBoot() {
        return Optional.ofNullable(this.powerOnBoot);
    }

    /**
     * NIC id
     * 
     */
    @Import(name="virtualNicId")
    private @Nullable String virtualNicId;

    public Optional<String> virtualNicId() {
        return Optional.ofNullable(this.virtualNicId);
    }

    /**
     * NIC name
     * 
     */
    @Import(name="virtualNicName", required=true)
    private String virtualNicName;

    public String virtualNicName() {
        return this.virtualNicName;
    }

    private VirtualNicResponse() {}

    private VirtualNicResponse(VirtualNicResponse $) {
        this.customization = $.customization;
        this.ipAddresses = $.ipAddresses;
        this.macAddress = $.macAddress;
        this.network = $.network;
        this.nicType = $.nicType;
        this.powerOnBoot = $.powerOnBoot;
        this.virtualNicId = $.virtualNicId;
        this.virtualNicName = $.virtualNicName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNicResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNicResponse $;

        public Builder() {
            $ = new VirtualNicResponse();
        }

        public Builder(VirtualNicResponse defaults) {
            $ = new VirtualNicResponse(Objects.requireNonNull(defaults));
        }

        public Builder customization(@Nullable GuestOSNICCustomizationResponse customization) {
            $.customization = customization;
            return this;
        }

        public Builder ipAddresses(@Nullable List<String> ipAddresses) {
            $.ipAddresses = ipAddresses;
            return this;
        }

        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }

        public Builder macAddress(@Nullable String macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        public Builder network(VirtualNetworkResponse network) {
            $.network = network;
            return this;
        }

        public Builder nicType(String nicType) {
            $.nicType = nicType;
            return this;
        }

        public Builder powerOnBoot(@Nullable Boolean powerOnBoot) {
            $.powerOnBoot = powerOnBoot;
            return this;
        }

        public Builder virtualNicId(@Nullable String virtualNicId) {
            $.virtualNicId = virtualNicId;
            return this;
        }

        public Builder virtualNicName(String virtualNicName) {
            $.virtualNicName = virtualNicName;
            return this;
        }

        public VirtualNicResponse build() {
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            $.nicType = Objects.requireNonNull($.nicType, "expected parameter 'nicType' to be non-null");
            $.virtualNicName = Objects.requireNonNull($.virtualNicName, "expected parameter 'virtualNicName' to be non-null");
            return $;
        }
    }

}
