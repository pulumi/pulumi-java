// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetServerCollectorArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServerCollectorArgs Empty = new GetServerCollectorArgs();

    /**
     * Name of the Azure Migrate project.
     * 
     */
    @Import(name="projectName", required=true)
    private Output<String> projectName;

    /**
     * @return Name of the Azure Migrate project.
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }

    /**
     * Name of the Azure Resource Group that project is part of.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the Azure Resource Group that project is part of.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Unique name of a Server collector within a project.
     * 
     */
    @Import(name="serverCollectorName", required=true)
    private Output<String> serverCollectorName;

    /**
     * @return Unique name of a Server collector within a project.
     * 
     */
    public Output<String> serverCollectorName() {
        return this.serverCollectorName;
    }

    private GetServerCollectorArgs() {}

    private GetServerCollectorArgs(GetServerCollectorArgs $) {
        this.projectName = $.projectName;
        this.resourceGroupName = $.resourceGroupName;
        this.serverCollectorName = $.serverCollectorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServerCollectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServerCollectorArgs $;

        public Builder() {
            $ = new GetServerCollectorArgs();
        }

        public Builder(GetServerCollectorArgs defaults) {
            $ = new GetServerCollectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectName Name of the Azure Migrate project.
         * 
         * @return builder
         * 
         */
        public Builder projectName(Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName Name of the Azure Migrate project.
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param resourceGroupName Name of the Azure Resource Group that project is part of.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the Azure Resource Group that project is part of.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serverCollectorName Unique name of a Server collector within a project.
         * 
         * @return builder
         * 
         */
        public Builder serverCollectorName(Output<String> serverCollectorName) {
            $.serverCollectorName = serverCollectorName;
            return this;
        }

        /**
         * @param serverCollectorName Unique name of a Server collector within a project.
         * 
         * @return builder
         * 
         */
        public Builder serverCollectorName(String serverCollectorName) {
            return serverCollectorName(Output.of(serverCollectorName));
        }

        public GetServerCollectorArgs build() {
            $.projectName = Objects.requireNonNull($.projectName, "expected parameter 'projectName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serverCollectorName = Objects.requireNonNull($.serverCollectorName, "expected parameter 'serverCollectorName' to be non-null");
            return $;
        }
    }

}
