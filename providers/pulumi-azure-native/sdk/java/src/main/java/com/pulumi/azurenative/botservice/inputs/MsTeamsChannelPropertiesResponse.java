// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The parameters to provide for the Microsoft Teams channel.
 * 
 */
public final class MsTeamsChannelPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final MsTeamsChannelPropertiesResponse Empty = new MsTeamsChannelPropertiesResponse();

    /**
     * Whether this channel accepted terms
     * 
     */
    @Import(name="acceptedTerms")
    private @Nullable Boolean acceptedTerms;

    public Optional<Boolean> acceptedTerms() {
        return Optional.ofNullable(this.acceptedTerms);
    }

    /**
     * Webhook for Microsoft Teams channel calls
     * 
     */
    @Import(name="callingWebHook")
    private @Nullable String callingWebHook;

    public Optional<String> callingWebHook() {
        return Optional.ofNullable(this.callingWebHook);
    }

    /**
     * Deployment environment for Microsoft Teams channel calls
     * 
     */
    @Import(name="deploymentEnvironment")
    private @Nullable String deploymentEnvironment;

    public Optional<String> deploymentEnvironment() {
        return Optional.ofNullable(this.deploymentEnvironment);
    }

    /**
     * Enable calling for Microsoft Teams channel
     * 
     */
    @Import(name="enableCalling")
    private @Nullable Boolean enableCalling;

    public Optional<Boolean> enableCalling() {
        return Optional.ofNullable(this.enableCalling);
    }

    /**
     * Webhook for Microsoft Teams channel calls
     * 
     */
    @Import(name="incomingCallRoute")
    private @Nullable String incomingCallRoute;

    public Optional<String> incomingCallRoute() {
        return Optional.ofNullable(this.incomingCallRoute);
    }

    /**
     * Whether this channel is enabled for the bot
     * 
     */
    @Import(name="isEnabled", required=true)
    private Boolean isEnabled;

    public Boolean isEnabled() {
        return this.isEnabled;
    }

    private MsTeamsChannelPropertiesResponse() {}

    private MsTeamsChannelPropertiesResponse(MsTeamsChannelPropertiesResponse $) {
        this.acceptedTerms = $.acceptedTerms;
        this.callingWebHook = $.callingWebHook;
        this.deploymentEnvironment = $.deploymentEnvironment;
        this.enableCalling = $.enableCalling;
        this.incomingCallRoute = $.incomingCallRoute;
        this.isEnabled = $.isEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MsTeamsChannelPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MsTeamsChannelPropertiesResponse $;

        public Builder() {
            $ = new MsTeamsChannelPropertiesResponse();
        }

        public Builder(MsTeamsChannelPropertiesResponse defaults) {
            $ = new MsTeamsChannelPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder acceptedTerms(@Nullable Boolean acceptedTerms) {
            $.acceptedTerms = acceptedTerms;
            return this;
        }

        public Builder callingWebHook(@Nullable String callingWebHook) {
            $.callingWebHook = callingWebHook;
            return this;
        }

        public Builder deploymentEnvironment(@Nullable String deploymentEnvironment) {
            $.deploymentEnvironment = deploymentEnvironment;
            return this;
        }

        public Builder enableCalling(@Nullable Boolean enableCalling) {
            $.enableCalling = enableCalling;
            return this;
        }

        public Builder incomingCallRoute(@Nullable String incomingCallRoute) {
            $.incomingCallRoute = incomingCallRoute;
            return this;
        }

        public Builder isEnabled(Boolean isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        public MsTeamsChannelPropertiesResponse build() {
            $.acceptedTerms = Codegen.booleanProp("acceptedTerms").arg($.acceptedTerms).def(true).getNullable();
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            return $;
        }
    }

}
