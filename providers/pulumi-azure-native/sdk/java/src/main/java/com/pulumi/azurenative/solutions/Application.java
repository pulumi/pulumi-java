// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.solutions;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.solutions.ApplicationArgs;
import com.pulumi.azurenative.solutions.outputs.ApplicationArtifactResponse;
import com.pulumi.azurenative.solutions.outputs.ApplicationAuthorizationResponse;
import com.pulumi.azurenative.solutions.outputs.ApplicationBillingDetailsDefinitionResponse;
import com.pulumi.azurenative.solutions.outputs.ApplicationClientDetailsResponse;
import com.pulumi.azurenative.solutions.outputs.ApplicationJitAccessPolicyResponse;
import com.pulumi.azurenative.solutions.outputs.ApplicationPackageContactResponse;
import com.pulumi.azurenative.solutions.outputs.ApplicationPackageSupportUrlsResponse;
import com.pulumi.azurenative.solutions.outputs.IdentityResponse;
import com.pulumi.azurenative.solutions.outputs.PlanResponse;
import com.pulumi.azurenative.solutions.outputs.SkuResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Information about managed application.
 * API Version: 2019-07-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:solutions:Application myManagedApplication /subscriptions/subid/resourceGroups/rg/providers/Microsoft.Solutions/applications/myManagedApplication 
 * ```
 * 
 */
@ResourceType(type="azure-native:solutions:Application")
public class Application extends com.pulumi.resources.CustomResource {
    /**
     * The fully qualified path of managed application definition Id.
     * 
     */
    @Export(name="applicationDefinitionId", type=String.class, parameters={})
    private Output</* @Nullable */ String> applicationDefinitionId;

    /**
     * @return The fully qualified path of managed application definition Id.
     * 
     */
    public Output</* @Nullable */ String> applicationDefinitionId() {
        return this.applicationDefinitionId;
    }
    /**
     * The collection of managed application artifacts.
     * 
     */
    @Export(name="artifacts", type=List.class, parameters={ApplicationArtifactResponse.class})
    private Output<List<ApplicationArtifactResponse>> artifacts;

    /**
     * @return The collection of managed application artifacts.
     * 
     */
    public Output<List<ApplicationArtifactResponse>> artifacts() {
        return this.artifacts;
    }
    /**
     * The  read-only authorizations property that is retrieved from the application package.
     * 
     */
    @Export(name="authorizations", type=List.class, parameters={ApplicationAuthorizationResponse.class})
    private Output<List<ApplicationAuthorizationResponse>> authorizations;

    /**
     * @return The  read-only authorizations property that is retrieved from the application package.
     * 
     */
    public Output<List<ApplicationAuthorizationResponse>> authorizations() {
        return this.authorizations;
    }
    /**
     * The managed application billing details.
     * 
     */
    @Export(name="billingDetails", type=ApplicationBillingDetailsDefinitionResponse.class, parameters={})
    private Output<ApplicationBillingDetailsDefinitionResponse> billingDetails;

    /**
     * @return The managed application billing details.
     * 
     */
    public Output<ApplicationBillingDetailsDefinitionResponse> billingDetails() {
        return this.billingDetails;
    }
    /**
     * The client entity that created the JIT request.
     * 
     */
    @Export(name="createdBy", type=ApplicationClientDetailsResponse.class, parameters={})
    private Output<ApplicationClientDetailsResponse> createdBy;

    /**
     * @return The client entity that created the JIT request.
     * 
     */
    public Output<ApplicationClientDetailsResponse> createdBy() {
        return this.createdBy;
    }
    /**
     * The read-only customer support property that is retrieved from the application package.
     * 
     */
    @Export(name="customerSupport", type=ApplicationPackageContactResponse.class, parameters={})
    private Output<ApplicationPackageContactResponse> customerSupport;

    /**
     * @return The read-only customer support property that is retrieved from the application package.
     * 
     */
    public Output<ApplicationPackageContactResponse> customerSupport() {
        return this.customerSupport;
    }
    /**
     * The identity of the resource.
     * 
     */
    @Export(name="identity", type=IdentityResponse.class, parameters={})
    private Output</* @Nullable */ IdentityResponse> identity;

    /**
     * @return The identity of the resource.
     * 
     */
    public Output</* @Nullable */ IdentityResponse> identity() {
        return this.identity;
    }
    /**
     * The managed application Jit access policy.
     * 
     */
    @Export(name="jitAccessPolicy", type=ApplicationJitAccessPolicyResponse.class, parameters={})
    private Output</* @Nullable */ ApplicationJitAccessPolicyResponse> jitAccessPolicy;

    /**
     * @return The managed application Jit access policy.
     * 
     */
    public Output</* @Nullable */ ApplicationJitAccessPolicyResponse> jitAccessPolicy() {
        return this.jitAccessPolicy;
    }
    /**
     * The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * Resource location
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location
     * 
     */
    public Output</* @Nullable */ String> location() {
        return this.location;
    }
    /**
     * ID of the resource that manages this resource.
     * 
     */
    @Export(name="managedBy", type=String.class, parameters={})
    private Output</* @Nullable */ String> managedBy;

    /**
     * @return ID of the resource that manages this resource.
     * 
     */
    public Output</* @Nullable */ String> managedBy() {
        return this.managedBy;
    }
    /**
     * The managed resource group Id.
     * 
     */
    @Export(name="managedResourceGroupId", type=String.class, parameters={})
    private Output</* @Nullable */ String> managedResourceGroupId;

    /**
     * @return The managed resource group Id.
     * 
     */
    public Output</* @Nullable */ String> managedResourceGroupId() {
        return this.managedResourceGroupId;
    }
    /**
     * The managed application management mode.
     * 
     */
    @Export(name="managementMode", type=String.class, parameters={})
    private Output<String> managementMode;

    /**
     * @return The managed application management mode.
     * 
     */
    public Output<String> managementMode() {
        return this.managementMode;
    }
    /**
     * Resource name
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Name and value pairs that define the managed application outputs.
     * 
     */
    @Export(name="outputs", type=Object.class, parameters={})
    private Output<Object> outputs;

    /**
     * @return Name and value pairs that define the managed application outputs.
     * 
     */
    public Output<Object> outputs() {
        return this.outputs;
    }
    /**
     * Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
     * 
     */
    @Export(name="parameters", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> parameters;

    /**
     * @return Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
     * 
     */
    public Output</* @Nullable */ Object> parameters() {
        return this.parameters;
    }
    /**
     * The plan information.
     * 
     */
    @Export(name="plan", type=PlanResponse.class, parameters={})
    private Output</* @Nullable */ PlanResponse> plan;

    /**
     * @return The plan information.
     * 
     */
    public Output</* @Nullable */ PlanResponse> plan() {
        return this.plan;
    }
    /**
     * The managed application provisioning state.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The managed application provisioning state.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * The publisher tenant Id.
     * 
     */
    @Export(name="publisherTenantId", type=String.class, parameters={})
    private Output<String> publisherTenantId;

    /**
     * @return The publisher tenant Id.
     * 
     */
    public Output<String> publisherTenantId() {
        return this.publisherTenantId;
    }
    /**
     * The SKU of the resource.
     * 
     */
    @Export(name="sku", type=SkuResponse.class, parameters={})
    private Output</* @Nullable */ SkuResponse> sku;

    /**
     * @return The SKU of the resource.
     * 
     */
    public Output</* @Nullable */ SkuResponse> sku() {
        return this.sku;
    }
    /**
     * The read-only support URLs property that is retrieved from the application package.
     * 
     */
    @Export(name="supportUrls", type=ApplicationPackageSupportUrlsResponse.class, parameters={})
    private Output<ApplicationPackageSupportUrlsResponse> supportUrls;

    /**
     * @return The read-only support URLs property that is retrieved from the application package.
     * 
     */
    public Output<ApplicationPackageSupportUrlsResponse> supportUrls() {
        return this.supportUrls;
    }
    /**
     * Resource tags
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }
    /**
     * Resource type
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The client entity that last updated the JIT request.
     * 
     */
    @Export(name="updatedBy", type=ApplicationClientDetailsResponse.class, parameters={})
    private Output<ApplicationClientDetailsResponse> updatedBy;

    /**
     * @return The client entity that last updated the JIT request.
     * 
     */
    public Output<ApplicationClientDetailsResponse> updatedBy() {
        return this.updatedBy;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Application(String name) {
        this(name, ApplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Application(String name, ApplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Application(String name, ApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:solutions:Application", name, args == null ? ApplicationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Application(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:solutions:Application", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:solutions/v20160901preview:Application").build()),
                Output.of(Alias.builder().type("azure-native:solutions/v20170901:Application").build()),
                Output.of(Alias.builder().type("azure-native:solutions/v20180601:Application").build()),
                Output.of(Alias.builder().type("azure-native:solutions/v20190701:Application").build()),
                Output.of(Alias.builder().type("azure-native:solutions/v20200821preview:Application").build()),
                Output.of(Alias.builder().type("azure-native:solutions/v20210701:Application").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Application get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Application(name, id, options);
    }
}
