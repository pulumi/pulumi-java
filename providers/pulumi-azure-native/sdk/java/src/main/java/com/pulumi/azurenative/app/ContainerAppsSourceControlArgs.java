// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app;

import com.pulumi.azurenative.app.inputs.GithubActionConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerAppsSourceControlArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerAppsSourceControlArgs Empty = new ContainerAppsSourceControlArgs();

    /**
     * The branch which will trigger the auto deployment
     * 
     */
    @Import(name="branch")
    private @Nullable Output<String> branch;

    /**
     * @return The branch which will trigger the auto deployment
     * 
     */
    public Optional<Output<String>> branch() {
        return Optional.ofNullable(this.branch);
    }

    /**
     * Name of the Container App.
     * 
     */
    @Import(name="containerAppName", required=true)
    private Output<String> containerAppName;

    /**
     * @return Name of the Container App.
     * 
     */
    public Output<String> containerAppName() {
        return this.containerAppName;
    }

    /**
     * Container App Revision Template with all possible settings and the
     * defaults if user did not provide them. The defaults are populated
     * as they were at the creation time
     * 
     */
    @Import(name="githubActionConfiguration")
    private @Nullable Output<GithubActionConfigurationArgs> githubActionConfiguration;

    /**
     * @return Container App Revision Template with all possible settings and the
     * defaults if user did not provide them. The defaults are populated
     * as they were at the creation time
     * 
     */
    public Optional<Output<GithubActionConfigurationArgs>> githubActionConfiguration() {
        return Optional.ofNullable(this.githubActionConfiguration);
    }

    /**
     * Name of the Container App SourceControl.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Container App SourceControl.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The repo url which will be integrated to ContainerApp.
     * 
     */
    @Import(name="repoUrl")
    private @Nullable Output<String> repoUrl;

    /**
     * @return The repo url which will be integrated to ContainerApp.
     * 
     */
    public Optional<Output<String>> repoUrl() {
        return Optional.ofNullable(this.repoUrl);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private ContainerAppsSourceControlArgs() {}

    private ContainerAppsSourceControlArgs(ContainerAppsSourceControlArgs $) {
        this.branch = $.branch;
        this.containerAppName = $.containerAppName;
        this.githubActionConfiguration = $.githubActionConfiguration;
        this.name = $.name;
        this.repoUrl = $.repoUrl;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerAppsSourceControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerAppsSourceControlArgs $;

        public Builder() {
            $ = new ContainerAppsSourceControlArgs();
        }

        public Builder(ContainerAppsSourceControlArgs defaults) {
            $ = new ContainerAppsSourceControlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param branch The branch which will trigger the auto deployment
         * 
         * @return builder
         * 
         */
        public Builder branch(@Nullable Output<String> branch) {
            $.branch = branch;
            return this;
        }

        /**
         * @param branch The branch which will trigger the auto deployment
         * 
         * @return builder
         * 
         */
        public Builder branch(String branch) {
            return branch(Output.of(branch));
        }

        /**
         * @param containerAppName Name of the Container App.
         * 
         * @return builder
         * 
         */
        public Builder containerAppName(Output<String> containerAppName) {
            $.containerAppName = containerAppName;
            return this;
        }

        /**
         * @param containerAppName Name of the Container App.
         * 
         * @return builder
         * 
         */
        public Builder containerAppName(String containerAppName) {
            return containerAppName(Output.of(containerAppName));
        }

        /**
         * @param githubActionConfiguration Container App Revision Template with all possible settings and the
         * defaults if user did not provide them. The defaults are populated
         * as they were at the creation time
         * 
         * @return builder
         * 
         */
        public Builder githubActionConfiguration(@Nullable Output<GithubActionConfigurationArgs> githubActionConfiguration) {
            $.githubActionConfiguration = githubActionConfiguration;
            return this;
        }

        /**
         * @param githubActionConfiguration Container App Revision Template with all possible settings and the
         * defaults if user did not provide them. The defaults are populated
         * as they were at the creation time
         * 
         * @return builder
         * 
         */
        public Builder githubActionConfiguration(GithubActionConfigurationArgs githubActionConfiguration) {
            return githubActionConfiguration(Output.of(githubActionConfiguration));
        }

        /**
         * @param name Name of the Container App SourceControl.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Container App SourceControl.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param repoUrl The repo url which will be integrated to ContainerApp.
         * 
         * @return builder
         * 
         */
        public Builder repoUrl(@Nullable Output<String> repoUrl) {
            $.repoUrl = repoUrl;
            return this;
        }

        /**
         * @param repoUrl The repo url which will be integrated to ContainerApp.
         * 
         * @return builder
         * 
         */
        public Builder repoUrl(String repoUrl) {
            return repoUrl(Output.of(repoUrl));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ContainerAppsSourceControlArgs build() {
            $.containerAppName = Objects.requireNonNull($.containerAppName, "expected parameter 'containerAppName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
