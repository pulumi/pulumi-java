// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * storage resource of type Azure Storage Account.
 * 
 */
public final class StorageAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageAccountArgs Empty = new StorageAccountArgs();

    /**
     * The account key of the Azure Storage Account.
     * 
     */
    @Import(name="accountKey", required=true)
    private Output<String> accountKey;

    /**
     * @return The account key of the Azure Storage Account.
     * 
     */
    public Output<String> accountKey() {
        return this.accountKey;
    }

    /**
     * The account name of the Azure Storage Account.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The account name of the Azure Storage Account.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The type of the storage.
     * Expected value is &#39;StorageAccount&#39;.
     * 
     */
    @Import(name="storageType", required=true)
    private Output<String> storageType;

    /**
     * @return The type of the storage.
     * Expected value is &#39;StorageAccount&#39;.
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }

    private StorageAccountArgs() {}

    private StorageAccountArgs(StorageAccountArgs $) {
        this.accountKey = $.accountKey;
        this.accountName = $.accountName;
        this.storageType = $.storageType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageAccountArgs $;

        public Builder() {
            $ = new StorageAccountArgs();
        }

        public Builder(StorageAccountArgs defaults) {
            $ = new StorageAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountKey The account key of the Azure Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder accountKey(Output<String> accountKey) {
            $.accountKey = accountKey;
            return this;
        }

        /**
         * @param accountKey The account key of the Azure Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder accountKey(String accountKey) {
            return accountKey(Output.of(accountKey));
        }

        /**
         * @param accountName The account name of the Azure Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The account name of the Azure Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param storageType The type of the storage.
         * Expected value is &#39;StorageAccount&#39;.
         * 
         * @return builder
         * 
         */
        public Builder storageType(Output<String> storageType) {
            $.storageType = storageType;
            return this;
        }

        /**
         * @param storageType The type of the storage.
         * Expected value is &#39;StorageAccount&#39;.
         * 
         * @return builder
         * 
         */
        public Builder storageType(String storageType) {
            return storageType(Output.of(storageType));
        }

        public StorageAccountArgs build() {
            $.accountKey = Objects.requireNonNull($.accountKey, "expected parameter 'accountKey' to be non-null");
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.storageType = Codegen.stringProp("storageType").output().arg($.storageType).require();
            return $;
        }
    }

}
