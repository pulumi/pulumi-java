// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.DiskEncryptionInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Azure VM managed disk input details.
 * 
 */
public final class A2AVmManagedDiskInputDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final A2AVmManagedDiskInputDetailsArgs Empty = new A2AVmManagedDiskInputDetailsArgs();

    /**
     * The recovery disk encryption information (for one / single pass flows).
     * 
     */
    @Import(name="diskEncryptionInfo")
    private @Nullable Output<DiskEncryptionInfoArgs> diskEncryptionInfo;

    public Optional<Output<DiskEncryptionInfoArgs>> diskEncryptionInfo() {
        return Optional.ofNullable(this.diskEncryptionInfo);
    }

    /**
     * The disk Id.
     * 
     */
    @Import(name="diskId")
    private @Nullable Output<String> diskId;

    public Optional<Output<String>> diskId() {
        return Optional.ofNullable(this.diskId);
    }

    /**
     * The primary staging storage account Arm Id.
     * 
     */
    @Import(name="primaryStagingAzureStorageAccountId")
    private @Nullable Output<String> primaryStagingAzureStorageAccountId;

    public Optional<Output<String>> primaryStagingAzureStorageAccountId() {
        return Optional.ofNullable(this.primaryStagingAzureStorageAccountId);
    }

    /**
     * The recovery disk encryption set Id.
     * 
     */
    @Import(name="recoveryDiskEncryptionSetId")
    private @Nullable Output<String> recoveryDiskEncryptionSetId;

    public Optional<Output<String>> recoveryDiskEncryptionSetId() {
        return Optional.ofNullable(this.recoveryDiskEncryptionSetId);
    }

    /**
     * The replica disk type. Its an optional value and will be same as source disk type if not user provided.
     * 
     */
    @Import(name="recoveryReplicaDiskAccountType")
    private @Nullable Output<String> recoveryReplicaDiskAccountType;

    public Optional<Output<String>> recoveryReplicaDiskAccountType() {
        return Optional.ofNullable(this.recoveryReplicaDiskAccountType);
    }

    /**
     * The target resource group Arm Id.
     * 
     */
    @Import(name="recoveryResourceGroupId")
    private @Nullable Output<String> recoveryResourceGroupId;

    public Optional<Output<String>> recoveryResourceGroupId() {
        return Optional.ofNullable(this.recoveryResourceGroupId);
    }

    /**
     * The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
     * 
     */
    @Import(name="recoveryTargetDiskAccountType")
    private @Nullable Output<String> recoveryTargetDiskAccountType;

    public Optional<Output<String>> recoveryTargetDiskAccountType() {
        return Optional.ofNullable(this.recoveryTargetDiskAccountType);
    }

    private A2AVmManagedDiskInputDetailsArgs() {}

    private A2AVmManagedDiskInputDetailsArgs(A2AVmManagedDiskInputDetailsArgs $) {
        this.diskEncryptionInfo = $.diskEncryptionInfo;
        this.diskId = $.diskId;
        this.primaryStagingAzureStorageAccountId = $.primaryStagingAzureStorageAccountId;
        this.recoveryDiskEncryptionSetId = $.recoveryDiskEncryptionSetId;
        this.recoveryReplicaDiskAccountType = $.recoveryReplicaDiskAccountType;
        this.recoveryResourceGroupId = $.recoveryResourceGroupId;
        this.recoveryTargetDiskAccountType = $.recoveryTargetDiskAccountType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(A2AVmManagedDiskInputDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private A2AVmManagedDiskInputDetailsArgs $;

        public Builder() {
            $ = new A2AVmManagedDiskInputDetailsArgs();
        }

        public Builder(A2AVmManagedDiskInputDetailsArgs defaults) {
            $ = new A2AVmManagedDiskInputDetailsArgs(Objects.requireNonNull(defaults));
        }

        public Builder diskEncryptionInfo(@Nullable Output<DiskEncryptionInfoArgs> diskEncryptionInfo) {
            $.diskEncryptionInfo = diskEncryptionInfo;
            return this;
        }

        public Builder diskEncryptionInfo(DiskEncryptionInfoArgs diskEncryptionInfo) {
            return diskEncryptionInfo(Output.of(diskEncryptionInfo));
        }

        public Builder diskId(@Nullable Output<String> diskId) {
            $.diskId = diskId;
            return this;
        }

        public Builder diskId(String diskId) {
            return diskId(Output.of(diskId));
        }

        public Builder primaryStagingAzureStorageAccountId(@Nullable Output<String> primaryStagingAzureStorageAccountId) {
            $.primaryStagingAzureStorageAccountId = primaryStagingAzureStorageAccountId;
            return this;
        }

        public Builder primaryStagingAzureStorageAccountId(String primaryStagingAzureStorageAccountId) {
            return primaryStagingAzureStorageAccountId(Output.of(primaryStagingAzureStorageAccountId));
        }

        public Builder recoveryDiskEncryptionSetId(@Nullable Output<String> recoveryDiskEncryptionSetId) {
            $.recoveryDiskEncryptionSetId = recoveryDiskEncryptionSetId;
            return this;
        }

        public Builder recoveryDiskEncryptionSetId(String recoveryDiskEncryptionSetId) {
            return recoveryDiskEncryptionSetId(Output.of(recoveryDiskEncryptionSetId));
        }

        public Builder recoveryReplicaDiskAccountType(@Nullable Output<String> recoveryReplicaDiskAccountType) {
            $.recoveryReplicaDiskAccountType = recoveryReplicaDiskAccountType;
            return this;
        }

        public Builder recoveryReplicaDiskAccountType(String recoveryReplicaDiskAccountType) {
            return recoveryReplicaDiskAccountType(Output.of(recoveryReplicaDiskAccountType));
        }

        public Builder recoveryResourceGroupId(@Nullable Output<String> recoveryResourceGroupId) {
            $.recoveryResourceGroupId = recoveryResourceGroupId;
            return this;
        }

        public Builder recoveryResourceGroupId(String recoveryResourceGroupId) {
            return recoveryResourceGroupId(Output.of(recoveryResourceGroupId));
        }

        public Builder recoveryTargetDiskAccountType(@Nullable Output<String> recoveryTargetDiskAccountType) {
            $.recoveryTargetDiskAccountType = recoveryTargetDiskAccountType;
            return this;
        }

        public Builder recoveryTargetDiskAccountType(String recoveryTargetDiskAccountType) {
            return recoveryTargetDiskAccountType(Output.of(recoveryTargetDiskAccountType));
        }

        public A2AVmManagedDiskInputDetailsArgs build() {
            return $;
        }
    }

}
