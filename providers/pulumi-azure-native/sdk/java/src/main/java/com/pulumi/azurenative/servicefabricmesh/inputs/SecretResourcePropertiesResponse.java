// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the properties of a secret resource.
 * 
 */
public final class SecretResourcePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecretResourcePropertiesResponse Empty = new SecretResourcePropertiesResponse();

    /**
     * The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed.
     * 
     */
    @Import(name="contentType")
    private @Nullable String contentType;

    /**
     * @return The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed.
     * 
     */
    public Optional<String> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    /**
     * User readable description of the secret.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return User readable description of the secret.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Describes the kind of secret.
     * Expected value is &#39;SecretResourceProperties&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private String kind;

    /**
     * @return Describes the kind of secret.
     * Expected value is &#39;SecretResourceProperties&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }

    /**
     * State of the resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return State of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Status of the resource.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }

    /**
     * Gives additional information about the current status of the secret.
     * 
     */
    @Import(name="statusDetails", required=true)
    private String statusDetails;

    /**
     * @return Gives additional information about the current status of the secret.
     * 
     */
    public String statusDetails() {
        return this.statusDetails;
    }

    private SecretResourcePropertiesResponse() {}

    private SecretResourcePropertiesResponse(SecretResourcePropertiesResponse $) {
        this.contentType = $.contentType;
        this.description = $.description;
        this.kind = $.kind;
        this.provisioningState = $.provisioningState;
        this.status = $.status;
        this.statusDetails = $.statusDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretResourcePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretResourcePropertiesResponse $;

        public Builder() {
            $ = new SecretResourcePropertiesResponse();
        }

        public Builder(SecretResourcePropertiesResponse defaults) {
            $ = new SecretResourcePropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param contentType The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed.
         * 
         * @return builder
         * 
         */
        public Builder contentType(@Nullable String contentType) {
            $.contentType = contentType;
            return this;
        }

        /**
         * @param description User readable description of the secret.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param kind Describes the kind of secret.
         * Expected value is &#39;SecretResourceProperties&#39;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param provisioningState State of the resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param status Status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        /**
         * @param statusDetails Gives additional information about the current status of the secret.
         * 
         * @return builder
         * 
         */
        public Builder statusDetails(String statusDetails) {
            $.statusDetails = statusDetails;
            return this;
        }

        public SecretResourcePropertiesResponse build() {
            $.kind = Codegen.stringProp("kind").arg($.kind).require();
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.statusDetails = Objects.requireNonNull($.statusDetails, "expected parameter 'statusDetails' to be non-null");
            return $;
        }
    }

}
