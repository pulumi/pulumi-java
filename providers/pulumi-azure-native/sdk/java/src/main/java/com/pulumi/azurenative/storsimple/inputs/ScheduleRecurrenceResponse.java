// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The schedule recurrence.
 * 
 */
public final class ScheduleRecurrenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScheduleRecurrenceResponse Empty = new ScheduleRecurrenceResponse();

    /**
     * The recurrence type.
     * 
     */
    @Import(name="recurrenceType", required=true)
    private String recurrenceType;

    public String recurrenceType() {
        return this.recurrenceType;
    }

    /**
     * The recurrence value.
     * 
     */
    @Import(name="recurrenceValue", required=true)
    private Integer recurrenceValue;

    public Integer recurrenceValue() {
        return this.recurrenceValue;
    }

    /**
     * The week days list. Applicable only for schedules of recurrence type &#39;weekly&#39;.
     * 
     */
    @Import(name="weeklyDaysList")
    private @Nullable List<String> weeklyDaysList;

    public Optional<List<String>> weeklyDaysList() {
        return Optional.ofNullable(this.weeklyDaysList);
    }

    private ScheduleRecurrenceResponse() {}

    private ScheduleRecurrenceResponse(ScheduleRecurrenceResponse $) {
        this.recurrenceType = $.recurrenceType;
        this.recurrenceValue = $.recurrenceValue;
        this.weeklyDaysList = $.weeklyDaysList;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleRecurrenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleRecurrenceResponse $;

        public Builder() {
            $ = new ScheduleRecurrenceResponse();
        }

        public Builder(ScheduleRecurrenceResponse defaults) {
            $ = new ScheduleRecurrenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder recurrenceType(String recurrenceType) {
            $.recurrenceType = recurrenceType;
            return this;
        }

        public Builder recurrenceValue(Integer recurrenceValue) {
            $.recurrenceValue = recurrenceValue;
            return this;
        }

        public Builder weeklyDaysList(@Nullable List<String> weeklyDaysList) {
            $.weeklyDaysList = weeklyDaysList;
            return this;
        }

        public Builder weeklyDaysList(String... weeklyDaysList) {
            return weeklyDaysList(List.of(weeklyDaysList));
        }

        public ScheduleRecurrenceResponse build() {
            $.recurrenceType = Objects.requireNonNull($.recurrenceType, "expected parameter 'recurrenceType' to be non-null");
            $.recurrenceValue = Objects.requireNonNull($.recurrenceValue, "expected parameter 'recurrenceValue' to be non-null");
            return $;
        }
    }

}
