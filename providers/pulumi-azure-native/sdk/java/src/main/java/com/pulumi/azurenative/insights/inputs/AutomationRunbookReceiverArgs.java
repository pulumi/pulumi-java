// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The Azure Automation Runbook notification receiver.
 * 
 */
public final class AutomationRunbookReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomationRunbookReceiverArgs Empty = new AutomationRunbookReceiverArgs();

    /**
     * The Azure automation account Id which holds this runbook and authenticate to Azure resource.
     * 
     */
    @Import(name="automationAccountId", required=true)
    private Output<String> automationAccountId;

    public Output<String> automationAccountId() {
        return this.automationAccountId;
    }

    /**
     * Indicates whether this instance is global runbook.
     * 
     */
    @Import(name="isGlobalRunbook", required=true)
    private Output<Boolean> isGlobalRunbook;

    public Output<Boolean> isGlobalRunbook() {
        return this.isGlobalRunbook;
    }

    /**
     * Indicates name of the webhook.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name for this runbook.
     * 
     */
    @Import(name="runbookName", required=true)
    private Output<String> runbookName;

    public Output<String> runbookName() {
        return this.runbookName;
    }

    /**
     * The URI where webhooks should be sent.
     * 
     */
    @Import(name="serviceUri")
    private @Nullable Output<String> serviceUri;

    public Optional<Output<String>> serviceUri() {
        return Optional.ofNullable(this.serviceUri);
    }

    /**
     * Indicates whether to use common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
    private @Nullable Output<Boolean> useCommonAlertSchema;

    public Optional<Output<Boolean>> useCommonAlertSchema() {
        return Optional.ofNullable(this.useCommonAlertSchema);
    }

    /**
     * The resource id for webhook linked to this runbook.
     * 
     */
    @Import(name="webhookResourceId", required=true)
    private Output<String> webhookResourceId;

    public Output<String> webhookResourceId() {
        return this.webhookResourceId;
    }

    private AutomationRunbookReceiverArgs() {}

    private AutomationRunbookReceiverArgs(AutomationRunbookReceiverArgs $) {
        this.automationAccountId = $.automationAccountId;
        this.isGlobalRunbook = $.isGlobalRunbook;
        this.name = $.name;
        this.runbookName = $.runbookName;
        this.serviceUri = $.serviceUri;
        this.useCommonAlertSchema = $.useCommonAlertSchema;
        this.webhookResourceId = $.webhookResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationRunbookReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationRunbookReceiverArgs $;

        public Builder() {
            $ = new AutomationRunbookReceiverArgs();
        }

        public Builder(AutomationRunbookReceiverArgs defaults) {
            $ = new AutomationRunbookReceiverArgs(Objects.requireNonNull(defaults));
        }

        public Builder automationAccountId(Output<String> automationAccountId) {
            $.automationAccountId = automationAccountId;
            return this;
        }

        public Builder automationAccountId(String automationAccountId) {
            return automationAccountId(Output.of(automationAccountId));
        }

        public Builder isGlobalRunbook(Output<Boolean> isGlobalRunbook) {
            $.isGlobalRunbook = isGlobalRunbook;
            return this;
        }

        public Builder isGlobalRunbook(Boolean isGlobalRunbook) {
            return isGlobalRunbook(Output.of(isGlobalRunbook));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder runbookName(Output<String> runbookName) {
            $.runbookName = runbookName;
            return this;
        }

        public Builder runbookName(String runbookName) {
            return runbookName(Output.of(runbookName));
        }

        public Builder serviceUri(@Nullable Output<String> serviceUri) {
            $.serviceUri = serviceUri;
            return this;
        }

        public Builder serviceUri(String serviceUri) {
            return serviceUri(Output.of(serviceUri));
        }

        public Builder useCommonAlertSchema(@Nullable Output<Boolean> useCommonAlertSchema) {
            $.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }

        public Builder useCommonAlertSchema(Boolean useCommonAlertSchema) {
            return useCommonAlertSchema(Output.of(useCommonAlertSchema));
        }

        public Builder webhookResourceId(Output<String> webhookResourceId) {
            $.webhookResourceId = webhookResourceId;
            return this;
        }

        public Builder webhookResourceId(String webhookResourceId) {
            return webhookResourceId(Output.of(webhookResourceId));
        }

        public AutomationRunbookReceiverArgs build() {
            $.automationAccountId = Objects.requireNonNull($.automationAccountId, "expected parameter 'automationAccountId' to be non-null");
            $.isGlobalRunbook = Objects.requireNonNull($.isGlobalRunbook, "expected parameter 'isGlobalRunbook' to be non-null");
            $.runbookName = Objects.requireNonNull($.runbookName, "expected parameter 'runbookName' to be non-null");
            $.useCommonAlertSchema = Codegen.booleanProp("useCommonAlertSchema").output().arg($.useCommonAlertSchema).def(false).getNullable();
            $.webhookResourceId = Objects.requireNonNull($.webhookResourceId, "expected parameter 'webhookResourceId' to be non-null");
            return $;
        }
    }

}
