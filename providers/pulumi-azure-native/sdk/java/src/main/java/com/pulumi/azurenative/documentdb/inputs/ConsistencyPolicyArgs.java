// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.azurenative.documentdb.enums.DefaultConsistencyLevel;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The consistency policy for the Cosmos DB database account.
 * 
 */
public final class ConsistencyPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsistencyPolicyArgs Empty = new ConsistencyPolicyArgs();

    /**
     * The default consistency level and configuration settings of the Cosmos DB account.
     * 
     */
    @Import(name="defaultConsistencyLevel", required=true)
    private Output<DefaultConsistencyLevel> defaultConsistencyLevel;

    /**
     * @return The default consistency level and configuration settings of the Cosmos DB account.
     * 
     */
    public Output<DefaultConsistencyLevel> defaultConsistencyLevel() {
        return this.defaultConsistencyLevel;
    }

    /**
     * When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to &#39;BoundedStaleness&#39;.
     * 
     */
    @Import(name="maxIntervalInSeconds")
    private @Nullable Output<Integer> maxIntervalInSeconds;

    /**
     * @return When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to &#39;BoundedStaleness&#39;.
     * 
     */
    public Optional<Output<Integer>> maxIntervalInSeconds() {
        return Optional.ofNullable(this.maxIntervalInSeconds);
    }

    /**
     * When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to &#39;BoundedStaleness&#39;.
     * 
     */
    @Import(name="maxStalenessPrefix")
    private @Nullable Output<Double> maxStalenessPrefix;

    /**
     * @return When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to &#39;BoundedStaleness&#39;.
     * 
     */
    public Optional<Output<Double>> maxStalenessPrefix() {
        return Optional.ofNullable(this.maxStalenessPrefix);
    }

    private ConsistencyPolicyArgs() {}

    private ConsistencyPolicyArgs(ConsistencyPolicyArgs $) {
        this.defaultConsistencyLevel = $.defaultConsistencyLevel;
        this.maxIntervalInSeconds = $.maxIntervalInSeconds;
        this.maxStalenessPrefix = $.maxStalenessPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsistencyPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsistencyPolicyArgs $;

        public Builder() {
            $ = new ConsistencyPolicyArgs();
        }

        public Builder(ConsistencyPolicyArgs defaults) {
            $ = new ConsistencyPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultConsistencyLevel The default consistency level and configuration settings of the Cosmos DB account.
         * 
         * @return builder
         * 
         */
        public Builder defaultConsistencyLevel(Output<DefaultConsistencyLevel> defaultConsistencyLevel) {
            $.defaultConsistencyLevel = defaultConsistencyLevel;
            return this;
        }

        /**
         * @param defaultConsistencyLevel The default consistency level and configuration settings of the Cosmos DB account.
         * 
         * @return builder
         * 
         */
        public Builder defaultConsistencyLevel(DefaultConsistencyLevel defaultConsistencyLevel) {
            return defaultConsistencyLevel(Output.of(defaultConsistencyLevel));
        }

        /**
         * @param maxIntervalInSeconds When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to &#39;BoundedStaleness&#39;.
         * 
         * @return builder
         * 
         */
        public Builder maxIntervalInSeconds(@Nullable Output<Integer> maxIntervalInSeconds) {
            $.maxIntervalInSeconds = maxIntervalInSeconds;
            return this;
        }

        /**
         * @param maxIntervalInSeconds When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to &#39;BoundedStaleness&#39;.
         * 
         * @return builder
         * 
         */
        public Builder maxIntervalInSeconds(Integer maxIntervalInSeconds) {
            return maxIntervalInSeconds(Output.of(maxIntervalInSeconds));
        }

        /**
         * @param maxStalenessPrefix When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to &#39;BoundedStaleness&#39;.
         * 
         * @return builder
         * 
         */
        public Builder maxStalenessPrefix(@Nullable Output<Double> maxStalenessPrefix) {
            $.maxStalenessPrefix = maxStalenessPrefix;
            return this;
        }

        /**
         * @param maxStalenessPrefix When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to &#39;BoundedStaleness&#39;.
         * 
         * @return builder
         * 
         */
        public Builder maxStalenessPrefix(Double maxStalenessPrefix) {
            return maxStalenessPrefix(Output.of(maxStalenessPrefix));
        }

        public ConsistencyPolicyArgs build() {
            $.defaultConsistencyLevel = Objects.requireNonNull($.defaultConsistencyLevel, "expected parameter 'defaultConsistencyLevel' to be non-null");
            return $;
        }
    }

}
