// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resources.inputs;

import com.pulumi.azurenative.resources.inputs.ErrorResponseResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Generic object modeling results of script execution.
 * 
 */
public final class ScriptStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScriptStatusResponse Empty = new ScriptStatusResponse();

    /**
     * ACI resource Id.
     * 
     */
    @Import(name="containerInstanceId", required=true)
    private String containerInstanceId;

    /**
     * @return ACI resource Id.
     * 
     */
    public String containerInstanceId() {
        return this.containerInstanceId;
    }

    /**
     * End time of the script execution.
     * 
     */
    @Import(name="endTime", required=true)
    private String endTime;

    /**
     * @return End time of the script execution.
     * 
     */
    public String endTime() {
        return this.endTime;
    }

    /**
     * Error that is relayed from the script execution.
     * 
     */
    @Import(name="error")
    private @Nullable ErrorResponseResponse error;

    /**
     * @return Error that is relayed from the script execution.
     * 
     */
    public Optional<ErrorResponseResponse> error() {
        return Optional.ofNullable(this.error);
    }

    /**
     * Time the deployment script resource will expire.
     * 
     */
    @Import(name="expirationTime", required=true)
    private String expirationTime;

    /**
     * @return Time the deployment script resource will expire.
     * 
     */
    public String expirationTime() {
        return this.expirationTime;
    }

    /**
     * Start time of the script execution.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    /**
     * @return Start time of the script execution.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * Storage account resource Id.
     * 
     */
    @Import(name="storageAccountId", required=true)
    private String storageAccountId;

    /**
     * @return Storage account resource Id.
     * 
     */
    public String storageAccountId() {
        return this.storageAccountId;
    }

    private ScriptStatusResponse() {}

    private ScriptStatusResponse(ScriptStatusResponse $) {
        this.containerInstanceId = $.containerInstanceId;
        this.endTime = $.endTime;
        this.error = $.error;
        this.expirationTime = $.expirationTime;
        this.startTime = $.startTime;
        this.storageAccountId = $.storageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScriptStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScriptStatusResponse $;

        public Builder() {
            $ = new ScriptStatusResponse();
        }

        public Builder(ScriptStatusResponse defaults) {
            $ = new ScriptStatusResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerInstanceId ACI resource Id.
         * 
         * @return builder
         * 
         */
        public Builder containerInstanceId(String containerInstanceId) {
            $.containerInstanceId = containerInstanceId;
            return this;
        }

        /**
         * @param endTime End time of the script execution.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param error Error that is relayed from the script execution.
         * 
         * @return builder
         * 
         */
        public Builder error(@Nullable ErrorResponseResponse error) {
            $.error = error;
            return this;
        }

        /**
         * @param expirationTime Time the deployment script resource will expire.
         * 
         * @return builder
         * 
         */
        public Builder expirationTime(String expirationTime) {
            $.expirationTime = expirationTime;
            return this;
        }

        /**
         * @param startTime Start time of the script execution.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param storageAccountId Storage account resource Id.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(String storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        public ScriptStatusResponse build() {
            $.containerInstanceId = Objects.requireNonNull($.containerInstanceId, "expected parameter 'containerInstanceId' to be non-null");
            $.endTime = Objects.requireNonNull($.endTime, "expected parameter 'endTime' to be non-null");
            $.expirationTime = Objects.requireNonNull($.expirationTime, "expected parameter 'expirationTime' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            $.storageAccountId = Objects.requireNonNull($.storageAccountId, "expected parameter 'storageAccountId' to be non-null");
            return $;
        }
    }

}
