// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.outputs;

import com.pulumi.azurenative.media.outputs.MediaGraphClearEndpointResponse;
import com.pulumi.azurenative.media.outputs.MediaGraphTlsEndpointResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MediaGraphRtspSourceResponse {
    /**
     * @return RTSP endpoint of the stream being connected to.
     * 
     */
    private final Either<MediaGraphClearEndpointResponse,MediaGraphTlsEndpointResponse> endpoint;
    /**
     * @return Source name.
     * 
     */
    private final String name;
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.MediaGraphRtspSource&#39;.
     * 
     */
    private final String odataType;
    /**
     * @return Underlying RTSP transport. This can be used to enable or disable HTTP tunneling.
     * 
     */
    private final String transport;

    @CustomType.Constructor
    private MediaGraphRtspSourceResponse(
        @CustomType.Parameter("endpoint") Either<MediaGraphClearEndpointResponse,MediaGraphTlsEndpointResponse> endpoint,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("odataType") String odataType,
        @CustomType.Parameter("transport") String transport) {
        this.endpoint = endpoint;
        this.name = name;
        this.odataType = odataType;
        this.transport = transport;
    }

    /**
     * @return RTSP endpoint of the stream being connected to.
     * 
     */
    public Either<MediaGraphClearEndpointResponse,MediaGraphTlsEndpointResponse> endpoint() {
        return this.endpoint;
    }
    /**
     * @return Source name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.MediaGraphRtspSource&#39;.
     * 
     */
    public String odataType() {
        return this.odataType;
    }
    /**
     * @return Underlying RTSP transport. This can be used to enable or disable HTTP tunneling.
     * 
     */
    public String transport() {
        return this.transport;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MediaGraphRtspSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Either<MediaGraphClearEndpointResponse,MediaGraphTlsEndpointResponse> endpoint;
        private String name;
        private String odataType;
        private String transport;

        public Builder() {
    	      // Empty
        }

        public Builder(MediaGraphRtspSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpoint = defaults.endpoint;
    	      this.name = defaults.name;
    	      this.odataType = defaults.odataType;
    	      this.transport = defaults.transport;
        }

        public Builder endpoint(Either<MediaGraphClearEndpointResponse,MediaGraphTlsEndpointResponse> endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder odataType(String odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }
        public Builder transport(String transport) {
            this.transport = Objects.requireNonNull(transport);
            return this;
        }        public MediaGraphRtspSourceResponse build() {
            return new MediaGraphRtspSourceResponse(endpoint, name, odataType, transport);
        }
    }
}
