// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.InstanceViewStatusResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The instance view of a virtual machine extension handler.
 * 
 */
public final class VirtualMachineExtensionHandlerInstanceViewResponse extends com.pulumi.resources.InvokeArgs {

    public static final VirtualMachineExtensionHandlerInstanceViewResponse Empty = new VirtualMachineExtensionHandlerInstanceViewResponse();

    /**
     * The extension handler status.
     * 
     */
    @Import(name="status")
    private @Nullable InstanceViewStatusResponse status;

    public Optional<InstanceViewStatusResponse> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Specifies the type of the extension; an example is &#34;CustomScriptExtension&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Specifies the version of the script handler.
     * 
     */
    @Import(name="typeHandlerVersion")
    private @Nullable String typeHandlerVersion;

    public Optional<String> typeHandlerVersion() {
        return Optional.ofNullable(this.typeHandlerVersion);
    }

    private VirtualMachineExtensionHandlerInstanceViewResponse() {}

    private VirtualMachineExtensionHandlerInstanceViewResponse(VirtualMachineExtensionHandlerInstanceViewResponse $) {
        this.status = $.status;
        this.type = $.type;
        this.typeHandlerVersion = $.typeHandlerVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineExtensionHandlerInstanceViewResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineExtensionHandlerInstanceViewResponse $;

        public Builder() {
            $ = new VirtualMachineExtensionHandlerInstanceViewResponse();
        }

        public Builder(VirtualMachineExtensionHandlerInstanceViewResponse defaults) {
            $ = new VirtualMachineExtensionHandlerInstanceViewResponse(Objects.requireNonNull(defaults));
        }

        public Builder status(@Nullable InstanceViewStatusResponse status) {
            $.status = status;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public Builder typeHandlerVersion(@Nullable String typeHandlerVersion) {
            $.typeHandlerVersion = typeHandlerVersion;
            return this;
        }

        public VirtualMachineExtensionHandlerInstanceViewResponse build() {
            return $;
        }
    }

}
