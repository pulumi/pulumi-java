// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetForwardingRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetForwardingRuleArgs Empty = new GetForwardingRuleArgs();

    /**
     * The name of the DNS forwarding ruleset.
     * 
     */
    @Import(name="dnsForwardingRulesetName", required=true)
    private Output<String> dnsForwardingRulesetName;

    /**
     * @return The name of the DNS forwarding ruleset.
     * 
     */
    public Output<String> dnsForwardingRulesetName() {
        return this.dnsForwardingRulesetName;
    }

    /**
     * The name of the forwarding rule.
     * 
     */
    @Import(name="forwardingRuleName", required=true)
    private Output<String> forwardingRuleName;

    /**
     * @return The name of the forwarding rule.
     * 
     */
    public Output<String> forwardingRuleName() {
        return this.forwardingRuleName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetForwardingRuleArgs() {}

    private GetForwardingRuleArgs(GetForwardingRuleArgs $) {
        this.dnsForwardingRulesetName = $.dnsForwardingRulesetName;
        this.forwardingRuleName = $.forwardingRuleName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetForwardingRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetForwardingRuleArgs $;

        public Builder() {
            $ = new GetForwardingRuleArgs();
        }

        public Builder(GetForwardingRuleArgs defaults) {
            $ = new GetForwardingRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
         * 
         * @return builder
         * 
         */
        public Builder dnsForwardingRulesetName(Output<String> dnsForwardingRulesetName) {
            $.dnsForwardingRulesetName = dnsForwardingRulesetName;
            return this;
        }

        /**
         * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
         * 
         * @return builder
         * 
         */
        public Builder dnsForwardingRulesetName(String dnsForwardingRulesetName) {
            return dnsForwardingRulesetName(Output.of(dnsForwardingRulesetName));
        }

        /**
         * @param forwardingRuleName The name of the forwarding rule.
         * 
         * @return builder
         * 
         */
        public Builder forwardingRuleName(Output<String> forwardingRuleName) {
            $.forwardingRuleName = forwardingRuleName;
            return this;
        }

        /**
         * @param forwardingRuleName The name of the forwarding rule.
         * 
         * @return builder
         * 
         */
        public Builder forwardingRuleName(String forwardingRuleName) {
            return forwardingRuleName(Output.of(forwardingRuleName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetForwardingRuleArgs build() {
            $.dnsForwardingRulesetName = Objects.requireNonNull($.dnsForwardingRulesetName, "expected parameter 'dnsForwardingRulesetName' to be non-null");
            $.forwardingRuleName = Objects.requireNonNull($.forwardingRuleName, "expected parameter 'forwardingRuleName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
