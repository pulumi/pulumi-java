// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.inputs;

import com.pulumi.azurenative.logic.inputs.AS2AcknowledgementConnectionSettingsResponse;
import com.pulumi.azurenative.logic.inputs.AS2EnvelopeSettingsResponse;
import com.pulumi.azurenative.logic.inputs.AS2ErrorSettingsResponse;
import com.pulumi.azurenative.logic.inputs.AS2MdnSettingsResponse;
import com.pulumi.azurenative.logic.inputs.AS2MessageConnectionSettingsResponse;
import com.pulumi.azurenative.logic.inputs.AS2SecuritySettingsResponse;
import com.pulumi.azurenative.logic.inputs.AS2ValidationSettingsResponse;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * The AS2 agreement protocol settings.
 * 
 */
public final class AS2ProtocolSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final AS2ProtocolSettingsResponse Empty = new AS2ProtocolSettingsResponse();

    /**
     * The acknowledgement connection settings.
     * 
     */
    @Import(name="acknowledgementConnectionSettings", required=true)
    private AS2AcknowledgementConnectionSettingsResponse acknowledgementConnectionSettings;

    /**
     * @return The acknowledgement connection settings.
     * 
     */
    public AS2AcknowledgementConnectionSettingsResponse acknowledgementConnectionSettings() {
        return this.acknowledgementConnectionSettings;
    }

    /**
     * The envelope settings.
     * 
     */
    @Import(name="envelopeSettings", required=true)
    private AS2EnvelopeSettingsResponse envelopeSettings;

    /**
     * @return The envelope settings.
     * 
     */
    public AS2EnvelopeSettingsResponse envelopeSettings() {
        return this.envelopeSettings;
    }

    /**
     * The error settings.
     * 
     */
    @Import(name="errorSettings", required=true)
    private AS2ErrorSettingsResponse errorSettings;

    /**
     * @return The error settings.
     * 
     */
    public AS2ErrorSettingsResponse errorSettings() {
        return this.errorSettings;
    }

    /**
     * The MDN settings.
     * 
     */
    @Import(name="mdnSettings", required=true)
    private AS2MdnSettingsResponse mdnSettings;

    /**
     * @return The MDN settings.
     * 
     */
    public AS2MdnSettingsResponse mdnSettings() {
        return this.mdnSettings;
    }

    /**
     * The message connection settings.
     * 
     */
    @Import(name="messageConnectionSettings", required=true)
    private AS2MessageConnectionSettingsResponse messageConnectionSettings;

    /**
     * @return The message connection settings.
     * 
     */
    public AS2MessageConnectionSettingsResponse messageConnectionSettings() {
        return this.messageConnectionSettings;
    }

    /**
     * The security settings.
     * 
     */
    @Import(name="securitySettings", required=true)
    private AS2SecuritySettingsResponse securitySettings;

    /**
     * @return The security settings.
     * 
     */
    public AS2SecuritySettingsResponse securitySettings() {
        return this.securitySettings;
    }

    /**
     * The validation settings.
     * 
     */
    @Import(name="validationSettings", required=true)
    private AS2ValidationSettingsResponse validationSettings;

    /**
     * @return The validation settings.
     * 
     */
    public AS2ValidationSettingsResponse validationSettings() {
        return this.validationSettings;
    }

    private AS2ProtocolSettingsResponse() {}

    private AS2ProtocolSettingsResponse(AS2ProtocolSettingsResponse $) {
        this.acknowledgementConnectionSettings = $.acknowledgementConnectionSettings;
        this.envelopeSettings = $.envelopeSettings;
        this.errorSettings = $.errorSettings;
        this.mdnSettings = $.mdnSettings;
        this.messageConnectionSettings = $.messageConnectionSettings;
        this.securitySettings = $.securitySettings;
        this.validationSettings = $.validationSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AS2ProtocolSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AS2ProtocolSettingsResponse $;

        public Builder() {
            $ = new AS2ProtocolSettingsResponse();
        }

        public Builder(AS2ProtocolSettingsResponse defaults) {
            $ = new AS2ProtocolSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param acknowledgementConnectionSettings The acknowledgement connection settings.
         * 
         * @return builder
         * 
         */
        public Builder acknowledgementConnectionSettings(AS2AcknowledgementConnectionSettingsResponse acknowledgementConnectionSettings) {
            $.acknowledgementConnectionSettings = acknowledgementConnectionSettings;
            return this;
        }

        /**
         * @param envelopeSettings The envelope settings.
         * 
         * @return builder
         * 
         */
        public Builder envelopeSettings(AS2EnvelopeSettingsResponse envelopeSettings) {
            $.envelopeSettings = envelopeSettings;
            return this;
        }

        /**
         * @param errorSettings The error settings.
         * 
         * @return builder
         * 
         */
        public Builder errorSettings(AS2ErrorSettingsResponse errorSettings) {
            $.errorSettings = errorSettings;
            return this;
        }

        /**
         * @param mdnSettings The MDN settings.
         * 
         * @return builder
         * 
         */
        public Builder mdnSettings(AS2MdnSettingsResponse mdnSettings) {
            $.mdnSettings = mdnSettings;
            return this;
        }

        /**
         * @param messageConnectionSettings The message connection settings.
         * 
         * @return builder
         * 
         */
        public Builder messageConnectionSettings(AS2MessageConnectionSettingsResponse messageConnectionSettings) {
            $.messageConnectionSettings = messageConnectionSettings;
            return this;
        }

        /**
         * @param securitySettings The security settings.
         * 
         * @return builder
         * 
         */
        public Builder securitySettings(AS2SecuritySettingsResponse securitySettings) {
            $.securitySettings = securitySettings;
            return this;
        }

        /**
         * @param validationSettings The validation settings.
         * 
         * @return builder
         * 
         */
        public Builder validationSettings(AS2ValidationSettingsResponse validationSettings) {
            $.validationSettings = validationSettings;
            return this;
        }

        public AS2ProtocolSettingsResponse build() {
            $.acknowledgementConnectionSettings = Objects.requireNonNull($.acknowledgementConnectionSettings, "expected parameter 'acknowledgementConnectionSettings' to be non-null");
            $.envelopeSettings = Objects.requireNonNull($.envelopeSettings, "expected parameter 'envelopeSettings' to be non-null");
            $.errorSettings = Objects.requireNonNull($.errorSettings, "expected parameter 'errorSettings' to be non-null");
            $.mdnSettings = Objects.requireNonNull($.mdnSettings, "expected parameter 'mdnSettings' to be non-null");
            $.messageConnectionSettings = Objects.requireNonNull($.messageConnectionSettings, "expected parameter 'messageConnectionSettings' to be non-null");
            $.securitySettings = Objects.requireNonNull($.securitySettings, "expected parameter 'securitySettings' to be non-null");
            $.validationSettings = Objects.requireNonNull($.validationSettings, "expected parameter 'validationSettings' to be non-null");
            return $;
        }
    }

}
