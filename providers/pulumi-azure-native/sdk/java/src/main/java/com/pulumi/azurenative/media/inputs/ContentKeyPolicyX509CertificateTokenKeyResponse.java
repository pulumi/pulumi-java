// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Specifies a certificate for token validation.
 * 
 */
public final class ContentKeyPolicyX509CertificateTokenKeyResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContentKeyPolicyX509CertificateTokenKeyResponse Empty = new ContentKeyPolicyX509CertificateTokenKeyResponse();

    /**
     * The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private String odataType;

    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey&#39;.
     * 
     */
    public String odataType() {
        return this.odataType;
    }

    /**
     * The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)
     * 
     */
    @Import(name="rawBody", required=true)
    private String rawBody;

    /**
     * @return The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)
     * 
     */
    public String rawBody() {
        return this.rawBody;
    }

    private ContentKeyPolicyX509CertificateTokenKeyResponse() {}

    private ContentKeyPolicyX509CertificateTokenKeyResponse(ContentKeyPolicyX509CertificateTokenKeyResponse $) {
        this.odataType = $.odataType;
        this.rawBody = $.rawBody;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentKeyPolicyX509CertificateTokenKeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentKeyPolicyX509CertificateTokenKeyResponse $;

        public Builder() {
            $ = new ContentKeyPolicyX509CertificateTokenKeyResponse();
        }

        public Builder(ContentKeyPolicyX509CertificateTokenKeyResponse defaults) {
            $ = new ContentKeyPolicyX509CertificateTokenKeyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param odataType The discriminator for derived types.
         * Expected value is &#39;#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey&#39;.
         * 
         * @return builder
         * 
         */
        public Builder odataType(String odataType) {
            $.odataType = odataType;
            return this;
        }

        /**
         * @param rawBody The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)
         * 
         * @return builder
         * 
         */
        public Builder rawBody(String rawBody) {
            $.rawBody = rawBody;
            return this;
        }

        public ContentKeyPolicyX509CertificateTokenKeyResponse build() {
            $.odataType = Codegen.stringProp("odataType").arg($.odataType).require();
            $.rawBody = Objects.requireNonNull($.rawBody, "expected parameter 'rawBody' to be non-null");
            return $;
        }
    }

}
