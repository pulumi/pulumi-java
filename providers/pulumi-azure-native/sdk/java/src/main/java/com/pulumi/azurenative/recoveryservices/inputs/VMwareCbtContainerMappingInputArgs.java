// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * VMwareCbt container mapping input.
 * 
 */
public final class VMwareCbtContainerMappingInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final VMwareCbtContainerMappingInputArgs Empty = new VMwareCbtContainerMappingInputArgs();

    /**
     * The class type.
     * Expected value is 'VMwareCbt'.
     * 
     */
    @Import(name="instanceType")
      private final @Nullable Output<String> instanceType;

    public Output<String> instanceType() {
        return this.instanceType == null ? Codegen.empty() : this.instanceType;
    }

    /**
     * The target key vault ARM Id.
     * 
     */
    @Import(name="keyVaultId", required=true)
      private final Output<String> keyVaultId;

    public Output<String> keyVaultId() {
        return this.keyVaultId;
    }

    /**
     * The target key vault URL.
     * 
     */
    @Import(name="keyVaultUri", required=true)
      private final Output<String> keyVaultUri;

    public Output<String> keyVaultUri() {
        return this.keyVaultUri;
    }

    /**
     * The secret name of the service bus connection string.
     * 
     */
    @Import(name="serviceBusConnectionStringSecretName", required=true)
      private final Output<String> serviceBusConnectionStringSecretName;

    public Output<String> serviceBusConnectionStringSecretName() {
        return this.serviceBusConnectionStringSecretName;
    }

    /**
     * The storage account ARM Id.
     * 
     */
    @Import(name="storageAccountId", required=true)
      private final Output<String> storageAccountId;

    public Output<String> storageAccountId() {
        return this.storageAccountId;
    }

    /**
     * The secret name of the storage account.
     * 
     */
    @Import(name="storageAccountSasSecretName", required=true)
      private final Output<String> storageAccountSasSecretName;

    public Output<String> storageAccountSasSecretName() {
        return this.storageAccountSasSecretName;
    }

    /**
     * The target location.
     * 
     */
    @Import(name="targetLocation", required=true)
      private final Output<String> targetLocation;

    public Output<String> targetLocation() {
        return this.targetLocation;
    }

    public VMwareCbtContainerMappingInputArgs(
        @Nullable Output<String> instanceType,
        Output<String> keyVaultId,
        Output<String> keyVaultUri,
        Output<String> serviceBusConnectionStringSecretName,
        Output<String> storageAccountId,
        Output<String> storageAccountSasSecretName,
        Output<String> targetLocation) {
        this.instanceType = Codegen.stringProp("instanceType").output().arg(instanceType).getNullable();
        this.keyVaultId = Objects.requireNonNull(keyVaultId, "expected parameter 'keyVaultId' to be non-null");
        this.keyVaultUri = Objects.requireNonNull(keyVaultUri, "expected parameter 'keyVaultUri' to be non-null");
        this.serviceBusConnectionStringSecretName = Objects.requireNonNull(serviceBusConnectionStringSecretName, "expected parameter 'serviceBusConnectionStringSecretName' to be non-null");
        this.storageAccountId = Objects.requireNonNull(storageAccountId, "expected parameter 'storageAccountId' to be non-null");
        this.storageAccountSasSecretName = Objects.requireNonNull(storageAccountSasSecretName, "expected parameter 'storageAccountSasSecretName' to be non-null");
        this.targetLocation = Objects.requireNonNull(targetLocation, "expected parameter 'targetLocation' to be non-null");
    }

    private VMwareCbtContainerMappingInputArgs() {
        this.instanceType = Codegen.empty();
        this.keyVaultId = Codegen.empty();
        this.keyVaultUri = Codegen.empty();
        this.serviceBusConnectionStringSecretName = Codegen.empty();
        this.storageAccountId = Codegen.empty();
        this.storageAccountSasSecretName = Codegen.empty();
        this.targetLocation = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VMwareCbtContainerMappingInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> instanceType;
        private Output<String> keyVaultId;
        private Output<String> keyVaultUri;
        private Output<String> serviceBusConnectionStringSecretName;
        private Output<String> storageAccountId;
        private Output<String> storageAccountSasSecretName;
        private Output<String> targetLocation;

        public Builder() {
    	      // Empty
        }

        public Builder(VMwareCbtContainerMappingInputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceType = defaults.instanceType;
    	      this.keyVaultId = defaults.keyVaultId;
    	      this.keyVaultUri = defaults.keyVaultUri;
    	      this.serviceBusConnectionStringSecretName = defaults.serviceBusConnectionStringSecretName;
    	      this.storageAccountId = defaults.storageAccountId;
    	      this.storageAccountSasSecretName = defaults.storageAccountSasSecretName;
    	      this.targetLocation = defaults.targetLocation;
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            this.instanceType = instanceType;
            return this;
        }
        public Builder instanceType(@Nullable String instanceType) {
            this.instanceType = Codegen.ofNullable(instanceType);
            return this;
        }
        public Builder keyVaultId(Output<String> keyVaultId) {
            this.keyVaultId = Objects.requireNonNull(keyVaultId);
            return this;
        }
        public Builder keyVaultId(String keyVaultId) {
            this.keyVaultId = Output.of(Objects.requireNonNull(keyVaultId));
            return this;
        }
        public Builder keyVaultUri(Output<String> keyVaultUri) {
            this.keyVaultUri = Objects.requireNonNull(keyVaultUri);
            return this;
        }
        public Builder keyVaultUri(String keyVaultUri) {
            this.keyVaultUri = Output.of(Objects.requireNonNull(keyVaultUri));
            return this;
        }
        public Builder serviceBusConnectionStringSecretName(Output<String> serviceBusConnectionStringSecretName) {
            this.serviceBusConnectionStringSecretName = Objects.requireNonNull(serviceBusConnectionStringSecretName);
            return this;
        }
        public Builder serviceBusConnectionStringSecretName(String serviceBusConnectionStringSecretName) {
            this.serviceBusConnectionStringSecretName = Output.of(Objects.requireNonNull(serviceBusConnectionStringSecretName));
            return this;
        }
        public Builder storageAccountId(Output<String> storageAccountId) {
            this.storageAccountId = Objects.requireNonNull(storageAccountId);
            return this;
        }
        public Builder storageAccountId(String storageAccountId) {
            this.storageAccountId = Output.of(Objects.requireNonNull(storageAccountId));
            return this;
        }
        public Builder storageAccountSasSecretName(Output<String> storageAccountSasSecretName) {
            this.storageAccountSasSecretName = Objects.requireNonNull(storageAccountSasSecretName);
            return this;
        }
        public Builder storageAccountSasSecretName(String storageAccountSasSecretName) {
            this.storageAccountSasSecretName = Output.of(Objects.requireNonNull(storageAccountSasSecretName));
            return this;
        }
        public Builder targetLocation(Output<String> targetLocation) {
            this.targetLocation = Objects.requireNonNull(targetLocation);
            return this;
        }
        public Builder targetLocation(String targetLocation) {
            this.targetLocation = Output.of(Objects.requireNonNull(targetLocation));
            return this;
        }        public VMwareCbtContainerMappingInputArgs build() {
            return new VMwareCbtContainerMappingInputArgs(instanceType, keyVaultId, keyVaultUri, serviceBusConnectionStringSecretName, storageAccountId, storageAccountSasSecretName, targetLocation);
        }
    }
}
