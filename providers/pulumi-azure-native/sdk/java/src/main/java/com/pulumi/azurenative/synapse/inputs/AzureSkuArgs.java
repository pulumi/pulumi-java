// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.inputs;

import com.pulumi.azurenative.synapse.enums.AzureSkuName;
import com.pulumi.azurenative.synapse.enums.AzureSkuTier;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Azure SKU definition.
 * 
 */
public final class AzureSkuArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureSkuArgs Empty = new AzureSkuArgs();

    /**
     * The number of instances of the cluster.
     * 
     */
    @Import(name="capacity")
    private @Nullable Output<Integer> capacity;

    /**
     * @return The number of instances of the cluster.
     * 
     */
    public Optional<Output<Integer>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * SKU name.
     * 
     */
    @Import(name="name", required=true)
    private Output<Either<String,AzureSkuName>> name;

    /**
     * @return SKU name.
     * 
     */
    public Output<Either<String,AzureSkuName>> name() {
        return this.name;
    }

    /**
     * SKU tier.
     * 
     */
    @Import(name="tier", required=true)
    private Output<Either<String,AzureSkuTier>> tier;

    /**
     * @return SKU tier.
     * 
     */
    public Output<Either<String,AzureSkuTier>> tier() {
        return this.tier;
    }

    private AzureSkuArgs() {}

    private AzureSkuArgs(AzureSkuArgs $) {
        this.capacity = $.capacity;
        this.name = $.name;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureSkuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureSkuArgs $;

        public Builder() {
            $ = new AzureSkuArgs();
        }

        public Builder(AzureSkuArgs defaults) {
            $ = new AzureSkuArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacity The number of instances of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder capacity(@Nullable Output<Integer> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity The number of instances of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder capacity(Integer capacity) {
            return capacity(Output.of(capacity));
        }

        /**
         * @param name SKU name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<Either<String,AzureSkuName>> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name SKU name.
         * 
         * @return builder
         * 
         */
        public Builder name(Either<String,AzureSkuName> name) {
            return name(Output.of(name));
        }

        /**
         * @param name SKU name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Either.ofLeft(name));
        }

        /**
         * @param name SKU name.
         * 
         * @return builder
         * 
         */
        public Builder name(AzureSkuName name) {
            return name(Either.ofRight(name));
        }

        /**
         * @param tier SKU tier.
         * 
         * @return builder
         * 
         */
        public Builder tier(Output<Either<String,AzureSkuTier>> tier) {
            $.tier = tier;
            return this;
        }

        /**
         * @param tier SKU tier.
         * 
         * @return builder
         * 
         */
        public Builder tier(Either<String,AzureSkuTier> tier) {
            return tier(Output.of(tier));
        }

        /**
         * @param tier SKU tier.
         * 
         * @return builder
         * 
         */
        public Builder tier(String tier) {
            return tier(Either.ofLeft(tier));
        }

        /**
         * @param tier SKU tier.
         * 
         * @return builder
         * 
         */
        public Builder tier(AzureSkuTier tier) {
            return tier(Either.ofRight(tier));
        }

        public AzureSkuArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.tier = Objects.requireNonNull($.tier, "expected parameter 'tier' to be non-null");
            return $;
        }
    }

}
