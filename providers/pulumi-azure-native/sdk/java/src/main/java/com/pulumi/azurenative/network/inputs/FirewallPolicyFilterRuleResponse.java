// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.ApplicationRuleConditionResponse;
import com.pulumi.azurenative.network.inputs.FirewallPolicyFilterRuleActionResponse;
import com.pulumi.azurenative.network.inputs.NatRuleConditionResponse;
import com.pulumi.azurenative.network.inputs.NetworkRuleConditionResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Firewall Policy Filter Rule.
 * 
 */
public final class FirewallPolicyFilterRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final FirewallPolicyFilterRuleResponse Empty = new FirewallPolicyFilterRuleResponse();

    /**
     * The action type of a Filter rule.
     * 
     */
    @Import(name="action")
      private final @Nullable FirewallPolicyFilterRuleActionResponse action;

    public Optional<FirewallPolicyFilterRuleActionResponse> action() {
        return this.action == null ? Optional.empty() : Optional.ofNullable(this.action);
    }

    /**
     * The name of the rule.
     * 
     */
    @Import(name="name")
      private final @Nullable String name;

    public Optional<String> name() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    /**
     * Priority of the Firewall Policy Rule resource.
     * 
     */
    @Import(name="priority")
      private final @Nullable Integer priority;

    public Optional<Integer> priority() {
        return this.priority == null ? Optional.empty() : Optional.ofNullable(this.priority);
    }

    /**
     * Collection of rule conditions used by a rule.
     * 
     */
    @Import(name="ruleConditions")
      private final @Nullable List<Object> ruleConditions;

    public List<Object> ruleConditions() {
        return this.ruleConditions == null ? List.of() : this.ruleConditions;
    }

    /**
     * The type of the rule.
     * Expected value is 'FirewallPolicyFilterRule'.
     * 
     */
    @Import(name="ruleType", required=true)
      private final String ruleType;

    public String ruleType() {
        return this.ruleType;
    }

    public FirewallPolicyFilterRuleResponse(
        @Nullable FirewallPolicyFilterRuleActionResponse action,
        @Nullable String name,
        @Nullable Integer priority,
        @Nullable List<Object> ruleConditions,
        String ruleType) {
        this.action = action;
        this.name = name;
        this.priority = priority;
        this.ruleConditions = ruleConditions;
        this.ruleType = Objects.requireNonNull(ruleType, "expected parameter 'ruleType' to be non-null");
    }

    private FirewallPolicyFilterRuleResponse() {
        this.action = null;
        this.name = null;
        this.priority = null;
        this.ruleConditions = List.of();
        this.ruleType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallPolicyFilterRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable FirewallPolicyFilterRuleActionResponse action;
        private @Nullable String name;
        private @Nullable Integer priority;
        private @Nullable List<Object> ruleConditions;
        private String ruleType;

        public Builder() {
    	      // Empty
        }

        public Builder(FirewallPolicyFilterRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.ruleConditions = defaults.ruleConditions;
    	      this.ruleType = defaults.ruleType;
        }

        public Builder action(@Nullable FirewallPolicyFilterRuleActionResponse action) {
            this.action = action;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder priority(@Nullable Integer priority) {
            this.priority = priority;
            return this;
        }
        public Builder ruleConditions(@Nullable List<Object> ruleConditions) {
            this.ruleConditions = ruleConditions;
            return this;
        }
        public Builder ruleConditions(Object... ruleConditions) {
            return ruleConditions(List.of(ruleConditions));
        }
        public Builder ruleType(String ruleType) {
            this.ruleType = Objects.requireNonNull(ruleType);
            return this;
        }        public FirewallPolicyFilterRuleResponse build() {
            return new FirewallPolicyFilterRuleResponse(action, name, priority, ruleConditions, ruleType);
        }
    }
}
