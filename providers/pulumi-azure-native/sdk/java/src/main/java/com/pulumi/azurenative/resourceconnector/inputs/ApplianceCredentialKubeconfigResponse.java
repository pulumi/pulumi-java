// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resourceconnector.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Cluster User Credential appliance.
 * 
 */
public final class ApplianceCredentialKubeconfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApplianceCredentialKubeconfigResponse Empty = new ApplianceCredentialKubeconfigResponse();

    /**
     * Name which contains the role of the kubeconfig.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Contains the kubeconfig value.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    public String value() {
        return this.value;
    }

    private ApplianceCredentialKubeconfigResponse() {}

    private ApplianceCredentialKubeconfigResponse(ApplianceCredentialKubeconfigResponse $) {
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplianceCredentialKubeconfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplianceCredentialKubeconfigResponse $;

        public Builder() {
            $ = new ApplianceCredentialKubeconfigResponse();
        }

        public Builder(ApplianceCredentialKubeconfigResponse defaults) {
            $ = new ApplianceCredentialKubeconfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public ApplianceCredentialKubeconfigResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
