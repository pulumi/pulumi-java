// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Information about the azure function destination for an event subscription.
 * 
 */
public final class AzureFunctionEventSubscriptionDestinationResponse extends com.pulumi.resources.InvokeArgs {

    public static final AzureFunctionEventSubscriptionDestinationResponse Empty = new AzureFunctionEventSubscriptionDestinationResponse();

    /**
     * Type of the endpoint for the event subscription destination.
     * Expected value is &#39;AzureFunction&#39;.
     * 
     */
    @Import(name="endpointType", required=true)
    private String endpointType;

    /**
     * @return Type of the endpoint for the event subscription destination.
     * Expected value is &#39;AzureFunction&#39;.
     * 
     */
    public String endpointType() {
        return this.endpointType;
    }

    /**
     * Maximum number of events per batch.
     * 
     */
    @Import(name="maxEventsPerBatch")
    private @Nullable Integer maxEventsPerBatch;

    /**
     * @return Maximum number of events per batch.
     * 
     */
    public Optional<Integer> maxEventsPerBatch() {
        return Optional.ofNullable(this.maxEventsPerBatch);
    }

    /**
     * Preferred batch size in Kilobytes.
     * 
     */
    @Import(name="preferredBatchSizeInKilobytes")
    private @Nullable Integer preferredBatchSizeInKilobytes;

    /**
     * @return Preferred batch size in Kilobytes.
     * 
     */
    public Optional<Integer> preferredBatchSizeInKilobytes() {
        return Optional.ofNullable(this.preferredBatchSizeInKilobytes);
    }

    /**
     * The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.
     * 
     */
    @Import(name="resourceId")
    private @Nullable String resourceId;

    /**
     * @return The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    private AzureFunctionEventSubscriptionDestinationResponse() {}

    private AzureFunctionEventSubscriptionDestinationResponse(AzureFunctionEventSubscriptionDestinationResponse $) {
        this.endpointType = $.endpointType;
        this.maxEventsPerBatch = $.maxEventsPerBatch;
        this.preferredBatchSizeInKilobytes = $.preferredBatchSizeInKilobytes;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureFunctionEventSubscriptionDestinationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureFunctionEventSubscriptionDestinationResponse $;

        public Builder() {
            $ = new AzureFunctionEventSubscriptionDestinationResponse();
        }

        public Builder(AzureFunctionEventSubscriptionDestinationResponse defaults) {
            $ = new AzureFunctionEventSubscriptionDestinationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointType Type of the endpoint for the event subscription destination.
         * Expected value is &#39;AzureFunction&#39;.
         * 
         * @return builder
         * 
         */
        public Builder endpointType(String endpointType) {
            $.endpointType = endpointType;
            return this;
        }

        /**
         * @param maxEventsPerBatch Maximum number of events per batch.
         * 
         * @return builder
         * 
         */
        public Builder maxEventsPerBatch(@Nullable Integer maxEventsPerBatch) {
            $.maxEventsPerBatch = maxEventsPerBatch;
            return this;
        }

        /**
         * @param preferredBatchSizeInKilobytes Preferred batch size in Kilobytes.
         * 
         * @return builder
         * 
         */
        public Builder preferredBatchSizeInKilobytes(@Nullable Integer preferredBatchSizeInKilobytes) {
            $.preferredBatchSizeInKilobytes = preferredBatchSizeInKilobytes;
            return this;
        }

        /**
         * @param resourceId The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public AzureFunctionEventSubscriptionDestinationResponse build() {
            $.endpointType = Codegen.stringProp("endpointType").arg($.endpointType).require();
            $.maxEventsPerBatch = Codegen.integerProp("maxEventsPerBatch").arg($.maxEventsPerBatch).def(1).getNullable();
            $.preferredBatchSizeInKilobytes = Codegen.integerProp("preferredBatchSizeInKilobytes").arg($.preferredBatchSizeInKilobytes).def(64).getNullable();
            return $;
        }
    }

}
