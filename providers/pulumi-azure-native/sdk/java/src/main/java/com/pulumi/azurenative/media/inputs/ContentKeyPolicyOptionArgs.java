// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.azurenative.media.inputs.ContentKeyPolicyClearKeyConfigurationArgs;
import com.pulumi.azurenative.media.inputs.ContentKeyPolicyFairPlayConfigurationArgs;
import com.pulumi.azurenative.media.inputs.ContentKeyPolicyOpenRestrictionArgs;
import com.pulumi.azurenative.media.inputs.ContentKeyPolicyPlayReadyConfigurationArgs;
import com.pulumi.azurenative.media.inputs.ContentKeyPolicyTokenRestrictionArgs;
import com.pulumi.azurenative.media.inputs.ContentKeyPolicyUnknownConfigurationArgs;
import com.pulumi.azurenative.media.inputs.ContentKeyPolicyUnknownRestrictionArgs;
import com.pulumi.azurenative.media.inputs.ContentKeyPolicyWidevineConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a policy option.
 * 
 */
public final class ContentKeyPolicyOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContentKeyPolicyOptionArgs Empty = new ContentKeyPolicyOptionArgs();

    /**
     * The key delivery configuration.
     * 
     */
    @Import(name="configuration", required=true)
    private Output<Object> configuration;

    /**
     * @return The key delivery configuration.
     * 
     */
    public Output<Object> configuration() {
        return this.configuration;
    }

    /**
     * The Policy Option description.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Policy Option description.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The requirements that must be met to deliver keys with this configuration
     * 
     */
    @Import(name="restriction", required=true)
    private Output<Object> restriction;

    /**
     * @return The requirements that must be met to deliver keys with this configuration
     * 
     */
    public Output<Object> restriction() {
        return this.restriction;
    }

    private ContentKeyPolicyOptionArgs() {}

    private ContentKeyPolicyOptionArgs(ContentKeyPolicyOptionArgs $) {
        this.configuration = $.configuration;
        this.name = $.name;
        this.restriction = $.restriction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentKeyPolicyOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentKeyPolicyOptionArgs $;

        public Builder() {
            $ = new ContentKeyPolicyOptionArgs();
        }

        public Builder(ContentKeyPolicyOptionArgs defaults) {
            $ = new ContentKeyPolicyOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration The key delivery configuration.
         * 
         * @return builder
         * 
         */
        public Builder configuration(Output<Object> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration The key delivery configuration.
         * 
         * @return builder
         * 
         */
        public Builder configuration(Object configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param name The Policy Option description.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Policy Option description.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param restriction The requirements that must be met to deliver keys with this configuration
         * 
         * @return builder
         * 
         */
        public Builder restriction(Output<Object> restriction) {
            $.restriction = restriction;
            return this;
        }

        /**
         * @param restriction The requirements that must be met to deliver keys with this configuration
         * 
         * @return builder
         * 
         */
        public Builder restriction(Object restriction) {
            return restriction(Output.of(restriction));
        }

        public ContentKeyPolicyOptionArgs build() {
            $.configuration = Objects.requireNonNull($.configuration, "expected parameter 'configuration' to be non-null");
            $.restriction = Objects.requireNonNull($.restriction, "expected parameter 'restriction' to be non-null");
            return $;
        }
    }

}
