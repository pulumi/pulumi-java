// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice;

import com.pulumi.azurenative.containerservice.inputs.ContainerServiceLinuxProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ContainerServiceNetworkProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ExtendedLocationArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterAADProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterAPIServerAccessProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterAddonProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterAgentPoolProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterAutoUpgradeProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterHTTPProxyConfigArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterIdentityArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterPodIdentityProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterPropertiesAutoScalerProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterPropertiesIdentityProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterSKUArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterServicePrincipalProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.ManagedClusterWindowsProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.PrivateLinkResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedClusterArgs Empty = new ManagedClusterArgs();

    /**
     * Profile of Azure Active Directory configuration.
     * 
     */
    @Import(name="aadProfile")
    private @Nullable Output<ManagedClusterAADProfileArgs> aadProfile;

    public Optional<Output<ManagedClusterAADProfileArgs>> aadProfile() {
        return Optional.ofNullable(this.aadProfile);
    }

    /**
     * Profile of managed cluster add-on.
     * 
     */
    @Import(name="addonProfiles")
    private @Nullable Output<Map<String,ManagedClusterAddonProfileArgs>> addonProfiles;

    public Optional<Output<Map<String,ManagedClusterAddonProfileArgs>>> addonProfiles() {
        return Optional.ofNullable(this.addonProfiles);
    }

    /**
     * Properties of the agent pool.
     * 
     */
    @Import(name="agentPoolProfiles")
    private @Nullable Output<List<ManagedClusterAgentPoolProfileArgs>> agentPoolProfiles;

    public Optional<Output<List<ManagedClusterAgentPoolProfileArgs>>> agentPoolProfiles() {
        return Optional.ofNullable(this.agentPoolProfiles);
    }

    /**
     * Access profile for managed cluster API server.
     * 
     */
    @Import(name="apiServerAccessProfile")
    private @Nullable Output<ManagedClusterAPIServerAccessProfileArgs> apiServerAccessProfile;

    public Optional<Output<ManagedClusterAPIServerAccessProfileArgs>> apiServerAccessProfile() {
        return Optional.ofNullable(this.apiServerAccessProfile);
    }

    /**
     * Parameters to be applied to the cluster-autoscaler when enabled
     * 
     */
    @Import(name="autoScalerProfile")
    private @Nullable Output<ManagedClusterPropertiesAutoScalerProfileArgs> autoScalerProfile;

    public Optional<Output<ManagedClusterPropertiesAutoScalerProfileArgs>> autoScalerProfile() {
        return Optional.ofNullable(this.autoScalerProfile);
    }

    /**
     * Profile of auto upgrade configuration.
     * 
     */
    @Import(name="autoUpgradeProfile")
    private @Nullable Output<ManagedClusterAutoUpgradeProfileArgs> autoUpgradeProfile;

    public Optional<Output<ManagedClusterAutoUpgradeProfileArgs>> autoUpgradeProfile() {
        return Optional.ofNullable(this.autoUpgradeProfile);
    }

    /**
     * If set to true, getting static credential will be disabled for this cluster. Expected to only be used for AAD clusters.
     * 
     */
    @Import(name="disableLocalAccounts")
    private @Nullable Output<Boolean> disableLocalAccounts;

    public Optional<Output<Boolean>> disableLocalAccounts() {
        return Optional.ofNullable(this.disableLocalAccounts);
    }

    /**
     * ResourceId of the disk encryption set to use for enabling encryption at rest.
     * 
     */
    @Import(name="diskEncryptionSetID")
    private @Nullable Output<String> diskEncryptionSetID;

    public Optional<Output<String>> diskEncryptionSetID() {
        return Optional.ofNullable(this.diskEncryptionSetID);
    }

    /**
     * DNS prefix specified when creating the managed cluster.
     * 
     */
    @Import(name="dnsPrefix")
    private @Nullable Output<String> dnsPrefix;

    public Optional<Output<String>> dnsPrefix() {
        return Optional.ofNullable(this.dnsPrefix);
    }

    /**
     * (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
     * 
     */
    @Import(name="enablePodSecurityPolicy")
    private @Nullable Output<Boolean> enablePodSecurityPolicy;

    public Optional<Output<Boolean>> enablePodSecurityPolicy() {
        return Optional.ofNullable(this.enablePodSecurityPolicy);
    }

    /**
     * Whether to enable Kubernetes Role-Based Access Control.
     * 
     */
    @Import(name="enableRBAC")
    private @Nullable Output<Boolean> enableRBAC;

    public Optional<Output<Boolean>> enableRBAC() {
        return Optional.ofNullable(this.enableRBAC);
    }

    /**
     * The extended location of the Virtual Machine.
     * 
     */
    @Import(name="extendedLocation")
    private @Nullable Output<ExtendedLocationArgs> extendedLocation;

    public Optional<Output<ExtendedLocationArgs>> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }

    /**
     * FQDN subdomain specified when creating private cluster with custom private dns zone.
     * 
     */
    @Import(name="fqdnSubdomain")
    private @Nullable Output<String> fqdnSubdomain;

    public Optional<Output<String>> fqdnSubdomain() {
        return Optional.ofNullable(this.fqdnSubdomain);
    }

    /**
     * Configurations for provisioning the cluster with HTTP proxy servers.
     * 
     */
    @Import(name="httpProxyConfig")
    private @Nullable Output<ManagedClusterHTTPProxyConfigArgs> httpProxyConfig;

    public Optional<Output<ManagedClusterHTTPProxyConfigArgs>> httpProxyConfig() {
        return Optional.ofNullable(this.httpProxyConfig);
    }

    /**
     * The identity of the managed cluster, if configured.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<ManagedClusterIdentityArgs> identity;

    public Optional<Output<ManagedClusterIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Identities associated with the cluster.
     * 
     */
    @Import(name="identityProfile")
    private @Nullable Output<Map<String,ManagedClusterPropertiesIdentityProfileArgs>> identityProfile;

    public Optional<Output<Map<String,ManagedClusterPropertiesIdentityProfileArgs>>> identityProfile() {
        return Optional.ofNullable(this.identityProfile);
    }

    /**
     * Version of Kubernetes specified when creating the managed cluster.
     * 
     */
    @Import(name="kubernetesVersion")
    private @Nullable Output<String> kubernetesVersion;

    public Optional<Output<String>> kubernetesVersion() {
        return Optional.ofNullable(this.kubernetesVersion);
    }

    /**
     * Profile for Linux VMs in the container service cluster.
     * 
     */
    @Import(name="linuxProfile")
    private @Nullable Output<ContainerServiceLinuxProfileArgs> linuxProfile;

    public Optional<Output<ContainerServiceLinuxProfileArgs>> linuxProfile() {
        return Optional.ofNullable(this.linuxProfile);
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Profile of network configuration.
     * 
     */
    @Import(name="networkProfile")
    private @Nullable Output<ContainerServiceNetworkProfileArgs> networkProfile;

    public Optional<Output<ContainerServiceNetworkProfileArgs>> networkProfile() {
        return Optional.ofNullable(this.networkProfile);
    }

    /**
     * Name of the resource group containing agent pool nodes.
     * 
     */
    @Import(name="nodeResourceGroup")
    private @Nullable Output<String> nodeResourceGroup;

    public Optional<Output<String>> nodeResourceGroup() {
        return Optional.ofNullable(this.nodeResourceGroup);
    }

    /**
     * Profile of managed cluster pod identity.
     * 
     */
    @Import(name="podIdentityProfile")
    private @Nullable Output<ManagedClusterPodIdentityProfileArgs> podIdentityProfile;

    public Optional<Output<ManagedClusterPodIdentityProfileArgs>> podIdentityProfile() {
        return Optional.ofNullable(this.podIdentityProfile);
    }

    /**
     * Private link resources associated with the cluster.
     * 
     */
    @Import(name="privateLinkResources")
    private @Nullable Output<List<PrivateLinkResourceArgs>> privateLinkResources;

    public Optional<Output<List<PrivateLinkResourceArgs>>> privateLinkResources() {
        return Optional.ofNullable(this.privateLinkResources);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the managed cluster resource.
     * 
     */
    @Import(name="resourceName")
    private @Nullable Output<String> resourceName;

    public Optional<Output<String>> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }

    /**
     * Information about a service principal identity for the cluster to use for manipulating Azure APIs.
     * 
     */
    @Import(name="servicePrincipalProfile")
    private @Nullable Output<ManagedClusterServicePrincipalProfileArgs> servicePrincipalProfile;

    public Optional<Output<ManagedClusterServicePrincipalProfileArgs>> servicePrincipalProfile() {
        return Optional.ofNullable(this.servicePrincipalProfile);
    }

    /**
     * The managed cluster SKU.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<ManagedClusterSKUArgs> sku;

    public Optional<Output<ManagedClusterSKUArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Profile for Windows VMs in the container service cluster.
     * 
     */
    @Import(name="windowsProfile")
    private @Nullable Output<ManagedClusterWindowsProfileArgs> windowsProfile;

    public Optional<Output<ManagedClusterWindowsProfileArgs>> windowsProfile() {
        return Optional.ofNullable(this.windowsProfile);
    }

    private ManagedClusterArgs() {}

    private ManagedClusterArgs(ManagedClusterArgs $) {
        this.aadProfile = $.aadProfile;
        this.addonProfiles = $.addonProfiles;
        this.agentPoolProfiles = $.agentPoolProfiles;
        this.apiServerAccessProfile = $.apiServerAccessProfile;
        this.autoScalerProfile = $.autoScalerProfile;
        this.autoUpgradeProfile = $.autoUpgradeProfile;
        this.disableLocalAccounts = $.disableLocalAccounts;
        this.diskEncryptionSetID = $.diskEncryptionSetID;
        this.dnsPrefix = $.dnsPrefix;
        this.enablePodSecurityPolicy = $.enablePodSecurityPolicy;
        this.enableRBAC = $.enableRBAC;
        this.extendedLocation = $.extendedLocation;
        this.fqdnSubdomain = $.fqdnSubdomain;
        this.httpProxyConfig = $.httpProxyConfig;
        this.identity = $.identity;
        this.identityProfile = $.identityProfile;
        this.kubernetesVersion = $.kubernetesVersion;
        this.linuxProfile = $.linuxProfile;
        this.location = $.location;
        this.networkProfile = $.networkProfile;
        this.nodeResourceGroup = $.nodeResourceGroup;
        this.podIdentityProfile = $.podIdentityProfile;
        this.privateLinkResources = $.privateLinkResources;
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
        this.servicePrincipalProfile = $.servicePrincipalProfile;
        this.sku = $.sku;
        this.tags = $.tags;
        this.windowsProfile = $.windowsProfile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedClusterArgs $;

        public Builder() {
            $ = new ManagedClusterArgs();
        }

        public Builder(ManagedClusterArgs defaults) {
            $ = new ManagedClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder aadProfile(@Nullable Output<ManagedClusterAADProfileArgs> aadProfile) {
            $.aadProfile = aadProfile;
            return this;
        }

        public Builder aadProfile(ManagedClusterAADProfileArgs aadProfile) {
            return aadProfile(Output.of(aadProfile));
        }

        public Builder addonProfiles(@Nullable Output<Map<String,ManagedClusterAddonProfileArgs>> addonProfiles) {
            $.addonProfiles = addonProfiles;
            return this;
        }

        public Builder addonProfiles(Map<String,ManagedClusterAddonProfileArgs> addonProfiles) {
            return addonProfiles(Output.of(addonProfiles));
        }

        public Builder agentPoolProfiles(@Nullable Output<List<ManagedClusterAgentPoolProfileArgs>> agentPoolProfiles) {
            $.agentPoolProfiles = agentPoolProfiles;
            return this;
        }

        public Builder agentPoolProfiles(List<ManagedClusterAgentPoolProfileArgs> agentPoolProfiles) {
            return agentPoolProfiles(Output.of(agentPoolProfiles));
        }

        public Builder agentPoolProfiles(ManagedClusterAgentPoolProfileArgs... agentPoolProfiles) {
            return agentPoolProfiles(List.of(agentPoolProfiles));
        }

        public Builder apiServerAccessProfile(@Nullable Output<ManagedClusterAPIServerAccessProfileArgs> apiServerAccessProfile) {
            $.apiServerAccessProfile = apiServerAccessProfile;
            return this;
        }

        public Builder apiServerAccessProfile(ManagedClusterAPIServerAccessProfileArgs apiServerAccessProfile) {
            return apiServerAccessProfile(Output.of(apiServerAccessProfile));
        }

        public Builder autoScalerProfile(@Nullable Output<ManagedClusterPropertiesAutoScalerProfileArgs> autoScalerProfile) {
            $.autoScalerProfile = autoScalerProfile;
            return this;
        }

        public Builder autoScalerProfile(ManagedClusterPropertiesAutoScalerProfileArgs autoScalerProfile) {
            return autoScalerProfile(Output.of(autoScalerProfile));
        }

        public Builder autoUpgradeProfile(@Nullable Output<ManagedClusterAutoUpgradeProfileArgs> autoUpgradeProfile) {
            $.autoUpgradeProfile = autoUpgradeProfile;
            return this;
        }

        public Builder autoUpgradeProfile(ManagedClusterAutoUpgradeProfileArgs autoUpgradeProfile) {
            return autoUpgradeProfile(Output.of(autoUpgradeProfile));
        }

        public Builder disableLocalAccounts(@Nullable Output<Boolean> disableLocalAccounts) {
            $.disableLocalAccounts = disableLocalAccounts;
            return this;
        }

        public Builder disableLocalAccounts(Boolean disableLocalAccounts) {
            return disableLocalAccounts(Output.of(disableLocalAccounts));
        }

        public Builder diskEncryptionSetID(@Nullable Output<String> diskEncryptionSetID) {
            $.diskEncryptionSetID = diskEncryptionSetID;
            return this;
        }

        public Builder diskEncryptionSetID(String diskEncryptionSetID) {
            return diskEncryptionSetID(Output.of(diskEncryptionSetID));
        }

        public Builder dnsPrefix(@Nullable Output<String> dnsPrefix) {
            $.dnsPrefix = dnsPrefix;
            return this;
        }

        public Builder dnsPrefix(String dnsPrefix) {
            return dnsPrefix(Output.of(dnsPrefix));
        }

        public Builder enablePodSecurityPolicy(@Nullable Output<Boolean> enablePodSecurityPolicy) {
            $.enablePodSecurityPolicy = enablePodSecurityPolicy;
            return this;
        }

        public Builder enablePodSecurityPolicy(Boolean enablePodSecurityPolicy) {
            return enablePodSecurityPolicy(Output.of(enablePodSecurityPolicy));
        }

        public Builder enableRBAC(@Nullable Output<Boolean> enableRBAC) {
            $.enableRBAC = enableRBAC;
            return this;
        }

        public Builder enableRBAC(Boolean enableRBAC) {
            return enableRBAC(Output.of(enableRBAC));
        }

        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            $.extendedLocation = extendedLocation;
            return this;
        }

        public Builder extendedLocation(ExtendedLocationArgs extendedLocation) {
            return extendedLocation(Output.of(extendedLocation));
        }

        public Builder fqdnSubdomain(@Nullable Output<String> fqdnSubdomain) {
            $.fqdnSubdomain = fqdnSubdomain;
            return this;
        }

        public Builder fqdnSubdomain(String fqdnSubdomain) {
            return fqdnSubdomain(Output.of(fqdnSubdomain));
        }

        public Builder httpProxyConfig(@Nullable Output<ManagedClusterHTTPProxyConfigArgs> httpProxyConfig) {
            $.httpProxyConfig = httpProxyConfig;
            return this;
        }

        public Builder httpProxyConfig(ManagedClusterHTTPProxyConfigArgs httpProxyConfig) {
            return httpProxyConfig(Output.of(httpProxyConfig));
        }

        public Builder identity(@Nullable Output<ManagedClusterIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(ManagedClusterIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        public Builder identityProfile(@Nullable Output<Map<String,ManagedClusterPropertiesIdentityProfileArgs>> identityProfile) {
            $.identityProfile = identityProfile;
            return this;
        }

        public Builder identityProfile(Map<String,ManagedClusterPropertiesIdentityProfileArgs> identityProfile) {
            return identityProfile(Output.of(identityProfile));
        }

        public Builder kubernetesVersion(@Nullable Output<String> kubernetesVersion) {
            $.kubernetesVersion = kubernetesVersion;
            return this;
        }

        public Builder kubernetesVersion(String kubernetesVersion) {
            return kubernetesVersion(Output.of(kubernetesVersion));
        }

        public Builder linuxProfile(@Nullable Output<ContainerServiceLinuxProfileArgs> linuxProfile) {
            $.linuxProfile = linuxProfile;
            return this;
        }

        public Builder linuxProfile(ContainerServiceLinuxProfileArgs linuxProfile) {
            return linuxProfile(Output.of(linuxProfile));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder networkProfile(@Nullable Output<ContainerServiceNetworkProfileArgs> networkProfile) {
            $.networkProfile = networkProfile;
            return this;
        }

        public Builder networkProfile(ContainerServiceNetworkProfileArgs networkProfile) {
            return networkProfile(Output.of(networkProfile));
        }

        public Builder nodeResourceGroup(@Nullable Output<String> nodeResourceGroup) {
            $.nodeResourceGroup = nodeResourceGroup;
            return this;
        }

        public Builder nodeResourceGroup(String nodeResourceGroup) {
            return nodeResourceGroup(Output.of(nodeResourceGroup));
        }

        public Builder podIdentityProfile(@Nullable Output<ManagedClusterPodIdentityProfileArgs> podIdentityProfile) {
            $.podIdentityProfile = podIdentityProfile;
            return this;
        }

        public Builder podIdentityProfile(ManagedClusterPodIdentityProfileArgs podIdentityProfile) {
            return podIdentityProfile(Output.of(podIdentityProfile));
        }

        public Builder privateLinkResources(@Nullable Output<List<PrivateLinkResourceArgs>> privateLinkResources) {
            $.privateLinkResources = privateLinkResources;
            return this;
        }

        public Builder privateLinkResources(List<PrivateLinkResourceArgs> privateLinkResources) {
            return privateLinkResources(Output.of(privateLinkResources));
        }

        public Builder privateLinkResources(PrivateLinkResourceArgs... privateLinkResources) {
            return privateLinkResources(List.of(privateLinkResources));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder resourceName(@Nullable Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        public Builder servicePrincipalProfile(@Nullable Output<ManagedClusterServicePrincipalProfileArgs> servicePrincipalProfile) {
            $.servicePrincipalProfile = servicePrincipalProfile;
            return this;
        }

        public Builder servicePrincipalProfile(ManagedClusterServicePrincipalProfileArgs servicePrincipalProfile) {
            return servicePrincipalProfile(Output.of(servicePrincipalProfile));
        }

        public Builder sku(@Nullable Output<ManagedClusterSKUArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(ManagedClusterSKUArgs sku) {
            return sku(Output.of(sku));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder windowsProfile(@Nullable Output<ManagedClusterWindowsProfileArgs> windowsProfile) {
            $.windowsProfile = windowsProfile;
            return this;
        }

        public Builder windowsProfile(ManagedClusterWindowsProfileArgs windowsProfile) {
            return windowsProfile(Output.of(windowsProfile));
        }

        public ManagedClusterArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
