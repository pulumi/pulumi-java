// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Avro write settings.
 * 
 */
public final class AvroWriteSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final AvroWriteSettingsResponse Empty = new AvroWriteSettingsResponse();

    /**
     * Specifies the file name pattern &lt;fileNamePrefix&gt;_&lt;fileIndex&gt;.&lt;fileExtension&gt; when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="fileNamePrefix")
    private @Nullable Object fileNamePrefix;

    /**
     * @return Specifies the file name pattern &lt;fileNamePrefix&gt;_&lt;fileIndex&gt;.&lt;fileExtension&gt; when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> fileNamePrefix() {
        return Optional.ofNullable(this.fileNamePrefix);
    }

    /**
     * Limit the written file&#39;s row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
     * 
     */
    @Import(name="maxRowsPerFile")
    private @Nullable Object maxRowsPerFile;

    /**
     * @return Limit the written file&#39;s row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
     * 
     */
    public Optional<Object> maxRowsPerFile() {
        return Optional.ofNullable(this.maxRowsPerFile);
    }

    /**
     * Top level record name in write result, which is required in AVRO spec.
     * 
     */
    @Import(name="recordName")
    private @Nullable String recordName;

    /**
     * @return Top level record name in write result, which is required in AVRO spec.
     * 
     */
    public Optional<String> recordName() {
        return Optional.ofNullable(this.recordName);
    }

    /**
     * Record namespace in the write result.
     * 
     */
    @Import(name="recordNamespace")
    private @Nullable String recordNamespace;

    /**
     * @return Record namespace in the write result.
     * 
     */
    public Optional<String> recordNamespace() {
        return Optional.ofNullable(this.recordNamespace);
    }

    /**
     * The write setting type.
     * Expected value is &#39;AvroWriteSettings&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The write setting type.
     * Expected value is &#39;AvroWriteSettings&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    private AvroWriteSettingsResponse() {}

    private AvroWriteSettingsResponse(AvroWriteSettingsResponse $) {
        this.fileNamePrefix = $.fileNamePrefix;
        this.maxRowsPerFile = $.maxRowsPerFile;
        this.recordName = $.recordName;
        this.recordNamespace = $.recordNamespace;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AvroWriteSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AvroWriteSettingsResponse $;

        public Builder() {
            $ = new AvroWriteSettingsResponse();
        }

        public Builder(AvroWriteSettingsResponse defaults) {
            $ = new AvroWriteSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param fileNamePrefix Specifies the file name pattern &lt;fileNamePrefix&gt;_&lt;fileIndex&gt;.&lt;fileExtension&gt; when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder fileNamePrefix(@Nullable Object fileNamePrefix) {
            $.fileNamePrefix = fileNamePrefix;
            return this;
        }

        /**
         * @param maxRowsPerFile Limit the written file&#39;s row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
         * 
         * @return builder
         * 
         */
        public Builder maxRowsPerFile(@Nullable Object maxRowsPerFile) {
            $.maxRowsPerFile = maxRowsPerFile;
            return this;
        }

        /**
         * @param recordName Top level record name in write result, which is required in AVRO spec.
         * 
         * @return builder
         * 
         */
        public Builder recordName(@Nullable String recordName) {
            $.recordName = recordName;
            return this;
        }

        /**
         * @param recordNamespace Record namespace in the write result.
         * 
         * @return builder
         * 
         */
        public Builder recordNamespace(@Nullable String recordNamespace) {
            $.recordNamespace = recordNamespace;
            return this;
        }

        /**
         * @param type The write setting type.
         * Expected value is &#39;AvroWriteSettings&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public AvroWriteSettingsResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
