// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Select video tracks from the input by specifying an attribute and an attribute filter.
 * 
 */
public final class SelectVideoTrackByAttributeResponse extends com.pulumi.resources.InvokeArgs {

    public static final SelectVideoTrackByAttributeResponse Empty = new SelectVideoTrackByAttributeResponse();

    /**
     * The TrackAttribute to filter the tracks by.
     * 
     */
    @Import(name="attribute", required=true)
    private String attribute;

    /**
     * @return The TrackAttribute to filter the tracks by.
     * 
     */
    public String attribute() {
        return this.attribute;
    }

    /**
     * The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.
     * 
     */
    @Import(name="filter", required=true)
    private String filter;

    /**
     * @return The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.
     * 
     */
    public String filter() {
        return this.filter;
    }

    /**
     * The value to filter the tracks by.  Only used when AttributeFilter.ValueEquals is specified for the Filter property. For TrackAttribute.Bitrate, this should be an integer value in bits per second (e.g: &#39;1500000&#39;).  The TrackAttribute.Language is not supported for video tracks.
     * 
     */
    @Import(name="filterValue")
    private @Nullable String filterValue;

    /**
     * @return The value to filter the tracks by.  Only used when AttributeFilter.ValueEquals is specified for the Filter property. For TrackAttribute.Bitrate, this should be an integer value in bits per second (e.g: &#39;1500000&#39;).  The TrackAttribute.Language is not supported for video tracks.
     * 
     */
    public Optional<String> filterValue() {
        return Optional.ofNullable(this.filterValue);
    }

    /**
     * The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.SelectVideoTrackByAttribute&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private String odataType;

    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.SelectVideoTrackByAttribute&#39;.
     * 
     */
    public String odataType() {
        return this.odataType;
    }

    private SelectVideoTrackByAttributeResponse() {}

    private SelectVideoTrackByAttributeResponse(SelectVideoTrackByAttributeResponse $) {
        this.attribute = $.attribute;
        this.filter = $.filter;
        this.filterValue = $.filterValue;
        this.odataType = $.odataType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SelectVideoTrackByAttributeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SelectVideoTrackByAttributeResponse $;

        public Builder() {
            $ = new SelectVideoTrackByAttributeResponse();
        }

        public Builder(SelectVideoTrackByAttributeResponse defaults) {
            $ = new SelectVideoTrackByAttributeResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param attribute The TrackAttribute to filter the tracks by.
         * 
         * @return builder
         * 
         */
        public Builder attribute(String attribute) {
            $.attribute = attribute;
            return this;
        }

        /**
         * @param filter The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filterValue The value to filter the tracks by.  Only used when AttributeFilter.ValueEquals is specified for the Filter property. For TrackAttribute.Bitrate, this should be an integer value in bits per second (e.g: &#39;1500000&#39;).  The TrackAttribute.Language is not supported for video tracks.
         * 
         * @return builder
         * 
         */
        public Builder filterValue(@Nullable String filterValue) {
            $.filterValue = filterValue;
            return this;
        }

        /**
         * @param odataType The discriminator for derived types.
         * Expected value is &#39;#Microsoft.Media.SelectVideoTrackByAttribute&#39;.
         * 
         * @return builder
         * 
         */
        public Builder odataType(String odataType) {
            $.odataType = odataType;
            return this;
        }

        public SelectVideoTrackByAttributeResponse build() {
            $.attribute = Objects.requireNonNull($.attribute, "expected parameter 'attribute' to be non-null");
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            $.odataType = Codegen.stringProp("odataType").arg($.odataType).require();
            return $;
        }
    }

}
