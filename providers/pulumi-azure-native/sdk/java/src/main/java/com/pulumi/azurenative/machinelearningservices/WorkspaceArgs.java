// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices;

import com.pulumi.azurenative.machinelearningservices.inputs.EncryptionPropertyArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.IdentityArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.ServiceManagedResourcesSettingsArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.SharedPrivateLinkResourceArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.SkuArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceArgs Empty = new WorkspaceArgs();

    /**
     * The flag to indicate whether to allow public access when behind VNet.
     * 
     */
    @Import(name="allowPublicAccessWhenBehindVnet")
    private @Nullable Output<Boolean> allowPublicAccessWhenBehindVnet;

    public Optional<Output<Boolean>> allowPublicAccessWhenBehindVnet() {
        return Optional.ofNullable(this.allowPublicAccessWhenBehindVnet);
    }

    /**
     * ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    @Import(name="applicationInsights")
    private @Nullable Output<String> applicationInsights;

    public Optional<Output<String>> applicationInsights() {
        return Optional.ofNullable(this.applicationInsights);
    }

    /**
     * ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    @Import(name="containerRegistry")
    private @Nullable Output<String> containerRegistry;

    public Optional<Output<String>> containerRegistry() {
        return Optional.ofNullable(this.containerRegistry);
    }

    /**
     * The description of this workspace.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Url for the discovery service to identify regional endpoints for machine learning experimentation services
     * 
     */
    @Import(name="discoveryUrl")
    private @Nullable Output<String> discoveryUrl;

    public Optional<Output<String>> discoveryUrl() {
        return Optional.ofNullable(this.discoveryUrl);
    }

    /**
     * The encryption settings of Azure ML workspace.
     * 
     */
    @Import(name="encryption")
    private @Nullable Output<EncryptionPropertyArgs> encryption;

    public Optional<Output<EncryptionPropertyArgs>> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * The friendly name for this workspace. This name in mutable
     * 
     */
    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
     * 
     */
    @Import(name="hbiWorkspace")
    private @Nullable Output<Boolean> hbiWorkspace;

    public Optional<Output<Boolean>> hbiWorkspace() {
        return Optional.ofNullable(this.hbiWorkspace);
    }

    /**
     * The identity of the resource.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<IdentityArgs> identity;

    public Optional<Output<IdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The compute name for image build
     * 
     */
    @Import(name="imageBuildCompute")
    private @Nullable Output<String> imageBuildCompute;

    public Optional<Output<String>> imageBuildCompute() {
        return Optional.ofNullable(this.imageBuildCompute);
    }

    /**
     * ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    @Import(name="keyVault")
    private @Nullable Output<String> keyVault;

    public Optional<Output<String>> keyVault() {
        return Optional.ofNullable(this.keyVault);
    }

    /**
     * Specifies the location of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The user assigned identity resource id that represents the workspace identity.
     * 
     */
    @Import(name="primaryUserAssignedIdentity")
    private @Nullable Output<String> primaryUserAssignedIdentity;

    public Optional<Output<String>> primaryUserAssignedIdentity() {
        return Optional.ofNullable(this.primaryUserAssignedIdentity);
    }

    /**
     * Name of the resource group in which workspace is located.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The service managed resource settings.
     * 
     */
    @Import(name="serviceManagedResourcesSettings")
    private @Nullable Output<ServiceManagedResourcesSettingsArgs> serviceManagedResourcesSettings;

    public Optional<Output<ServiceManagedResourcesSettingsArgs>> serviceManagedResourcesSettings() {
        return Optional.ofNullable(this.serviceManagedResourcesSettings);
    }

    /**
     * The list of shared private link resources in this workspace.
     * 
     */
    @Import(name="sharedPrivateLinkResources")
    private @Nullable Output<List<SharedPrivateLinkResourceArgs>> sharedPrivateLinkResources;

    public Optional<Output<List<SharedPrivateLinkResourceArgs>>> sharedPrivateLinkResources() {
        return Optional.ofNullable(this.sharedPrivateLinkResources);
    }

    /**
     * The sku of the workspace.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<SkuArgs> sku;

    public Optional<Output<SkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    @Import(name="storageAccount")
    private @Nullable Output<String> storageAccount;

    public Optional<Output<String>> storageAccount() {
        return Optional.ofNullable(this.storageAccount);
    }

    /**
     * Contains resource tags defined as key/value pairs.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Name of Azure Machine Learning workspace.
     * 
     */
    @Import(name="workspaceName")
    private @Nullable Output<String> workspaceName;

    public Optional<Output<String>> workspaceName() {
        return Optional.ofNullable(this.workspaceName);
    }

    private WorkspaceArgs() {}

    private WorkspaceArgs(WorkspaceArgs $) {
        this.allowPublicAccessWhenBehindVnet = $.allowPublicAccessWhenBehindVnet;
        this.applicationInsights = $.applicationInsights;
        this.containerRegistry = $.containerRegistry;
        this.description = $.description;
        this.discoveryUrl = $.discoveryUrl;
        this.encryption = $.encryption;
        this.friendlyName = $.friendlyName;
        this.hbiWorkspace = $.hbiWorkspace;
        this.identity = $.identity;
        this.imageBuildCompute = $.imageBuildCompute;
        this.keyVault = $.keyVault;
        this.location = $.location;
        this.primaryUserAssignedIdentity = $.primaryUserAssignedIdentity;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceManagedResourcesSettings = $.serviceManagedResourcesSettings;
        this.sharedPrivateLinkResources = $.sharedPrivateLinkResources;
        this.sku = $.sku;
        this.storageAccount = $.storageAccount;
        this.tags = $.tags;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceArgs $;

        public Builder() {
            $ = new WorkspaceArgs();
        }

        public Builder(WorkspaceArgs defaults) {
            $ = new WorkspaceArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowPublicAccessWhenBehindVnet(@Nullable Output<Boolean> allowPublicAccessWhenBehindVnet) {
            $.allowPublicAccessWhenBehindVnet = allowPublicAccessWhenBehindVnet;
            return this;
        }

        public Builder allowPublicAccessWhenBehindVnet(Boolean allowPublicAccessWhenBehindVnet) {
            return allowPublicAccessWhenBehindVnet(Output.of(allowPublicAccessWhenBehindVnet));
        }

        public Builder applicationInsights(@Nullable Output<String> applicationInsights) {
            $.applicationInsights = applicationInsights;
            return this;
        }

        public Builder applicationInsights(String applicationInsights) {
            return applicationInsights(Output.of(applicationInsights));
        }

        public Builder containerRegistry(@Nullable Output<String> containerRegistry) {
            $.containerRegistry = containerRegistry;
            return this;
        }

        public Builder containerRegistry(String containerRegistry) {
            return containerRegistry(Output.of(containerRegistry));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder discoveryUrl(@Nullable Output<String> discoveryUrl) {
            $.discoveryUrl = discoveryUrl;
            return this;
        }

        public Builder discoveryUrl(String discoveryUrl) {
            return discoveryUrl(Output.of(discoveryUrl));
        }

        public Builder encryption(@Nullable Output<EncryptionPropertyArgs> encryption) {
            $.encryption = encryption;
            return this;
        }

        public Builder encryption(EncryptionPropertyArgs encryption) {
            return encryption(Output.of(encryption));
        }

        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        public Builder hbiWorkspace(@Nullable Output<Boolean> hbiWorkspace) {
            $.hbiWorkspace = hbiWorkspace;
            return this;
        }

        public Builder hbiWorkspace(Boolean hbiWorkspace) {
            return hbiWorkspace(Output.of(hbiWorkspace));
        }

        public Builder identity(@Nullable Output<IdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(IdentityArgs identity) {
            return identity(Output.of(identity));
        }

        public Builder imageBuildCompute(@Nullable Output<String> imageBuildCompute) {
            $.imageBuildCompute = imageBuildCompute;
            return this;
        }

        public Builder imageBuildCompute(String imageBuildCompute) {
            return imageBuildCompute(Output.of(imageBuildCompute));
        }

        public Builder keyVault(@Nullable Output<String> keyVault) {
            $.keyVault = keyVault;
            return this;
        }

        public Builder keyVault(String keyVault) {
            return keyVault(Output.of(keyVault));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder primaryUserAssignedIdentity(@Nullable Output<String> primaryUserAssignedIdentity) {
            $.primaryUserAssignedIdentity = primaryUserAssignedIdentity;
            return this;
        }

        public Builder primaryUserAssignedIdentity(String primaryUserAssignedIdentity) {
            return primaryUserAssignedIdentity(Output.of(primaryUserAssignedIdentity));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder serviceManagedResourcesSettings(@Nullable Output<ServiceManagedResourcesSettingsArgs> serviceManagedResourcesSettings) {
            $.serviceManagedResourcesSettings = serviceManagedResourcesSettings;
            return this;
        }

        public Builder serviceManagedResourcesSettings(ServiceManagedResourcesSettingsArgs serviceManagedResourcesSettings) {
            return serviceManagedResourcesSettings(Output.of(serviceManagedResourcesSettings));
        }

        public Builder sharedPrivateLinkResources(@Nullable Output<List<SharedPrivateLinkResourceArgs>> sharedPrivateLinkResources) {
            $.sharedPrivateLinkResources = sharedPrivateLinkResources;
            return this;
        }

        public Builder sharedPrivateLinkResources(List<SharedPrivateLinkResourceArgs> sharedPrivateLinkResources) {
            return sharedPrivateLinkResources(Output.of(sharedPrivateLinkResources));
        }

        public Builder sharedPrivateLinkResources(SharedPrivateLinkResourceArgs... sharedPrivateLinkResources) {
            return sharedPrivateLinkResources(List.of(sharedPrivateLinkResources));
        }

        public Builder sku(@Nullable Output<SkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(SkuArgs sku) {
            return sku(Output.of(sku));
        }

        public Builder storageAccount(@Nullable Output<String> storageAccount) {
            $.storageAccount = storageAccount;
            return this;
        }

        public Builder storageAccount(String storageAccount) {
            return storageAccount(Output.of(storageAccount));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder workspaceName(@Nullable Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public WorkspaceArgs build() {
            $.allowPublicAccessWhenBehindVnet = Codegen.booleanProp("allowPublicAccessWhenBehindVnet").output().arg($.allowPublicAccessWhenBehindVnet).def(false).getNullable();
            $.hbiWorkspace = Codegen.booleanProp("hbiWorkspace").output().arg($.hbiWorkspace).def(false).getNullable();
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
