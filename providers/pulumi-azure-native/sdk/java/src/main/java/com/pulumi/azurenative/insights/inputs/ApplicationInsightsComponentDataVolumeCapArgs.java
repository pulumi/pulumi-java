// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * An Application Insights component daily data volume cap
 * 
 */
public final class ApplicationInsightsComponentDataVolumeCapArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationInsightsComponentDataVolumeCapArgs Empty = new ApplicationInsightsComponentDataVolumeCapArgs();

    /**
     * Daily data volume cap in GB.
     * 
     */
    @Import(name="cap")
    private @Nullable Output<Double> cap;

    /**
     * @return Daily data volume cap in GB.
     * 
     */
    public Optional<Output<Double>> cap() {
        return Optional.ofNullable(this.cap);
    }

    /**
     * Do not send a notification email when the daily data volume cap is met.
     * 
     */
    @Import(name="stopSendNotificationWhenHitCap")
    private @Nullable Output<Boolean> stopSendNotificationWhenHitCap;

    /**
     * @return Do not send a notification email when the daily data volume cap is met.
     * 
     */
    public Optional<Output<Boolean>> stopSendNotificationWhenHitCap() {
        return Optional.ofNullable(this.stopSendNotificationWhenHitCap);
    }

    /**
     * Reserved, not used for now.
     * 
     */
    @Import(name="stopSendNotificationWhenHitThreshold")
    private @Nullable Output<Boolean> stopSendNotificationWhenHitThreshold;

    /**
     * @return Reserved, not used for now.
     * 
     */
    public Optional<Output<Boolean>> stopSendNotificationWhenHitThreshold() {
        return Optional.ofNullable(this.stopSendNotificationWhenHitThreshold);
    }

    /**
     * Reserved, not used for now.
     * 
     */
    @Import(name="warningThreshold")
    private @Nullable Output<Integer> warningThreshold;

    /**
     * @return Reserved, not used for now.
     * 
     */
    public Optional<Output<Integer>> warningThreshold() {
        return Optional.ofNullable(this.warningThreshold);
    }

    private ApplicationInsightsComponentDataVolumeCapArgs() {}

    private ApplicationInsightsComponentDataVolumeCapArgs(ApplicationInsightsComponentDataVolumeCapArgs $) {
        this.cap = $.cap;
        this.stopSendNotificationWhenHitCap = $.stopSendNotificationWhenHitCap;
        this.stopSendNotificationWhenHitThreshold = $.stopSendNotificationWhenHitThreshold;
        this.warningThreshold = $.warningThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationInsightsComponentDataVolumeCapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationInsightsComponentDataVolumeCapArgs $;

        public Builder() {
            $ = new ApplicationInsightsComponentDataVolumeCapArgs();
        }

        public Builder(ApplicationInsightsComponentDataVolumeCapArgs defaults) {
            $ = new ApplicationInsightsComponentDataVolumeCapArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cap Daily data volume cap in GB.
         * 
         * @return builder
         * 
         */
        public Builder cap(@Nullable Output<Double> cap) {
            $.cap = cap;
            return this;
        }

        /**
         * @param cap Daily data volume cap in GB.
         * 
         * @return builder
         * 
         */
        public Builder cap(Double cap) {
            return cap(Output.of(cap));
        }

        /**
         * @param stopSendNotificationWhenHitCap Do not send a notification email when the daily data volume cap is met.
         * 
         * @return builder
         * 
         */
        public Builder stopSendNotificationWhenHitCap(@Nullable Output<Boolean> stopSendNotificationWhenHitCap) {
            $.stopSendNotificationWhenHitCap = stopSendNotificationWhenHitCap;
            return this;
        }

        /**
         * @param stopSendNotificationWhenHitCap Do not send a notification email when the daily data volume cap is met.
         * 
         * @return builder
         * 
         */
        public Builder stopSendNotificationWhenHitCap(Boolean stopSendNotificationWhenHitCap) {
            return stopSendNotificationWhenHitCap(Output.of(stopSendNotificationWhenHitCap));
        }

        /**
         * @param stopSendNotificationWhenHitThreshold Reserved, not used for now.
         * 
         * @return builder
         * 
         */
        public Builder stopSendNotificationWhenHitThreshold(@Nullable Output<Boolean> stopSendNotificationWhenHitThreshold) {
            $.stopSendNotificationWhenHitThreshold = stopSendNotificationWhenHitThreshold;
            return this;
        }

        /**
         * @param stopSendNotificationWhenHitThreshold Reserved, not used for now.
         * 
         * @return builder
         * 
         */
        public Builder stopSendNotificationWhenHitThreshold(Boolean stopSendNotificationWhenHitThreshold) {
            return stopSendNotificationWhenHitThreshold(Output.of(stopSendNotificationWhenHitThreshold));
        }

        /**
         * @param warningThreshold Reserved, not used for now.
         * 
         * @return builder
         * 
         */
        public Builder warningThreshold(@Nullable Output<Integer> warningThreshold) {
            $.warningThreshold = warningThreshold;
            return this;
        }

        /**
         * @param warningThreshold Reserved, not used for now.
         * 
         * @return builder
         * 
         */
        public Builder warningThreshold(Integer warningThreshold) {
            return warningThreshold(Output.of(warningThreshold));
        }

        public ApplicationInsightsComponentDataVolumeCapArgs build() {
            return $;
        }
    }

}
