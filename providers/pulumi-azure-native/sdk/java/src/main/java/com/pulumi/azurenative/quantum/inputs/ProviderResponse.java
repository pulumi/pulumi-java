// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.quantum.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Information about a Provider. A Provider is an entity that offers Targets to run Azure Quantum Jobs.
 * 
 */
public final class ProviderResponse extends com.pulumi.resources.InvokeArgs {

    public static final ProviderResponse Empty = new ProviderResponse();

    /**
     * The provider&#39;s marketplace application display name.
     * 
     */
    @Import(name="applicationName")
    private @Nullable String applicationName;

    /**
     * @return The provider&#39;s marketplace application display name.
     * 
     */
    public Optional<String> applicationName() {
        return Optional.ofNullable(this.applicationName);
    }

    /**
     * A Uri identifying the specific instance of this provider.
     * 
     */
    @Import(name="instanceUri")
    private @Nullable String instanceUri;

    /**
     * @return A Uri identifying the specific instance of this provider.
     * 
     */
    public Optional<String> instanceUri() {
        return Optional.ofNullable(this.instanceUri);
    }

    /**
     * Unique id of this provider.
     * 
     */
    @Import(name="providerId")
    private @Nullable String providerId;

    /**
     * @return Unique id of this provider.
     * 
     */
    public Optional<String> providerId() {
        return Optional.ofNullable(this.providerId);
    }

    /**
     * The sku associated with pricing information for this provider.
     * 
     */
    @Import(name="providerSku")
    private @Nullable String providerSku;

    /**
     * @return The sku associated with pricing information for this provider.
     * 
     */
    public Optional<String> providerSku() {
        return Optional.ofNullable(this.providerSku);
    }

    /**
     * Provisioning status field
     * 
     */
    @Import(name="provisioningState")
    private @Nullable String provisioningState;

    /**
     * @return Provisioning status field
     * 
     */
    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    /**
     * Id to track resource usage for the provider.
     * 
     */
    @Import(name="resourceUsageId")
    private @Nullable String resourceUsageId;

    /**
     * @return Id to track resource usage for the provider.
     * 
     */
    public Optional<String> resourceUsageId() {
        return Optional.ofNullable(this.resourceUsageId);
    }

    private ProviderResponse() {}

    private ProviderResponse(ProviderResponse $) {
        this.applicationName = $.applicationName;
        this.instanceUri = $.instanceUri;
        this.providerId = $.providerId;
        this.providerSku = $.providerSku;
        this.provisioningState = $.provisioningState;
        this.resourceUsageId = $.resourceUsageId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderResponse $;

        public Builder() {
            $ = new ProviderResponse();
        }

        public Builder(ProviderResponse defaults) {
            $ = new ProviderResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationName The provider&#39;s marketplace application display name.
         * 
         * @return builder
         * 
         */
        public Builder applicationName(@Nullable String applicationName) {
            $.applicationName = applicationName;
            return this;
        }

        /**
         * @param instanceUri A Uri identifying the specific instance of this provider.
         * 
         * @return builder
         * 
         */
        public Builder instanceUri(@Nullable String instanceUri) {
            $.instanceUri = instanceUri;
            return this;
        }

        /**
         * @param providerId Unique id of this provider.
         * 
         * @return builder
         * 
         */
        public Builder providerId(@Nullable String providerId) {
            $.providerId = providerId;
            return this;
        }

        /**
         * @param providerSku The sku associated with pricing information for this provider.
         * 
         * @return builder
         * 
         */
        public Builder providerSku(@Nullable String providerSku) {
            $.providerSku = providerSku;
            return this;
        }

        /**
         * @param provisioningState Provisioning status field
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(@Nullable String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param resourceUsageId Id to track resource usage for the provider.
         * 
         * @return builder
         * 
         */
        public Builder resourceUsageId(@Nullable String resourceUsageId) {
            $.resourceUsageId = resourceUsageId;
            return this;
        }

        public ProviderResponse build() {
            return $;
        }
    }

}
