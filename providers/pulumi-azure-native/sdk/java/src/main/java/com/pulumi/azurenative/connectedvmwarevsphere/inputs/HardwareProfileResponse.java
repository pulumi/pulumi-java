// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the resource properties.
 * 
 */
public final class HardwareProfileResponse extends com.pulumi.resources.InvokeArgs {

    public static final HardwareProfileResponse Empty = new HardwareProfileResponse();

    /**
     * Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.
     * 
     */
    @Import(name="cpuHotAddEnabled", required=true)
    private Boolean cpuHotAddEnabled;

    public Boolean cpuHotAddEnabled() {
        return this.cpuHotAddEnabled;
    }

    /**
     * Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.
     * 
     */
    @Import(name="cpuHotRemoveEnabled", required=true)
    private Boolean cpuHotRemoveEnabled;

    public Boolean cpuHotRemoveEnabled() {
        return this.cpuHotRemoveEnabled;
    }

    /**
     * Gets or sets a value indicating whether memory can be added while this virtual machine is running.
     * 
     */
    @Import(name="memoryHotAddEnabled", required=true)
    private Boolean memoryHotAddEnabled;

    public Boolean memoryHotAddEnabled() {
        return this.memoryHotAddEnabled;
    }

    /**
     * Gets or sets memory size in MBs for the vm.
     * 
     */
    @Import(name="memorySizeMB")
    private @Nullable Integer memorySizeMB;

    public Optional<Integer> memorySizeMB() {
        return Optional.ofNullable(this.memorySizeMB);
    }

    /**
     * Gets or sets the number of vCPUs for the vm.
     * 
     */
    @Import(name="numCPUs")
    private @Nullable Integer numCPUs;

    public Optional<Integer> numCPUs() {
        return Optional.ofNullable(this.numCPUs);
    }

    /**
     * Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.
     * 
     */
    @Import(name="numCoresPerSocket")
    private @Nullable Integer numCoresPerSocket;

    public Optional<Integer> numCoresPerSocket() {
        return Optional.ofNullable(this.numCoresPerSocket);
    }

    private HardwareProfileResponse() {}

    private HardwareProfileResponse(HardwareProfileResponse $) {
        this.cpuHotAddEnabled = $.cpuHotAddEnabled;
        this.cpuHotRemoveEnabled = $.cpuHotRemoveEnabled;
        this.memoryHotAddEnabled = $.memoryHotAddEnabled;
        this.memorySizeMB = $.memorySizeMB;
        this.numCPUs = $.numCPUs;
        this.numCoresPerSocket = $.numCoresPerSocket;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HardwareProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HardwareProfileResponse $;

        public Builder() {
            $ = new HardwareProfileResponse();
        }

        public Builder(HardwareProfileResponse defaults) {
            $ = new HardwareProfileResponse(Objects.requireNonNull(defaults));
        }

        public Builder cpuHotAddEnabled(Boolean cpuHotAddEnabled) {
            $.cpuHotAddEnabled = cpuHotAddEnabled;
            return this;
        }

        public Builder cpuHotRemoveEnabled(Boolean cpuHotRemoveEnabled) {
            $.cpuHotRemoveEnabled = cpuHotRemoveEnabled;
            return this;
        }

        public Builder memoryHotAddEnabled(Boolean memoryHotAddEnabled) {
            $.memoryHotAddEnabled = memoryHotAddEnabled;
            return this;
        }

        public Builder memorySizeMB(@Nullable Integer memorySizeMB) {
            $.memorySizeMB = memorySizeMB;
            return this;
        }

        public Builder numCPUs(@Nullable Integer numCPUs) {
            $.numCPUs = numCPUs;
            return this;
        }

        public Builder numCoresPerSocket(@Nullable Integer numCoresPerSocket) {
            $.numCoresPerSocket = numCoresPerSocket;
            return this;
        }

        public HardwareProfileResponse build() {
            $.cpuHotAddEnabled = Objects.requireNonNull($.cpuHotAddEnabled, "expected parameter 'cpuHotAddEnabled' to be non-null");
            $.cpuHotRemoveEnabled = Objects.requireNonNull($.cpuHotRemoveEnabled, "expected parameter 'cpuHotRemoveEnabled' to be non-null");
            $.memoryHotAddEnabled = Objects.requireNonNull($.memoryHotAddEnabled, "expected parameter 'memoryHotAddEnabled' to be non-null");
            return $;
        }
    }

}
