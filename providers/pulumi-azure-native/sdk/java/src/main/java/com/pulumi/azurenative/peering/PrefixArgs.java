// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.peering;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrefixArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrefixArgs Empty = new PrefixArgs();

    /**
     * The name of the peering service.
     * 
     */
    @Import(name="peeringServiceName", required=true)
    private Output<String> peeringServiceName;

    public Output<String> peeringServiceName() {
        return this.peeringServiceName;
    }

    /**
     * The peering service prefix key
     * 
     */
    @Import(name="peeringServicePrefixKey")
    private @Nullable Output<String> peeringServicePrefixKey;

    public Optional<Output<String>> peeringServicePrefixKey() {
        return Optional.ofNullable(this.peeringServicePrefixKey);
    }

    /**
     * The prefix from which your traffic originates.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * The name of the prefix.
     * 
     */
    @Import(name="prefixName")
    private @Nullable Output<String> prefixName;

    public Optional<Output<String>> prefixName() {
        return Optional.ofNullable(this.prefixName);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private PrefixArgs() {}

    private PrefixArgs(PrefixArgs $) {
        this.peeringServiceName = $.peeringServiceName;
        this.peeringServicePrefixKey = $.peeringServicePrefixKey;
        this.prefix = $.prefix;
        this.prefixName = $.prefixName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrefixArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrefixArgs $;

        public Builder() {
            $ = new PrefixArgs();
        }

        public Builder(PrefixArgs defaults) {
            $ = new PrefixArgs(Objects.requireNonNull(defaults));
        }

        public Builder peeringServiceName(Output<String> peeringServiceName) {
            $.peeringServiceName = peeringServiceName;
            return this;
        }

        public Builder peeringServiceName(String peeringServiceName) {
            return peeringServiceName(Output.of(peeringServiceName));
        }

        public Builder peeringServicePrefixKey(@Nullable Output<String> peeringServicePrefixKey) {
            $.peeringServicePrefixKey = peeringServicePrefixKey;
            return this;
        }

        public Builder peeringServicePrefixKey(String peeringServicePrefixKey) {
            return peeringServicePrefixKey(Output.of(peeringServicePrefixKey));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public Builder prefixName(@Nullable Output<String> prefixName) {
            $.prefixName = prefixName;
            return this;
        }

        public Builder prefixName(String prefixName) {
            return prefixName(Output.of(prefixName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public PrefixArgs build() {
            $.peeringServiceName = Objects.requireNonNull($.peeringServiceName, "expected parameter 'peeringServiceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
