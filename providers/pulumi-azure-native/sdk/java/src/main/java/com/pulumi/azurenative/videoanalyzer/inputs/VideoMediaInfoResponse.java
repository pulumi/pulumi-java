// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Contains information about the video and audio content.
 * 
 */
public final class VideoMediaInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final VideoMediaInfoResponse Empty = new VideoMediaInfoResponse();

    /**
     * Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. &#34;PT30S&#34; equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments.
     * 
     */
    @Import(name="segmentLength", required=true)
    private String segmentLength;

    /**
     * @return Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. &#34;PT30S&#34; equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments.
     * 
     */
    public String segmentLength() {
        return this.segmentLength;
    }

    private VideoMediaInfoResponse() {}

    private VideoMediaInfoResponse(VideoMediaInfoResponse $) {
        this.segmentLength = $.segmentLength;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VideoMediaInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VideoMediaInfoResponse $;

        public Builder() {
            $ = new VideoMediaInfoResponse();
        }

        public Builder(VideoMediaInfoResponse defaults) {
            $ = new VideoMediaInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param segmentLength Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. &#34;PT30S&#34; equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments.
         * 
         * @return builder
         * 
         */
        public Builder segmentLength(String segmentLength) {
            $.segmentLength = segmentLength;
            return this;
        }

        public VideoMediaInfoResponse build() {
            $.segmentLength = Objects.requireNonNull($.segmentLength, "expected parameter 'segmentLength' to be non-null");
            return $;
        }
    }

}
