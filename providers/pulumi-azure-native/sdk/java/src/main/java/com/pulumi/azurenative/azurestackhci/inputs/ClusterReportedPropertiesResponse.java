// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurestackhci.inputs;

import com.pulumi.azurenative.azurestackhci.inputs.ClusterNodeResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Properties reported by cluster agent.
 * 
 */
public final class ClusterReportedPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ClusterReportedPropertiesResponse Empty = new ClusterReportedPropertiesResponse();

    /**
     * Unique id generated by the on-prem cluster.
     * 
     */
    @Import(name="clusterId", required=true)
    private String clusterId;

    public String clusterId() {
        return this.clusterId;
    }

    /**
     * Name of the on-prem cluster connected to this resource.
     * 
     */
    @Import(name="clusterName", required=true)
    private String clusterName;

    public String clusterName() {
        return this.clusterName;
    }

    /**
     * Version of the cluster software.
     * 
     */
    @Import(name="clusterVersion", required=true)
    private String clusterVersion;

    public String clusterVersion() {
        return this.clusterVersion;
    }

    /**
     * Last time the cluster reported the data.
     * 
     */
    @Import(name="lastUpdated", required=true)
    private String lastUpdated;

    public String lastUpdated() {
        return this.lastUpdated;
    }

    /**
     * List of nodes reported by the cluster.
     * 
     */
    @Import(name="nodes", required=true)
    private List<ClusterNodeResponse> nodes;

    public List<ClusterNodeResponse> nodes() {
        return this.nodes;
    }

    private ClusterReportedPropertiesResponse() {}

    private ClusterReportedPropertiesResponse(ClusterReportedPropertiesResponse $) {
        this.clusterId = $.clusterId;
        this.clusterName = $.clusterName;
        this.clusterVersion = $.clusterVersion;
        this.lastUpdated = $.lastUpdated;
        this.nodes = $.nodes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterReportedPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterReportedPropertiesResponse $;

        public Builder() {
            $ = new ClusterReportedPropertiesResponse();
        }

        public Builder(ClusterReportedPropertiesResponse defaults) {
            $ = new ClusterReportedPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder clusterId(String clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterName(String clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        public Builder clusterVersion(String clusterVersion) {
            $.clusterVersion = clusterVersion;
            return this;
        }

        public Builder lastUpdated(String lastUpdated) {
            $.lastUpdated = lastUpdated;
            return this;
        }

        public Builder nodes(List<ClusterNodeResponse> nodes) {
            $.nodes = nodes;
            return this;
        }

        public Builder nodes(ClusterNodeResponse... nodes) {
            return nodes(List.of(nodes));
        }

        public ClusterReportedPropertiesResponse build() {
            $.clusterId = Objects.requireNonNull($.clusterId, "expected parameter 'clusterId' to be non-null");
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.clusterVersion = Objects.requireNonNull($.clusterVersion, "expected parameter 'clusterVersion' to be non-null");
            $.lastUpdated = Objects.requireNonNull($.lastUpdated, "expected parameter 'lastUpdated' to be non-null");
            $.nodes = Objects.requireNonNull($.nodes, "expected parameter 'nodes' to be non-null");
            return $;
        }
    }

}
