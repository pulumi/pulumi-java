// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recommendationsservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceEndpointResourceResponseProperties {
    /**
     * @return The paired location that will be used by this ServiceEndpoint.
     * 
     */
    private final String pairedLocation;
    /**
     * @return ServiceEndpoint pre-allocated capacity controls the maximum requests-per-second allowed for that endpoint. Only applicable when Account configuration is Capacity.
     * 
     */
    private final @Nullable Integer preAllocatedCapacity;
    /**
     * @return The resource provisioning state.
     * 
     */
    private final String provisioningState;
    /**
     * @return The URL where the ServiceEndpoint API is accessible at.
     * 
     */
    private final String url;

    @CustomType.Constructor
    private ServiceEndpointResourceResponseProperties(
        @CustomType.Parameter("pairedLocation") String pairedLocation,
        @CustomType.Parameter("preAllocatedCapacity") @Nullable Integer preAllocatedCapacity,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("url") String url) {
        this.pairedLocation = pairedLocation;
        this.preAllocatedCapacity = preAllocatedCapacity;
        this.provisioningState = provisioningState;
        this.url = url;
    }

    /**
     * @return The paired location that will be used by this ServiceEndpoint.
     * 
     */
    public String pairedLocation() {
        return this.pairedLocation;
    }
    /**
     * @return ServiceEndpoint pre-allocated capacity controls the maximum requests-per-second allowed for that endpoint. Only applicable when Account configuration is Capacity.
     * 
     */
    public Optional<Integer> preAllocatedCapacity() {
        return Optional.ofNullable(this.preAllocatedCapacity);
    }
    /**
     * @return The resource provisioning state.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The URL where the ServiceEndpoint API is accessible at.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceEndpointResourceResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String pairedLocation;
        private @Nullable Integer preAllocatedCapacity;
        private String provisioningState;
        private String url;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceEndpointResourceResponseProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pairedLocation = defaults.pairedLocation;
    	      this.preAllocatedCapacity = defaults.preAllocatedCapacity;
    	      this.provisioningState = defaults.provisioningState;
    	      this.url = defaults.url;
        }

        public Builder pairedLocation(String pairedLocation) {
            this.pairedLocation = Objects.requireNonNull(pairedLocation);
            return this;
        }
        public Builder preAllocatedCapacity(@Nullable Integer preAllocatedCapacity) {
            this.preAllocatedCapacity = preAllocatedCapacity;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }        public ServiceEndpointResourceResponseProperties build() {
            return new ServiceEndpointResourceResponseProperties(pairedLocation, preAllocatedCapacity, provisioningState, url);
        }
    }
}
