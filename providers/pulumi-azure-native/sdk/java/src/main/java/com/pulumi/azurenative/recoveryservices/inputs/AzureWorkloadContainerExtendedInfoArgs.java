// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.DistributedNodesInfoArgs;
import com.pulumi.azurenative.recoveryservices.inputs.InquiryInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Extended information of the container.
 * 
 */
public final class AzureWorkloadContainerExtendedInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureWorkloadContainerExtendedInfoArgs Empty = new AzureWorkloadContainerExtendedInfoArgs();

    /**
     * Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
     * 
     */
    @Import(name="hostServerName")
    private @Nullable Output<String> hostServerName;

    /**
     * @return Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
     * 
     */
    public Optional<Output<String>> hostServerName() {
        return Optional.ofNullable(this.hostServerName);
    }

    /**
     * Inquiry Status for the container.
     * 
     */
    @Import(name="inquiryInfo")
    private @Nullable Output<InquiryInfoArgs> inquiryInfo;

    /**
     * @return Inquiry Status for the container.
     * 
     */
    public Optional<Output<InquiryInfoArgs>> inquiryInfo() {
        return Optional.ofNullable(this.inquiryInfo);
    }

    /**
     * List of the nodes in case of distributed container.
     * 
     */
    @Import(name="nodesList")
    private @Nullable Output<List<DistributedNodesInfoArgs>> nodesList;

    /**
     * @return List of the nodes in case of distributed container.
     * 
     */
    public Optional<Output<List<DistributedNodesInfoArgs>>> nodesList() {
        return Optional.ofNullable(this.nodesList);
    }

    private AzureWorkloadContainerExtendedInfoArgs() {}

    private AzureWorkloadContainerExtendedInfoArgs(AzureWorkloadContainerExtendedInfoArgs $) {
        this.hostServerName = $.hostServerName;
        this.inquiryInfo = $.inquiryInfo;
        this.nodesList = $.nodesList;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureWorkloadContainerExtendedInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureWorkloadContainerExtendedInfoArgs $;

        public Builder() {
            $ = new AzureWorkloadContainerExtendedInfoArgs();
        }

        public Builder(AzureWorkloadContainerExtendedInfoArgs defaults) {
            $ = new AzureWorkloadContainerExtendedInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostServerName Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
         * 
         * @return builder
         * 
         */
        public Builder hostServerName(@Nullable Output<String> hostServerName) {
            $.hostServerName = hostServerName;
            return this;
        }

        /**
         * @param hostServerName Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
         * 
         * @return builder
         * 
         */
        public Builder hostServerName(String hostServerName) {
            return hostServerName(Output.of(hostServerName));
        }

        /**
         * @param inquiryInfo Inquiry Status for the container.
         * 
         * @return builder
         * 
         */
        public Builder inquiryInfo(@Nullable Output<InquiryInfoArgs> inquiryInfo) {
            $.inquiryInfo = inquiryInfo;
            return this;
        }

        /**
         * @param inquiryInfo Inquiry Status for the container.
         * 
         * @return builder
         * 
         */
        public Builder inquiryInfo(InquiryInfoArgs inquiryInfo) {
            return inquiryInfo(Output.of(inquiryInfo));
        }

        /**
         * @param nodesList List of the nodes in case of distributed container.
         * 
         * @return builder
         * 
         */
        public Builder nodesList(@Nullable Output<List<DistributedNodesInfoArgs>> nodesList) {
            $.nodesList = nodesList;
            return this;
        }

        /**
         * @param nodesList List of the nodes in case of distributed container.
         * 
         * @return builder
         * 
         */
        public Builder nodesList(List<DistributedNodesInfoArgs> nodesList) {
            return nodesList(Output.of(nodesList));
        }

        /**
         * @param nodesList List of the nodes in case of distributed container.
         * 
         * @return builder
         * 
         */
        public Builder nodesList(DistributedNodesInfoArgs... nodesList) {
            return nodesList(List.of(nodesList));
        }

        public AzureWorkloadContainerExtendedInfoArgs build() {
            return $;
        }
    }

}
