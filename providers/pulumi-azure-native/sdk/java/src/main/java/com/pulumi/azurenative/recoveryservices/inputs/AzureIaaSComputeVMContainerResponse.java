// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
 * 
 */
public final class AzureIaaSComputeVMContainerResponse extends com.pulumi.resources.InvokeArgs {

    public static final AzureIaaSComputeVMContainerResponse Empty = new AzureIaaSComputeVMContainerResponse();

    /**
     * Type of backup management for the container.
     * 
     */
    @Import(name="backupManagementType")
    private @Nullable String backupManagementType;

    public Optional<String> backupManagementType() {
        return Optional.ofNullable(this.backupManagementType);
    }

    /**
     * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is &#39;Microsoft.Compute/virtualMachines&#39;.
     * 
     */
    @Import(name="containerType", required=true)
    private String containerType;

    public String containerType() {
        return this.containerType;
    }

    /**
     * Friendly name of the container.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable String friendlyName;

    public Optional<String> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * Status of health of the container.
     * 
     */
    @Import(name="healthStatus")
    private @Nullable String healthStatus;

    public Optional<String> healthStatus() {
        return Optional.ofNullable(this.healthStatus);
    }

    /**
     * Status of registration of the container with the Recovery Services Vault.
     * 
     */
    @Import(name="registrationStatus")
    private @Nullable String registrationStatus;

    public Optional<String> registrationStatus() {
        return Optional.ofNullable(this.registrationStatus);
    }

    /**
     * Resource group name of Recovery Services Vault.
     * 
     */
    @Import(name="resourceGroup")
    private @Nullable String resourceGroup;

    public Optional<String> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }

    /**
     * Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
     * 
     */
    @Import(name="virtualMachineId")
    private @Nullable String virtualMachineId;

    public Optional<String> virtualMachineId() {
        return Optional.ofNullable(this.virtualMachineId);
    }

    /**
     * Specifies whether the container represents a Classic or an Azure Resource Manager VM.
     * 
     */
    @Import(name="virtualMachineVersion")
    private @Nullable String virtualMachineVersion;

    public Optional<String> virtualMachineVersion() {
        return Optional.ofNullable(this.virtualMachineVersion);
    }

    private AzureIaaSComputeVMContainerResponse() {}

    private AzureIaaSComputeVMContainerResponse(AzureIaaSComputeVMContainerResponse $) {
        this.backupManagementType = $.backupManagementType;
        this.containerType = $.containerType;
        this.friendlyName = $.friendlyName;
        this.healthStatus = $.healthStatus;
        this.registrationStatus = $.registrationStatus;
        this.resourceGroup = $.resourceGroup;
        this.virtualMachineId = $.virtualMachineId;
        this.virtualMachineVersion = $.virtualMachineVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureIaaSComputeVMContainerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureIaaSComputeVMContainerResponse $;

        public Builder() {
            $ = new AzureIaaSComputeVMContainerResponse();
        }

        public Builder(AzureIaaSComputeVMContainerResponse defaults) {
            $ = new AzureIaaSComputeVMContainerResponse(Objects.requireNonNull(defaults));
        }

        public Builder backupManagementType(@Nullable String backupManagementType) {
            $.backupManagementType = backupManagementType;
            return this;
        }

        public Builder containerType(String containerType) {
            $.containerType = containerType;
            return this;
        }

        public Builder friendlyName(@Nullable String friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        public Builder healthStatus(@Nullable String healthStatus) {
            $.healthStatus = healthStatus;
            return this;
        }

        public Builder registrationStatus(@Nullable String registrationStatus) {
            $.registrationStatus = registrationStatus;
            return this;
        }

        public Builder resourceGroup(@Nullable String resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        public Builder virtualMachineId(@Nullable String virtualMachineId) {
            $.virtualMachineId = virtualMachineId;
            return this;
        }

        public Builder virtualMachineVersion(@Nullable String virtualMachineVersion) {
            $.virtualMachineVersion = virtualMachineVersion;
            return this;
        }

        public AzureIaaSComputeVMContainerResponse build() {
            $.containerType = Codegen.stringProp("containerType").arg($.containerType).require();
            return $;
        }
    }

}
