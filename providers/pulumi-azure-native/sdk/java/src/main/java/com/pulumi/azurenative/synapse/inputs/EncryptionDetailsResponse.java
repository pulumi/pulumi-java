// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.inputs;

import com.pulumi.azurenative.synapse.inputs.CustomerManagedKeyDetailsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details of the encryption associated with the workspace
 * 
 */
public final class EncryptionDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final EncryptionDetailsResponse Empty = new EncryptionDetailsResponse();

    /**
     * Customer Managed Key Details
     * 
     */
    @Import(name="cmk")
    private @Nullable CustomerManagedKeyDetailsResponse cmk;

    /**
     * @return Customer Managed Key Details
     * 
     */
    public Optional<CustomerManagedKeyDetailsResponse> cmk() {
        return Optional.ofNullable(this.cmk);
    }

    /**
     * Double Encryption enabled
     * 
     */
    @Import(name="doubleEncryptionEnabled", required=true)
    private Boolean doubleEncryptionEnabled;

    /**
     * @return Double Encryption enabled
     * 
     */
    public Boolean doubleEncryptionEnabled() {
        return this.doubleEncryptionEnabled;
    }

    private EncryptionDetailsResponse() {}

    private EncryptionDetailsResponse(EncryptionDetailsResponse $) {
        this.cmk = $.cmk;
        this.doubleEncryptionEnabled = $.doubleEncryptionEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionDetailsResponse $;

        public Builder() {
            $ = new EncryptionDetailsResponse();
        }

        public Builder(EncryptionDetailsResponse defaults) {
            $ = new EncryptionDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param cmk Customer Managed Key Details
         * 
         * @return builder
         * 
         */
        public Builder cmk(@Nullable CustomerManagedKeyDetailsResponse cmk) {
            $.cmk = cmk;
            return this;
        }

        /**
         * @param doubleEncryptionEnabled Double Encryption enabled
         * 
         * @return builder
         * 
         */
        public Builder doubleEncryptionEnabled(Boolean doubleEncryptionEnabled) {
            $.doubleEncryptionEnabled = doubleEncryptionEnabled;
            return this;
        }

        public EncryptionDetailsResponse build() {
            $.doubleEncryptionEnabled = Objects.requireNonNull($.doubleEncryptionEnabled, "expected parameter 'doubleEncryptionEnabled' to be non-null");
            return $;
        }
    }

}
