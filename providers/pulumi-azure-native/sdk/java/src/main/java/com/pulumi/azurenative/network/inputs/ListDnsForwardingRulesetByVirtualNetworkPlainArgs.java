// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListDnsForwardingRulesetByVirtualNetworkPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListDnsForwardingRulesetByVirtualNetworkPlainArgs Empty = new ListDnsForwardingRulesetByVirtualNetworkPlainArgs();

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The maximum number of results to return. If not specified, returns up to 100 results.
     * 
     */
    @Import(name="top")
    private @Nullable Integer top;

    /**
     * @return The maximum number of results to return. If not specified, returns up to 100 results.
     * 
     */
    public Optional<Integer> top() {
        return Optional.ofNullable(this.top);
    }

    /**
     * The name of the virtual network.
     * 
     */
    @Import(name="virtualNetworkName", required=true)
    private String virtualNetworkName;

    /**
     * @return The name of the virtual network.
     * 
     */
    public String virtualNetworkName() {
        return this.virtualNetworkName;
    }

    private ListDnsForwardingRulesetByVirtualNetworkPlainArgs() {}

    private ListDnsForwardingRulesetByVirtualNetworkPlainArgs(ListDnsForwardingRulesetByVirtualNetworkPlainArgs $) {
        this.resourceGroupName = $.resourceGroupName;
        this.top = $.top;
        this.virtualNetworkName = $.virtualNetworkName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListDnsForwardingRulesetByVirtualNetworkPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListDnsForwardingRulesetByVirtualNetworkPlainArgs $;

        public Builder() {
            $ = new ListDnsForwardingRulesetByVirtualNetworkPlainArgs();
        }

        public Builder(ListDnsForwardingRulesetByVirtualNetworkPlainArgs defaults) {
            $ = new ListDnsForwardingRulesetByVirtualNetworkPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param top The maximum number of results to return. If not specified, returns up to 100 results.
         * 
         * @return builder
         * 
         */
        public Builder top(@Nullable Integer top) {
            $.top = top;
            return this;
        }

        /**
         * @param virtualNetworkName The name of the virtual network.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkName(String virtualNetworkName) {
            $.virtualNetworkName = virtualNetworkName;
            return this;
        }

        public ListDnsForwardingRulesetByVirtualNetworkPlainArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.virtualNetworkName = Objects.requireNonNull($.virtualNetworkName, "expected parameter 'virtualNetworkName' to be non-null");
            return $;
        }
    }

}
