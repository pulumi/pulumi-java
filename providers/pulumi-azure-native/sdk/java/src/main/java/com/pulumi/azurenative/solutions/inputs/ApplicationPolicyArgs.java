// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.solutions.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Managed application policy.
 * 
 */
public final class ApplicationPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPolicyArgs Empty = new ApplicationPolicyArgs();

    /**
     * The policy name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The policy parameters.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<String> parameters;

    public Optional<Output<String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The policy definition Id.
     * 
     */
    @Import(name="policyDefinitionId")
    private @Nullable Output<String> policyDefinitionId;

    public Optional<Output<String>> policyDefinitionId() {
        return Optional.ofNullable(this.policyDefinitionId);
    }

    private ApplicationPolicyArgs() {}

    private ApplicationPolicyArgs(ApplicationPolicyArgs $) {
        this.name = $.name;
        this.parameters = $.parameters;
        this.policyDefinitionId = $.policyDefinitionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationPolicyArgs $;

        public Builder() {
            $ = new ApplicationPolicyArgs();
        }

        public Builder(ApplicationPolicyArgs defaults) {
            $ = new ApplicationPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parameters(@Nullable Output<String> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(String parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder policyDefinitionId(@Nullable Output<String> policyDefinitionId) {
            $.policyDefinitionId = policyDefinitionId;
            return this;
        }

        public Builder policyDefinitionId(String policyDefinitionId) {
            return policyDefinitionId(Output.of(policyDefinitionId));
        }

        public ApplicationPolicyArgs build() {
            return $;
        }
    }

}
