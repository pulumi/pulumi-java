// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.enums.ForwardProxyConvention;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration settings of a forward proxy used to make the requests.
 * 
 */
public final class ForwardProxyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ForwardProxyArgs Empty = new ForwardProxyArgs();

    /**
     * The convention used to determine the url of the request made.
     * 
     */
    @Import(name="convention")
    private @Nullable Output<ForwardProxyConvention> convention;

    /**
     * @return The convention used to determine the url of the request made.
     * 
     */
    public Optional<Output<ForwardProxyConvention>> convention() {
        return Optional.ofNullable(this.convention);
    }

    /**
     * The name of the header containing the host of the request.
     * 
     */
    @Import(name="customHostHeaderName")
    private @Nullable Output<String> customHostHeaderName;

    /**
     * @return The name of the header containing the host of the request.
     * 
     */
    public Optional<Output<String>> customHostHeaderName() {
        return Optional.ofNullable(this.customHostHeaderName);
    }

    /**
     * The name of the header containing the scheme of the request.
     * 
     */
    @Import(name="customProtoHeaderName")
    private @Nullable Output<String> customProtoHeaderName;

    /**
     * @return The name of the header containing the scheme of the request.
     * 
     */
    public Optional<Output<String>> customProtoHeaderName() {
        return Optional.ofNullable(this.customProtoHeaderName);
    }

    private ForwardProxyArgs() {}

    private ForwardProxyArgs(ForwardProxyArgs $) {
        this.convention = $.convention;
        this.customHostHeaderName = $.customHostHeaderName;
        this.customProtoHeaderName = $.customProtoHeaderName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ForwardProxyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ForwardProxyArgs $;

        public Builder() {
            $ = new ForwardProxyArgs();
        }

        public Builder(ForwardProxyArgs defaults) {
            $ = new ForwardProxyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param convention The convention used to determine the url of the request made.
         * 
         * @return builder
         * 
         */
        public Builder convention(@Nullable Output<ForwardProxyConvention> convention) {
            $.convention = convention;
            return this;
        }

        /**
         * @param convention The convention used to determine the url of the request made.
         * 
         * @return builder
         * 
         */
        public Builder convention(ForwardProxyConvention convention) {
            return convention(Output.of(convention));
        }

        /**
         * @param customHostHeaderName The name of the header containing the host of the request.
         * 
         * @return builder
         * 
         */
        public Builder customHostHeaderName(@Nullable Output<String> customHostHeaderName) {
            $.customHostHeaderName = customHostHeaderName;
            return this;
        }

        /**
         * @param customHostHeaderName The name of the header containing the host of the request.
         * 
         * @return builder
         * 
         */
        public Builder customHostHeaderName(String customHostHeaderName) {
            return customHostHeaderName(Output.of(customHostHeaderName));
        }

        /**
         * @param customProtoHeaderName The name of the header containing the scheme of the request.
         * 
         * @return builder
         * 
         */
        public Builder customProtoHeaderName(@Nullable Output<String> customProtoHeaderName) {
            $.customProtoHeaderName = customProtoHeaderName;
            return this;
        }

        /**
         * @param customProtoHeaderName The name of the header containing the scheme of the request.
         * 
         * @return builder
         * 
         */
        public Builder customProtoHeaderName(String customProtoHeaderName) {
            return customProtoHeaderName(Output.of(customProtoHeaderName));
        }

        public ForwardProxyArgs build() {
            return $;
        }
    }

}
