// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.inputs;

import com.pulumi.azurenative.servicefabricmesh.inputs.HttpRouteConfigResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Describes the hostname properties for http routing.
 * 
 */
public final class HttpHostConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final HttpHostConfigResponse Empty = new HttpHostConfigResponse();

    /**
     * http hostname config name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return http hostname config name.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases.
     * 
     */
    @Import(name="routes", required=true)
    private List<HttpRouteConfigResponse> routes;

    /**
     * @return Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases.
     * 
     */
    public List<HttpRouteConfigResponse> routes() {
        return this.routes;
    }

    private HttpHostConfigResponse() {}

    private HttpHostConfigResponse(HttpHostConfigResponse $) {
        this.name = $.name;
        this.routes = $.routes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpHostConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpHostConfigResponse $;

        public Builder() {
            $ = new HttpHostConfigResponse();
        }

        public Builder(HttpHostConfigResponse defaults) {
            $ = new HttpHostConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name http hostname config name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param routes Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases.
         * 
         * @return builder
         * 
         */
        public Builder routes(List<HttpRouteConfigResponse> routes) {
            $.routes = routes;
            return this;
        }

        /**
         * @param routes Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases.
         * 
         * @return builder
         * 
         */
        public Builder routes(HttpRouteConfigResponse... routes) {
            return routes(List.of(routes));
        }

        public HttpHostConfigResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.routes = Objects.requireNonNull($.routes, "expected parameter 'routes' to be non-null");
            return $;
        }
    }

}
