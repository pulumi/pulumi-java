// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.peering;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.peering.PeeringServiceArgs;
import com.pulumi.azurenative.peering.outputs.PeeringServiceSkuResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Peering Service
 * API Version: 2021-01-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:peering:PeeringService peeringServiceName /subscriptions/subId/resourceGroups/rgName/providers/Microsoft.Peering/peeringServices/peeringServiceName 
 * ```
 * 
 */
@ResourceType(type="azure-native:peering:PeeringService")
public class PeeringService extends com.pulumi.resources.CustomResource {
    /**
     * The location of the resource.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The location (state/province) of the customer.
     * 
     */
    @Export(name="peeringServiceLocation", type=String.class, parameters={})
    private Output</* @Nullable */ String> peeringServiceLocation;

    /**
     * @return The location (state/province) of the customer.
     * 
     */
    public Output<Optional<String>> peeringServiceLocation() {
        return Codegen.optional(this.peeringServiceLocation);
    }
    /**
     * The name of the service provider.
     * 
     */
    @Export(name="peeringServiceProvider", type=String.class, parameters={})
    private Output</* @Nullable */ String> peeringServiceProvider;

    /**
     * @return The name of the service provider.
     * 
     */
    public Output<Optional<String>> peeringServiceProvider() {
        return Codegen.optional(this.peeringServiceProvider);
    }
    /**
     * The backup peering (Microsoft/service provider) location to be used for customer traffic.
     * 
     */
    @Export(name="providerBackupPeeringLocation", type=String.class, parameters={})
    private Output</* @Nullable */ String> providerBackupPeeringLocation;

    /**
     * @return The backup peering (Microsoft/service provider) location to be used for customer traffic.
     * 
     */
    public Output<Optional<String>> providerBackupPeeringLocation() {
        return Codegen.optional(this.providerBackupPeeringLocation);
    }
    /**
     * The primary peering (Microsoft/service provider) location to be used for customer traffic.
     * 
     */
    @Export(name="providerPrimaryPeeringLocation", type=String.class, parameters={})
    private Output</* @Nullable */ String> providerPrimaryPeeringLocation;

    /**
     * @return The primary peering (Microsoft/service provider) location to be used for customer traffic.
     * 
     */
    public Output<Optional<String>> providerPrimaryPeeringLocation() {
        return Codegen.optional(this.providerPrimaryPeeringLocation);
    }
    /**
     * The provisioning state of the resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * The SKU that defines the type of the peering service.
     * 
     */
    @Export(name="sku", type=PeeringServiceSkuResponse.class, parameters={})
    private Output</* @Nullable */ PeeringServiceSkuResponse> sku;

    /**
     * @return The SKU that defines the type of the peering service.
     * 
     */
    public Output<Optional<PeeringServiceSkuResponse>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * The resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of the resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PeeringService(String name) {
        this(name, PeeringServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PeeringService(String name, PeeringServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PeeringService(String name, PeeringServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:peering:PeeringService", name, args == null ? PeeringServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PeeringService(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:peering:PeeringService", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:peering/v20190801preview:PeeringService").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20190901preview:PeeringService").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20200101preview:PeeringService").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20200401:PeeringService").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20201001:PeeringService").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20210101:PeeringService").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20210601:PeeringService").build()),
                Output.of(Alias.builder().type("azure-native:peering/v20220101:PeeringService").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PeeringService get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PeeringService(name, id, options);
    }
}
