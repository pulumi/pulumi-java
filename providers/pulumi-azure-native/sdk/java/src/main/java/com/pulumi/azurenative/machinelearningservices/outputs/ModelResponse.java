// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.ContainerResourceRequirementsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.DatasetReferenceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelResponse {
    /**
     * @return The Model creation time (UTC).
     * 
     */
    private final @Nullable String createdTime;
    /**
     * @return The list of datasets associated with the model.
     * 
     */
    private final @Nullable List<DatasetReferenceResponse> datasets;
    /**
     * @return Models derived from this model
     * 
     */
    private final @Nullable List<String> derivedModelIds;
    /**
     * @return The Model description text.
     * 
     */
    private final @Nullable String description;
    /**
     * @return The name of the experiment where this model was created.
     * 
     */
    private final @Nullable String experimentName;
    /**
     * @return The Model framework.
     * 
     */
    private final @Nullable String framework;
    /**
     * @return The Model framework version.
     * 
     */
    private final @Nullable String frameworkVersion;
    /**
     * @return The Model Id.
     * 
     */
    private final @Nullable String id;
    /**
     * @return The Model tag dictionary. Items are mutable.
     * 
     */
    private final @Nullable Map<String,String> kvTags;
    /**
     * @return The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
     * 
     */
    private final String mimeType;
    /**
     * @return The Model last modified time (UTC).
     * 
     */
    private final @Nullable String modifiedTime;
    /**
     * @return The Model name.
     * 
     */
    private final String name;
    /**
     * @return The Parent Model Id.
     * 
     */
    private final @Nullable String parentModelId;
    /**
     * @return The Model property dictionary. Properties are immutable.
     * 
     */
    private final @Nullable Map<String,String> properties;
    /**
     * @return Resource requirements for the model
     * 
     */
    private final @Nullable ContainerResourceRequirementsResponse resourceRequirements;
    /**
     * @return The RunId that created this model.
     * 
     */
    private final @Nullable String runId;
    /**
     * @return Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
     * 
     */
    private final @Nullable String sampleInputData;
    /**
     * @return Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
     * 
     */
    private final @Nullable String sampleOutputData;
    /**
     * @return Indicates whether we need to unpack the Model during docker Image creation.
     * 
     */
    private final @Nullable Boolean unpack;
    /**
     * @return The URL of the Model. Usually a SAS URL.
     * 
     */
    private final String url;
    /**
     * @return The Model version assigned by Model Management Service.
     * 
     */
    private final @Nullable Double version;

    @CustomType.Constructor
    private ModelResponse(
        @CustomType.Parameter("createdTime") @Nullable String createdTime,
        @CustomType.Parameter("datasets") @Nullable List<DatasetReferenceResponse> datasets,
        @CustomType.Parameter("derivedModelIds") @Nullable List<String> derivedModelIds,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("experimentName") @Nullable String experimentName,
        @CustomType.Parameter("framework") @Nullable String framework,
        @CustomType.Parameter("frameworkVersion") @Nullable String frameworkVersion,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("kvTags") @Nullable Map<String,String> kvTags,
        @CustomType.Parameter("mimeType") String mimeType,
        @CustomType.Parameter("modifiedTime") @Nullable String modifiedTime,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("parentModelId") @Nullable String parentModelId,
        @CustomType.Parameter("properties") @Nullable Map<String,String> properties,
        @CustomType.Parameter("resourceRequirements") @Nullable ContainerResourceRequirementsResponse resourceRequirements,
        @CustomType.Parameter("runId") @Nullable String runId,
        @CustomType.Parameter("sampleInputData") @Nullable String sampleInputData,
        @CustomType.Parameter("sampleOutputData") @Nullable String sampleOutputData,
        @CustomType.Parameter("unpack") @Nullable Boolean unpack,
        @CustomType.Parameter("url") String url,
        @CustomType.Parameter("version") @Nullable Double version) {
        this.createdTime = createdTime;
        this.datasets = datasets;
        this.derivedModelIds = derivedModelIds;
        this.description = description;
        this.experimentName = experimentName;
        this.framework = framework;
        this.frameworkVersion = frameworkVersion;
        this.id = id;
        this.kvTags = kvTags;
        this.mimeType = mimeType;
        this.modifiedTime = modifiedTime;
        this.name = name;
        this.parentModelId = parentModelId;
        this.properties = properties;
        this.resourceRequirements = resourceRequirements;
        this.runId = runId;
        this.sampleInputData = sampleInputData;
        this.sampleOutputData = sampleOutputData;
        this.unpack = unpack;
        this.url = url;
        this.version = version;
    }

    /**
     * @return The Model creation time (UTC).
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    /**
     * @return The list of datasets associated with the model.
     * 
     */
    public List<DatasetReferenceResponse> datasets() {
        return this.datasets == null ? List.of() : this.datasets;
    }
    /**
     * @return Models derived from this model
     * 
     */
    public List<String> derivedModelIds() {
        return this.derivedModelIds == null ? List.of() : this.derivedModelIds;
    }
    /**
     * @return The Model description text.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The name of the experiment where this model was created.
     * 
     */
    public Optional<String> experimentName() {
        return Optional.ofNullable(this.experimentName);
    }
    /**
     * @return The Model framework.
     * 
     */
    public Optional<String> framework() {
        return Optional.ofNullable(this.framework);
    }
    /**
     * @return The Model framework version.
     * 
     */
    public Optional<String> frameworkVersion() {
        return Optional.ofNullable(this.frameworkVersion);
    }
    /**
     * @return The Model Id.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The Model tag dictionary. Items are mutable.
     * 
     */
    public Map<String,String> kvTags() {
        return this.kvTags == null ? Map.of() : this.kvTags;
    }
    /**
     * @return The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
     * 
     */
    public String mimeType() {
        return this.mimeType;
    }
    /**
     * @return The Model last modified time (UTC).
     * 
     */
    public Optional<String> modifiedTime() {
        return Optional.ofNullable(this.modifiedTime);
    }
    /**
     * @return The Model name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Parent Model Id.
     * 
     */
    public Optional<String> parentModelId() {
        return Optional.ofNullable(this.parentModelId);
    }
    /**
     * @return The Model property dictionary. Properties are immutable.
     * 
     */
    public Map<String,String> properties() {
        return this.properties == null ? Map.of() : this.properties;
    }
    /**
     * @return Resource requirements for the model
     * 
     */
    public Optional<ContainerResourceRequirementsResponse> resourceRequirements() {
        return Optional.ofNullable(this.resourceRequirements);
    }
    /**
     * @return The RunId that created this model.
     * 
     */
    public Optional<String> runId() {
        return Optional.ofNullable(this.runId);
    }
    /**
     * @return Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
     * 
     */
    public Optional<String> sampleInputData() {
        return Optional.ofNullable(this.sampleInputData);
    }
    /**
     * @return Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
     * 
     */
    public Optional<String> sampleOutputData() {
        return Optional.ofNullable(this.sampleOutputData);
    }
    /**
     * @return Indicates whether we need to unpack the Model during docker Image creation.
     * 
     */
    public Optional<Boolean> unpack() {
        return Optional.ofNullable(this.unpack);
    }
    /**
     * @return The URL of the Model. Usually a SAS URL.
     * 
     */
    public String url() {
        return this.url;
    }
    /**
     * @return The Model version assigned by Model Management Service.
     * 
     */
    public Optional<Double> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String createdTime;
        private @Nullable List<DatasetReferenceResponse> datasets;
        private @Nullable List<String> derivedModelIds;
        private @Nullable String description;
        private @Nullable String experimentName;
        private @Nullable String framework;
        private @Nullable String frameworkVersion;
        private @Nullable String id;
        private @Nullable Map<String,String> kvTags;
        private String mimeType;
        private @Nullable String modifiedTime;
        private String name;
        private @Nullable String parentModelId;
        private @Nullable Map<String,String> properties;
        private @Nullable ContainerResourceRequirementsResponse resourceRequirements;
        private @Nullable String runId;
        private @Nullable String sampleInputData;
        private @Nullable String sampleOutputData;
        private @Nullable Boolean unpack;
        private String url;
        private @Nullable Double version;

        public Builder() {
    	      // Empty
        }

        public Builder(ModelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdTime = defaults.createdTime;
    	      this.datasets = defaults.datasets;
    	      this.derivedModelIds = defaults.derivedModelIds;
    	      this.description = defaults.description;
    	      this.experimentName = defaults.experimentName;
    	      this.framework = defaults.framework;
    	      this.frameworkVersion = defaults.frameworkVersion;
    	      this.id = defaults.id;
    	      this.kvTags = defaults.kvTags;
    	      this.mimeType = defaults.mimeType;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.name = defaults.name;
    	      this.parentModelId = defaults.parentModelId;
    	      this.properties = defaults.properties;
    	      this.resourceRequirements = defaults.resourceRequirements;
    	      this.runId = defaults.runId;
    	      this.sampleInputData = defaults.sampleInputData;
    	      this.sampleOutputData = defaults.sampleOutputData;
    	      this.unpack = defaults.unpack;
    	      this.url = defaults.url;
    	      this.version = defaults.version;
        }

        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        public Builder datasets(@Nullable List<DatasetReferenceResponse> datasets) {
            this.datasets = datasets;
            return this;
        }
        public Builder datasets(DatasetReferenceResponse... datasets) {
            return datasets(List.of(datasets));
        }
        public Builder derivedModelIds(@Nullable List<String> derivedModelIds) {
            this.derivedModelIds = derivedModelIds;
            return this;
        }
        public Builder derivedModelIds(String... derivedModelIds) {
            return derivedModelIds(List.of(derivedModelIds));
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder experimentName(@Nullable String experimentName) {
            this.experimentName = experimentName;
            return this;
        }
        public Builder framework(@Nullable String framework) {
            this.framework = framework;
            return this;
        }
        public Builder frameworkVersion(@Nullable String frameworkVersion) {
            this.frameworkVersion = frameworkVersion;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder kvTags(@Nullable Map<String,String> kvTags) {
            this.kvTags = kvTags;
            return this;
        }
        public Builder mimeType(String mimeType) {
            this.mimeType = Objects.requireNonNull(mimeType);
            return this;
        }
        public Builder modifiedTime(@Nullable String modifiedTime) {
            this.modifiedTime = modifiedTime;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder parentModelId(@Nullable String parentModelId) {
            this.parentModelId = parentModelId;
            return this;
        }
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }
        public Builder resourceRequirements(@Nullable ContainerResourceRequirementsResponse resourceRequirements) {
            this.resourceRequirements = resourceRequirements;
            return this;
        }
        public Builder runId(@Nullable String runId) {
            this.runId = runId;
            return this;
        }
        public Builder sampleInputData(@Nullable String sampleInputData) {
            this.sampleInputData = sampleInputData;
            return this;
        }
        public Builder sampleOutputData(@Nullable String sampleOutputData) {
            this.sampleOutputData = sampleOutputData;
            return this;
        }
        public Builder unpack(@Nullable Boolean unpack) {
            this.unpack = unpack;
            return this;
        }
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public Builder version(@Nullable Double version) {
            this.version = version;
            return this;
        }        public ModelResponse build() {
            return new ModelResponse(createdTime, datasets, derivedModelIds, description, experimentName, framework, frameworkVersion, id, kvTags, mimeType, modifiedTime, name, parentModelId, properties, resourceRequirements, runId, sampleInputData, sampleOutputData, unpack, url, version);
        }
    }
}
