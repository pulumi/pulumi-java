// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Compute binding definition.
 * 
 */
public final class ComputeBindingResponse extends com.pulumi.resources.InvokeArgs {

    public static final ComputeBindingResponse Empty = new ComputeBindingResponse();

    /**
     * ID of the compute resource.
     * 
     */
    @Import(name="computeId")
    private @Nullable String computeId;

    public Optional<String> computeId() {
        return Optional.ofNullable(this.computeId);
    }

    /**
     * Number of nodes.
     * 
     */
    @Import(name="nodeCount")
    private @Nullable Integer nodeCount;

    public Optional<Integer> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }

    private ComputeBindingResponse() {}

    private ComputeBindingResponse(ComputeBindingResponse $) {
        this.computeId = $.computeId;
        this.nodeCount = $.nodeCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComputeBindingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeBindingResponse $;

        public Builder() {
            $ = new ComputeBindingResponse();
        }

        public Builder(ComputeBindingResponse defaults) {
            $ = new ComputeBindingResponse(Objects.requireNonNull(defaults));
        }

        public Builder computeId(@Nullable String computeId) {
            $.computeId = computeId;
            return this;
        }

        public Builder nodeCount(@Nullable Integer nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        public ComputeBindingResponse build() {
            return $;
        }
    }

}
