// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.blueprint;

import com.pulumi.azurenative.blueprint.enums.ArtifactKind;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ArtifactArgs extends com.pulumi.resources.ResourceArgs {

    public static final ArtifactArgs Empty = new ArtifactArgs();

    /**
     * Name of the blueprint artifact.
     * 
     */
    @Import(name="artifactName")
    private @Nullable Output<String> artifactName;

    /**
     * @return Name of the blueprint artifact.
     * 
     */
    public Optional<Output<String>> artifactName() {
        return Optional.ofNullable(this.artifactName);
    }

    /**
     * Name of the blueprint definition.
     * 
     */
    @Import(name="blueprintName", required=true)
    private Output<String> blueprintName;

    /**
     * @return Name of the blueprint definition.
     * 
     */
    public Output<String> blueprintName() {
        return this.blueprintName;
    }

    /**
     * Specifies the kind of blueprint artifact.
     * 
     */
    @Import(name="kind", required=true)
    private Output<Either<String,ArtifactKind>> kind;

    /**
     * @return Specifies the kind of blueprint artifact.
     * 
     */
    public Output<Either<String,ArtifactKind>> kind() {
        return this.kind;
    }

    /**
     * The scope of the resource. Valid scopes are: management group (format: &#39;/providers/Microsoft.Management/managementGroups/{managementGroup}&#39;), subscription (format: &#39;/subscriptions/{subscriptionId}&#39;).
     * 
     */
    @Import(name="resourceScope", required=true)
    private Output<String> resourceScope;

    /**
     * @return The scope of the resource. Valid scopes are: management group (format: &#39;/providers/Microsoft.Management/managementGroups/{managementGroup}&#39;), subscription (format: &#39;/subscriptions/{subscriptionId}&#39;).
     * 
     */
    public Output<String> resourceScope() {
        return this.resourceScope;
    }

    private ArtifactArgs() {}

    private ArtifactArgs(ArtifactArgs $) {
        this.artifactName = $.artifactName;
        this.blueprintName = $.blueprintName;
        this.kind = $.kind;
        this.resourceScope = $.resourceScope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ArtifactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ArtifactArgs $;

        public Builder() {
            $ = new ArtifactArgs();
        }

        public Builder(ArtifactArgs defaults) {
            $ = new ArtifactArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param artifactName Name of the blueprint artifact.
         * 
         * @return builder
         * 
         */
        public Builder artifactName(@Nullable Output<String> artifactName) {
            $.artifactName = artifactName;
            return this;
        }

        /**
         * @param artifactName Name of the blueprint artifact.
         * 
         * @return builder
         * 
         */
        public Builder artifactName(String artifactName) {
            return artifactName(Output.of(artifactName));
        }

        /**
         * @param blueprintName Name of the blueprint definition.
         * 
         * @return builder
         * 
         */
        public Builder blueprintName(Output<String> blueprintName) {
            $.blueprintName = blueprintName;
            return this;
        }

        /**
         * @param blueprintName Name of the blueprint definition.
         * 
         * @return builder
         * 
         */
        public Builder blueprintName(String blueprintName) {
            return blueprintName(Output.of(blueprintName));
        }

        /**
         * @param kind Specifies the kind of blueprint artifact.
         * 
         * @return builder
         * 
         */
        public Builder kind(Output<Either<String,ArtifactKind>> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Specifies the kind of blueprint artifact.
         * 
         * @return builder
         * 
         */
        public Builder kind(Either<String,ArtifactKind> kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param kind Specifies the kind of blueprint artifact.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Either.ofLeft(kind));
        }

        /**
         * @param kind Specifies the kind of blueprint artifact.
         * 
         * @return builder
         * 
         */
        public Builder kind(ArtifactKind kind) {
            return kind(Either.ofRight(kind));
        }

        /**
         * @param resourceScope The scope of the resource. Valid scopes are: management group (format: &#39;/providers/Microsoft.Management/managementGroups/{managementGroup}&#39;), subscription (format: &#39;/subscriptions/{subscriptionId}&#39;).
         * 
         * @return builder
         * 
         */
        public Builder resourceScope(Output<String> resourceScope) {
            $.resourceScope = resourceScope;
            return this;
        }

        /**
         * @param resourceScope The scope of the resource. Valid scopes are: management group (format: &#39;/providers/Microsoft.Management/managementGroups/{managementGroup}&#39;), subscription (format: &#39;/subscriptions/{subscriptionId}&#39;).
         * 
         * @return builder
         * 
         */
        public Builder resourceScope(String resourceScope) {
            return resourceScope(Output.of(resourceScope));
        }

        public ArtifactArgs build() {
            $.blueprintName = Objects.requireNonNull($.blueprintName, "expected parameter 'blueprintName' to be non-null");
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            $.resourceScope = Objects.requireNonNull($.resourceScope, "expected parameter 'resourceScope' to be non-null");
            return $;
        }
    }

}
