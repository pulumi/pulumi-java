// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Describes an input signal to be used on a pipeline node.
 * 
 */
public final class NodeInputResponse extends com.pulumi.resources.InvokeArgs {

    public static final NodeInputResponse Empty = new NodeInputResponse();

    /**
     * The name of the upstream node in the pipeline which output is used as input of the current node.
     * 
     */
    @Import(name="nodeName", required=true)
    private String nodeName;

    public String nodeName() {
        return this.nodeName;
    }

    private NodeInputResponse() {}

    private NodeInputResponse(NodeInputResponse $) {
        this.nodeName = $.nodeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeInputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeInputResponse $;

        public Builder() {
            $ = new NodeInputResponse();
        }

        public Builder(NodeInputResponse defaults) {
            $ = new NodeInputResponse(Objects.requireNonNull(defaults));
        }

        public Builder nodeName(String nodeName) {
            $.nodeName = nodeName;
            return this;
        }

        public NodeInputResponse build() {
            $.nodeName = Objects.requireNonNull($.nodeName, "expected parameter 'nodeName' to be non-null");
            return $;
        }
    }

}
