// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.importexport.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
 * 
 */
public final class ExportArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExportArgs Empty = new ExportArgs();

    /**
     * The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
     * 
     */
    @Import(name="blobListBlobPath")
    private @Nullable Output<String> blobListBlobPath;

    /**
     * @return The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
     * 
     */
    public Optional<Output<String>> blobListBlobPath() {
        return Optional.ofNullable(this.blobListBlobPath);
    }

    /**
     * A collection of blob-path strings.
     * 
     */
    @Import(name="blobPath")
    private @Nullable Output<List<String>> blobPath;

    /**
     * @return A collection of blob-path strings.
     * 
     */
    public Optional<Output<List<String>>> blobPath() {
        return Optional.ofNullable(this.blobPath);
    }

    /**
     * A collection of blob-prefix strings.
     * 
     */
    @Import(name="blobPathPrefix")
    private @Nullable Output<List<String>> blobPathPrefix;

    /**
     * @return A collection of blob-prefix strings.
     * 
     */
    public Optional<Output<List<String>>> blobPathPrefix() {
        return Optional.ofNullable(this.blobPathPrefix);
    }

    private ExportArgs() {}

    private ExportArgs(ExportArgs $) {
        this.blobListBlobPath = $.blobListBlobPath;
        this.blobPath = $.blobPath;
        this.blobPathPrefix = $.blobPathPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExportArgs $;

        public Builder() {
            $ = new ExportArgs();
        }

        public Builder(ExportArgs defaults) {
            $ = new ExportArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param blobListBlobPath The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
         * 
         * @return builder
         * 
         */
        public Builder blobListBlobPath(@Nullable Output<String> blobListBlobPath) {
            $.blobListBlobPath = blobListBlobPath;
            return this;
        }

        /**
         * @param blobListBlobPath The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
         * 
         * @return builder
         * 
         */
        public Builder blobListBlobPath(String blobListBlobPath) {
            return blobListBlobPath(Output.of(blobListBlobPath));
        }

        /**
         * @param blobPath A collection of blob-path strings.
         * 
         * @return builder
         * 
         */
        public Builder blobPath(@Nullable Output<List<String>> blobPath) {
            $.blobPath = blobPath;
            return this;
        }

        /**
         * @param blobPath A collection of blob-path strings.
         * 
         * @return builder
         * 
         */
        public Builder blobPath(List<String> blobPath) {
            return blobPath(Output.of(blobPath));
        }

        /**
         * @param blobPath A collection of blob-path strings.
         * 
         * @return builder
         * 
         */
        public Builder blobPath(String... blobPath) {
            return blobPath(List.of(blobPath));
        }

        /**
         * @param blobPathPrefix A collection of blob-prefix strings.
         * 
         * @return builder
         * 
         */
        public Builder blobPathPrefix(@Nullable Output<List<String>> blobPathPrefix) {
            $.blobPathPrefix = blobPathPrefix;
            return this;
        }

        /**
         * @param blobPathPrefix A collection of blob-prefix strings.
         * 
         * @return builder
         * 
         */
        public Builder blobPathPrefix(List<String> blobPathPrefix) {
            return blobPathPrefix(Output.of(blobPathPrefix));
        }

        /**
         * @param blobPathPrefix A collection of blob-prefix strings.
         * 
         * @return builder
         * 
         */
        public Builder blobPathPrefix(String... blobPathPrefix) {
            return blobPathPrefix(List.of(blobPathPrefix));
        }

        public ExportArgs build() {
            return $;
        }
    }

}
