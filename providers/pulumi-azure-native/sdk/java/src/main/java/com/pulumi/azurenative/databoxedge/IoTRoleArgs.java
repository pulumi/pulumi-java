// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge;

import com.pulumi.azurenative.databoxedge.enums.PlatformType;
import com.pulumi.azurenative.databoxedge.enums.RoleStatus;
import com.pulumi.azurenative.databoxedge.inputs.ComputeResourceArgs;
import com.pulumi.azurenative.databoxedge.inputs.IoTDeviceInfoArgs;
import com.pulumi.azurenative.databoxedge.inputs.IoTEdgeAgentInfoArgs;
import com.pulumi.azurenative.databoxedge.inputs.MountPointMapArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IoTRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final IoTRoleArgs Empty = new IoTRoleArgs();

    /**
     * Resource allocation
     * 
     */
    @Import(name="computeResource")
    private @Nullable Output<ComputeResourceArgs> computeResource;

    public Optional<Output<ComputeResourceArgs>> computeResource() {
        return Optional.ofNullable(this.computeResource);
    }

    /**
     * The device name.
     * 
     */
    @Import(name="deviceName", required=true)
    private Output<String> deviceName;

    public Output<String> deviceName() {
        return this.deviceName;
    }

    /**
     * Host OS supported by the IoT role.
     * 
     */
    @Import(name="hostPlatform", required=true)
    private Output<Either<String,PlatformType>> hostPlatform;

    public Output<Either<String,PlatformType>> hostPlatform() {
        return this.hostPlatform;
    }

    /**
     * IoT device metadata to which data box edge device needs to be connected.
     * 
     */
    @Import(name="ioTDeviceDetails", required=true)
    private Output<IoTDeviceInfoArgs> ioTDeviceDetails;

    public Output<IoTDeviceInfoArgs> ioTDeviceDetails() {
        return this.ioTDeviceDetails;
    }

    /**
     * Iot edge agent details to download the agent and bootstrap iot runtime.
     * 
     */
    @Import(name="ioTEdgeAgentInfo")
    private @Nullable Output<IoTEdgeAgentInfoArgs> ioTEdgeAgentInfo;

    public Optional<Output<IoTEdgeAgentInfoArgs>> ioTEdgeAgentInfo() {
        return Optional.ofNullable(this.ioTEdgeAgentInfo);
    }

    /**
     * IoT edge device to which the IoT role needs to be configured.
     * 
     */
    @Import(name="ioTEdgeDeviceDetails", required=true)
    private Output<IoTDeviceInfoArgs> ioTEdgeDeviceDetails;

    public Output<IoTDeviceInfoArgs> ioTEdgeDeviceDetails() {
        return this.ioTEdgeDeviceDetails;
    }

    /**
     * Role type.
     * Expected value is &#39;IOT&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    public Output<String> kind() {
        return this.kind;
    }

    /**
     * The role name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Role status.
     * 
     */
    @Import(name="roleStatus", required=true)
    private Output<Either<String,RoleStatus>> roleStatus;

    public Output<Either<String,RoleStatus>> roleStatus() {
        return this.roleStatus;
    }

    /**
     * Mount points of shares in role(s).
     * 
     */
    @Import(name="shareMappings")
    private @Nullable Output<List<MountPointMapArgs>> shareMappings;

    public Optional<Output<List<MountPointMapArgs>>> shareMappings() {
        return Optional.ofNullable(this.shareMappings);
    }

    private IoTRoleArgs() {}

    private IoTRoleArgs(IoTRoleArgs $) {
        this.computeResource = $.computeResource;
        this.deviceName = $.deviceName;
        this.hostPlatform = $.hostPlatform;
        this.ioTDeviceDetails = $.ioTDeviceDetails;
        this.ioTEdgeAgentInfo = $.ioTEdgeAgentInfo;
        this.ioTEdgeDeviceDetails = $.ioTEdgeDeviceDetails;
        this.kind = $.kind;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.roleStatus = $.roleStatus;
        this.shareMappings = $.shareMappings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IoTRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IoTRoleArgs $;

        public Builder() {
            $ = new IoTRoleArgs();
        }

        public Builder(IoTRoleArgs defaults) {
            $ = new IoTRoleArgs(Objects.requireNonNull(defaults));
        }

        public Builder computeResource(@Nullable Output<ComputeResourceArgs> computeResource) {
            $.computeResource = computeResource;
            return this;
        }

        public Builder computeResource(ComputeResourceArgs computeResource) {
            return computeResource(Output.of(computeResource));
        }

        public Builder deviceName(Output<String> deviceName) {
            $.deviceName = deviceName;
            return this;
        }

        public Builder deviceName(String deviceName) {
            return deviceName(Output.of(deviceName));
        }

        public Builder hostPlatform(Output<Either<String,PlatformType>> hostPlatform) {
            $.hostPlatform = hostPlatform;
            return this;
        }

        public Builder hostPlatform(Either<String,PlatformType> hostPlatform) {
            return hostPlatform(Output.of(hostPlatform));
        }

        public Builder ioTDeviceDetails(Output<IoTDeviceInfoArgs> ioTDeviceDetails) {
            $.ioTDeviceDetails = ioTDeviceDetails;
            return this;
        }

        public Builder ioTDeviceDetails(IoTDeviceInfoArgs ioTDeviceDetails) {
            return ioTDeviceDetails(Output.of(ioTDeviceDetails));
        }

        public Builder ioTEdgeAgentInfo(@Nullable Output<IoTEdgeAgentInfoArgs> ioTEdgeAgentInfo) {
            $.ioTEdgeAgentInfo = ioTEdgeAgentInfo;
            return this;
        }

        public Builder ioTEdgeAgentInfo(IoTEdgeAgentInfoArgs ioTEdgeAgentInfo) {
            return ioTEdgeAgentInfo(Output.of(ioTEdgeAgentInfo));
        }

        public Builder ioTEdgeDeviceDetails(Output<IoTDeviceInfoArgs> ioTEdgeDeviceDetails) {
            $.ioTEdgeDeviceDetails = ioTEdgeDeviceDetails;
            return this;
        }

        public Builder ioTEdgeDeviceDetails(IoTDeviceInfoArgs ioTEdgeDeviceDetails) {
            return ioTEdgeDeviceDetails(Output.of(ioTEdgeDeviceDetails));
        }

        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder roleStatus(Output<Either<String,RoleStatus>> roleStatus) {
            $.roleStatus = roleStatus;
            return this;
        }

        public Builder roleStatus(Either<String,RoleStatus> roleStatus) {
            return roleStatus(Output.of(roleStatus));
        }

        public Builder shareMappings(@Nullable Output<List<MountPointMapArgs>> shareMappings) {
            $.shareMappings = shareMappings;
            return this;
        }

        public Builder shareMappings(List<MountPointMapArgs> shareMappings) {
            return shareMappings(Output.of(shareMappings));
        }

        public Builder shareMappings(MountPointMapArgs... shareMappings) {
            return shareMappings(List.of(shareMappings));
        }

        public IoTRoleArgs build() {
            $.deviceName = Objects.requireNonNull($.deviceName, "expected parameter 'deviceName' to be non-null");
            $.hostPlatform = Objects.requireNonNull($.hostPlatform, "expected parameter 'hostPlatform' to be non-null");
            $.ioTDeviceDetails = Objects.requireNonNull($.ioTDeviceDetails, "expected parameter 'ioTDeviceDetails' to be non-null");
            $.ioTEdgeDeviceDetails = Objects.requireNonNull($.ioTEdgeDeviceDetails, "expected parameter 'ioTEdgeDeviceDetails' to be non-null");
            $.kind = Codegen.stringProp("kind").output().arg($.kind).require();
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.roleStatus = Objects.requireNonNull($.roleStatus, "expected parameter 'roleStatus' to be non-null");
            return $;
        }
    }

}
