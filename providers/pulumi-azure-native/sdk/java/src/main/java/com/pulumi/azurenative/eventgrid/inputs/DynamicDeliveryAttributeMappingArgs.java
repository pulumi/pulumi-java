// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Dynamic delivery attribute mapping details.
 * 
 */
public final class DynamicDeliveryAttributeMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final DynamicDeliveryAttributeMappingArgs Empty = new DynamicDeliveryAttributeMappingArgs();

    /**
     * Name of the delivery attribute or header.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the delivery attribute or header.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * JSON path in the event which contains attribute value.
     * 
     */
    @Import(name="sourceField")
    private @Nullable Output<String> sourceField;

    /**
     * @return JSON path in the event which contains attribute value.
     * 
     */
    public Optional<Output<String>> sourceField() {
        return Optional.ofNullable(this.sourceField);
    }

    /**
     * Type of the delivery attribute or header name.
     * Expected value is &#39;Dynamic&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of the delivery attribute or header name.
     * Expected value is &#39;Dynamic&#39;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private DynamicDeliveryAttributeMappingArgs() {}

    private DynamicDeliveryAttributeMappingArgs(DynamicDeliveryAttributeMappingArgs $) {
        this.name = $.name;
        this.sourceField = $.sourceField;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DynamicDeliveryAttributeMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DynamicDeliveryAttributeMappingArgs $;

        public Builder() {
            $ = new DynamicDeliveryAttributeMappingArgs();
        }

        public Builder(DynamicDeliveryAttributeMappingArgs defaults) {
            $ = new DynamicDeliveryAttributeMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the delivery attribute or header.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the delivery attribute or header.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sourceField JSON path in the event which contains attribute value.
         * 
         * @return builder
         * 
         */
        public Builder sourceField(@Nullable Output<String> sourceField) {
            $.sourceField = sourceField;
            return this;
        }

        /**
         * @param sourceField JSON path in the event which contains attribute value.
         * 
         * @return builder
         * 
         */
        public Builder sourceField(String sourceField) {
            return sourceField(Output.of(sourceField));
        }

        /**
         * @param type Type of the delivery attribute or header name.
         * Expected value is &#39;Dynamic&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the delivery attribute or header name.
         * Expected value is &#39;Dynamic&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DynamicDeliveryAttributeMappingArgs build() {
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
