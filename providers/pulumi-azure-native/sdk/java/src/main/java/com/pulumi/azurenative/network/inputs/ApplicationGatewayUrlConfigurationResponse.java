// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Url configuration of the Actions set in Application Gateway.
 * 
 */
public final class ApplicationGatewayUrlConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationGatewayUrlConfigurationResponse Empty = new ApplicationGatewayUrlConfigurationResponse();

    /**
     * Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
     * 
     */
    @Import(name="modifiedPath")
    private @Nullable String modifiedPath;

    /**
     * @return Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
     * 
     */
    public Optional<String> modifiedPath() {
        return Optional.ofNullable(this.modifiedPath);
    }

    /**
     * Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
     * 
     */
    @Import(name="modifiedQueryString")
    private @Nullable String modifiedQueryString;

    /**
     * @return Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
     * 
     */
    public Optional<String> modifiedQueryString() {
        return Optional.ofNullable(this.modifiedQueryString);
    }

    /**
     * If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
     * 
     */
    @Import(name="reroute")
    private @Nullable Boolean reroute;

    /**
     * @return If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
     * 
     */
    public Optional<Boolean> reroute() {
        return Optional.ofNullable(this.reroute);
    }

    private ApplicationGatewayUrlConfigurationResponse() {}

    private ApplicationGatewayUrlConfigurationResponse(ApplicationGatewayUrlConfigurationResponse $) {
        this.modifiedPath = $.modifiedPath;
        this.modifiedQueryString = $.modifiedQueryString;
        this.reroute = $.reroute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayUrlConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayUrlConfigurationResponse $;

        public Builder() {
            $ = new ApplicationGatewayUrlConfigurationResponse();
        }

        public Builder(ApplicationGatewayUrlConfigurationResponse defaults) {
            $ = new ApplicationGatewayUrlConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param modifiedPath Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
         * 
         * @return builder
         * 
         */
        public Builder modifiedPath(@Nullable String modifiedPath) {
            $.modifiedPath = modifiedPath;
            return this;
        }

        /**
         * @param modifiedQueryString Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
         * 
         * @return builder
         * 
         */
        public Builder modifiedQueryString(@Nullable String modifiedQueryString) {
            $.modifiedQueryString = modifiedQueryString;
            return this;
        }

        /**
         * @param reroute If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
         * 
         * @return builder
         * 
         */
        public Builder reroute(@Nullable Boolean reroute) {
            $.reroute = reroute;
            return this;
        }

        public ApplicationGatewayUrlConfigurationResponse build() {
            return $;
        }
    }

}
