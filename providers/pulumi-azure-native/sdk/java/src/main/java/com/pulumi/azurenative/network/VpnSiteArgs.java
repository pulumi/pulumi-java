// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.inputs.AddressSpaceArgs;
import com.pulumi.azurenative.network.inputs.BgpSettingsArgs;
import com.pulumi.azurenative.network.inputs.DevicePropertiesArgs;
import com.pulumi.azurenative.network.inputs.O365PolicyPropertiesArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.azurenative.network.inputs.VpnSiteLinkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnSiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnSiteArgs Empty = new VpnSiteArgs();

    /**
     * The AddressSpace that contains an array of IP address ranges.
     * 
     */
    @Import(name="addressSpace")
    private @Nullable Output<AddressSpaceArgs> addressSpace;

    public Optional<Output<AddressSpaceArgs>> addressSpace() {
        return Optional.ofNullable(this.addressSpace);
    }

    /**
     * The set of bgp properties.
     * 
     */
    @Import(name="bgpProperties")
    private @Nullable Output<BgpSettingsArgs> bgpProperties;

    public Optional<Output<BgpSettingsArgs>> bgpProperties() {
        return Optional.ofNullable(this.bgpProperties);
    }

    /**
     * The device properties.
     * 
     */
    @Import(name="deviceProperties")
    private @Nullable Output<DevicePropertiesArgs> deviceProperties;

    public Optional<Output<DevicePropertiesArgs>> deviceProperties() {
        return Optional.ofNullable(this.deviceProperties);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The ip-address for the vpn-site.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * IsSecuritySite flag.
     * 
     */
    @Import(name="isSecuritySite")
    private @Nullable Output<Boolean> isSecuritySite;

    public Optional<Output<Boolean>> isSecuritySite() {
        return Optional.ofNullable(this.isSecuritySite);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Office365 Policy.
     * 
     */
    @Import(name="o365Policy")
    private @Nullable Output<O365PolicyPropertiesArgs> o365Policy;

    public Optional<Output<O365PolicyPropertiesArgs>> o365Policy() {
        return Optional.ofNullable(this.o365Policy);
    }

    /**
     * The resource group name of the VpnSite.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The key for vpn-site that can be used for connections.
     * 
     */
    @Import(name="siteKey")
    private @Nullable Output<String> siteKey;

    public Optional<Output<String>> siteKey() {
        return Optional.ofNullable(this.siteKey);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The VirtualWAN to which the vpnSite belongs.
     * 
     */
    @Import(name="virtualWan")
    private @Nullable Output<SubResourceArgs> virtualWan;

    public Optional<Output<SubResourceArgs>> virtualWan() {
        return Optional.ofNullable(this.virtualWan);
    }

    /**
     * List of all vpn site links.
     * 
     */
    @Import(name="vpnSiteLinks")
    private @Nullable Output<List<VpnSiteLinkArgs>> vpnSiteLinks;

    public Optional<Output<List<VpnSiteLinkArgs>>> vpnSiteLinks() {
        return Optional.ofNullable(this.vpnSiteLinks);
    }

    /**
     * The name of the VpnSite being created or updated.
     * 
     */
    @Import(name="vpnSiteName")
    private @Nullable Output<String> vpnSiteName;

    public Optional<Output<String>> vpnSiteName() {
        return Optional.ofNullable(this.vpnSiteName);
    }

    private VpnSiteArgs() {}

    private VpnSiteArgs(VpnSiteArgs $) {
        this.addressSpace = $.addressSpace;
        this.bgpProperties = $.bgpProperties;
        this.deviceProperties = $.deviceProperties;
        this.id = $.id;
        this.ipAddress = $.ipAddress;
        this.isSecuritySite = $.isSecuritySite;
        this.location = $.location;
        this.o365Policy = $.o365Policy;
        this.resourceGroupName = $.resourceGroupName;
        this.siteKey = $.siteKey;
        this.tags = $.tags;
        this.virtualWan = $.virtualWan;
        this.vpnSiteLinks = $.vpnSiteLinks;
        this.vpnSiteName = $.vpnSiteName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnSiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnSiteArgs $;

        public Builder() {
            $ = new VpnSiteArgs();
        }

        public Builder(VpnSiteArgs defaults) {
            $ = new VpnSiteArgs(Objects.requireNonNull(defaults));
        }

        public Builder addressSpace(@Nullable Output<AddressSpaceArgs> addressSpace) {
            $.addressSpace = addressSpace;
            return this;
        }

        public Builder addressSpace(AddressSpaceArgs addressSpace) {
            return addressSpace(Output.of(addressSpace));
        }

        public Builder bgpProperties(@Nullable Output<BgpSettingsArgs> bgpProperties) {
            $.bgpProperties = bgpProperties;
            return this;
        }

        public Builder bgpProperties(BgpSettingsArgs bgpProperties) {
            return bgpProperties(Output.of(bgpProperties));
        }

        public Builder deviceProperties(@Nullable Output<DevicePropertiesArgs> deviceProperties) {
            $.deviceProperties = deviceProperties;
            return this;
        }

        public Builder deviceProperties(DevicePropertiesArgs deviceProperties) {
            return deviceProperties(Output.of(deviceProperties));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        public Builder isSecuritySite(@Nullable Output<Boolean> isSecuritySite) {
            $.isSecuritySite = isSecuritySite;
            return this;
        }

        public Builder isSecuritySite(Boolean isSecuritySite) {
            return isSecuritySite(Output.of(isSecuritySite));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder o365Policy(@Nullable Output<O365PolicyPropertiesArgs> o365Policy) {
            $.o365Policy = o365Policy;
            return this;
        }

        public Builder o365Policy(O365PolicyPropertiesArgs o365Policy) {
            return o365Policy(Output.of(o365Policy));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder siteKey(@Nullable Output<String> siteKey) {
            $.siteKey = siteKey;
            return this;
        }

        public Builder siteKey(String siteKey) {
            return siteKey(Output.of(siteKey));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder virtualWan(@Nullable Output<SubResourceArgs> virtualWan) {
            $.virtualWan = virtualWan;
            return this;
        }

        public Builder virtualWan(SubResourceArgs virtualWan) {
            return virtualWan(Output.of(virtualWan));
        }

        public Builder vpnSiteLinks(@Nullable Output<List<VpnSiteLinkArgs>> vpnSiteLinks) {
            $.vpnSiteLinks = vpnSiteLinks;
            return this;
        }

        public Builder vpnSiteLinks(List<VpnSiteLinkArgs> vpnSiteLinks) {
            return vpnSiteLinks(Output.of(vpnSiteLinks));
        }

        public Builder vpnSiteLinks(VpnSiteLinkArgs... vpnSiteLinks) {
            return vpnSiteLinks(List.of(vpnSiteLinks));
        }

        public Builder vpnSiteName(@Nullable Output<String> vpnSiteName) {
            $.vpnSiteName = vpnSiteName;
            return this;
        }

        public Builder vpnSiteName(String vpnSiteName) {
            return vpnSiteName(Output.of(vpnSiteName));
        }

        public VpnSiteArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
