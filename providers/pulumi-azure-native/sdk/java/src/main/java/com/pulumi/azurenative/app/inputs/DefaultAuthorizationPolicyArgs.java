// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app.inputs;

import com.pulumi.azurenative.app.inputs.AllowedPrincipalsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration settings of the Azure Active Directory default authorization policy.
 * 
 */
public final class DefaultAuthorizationPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefaultAuthorizationPolicyArgs Empty = new DefaultAuthorizationPolicyArgs();

    /**
     * The configuration settings of the Azure Active Directory allowed applications.
     * 
     */
    @Import(name="allowedApplications")
    private @Nullable Output<List<String>> allowedApplications;

    /**
     * @return The configuration settings of the Azure Active Directory allowed applications.
     * 
     */
    public Optional<Output<List<String>>> allowedApplications() {
        return Optional.ofNullable(this.allowedApplications);
    }

    /**
     * The configuration settings of the Azure Active Directory allowed principals.
     * 
     */
    @Import(name="allowedPrincipals")
    private @Nullable Output<AllowedPrincipalsArgs> allowedPrincipals;

    /**
     * @return The configuration settings of the Azure Active Directory allowed principals.
     * 
     */
    public Optional<Output<AllowedPrincipalsArgs>> allowedPrincipals() {
        return Optional.ofNullable(this.allowedPrincipals);
    }

    private DefaultAuthorizationPolicyArgs() {}

    private DefaultAuthorizationPolicyArgs(DefaultAuthorizationPolicyArgs $) {
        this.allowedApplications = $.allowedApplications;
        this.allowedPrincipals = $.allowedPrincipals;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultAuthorizationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultAuthorizationPolicyArgs $;

        public Builder() {
            $ = new DefaultAuthorizationPolicyArgs();
        }

        public Builder(DefaultAuthorizationPolicyArgs defaults) {
            $ = new DefaultAuthorizationPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedApplications The configuration settings of the Azure Active Directory allowed applications.
         * 
         * @return builder
         * 
         */
        public Builder allowedApplications(@Nullable Output<List<String>> allowedApplications) {
            $.allowedApplications = allowedApplications;
            return this;
        }

        /**
         * @param allowedApplications The configuration settings of the Azure Active Directory allowed applications.
         * 
         * @return builder
         * 
         */
        public Builder allowedApplications(List<String> allowedApplications) {
            return allowedApplications(Output.of(allowedApplications));
        }

        /**
         * @param allowedApplications The configuration settings of the Azure Active Directory allowed applications.
         * 
         * @return builder
         * 
         */
        public Builder allowedApplications(String... allowedApplications) {
            return allowedApplications(List.of(allowedApplications));
        }

        /**
         * @param allowedPrincipals The configuration settings of the Azure Active Directory allowed principals.
         * 
         * @return builder
         * 
         */
        public Builder allowedPrincipals(@Nullable Output<AllowedPrincipalsArgs> allowedPrincipals) {
            $.allowedPrincipals = allowedPrincipals;
            return this;
        }

        /**
         * @param allowedPrincipals The configuration settings of the Azure Active Directory allowed principals.
         * 
         * @return builder
         * 
         */
        public Builder allowedPrincipals(AllowedPrincipalsArgs allowedPrincipals) {
            return allowedPrincipals(Output.of(allowedPrincipals));
        }

        public DefaultAuthorizationPolicyArgs build() {
            return $;
        }
    }

}
