// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.importexport.outputs;

import com.pulumi.azurenative.importexport.outputs.DeliveryPackageInformationResponse;
import com.pulumi.azurenative.importexport.outputs.DriveStatusResponse;
import com.pulumi.azurenative.importexport.outputs.EncryptionKeyDetailsResponse;
import com.pulumi.azurenative.importexport.outputs.ExportResponse;
import com.pulumi.azurenative.importexport.outputs.PackageInformationResponse;
import com.pulumi.azurenative.importexport.outputs.ReturnAddressResponse;
import com.pulumi.azurenative.importexport.outputs.ReturnShippingResponse;
import com.pulumi.azurenative.importexport.outputs.ShippingInformationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobDetailsResponse {
    /**
     * Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
     * 
     */
    private final @Nullable Boolean backupDriveManifest;
    /**
     * Indicates whether a request has been submitted to cancel the job.
     * 
     */
    private final @Nullable Boolean cancelRequested;
    /**
     * Contains information about the package being shipped by the customer to the Microsoft data center.
     * 
     */
    private final @Nullable DeliveryPackageInformationResponse deliveryPackage;
    /**
     * The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
     * 
     */
    private final @Nullable String diagnosticsPath;
    /**
     * List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
     * 
     */
    private final @Nullable List<DriveStatusResponse> driveList;
    /**
     * Contains information about the encryption key.
     * 
     */
    private final @Nullable EncryptionKeyDetailsResponse encryptionKey;
    /**
     * A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
     * 
     */
    private final @Nullable ExportResponse export;
    /**
     * A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
     * 
     */
    private final @Nullable String incompleteBlobListUri;
    /**
     * The type of job
     * 
     */
    private final @Nullable String jobType;
    /**
     * Default value is Error. Indicates whether error logging or verbose logging will be enabled.
     * 
     */
    private final @Nullable String logLevel;
    /**
     * Overall percentage completed for the job.
     * 
     */
    private final @Nullable Integer percentComplete;
    /**
     * Specifies the provisioning state of the job.
     * 
     */
    private final @Nullable String provisioningState;
    /**
     * Specifies the return address information for the job.
     * 
     */
    private final @Nullable ReturnAddressResponse returnAddress;
    /**
     * Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned.
     * 
     */
    private final @Nullable PackageInformationResponse returnPackage;
    /**
     * Specifies the return carrier and customer's account with the carrier.
     * 
     */
    private final @Nullable ReturnShippingResponse returnShipping;
    /**
     * Contains information about the Microsoft datacenter to which the drives should be shipped.
     * 
     */
    private final @Nullable ShippingInformationResponse shippingInformation;
    /**
     * Current state of the job.
     * 
     */
    private final @Nullable String state;
    /**
     * The resource identifier of the storage account where data will be imported to or exported from.
     * 
     */
    private final @Nullable String storageAccountId;

    @CustomType.Constructor
    private JobDetailsResponse(
        @CustomType.Parameter("backupDriveManifest") @Nullable Boolean backupDriveManifest,
        @CustomType.Parameter("cancelRequested") @Nullable Boolean cancelRequested,
        @CustomType.Parameter("deliveryPackage") @Nullable DeliveryPackageInformationResponse deliveryPackage,
        @CustomType.Parameter("diagnosticsPath") @Nullable String diagnosticsPath,
        @CustomType.Parameter("driveList") @Nullable List<DriveStatusResponse> driveList,
        @CustomType.Parameter("encryptionKey") @Nullable EncryptionKeyDetailsResponse encryptionKey,
        @CustomType.Parameter("export") @Nullable ExportResponse export,
        @CustomType.Parameter("incompleteBlobListUri") @Nullable String incompleteBlobListUri,
        @CustomType.Parameter("jobType") @Nullable String jobType,
        @CustomType.Parameter("logLevel") @Nullable String logLevel,
        @CustomType.Parameter("percentComplete") @Nullable Integer percentComplete,
        @CustomType.Parameter("provisioningState") @Nullable String provisioningState,
        @CustomType.Parameter("returnAddress") @Nullable ReturnAddressResponse returnAddress,
        @CustomType.Parameter("returnPackage") @Nullable PackageInformationResponse returnPackage,
        @CustomType.Parameter("returnShipping") @Nullable ReturnShippingResponse returnShipping,
        @CustomType.Parameter("shippingInformation") @Nullable ShippingInformationResponse shippingInformation,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("storageAccountId") @Nullable String storageAccountId) {
        this.backupDriveManifest = backupDriveManifest;
        this.cancelRequested = cancelRequested;
        this.deliveryPackage = deliveryPackage;
        this.diagnosticsPath = diagnosticsPath;
        this.driveList = driveList;
        this.encryptionKey = encryptionKey;
        this.export = export;
        this.incompleteBlobListUri = incompleteBlobListUri;
        this.jobType = jobType;
        this.logLevel = logLevel;
        this.percentComplete = percentComplete;
        this.provisioningState = provisioningState;
        this.returnAddress = returnAddress;
        this.returnPackage = returnPackage;
        this.returnShipping = returnShipping;
        this.shippingInformation = shippingInformation;
        this.state = state;
        this.storageAccountId = storageAccountId;
    }

    /**
     * Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
     * 
    */
    public Optional<Boolean> backupDriveManifest() {
        return Optional.ofNullable(this.backupDriveManifest);
    }
    /**
     * Indicates whether a request has been submitted to cancel the job.
     * 
    */
    public Optional<Boolean> cancelRequested() {
        return Optional.ofNullable(this.cancelRequested);
    }
    /**
     * Contains information about the package being shipped by the customer to the Microsoft data center.
     * 
    */
    public Optional<DeliveryPackageInformationResponse> deliveryPackage() {
        return Optional.ofNullable(this.deliveryPackage);
    }
    /**
     * The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
     * 
    */
    public Optional<String> diagnosticsPath() {
        return Optional.ofNullable(this.diagnosticsPath);
    }
    /**
     * List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
     * 
    */
    public List<DriveStatusResponse> driveList() {
        return this.driveList == null ? List.of() : this.driveList;
    }
    /**
     * Contains information about the encryption key.
     * 
    */
    public Optional<EncryptionKeyDetailsResponse> encryptionKey() {
        return Optional.ofNullable(this.encryptionKey);
    }
    /**
     * A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
     * 
    */
    public Optional<ExportResponse> export() {
        return Optional.ofNullable(this.export);
    }
    /**
     * A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
     * 
    */
    public Optional<String> incompleteBlobListUri() {
        return Optional.ofNullable(this.incompleteBlobListUri);
    }
    /**
     * The type of job
     * 
    */
    public Optional<String> jobType() {
        return Optional.ofNullable(this.jobType);
    }
    /**
     * Default value is Error. Indicates whether error logging or verbose logging will be enabled.
     * 
    */
    public Optional<String> logLevel() {
        return Optional.ofNullable(this.logLevel);
    }
    /**
     * Overall percentage completed for the job.
     * 
    */
    public Optional<Integer> percentComplete() {
        return Optional.ofNullable(this.percentComplete);
    }
    /**
     * Specifies the provisioning state of the job.
     * 
    */
    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }
    /**
     * Specifies the return address information for the job.
     * 
    */
    public Optional<ReturnAddressResponse> returnAddress() {
        return Optional.ofNullable(this.returnAddress);
    }
    /**
     * Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned.
     * 
    */
    public Optional<PackageInformationResponse> returnPackage() {
        return Optional.ofNullable(this.returnPackage);
    }
    /**
     * Specifies the return carrier and customer's account with the carrier.
     * 
    */
    public Optional<ReturnShippingResponse> returnShipping() {
        return Optional.ofNullable(this.returnShipping);
    }
    /**
     * Contains information about the Microsoft datacenter to which the drives should be shipped.
     * 
    */
    public Optional<ShippingInformationResponse> shippingInformation() {
        return Optional.ofNullable(this.shippingInformation);
    }
    /**
     * Current state of the job.
     * 
    */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * The resource identifier of the storage account where data will be imported to or exported from.
     * 
    */
    public Optional<String> storageAccountId() {
        return Optional.ofNullable(this.storageAccountId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean backupDriveManifest;
        private @Nullable Boolean cancelRequested;
        private @Nullable DeliveryPackageInformationResponse deliveryPackage;
        private @Nullable String diagnosticsPath;
        private @Nullable List<DriveStatusResponse> driveList;
        private @Nullable EncryptionKeyDetailsResponse encryptionKey;
        private @Nullable ExportResponse export;
        private @Nullable String incompleteBlobListUri;
        private @Nullable String jobType;
        private @Nullable String logLevel;
        private @Nullable Integer percentComplete;
        private @Nullable String provisioningState;
        private @Nullable ReturnAddressResponse returnAddress;
        private @Nullable PackageInformationResponse returnPackage;
        private @Nullable ReturnShippingResponse returnShipping;
        private @Nullable ShippingInformationResponse shippingInformation;
        private @Nullable String state;
        private @Nullable String storageAccountId;

        public Builder() {
    	      // Empty
        }

        public Builder(JobDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupDriveManifest = defaults.backupDriveManifest;
    	      this.cancelRequested = defaults.cancelRequested;
    	      this.deliveryPackage = defaults.deliveryPackage;
    	      this.diagnosticsPath = defaults.diagnosticsPath;
    	      this.driveList = defaults.driveList;
    	      this.encryptionKey = defaults.encryptionKey;
    	      this.export = defaults.export;
    	      this.incompleteBlobListUri = defaults.incompleteBlobListUri;
    	      this.jobType = defaults.jobType;
    	      this.logLevel = defaults.logLevel;
    	      this.percentComplete = defaults.percentComplete;
    	      this.provisioningState = defaults.provisioningState;
    	      this.returnAddress = defaults.returnAddress;
    	      this.returnPackage = defaults.returnPackage;
    	      this.returnShipping = defaults.returnShipping;
    	      this.shippingInformation = defaults.shippingInformation;
    	      this.state = defaults.state;
    	      this.storageAccountId = defaults.storageAccountId;
        }

        public Builder backupDriveManifest(@Nullable Boolean backupDriveManifest) {
            this.backupDriveManifest = backupDriveManifest;
            return this;
        }
        public Builder cancelRequested(@Nullable Boolean cancelRequested) {
            this.cancelRequested = cancelRequested;
            return this;
        }
        public Builder deliveryPackage(@Nullable DeliveryPackageInformationResponse deliveryPackage) {
            this.deliveryPackage = deliveryPackage;
            return this;
        }
        public Builder diagnosticsPath(@Nullable String diagnosticsPath) {
            this.diagnosticsPath = diagnosticsPath;
            return this;
        }
        public Builder driveList(@Nullable List<DriveStatusResponse> driveList) {
            this.driveList = driveList;
            return this;
        }
        public Builder driveList(DriveStatusResponse... driveList) {
            return driveList(List.of(driveList));
        }
        public Builder encryptionKey(@Nullable EncryptionKeyDetailsResponse encryptionKey) {
            this.encryptionKey = encryptionKey;
            return this;
        }
        public Builder export(@Nullable ExportResponse export) {
            this.export = export;
            return this;
        }
        public Builder incompleteBlobListUri(@Nullable String incompleteBlobListUri) {
            this.incompleteBlobListUri = incompleteBlobListUri;
            return this;
        }
        public Builder jobType(@Nullable String jobType) {
            this.jobType = jobType;
            return this;
        }
        public Builder logLevel(@Nullable String logLevel) {
            this.logLevel = logLevel;
            return this;
        }
        public Builder percentComplete(@Nullable Integer percentComplete) {
            this.percentComplete = percentComplete;
            return this;
        }
        public Builder provisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        public Builder returnAddress(@Nullable ReturnAddressResponse returnAddress) {
            this.returnAddress = returnAddress;
            return this;
        }
        public Builder returnPackage(@Nullable PackageInformationResponse returnPackage) {
            this.returnPackage = returnPackage;
            return this;
        }
        public Builder returnShipping(@Nullable ReturnShippingResponse returnShipping) {
            this.returnShipping = returnShipping;
            return this;
        }
        public Builder shippingInformation(@Nullable ShippingInformationResponse shippingInformation) {
            this.shippingInformation = shippingInformation;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder storageAccountId(@Nullable String storageAccountId) {
            this.storageAccountId = storageAccountId;
            return this;
        }        public JobDetailsResponse build() {
            return new JobDetailsResponse(backupDriveManifest, cancelRequested, deliveryPackage, diagnosticsPath, driveList, encryptionKey, export, incompleteBlobListUri, jobType, logLevel, percentComplete, provisioningState, returnAddress, returnPackage, returnShipping, shippingInformation, state, storageAccountId);
        }
    }
}
