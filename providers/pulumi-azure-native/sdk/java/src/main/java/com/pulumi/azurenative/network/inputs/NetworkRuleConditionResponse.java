// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Rule condition of type network.
 * 
 */
public final class NetworkRuleConditionResponse extends com.pulumi.resources.InvokeArgs {

    public static final NetworkRuleConditionResponse Empty = new NetworkRuleConditionResponse();

    /**
     * Description of the rule condition.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * List of destination IP addresses or Service Tags.
     * 
     */
    @Import(name="destinationAddresses")
    private @Nullable List<String> destinationAddresses;

    public Optional<List<String>> destinationAddresses() {
        return Optional.ofNullable(this.destinationAddresses);
    }

    /**
     * List of destination IpGroups for this rule.
     * 
     */
    @Import(name="destinationIpGroups")
    private @Nullable List<String> destinationIpGroups;

    public Optional<List<String>> destinationIpGroups() {
        return Optional.ofNullable(this.destinationIpGroups);
    }

    /**
     * List of destination ports.
     * 
     */
    @Import(name="destinationPorts")
    private @Nullable List<String> destinationPorts;

    public Optional<List<String>> destinationPorts() {
        return Optional.ofNullable(this.destinationPorts);
    }

    /**
     * Array of FirewallPolicyRuleConditionNetworkProtocols.
     * 
     */
    @Import(name="ipProtocols")
    private @Nullable List<String> ipProtocols;

    public Optional<List<String>> ipProtocols() {
        return Optional.ofNullable(this.ipProtocols);
    }

    /**
     * Name of the rule condition.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Rule Condition Type.
     * Expected value is &#39;NetworkRuleCondition&#39;.
     * 
     */
    @Import(name="ruleConditionType", required=true)
    private String ruleConditionType;

    public String ruleConditionType() {
        return this.ruleConditionType;
    }

    /**
     * List of source IP addresses for this rule.
     * 
     */
    @Import(name="sourceAddresses")
    private @Nullable List<String> sourceAddresses;

    public Optional<List<String>> sourceAddresses() {
        return Optional.ofNullable(this.sourceAddresses);
    }

    /**
     * List of source IpGroups for this rule.
     * 
     */
    @Import(name="sourceIpGroups")
    private @Nullable List<String> sourceIpGroups;

    public Optional<List<String>> sourceIpGroups() {
        return Optional.ofNullable(this.sourceIpGroups);
    }

    private NetworkRuleConditionResponse() {}

    private NetworkRuleConditionResponse(NetworkRuleConditionResponse $) {
        this.description = $.description;
        this.destinationAddresses = $.destinationAddresses;
        this.destinationIpGroups = $.destinationIpGroups;
        this.destinationPorts = $.destinationPorts;
        this.ipProtocols = $.ipProtocols;
        this.name = $.name;
        this.ruleConditionType = $.ruleConditionType;
        this.sourceAddresses = $.sourceAddresses;
        this.sourceIpGroups = $.sourceIpGroups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkRuleConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkRuleConditionResponse $;

        public Builder() {
            $ = new NetworkRuleConditionResponse();
        }

        public Builder(NetworkRuleConditionResponse defaults) {
            $ = new NetworkRuleConditionResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder destinationAddresses(@Nullable List<String> destinationAddresses) {
            $.destinationAddresses = destinationAddresses;
            return this;
        }

        public Builder destinationAddresses(String... destinationAddresses) {
            return destinationAddresses(List.of(destinationAddresses));
        }

        public Builder destinationIpGroups(@Nullable List<String> destinationIpGroups) {
            $.destinationIpGroups = destinationIpGroups;
            return this;
        }

        public Builder destinationIpGroups(String... destinationIpGroups) {
            return destinationIpGroups(List.of(destinationIpGroups));
        }

        public Builder destinationPorts(@Nullable List<String> destinationPorts) {
            $.destinationPorts = destinationPorts;
            return this;
        }

        public Builder destinationPorts(String... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }

        public Builder ipProtocols(@Nullable List<String> ipProtocols) {
            $.ipProtocols = ipProtocols;
            return this;
        }

        public Builder ipProtocols(String... ipProtocols) {
            return ipProtocols(List.of(ipProtocols));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder ruleConditionType(String ruleConditionType) {
            $.ruleConditionType = ruleConditionType;
            return this;
        }

        public Builder sourceAddresses(@Nullable List<String> sourceAddresses) {
            $.sourceAddresses = sourceAddresses;
            return this;
        }

        public Builder sourceAddresses(String... sourceAddresses) {
            return sourceAddresses(List.of(sourceAddresses));
        }

        public Builder sourceIpGroups(@Nullable List<String> sourceIpGroups) {
            $.sourceIpGroups = sourceIpGroups;
            return this;
        }

        public Builder sourceIpGroups(String... sourceIpGroups) {
            return sourceIpGroups(List.of(sourceIpGroups));
        }

        public NetworkRuleConditionResponse build() {
            $.ruleConditionType = Codegen.stringProp("ruleConditionType").arg($.ruleConditionType).require();
            return $;
        }
    }

}
