// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * (Deprecated. Please use LogSettings) Log storage settings.
 * 
 */
public final class LogStorageSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final LogStorageSettingsResponse Empty = new LogStorageSettingsResponse();

    /**
     * Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).
     * 
     */
    @Import(name="enableReliableLogging")
    private @Nullable Object enableReliableLogging;

    /**
     * @return Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Object> enableReliableLogging() {
        return Optional.ofNullable(this.enableReliableLogging);
    }

    /**
     * Log storage linked service reference.
     * 
     */
    @Import(name="linkedServiceName", required=true)
    private LinkedServiceReferenceResponse linkedServiceName;

    /**
     * @return Log storage linked service reference.
     * 
     */
    public LinkedServiceReferenceResponse linkedServiceName() {
        return this.linkedServiceName;
    }

    /**
     * Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="logLevel")
    private @Nullable Object logLevel;

    /**
     * @return Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> logLevel() {
        return Optional.ofNullable(this.logLevel);
    }

    /**
     * The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="path")
    private @Nullable Object path;

    /**
     * @return The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> path() {
        return Optional.ofNullable(this.path);
    }

    private LogStorageSettingsResponse() {}

    private LogStorageSettingsResponse(LogStorageSettingsResponse $) {
        this.enableReliableLogging = $.enableReliableLogging;
        this.linkedServiceName = $.linkedServiceName;
        this.logLevel = $.logLevel;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogStorageSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogStorageSettingsResponse $;

        public Builder() {
            $ = new LogStorageSettingsResponse();
        }

        public Builder(LogStorageSettingsResponse defaults) {
            $ = new LogStorageSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableReliableLogging Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).
         * 
         * @return builder
         * 
         */
        public Builder enableReliableLogging(@Nullable Object enableReliableLogging) {
            $.enableReliableLogging = enableReliableLogging;
            return this;
        }

        /**
         * @param linkedServiceName Log storage linked service reference.
         * 
         * @return builder
         * 
         */
        public Builder linkedServiceName(LinkedServiceReferenceResponse linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        /**
         * @param logLevel Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder logLevel(@Nullable Object logLevel) {
            $.logLevel = logLevel;
            return this;
        }

        /**
         * @param path The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Object path) {
            $.path = path;
            return this;
        }

        public LogStorageSettingsResponse build() {
            $.linkedServiceName = Objects.requireNonNull($.linkedServiceName, "expected parameter 'linkedServiceName' to be non-null");
            return $;
        }
    }

}
