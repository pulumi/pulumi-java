// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.enums.IPAllocationMethod;
import com.pulumi.azurenative.network.enums.IPVersion;
import com.pulumi.azurenative.network.enums.PublicIPAddressMigrationPhase;
import com.pulumi.azurenative.network.inputs.DdosSettingsArgs;
import com.pulumi.azurenative.network.inputs.ExtendedLocationArgs;
import com.pulumi.azurenative.network.inputs.IpTagArgs;
import com.pulumi.azurenative.network.inputs.NatGatewayArgs;
import com.pulumi.azurenative.network.inputs.PublicIPAddressDnsSettingsArgs;
import com.pulumi.azurenative.network.inputs.PublicIPAddressSkuArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PublicIPAddressArgs extends com.pulumi.resources.ResourceArgs {

    public static final PublicIPAddressArgs Empty = new PublicIPAddressArgs();

    /**
     * The DDoS protection custom policy associated with the public IP address.
     * 
     */
    @Import(name="ddosSettings")
    private @Nullable Output<DdosSettingsArgs> ddosSettings;

    public Optional<Output<DdosSettingsArgs>> ddosSettings() {
        return Optional.ofNullable(this.ddosSettings);
    }

    /**
     * The FQDN of the DNS record associated with the public IP address.
     * 
     */
    @Import(name="dnsSettings")
    private @Nullable Output<PublicIPAddressDnsSettingsArgs> dnsSettings;

    public Optional<Output<PublicIPAddressDnsSettingsArgs>> dnsSettings() {
        return Optional.ofNullable(this.dnsSettings);
    }

    /**
     * The extended location of the public ip address.
     * 
     */
    @Import(name="extendedLocation")
    private @Nullable Output<ExtendedLocationArgs> extendedLocation;

    public Optional<Output<ExtendedLocationArgs>> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The idle timeout of the public IP address.
     * 
     */
    @Import(name="idleTimeoutInMinutes")
    private @Nullable Output<Integer> idleTimeoutInMinutes;

    public Optional<Output<Integer>> idleTimeoutInMinutes() {
        return Optional.ofNullable(this.idleTimeoutInMinutes);
    }

    /**
     * The IP address associated with the public IP address resource.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * The list of tags associated with the public IP address.
     * 
     */
    @Import(name="ipTags")
    private @Nullable Output<List<IpTagArgs>> ipTags;

    public Optional<Output<List<IpTagArgs>>> ipTags() {
        return Optional.ofNullable(this.ipTags);
    }

    /**
     * The linked public IP address of the public IP address resource.
     * 
     */
    @Import(name="linkedPublicIPAddress")
    private @Nullable Output<com.pulumi.azurenative.network.inputs.PublicIPAddressArgs> linkedPublicIPAddress;

    public Optional<Output<com.pulumi.azurenative.network.inputs.PublicIPAddressArgs>> linkedPublicIPAddress() {
        return Optional.ofNullable(this.linkedPublicIPAddress);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Migration phase of Public IP Address.
     * 
     */
    @Import(name="migrationPhase")
    private @Nullable Output<Either<String,PublicIPAddressMigrationPhase>> migrationPhase;

    public Optional<Output<Either<String,PublicIPAddressMigrationPhase>>> migrationPhase() {
        return Optional.ofNullable(this.migrationPhase);
    }

    /**
     * The NatGateway for the Public IP address.
     * 
     */
    @Import(name="natGateway")
    private @Nullable Output<NatGatewayArgs> natGateway;

    public Optional<Output<NatGatewayArgs>> natGateway() {
        return Optional.ofNullable(this.natGateway);
    }

    /**
     * The public IP address version.
     * 
     */
    @Import(name="publicIPAddressVersion")
    private @Nullable Output<Either<String,IPVersion>> publicIPAddressVersion;

    public Optional<Output<Either<String,IPVersion>>> publicIPAddressVersion() {
        return Optional.ofNullable(this.publicIPAddressVersion);
    }

    /**
     * The public IP address allocation method.
     * 
     */
    @Import(name="publicIPAllocationMethod")
    private @Nullable Output<Either<String,IPAllocationMethod>> publicIPAllocationMethod;

    public Optional<Output<Either<String,IPAllocationMethod>>> publicIPAllocationMethod() {
        return Optional.ofNullable(this.publicIPAllocationMethod);
    }

    /**
     * The Public IP Prefix this Public IP Address should be allocated from.
     * 
     */
    @Import(name="publicIPPrefix")
    private @Nullable Output<SubResourceArgs> publicIPPrefix;

    public Optional<Output<SubResourceArgs>> publicIPPrefix() {
        return Optional.ofNullable(this.publicIPPrefix);
    }

    /**
     * The name of the public IP address.
     * 
     */
    @Import(name="publicIpAddressName")
    private @Nullable Output<String> publicIpAddressName;

    public Optional<Output<String>> publicIpAddressName() {
        return Optional.ofNullable(this.publicIpAddressName);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The service public IP address of the public IP address resource.
     * 
     */
    @Import(name="servicePublicIPAddress")
    private @Nullable Output<com.pulumi.azurenative.network.inputs.PublicIPAddressArgs> servicePublicIPAddress;

    public Optional<Output<com.pulumi.azurenative.network.inputs.PublicIPAddressArgs>> servicePublicIPAddress() {
        return Optional.ofNullable(this.servicePublicIPAddress);
    }

    /**
     * The public IP address SKU.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<PublicIPAddressSkuArgs> sku;

    public Optional<Output<PublicIPAddressSkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A list of availability zones denoting the IP allocated for the resource needs to come from.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private PublicIPAddressArgs() {}

    private PublicIPAddressArgs(PublicIPAddressArgs $) {
        this.ddosSettings = $.ddosSettings;
        this.dnsSettings = $.dnsSettings;
        this.extendedLocation = $.extendedLocation;
        this.id = $.id;
        this.idleTimeoutInMinutes = $.idleTimeoutInMinutes;
        this.ipAddress = $.ipAddress;
        this.ipTags = $.ipTags;
        this.linkedPublicIPAddress = $.linkedPublicIPAddress;
        this.location = $.location;
        this.migrationPhase = $.migrationPhase;
        this.natGateway = $.natGateway;
        this.publicIPAddressVersion = $.publicIPAddressVersion;
        this.publicIPAllocationMethod = $.publicIPAllocationMethod;
        this.publicIPPrefix = $.publicIPPrefix;
        this.publicIpAddressName = $.publicIpAddressName;
        this.resourceGroupName = $.resourceGroupName;
        this.servicePublicIPAddress = $.servicePublicIPAddress;
        this.sku = $.sku;
        this.tags = $.tags;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicIPAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicIPAddressArgs $;

        public Builder() {
            $ = new PublicIPAddressArgs();
        }

        public Builder(PublicIPAddressArgs defaults) {
            $ = new PublicIPAddressArgs(Objects.requireNonNull(defaults));
        }

        public Builder ddosSettings(@Nullable Output<DdosSettingsArgs> ddosSettings) {
            $.ddosSettings = ddosSettings;
            return this;
        }

        public Builder ddosSettings(DdosSettingsArgs ddosSettings) {
            return ddosSettings(Output.of(ddosSettings));
        }

        public Builder dnsSettings(@Nullable Output<PublicIPAddressDnsSettingsArgs> dnsSettings) {
            $.dnsSettings = dnsSettings;
            return this;
        }

        public Builder dnsSettings(PublicIPAddressDnsSettingsArgs dnsSettings) {
            return dnsSettings(Output.of(dnsSettings));
        }

        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            $.extendedLocation = extendedLocation;
            return this;
        }

        public Builder extendedLocation(ExtendedLocationArgs extendedLocation) {
            return extendedLocation(Output.of(extendedLocation));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder idleTimeoutInMinutes(@Nullable Output<Integer> idleTimeoutInMinutes) {
            $.idleTimeoutInMinutes = idleTimeoutInMinutes;
            return this;
        }

        public Builder idleTimeoutInMinutes(Integer idleTimeoutInMinutes) {
            return idleTimeoutInMinutes(Output.of(idleTimeoutInMinutes));
        }

        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        public Builder ipTags(@Nullable Output<List<IpTagArgs>> ipTags) {
            $.ipTags = ipTags;
            return this;
        }

        public Builder ipTags(List<IpTagArgs> ipTags) {
            return ipTags(Output.of(ipTags));
        }

        public Builder ipTags(IpTagArgs... ipTags) {
            return ipTags(List.of(ipTags));
        }

        public Builder linkedPublicIPAddress(@Nullable Output<com.pulumi.azurenative.network.inputs.PublicIPAddressArgs> linkedPublicIPAddress) {
            $.linkedPublicIPAddress = linkedPublicIPAddress;
            return this;
        }

        public Builder linkedPublicIPAddress(com.pulumi.azurenative.network.inputs.PublicIPAddressArgs linkedPublicIPAddress) {
            return linkedPublicIPAddress(Output.of(linkedPublicIPAddress));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder migrationPhase(@Nullable Output<Either<String,PublicIPAddressMigrationPhase>> migrationPhase) {
            $.migrationPhase = migrationPhase;
            return this;
        }

        public Builder migrationPhase(Either<String,PublicIPAddressMigrationPhase> migrationPhase) {
            return migrationPhase(Output.of(migrationPhase));
        }

        public Builder migrationPhase(String migrationPhase) {
            return migrationPhase(Either.ofLeft(migrationPhase));
        }

        public Builder migrationPhase(PublicIPAddressMigrationPhase migrationPhase) {
            return migrationPhase(Either.ofRight(migrationPhase));
        }

        public Builder natGateway(@Nullable Output<NatGatewayArgs> natGateway) {
            $.natGateway = natGateway;
            return this;
        }

        public Builder natGateway(NatGatewayArgs natGateway) {
            return natGateway(Output.of(natGateway));
        }

        public Builder publicIPAddressVersion(@Nullable Output<Either<String,IPVersion>> publicIPAddressVersion) {
            $.publicIPAddressVersion = publicIPAddressVersion;
            return this;
        }

        public Builder publicIPAddressVersion(Either<String,IPVersion> publicIPAddressVersion) {
            return publicIPAddressVersion(Output.of(publicIPAddressVersion));
        }

        public Builder publicIPAddressVersion(String publicIPAddressVersion) {
            return publicIPAddressVersion(Either.ofLeft(publicIPAddressVersion));
        }

        public Builder publicIPAddressVersion(IPVersion publicIPAddressVersion) {
            return publicIPAddressVersion(Either.ofRight(publicIPAddressVersion));
        }

        public Builder publicIPAllocationMethod(@Nullable Output<Either<String,IPAllocationMethod>> publicIPAllocationMethod) {
            $.publicIPAllocationMethod = publicIPAllocationMethod;
            return this;
        }

        public Builder publicIPAllocationMethod(Either<String,IPAllocationMethod> publicIPAllocationMethod) {
            return publicIPAllocationMethod(Output.of(publicIPAllocationMethod));
        }

        public Builder publicIPAllocationMethod(String publicIPAllocationMethod) {
            return publicIPAllocationMethod(Either.ofLeft(publicIPAllocationMethod));
        }

        public Builder publicIPAllocationMethod(IPAllocationMethod publicIPAllocationMethod) {
            return publicIPAllocationMethod(Either.ofRight(publicIPAllocationMethod));
        }

        public Builder publicIPPrefix(@Nullable Output<SubResourceArgs> publicIPPrefix) {
            $.publicIPPrefix = publicIPPrefix;
            return this;
        }

        public Builder publicIPPrefix(SubResourceArgs publicIPPrefix) {
            return publicIPPrefix(Output.of(publicIPPrefix));
        }

        public Builder publicIpAddressName(@Nullable Output<String> publicIpAddressName) {
            $.publicIpAddressName = publicIpAddressName;
            return this;
        }

        public Builder publicIpAddressName(String publicIpAddressName) {
            return publicIpAddressName(Output.of(publicIpAddressName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder servicePublicIPAddress(@Nullable Output<com.pulumi.azurenative.network.inputs.PublicIPAddressArgs> servicePublicIPAddress) {
            $.servicePublicIPAddress = servicePublicIPAddress;
            return this;
        }

        public Builder servicePublicIPAddress(com.pulumi.azurenative.network.inputs.PublicIPAddressArgs servicePublicIPAddress) {
            return servicePublicIPAddress(Output.of(servicePublicIPAddress));
        }

        public Builder sku(@Nullable Output<PublicIPAddressSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(PublicIPAddressSkuArgs sku) {
            return sku(Output.of(sku));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public PublicIPAddressArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
