// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.netapp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubvolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubvolumeArgs Empty = new SubvolumeArgs();

    /**
     * The name of the NetApp account
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The name of the NetApp account
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * parent path to the subvolume
     * 
     */
    @Import(name="parentPath")
    private @Nullable Output<String> parentPath;

    /**
     * @return parent path to the subvolume
     * 
     */
    public Optional<Output<String>> parentPath() {
        return Optional.ofNullable(this.parentPath);
    }

    /**
     * Path to the subvolume
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Path to the subvolume
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * The name of the capacity pool
     * 
     */
    @Import(name="poolName", required=true)
    private Output<String> poolName;

    /**
     * @return The name of the capacity pool
     * 
     */
    public Output<String> poolName() {
        return this.poolName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Truncate subvolume to the provided size in bytes
     * 
     */
    @Import(name="size")
    private @Nullable Output<Double> size;

    /**
     * @return Truncate subvolume to the provided size in bytes
     * 
     */
    public Optional<Output<Double>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * The name of the subvolume.
     * 
     */
    @Import(name="subvolumeName")
    private @Nullable Output<String> subvolumeName;

    /**
     * @return The name of the subvolume.
     * 
     */
    public Optional<Output<String>> subvolumeName() {
        return Optional.ofNullable(this.subvolumeName);
    }

    /**
     * The name of the volume
     * 
     */
    @Import(name="volumeName", required=true)
    private Output<String> volumeName;

    /**
     * @return The name of the volume
     * 
     */
    public Output<String> volumeName() {
        return this.volumeName;
    }

    private SubvolumeArgs() {}

    private SubvolumeArgs(SubvolumeArgs $) {
        this.accountName = $.accountName;
        this.parentPath = $.parentPath;
        this.path = $.path;
        this.poolName = $.poolName;
        this.resourceGroupName = $.resourceGroupName;
        this.size = $.size;
        this.subvolumeName = $.subvolumeName;
        this.volumeName = $.volumeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubvolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubvolumeArgs $;

        public Builder() {
            $ = new SubvolumeArgs();
        }

        public Builder(SubvolumeArgs defaults) {
            $ = new SubvolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The name of the NetApp account
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The name of the NetApp account
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param parentPath parent path to the subvolume
         * 
         * @return builder
         * 
         */
        public Builder parentPath(@Nullable Output<String> parentPath) {
            $.parentPath = parentPath;
            return this;
        }

        /**
         * @param parentPath parent path to the subvolume
         * 
         * @return builder
         * 
         */
        public Builder parentPath(String parentPath) {
            return parentPath(Output.of(parentPath));
        }

        /**
         * @param path Path to the subvolume
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path to the subvolume
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param poolName The name of the capacity pool
         * 
         * @return builder
         * 
         */
        public Builder poolName(Output<String> poolName) {
            $.poolName = poolName;
            return this;
        }

        /**
         * @param poolName The name of the capacity pool
         * 
         * @return builder
         * 
         */
        public Builder poolName(String poolName) {
            return poolName(Output.of(poolName));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param size Truncate subvolume to the provided size in bytes
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<Double> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size Truncate subvolume to the provided size in bytes
         * 
         * @return builder
         * 
         */
        public Builder size(Double size) {
            return size(Output.of(size));
        }

        /**
         * @param subvolumeName The name of the subvolume.
         * 
         * @return builder
         * 
         */
        public Builder subvolumeName(@Nullable Output<String> subvolumeName) {
            $.subvolumeName = subvolumeName;
            return this;
        }

        /**
         * @param subvolumeName The name of the subvolume.
         * 
         * @return builder
         * 
         */
        public Builder subvolumeName(String subvolumeName) {
            return subvolumeName(Output.of(subvolumeName));
        }

        /**
         * @param volumeName The name of the volume
         * 
         * @return builder
         * 
         */
        public Builder volumeName(Output<String> volumeName) {
            $.volumeName = volumeName;
            return this;
        }

        /**
         * @param volumeName The name of the volume
         * 
         * @return builder
         * 
         */
        public Builder volumeName(String volumeName) {
            return volumeName(Output.of(volumeName));
        }

        public SubvolumeArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.poolName = Objects.requireNonNull($.poolName, "expected parameter 'poolName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.volumeName = Objects.requireNonNull($.volumeName, "expected parameter 'volumeName' to be non-null");
            return $;
        }
    }

}
