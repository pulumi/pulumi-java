// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.inputs;

import com.pulumi.azurenative.apimanagement.enums.SkuType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * API Management service resource SKU properties.
 * 
 */
public final class ApiManagementServiceSkuPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiManagementServiceSkuPropertiesArgs Empty = new ApiManagementServiceSkuPropertiesArgs();

    /**
     * Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
     * 
     */
    @Import(name="capacity", required=true)
    private Output<Integer> capacity;

    /**
     * @return Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
     * 
     */
    public Output<Integer> capacity() {
        return this.capacity;
    }

    /**
     * Name of the Sku.
     * 
     */
    @Import(name="name", required=true)
    private Output<Either<String,SkuType>> name;

    /**
     * @return Name of the Sku.
     * 
     */
    public Output<Either<String,SkuType>> name() {
        return this.name;
    }

    private ApiManagementServiceSkuPropertiesArgs() {}

    private ApiManagementServiceSkuPropertiesArgs(ApiManagementServiceSkuPropertiesArgs $) {
        this.capacity = $.capacity;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiManagementServiceSkuPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiManagementServiceSkuPropertiesArgs $;

        public Builder() {
            $ = new ApiManagementServiceSkuPropertiesArgs();
        }

        public Builder(ApiManagementServiceSkuPropertiesArgs defaults) {
            $ = new ApiManagementServiceSkuPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacity Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
         * 
         * @return builder
         * 
         */
        public Builder capacity(Output<Integer> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
         * 
         * @return builder
         * 
         */
        public Builder capacity(Integer capacity) {
            return capacity(Output.of(capacity));
        }

        /**
         * @param name Name of the Sku.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<Either<String,SkuType>> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Sku.
         * 
         * @return builder
         * 
         */
        public Builder name(Either<String,SkuType> name) {
            return name(Output.of(name));
        }

        /**
         * @param name Name of the Sku.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Either.ofLeft(name));
        }

        /**
         * @param name Name of the Sku.
         * 
         * @return builder
         * 
         */
        public Builder name(SkuType name) {
            return name(Either.ofRight(name));
        }

        public ApiManagementServiceSkuPropertiesArgs build() {
            $.capacity = Objects.requireNonNull($.capacity, "expected parameter 'capacity' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
