// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Container identity information
 * 
 */
public final class ContainerIdentityInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContainerIdentityInfoResponse Empty = new ContainerIdentityInfoResponse();

    /**
     * Protection container identity - AAD Tenant
     * 
     */
    @Import(name="aadTenantId")
    private @Nullable String aadTenantId;

    /**
     * @return Protection container identity - AAD Tenant
     * 
     */
    public Optional<String> aadTenantId() {
        return Optional.ofNullable(this.aadTenantId);
    }

    /**
     * Protection container identity - Audience
     * 
     */
    @Import(name="audience")
    private @Nullable String audience;

    /**
     * @return Protection container identity - Audience
     * 
     */
    public Optional<String> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * Protection container identity - AAD Service Principal
     * 
     */
    @Import(name="servicePrincipalClientId")
    private @Nullable String servicePrincipalClientId;

    /**
     * @return Protection container identity - AAD Service Principal
     * 
     */
    public Optional<String> servicePrincipalClientId() {
        return Optional.ofNullable(this.servicePrincipalClientId);
    }

    /**
     * Unique name of the container
     * 
     */
    @Import(name="uniqueName")
    private @Nullable String uniqueName;

    /**
     * @return Unique name of the container
     * 
     */
    public Optional<String> uniqueName() {
        return Optional.ofNullable(this.uniqueName);
    }

    private ContainerIdentityInfoResponse() {}

    private ContainerIdentityInfoResponse(ContainerIdentityInfoResponse $) {
        this.aadTenantId = $.aadTenantId;
        this.audience = $.audience;
        this.servicePrincipalClientId = $.servicePrincipalClientId;
        this.uniqueName = $.uniqueName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerIdentityInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerIdentityInfoResponse $;

        public Builder() {
            $ = new ContainerIdentityInfoResponse();
        }

        public Builder(ContainerIdentityInfoResponse defaults) {
            $ = new ContainerIdentityInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param aadTenantId Protection container identity - AAD Tenant
         * 
         * @return builder
         * 
         */
        public Builder aadTenantId(@Nullable String aadTenantId) {
            $.aadTenantId = aadTenantId;
            return this;
        }

        /**
         * @param audience Protection container identity - Audience
         * 
         * @return builder
         * 
         */
        public Builder audience(@Nullable String audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param servicePrincipalClientId Protection container identity - AAD Service Principal
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalClientId(@Nullable String servicePrincipalClientId) {
            $.servicePrincipalClientId = servicePrincipalClientId;
            return this;
        }

        /**
         * @param uniqueName Unique name of the container
         * 
         * @return builder
         * 
         */
        public Builder uniqueName(@Nullable String uniqueName) {
            $.uniqueName = uniqueName;
            return this;
        }

        public ContainerIdentityInfoResponse build() {
            return $;
        }
    }

}
