// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.ServiceResponseBaseResponseError;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The response for an AKS variant.
 * 
 */
public final class AKSVariantResponseResponse extends com.pulumi.resources.InvokeArgs {

    public static final AKSVariantResponseResponse Empty = new AKSVariantResponseResponse();

    /**
     * The compute environment type for the service.
     * Expected value is 'Custom'.
     * 
     */
    @Import(name="computeType", required=true)
      private final String computeType;

    public String computeType() {
        return this.computeType;
    }

    /**
     * The deployment type for the service.
     * 
     */
    @Import(name="deploymentType")
      private final @Nullable String deploymentType;

    public Optional<String> deploymentType() {
        return this.deploymentType == null ? Optional.empty() : Optional.ofNullable(this.deploymentType);
    }

    /**
     * The service description.
     * 
     */
    @Import(name="description")
      private final @Nullable String description;

    public Optional<String> description() {
        return this.description == null ? Optional.empty() : Optional.ofNullable(this.description);
    }

    /**
     * The error details.
     * 
     */
    @Import(name="error", required=true)
      private final ServiceResponseBaseResponseError error;

    public ServiceResponseBaseResponseError error() {
        return this.error;
    }

    /**
     * Is this the default variant.
     * 
     */
    @Import(name="isDefault")
      private final @Nullable Boolean isDefault;

    public Optional<Boolean> isDefault() {
        return this.isDefault == null ? Optional.empty() : Optional.ofNullable(this.isDefault);
    }

    /**
     * The service tag dictionary. Tags are mutable.
     * 
     */
    @Import(name="kvTags")
      private final @Nullable Map<String,String> kvTags;

    public Map<String,String> kvTags() {
        return this.kvTags == null ? Map.of() : this.kvTags;
    }

    /**
     * The service property dictionary. Properties are immutable.
     * 
     */
    @Import(name="properties")
      private final @Nullable Map<String,String> properties;

    public Map<String,String> properties() {
        return this.properties == null ? Map.of() : this.properties;
    }

    /**
     * The current state of the service.
     * 
     */
    @Import(name="state", required=true)
      private final String state;

    public String state() {
        return this.state;
    }

    /**
     * The amount of traffic variant receives.
     * 
     */
    @Import(name="trafficPercentile")
      private final @Nullable Double trafficPercentile;

    public Optional<Double> trafficPercentile() {
        return this.trafficPercentile == null ? Optional.empty() : Optional.ofNullable(this.trafficPercentile);
    }

    /**
     * The type of the variant.
     * 
     */
    @Import(name="type")
      private final @Nullable String type;

    public Optional<String> type() {
        return this.type == null ? Optional.empty() : Optional.ofNullable(this.type);
    }

    public AKSVariantResponseResponse(
        String computeType,
        @Nullable String deploymentType,
        @Nullable String description,
        ServiceResponseBaseResponseError error,
        @Nullable Boolean isDefault,
        @Nullable Map<String,String> kvTags,
        @Nullable Map<String,String> properties,
        String state,
        @Nullable Double trafficPercentile,
        @Nullable String type) {
        this.computeType = Objects.requireNonNull(computeType, "expected parameter 'computeType' to be non-null");
        this.deploymentType = deploymentType;
        this.description = description;
        this.error = Objects.requireNonNull(error, "expected parameter 'error' to be non-null");
        this.isDefault = isDefault;
        this.kvTags = kvTags;
        this.properties = properties;
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
        this.trafficPercentile = trafficPercentile;
        this.type = type;
    }

    private AKSVariantResponseResponse() {
        this.computeType = null;
        this.deploymentType = null;
        this.description = null;
        this.error = null;
        this.isDefault = null;
        this.kvTags = Map.of();
        this.properties = Map.of();
        this.state = null;
        this.trafficPercentile = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AKSVariantResponseResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String computeType;
        private @Nullable String deploymentType;
        private @Nullable String description;
        private ServiceResponseBaseResponseError error;
        private @Nullable Boolean isDefault;
        private @Nullable Map<String,String> kvTags;
        private @Nullable Map<String,String> properties;
        private String state;
        private @Nullable Double trafficPercentile;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(AKSVariantResponseResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeType = defaults.computeType;
    	      this.deploymentType = defaults.deploymentType;
    	      this.description = defaults.description;
    	      this.error = defaults.error;
    	      this.isDefault = defaults.isDefault;
    	      this.kvTags = defaults.kvTags;
    	      this.properties = defaults.properties;
    	      this.state = defaults.state;
    	      this.trafficPercentile = defaults.trafficPercentile;
    	      this.type = defaults.type;
        }

        public Builder computeType(String computeType) {
            this.computeType = Objects.requireNonNull(computeType);
            return this;
        }
        public Builder deploymentType(@Nullable String deploymentType) {
            this.deploymentType = deploymentType;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder error(ServiceResponseBaseResponseError error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }
        public Builder isDefault(@Nullable Boolean isDefault) {
            this.isDefault = isDefault;
            return this;
        }
        public Builder kvTags(@Nullable Map<String,String> kvTags) {
            this.kvTags = kvTags;
            return this;
        }
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder trafficPercentile(@Nullable Double trafficPercentile) {
            this.trafficPercentile = trafficPercentile;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }        public AKSVariantResponseResponse build() {
            return new AKSVariantResponseResponse(computeType, deploymentType, description, error, isDefault, kvTags, properties, state, trafficPercentile, type);
        }
    }
}
