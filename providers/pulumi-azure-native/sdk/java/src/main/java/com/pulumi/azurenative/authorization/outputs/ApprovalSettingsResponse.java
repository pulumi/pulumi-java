// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.azurenative.authorization.outputs.ApprovalStageResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApprovalSettingsResponse {
    /**
     * @return The type of rule
     * 
     */
    private final @Nullable String approvalMode;
    /**
     * @return The approval stages of the request.
     * 
     */
    private final @Nullable List<ApprovalStageResponse> approvalStages;
    /**
     * @return Determines whether approval is required or not.
     * 
     */
    private final @Nullable Boolean isApprovalRequired;
    /**
     * @return Determines whether approval is required for assignment extension.
     * 
     */
    private final @Nullable Boolean isApprovalRequiredForExtension;
    /**
     * @return Determine whether requestor justification is required.
     * 
     */
    private final @Nullable Boolean isRequestorJustificationRequired;

    @CustomType.Constructor
    private ApprovalSettingsResponse(
        @CustomType.Parameter("approvalMode") @Nullable String approvalMode,
        @CustomType.Parameter("approvalStages") @Nullable List<ApprovalStageResponse> approvalStages,
        @CustomType.Parameter("isApprovalRequired") @Nullable Boolean isApprovalRequired,
        @CustomType.Parameter("isApprovalRequiredForExtension") @Nullable Boolean isApprovalRequiredForExtension,
        @CustomType.Parameter("isRequestorJustificationRequired") @Nullable Boolean isRequestorJustificationRequired) {
        this.approvalMode = approvalMode;
        this.approvalStages = approvalStages;
        this.isApprovalRequired = isApprovalRequired;
        this.isApprovalRequiredForExtension = isApprovalRequiredForExtension;
        this.isRequestorJustificationRequired = isRequestorJustificationRequired;
    }

    /**
     * @return The type of rule
     * 
     */
    public Optional<String> approvalMode() {
        return Optional.ofNullable(this.approvalMode);
    }
    /**
     * @return The approval stages of the request.
     * 
     */
    public List<ApprovalStageResponse> approvalStages() {
        return this.approvalStages == null ? List.of() : this.approvalStages;
    }
    /**
     * @return Determines whether approval is required or not.
     * 
     */
    public Optional<Boolean> isApprovalRequired() {
        return Optional.ofNullable(this.isApprovalRequired);
    }
    /**
     * @return Determines whether approval is required for assignment extension.
     * 
     */
    public Optional<Boolean> isApprovalRequiredForExtension() {
        return Optional.ofNullable(this.isApprovalRequiredForExtension);
    }
    /**
     * @return Determine whether requestor justification is required.
     * 
     */
    public Optional<Boolean> isRequestorJustificationRequired() {
        return Optional.ofNullable(this.isRequestorJustificationRequired);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApprovalSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String approvalMode;
        private @Nullable List<ApprovalStageResponse> approvalStages;
        private @Nullable Boolean isApprovalRequired;
        private @Nullable Boolean isApprovalRequiredForExtension;
        private @Nullable Boolean isRequestorJustificationRequired;

        public Builder() {
    	      // Empty
        }

        public Builder(ApprovalSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approvalMode = defaults.approvalMode;
    	      this.approvalStages = defaults.approvalStages;
    	      this.isApprovalRequired = defaults.isApprovalRequired;
    	      this.isApprovalRequiredForExtension = defaults.isApprovalRequiredForExtension;
    	      this.isRequestorJustificationRequired = defaults.isRequestorJustificationRequired;
        }

        public Builder approvalMode(@Nullable String approvalMode) {
            this.approvalMode = approvalMode;
            return this;
        }
        public Builder approvalStages(@Nullable List<ApprovalStageResponse> approvalStages) {
            this.approvalStages = approvalStages;
            return this;
        }
        public Builder approvalStages(ApprovalStageResponse... approvalStages) {
            return approvalStages(List.of(approvalStages));
        }
        public Builder isApprovalRequired(@Nullable Boolean isApprovalRequired) {
            this.isApprovalRequired = isApprovalRequired;
            return this;
        }
        public Builder isApprovalRequiredForExtension(@Nullable Boolean isApprovalRequiredForExtension) {
            this.isApprovalRequiredForExtension = isApprovalRequiredForExtension;
            return this;
        }
        public Builder isRequestorJustificationRequired(@Nullable Boolean isRequestorJustificationRequired) {
            this.isRequestorJustificationRequired = isRequestorJustificationRequired;
            return this;
        }        public ApprovalSettingsResponse build() {
            return new ApprovalSettingsResponse(approvalMode, approvalStages, isApprovalRequired, isApprovalRequiredForExtension, isRequestorJustificationRequired);
        }
    }
}
