// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.ConfigurationType;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListNetworkManagerDeploymentStatusPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListNetworkManagerDeploymentStatusPlainArgs Empty = new ListNetworkManagerDeploymentStatusPlainArgs();

    /**
     * List of deployment types.
     * 
     */
    @Import(name="deploymentTypes")
    private @Nullable List<Either<String,ConfigurationType>> deploymentTypes;

    /**
     * @return List of deployment types.
     * 
     */
    public Optional<List<Either<String,ConfigurationType>>> deploymentTypes() {
        return Optional.ofNullable(this.deploymentTypes);
    }

    /**
     * The name of the network manager.
     * 
     */
    @Import(name="networkManagerName", required=true)
    private String networkManagerName;

    /**
     * @return The name of the network manager.
     * 
     */
    public String networkManagerName() {
        return this.networkManagerName;
    }

    /**
     * List of locations.
     * 
     */
    @Import(name="regions")
    private @Nullable List<String> regions;

    /**
     * @return List of locations.
     * 
     */
    public Optional<List<String>> regions() {
        return Optional.ofNullable(this.regions);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
     * 
     */
    @Import(name="skipToken")
    private @Nullable String skipToken;

    /**
     * @return Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
     * 
     */
    public Optional<String> skipToken() {
        return Optional.ofNullable(this.skipToken);
    }

    private ListNetworkManagerDeploymentStatusPlainArgs() {}

    private ListNetworkManagerDeploymentStatusPlainArgs(ListNetworkManagerDeploymentStatusPlainArgs $) {
        this.deploymentTypes = $.deploymentTypes;
        this.networkManagerName = $.networkManagerName;
        this.regions = $.regions;
        this.resourceGroupName = $.resourceGroupName;
        this.skipToken = $.skipToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListNetworkManagerDeploymentStatusPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListNetworkManagerDeploymentStatusPlainArgs $;

        public Builder() {
            $ = new ListNetworkManagerDeploymentStatusPlainArgs();
        }

        public Builder(ListNetworkManagerDeploymentStatusPlainArgs defaults) {
            $ = new ListNetworkManagerDeploymentStatusPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentTypes List of deployment types.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTypes(@Nullable List<Either<String,ConfigurationType>> deploymentTypes) {
            $.deploymentTypes = deploymentTypes;
            return this;
        }

        /**
         * @param deploymentTypes List of deployment types.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTypes(Either<String,ConfigurationType>... deploymentTypes) {
            return deploymentTypes(List.of(deploymentTypes));
        }

        /**
         * @param networkManagerName The name of the network manager.
         * 
         * @return builder
         * 
         */
        public Builder networkManagerName(String networkManagerName) {
            $.networkManagerName = networkManagerName;
            return this;
        }

        /**
         * @param regions List of locations.
         * 
         * @return builder
         * 
         */
        public Builder regions(@Nullable List<String> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions List of locations.
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param skipToken Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
         * 
         * @return builder
         * 
         */
        public Builder skipToken(@Nullable String skipToken) {
            $.skipToken = skipToken;
            return this;
        }

        public ListNetworkManagerDeploymentStatusPlainArgs build() {
            $.networkManagerName = Objects.requireNonNull($.networkManagerName, "expected parameter 'networkManagerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
