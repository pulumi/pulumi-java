// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The parameters to provide for the Microsoft Teams channel.
 * 
 */
public final class SkypeChannelPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final SkypeChannelPropertiesArgs Empty = new SkypeChannelPropertiesArgs();

    /**
     * Calling web hook for Skype channel
     * 
     */
    @Import(name="callingWebHook")
    private @Nullable Output<String> callingWebHook;

    /**
     * @return Calling web hook for Skype channel
     * 
     */
    public Optional<Output<String>> callingWebHook() {
        return Optional.ofNullable(this.callingWebHook);
    }

    /**
     * Enable calling for Skype channel
     * 
     */
    @Import(name="enableCalling")
    private @Nullable Output<Boolean> enableCalling;

    /**
     * @return Enable calling for Skype channel
     * 
     */
    public Optional<Output<Boolean>> enableCalling() {
        return Optional.ofNullable(this.enableCalling);
    }

    /**
     * Enable groups for Skype channel
     * 
     */
    @Import(name="enableGroups")
    private @Nullable Output<Boolean> enableGroups;

    /**
     * @return Enable groups for Skype channel
     * 
     */
    public Optional<Output<Boolean>> enableGroups() {
        return Optional.ofNullable(this.enableGroups);
    }

    /**
     * Enable media cards for Skype channel
     * 
     */
    @Import(name="enableMediaCards")
    private @Nullable Output<Boolean> enableMediaCards;

    /**
     * @return Enable media cards for Skype channel
     * 
     */
    public Optional<Output<Boolean>> enableMediaCards() {
        return Optional.ofNullable(this.enableMediaCards);
    }

    /**
     * Enable messaging for Skype channel
     * 
     */
    @Import(name="enableMessaging")
    private @Nullable Output<Boolean> enableMessaging;

    /**
     * @return Enable messaging for Skype channel
     * 
     */
    public Optional<Output<Boolean>> enableMessaging() {
        return Optional.ofNullable(this.enableMessaging);
    }

    /**
     * Enable screen sharing for Skype channel
     * 
     */
    @Import(name="enableScreenSharing")
    private @Nullable Output<Boolean> enableScreenSharing;

    /**
     * @return Enable screen sharing for Skype channel
     * 
     */
    public Optional<Output<Boolean>> enableScreenSharing() {
        return Optional.ofNullable(this.enableScreenSharing);
    }

    /**
     * Enable video for Skype channel
     * 
     */
    @Import(name="enableVideo")
    private @Nullable Output<Boolean> enableVideo;

    /**
     * @return Enable video for Skype channel
     * 
     */
    public Optional<Output<Boolean>> enableVideo() {
        return Optional.ofNullable(this.enableVideo);
    }

    /**
     * Group mode for Skype channel
     * 
     */
    @Import(name="groupsMode")
    private @Nullable Output<String> groupsMode;

    /**
     * @return Group mode for Skype channel
     * 
     */
    public Optional<Output<String>> groupsMode() {
        return Optional.ofNullable(this.groupsMode);
    }

    /**
     * Incoming call route for Skype channel
     * 
     */
    @Import(name="incomingCallRoute")
    private @Nullable Output<String> incomingCallRoute;

    /**
     * @return Incoming call route for Skype channel
     * 
     */
    public Optional<Output<String>> incomingCallRoute() {
        return Optional.ofNullable(this.incomingCallRoute);
    }

    /**
     * Whether this channel is enabled for the bot
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return Whether this channel is enabled for the bot
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    private SkypeChannelPropertiesArgs() {}

    private SkypeChannelPropertiesArgs(SkypeChannelPropertiesArgs $) {
        this.callingWebHook = $.callingWebHook;
        this.enableCalling = $.enableCalling;
        this.enableGroups = $.enableGroups;
        this.enableMediaCards = $.enableMediaCards;
        this.enableMessaging = $.enableMessaging;
        this.enableScreenSharing = $.enableScreenSharing;
        this.enableVideo = $.enableVideo;
        this.groupsMode = $.groupsMode;
        this.incomingCallRoute = $.incomingCallRoute;
        this.isEnabled = $.isEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SkypeChannelPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SkypeChannelPropertiesArgs $;

        public Builder() {
            $ = new SkypeChannelPropertiesArgs();
        }

        public Builder(SkypeChannelPropertiesArgs defaults) {
            $ = new SkypeChannelPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param callingWebHook Calling web hook for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder callingWebHook(@Nullable Output<String> callingWebHook) {
            $.callingWebHook = callingWebHook;
            return this;
        }

        /**
         * @param callingWebHook Calling web hook for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder callingWebHook(String callingWebHook) {
            return callingWebHook(Output.of(callingWebHook));
        }

        /**
         * @param enableCalling Enable calling for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableCalling(@Nullable Output<Boolean> enableCalling) {
            $.enableCalling = enableCalling;
            return this;
        }

        /**
         * @param enableCalling Enable calling for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableCalling(Boolean enableCalling) {
            return enableCalling(Output.of(enableCalling));
        }

        /**
         * @param enableGroups Enable groups for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableGroups(@Nullable Output<Boolean> enableGroups) {
            $.enableGroups = enableGroups;
            return this;
        }

        /**
         * @param enableGroups Enable groups for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableGroups(Boolean enableGroups) {
            return enableGroups(Output.of(enableGroups));
        }

        /**
         * @param enableMediaCards Enable media cards for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableMediaCards(@Nullable Output<Boolean> enableMediaCards) {
            $.enableMediaCards = enableMediaCards;
            return this;
        }

        /**
         * @param enableMediaCards Enable media cards for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableMediaCards(Boolean enableMediaCards) {
            return enableMediaCards(Output.of(enableMediaCards));
        }

        /**
         * @param enableMessaging Enable messaging for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableMessaging(@Nullable Output<Boolean> enableMessaging) {
            $.enableMessaging = enableMessaging;
            return this;
        }

        /**
         * @param enableMessaging Enable messaging for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableMessaging(Boolean enableMessaging) {
            return enableMessaging(Output.of(enableMessaging));
        }

        /**
         * @param enableScreenSharing Enable screen sharing for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableScreenSharing(@Nullable Output<Boolean> enableScreenSharing) {
            $.enableScreenSharing = enableScreenSharing;
            return this;
        }

        /**
         * @param enableScreenSharing Enable screen sharing for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableScreenSharing(Boolean enableScreenSharing) {
            return enableScreenSharing(Output.of(enableScreenSharing));
        }

        /**
         * @param enableVideo Enable video for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableVideo(@Nullable Output<Boolean> enableVideo) {
            $.enableVideo = enableVideo;
            return this;
        }

        /**
         * @param enableVideo Enable video for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder enableVideo(Boolean enableVideo) {
            return enableVideo(Output.of(enableVideo));
        }

        /**
         * @param groupsMode Group mode for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder groupsMode(@Nullable Output<String> groupsMode) {
            $.groupsMode = groupsMode;
            return this;
        }

        /**
         * @param groupsMode Group mode for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder groupsMode(String groupsMode) {
            return groupsMode(Output.of(groupsMode));
        }

        /**
         * @param incomingCallRoute Incoming call route for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder incomingCallRoute(@Nullable Output<String> incomingCallRoute) {
            $.incomingCallRoute = incomingCallRoute;
            return this;
        }

        /**
         * @param incomingCallRoute Incoming call route for Skype channel
         * 
         * @return builder
         * 
         */
        public Builder incomingCallRoute(String incomingCallRoute) {
            return incomingCallRoute(Output.of(incomingCallRoute));
        }

        /**
         * @param isEnabled Whether this channel is enabled for the bot
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Whether this channel is enabled for the bot
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        public SkypeChannelPropertiesArgs build() {
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            return $;
        }
    }

}
