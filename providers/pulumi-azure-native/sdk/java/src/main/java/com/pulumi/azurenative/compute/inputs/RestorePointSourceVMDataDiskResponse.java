// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.ApiEntityReferenceResponse;
import com.pulumi.azurenative.compute.inputs.ManagedDiskParametersResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes a data disk.
 * 
 */
public final class RestorePointSourceVMDataDiskResponse extends com.pulumi.resources.InvokeArgs {

    public static final RestorePointSourceVMDataDiskResponse Empty = new RestorePointSourceVMDataDiskResponse();

    /**
     * Gets the caching type.
     * 
     */
    @Import(name="caching")
    private @Nullable String caching;

    public Optional<String> caching() {
        return Optional.ofNullable(this.caching);
    }

    /**
     * Gets the disk restore point Id.
     * 
     */
    @Import(name="diskRestorePoint")
    private @Nullable ApiEntityReferenceResponse diskRestorePoint;

    public Optional<ApiEntityReferenceResponse> diskRestorePoint() {
        return Optional.ofNullable(this.diskRestorePoint);
    }

    /**
     * Gets the initial disk size in GB for blank data disks, and the new desired size for existing OS and Data disks.
     * 
     */
    @Import(name="diskSizeGB")
    private @Nullable Integer diskSizeGB;

    public Optional<Integer> diskSizeGB() {
        return Optional.ofNullable(this.diskSizeGB);
    }

    /**
     * Gets the logical unit number.
     * 
     */
    @Import(name="lun")
    private @Nullable Integer lun;

    public Optional<Integer> lun() {
        return Optional.ofNullable(this.lun);
    }

    /**
     * Gets the managed disk details
     * 
     */
    @Import(name="managedDisk")
    private @Nullable ManagedDiskParametersResponse managedDisk;

    public Optional<ManagedDiskParametersResponse> managedDisk() {
        return Optional.ofNullable(this.managedDisk);
    }

    /**
     * Gets the disk name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private RestorePointSourceVMDataDiskResponse() {}

    private RestorePointSourceVMDataDiskResponse(RestorePointSourceVMDataDiskResponse $) {
        this.caching = $.caching;
        this.diskRestorePoint = $.diskRestorePoint;
        this.diskSizeGB = $.diskSizeGB;
        this.lun = $.lun;
        this.managedDisk = $.managedDisk;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RestorePointSourceVMDataDiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RestorePointSourceVMDataDiskResponse $;

        public Builder() {
            $ = new RestorePointSourceVMDataDiskResponse();
        }

        public Builder(RestorePointSourceVMDataDiskResponse defaults) {
            $ = new RestorePointSourceVMDataDiskResponse(Objects.requireNonNull(defaults));
        }

        public Builder caching(@Nullable String caching) {
            $.caching = caching;
            return this;
        }

        public Builder diskRestorePoint(@Nullable ApiEntityReferenceResponse diskRestorePoint) {
            $.diskRestorePoint = diskRestorePoint;
            return this;
        }

        public Builder diskSizeGB(@Nullable Integer diskSizeGB) {
            $.diskSizeGB = diskSizeGB;
            return this;
        }

        public Builder lun(@Nullable Integer lun) {
            $.lun = lun;
            return this;
        }

        public Builder managedDisk(@Nullable ManagedDiskParametersResponse managedDisk) {
            $.managedDisk = managedDisk;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public RestorePointSourceVMDataDiskResponse build() {
            return $;
        }
    }

}
