// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.LinuxPatchSettingsArgs;
import com.pulumi.azurenative.compute.inputs.SshConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
 * 
 */
public final class LinuxConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinuxConfigurationArgs Empty = new LinuxConfigurationArgs();

    /**
     * Specifies whether password authentication should be disabled.
     * 
     */
    @Import(name="disablePasswordAuthentication")
      private final @Nullable Output<Boolean> disablePasswordAuthentication;

    public Output<Boolean> disablePasswordAuthentication() {
        return this.disablePasswordAuthentication == null ? Codegen.empty() : this.disablePasswordAuthentication;
    }

    /**
     * [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
     * 
     */
    @Import(name="patchSettings")
      private final @Nullable Output<LinuxPatchSettingsArgs> patchSettings;

    public Output<LinuxPatchSettingsArgs> patchSettings() {
        return this.patchSettings == null ? Codegen.empty() : this.patchSettings;
    }

    /**
     * Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
     * 
     */
    @Import(name="provisionVMAgent")
      private final @Nullable Output<Boolean> provisionVMAgent;

    public Output<Boolean> provisionVMAgent() {
        return this.provisionVMAgent == null ? Codegen.empty() : this.provisionVMAgent;
    }

    /**
     * Specifies the ssh key configuration for a Linux OS.
     * 
     */
    @Import(name="ssh")
      private final @Nullable Output<SshConfigurationArgs> ssh;

    public Output<SshConfigurationArgs> ssh() {
        return this.ssh == null ? Codegen.empty() : this.ssh;
    }

    public LinuxConfigurationArgs(
        @Nullable Output<Boolean> disablePasswordAuthentication,
        @Nullable Output<LinuxPatchSettingsArgs> patchSettings,
        @Nullable Output<Boolean> provisionVMAgent,
        @Nullable Output<SshConfigurationArgs> ssh) {
        this.disablePasswordAuthentication = disablePasswordAuthentication;
        this.patchSettings = patchSettings;
        this.provisionVMAgent = provisionVMAgent;
        this.ssh = ssh;
    }

    private LinuxConfigurationArgs() {
        this.disablePasswordAuthentication = Codegen.empty();
        this.patchSettings = Codegen.empty();
        this.provisionVMAgent = Codegen.empty();
        this.ssh = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinuxConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> disablePasswordAuthentication;
        private @Nullable Output<LinuxPatchSettingsArgs> patchSettings;
        private @Nullable Output<Boolean> provisionVMAgent;
        private @Nullable Output<SshConfigurationArgs> ssh;

        public Builder() {
    	      // Empty
        }

        public Builder(LinuxConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disablePasswordAuthentication = defaults.disablePasswordAuthentication;
    	      this.patchSettings = defaults.patchSettings;
    	      this.provisionVMAgent = defaults.provisionVMAgent;
    	      this.ssh = defaults.ssh;
        }

        public Builder disablePasswordAuthentication(@Nullable Output<Boolean> disablePasswordAuthentication) {
            this.disablePasswordAuthentication = disablePasswordAuthentication;
            return this;
        }
        public Builder disablePasswordAuthentication(@Nullable Boolean disablePasswordAuthentication) {
            this.disablePasswordAuthentication = Codegen.ofNullable(disablePasswordAuthentication);
            return this;
        }
        public Builder patchSettings(@Nullable Output<LinuxPatchSettingsArgs> patchSettings) {
            this.patchSettings = patchSettings;
            return this;
        }
        public Builder patchSettings(@Nullable LinuxPatchSettingsArgs patchSettings) {
            this.patchSettings = Codegen.ofNullable(patchSettings);
            return this;
        }
        public Builder provisionVMAgent(@Nullable Output<Boolean> provisionVMAgent) {
            this.provisionVMAgent = provisionVMAgent;
            return this;
        }
        public Builder provisionVMAgent(@Nullable Boolean provisionVMAgent) {
            this.provisionVMAgent = Codegen.ofNullable(provisionVMAgent);
            return this;
        }
        public Builder ssh(@Nullable Output<SshConfigurationArgs> ssh) {
            this.ssh = ssh;
            return this;
        }
        public Builder ssh(@Nullable SshConfigurationArgs ssh) {
            this.ssh = Codegen.ofNullable(ssh);
            return this;
        }        public LinuxConfigurationArgs build() {
            return new LinuxConfigurationArgs(disablePasswordAuthentication, patchSettings, provisionVMAgent, ssh);
        }
    }
}
