// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automanage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetConfigurationProfileAssignmentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConfigurationProfileAssignmentArgs Empty = new GetConfigurationProfileAssignmentArgs();

    /**
     * The configuration profile assignment name.
     * 
     */
    @Import(name="configurationProfileAssignmentName", required=true)
    private Output<String> configurationProfileAssignmentName;

    /**
     * @return The configuration profile assignment name.
     * 
     */
    public Output<String> configurationProfileAssignmentName() {
        return this.configurationProfileAssignmentName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the virtual machine.
     * 
     */
    @Import(name="vmName", required=true)
    private Output<String> vmName;

    /**
     * @return The name of the virtual machine.
     * 
     */
    public Output<String> vmName() {
        return this.vmName;
    }

    private GetConfigurationProfileAssignmentArgs() {}

    private GetConfigurationProfileAssignmentArgs(GetConfigurationProfileAssignmentArgs $) {
        this.configurationProfileAssignmentName = $.configurationProfileAssignmentName;
        this.resourceGroupName = $.resourceGroupName;
        this.vmName = $.vmName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConfigurationProfileAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConfigurationProfileAssignmentArgs $;

        public Builder() {
            $ = new GetConfigurationProfileAssignmentArgs();
        }

        public Builder(GetConfigurationProfileAssignmentArgs defaults) {
            $ = new GetConfigurationProfileAssignmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationProfileAssignmentName The configuration profile assignment name.
         * 
         * @return builder
         * 
         */
        public Builder configurationProfileAssignmentName(Output<String> configurationProfileAssignmentName) {
            $.configurationProfileAssignmentName = configurationProfileAssignmentName;
            return this;
        }

        /**
         * @param configurationProfileAssignmentName The configuration profile assignment name.
         * 
         * @return builder
         * 
         */
        public Builder configurationProfileAssignmentName(String configurationProfileAssignmentName) {
            return configurationProfileAssignmentName(Output.of(configurationProfileAssignmentName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param vmName The name of the virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder vmName(Output<String> vmName) {
            $.vmName = vmName;
            return this;
        }

        /**
         * @param vmName The name of the virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder vmName(String vmName) {
            return vmName(Output.of(vmName));
        }

        public GetConfigurationProfileAssignmentArgs build() {
            $.configurationProfileAssignmentName = Objects.requireNonNull($.configurationProfileAssignmentName, "expected parameter 'configurationProfileAssignmentName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.vmName = Objects.requireNonNull($.vmName, "expected parameter 'vmName' to be non-null");
            return $;
        }
    }

}
