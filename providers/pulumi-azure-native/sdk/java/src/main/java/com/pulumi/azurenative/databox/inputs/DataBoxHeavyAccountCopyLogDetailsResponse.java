// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databox.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Copy log details for a storage account for Databox heavy
 * 
 */
public final class DataBoxHeavyAccountCopyLogDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final DataBoxHeavyAccountCopyLogDetailsResponse Empty = new DataBoxHeavyAccountCopyLogDetailsResponse();

    /**
     * Account name.
     * 
     */
    @Import(name="accountName", required=true)
    private String accountName;

    /**
     * @return Account name.
     * 
     */
    public String accountName() {
        return this.accountName;
    }

    /**
     * Indicates the type of job details.
     * Expected value is &#39;DataBoxHeavy&#39;.
     * 
     */
    @Import(name="copyLogDetailsType", required=true)
    private String copyLogDetailsType;

    /**
     * @return Indicates the type of job details.
     * Expected value is &#39;DataBoxHeavy&#39;.
     * 
     */
    public String copyLogDetailsType() {
        return this.copyLogDetailsType;
    }

    /**
     * Link for copy logs.
     * 
     */
    @Import(name="copyLogLink", required=true)
    private List<String> copyLogLink;

    /**
     * @return Link for copy logs.
     * 
     */
    public List<String> copyLogLink() {
        return this.copyLogLink;
    }

    /**
     * Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
     * 
     */
    @Import(name="copyVerboseLogLink", required=true)
    private List<String> copyVerboseLogLink;

    /**
     * @return Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
     * 
     */
    public List<String> copyVerboseLogLink() {
        return this.copyVerboseLogLink;
    }

    private DataBoxHeavyAccountCopyLogDetailsResponse() {}

    private DataBoxHeavyAccountCopyLogDetailsResponse(DataBoxHeavyAccountCopyLogDetailsResponse $) {
        this.accountName = $.accountName;
        this.copyLogDetailsType = $.copyLogDetailsType;
        this.copyLogLink = $.copyLogLink;
        this.copyVerboseLogLink = $.copyVerboseLogLink;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataBoxHeavyAccountCopyLogDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataBoxHeavyAccountCopyLogDetailsResponse $;

        public Builder() {
            $ = new DataBoxHeavyAccountCopyLogDetailsResponse();
        }

        public Builder(DataBoxHeavyAccountCopyLogDetailsResponse defaults) {
            $ = new DataBoxHeavyAccountCopyLogDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName Account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param copyLogDetailsType Indicates the type of job details.
         * Expected value is &#39;DataBoxHeavy&#39;.
         * 
         * @return builder
         * 
         */
        public Builder copyLogDetailsType(String copyLogDetailsType) {
            $.copyLogDetailsType = copyLogDetailsType;
            return this;
        }

        /**
         * @param copyLogLink Link for copy logs.
         * 
         * @return builder
         * 
         */
        public Builder copyLogLink(List<String> copyLogLink) {
            $.copyLogLink = copyLogLink;
            return this;
        }

        /**
         * @param copyLogLink Link for copy logs.
         * 
         * @return builder
         * 
         */
        public Builder copyLogLink(String... copyLogLink) {
            return copyLogLink(List.of(copyLogLink));
        }

        /**
         * @param copyVerboseLogLink Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
         * 
         * @return builder
         * 
         */
        public Builder copyVerboseLogLink(List<String> copyVerboseLogLink) {
            $.copyVerboseLogLink = copyVerboseLogLink;
            return this;
        }

        /**
         * @param copyVerboseLogLink Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
         * 
         * @return builder
         * 
         */
        public Builder copyVerboseLogLink(String... copyVerboseLogLink) {
            return copyVerboseLogLink(List.of(copyVerboseLogLink));
        }

        public DataBoxHeavyAccountCopyLogDetailsResponse build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.copyLogDetailsType = Codegen.stringProp("copyLogDetailsType").arg($.copyLogDetailsType).require();
            $.copyLogLink = Objects.requireNonNull($.copyLogLink, "expected parameter 'copyLogLink' to be non-null");
            $.copyVerboseLogLink = Objects.requireNonNull($.copyVerboseLogLink, "expected parameter 'copyVerboseLogLink' to be non-null");
            return $;
        }
    }

}
