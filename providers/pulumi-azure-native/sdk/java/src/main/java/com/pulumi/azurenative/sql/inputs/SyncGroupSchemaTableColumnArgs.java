// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of column in sync group table.
 * 
 */
public final class SyncGroupSchemaTableColumnArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyncGroupSchemaTableColumnArgs Empty = new SyncGroupSchemaTableColumnArgs();

    /**
     * Data size of the column.
     * 
     */
    @Import(name="dataSize")
    private @Nullable Output<String> dataSize;

    /**
     * @return Data size of the column.
     * 
     */
    public Optional<Output<String>> dataSize() {
        return Optional.ofNullable(this.dataSize);
    }

    /**
     * Data type of the column.
     * 
     */
    @Import(name="dataType")
    private @Nullable Output<String> dataType;

    /**
     * @return Data type of the column.
     * 
     */
    public Optional<Output<String>> dataType() {
        return Optional.ofNullable(this.dataType);
    }

    /**
     * Quoted name of sync group table column.
     * 
     */
    @Import(name="quotedName")
    private @Nullable Output<String> quotedName;

    /**
     * @return Quoted name of sync group table column.
     * 
     */
    public Optional<Output<String>> quotedName() {
        return Optional.ofNullable(this.quotedName);
    }

    private SyncGroupSchemaTableColumnArgs() {}

    private SyncGroupSchemaTableColumnArgs(SyncGroupSchemaTableColumnArgs $) {
        this.dataSize = $.dataSize;
        this.dataType = $.dataType;
        this.quotedName = $.quotedName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyncGroupSchemaTableColumnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyncGroupSchemaTableColumnArgs $;

        public Builder() {
            $ = new SyncGroupSchemaTableColumnArgs();
        }

        public Builder(SyncGroupSchemaTableColumnArgs defaults) {
            $ = new SyncGroupSchemaTableColumnArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataSize Data size of the column.
         * 
         * @return builder
         * 
         */
        public Builder dataSize(@Nullable Output<String> dataSize) {
            $.dataSize = dataSize;
            return this;
        }

        /**
         * @param dataSize Data size of the column.
         * 
         * @return builder
         * 
         */
        public Builder dataSize(String dataSize) {
            return dataSize(Output.of(dataSize));
        }

        /**
         * @param dataType Data type of the column.
         * 
         * @return builder
         * 
         */
        public Builder dataType(@Nullable Output<String> dataType) {
            $.dataType = dataType;
            return this;
        }

        /**
         * @param dataType Data type of the column.
         * 
         * @return builder
         * 
         */
        public Builder dataType(String dataType) {
            return dataType(Output.of(dataType));
        }

        /**
         * @param quotedName Quoted name of sync group table column.
         * 
         * @return builder
         * 
         */
        public Builder quotedName(@Nullable Output<String> quotedName) {
            $.quotedName = quotedName;
            return this;
        }

        /**
         * @param quotedName Quoted name of sync group table column.
         * 
         * @return builder
         * 
         */
        public Builder quotedName(String quotedName) {
            return quotedName(Output.of(quotedName));
        }

        public SyncGroupSchemaTableColumnArgs build() {
            return $;
        }
    }

}
