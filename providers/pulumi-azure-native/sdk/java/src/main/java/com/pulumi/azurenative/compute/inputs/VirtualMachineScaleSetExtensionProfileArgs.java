// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.VirtualMachineScaleSetExtensionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes a virtual machine scale set extension profile.
 * 
 */
public final class VirtualMachineScaleSetExtensionProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineScaleSetExtensionProfileArgs Empty = new VirtualMachineScaleSetExtensionProfileArgs();

    /**
     * The virtual machine scale set child extension resources.
     * 
     */
    @Import(name="extensions")
    private @Nullable Output<List<VirtualMachineScaleSetExtensionArgs>> extensions;

    /**
     * @return The virtual machine scale set child extension resources.
     * 
     */
    public Optional<Output<List<VirtualMachineScaleSetExtensionArgs>>> extensions() {
        return Optional.ofNullable(this.extensions);
    }

    /**
     * Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). &lt;br&gt;&lt;br&gt; Minimum api-version: 2020-06-01
     * 
     */
    @Import(name="extensionsTimeBudget")
    private @Nullable Output<String> extensionsTimeBudget;

    /**
     * @return Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). &lt;br&gt;&lt;br&gt; Minimum api-version: 2020-06-01
     * 
     */
    public Optional<Output<String>> extensionsTimeBudget() {
        return Optional.ofNullable(this.extensionsTimeBudget);
    }

    private VirtualMachineScaleSetExtensionProfileArgs() {}

    private VirtualMachineScaleSetExtensionProfileArgs(VirtualMachineScaleSetExtensionProfileArgs $) {
        this.extensions = $.extensions;
        this.extensionsTimeBudget = $.extensionsTimeBudget;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineScaleSetExtensionProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineScaleSetExtensionProfileArgs $;

        public Builder() {
            $ = new VirtualMachineScaleSetExtensionProfileArgs();
        }

        public Builder(VirtualMachineScaleSetExtensionProfileArgs defaults) {
            $ = new VirtualMachineScaleSetExtensionProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param extensions The virtual machine scale set child extension resources.
         * 
         * @return builder
         * 
         */
        public Builder extensions(@Nullable Output<List<VirtualMachineScaleSetExtensionArgs>> extensions) {
            $.extensions = extensions;
            return this;
        }

        /**
         * @param extensions The virtual machine scale set child extension resources.
         * 
         * @return builder
         * 
         */
        public Builder extensions(List<VirtualMachineScaleSetExtensionArgs> extensions) {
            return extensions(Output.of(extensions));
        }

        /**
         * @param extensions The virtual machine scale set child extension resources.
         * 
         * @return builder
         * 
         */
        public Builder extensions(VirtualMachineScaleSetExtensionArgs... extensions) {
            return extensions(List.of(extensions));
        }

        /**
         * @param extensionsTimeBudget Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). &lt;br&gt;&lt;br&gt; Minimum api-version: 2020-06-01
         * 
         * @return builder
         * 
         */
        public Builder extensionsTimeBudget(@Nullable Output<String> extensionsTimeBudget) {
            $.extensionsTimeBudget = extensionsTimeBudget;
            return this;
        }

        /**
         * @param extensionsTimeBudget Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). &lt;br&gt;&lt;br&gt; Minimum api-version: 2020-06-01
         * 
         * @return builder
         * 
         */
        public Builder extensionsTimeBudget(String extensionsTimeBudget) {
            return extensionsTimeBudget(Output.of(extensionsTimeBudget));
        }

        public VirtualMachineScaleSetExtensionProfileArgs build() {
            return $;
        }
    }

}
