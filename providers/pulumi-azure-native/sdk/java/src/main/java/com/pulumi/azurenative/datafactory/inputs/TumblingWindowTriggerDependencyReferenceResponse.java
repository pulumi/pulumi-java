// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.TriggerReferenceResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Referenced tumbling window trigger dependency.
 * 
 */
public final class TumblingWindowTriggerDependencyReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final TumblingWindowTriggerDependencyReferenceResponse Empty = new TumblingWindowTriggerDependencyReferenceResponse();

    /**
     * Timespan applied to the start time of a tumbling window when evaluating dependency.
     * 
     */
    @Import(name="offset")
    private @Nullable String offset;

    public Optional<String> offset() {
        return Optional.ofNullable(this.offset);
    }

    /**
     * Referenced trigger.
     * 
     */
    @Import(name="referenceTrigger", required=true)
    private TriggerReferenceResponse referenceTrigger;

    public TriggerReferenceResponse referenceTrigger() {
        return this.referenceTrigger;
    }

    /**
     * The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used.
     * 
     */
    @Import(name="size")
    private @Nullable String size;

    public Optional<String> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * The type of dependency reference.
     * Expected value is &#39;TumblingWindowTriggerDependencyReference&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private TumblingWindowTriggerDependencyReferenceResponse() {}

    private TumblingWindowTriggerDependencyReferenceResponse(TumblingWindowTriggerDependencyReferenceResponse $) {
        this.offset = $.offset;
        this.referenceTrigger = $.referenceTrigger;
        this.size = $.size;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TumblingWindowTriggerDependencyReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TumblingWindowTriggerDependencyReferenceResponse $;

        public Builder() {
            $ = new TumblingWindowTriggerDependencyReferenceResponse();
        }

        public Builder(TumblingWindowTriggerDependencyReferenceResponse defaults) {
            $ = new TumblingWindowTriggerDependencyReferenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder offset(@Nullable String offset) {
            $.offset = offset;
            return this;
        }

        public Builder referenceTrigger(TriggerReferenceResponse referenceTrigger) {
            $.referenceTrigger = referenceTrigger;
            return this;
        }

        public Builder size(@Nullable String size) {
            $.size = size;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public TumblingWindowTriggerDependencyReferenceResponse build() {
            $.referenceTrigger = Objects.requireNonNull($.referenceTrigger, "expected parameter 'referenceTrigger' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
