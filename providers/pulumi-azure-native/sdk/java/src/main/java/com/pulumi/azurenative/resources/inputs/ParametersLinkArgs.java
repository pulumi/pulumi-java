// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resources.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Entity representing the reference to the deployment parameters.
 * 
 */
public final class ParametersLinkArgs extends com.pulumi.resources.ResourceArgs {

    public static final ParametersLinkArgs Empty = new ParametersLinkArgs();

    /**
     * If included, must match the ContentVersion in the template.
     * 
     */
    @Import(name="contentVersion")
      private final @Nullable Output<String> contentVersion;

    public Output<String> contentVersion() {
        return this.contentVersion == null ? Codegen.empty() : this.contentVersion;
    }

    /**
     * The URI of the parameters file.
     * 
     */
    @Import(name="uri", required=true)
      private final Output<String> uri;

    public Output<String> uri() {
        return this.uri;
    }

    public ParametersLinkArgs(
        @Nullable Output<String> contentVersion,
        Output<String> uri) {
        this.contentVersion = contentVersion;
        this.uri = Objects.requireNonNull(uri, "expected parameter 'uri' to be non-null");
    }

    private ParametersLinkArgs() {
        this.contentVersion = Codegen.empty();
        this.uri = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ParametersLinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> contentVersion;
        private Output<String> uri;

        public Builder() {
    	      // Empty
        }

        public Builder(ParametersLinkArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentVersion = defaults.contentVersion;
    	      this.uri = defaults.uri;
        }

        public Builder contentVersion(@Nullable Output<String> contentVersion) {
            this.contentVersion = contentVersion;
            return this;
        }
        public Builder contentVersion(@Nullable String contentVersion) {
            this.contentVersion = Codegen.ofNullable(contentVersion);
            return this;
        }
        public Builder uri(Output<String> uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }
        public Builder uri(String uri) {
            this.uri = Output.of(Objects.requireNonNull(uri));
            return this;
        }        public ParametersLinkArgs build() {
            return new ParametersLinkArgs(contentVersion, uri);
        }
    }
}
