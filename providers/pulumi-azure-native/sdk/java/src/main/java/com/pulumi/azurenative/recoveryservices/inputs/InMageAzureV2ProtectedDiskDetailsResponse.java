// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * InMageAzureV2 protected disk details.
 * 
 */
public final class InMageAzureV2ProtectedDiskDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final InMageAzureV2ProtectedDiskDetailsResponse Empty = new InMageAzureV2ProtectedDiskDetailsResponse();

    /**
     * The disk capacity in bytes.
     * 
     */
    @Import(name="diskCapacityInBytes")
    private @Nullable Double diskCapacityInBytes;

    public Optional<Double> diskCapacityInBytes() {
        return Optional.ofNullable(this.diskCapacityInBytes);
    }

    /**
     * The disk id.
     * 
     */
    @Import(name="diskId")
    private @Nullable String diskId;

    public Optional<String> diskId() {
        return Optional.ofNullable(this.diskId);
    }

    /**
     * The disk name.
     * 
     */
    @Import(name="diskName")
    private @Nullable String diskName;

    public Optional<String> diskName() {
        return Optional.ofNullable(this.diskName);
    }

    /**
     * A value indicating whether disk is resized.
     * 
     */
    @Import(name="diskResized")
    private @Nullable String diskResized;

    public Optional<String> diskResized() {
        return Optional.ofNullable(this.diskResized);
    }

    /**
     * The disk file system capacity in bytes.
     * 
     */
    @Import(name="fileSystemCapacityInBytes")
    private @Nullable Double fileSystemCapacityInBytes;

    public Optional<Double> fileSystemCapacityInBytes() {
        return Optional.ofNullable(this.fileSystemCapacityInBytes);
    }

    /**
     * The health error code for the disk.
     * 
     */
    @Import(name="healthErrorCode")
    private @Nullable String healthErrorCode;

    public Optional<String> healthErrorCode() {
        return Optional.ofNullable(this.healthErrorCode);
    }

    /**
     * The last RPO calculated time.
     * 
     */
    @Import(name="lastRpoCalculatedTime")
    private @Nullable String lastRpoCalculatedTime;

    public Optional<String> lastRpoCalculatedTime() {
        return Optional.ofNullable(this.lastRpoCalculatedTime);
    }

    /**
     * The protection stage.
     * 
     */
    @Import(name="protectionStage")
    private @Nullable String protectionStage;

    public Optional<String> protectionStage() {
        return Optional.ofNullable(this.protectionStage);
    }

    /**
     * The PS data transit in MB.
     * 
     */
    @Import(name="psDataInMegaBytes")
    private @Nullable Double psDataInMegaBytes;

    public Optional<Double> psDataInMegaBytes() {
        return Optional.ofNullable(this.psDataInMegaBytes);
    }

    /**
     * The resync duration in seconds.
     * 
     */
    @Import(name="resyncDurationInSeconds")
    private @Nullable Double resyncDurationInSeconds;

    public Optional<Double> resyncDurationInSeconds() {
        return Optional.ofNullable(this.resyncDurationInSeconds);
    }

    /**
     * The resync progress percentage.
     * 
     */
    @Import(name="resyncProgressPercentage")
    private @Nullable Integer resyncProgressPercentage;

    public Optional<Integer> resyncProgressPercentage() {
        return Optional.ofNullable(this.resyncProgressPercentage);
    }

    /**
     * A value indicating whether resync is required for this disk.
     * 
     */
    @Import(name="resyncRequired")
    private @Nullable String resyncRequired;

    public Optional<String> resyncRequired() {
        return Optional.ofNullable(this.resyncRequired);
    }

    /**
     * The RPO in seconds.
     * 
     */
    @Import(name="rpoInSeconds")
    private @Nullable Double rpoInSeconds;

    public Optional<Double> rpoInSeconds() {
        return Optional.ofNullable(this.rpoInSeconds);
    }

    /**
     * The source data transit in MB.
     * 
     */
    @Import(name="sourceDataInMegaBytes")
    private @Nullable Double sourceDataInMegaBytes;

    public Optional<Double> sourceDataInMegaBytes() {
        return Optional.ofNullable(this.sourceDataInMegaBytes);
    }

    /**
     * The target data transit in MB.
     * 
     */
    @Import(name="targetDataInMegaBytes")
    private @Nullable Double targetDataInMegaBytes;

    public Optional<Double> targetDataInMegaBytes() {
        return Optional.ofNullable(this.targetDataInMegaBytes);
    }

    private InMageAzureV2ProtectedDiskDetailsResponse() {}

    private InMageAzureV2ProtectedDiskDetailsResponse(InMageAzureV2ProtectedDiskDetailsResponse $) {
        this.diskCapacityInBytes = $.diskCapacityInBytes;
        this.diskId = $.diskId;
        this.diskName = $.diskName;
        this.diskResized = $.diskResized;
        this.fileSystemCapacityInBytes = $.fileSystemCapacityInBytes;
        this.healthErrorCode = $.healthErrorCode;
        this.lastRpoCalculatedTime = $.lastRpoCalculatedTime;
        this.protectionStage = $.protectionStage;
        this.psDataInMegaBytes = $.psDataInMegaBytes;
        this.resyncDurationInSeconds = $.resyncDurationInSeconds;
        this.resyncProgressPercentage = $.resyncProgressPercentage;
        this.resyncRequired = $.resyncRequired;
        this.rpoInSeconds = $.rpoInSeconds;
        this.sourceDataInMegaBytes = $.sourceDataInMegaBytes;
        this.targetDataInMegaBytes = $.targetDataInMegaBytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InMageAzureV2ProtectedDiskDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InMageAzureV2ProtectedDiskDetailsResponse $;

        public Builder() {
            $ = new InMageAzureV2ProtectedDiskDetailsResponse();
        }

        public Builder(InMageAzureV2ProtectedDiskDetailsResponse defaults) {
            $ = new InMageAzureV2ProtectedDiskDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder diskCapacityInBytes(@Nullable Double diskCapacityInBytes) {
            $.diskCapacityInBytes = diskCapacityInBytes;
            return this;
        }

        public Builder diskId(@Nullable String diskId) {
            $.diskId = diskId;
            return this;
        }

        public Builder diskName(@Nullable String diskName) {
            $.diskName = diskName;
            return this;
        }

        public Builder diskResized(@Nullable String diskResized) {
            $.diskResized = diskResized;
            return this;
        }

        public Builder fileSystemCapacityInBytes(@Nullable Double fileSystemCapacityInBytes) {
            $.fileSystemCapacityInBytes = fileSystemCapacityInBytes;
            return this;
        }

        public Builder healthErrorCode(@Nullable String healthErrorCode) {
            $.healthErrorCode = healthErrorCode;
            return this;
        }

        public Builder lastRpoCalculatedTime(@Nullable String lastRpoCalculatedTime) {
            $.lastRpoCalculatedTime = lastRpoCalculatedTime;
            return this;
        }

        public Builder protectionStage(@Nullable String protectionStage) {
            $.protectionStage = protectionStage;
            return this;
        }

        public Builder psDataInMegaBytes(@Nullable Double psDataInMegaBytes) {
            $.psDataInMegaBytes = psDataInMegaBytes;
            return this;
        }

        public Builder resyncDurationInSeconds(@Nullable Double resyncDurationInSeconds) {
            $.resyncDurationInSeconds = resyncDurationInSeconds;
            return this;
        }

        public Builder resyncProgressPercentage(@Nullable Integer resyncProgressPercentage) {
            $.resyncProgressPercentage = resyncProgressPercentage;
            return this;
        }

        public Builder resyncRequired(@Nullable String resyncRequired) {
            $.resyncRequired = resyncRequired;
            return this;
        }

        public Builder rpoInSeconds(@Nullable Double rpoInSeconds) {
            $.rpoInSeconds = rpoInSeconds;
            return this;
        }

        public Builder sourceDataInMegaBytes(@Nullable Double sourceDataInMegaBytes) {
            $.sourceDataInMegaBytes = sourceDataInMegaBytes;
            return this;
        }

        public Builder targetDataInMegaBytes(@Nullable Double targetDataInMegaBytes) {
            $.targetDataInMegaBytes = targetDataInMegaBytes;
            return this;
        }

        public InMageAzureV2ProtectedDiskDetailsResponse build() {
            return $;
        }
    }

}
