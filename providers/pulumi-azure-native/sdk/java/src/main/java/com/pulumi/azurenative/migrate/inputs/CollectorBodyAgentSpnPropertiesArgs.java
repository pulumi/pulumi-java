// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CollectorBodyAgentSpnPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final CollectorBodyAgentSpnPropertiesArgs Empty = new CollectorBodyAgentSpnPropertiesArgs();

    /**
     * Application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return Application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * Intended audience for the service principal.
     * 
     */
    @Import(name="audience")
    private @Nullable Output<String> audience;

    /**
     * @return Intended audience for the service principal.
     * 
     */
    public Optional<Output<String>> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * AAD Authority URL which was used to request the token for the service principal.
     * 
     */
    @Import(name="authority")
    private @Nullable Output<String> authority;

    /**
     * @return AAD Authority URL which was used to request the token for the service principal.
     * 
     */
    public Optional<Output<String>> authority() {
        return Optional.ofNullable(this.authority);
    }

    /**
     * Object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    @Import(name="objectId")
    private @Nullable Output<String> objectId;

    /**
     * @return Object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    public Optional<Output<String>> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * Tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return Tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private CollectorBodyAgentSpnPropertiesArgs() {}

    private CollectorBodyAgentSpnPropertiesArgs(CollectorBodyAgentSpnPropertiesArgs $) {
        this.applicationId = $.applicationId;
        this.audience = $.audience;
        this.authority = $.authority;
        this.objectId = $.objectId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CollectorBodyAgentSpnPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CollectorBodyAgentSpnPropertiesArgs $;

        public Builder() {
            $ = new CollectorBodyAgentSpnPropertiesArgs();
        }

        public Builder(CollectorBodyAgentSpnPropertiesArgs defaults) {
            $ = new CollectorBodyAgentSpnPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId Application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId Application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param audience Intended audience for the service principal.
         * 
         * @return builder
         * 
         */
        public Builder audience(@Nullable Output<String> audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param audience Intended audience for the service principal.
         * 
         * @return builder
         * 
         */
        public Builder audience(String audience) {
            return audience(Output.of(audience));
        }

        /**
         * @param authority AAD Authority URL which was used to request the token for the service principal.
         * 
         * @return builder
         * 
         */
        public Builder authority(@Nullable Output<String> authority) {
            $.authority = authority;
            return this;
        }

        /**
         * @param authority AAD Authority URL which was used to request the token for the service principal.
         * 
         * @return builder
         * 
         */
        public Builder authority(String authority) {
            return authority(Output.of(authority));
        }

        /**
         * @param objectId Object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId Object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        /**
         * @param tenantId Tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId Tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public CollectorBodyAgentSpnPropertiesArgs build() {
            return $;
        }
    }

}
