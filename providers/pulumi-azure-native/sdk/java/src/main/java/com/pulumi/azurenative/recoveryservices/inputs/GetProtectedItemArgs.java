// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetProtectedItemArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProtectedItemArgs Empty = new GetProtectedItemArgs();

    /**
     * Container name associated with the backed up item.
     * 
     */
    @Import(name="containerName", required=true)
    private String containerName;

    public String containerName() {
        return this.containerName;
    }

    /**
     * Fabric name associated with the backed up item.
     * 
     */
    @Import(name="fabricName", required=true)
    private String fabricName;

    public String fabricName() {
        return this.fabricName;
    }

    /**
     * OData filter options.
     * 
     */
    @Import(name="filter")
    private @Nullable String filter;

    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Backed up item name whose details are to be fetched.
     * 
     */
    @Import(name="protectedItemName", required=true)
    private String protectedItemName;

    public String protectedItemName() {
        return this.protectedItemName;
    }

    /**
     * The name of the resource group where the recovery services vault is present.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the recovery services vault.
     * 
     */
    @Import(name="vaultName", required=true)
    private String vaultName;

    public String vaultName() {
        return this.vaultName;
    }

    private GetProtectedItemArgs() {}

    private GetProtectedItemArgs(GetProtectedItemArgs $) {
        this.containerName = $.containerName;
        this.fabricName = $.fabricName;
        this.filter = $.filter;
        this.protectedItemName = $.protectedItemName;
        this.resourceGroupName = $.resourceGroupName;
        this.vaultName = $.vaultName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProtectedItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProtectedItemArgs $;

        public Builder() {
            $ = new GetProtectedItemArgs();
        }

        public Builder(GetProtectedItemArgs defaults) {
            $ = new GetProtectedItemArgs(Objects.requireNonNull(defaults));
        }

        public Builder containerName(String containerName) {
            $.containerName = containerName;
            return this;
        }

        public Builder fabricName(String fabricName) {
            $.fabricName = fabricName;
            return this;
        }

        public Builder filter(@Nullable String filter) {
            $.filter = filter;
            return this;
        }

        public Builder protectedItemName(String protectedItemName) {
            $.protectedItemName = protectedItemName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder vaultName(String vaultName) {
            $.vaultName = vaultName;
            return this;
        }

        public GetProtectedItemArgs build() {
            $.containerName = Objects.requireNonNull($.containerName, "expected parameter 'containerName' to be non-null");
            $.fabricName = Objects.requireNonNull($.fabricName, "expected parameter 'fabricName' to be non-null");
            $.protectedItemName = Objects.requireNonNull($.protectedItemName, "expected parameter 'protectedItemName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.vaultName = Objects.requireNonNull($.vaultName, "expected parameter 'vaultName' to be non-null");
            return $;
        }
    }

}
