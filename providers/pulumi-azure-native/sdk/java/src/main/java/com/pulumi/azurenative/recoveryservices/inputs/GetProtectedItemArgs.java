// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetProtectedItemArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProtectedItemArgs Empty = new GetProtectedItemArgs();

    /**
     * Container name associated with the backed up item.
     * 
     */
    @Import(name="containerName", required=true)
    private Output<String> containerName;

    /**
     * @return Container name associated with the backed up item.
     * 
     */
    public Output<String> containerName() {
        return this.containerName;
    }

    /**
     * Fabric name associated with the backed up item.
     * 
     */
    @Import(name="fabricName", required=true)
    private Output<String> fabricName;

    /**
     * @return Fabric name associated with the backed up item.
     * 
     */
    public Output<String> fabricName() {
        return this.fabricName;
    }

    /**
     * OData filter options.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<String> filter;

    /**
     * @return OData filter options.
     * 
     */
    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Backed up item name whose details are to be fetched.
     * 
     */
    @Import(name="protectedItemName", required=true)
    private Output<String> protectedItemName;

    /**
     * @return Backed up item name whose details are to be fetched.
     * 
     */
    public Output<String> protectedItemName() {
        return this.protectedItemName;
    }

    /**
     * The name of the resource group where the recovery services vault is present.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group where the recovery services vault is present.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the recovery services vault.
     * 
     */
    @Import(name="vaultName", required=true)
    private Output<String> vaultName;

    /**
     * @return The name of the recovery services vault.
     * 
     */
    public Output<String> vaultName() {
        return this.vaultName;
    }

    private GetProtectedItemArgs() {}

    private GetProtectedItemArgs(GetProtectedItemArgs $) {
        this.containerName = $.containerName;
        this.fabricName = $.fabricName;
        this.filter = $.filter;
        this.protectedItemName = $.protectedItemName;
        this.resourceGroupName = $.resourceGroupName;
        this.vaultName = $.vaultName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProtectedItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProtectedItemArgs $;

        public Builder() {
            $ = new GetProtectedItemArgs();
        }

        public Builder(GetProtectedItemArgs defaults) {
            $ = new GetProtectedItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerName Container name associated with the backed up item.
         * 
         * @return builder
         * 
         */
        public Builder containerName(Output<String> containerName) {
            $.containerName = containerName;
            return this;
        }

        /**
         * @param containerName Container name associated with the backed up item.
         * 
         * @return builder
         * 
         */
        public Builder containerName(String containerName) {
            return containerName(Output.of(containerName));
        }

        /**
         * @param fabricName Fabric name associated with the backed up item.
         * 
         * @return builder
         * 
         */
        public Builder fabricName(Output<String> fabricName) {
            $.fabricName = fabricName;
            return this;
        }

        /**
         * @param fabricName Fabric name associated with the backed up item.
         * 
         * @return builder
         * 
         */
        public Builder fabricName(String fabricName) {
            return fabricName(Output.of(fabricName));
        }

        /**
         * @param filter OData filter options.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter OData filter options.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param protectedItemName Backed up item name whose details are to be fetched.
         * 
         * @return builder
         * 
         */
        public Builder protectedItemName(Output<String> protectedItemName) {
            $.protectedItemName = protectedItemName;
            return this;
        }

        /**
         * @param protectedItemName Backed up item name whose details are to be fetched.
         * 
         * @return builder
         * 
         */
        public Builder protectedItemName(String protectedItemName) {
            return protectedItemName(Output.of(protectedItemName));
        }

        /**
         * @param resourceGroupName The name of the resource group where the recovery services vault is present.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group where the recovery services vault is present.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param vaultName The name of the recovery services vault.
         * 
         * @return builder
         * 
         */
        public Builder vaultName(Output<String> vaultName) {
            $.vaultName = vaultName;
            return this;
        }

        /**
         * @param vaultName The name of the recovery services vault.
         * 
         * @return builder
         * 
         */
        public Builder vaultName(String vaultName) {
            return vaultName(Output.of(vaultName));
        }

        public GetProtectedItemArgs build() {
            $.containerName = Objects.requireNonNull($.containerName, "expected parameter 'containerName' to be non-null");
            $.fabricName = Objects.requireNonNull($.fabricName, "expected parameter 'fabricName' to be non-null");
            $.protectedItemName = Objects.requireNonNull($.protectedItemName, "expected parameter 'protectedItemName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.vaultName = Objects.requireNonNull($.vaultName, "expected parameter 'vaultName' to be non-null");
            return $;
        }
    }

}
