// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights;

import com.pulumi.azurenative.securityinsights.enums.AlertSeverity;
import com.pulumi.azurenative.securityinsights.enums.MicrosoftSecurityProductName;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MicrosoftSecurityIncidentCreationAlertRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final MicrosoftSecurityIncidentCreationAlertRuleArgs Empty = new MicrosoftSecurityIncidentCreationAlertRuleArgs();

    /**
     * The Name of the alert rule template used to create this rule.
     * 
     */
    @Import(name="alertRuleTemplateName")
    private @Nullable Output<String> alertRuleTemplateName;

    public Optional<Output<String>> alertRuleTemplateName() {
        return Optional.ofNullable(this.alertRuleTemplateName);
    }

    /**
     * The description of the alert rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name for alerts created by this alert rule.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * the alerts&#39; displayNames on which the cases will not be generated
     * 
     */
    @Import(name="displayNamesExcludeFilter")
    private @Nullable Output<List<String>> displayNamesExcludeFilter;

    public Optional<Output<List<String>>> displayNamesExcludeFilter() {
        return Optional.ofNullable(this.displayNamesExcludeFilter);
    }

    /**
     * the alerts&#39; displayNames on which the cases will be generated
     * 
     */
    @Import(name="displayNamesFilter")
    private @Nullable Output<List<String>> displayNamesFilter;

    public Optional<Output<List<String>>> displayNamesFilter() {
        return Optional.ofNullable(this.displayNamesFilter);
    }

    /**
     * Determines whether this alert rule is enabled or disabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The kind of the alert rule
     * Expected value is &#39;MicrosoftSecurityIncidentCreation&#39;.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    public Output<String> kind() {
        return this.kind;
    }

    /**
     * The alerts&#39; productName on which the cases will be generated
     * 
     */
    @Import(name="productFilter", required=true)
    private Output<Either<String,MicrosoftSecurityProductName>> productFilter;

    public Output<Either<String,MicrosoftSecurityProductName>> productFilter() {
        return this.productFilter;
    }

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Alert rule ID
     * 
     */
    @Import(name="ruleId")
    private @Nullable Output<String> ruleId;

    public Optional<Output<String>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    /**
     * the alerts&#39; severities on which the cases will be generated
     * 
     */
    @Import(name="severitiesFilter")
    private @Nullable Output<List<Either<String,AlertSeverity>>> severitiesFilter;

    public Optional<Output<List<Either<String,AlertSeverity>>>> severitiesFilter() {
        return Optional.ofNullable(this.severitiesFilter);
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private MicrosoftSecurityIncidentCreationAlertRuleArgs() {}

    private MicrosoftSecurityIncidentCreationAlertRuleArgs(MicrosoftSecurityIncidentCreationAlertRuleArgs $) {
        this.alertRuleTemplateName = $.alertRuleTemplateName;
        this.description = $.description;
        this.displayName = $.displayName;
        this.displayNamesExcludeFilter = $.displayNamesExcludeFilter;
        this.displayNamesFilter = $.displayNamesFilter;
        this.enabled = $.enabled;
        this.kind = $.kind;
        this.productFilter = $.productFilter;
        this.resourceGroupName = $.resourceGroupName;
        this.ruleId = $.ruleId;
        this.severitiesFilter = $.severitiesFilter;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MicrosoftSecurityIncidentCreationAlertRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MicrosoftSecurityIncidentCreationAlertRuleArgs $;

        public Builder() {
            $ = new MicrosoftSecurityIncidentCreationAlertRuleArgs();
        }

        public Builder(MicrosoftSecurityIncidentCreationAlertRuleArgs defaults) {
            $ = new MicrosoftSecurityIncidentCreationAlertRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder alertRuleTemplateName(@Nullable Output<String> alertRuleTemplateName) {
            $.alertRuleTemplateName = alertRuleTemplateName;
            return this;
        }

        public Builder alertRuleTemplateName(String alertRuleTemplateName) {
            return alertRuleTemplateName(Output.of(alertRuleTemplateName));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder displayNamesExcludeFilter(@Nullable Output<List<String>> displayNamesExcludeFilter) {
            $.displayNamesExcludeFilter = displayNamesExcludeFilter;
            return this;
        }

        public Builder displayNamesExcludeFilter(List<String> displayNamesExcludeFilter) {
            return displayNamesExcludeFilter(Output.of(displayNamesExcludeFilter));
        }

        public Builder displayNamesExcludeFilter(String... displayNamesExcludeFilter) {
            return displayNamesExcludeFilter(List.of(displayNamesExcludeFilter));
        }

        public Builder displayNamesFilter(@Nullable Output<List<String>> displayNamesFilter) {
            $.displayNamesFilter = displayNamesFilter;
            return this;
        }

        public Builder displayNamesFilter(List<String> displayNamesFilter) {
            return displayNamesFilter(Output.of(displayNamesFilter));
        }

        public Builder displayNamesFilter(String... displayNamesFilter) {
            return displayNamesFilter(List.of(displayNamesFilter));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder productFilter(Output<Either<String,MicrosoftSecurityProductName>> productFilter) {
            $.productFilter = productFilter;
            return this;
        }

        public Builder productFilter(Either<String,MicrosoftSecurityProductName> productFilter) {
            return productFilter(Output.of(productFilter));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder ruleId(@Nullable Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        public Builder severitiesFilter(@Nullable Output<List<Either<String,AlertSeverity>>> severitiesFilter) {
            $.severitiesFilter = severitiesFilter;
            return this;
        }

        public Builder severitiesFilter(List<Either<String,AlertSeverity>> severitiesFilter) {
            return severitiesFilter(Output.of(severitiesFilter));
        }

        public Builder severitiesFilter(Either<String,AlertSeverity>... severitiesFilter) {
            return severitiesFilter(List.of(severitiesFilter));
        }

        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public MicrosoftSecurityIncidentCreationAlertRuleArgs build() {
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.kind = Codegen.stringProp("kind").output().arg($.kind).require();
            $.productFilter = Objects.requireNonNull($.productFilter, "expected parameter 'productFilter' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
