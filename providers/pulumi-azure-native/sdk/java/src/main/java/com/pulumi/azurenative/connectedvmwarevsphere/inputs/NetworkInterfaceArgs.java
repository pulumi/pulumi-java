// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere.inputs;

import com.pulumi.azurenative.connectedvmwarevsphere.enums.NICType;
import com.pulumi.azurenative.connectedvmwarevsphere.enums.PowerOnBootOption;
import com.pulumi.azurenative.connectedvmwarevsphere.inputs.NicIPSettingsArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Network Interface model
 * 
 */
public final class NetworkInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkInterfaceArgs Empty = new NetworkInterfaceArgs();

    /**
     * Gets or sets the device key value.
     * 
     */
    @Import(name="deviceKey")
    private @Nullable Output<Integer> deviceKey;

    /**
     * @return Gets or sets the device key value.
     * 
     */
    public Optional<Output<Integer>> deviceKey() {
        return Optional.ofNullable(this.deviceKey);
    }

    /**
     * Gets or sets the ipsettings.
     * 
     */
    @Import(name="ipSettings")
    private @Nullable Output<NicIPSettingsArgs> ipSettings;

    /**
     * @return Gets or sets the ipsettings.
     * 
     */
    public Optional<Output<NicIPSettingsArgs>> ipSettings() {
        return Optional.ofNullable(this.ipSettings);
    }

    /**
     * Gets or sets the name of the network interface.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Gets or sets the name of the network interface.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Gets or sets the ARM Id of the network resource to connect the virtual machine.
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return Gets or sets the ARM Id of the network resource to connect the virtual machine.
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    /**
     * NIC type
     * 
     */
    @Import(name="nicType")
    private @Nullable Output<Either<String,NICType>> nicType;

    /**
     * @return NIC type
     * 
     */
    public Optional<Output<Either<String,NICType>>> nicType() {
        return Optional.ofNullable(this.nicType);
    }

    /**
     * Gets or sets the power on boot.
     * 
     */
    @Import(name="powerOnBoot")
    private @Nullable Output<Either<String,PowerOnBootOption>> powerOnBoot;

    /**
     * @return Gets or sets the power on boot.
     * 
     */
    public Optional<Output<Either<String,PowerOnBootOption>>> powerOnBoot() {
        return Optional.ofNullable(this.powerOnBoot);
    }

    private NetworkInterfaceArgs() {}

    private NetworkInterfaceArgs(NetworkInterfaceArgs $) {
        this.deviceKey = $.deviceKey;
        this.ipSettings = $.ipSettings;
        this.name = $.name;
        this.networkId = $.networkId;
        this.nicType = $.nicType;
        this.powerOnBoot = $.powerOnBoot;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkInterfaceArgs $;

        public Builder() {
            $ = new NetworkInterfaceArgs();
        }

        public Builder(NetworkInterfaceArgs defaults) {
            $ = new NetworkInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceKey Gets or sets the device key value.
         * 
         * @return builder
         * 
         */
        public Builder deviceKey(@Nullable Output<Integer> deviceKey) {
            $.deviceKey = deviceKey;
            return this;
        }

        /**
         * @param deviceKey Gets or sets the device key value.
         * 
         * @return builder
         * 
         */
        public Builder deviceKey(Integer deviceKey) {
            return deviceKey(Output.of(deviceKey));
        }

        /**
         * @param ipSettings Gets or sets the ipsettings.
         * 
         * @return builder
         * 
         */
        public Builder ipSettings(@Nullable Output<NicIPSettingsArgs> ipSettings) {
            $.ipSettings = ipSettings;
            return this;
        }

        /**
         * @param ipSettings Gets or sets the ipsettings.
         * 
         * @return builder
         * 
         */
        public Builder ipSettings(NicIPSettingsArgs ipSettings) {
            return ipSettings(Output.of(ipSettings));
        }

        /**
         * @param name Gets or sets the name of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Gets or sets the name of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkId Gets or sets the ARM Id of the network resource to connect the virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId Gets or sets the ARM Id of the network resource to connect the virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param nicType NIC type
         * 
         * @return builder
         * 
         */
        public Builder nicType(@Nullable Output<Either<String,NICType>> nicType) {
            $.nicType = nicType;
            return this;
        }

        /**
         * @param nicType NIC type
         * 
         * @return builder
         * 
         */
        public Builder nicType(Either<String,NICType> nicType) {
            return nicType(Output.of(nicType));
        }

        /**
         * @param nicType NIC type
         * 
         * @return builder
         * 
         */
        public Builder nicType(String nicType) {
            return nicType(Either.ofLeft(nicType));
        }

        /**
         * @param nicType NIC type
         * 
         * @return builder
         * 
         */
        public Builder nicType(NICType nicType) {
            return nicType(Either.ofRight(nicType));
        }

        /**
         * @param powerOnBoot Gets or sets the power on boot.
         * 
         * @return builder
         * 
         */
        public Builder powerOnBoot(@Nullable Output<Either<String,PowerOnBootOption>> powerOnBoot) {
            $.powerOnBoot = powerOnBoot;
            return this;
        }

        /**
         * @param powerOnBoot Gets or sets the power on boot.
         * 
         * @return builder
         * 
         */
        public Builder powerOnBoot(Either<String,PowerOnBootOption> powerOnBoot) {
            return powerOnBoot(Output.of(powerOnBoot));
        }

        /**
         * @param powerOnBoot Gets or sets the power on boot.
         * 
         * @return builder
         * 
         */
        public Builder powerOnBoot(String powerOnBoot) {
            return powerOnBoot(Either.ofLeft(powerOnBoot));
        }

        /**
         * @param powerOnBoot Gets or sets the power on boot.
         * 
         * @return builder
         * 
         */
        public Builder powerOnBoot(PowerOnBootOption powerOnBoot) {
            return powerOnBoot(Either.ofRight(powerOnBoot));
        }

        public NetworkInterfaceArgs build() {
            return $;
        }
    }

}
