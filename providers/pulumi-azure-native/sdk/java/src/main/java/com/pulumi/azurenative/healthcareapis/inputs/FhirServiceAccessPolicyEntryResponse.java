// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.healthcareapis.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * An access policy entry.
 * 
 */
public final class FhirServiceAccessPolicyEntryResponse extends com.pulumi.resources.InvokeArgs {

    public static final FhirServiceAccessPolicyEntryResponse Empty = new FhirServiceAccessPolicyEntryResponse();

    /**
     * An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.
     * 
     */
    @Import(name="objectId", required=true)
    private String objectId;

    /**
     * @return An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.
     * 
     */
    public String objectId() {
        return this.objectId;
    }

    private FhirServiceAccessPolicyEntryResponse() {}

    private FhirServiceAccessPolicyEntryResponse(FhirServiceAccessPolicyEntryResponse $) {
        this.objectId = $.objectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FhirServiceAccessPolicyEntryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FhirServiceAccessPolicyEntryResponse $;

        public Builder() {
            $ = new FhirServiceAccessPolicyEntryResponse();
        }

        public Builder(FhirServiceAccessPolicyEntryResponse defaults) {
            $ = new FhirServiceAccessPolicyEntryResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param objectId An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            $.objectId = objectId;
            return this;
        }

        public FhirServiceAccessPolicyEntryResponse build() {
            $.objectId = Objects.requireNonNull($.objectId, "expected parameter 'objectId' to be non-null");
            return $;
        }
    }

}
