// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The routing policy object used in a RoutingIntent resource.
 * 
 */
public final class RoutingPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final RoutingPolicyResponse Empty = new RoutingPolicyResponse();

    /**
     * List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
     * 
     */
    @Import(name="destinations", required=true)
    private List<String> destinations;

    /**
     * @return List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
     * 
     */
    public List<String> destinations() {
        return this.destinations;
    }

    /**
     * The unique name for the routing policy.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The unique name for the routing policy.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The next hop resource id on which this routing policy is applicable to.
     * 
     */
    @Import(name="nextHop", required=true)
    private String nextHop;

    /**
     * @return The next hop resource id on which this routing policy is applicable to.
     * 
     */
    public String nextHop() {
        return this.nextHop;
    }

    private RoutingPolicyResponse() {}

    private RoutingPolicyResponse(RoutingPolicyResponse $) {
        this.destinations = $.destinations;
        this.name = $.name;
        this.nextHop = $.nextHop;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutingPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutingPolicyResponse $;

        public Builder() {
            $ = new RoutingPolicyResponse();
        }

        public Builder(RoutingPolicyResponse defaults) {
            $ = new RoutingPolicyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinations List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<String> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
         * 
         * @return builder
         * 
         */
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param name The unique name for the routing policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param nextHop The next hop resource id on which this routing policy is applicable to.
         * 
         * @return builder
         * 
         */
        public Builder nextHop(String nextHop) {
            $.nextHop = nextHop;
            return this;
        }

        public RoutingPolicyResponse build() {
            $.destinations = Objects.requireNonNull($.destinations, "expected parameter 'destinations' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.nextHop = Objects.requireNonNull($.nextHop, "expected parameter 'nextHop' to be non-null");
            return $;
        }
    }

}
