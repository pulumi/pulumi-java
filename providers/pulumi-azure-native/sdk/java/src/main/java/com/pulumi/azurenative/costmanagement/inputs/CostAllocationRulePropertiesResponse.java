// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.azurenative.costmanagement.inputs.CostAllocationRuleDetailsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties of a cost allocation rule
 * 
 */
public final class CostAllocationRulePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final CostAllocationRulePropertiesResponse Empty = new CostAllocationRulePropertiesResponse();

    /**
     * Time at which the rule was created. Rules that change cost for the same resource are applied in order of creation.
     * 
     */
    @Import(name="createdDate", required=true)
    private String createdDate;

    /**
     * @return Time at which the rule was created. Rules that change cost for the same resource are applied in order of creation.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }

    /**
     * Description of a cost allocation rule.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Description of a cost allocation rule.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Resource information for the cost allocation rule
     * 
     */
    @Import(name="details", required=true)
    private CostAllocationRuleDetailsResponse details;

    /**
     * @return Resource information for the cost allocation rule
     * 
     */
    public CostAllocationRuleDetailsResponse details() {
        return this.details;
    }

    /**
     * Status of the rule
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Status of the rule
     * 
     */
    public String status() {
        return this.status;
    }

    /**
     * Time at which the rule was last updated.
     * 
     */
    @Import(name="updatedDate", required=true)
    private String updatedDate;

    /**
     * @return Time at which the rule was last updated.
     * 
     */
    public String updatedDate() {
        return this.updatedDate;
    }

    private CostAllocationRulePropertiesResponse() {}

    private CostAllocationRulePropertiesResponse(CostAllocationRulePropertiesResponse $) {
        this.createdDate = $.createdDate;
        this.description = $.description;
        this.details = $.details;
        this.status = $.status;
        this.updatedDate = $.updatedDate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CostAllocationRulePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CostAllocationRulePropertiesResponse $;

        public Builder() {
            $ = new CostAllocationRulePropertiesResponse();
        }

        public Builder(CostAllocationRulePropertiesResponse defaults) {
            $ = new CostAllocationRulePropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdDate Time at which the rule was created. Rules that change cost for the same resource are applied in order of creation.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(String createdDate) {
            $.createdDate = createdDate;
            return this;
        }

        /**
         * @param description Description of a cost allocation rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param details Resource information for the cost allocation rule
         * 
         * @return builder
         * 
         */
        public Builder details(CostAllocationRuleDetailsResponse details) {
            $.details = details;
            return this;
        }

        /**
         * @param status Status of the rule
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        /**
         * @param updatedDate Time at which the rule was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedDate(String updatedDate) {
            $.updatedDate = updatedDate;
            return this;
        }

        public CostAllocationRulePropertiesResponse build() {
            $.createdDate = Objects.requireNonNull($.createdDate, "expected parameter 'createdDate' to be non-null");
            $.details = Objects.requireNonNull($.details, "expected parameter 'details' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.updatedDate = Objects.requireNonNull($.updatedDate, "expected parameter 'updatedDate' to be non-null");
            return $;
        }
    }

}
