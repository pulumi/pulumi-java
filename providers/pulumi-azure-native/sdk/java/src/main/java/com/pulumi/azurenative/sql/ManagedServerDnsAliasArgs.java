// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedServerDnsAliasArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedServerDnsAliasArgs Empty = new ManagedServerDnsAliasArgs();

    /**
     * Whether or not DNS record should be created for this alias.
     * 
     */
    @Import(name="createDnsRecord")
    private @Nullable Output<Boolean> createDnsRecord;

    /**
     * @return Whether or not DNS record should be created for this alias.
     * 
     */
    public Optional<Output<Boolean>> createDnsRecord() {
        return Optional.ofNullable(this.createDnsRecord);
    }

    @Import(name="dnsAliasName")
    private @Nullable Output<String> dnsAliasName;

    public Optional<Output<String>> dnsAliasName() {
        return Optional.ofNullable(this.dnsAliasName);
    }

    /**
     * The name of the managed instance.
     * 
     */
    @Import(name="managedInstanceName", required=true)
    private Output<String> managedInstanceName;

    /**
     * @return The name of the managed instance.
     * 
     */
    public Output<String> managedInstanceName() {
        return this.managedInstanceName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private ManagedServerDnsAliasArgs() {}

    private ManagedServerDnsAliasArgs(ManagedServerDnsAliasArgs $) {
        this.createDnsRecord = $.createDnsRecord;
        this.dnsAliasName = $.dnsAliasName;
        this.managedInstanceName = $.managedInstanceName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedServerDnsAliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedServerDnsAliasArgs $;

        public Builder() {
            $ = new ManagedServerDnsAliasArgs();
        }

        public Builder(ManagedServerDnsAliasArgs defaults) {
            $ = new ManagedServerDnsAliasArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createDnsRecord Whether or not DNS record should be created for this alias.
         * 
         * @return builder
         * 
         */
        public Builder createDnsRecord(@Nullable Output<Boolean> createDnsRecord) {
            $.createDnsRecord = createDnsRecord;
            return this;
        }

        /**
         * @param createDnsRecord Whether or not DNS record should be created for this alias.
         * 
         * @return builder
         * 
         */
        public Builder createDnsRecord(Boolean createDnsRecord) {
            return createDnsRecord(Output.of(createDnsRecord));
        }

        public Builder dnsAliasName(@Nullable Output<String> dnsAliasName) {
            $.dnsAliasName = dnsAliasName;
            return this;
        }

        public Builder dnsAliasName(String dnsAliasName) {
            return dnsAliasName(Output.of(dnsAliasName));
        }

        /**
         * @param managedInstanceName The name of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceName(Output<String> managedInstanceName) {
            $.managedInstanceName = managedInstanceName;
            return this;
        }

        /**
         * @param managedInstanceName The name of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceName(String managedInstanceName) {
            return managedInstanceName(Output.of(managedInstanceName));
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ManagedServerDnsAliasArgs build() {
            $.createDnsRecord = Codegen.booleanProp("createDnsRecord").output().arg($.createDnsRecord).def(true).getNullable();
            $.managedInstanceName = Objects.requireNonNull($.managedInstanceName, "expected parameter 'managedInstanceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
