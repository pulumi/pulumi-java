// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.inputs;

import com.pulumi.azurenative.labservices.inputs.ReferenceVmResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents resource specific settings
 * 
 */
public final class ResourceSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResourceSettingsResponse Empty = new ResourceSettingsResponse();

    /**
     * The translated compute cores of the virtual machine
     * 
     */
    @Import(name="cores", required=true)
    private Integer cores;

    public Integer cores() {
        return this.cores;
    }

    /**
     * The resource id of the gallery image used for creating the virtual machine
     * 
     */
    @Import(name="galleryImageResourceId")
    private @Nullable String galleryImageResourceId;

    public Optional<String> galleryImageResourceId() {
        return Optional.ofNullable(this.galleryImageResourceId);
    }

    /**
     * The unique id of the resource setting
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * The name of the image used to created the environment setting
     * 
     */
    @Import(name="imageName", required=true)
    private String imageName;

    public String imageName() {
        return this.imageName;
    }

    /**
     * Details specific to Reference Vm
     * 
     */
    @Import(name="referenceVm", required=true)
    private ReferenceVmResponse referenceVm;

    public ReferenceVmResponse referenceVm() {
        return this.referenceVm;
    }

    /**
     * The size of the virtual machine
     * 
     */
    @Import(name="size")
    private @Nullable String size;

    public Optional<String> size() {
        return Optional.ofNullable(this.size);
    }

    private ResourceSettingsResponse() {}

    private ResourceSettingsResponse(ResourceSettingsResponse $) {
        this.cores = $.cores;
        this.galleryImageResourceId = $.galleryImageResourceId;
        this.id = $.id;
        this.imageName = $.imageName;
        this.referenceVm = $.referenceVm;
        this.size = $.size;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceSettingsResponse $;

        public Builder() {
            $ = new ResourceSettingsResponse();
        }

        public Builder(ResourceSettingsResponse defaults) {
            $ = new ResourceSettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder cores(Integer cores) {
            $.cores = cores;
            return this;
        }

        public Builder galleryImageResourceId(@Nullable String galleryImageResourceId) {
            $.galleryImageResourceId = galleryImageResourceId;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder imageName(String imageName) {
            $.imageName = imageName;
            return this;
        }

        public Builder referenceVm(ReferenceVmResponse referenceVm) {
            $.referenceVm = referenceVm;
            return this;
        }

        public Builder size(@Nullable String size) {
            $.size = size;
            return this;
        }

        public ResourceSettingsResponse build() {
            $.cores = Objects.requireNonNull($.cores, "expected parameter 'cores' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.imageName = Objects.requireNonNull($.imageName, "expected parameter 'imageName' to be non-null");
            $.referenceVm = Objects.requireNonNull($.referenceVm, "expected parameter 'referenceVm' to be non-null");
            return $;
        }
    }

}
