// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute;

import com.pulumi.azurenative.compute.inputs.SharingProfileArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GalleryArgs extends com.pulumi.resources.ResourceArgs {

    public static final GalleryArgs Empty = new GalleryArgs();

    /**
     * The description of this Shared Image Gallery resource. This property is updatable.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of this Shared Image Gallery resource. This property is updatable.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
     * 
     */
    @Import(name="galleryName")
    private @Nullable Output<String> galleryName;

    /**
     * @return The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
     * 
     */
    public Optional<Output<String>> galleryName() {
        return Optional.ofNullable(this.galleryName);
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource location
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Profile for gallery sharing to subscription or tenant
     * 
     */
    @Import(name="sharingProfile")
    private @Nullable Output<SharingProfileArgs> sharingProfile;

    /**
     * @return Profile for gallery sharing to subscription or tenant
     * 
     */
    public Optional<Output<SharingProfileArgs>> sharingProfile() {
        return Optional.ofNullable(this.sharingProfile);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GalleryArgs() {}

    private GalleryArgs(GalleryArgs $) {
        this.description = $.description;
        this.galleryName = $.galleryName;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.sharingProfile = $.sharingProfile;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GalleryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GalleryArgs $;

        public Builder() {
            $ = new GalleryArgs();
        }

        public Builder(GalleryArgs defaults) {
            $ = new GalleryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of this Shared Image Gallery resource. This property is updatable.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of this Shared Image Gallery resource. This property is updatable.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
         * 
         * @return builder
         * 
         */
        public Builder galleryName(@Nullable Output<String> galleryName) {
            $.galleryName = galleryName;
            return this;
        }

        /**
         * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
         * 
         * @return builder
         * 
         */
        public Builder galleryName(String galleryName) {
            return galleryName(Output.of(galleryName));
        }

        /**
         * @param location Resource location
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource location
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sharingProfile Profile for gallery sharing to subscription or tenant
         * 
         * @return builder
         * 
         */
        public Builder sharingProfile(@Nullable Output<SharingProfileArgs> sharingProfile) {
            $.sharingProfile = sharingProfile;
            return this;
        }

        /**
         * @param sharingProfile Profile for gallery sharing to subscription or tenant
         * 
         * @return builder
         * 
         */
        public Builder sharingProfile(SharingProfileArgs sharingProfile) {
            return sharingProfile(Output.of(sharingProfile));
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GalleryArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
