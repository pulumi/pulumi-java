// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.outputs;

import com.pulumi.azurenative.apimanagement.outputs.KeyVaultContractPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamedValueResult {
    /**
     * Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
     * 
     */
    private final String displayName;
    /**
     * Resource ID.
     * 
     */
    private final String id;
    /**
     * KeyVault location details of the namedValue.
     * 
     */
    private final @Nullable KeyVaultContractPropertiesResponse keyVault;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * Determines whether the value is a secret and should be encrypted or not. Default value is false.
     * 
     */
    private final @Nullable Boolean secret;
    /**
     * Optional tags that when provided can be used to filter the NamedValue list.
     * 
     */
    private final @Nullable List<String> tags;
    /**
     * Resource type for API Management resource.
     * 
     */
    private final String type;
    /**
     * Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
     * 
     */
    private final @Nullable String value;

    @CustomType.Constructor
    private GetNamedValueResult(
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("keyVault") @Nullable KeyVaultContractPropertiesResponse keyVault,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("secret") @Nullable Boolean secret,
        @CustomType.Parameter("tags") @Nullable List<String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("value") @Nullable String value) {
        this.displayName = displayName;
        this.id = id;
        this.keyVault = keyVault;
        this.name = name;
        this.secret = secret;
        this.tags = tags;
        this.type = type;
        this.value = value;
    }

    /**
     * Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
     * 
    */
    public String displayName() {
        return this.displayName;
    }
    /**
     * Resource ID.
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * KeyVault location details of the namedValue.
     * 
    */
    public Optional<KeyVaultContractPropertiesResponse> keyVault() {
        return Optional.ofNullable(this.keyVault);
    }
    /**
     * Resource name.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * Determines whether the value is a secret and should be encrypted or not. Default value is false.
     * 
    */
    public Optional<Boolean> secret() {
        return Optional.ofNullable(this.secret);
    }
    /**
     * Optional tags that when provided can be used to filter the NamedValue list.
     * 
    */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * Resource type for API Management resource.
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
     * 
    */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamedValueResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String displayName;
        private String id;
        private @Nullable KeyVaultContractPropertiesResponse keyVault;
        private String name;
        private @Nullable Boolean secret;
        private @Nullable List<String> tags;
        private String type;
        private @Nullable String value;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNamedValueResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.keyVault = defaults.keyVault;
    	      this.name = defaults.name;
    	      this.secret = defaults.secret;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder keyVault(@Nullable KeyVaultContractPropertiesResponse keyVault) {
            this.keyVault = keyVault;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder secret(@Nullable Boolean secret) {
            this.secret = secret;
            return this;
        }
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }        public GetNamedValueResult build() {
            return new GetNamedValueResult(displayName, id, keyVault, name, secret, tags, type, value);
        }
    }
}
