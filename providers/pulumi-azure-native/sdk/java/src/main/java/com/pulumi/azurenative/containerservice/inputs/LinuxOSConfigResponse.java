// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.inputs;

import com.pulumi.azurenative.containerservice.inputs.SysctlConfigResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * OS configurations of Linux agent nodes.
 * 
 */
public final class LinuxOSConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final LinuxOSConfigResponse Empty = new LinuxOSConfigResponse();

    /**
     * SwapFileSizeMB specifies size in MB of a swap file will be created on each node.
     * 
     */
    @Import(name="swapFileSizeMB")
    private @Nullable Integer swapFileSizeMB;

    /**
     * @return SwapFileSizeMB specifies size in MB of a swap file will be created on each node.
     * 
     */
    public Optional<Integer> swapFileSizeMB() {
        return Optional.ofNullable(this.swapFileSizeMB);
    }

    /**
     * Sysctl settings for Linux agent nodes.
     * 
     */
    @Import(name="sysctls")
    private @Nullable SysctlConfigResponse sysctls;

    /**
     * @return Sysctl settings for Linux agent nodes.
     * 
     */
    public Optional<SysctlConfigResponse> sysctls() {
        return Optional.ofNullable(this.sysctls);
    }

    /**
     * Transparent Huge Page defrag configuration.
     * 
     */
    @Import(name="transparentHugePageDefrag")
    private @Nullable String transparentHugePageDefrag;

    /**
     * @return Transparent Huge Page defrag configuration.
     * 
     */
    public Optional<String> transparentHugePageDefrag() {
        return Optional.ofNullable(this.transparentHugePageDefrag);
    }

    /**
     * Transparent Huge Page enabled configuration.
     * 
     */
    @Import(name="transparentHugePageEnabled")
    private @Nullable String transparentHugePageEnabled;

    /**
     * @return Transparent Huge Page enabled configuration.
     * 
     */
    public Optional<String> transparentHugePageEnabled() {
        return Optional.ofNullable(this.transparentHugePageEnabled);
    }

    private LinuxOSConfigResponse() {}

    private LinuxOSConfigResponse(LinuxOSConfigResponse $) {
        this.swapFileSizeMB = $.swapFileSizeMB;
        this.sysctls = $.sysctls;
        this.transparentHugePageDefrag = $.transparentHugePageDefrag;
        this.transparentHugePageEnabled = $.transparentHugePageEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxOSConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxOSConfigResponse $;

        public Builder() {
            $ = new LinuxOSConfigResponse();
        }

        public Builder(LinuxOSConfigResponse defaults) {
            $ = new LinuxOSConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param swapFileSizeMB SwapFileSizeMB specifies size in MB of a swap file will be created on each node.
         * 
         * @return builder
         * 
         */
        public Builder swapFileSizeMB(@Nullable Integer swapFileSizeMB) {
            $.swapFileSizeMB = swapFileSizeMB;
            return this;
        }

        /**
         * @param sysctls Sysctl settings for Linux agent nodes.
         * 
         * @return builder
         * 
         */
        public Builder sysctls(@Nullable SysctlConfigResponse sysctls) {
            $.sysctls = sysctls;
            return this;
        }

        /**
         * @param transparentHugePageDefrag Transparent Huge Page defrag configuration.
         * 
         * @return builder
         * 
         */
        public Builder transparentHugePageDefrag(@Nullable String transparentHugePageDefrag) {
            $.transparentHugePageDefrag = transparentHugePageDefrag;
            return this;
        }

        /**
         * @param transparentHugePageEnabled Transparent Huge Page enabled configuration.
         * 
         * @return builder
         * 
         */
        public Builder transparentHugePageEnabled(@Nullable String transparentHugePageEnabled) {
            $.transparentHugePageEnabled = transparentHugePageEnabled;
            return this;
        }

        public LinuxOSConfigResponse build() {
            return $;
        }
    }

}
