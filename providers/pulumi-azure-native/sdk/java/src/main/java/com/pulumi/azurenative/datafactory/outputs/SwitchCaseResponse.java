// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.AppendVariableActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureDataExplorerCommandActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureFunctionActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureMLBatchExecutionActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureMLExecutePipelineActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureMLUpdateResourceActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.ControlActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.CopyActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.CustomActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.DataLakeAnalyticsUSQLActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.DatabricksNotebookActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.DatabricksSparkJarActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.DatabricksSparkPythonActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.DeleteActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.ExecuteDataFlowActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.ExecutePipelineActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.ExecuteSSISPackageActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.ExecuteWranglingDataflowActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.ExecutionActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.FailActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.FilterActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.ForEachActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.GetMetadataActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.HDInsightHiveActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.HDInsightMapReduceActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.HDInsightPigActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.HDInsightSparkActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.HDInsightStreamingActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.IfConditionActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.LookupActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.SetVariableActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.SqlServerStoredProcedureActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.SwitchActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.UntilActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.ValidationActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.WaitActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.WebActivityResponse;
import com.pulumi.azurenative.datafactory.outputs.WebHookActivityResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SwitchCaseResponse {
    /**
     * List of activities to execute for satisfied case condition.
     * 
     */
    private final @Nullable List<Object> activities;
    /**
     * Expected value that satisfies the expression result of the 'on' property.
     * 
     */
    private final @Nullable String value;

    @CustomType.Constructor
    private SwitchCaseResponse(
        @CustomType.Parameter("activities") @Nullable List<Object> activities,
        @CustomType.Parameter("value") @Nullable String value) {
        this.activities = activities;
        this.value = value;
    }

    /**
     * List of activities to execute for satisfied case condition.
     * 
    */
    public List<Object> activities() {
        return this.activities == null ? List.of() : this.activities;
    }
    /**
     * Expected value that satisfies the expression result of the 'on' property.
     * 
    */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SwitchCaseResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<Object> activities;
        private @Nullable String value;

        public Builder() {
    	      // Empty
        }

        public Builder(SwitchCaseResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activities = defaults.activities;
    	      this.value = defaults.value;
        }

        public Builder activities(@Nullable List<Object> activities) {
            this.activities = activities;
            return this;
        }
        public Builder activities(Object... activities) {
            return activities(List.of(activities));
        }
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }        public SwitchCaseResponse build() {
            return new SwitchCaseResponse(activities, value);
        }
    }
}
