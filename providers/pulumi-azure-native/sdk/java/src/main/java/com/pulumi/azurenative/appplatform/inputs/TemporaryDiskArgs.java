// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Temporary disk payload
 * 
 */
public final class TemporaryDiskArgs extends com.pulumi.resources.ResourceArgs {

    public static final TemporaryDiskArgs Empty = new TemporaryDiskArgs();

    /**
     * Mount path of the temporary disk
     * 
     */
    @Import(name="mountPath")
    private @Nullable Output<String> mountPath;

    /**
     * @return Mount path of the temporary disk
     * 
     */
    public Optional<Output<String>> mountPath() {
        return Optional.ofNullable(this.mountPath);
    }

    /**
     * Size of the temporary disk in GB
     * 
     */
    @Import(name="sizeInGB")
    private @Nullable Output<Integer> sizeInGB;

    /**
     * @return Size of the temporary disk in GB
     * 
     */
    public Optional<Output<Integer>> sizeInGB() {
        return Optional.ofNullable(this.sizeInGB);
    }

    private TemporaryDiskArgs() {}

    private TemporaryDiskArgs(TemporaryDiskArgs $) {
        this.mountPath = $.mountPath;
        this.sizeInGB = $.sizeInGB;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemporaryDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemporaryDiskArgs $;

        public Builder() {
            $ = new TemporaryDiskArgs();
        }

        public Builder(TemporaryDiskArgs defaults) {
            $ = new TemporaryDiskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mountPath Mount path of the temporary disk
         * 
         * @return builder
         * 
         */
        public Builder mountPath(@Nullable Output<String> mountPath) {
            $.mountPath = mountPath;
            return this;
        }

        /**
         * @param mountPath Mount path of the temporary disk
         * 
         * @return builder
         * 
         */
        public Builder mountPath(String mountPath) {
            return mountPath(Output.of(mountPath));
        }

        /**
         * @param sizeInGB Size of the temporary disk in GB
         * 
         * @return builder
         * 
         */
        public Builder sizeInGB(@Nullable Output<Integer> sizeInGB) {
            $.sizeInGB = sizeInGB;
            return this;
        }

        /**
         * @param sizeInGB Size of the temporary disk in GB
         * 
         * @return builder
         * 
         */
        public Builder sizeInGB(Integer sizeInGB) {
            return sizeInGB(Output.of(sizeInGB));
        }

        public TemporaryDiskArgs build() {
            $.mountPath = Codegen.stringProp("mountPath").output().arg($.mountPath).def("/tmp").getNullable();
            return $;
        }
    }

}
