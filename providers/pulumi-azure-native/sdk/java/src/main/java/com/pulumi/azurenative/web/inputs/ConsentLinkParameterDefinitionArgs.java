// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Consent link definition
 * 
 */
public final class ConsentLinkParameterDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsentLinkParameterDefinitionArgs Empty = new ConsentLinkParameterDefinitionArgs();

    /**
     * AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
     * 
     */
    @Import(name="objectId")
    private @Nullable Output<String> objectId;

    /**
     * @return AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
     * 
     */
    public Optional<Output<String>> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * Name of the parameter in the connection provider&#39;s OAuth settings
     * 
     */
    @Import(name="parameterName")
    private @Nullable Output<String> parameterName;

    /**
     * @return Name of the parameter in the connection provider&#39;s OAuth settings
     * 
     */
    public Optional<Output<String>> parameterName() {
        return Optional.ofNullable(this.parameterName);
    }

    /**
     * Name of the parameter in the connection provider&#39;s OAuth settings
     * 
     */
    @Import(name="redirectUrl")
    private @Nullable Output<String> redirectUrl;

    /**
     * @return Name of the parameter in the connection provider&#39;s OAuth settings
     * 
     */
    public Optional<Output<String>> redirectUrl() {
        return Optional.ofNullable(this.redirectUrl);
    }

    /**
     * The tenant id
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return The tenant id
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private ConsentLinkParameterDefinitionArgs() {}

    private ConsentLinkParameterDefinitionArgs(ConsentLinkParameterDefinitionArgs $) {
        this.objectId = $.objectId;
        this.parameterName = $.parameterName;
        this.redirectUrl = $.redirectUrl;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsentLinkParameterDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsentLinkParameterDefinitionArgs $;

        public Builder() {
            $ = new ConsentLinkParameterDefinitionArgs();
        }

        public Builder(ConsentLinkParameterDefinitionArgs defaults) {
            $ = new ConsentLinkParameterDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param objectId AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        /**
         * @param parameterName Name of the parameter in the connection provider&#39;s OAuth settings
         * 
         * @return builder
         * 
         */
        public Builder parameterName(@Nullable Output<String> parameterName) {
            $.parameterName = parameterName;
            return this;
        }

        /**
         * @param parameterName Name of the parameter in the connection provider&#39;s OAuth settings
         * 
         * @return builder
         * 
         */
        public Builder parameterName(String parameterName) {
            return parameterName(Output.of(parameterName));
        }

        /**
         * @param redirectUrl Name of the parameter in the connection provider&#39;s OAuth settings
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(@Nullable Output<String> redirectUrl) {
            $.redirectUrl = redirectUrl;
            return this;
        }

        /**
         * @param redirectUrl Name of the parameter in the connection provider&#39;s OAuth settings
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(String redirectUrl) {
            return redirectUrl(Output.of(redirectUrl));
        }

        /**
         * @param tenantId The tenant id
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The tenant id
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public ConsentLinkParameterDefinitionArgs build() {
            return $;
        }
    }

}
