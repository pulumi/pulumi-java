// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.SourceVaultResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Key Vault Secret Url and vault id of the encryption key
 * 
 */
public final class KeyVaultAndSecretReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final KeyVaultAndSecretReferenceResponse Empty = new KeyVaultAndSecretReferenceResponse();

    /**
     * Url pointing to a key or secret in KeyVault
     * 
     */
    @Import(name="secretUrl", required=true)
    private String secretUrl;

    public String secretUrl() {
        return this.secretUrl;
    }

    /**
     * Resource id of the KeyVault containing the key or secret
     * 
     */
    @Import(name="sourceVault", required=true)
    private SourceVaultResponse sourceVault;

    public SourceVaultResponse sourceVault() {
        return this.sourceVault;
    }

    private KeyVaultAndSecretReferenceResponse() {}

    private KeyVaultAndSecretReferenceResponse(KeyVaultAndSecretReferenceResponse $) {
        this.secretUrl = $.secretUrl;
        this.sourceVault = $.sourceVault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyVaultAndSecretReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVaultAndSecretReferenceResponse $;

        public Builder() {
            $ = new KeyVaultAndSecretReferenceResponse();
        }

        public Builder(KeyVaultAndSecretReferenceResponse defaults) {
            $ = new KeyVaultAndSecretReferenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder secretUrl(String secretUrl) {
            $.secretUrl = secretUrl;
            return this;
        }

        public Builder sourceVault(SourceVaultResponse sourceVault) {
            $.sourceVault = sourceVault;
            return this;
        }

        public KeyVaultAndSecretReferenceResponse build() {
            $.secretUrl = Objects.requireNonNull($.secretUrl, "expected parameter 'secretUrl' to be non-null");
            $.sourceVault = Objects.requireNonNull($.sourceVault, "expected parameter 'sourceVault' to be non-null");
            return $;
        }
    }

}
