// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Information about the retry policy for an event subscription.
 * 
 */
public final class RetryPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RetryPolicyArgs Empty = new RetryPolicyArgs();

    /**
     * Time To Live (in minutes) for events.
     * 
     */
    @Import(name="eventTimeToLiveInMinutes")
    private @Nullable Output<Integer> eventTimeToLiveInMinutes;

    /**
     * @return Time To Live (in minutes) for events.
     * 
     */
    public Optional<Output<Integer>> eventTimeToLiveInMinutes() {
        return Optional.ofNullable(this.eventTimeToLiveInMinutes);
    }

    /**
     * Maximum number of delivery retry attempts for events.
     * 
     */
    @Import(name="maxDeliveryAttempts")
    private @Nullable Output<Integer> maxDeliveryAttempts;

    /**
     * @return Maximum number of delivery retry attempts for events.
     * 
     */
    public Optional<Output<Integer>> maxDeliveryAttempts() {
        return Optional.ofNullable(this.maxDeliveryAttempts);
    }

    private RetryPolicyArgs() {}

    private RetryPolicyArgs(RetryPolicyArgs $) {
        this.eventTimeToLiveInMinutes = $.eventTimeToLiveInMinutes;
        this.maxDeliveryAttempts = $.maxDeliveryAttempts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RetryPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RetryPolicyArgs $;

        public Builder() {
            $ = new RetryPolicyArgs();
        }

        public Builder(RetryPolicyArgs defaults) {
            $ = new RetryPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventTimeToLiveInMinutes Time To Live (in minutes) for events.
         * 
         * @return builder
         * 
         */
        public Builder eventTimeToLiveInMinutes(@Nullable Output<Integer> eventTimeToLiveInMinutes) {
            $.eventTimeToLiveInMinutes = eventTimeToLiveInMinutes;
            return this;
        }

        /**
         * @param eventTimeToLiveInMinutes Time To Live (in minutes) for events.
         * 
         * @return builder
         * 
         */
        public Builder eventTimeToLiveInMinutes(Integer eventTimeToLiveInMinutes) {
            return eventTimeToLiveInMinutes(Output.of(eventTimeToLiveInMinutes));
        }

        /**
         * @param maxDeliveryAttempts Maximum number of delivery retry attempts for events.
         * 
         * @return builder
         * 
         */
        public Builder maxDeliveryAttempts(@Nullable Output<Integer> maxDeliveryAttempts) {
            $.maxDeliveryAttempts = maxDeliveryAttempts;
            return this;
        }

        /**
         * @param maxDeliveryAttempts Maximum number of delivery retry attempts for events.
         * 
         * @return builder
         * 
         */
        public Builder maxDeliveryAttempts(Integer maxDeliveryAttempts) {
            return maxDeliveryAttempts(Output.of(maxDeliveryAttempts));
        }

        public RetryPolicyArgs build() {
            $.eventTimeToLiveInMinutes = Codegen.integerProp("eventTimeToLiveInMinutes").output().arg($.eventTimeToLiveInMinutes).def(1440).getNullable();
            $.maxDeliveryAttempts = Codegen.integerProp("maxDeliveryAttempts").output().arg($.maxDeliveryAttempts).def(30).getNullable();
            return $;
        }
    }

}
