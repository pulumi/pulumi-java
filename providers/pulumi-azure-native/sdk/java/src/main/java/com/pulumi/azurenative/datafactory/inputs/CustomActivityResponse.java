// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.ActivityDependencyResponse;
import com.pulumi.azurenative.datafactory.inputs.ActivityPolicyResponse;
import com.pulumi.azurenative.datafactory.inputs.CustomActivityReferenceObjectResponse;
import com.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.UserPropertyResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Custom activity type.
 * 
 */
public final class CustomActivityResponse extends com.pulumi.resources.InvokeArgs {

    public static final CustomActivityResponse Empty = new CustomActivityResponse();

    /**
     * Elevation level and scope for the user, default is nonadmin task. Type: string (or Expression with resultType double).
     * 
     */
    @Import(name="autoUserSpecification")
    private @Nullable Object autoUserSpecification;

    public Optional<Object> autoUserSpecification() {
        return Optional.ofNullable(this.autoUserSpecification);
    }

    /**
     * Command for custom activity Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="command", required=true)
    private Object command;

    public Object command() {
        return this.command;
    }

    /**
     * Activity depends on condition.
     * 
     */
    @Import(name="dependsOn")
    private @Nullable List<ActivityDependencyResponse> dependsOn;

    public Optional<List<ActivityDependencyResponse>> dependsOn() {
        return Optional.ofNullable(this.dependsOn);
    }

    /**
     * Activity description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.
     * 
     */
    @Import(name="extendedProperties")
    private @Nullable Map<String,Object> extendedProperties;

    public Optional<Map<String,Object>> extendedProperties() {
        return Optional.ofNullable(this.extendedProperties);
    }

    /**
     * Folder path for resource files Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="folderPath")
    private @Nullable Object folderPath;

    public Optional<Object> folderPath() {
        return Optional.ofNullable(this.folderPath);
    }

    /**
     * Linked service reference.
     * 
     */
    @Import(name="linkedServiceName")
    private @Nullable LinkedServiceReferenceResponse linkedServiceName;

    public Optional<LinkedServiceReferenceResponse> linkedServiceName() {
        return Optional.ofNullable(this.linkedServiceName);
    }

    /**
     * Activity name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Activity policy.
     * 
     */
    @Import(name="policy")
    private @Nullable ActivityPolicyResponse policy;

    public Optional<ActivityPolicyResponse> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Reference objects
     * 
     */
    @Import(name="referenceObjects")
    private @Nullable CustomActivityReferenceObjectResponse referenceObjects;

    public Optional<CustomActivityReferenceObjectResponse> referenceObjects() {
        return Optional.ofNullable(this.referenceObjects);
    }

    /**
     * Resource linked service reference.
     * 
     */
    @Import(name="resourceLinkedService")
    private @Nullable LinkedServiceReferenceResponse resourceLinkedService;

    public Optional<LinkedServiceReferenceResponse> resourceLinkedService() {
        return Optional.ofNullable(this.resourceLinkedService);
    }

    /**
     * The retention time for the files submitted for custom activity. Type: double (or Expression with resultType double).
     * 
     */
    @Import(name="retentionTimeInDays")
    private @Nullable Object retentionTimeInDays;

    public Optional<Object> retentionTimeInDays() {
        return Optional.ofNullable(this.retentionTimeInDays);
    }

    /**
     * Type of activity.
     * Expected value is &#39;Custom&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    /**
     * Activity user properties.
     * 
     */
    @Import(name="userProperties")
    private @Nullable List<UserPropertyResponse> userProperties;

    public Optional<List<UserPropertyResponse>> userProperties() {
        return Optional.ofNullable(this.userProperties);
    }

    private CustomActivityResponse() {}

    private CustomActivityResponse(CustomActivityResponse $) {
        this.autoUserSpecification = $.autoUserSpecification;
        this.command = $.command;
        this.dependsOn = $.dependsOn;
        this.description = $.description;
        this.extendedProperties = $.extendedProperties;
        this.folderPath = $.folderPath;
        this.linkedServiceName = $.linkedServiceName;
        this.name = $.name;
        this.policy = $.policy;
        this.referenceObjects = $.referenceObjects;
        this.resourceLinkedService = $.resourceLinkedService;
        this.retentionTimeInDays = $.retentionTimeInDays;
        this.type = $.type;
        this.userProperties = $.userProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomActivityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomActivityResponse $;

        public Builder() {
            $ = new CustomActivityResponse();
        }

        public Builder(CustomActivityResponse defaults) {
            $ = new CustomActivityResponse(Objects.requireNonNull(defaults));
        }

        public Builder autoUserSpecification(@Nullable Object autoUserSpecification) {
            $.autoUserSpecification = autoUserSpecification;
            return this;
        }

        public Builder command(Object command) {
            $.command = command;
            return this;
        }

        public Builder dependsOn(@Nullable List<ActivityDependencyResponse> dependsOn) {
            $.dependsOn = dependsOn;
            return this;
        }

        public Builder dependsOn(ActivityDependencyResponse... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder extendedProperties(@Nullable Map<String,Object> extendedProperties) {
            $.extendedProperties = extendedProperties;
            return this;
        }

        public Builder folderPath(@Nullable Object folderPath) {
            $.folderPath = folderPath;
            return this;
        }

        public Builder linkedServiceName(@Nullable LinkedServiceReferenceResponse linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder policy(@Nullable ActivityPolicyResponse policy) {
            $.policy = policy;
            return this;
        }

        public Builder referenceObjects(@Nullable CustomActivityReferenceObjectResponse referenceObjects) {
            $.referenceObjects = referenceObjects;
            return this;
        }

        public Builder resourceLinkedService(@Nullable LinkedServiceReferenceResponse resourceLinkedService) {
            $.resourceLinkedService = resourceLinkedService;
            return this;
        }

        public Builder retentionTimeInDays(@Nullable Object retentionTimeInDays) {
            $.retentionTimeInDays = retentionTimeInDays;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder userProperties(@Nullable List<UserPropertyResponse> userProperties) {
            $.userProperties = userProperties;
            return this;
        }

        public Builder userProperties(UserPropertyResponse... userProperties) {
            return userProperties(List.of(userProperties));
        }

        public CustomActivityResponse build() {
            $.command = Objects.requireNonNull($.command, "expected parameter 'command' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
