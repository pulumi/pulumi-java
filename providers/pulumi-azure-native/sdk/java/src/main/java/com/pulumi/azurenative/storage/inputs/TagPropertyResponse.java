// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A tag of the LegalHold of a blob container.
 * 
 */
public final class TagPropertyResponse extends com.pulumi.resources.InvokeArgs {

    public static final TagPropertyResponse Empty = new TagPropertyResponse();

    /**
     * Returns the Object ID of the user who added the tag.
     * 
     */
    @Import(name="objectIdentifier", required=true)
    private String objectIdentifier;

    /**
     * @return Returns the Object ID of the user who added the tag.
     * 
     */
    public String objectIdentifier() {
        return this.objectIdentifier;
    }

    /**
     * The tag value.
     * 
     */
    @Import(name="tag", required=true)
    private String tag;

    /**
     * @return The tag value.
     * 
     */
    public String tag() {
        return this.tag;
    }

    /**
     * Returns the Tenant ID that issued the token for the user who added the tag.
     * 
     */
    @Import(name="tenantId", required=true)
    private String tenantId;

    /**
     * @return Returns the Tenant ID that issued the token for the user who added the tag.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Returns the date and time the tag was added.
     * 
     */
    @Import(name="timestamp", required=true)
    private String timestamp;

    /**
     * @return Returns the date and time the tag was added.
     * 
     */
    public String timestamp() {
        return this.timestamp;
    }

    /**
     * Returns the User Principal Name of the user who added the tag.
     * 
     */
    @Import(name="upn", required=true)
    private String upn;

    /**
     * @return Returns the User Principal Name of the user who added the tag.
     * 
     */
    public String upn() {
        return this.upn;
    }

    private TagPropertyResponse() {}

    private TagPropertyResponse(TagPropertyResponse $) {
        this.objectIdentifier = $.objectIdentifier;
        this.tag = $.tag;
        this.tenantId = $.tenantId;
        this.timestamp = $.timestamp;
        this.upn = $.upn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TagPropertyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TagPropertyResponse $;

        public Builder() {
            $ = new TagPropertyResponse();
        }

        public Builder(TagPropertyResponse defaults) {
            $ = new TagPropertyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param objectIdentifier Returns the Object ID of the user who added the tag.
         * 
         * @return builder
         * 
         */
        public Builder objectIdentifier(String objectIdentifier) {
            $.objectIdentifier = objectIdentifier;
            return this;
        }

        /**
         * @param tag The tag value.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tenantId Returns the Tenant ID that issued the token for the user who added the tag.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param timestamp Returns the date and time the tag was added.
         * 
         * @return builder
         * 
         */
        public Builder timestamp(String timestamp) {
            $.timestamp = timestamp;
            return this;
        }

        /**
         * @param upn Returns the User Principal Name of the user who added the tag.
         * 
         * @return builder
         * 
         */
        public Builder upn(String upn) {
            $.upn = upn;
            return this;
        }

        public TagPropertyResponse build() {
            $.objectIdentifier = Objects.requireNonNull($.objectIdentifier, "expected parameter 'objectIdentifier' to be non-null");
            $.tag = Objects.requireNonNull($.tag, "expected parameter 'tag' to be non-null");
            $.tenantId = Objects.requireNonNull($.tenantId, "expected parameter 'tenantId' to be non-null");
            $.timestamp = Objects.requireNonNull($.timestamp, "expected parameter 'timestamp' to be non-null");
            $.upn = Objects.requireNonNull($.upn, "expected parameter 'upn' to be non-null");
            return $;
        }
    }

}
