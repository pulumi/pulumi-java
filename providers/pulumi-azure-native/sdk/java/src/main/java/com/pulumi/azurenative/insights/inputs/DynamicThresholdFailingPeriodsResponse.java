// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


/**
 * The minimum number of violations required within the selected lookback time window required to raise an alert.
 * 
 */
public final class DynamicThresholdFailingPeriodsResponse extends com.pulumi.resources.InvokeArgs {

    public static final DynamicThresholdFailingPeriodsResponse Empty = new DynamicThresholdFailingPeriodsResponse();

    /**
     * The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods.
     * 
     */
    @Import(name="minFailingPeriodsToAlert", required=true)
    private Double minFailingPeriodsToAlert;

    /**
     * @return The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods.
     * 
     */
    public Double minFailingPeriodsToAlert() {
        return this.minFailingPeriodsToAlert;
    }

    /**
     * The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points.
     * 
     */
    @Import(name="numberOfEvaluationPeriods", required=true)
    private Double numberOfEvaluationPeriods;

    /**
     * @return The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points.
     * 
     */
    public Double numberOfEvaluationPeriods() {
        return this.numberOfEvaluationPeriods;
    }

    private DynamicThresholdFailingPeriodsResponse() {}

    private DynamicThresholdFailingPeriodsResponse(DynamicThresholdFailingPeriodsResponse $) {
        this.minFailingPeriodsToAlert = $.minFailingPeriodsToAlert;
        this.numberOfEvaluationPeriods = $.numberOfEvaluationPeriods;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DynamicThresholdFailingPeriodsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DynamicThresholdFailingPeriodsResponse $;

        public Builder() {
            $ = new DynamicThresholdFailingPeriodsResponse();
        }

        public Builder(DynamicThresholdFailingPeriodsResponse defaults) {
            $ = new DynamicThresholdFailingPeriodsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param minFailingPeriodsToAlert The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods.
         * 
         * @return builder
         * 
         */
        public Builder minFailingPeriodsToAlert(Double minFailingPeriodsToAlert) {
            $.minFailingPeriodsToAlert = minFailingPeriodsToAlert;
            return this;
        }

        /**
         * @param numberOfEvaluationPeriods The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points.
         * 
         * @return builder
         * 
         */
        public Builder numberOfEvaluationPeriods(Double numberOfEvaluationPeriods) {
            $.numberOfEvaluationPeriods = numberOfEvaluationPeriods;
            return this;
        }

        public DynamicThresholdFailingPeriodsResponse build() {
            $.minFailingPeriodsToAlert = Objects.requireNonNull($.minFailingPeriodsToAlert, "expected parameter 'minFailingPeriodsToAlert' to be non-null");
            $.numberOfEvaluationPeriods = Objects.requireNonNull($.numberOfEvaluationPeriods, "expected parameter 'numberOfEvaluationPeriods' to be non-null");
            return $;
        }
    }

}
