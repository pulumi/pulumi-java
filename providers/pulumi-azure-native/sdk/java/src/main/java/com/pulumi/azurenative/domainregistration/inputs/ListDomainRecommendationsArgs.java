// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.domainregistration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ListDomainRecommendationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListDomainRecommendationsArgs Empty = new ListDomainRecommendationsArgs();

    /**
     * Keywords to be used for generating domain recommendations.
     * 
     */
    @Import(name="keywords")
    private Output</* @Nullable */ String> keywords;

    /**
     * @return Keywords to be used for generating domain recommendations.
     * 
     */
    public Output</* @Nullable */ String> keywords() {
        return this.keywords;
    }

    /**
     * Maximum number of recommendations.
     * 
     */
    @Import(name="maxDomainRecommendations")
    private Output</* @Nullable */ Integer> maxDomainRecommendations;

    /**
     * @return Maximum number of recommendations.
     * 
     */
    public Output</* @Nullable */ Integer> maxDomainRecommendations() {
        return this.maxDomainRecommendations;
    }

    private ListDomainRecommendationsArgs() {}

    private ListDomainRecommendationsArgs(ListDomainRecommendationsArgs $) {
        this.keywords = $.keywords;
        this.maxDomainRecommendations = $.maxDomainRecommendations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListDomainRecommendationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListDomainRecommendationsArgs $;

        public Builder() {
            $ = new ListDomainRecommendationsArgs();
        }

        public Builder(ListDomainRecommendationsArgs defaults) {
            $ = new ListDomainRecommendationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keywords Keywords to be used for generating domain recommendations.
         * 
         * @return builder
         * 
         */
        public Builder keywords(Output</* @Nullable */ String> keywords) {
            $.keywords = keywords;
            return this;
        }

        /**
         * @param keywords Keywords to be used for generating domain recommendations.
         * 
         * @return builder
         * 
         */
        public Builder keywords(@Nullable String keywords) {
            return keywords(Output.of(keywords));
        }

        /**
         * @param maxDomainRecommendations Maximum number of recommendations.
         * 
         * @return builder
         * 
         */
        public Builder maxDomainRecommendations(Output</* @Nullable */ Integer> maxDomainRecommendations) {
            $.maxDomainRecommendations = maxDomainRecommendations;
            return this;
        }

        /**
         * @param maxDomainRecommendations Maximum number of recommendations.
         * 
         * @return builder
         * 
         */
        public Builder maxDomainRecommendations(@Nullable Integer maxDomainRecommendations) {
            return maxDomainRecommendations(Output.of(maxDomainRecommendations));
        }

        public ListDomainRecommendationsArgs build() {
            return $;
        }
    }

}
