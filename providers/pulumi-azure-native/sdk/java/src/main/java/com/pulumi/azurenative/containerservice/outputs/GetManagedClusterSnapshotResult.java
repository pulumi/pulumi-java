// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.outputs;

import com.pulumi.azurenative.containerservice.outputs.CreationDataResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterPropertiesForSnapshotResponse;
import com.pulumi.azurenative.containerservice.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedClusterSnapshotResult {
    /**
     * @return CreationData to be used to specify the source resource ID to create this snapshot.
     * 
     */
    private final @Nullable CreationDataResponse creationData;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * @return Resource location
     * 
     */
    private final String location;
    /**
     * @return What the properties will be showed when getting managed cluster snapshot. Those properties are read-only.
     * 
     */
    private final ManagedClusterPropertiesForSnapshotResponse managedClusterPropertiesReadOnly;
    /**
     * @return The name of the resource
     * 
     */
    private final String name;
    /**
     * @return The type of a snapshot. The default is NodePool.
     * 
     */
    private final @Nullable String snapshotType;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * @return Resource tags
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetManagedClusterSnapshotResult(
        @CustomType.Parameter("creationData") @Nullable CreationDataResponse creationData,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("managedClusterPropertiesReadOnly") ManagedClusterPropertiesForSnapshotResponse managedClusterPropertiesReadOnly,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("snapshotType") @Nullable String snapshotType,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.creationData = creationData;
        this.id = id;
        this.location = location;
        this.managedClusterPropertiesReadOnly = managedClusterPropertiesReadOnly;
        this.name = name;
        this.snapshotType = snapshotType;
        this.systemData = systemData;
        this.tags = tags;
        this.type = type;
    }

    /**
     * @return CreationData to be used to specify the source resource ID to create this snapshot.
     * 
     */
    public Optional<CreationDataResponse> creationData() {
        return Optional.ofNullable(this.creationData);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return What the properties will be showed when getting managed cluster snapshot. Those properties are read-only.
     * 
     */
    public ManagedClusterPropertiesForSnapshotResponse managedClusterPropertiesReadOnly() {
        return this.managedClusterPropertiesReadOnly;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The type of a snapshot. The default is NodePool.
     * 
     */
    public Optional<String> snapshotType() {
        return Optional.ofNullable(this.snapshotType);
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedClusterSnapshotResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable CreationDataResponse creationData;
        private String id;
        private String location;
        private ManagedClusterPropertiesForSnapshotResponse managedClusterPropertiesReadOnly;
        private String name;
        private @Nullable String snapshotType;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedClusterSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationData = defaults.creationData;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.managedClusterPropertiesReadOnly = defaults.managedClusterPropertiesReadOnly;
    	      this.name = defaults.name;
    	      this.snapshotType = defaults.snapshotType;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder creationData(@Nullable CreationDataResponse creationData) {
            this.creationData = creationData;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder managedClusterPropertiesReadOnly(ManagedClusterPropertiesForSnapshotResponse managedClusterPropertiesReadOnly) {
            this.managedClusterPropertiesReadOnly = Objects.requireNonNull(managedClusterPropertiesReadOnly);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder snapshotType(@Nullable String snapshotType) {
            this.snapshotType = snapshotType;
            return this;
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetManagedClusterSnapshotResult build() {
            return new GetManagedClusterSnapshotResult(creationData, id, location, managedClusterPropertiesReadOnly, name, snapshotType, systemData, tags, type);
        }
    }
}
