// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Online deployment scoring requests configuration.
 * 
 */
public final class OnlineRequestSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final OnlineRequestSettingsResponse Empty = new OnlineRequestSettingsResponse();

    /**
     * The number of requests allowed to queue at once for this deployment.
     * 
     */
    @Import(name="maxConcurrentRequestsPerInstance")
    private @Nullable Integer maxConcurrentRequestsPerInstance;

    public Optional<Integer> maxConcurrentRequestsPerInstance() {
        return Optional.ofNullable(this.maxConcurrentRequestsPerInstance);
    }

    /**
     * The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
     * 
     */
    @Import(name="maxQueueWait")
    private @Nullable String maxQueueWait;

    public Optional<String> maxQueueWait() {
        return Optional.ofNullable(this.maxQueueWait);
    }

    /**
     * The request timeout in ISO 8601 format. Supports millisecond precision.
     * 
     */
    @Import(name="requestTimeout")
    private @Nullable String requestTimeout;

    public Optional<String> requestTimeout() {
        return Optional.ofNullable(this.requestTimeout);
    }

    private OnlineRequestSettingsResponse() {}

    private OnlineRequestSettingsResponse(OnlineRequestSettingsResponse $) {
        this.maxConcurrentRequestsPerInstance = $.maxConcurrentRequestsPerInstance;
        this.maxQueueWait = $.maxQueueWait;
        this.requestTimeout = $.requestTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnlineRequestSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnlineRequestSettingsResponse $;

        public Builder() {
            $ = new OnlineRequestSettingsResponse();
        }

        public Builder(OnlineRequestSettingsResponse defaults) {
            $ = new OnlineRequestSettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder maxConcurrentRequestsPerInstance(@Nullable Integer maxConcurrentRequestsPerInstance) {
            $.maxConcurrentRequestsPerInstance = maxConcurrentRequestsPerInstance;
            return this;
        }

        public Builder maxQueueWait(@Nullable String maxQueueWait) {
            $.maxQueueWait = maxQueueWait;
            return this;
        }

        public Builder requestTimeout(@Nullable String requestTimeout) {
            $.requestTimeout = requestTimeout;
            return this;
        }

        public OnlineRequestSettingsResponse build() {
            return $;
        }
    }

}
