// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Health Details for backup items.
 * 
 */
public final class ResourceHealthDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResourceHealthDetailsResponse Empty = new ResourceHealthDetailsResponse();

    /**
     * Health Code
     * 
     */
    @Import(name="code", required=true)
    private Integer code;

    /**
     * @return Health Code
     * 
     */
    public Integer code() {
        return this.code;
    }

    /**
     * Health Message
     * 
     */
    @Import(name="message", required=true)
    private String message;

    /**
     * @return Health Message
     * 
     */
    public String message() {
        return this.message;
    }

    /**
     * Health Recommended Actions
     * 
     */
    @Import(name="recommendations", required=true)
    private List<String> recommendations;

    /**
     * @return Health Recommended Actions
     * 
     */
    public List<String> recommendations() {
        return this.recommendations;
    }

    /**
     * Health Title
     * 
     */
    @Import(name="title", required=true)
    private String title;

    /**
     * @return Health Title
     * 
     */
    public String title() {
        return this.title;
    }

    private ResourceHealthDetailsResponse() {}

    private ResourceHealthDetailsResponse(ResourceHealthDetailsResponse $) {
        this.code = $.code;
        this.message = $.message;
        this.recommendations = $.recommendations;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceHealthDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceHealthDetailsResponse $;

        public Builder() {
            $ = new ResourceHealthDetailsResponse();
        }

        public Builder(ResourceHealthDetailsResponse defaults) {
            $ = new ResourceHealthDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param code Health Code
         * 
         * @return builder
         * 
         */
        public Builder code(Integer code) {
            $.code = code;
            return this;
        }

        /**
         * @param message Health Message
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            $.message = message;
            return this;
        }

        /**
         * @param recommendations Health Recommended Actions
         * 
         * @return builder
         * 
         */
        public Builder recommendations(List<String> recommendations) {
            $.recommendations = recommendations;
            return this;
        }

        /**
         * @param recommendations Health Recommended Actions
         * 
         * @return builder
         * 
         */
        public Builder recommendations(String... recommendations) {
            return recommendations(List.of(recommendations));
        }

        /**
         * @param title Health Title
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            $.title = title;
            return this;
        }

        public ResourceHealthDetailsResponse build() {
            $.code = Objects.requireNonNull($.code, "expected parameter 'code' to be non-null");
            $.message = Objects.requireNonNull($.message, "expected parameter 'message' to be non-null");
            $.recommendations = Objects.requireNonNull($.recommendations, "expected parameter 'recommendations' to be non-null");
            $.title = Objects.requireNonNull($.title, "expected parameter 'title' to be non-null");
            return $;
        }
    }

}
