// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurestack;

import com.pulumi.azurenative.azurestack.enums.Location;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RegistrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegistrationArgs Empty = new RegistrationArgs();

    /**
     * Location of the resource.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<Either<String,Location>> location;

    public Output<Either<String,Location>> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Name of the Azure Stack registration.
     * 
     */
    @Import(name="registrationName")
      private final @Nullable Output<String> registrationName;

    public Output<String> registrationName() {
        return this.registrationName == null ? Codegen.empty() : this.registrationName;
    }

    /**
     * The token identifying registered Azure Stack
     * 
     */
    @Import(name="registrationToken", required=true)
      private final Output<String> registrationToken;

    public Output<String> registrationToken() {
        return this.registrationToken;
    }

    /**
     * Name of the resource group.
     * 
     */
    @Import(name="resourceGroup", required=true)
      private final Output<String> resourceGroup;

    public Output<String> resourceGroup() {
        return this.resourceGroup;
    }

    public RegistrationArgs(
        @Nullable Output<Either<String,Location>> location,
        @Nullable Output<String> registrationName,
        Output<String> registrationToken,
        Output<String> resourceGroup) {
        this.location = location;
        this.registrationName = registrationName;
        this.registrationToken = Objects.requireNonNull(registrationToken, "expected parameter 'registrationToken' to be non-null");
        this.resourceGroup = Objects.requireNonNull(resourceGroup, "expected parameter 'resourceGroup' to be non-null");
    }

    private RegistrationArgs() {
        this.location = Codegen.empty();
        this.registrationName = Codegen.empty();
        this.registrationToken = Codegen.empty();
        this.resourceGroup = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,Location>> location;
        private @Nullable Output<String> registrationName;
        private Output<String> registrationToken;
        private Output<String> resourceGroup;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistrationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.registrationName = defaults.registrationName;
    	      this.registrationToken = defaults.registrationToken;
    	      this.resourceGroup = defaults.resourceGroup;
        }

        public Builder location(@Nullable Output<Either<String,Location>> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable Either<String,Location> location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder registrationName(@Nullable Output<String> registrationName) {
            this.registrationName = registrationName;
            return this;
        }
        public Builder registrationName(@Nullable String registrationName) {
            this.registrationName = Codegen.ofNullable(registrationName);
            return this;
        }
        public Builder registrationToken(Output<String> registrationToken) {
            this.registrationToken = Objects.requireNonNull(registrationToken);
            return this;
        }
        public Builder registrationToken(String registrationToken) {
            this.registrationToken = Output.of(Objects.requireNonNull(registrationToken));
            return this;
        }
        public Builder resourceGroup(Output<String> resourceGroup) {
            this.resourceGroup = Objects.requireNonNull(resourceGroup);
            return this;
        }
        public Builder resourceGroup(String resourceGroup) {
            this.resourceGroup = Output.of(Objects.requireNonNull(resourceGroup));
            return this;
        }        public RegistrationArgs build() {
            return new RegistrationArgs(location, registrationName, registrationToken, resourceGroup);
        }
    }
}
