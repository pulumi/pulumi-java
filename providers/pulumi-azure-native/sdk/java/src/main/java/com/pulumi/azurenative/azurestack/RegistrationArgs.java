// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurestack;

import com.pulumi.azurenative.azurestack.enums.Location;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegistrationArgs Empty = new RegistrationArgs();

    /**
     * Location of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<Either<String,Location>> location;

    /**
     * @return Location of the resource.
     * 
     */
    public Optional<Output<Either<String,Location>>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the Azure Stack registration.
     * 
     */
    @Import(name="registrationName")
    private @Nullable Output<String> registrationName;

    /**
     * @return Name of the Azure Stack registration.
     * 
     */
    public Optional<Output<String>> registrationName() {
        return Optional.ofNullable(this.registrationName);
    }

    /**
     * The token identifying registered Azure Stack
     * 
     */
    @Import(name="registrationToken", required=true)
    private Output<String> registrationToken;

    /**
     * @return The token identifying registered Azure Stack
     * 
     */
    public Output<String> registrationToken() {
        return this.registrationToken;
    }

    /**
     * Name of the resource group.
     * 
     */
    @Import(name="resourceGroup", required=true)
    private Output<String> resourceGroup;

    /**
     * @return Name of the resource group.
     * 
     */
    public Output<String> resourceGroup() {
        return this.resourceGroup;
    }

    private RegistrationArgs() {}

    private RegistrationArgs(RegistrationArgs $) {
        this.location = $.location;
        this.registrationName = $.registrationName;
        this.registrationToken = $.registrationToken;
        this.resourceGroup = $.resourceGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistrationArgs $;

        public Builder() {
            $ = new RegistrationArgs();
        }

        public Builder(RegistrationArgs defaults) {
            $ = new RegistrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<Either<String,Location>> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(Either<String,Location> location) {
            return location(Output.of(location));
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Either.ofLeft(location));
        }

        /**
         * @param location Location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(Location location) {
            return location(Either.ofRight(location));
        }

        /**
         * @param registrationName Name of the Azure Stack registration.
         * 
         * @return builder
         * 
         */
        public Builder registrationName(@Nullable Output<String> registrationName) {
            $.registrationName = registrationName;
            return this;
        }

        /**
         * @param registrationName Name of the Azure Stack registration.
         * 
         * @return builder
         * 
         */
        public Builder registrationName(String registrationName) {
            return registrationName(Output.of(registrationName));
        }

        /**
         * @param registrationToken The token identifying registered Azure Stack
         * 
         * @return builder
         * 
         */
        public Builder registrationToken(Output<String> registrationToken) {
            $.registrationToken = registrationToken;
            return this;
        }

        /**
         * @param registrationToken The token identifying registered Azure Stack
         * 
         * @return builder
         * 
         */
        public Builder registrationToken(String registrationToken) {
            return registrationToken(Output.of(registrationToken));
        }

        /**
         * @param resourceGroup Name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(Output<String> resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceGroup Name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(String resourceGroup) {
            return resourceGroup(Output.of(resourceGroup));
        }

        public RegistrationArgs build() {
            $.registrationToken = Objects.requireNonNull($.registrationToken, "expected parameter 'registrationToken' to be non-null");
            $.resourceGroup = Objects.requireNonNull($.resourceGroup, "expected parameter 'resourceGroup' to be non-null");
            return $;
        }
    }

}
