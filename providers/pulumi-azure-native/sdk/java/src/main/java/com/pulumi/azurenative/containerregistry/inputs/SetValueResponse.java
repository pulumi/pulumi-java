// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties of a overridable value that can be passed to a task template.
 * 
 */
public final class SetValueResponse extends com.pulumi.resources.InvokeArgs {

    public static final SetValueResponse Empty = new SetValueResponse();

    /**
     * Flag to indicate whether the value represents a secret or not.
     * 
     */
    @Import(name="isSecret")
    private @Nullable Boolean isSecret;

    public Optional<Boolean> isSecret() {
        return Optional.ofNullable(this.isSecret);
    }

    /**
     * The name of the overridable value.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * The overridable value.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    public String value() {
        return this.value;
    }

    private SetValueResponse() {}

    private SetValueResponse(SetValueResponse $) {
        this.isSecret = $.isSecret;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SetValueResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SetValueResponse $;

        public Builder() {
            $ = new SetValueResponse();
        }

        public Builder(SetValueResponse defaults) {
            $ = new SetValueResponse(Objects.requireNonNull(defaults));
        }

        public Builder isSecret(@Nullable Boolean isSecret) {
            $.isSecret = isSecret;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public SetValueResponse build() {
            $.isSecret = Codegen.booleanProp("isSecret").arg($.isSecret).def(false).getNullable();
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
