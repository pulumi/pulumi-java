// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.redhatopenshift.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * APIServerProfile represents an API server profile.
 * 
 */
public final class APIServerProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final APIServerProfileArgs Empty = new APIServerProfileArgs();

    /**
     * The IP of the cluster API server (immutable).
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return The IP of the cluster API server (immutable).
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * The URL to access the cluster API server (immutable).
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return The URL to access the cluster API server (immutable).
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    /**
     * API server visibility (immutable).
     * 
     */
    @Import(name="visibility")
    private @Nullable Output<String> visibility;

    /**
     * @return API server visibility (immutable).
     * 
     */
    public Optional<Output<String>> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    private APIServerProfileArgs() {}

    private APIServerProfileArgs(APIServerProfileArgs $) {
        this.ip = $.ip;
        this.url = $.url;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(APIServerProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private APIServerProfileArgs $;

        public Builder() {
            $ = new APIServerProfileArgs();
        }

        public Builder(APIServerProfileArgs defaults) {
            $ = new APIServerProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ip The IP of the cluster API server (immutable).
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IP of the cluster API server (immutable).
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param url The URL to access the cluster API server (immutable).
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The URL to access the cluster API server (immutable).
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param visibility API server visibility (immutable).
         * 
         * @return builder
         * 
         */
        public Builder visibility(@Nullable Output<String> visibility) {
            $.visibility = visibility;
            return this;
        }

        /**
         * @param visibility API server visibility (immutable).
         * 
         * @return builder
         * 
         */
        public Builder visibility(String visibility) {
            return visibility(Output.of(visibility));
        }

        public APIServerProfileArgs build() {
            return $;
        }
    }

}
