// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.azurenative.media.inputs.CbcsDrmConfigurationResponse;
import com.pulumi.azurenative.media.inputs.EnabledProtocolsResponse;
import com.pulumi.azurenative.media.inputs.StreamingPolicyContentKeysResponse;
import com.pulumi.azurenative.media.inputs.TrackSelectionResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class for CommonEncryptionCbcs encryption scheme
 * 
 */
public final class CommonEncryptionCbcsResponse extends com.pulumi.resources.InvokeArgs {

    public static final CommonEncryptionCbcsResponse Empty = new CommonEncryptionCbcsResponse();

    /**
     * Representing which tracks should not be encrypted
     * 
     */
    @Import(name="clearTracks")
    private @Nullable List<TrackSelectionResponse> clearTracks;

    public Optional<List<TrackSelectionResponse>> clearTracks() {
        return Optional.ofNullable(this.clearTracks);
    }

    /**
     * Representing default content key for each encryption scheme and separate content keys for specific tracks
     * 
     */
    @Import(name="contentKeys")
    private @Nullable StreamingPolicyContentKeysResponse contentKeys;

    public Optional<StreamingPolicyContentKeysResponse> contentKeys() {
        return Optional.ofNullable(this.contentKeys);
    }

    /**
     * Configuration of DRMs for current encryption scheme
     * 
     */
    @Import(name="drm")
    private @Nullable CbcsDrmConfigurationResponse drm;

    public Optional<CbcsDrmConfigurationResponse> drm() {
        return Optional.ofNullable(this.drm);
    }

    /**
     * Representing supported protocols
     * 
     */
    @Import(name="enabledProtocols")
    private @Nullable EnabledProtocolsResponse enabledProtocols;

    public Optional<EnabledProtocolsResponse> enabledProtocols() {
        return Optional.ofNullable(this.enabledProtocols);
    }

    private CommonEncryptionCbcsResponse() {}

    private CommonEncryptionCbcsResponse(CommonEncryptionCbcsResponse $) {
        this.clearTracks = $.clearTracks;
        this.contentKeys = $.contentKeys;
        this.drm = $.drm;
        this.enabledProtocols = $.enabledProtocols;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CommonEncryptionCbcsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CommonEncryptionCbcsResponse $;

        public Builder() {
            $ = new CommonEncryptionCbcsResponse();
        }

        public Builder(CommonEncryptionCbcsResponse defaults) {
            $ = new CommonEncryptionCbcsResponse(Objects.requireNonNull(defaults));
        }

        public Builder clearTracks(@Nullable List<TrackSelectionResponse> clearTracks) {
            $.clearTracks = clearTracks;
            return this;
        }

        public Builder clearTracks(TrackSelectionResponse... clearTracks) {
            return clearTracks(List.of(clearTracks));
        }

        public Builder contentKeys(@Nullable StreamingPolicyContentKeysResponse contentKeys) {
            $.contentKeys = contentKeys;
            return this;
        }

        public Builder drm(@Nullable CbcsDrmConfigurationResponse drm) {
            $.drm = drm;
            return this;
        }

        public Builder enabledProtocols(@Nullable EnabledProtocolsResponse enabledProtocols) {
            $.enabledProtocols = enabledProtocols;
            return this;
        }

        public CommonEncryptionCbcsResponse build() {
            return $;
        }
    }

}
