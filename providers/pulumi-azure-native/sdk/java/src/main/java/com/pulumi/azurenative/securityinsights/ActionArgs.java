// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionArgs Empty = new ActionArgs();

    /**
     * Action ID
     * 
     */
    @Import(name="actionId")
    private @Nullable Output<String> actionId;

    /**
     * @return Action ID
     * 
     */
    public Optional<Output<String>> actionId() {
        return Optional.ofNullable(this.actionId);
    }

    /**
     * Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
     * 
     */
    @Import(name="logicAppResourceId", required=true)
    private Output<String> logicAppResourceId;

    /**
     * @return Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
     * 
     */
    public Output<String> logicAppResourceId() {
        return this.logicAppResourceId;
    }

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Alert rule ID
     * 
     */
    @Import(name="ruleId", required=true)
    private Output<String> ruleId;

    /**
     * @return Alert rule ID
     * 
     */
    public Output<String> ruleId() {
        return this.ruleId;
    }

    /**
     * Logic App Callback URL for this specific workflow.
     * 
     */
    @Import(name="triggerUri", required=true)
    private Output<String> triggerUri;

    /**
     * @return Logic App Callback URL for this specific workflow.
     * 
     */
    public Output<String> triggerUri() {
        return this.triggerUri;
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    /**
     * @return The name of the workspace.
     * 
     */
    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    private ActionArgs() {}

    private ActionArgs(ActionArgs $) {
        this.actionId = $.actionId;
        this.logicAppResourceId = $.logicAppResourceId;
        this.resourceGroupName = $.resourceGroupName;
        this.ruleId = $.ruleId;
        this.triggerUri = $.triggerUri;
        this.workspaceName = $.workspaceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionArgs $;

        public Builder() {
            $ = new ActionArgs();
        }

        public Builder(ActionArgs defaults) {
            $ = new ActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionId Action ID
         * 
         * @return builder
         * 
         */
        public Builder actionId(@Nullable Output<String> actionId) {
            $.actionId = actionId;
            return this;
        }

        /**
         * @param actionId Action ID
         * 
         * @return builder
         * 
         */
        public Builder actionId(String actionId) {
            return actionId(Output.of(actionId));
        }

        /**
         * @param logicAppResourceId Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
         * 
         * @return builder
         * 
         */
        public Builder logicAppResourceId(Output<String> logicAppResourceId) {
            $.logicAppResourceId = logicAppResourceId;
            return this;
        }

        /**
         * @param logicAppResourceId Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
         * 
         * @return builder
         * 
         */
        public Builder logicAppResourceId(String logicAppResourceId) {
            return logicAppResourceId(Output.of(logicAppResourceId));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param ruleId Alert rule ID
         * 
         * @return builder
         * 
         */
        public Builder ruleId(Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId Alert rule ID
         * 
         * @return builder
         * 
         */
        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        /**
         * @param triggerUri Logic App Callback URL for this specific workflow.
         * 
         * @return builder
         * 
         */
        public Builder triggerUri(Output<String> triggerUri) {
            $.triggerUri = triggerUri;
            return this;
        }

        /**
         * @param triggerUri Logic App Callback URL for this specific workflow.
         * 
         * @return builder
         * 
         */
        public Builder triggerUri(String triggerUri) {
            return triggerUri(Output.of(triggerUri));
        }

        /**
         * @param workspaceName The name of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        /**
         * @param workspaceName The name of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        public ActionArgs build() {
            $.logicAppResourceId = Objects.requireNonNull($.logicAppResourceId, "expected parameter 'logicAppResourceId' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.ruleId = Objects.requireNonNull($.ruleId, "expected parameter 'ruleId' to be non-null");
            $.triggerUri = Objects.requireNonNull($.triggerUri, "expected parameter 'triggerUri' to be non-null");
            $.workspaceName = Objects.requireNonNull($.workspaceName, "expected parameter 'workspaceName' to be non-null");
            return $;
        }
    }

}
