// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.search.inputs;

import com.pulumi.azurenative.search.enums.SkuName;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits.
 * 
 */
public final class SkuArgs extends com.pulumi.resources.ResourceArgs {

    public static final SkuArgs Empty = new SkuArgs();

    /**
     * The SKU of the search service. Valid values include: &#39;free&#39;: Shared service. &#39;basic&#39;: Dedicated service with up to 3 replicas. &#39;standard&#39;: Dedicated service with up to 12 partitions and 12 replicas. &#39;standard2&#39;: Similar to standard, but with more capacity per search unit. &#39;standard3&#39;: The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to &#39;highDensity&#39;). &#39;storage_optimized_l1&#39;: Supports 1TB per partition, up to 12 partitions. &#39;storage_optimized_l2&#39;: Supports 2TB per partition, up to 12 partitions.&#39;
     * 
     */
    @Import(name="name")
      private final @Nullable Output<SkuName> name;

    public Output<SkuName> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    public SkuArgs(@Nullable Output<SkuName> name) {
        this.name = name;
    }

    private SkuArgs() {
        this.name = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SkuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SkuName> name;

        public Builder() {
    	      // Empty
        }

        public Builder(SkuArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
        }

        public Builder name(@Nullable Output<SkuName> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable SkuName name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }        public SkuArgs build() {
            return new SkuArgs(name);
        }
    }
}
