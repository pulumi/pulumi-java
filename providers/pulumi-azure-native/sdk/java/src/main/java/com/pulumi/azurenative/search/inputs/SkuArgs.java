// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.search.inputs;

import com.pulumi.azurenative.search.enums.SkuName;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits.
 * 
 */
public final class SkuArgs extends com.pulumi.resources.ResourceArgs {

    public static final SkuArgs Empty = new SkuArgs();

    /**
     * The SKU of the search service. Valid values include: &#39;free&#39;: Shared service. &#39;basic&#39;: Dedicated service with up to 3 replicas. &#39;standard&#39;: Dedicated service with up to 12 partitions and 12 replicas. &#39;standard2&#39;: Similar to standard, but with more capacity per search unit. &#39;standard3&#39;: The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to &#39;highDensity&#39;). &#39;storage_optimized_l1&#39;: Supports 1TB per partition, up to 12 partitions. &#39;storage_optimized_l2&#39;: Supports 2TB per partition, up to 12 partitions.&#39;
     * 
     */
    @Import(name="name")
    private @Nullable Output<SkuName> name;

    /**
     * @return The SKU of the search service. Valid values include: &#39;free&#39;: Shared service. &#39;basic&#39;: Dedicated service with up to 3 replicas. &#39;standard&#39;: Dedicated service with up to 12 partitions and 12 replicas. &#39;standard2&#39;: Similar to standard, but with more capacity per search unit. &#39;standard3&#39;: The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to &#39;highDensity&#39;). &#39;storage_optimized_l1&#39;: Supports 1TB per partition, up to 12 partitions. &#39;storage_optimized_l2&#39;: Supports 2TB per partition, up to 12 partitions.&#39;
     * 
     */
    public Optional<Output<SkuName>> name() {
        return Optional.ofNullable(this.name);
    }

    private SkuArgs() {}

    private SkuArgs(SkuArgs $) {
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SkuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SkuArgs $;

        public Builder() {
            $ = new SkuArgs();
        }

        public Builder(SkuArgs defaults) {
            $ = new SkuArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The SKU of the search service. Valid values include: &#39;free&#39;: Shared service. &#39;basic&#39;: Dedicated service with up to 3 replicas. &#39;standard&#39;: Dedicated service with up to 12 partitions and 12 replicas. &#39;standard2&#39;: Similar to standard, but with more capacity per search unit. &#39;standard3&#39;: The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to &#39;highDensity&#39;). &#39;storage_optimized_l1&#39;: Supports 1TB per partition, up to 12 partitions. &#39;storage_optimized_l2&#39;: Supports 2TB per partition, up to 12 partitions.&#39;
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<SkuName> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The SKU of the search service. Valid values include: &#39;free&#39;: Shared service. &#39;basic&#39;: Dedicated service with up to 3 replicas. &#39;standard&#39;: Dedicated service with up to 12 partitions and 12 replicas. &#39;standard2&#39;: Similar to standard, but with more capacity per search unit. &#39;standard3&#39;: The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to &#39;highDensity&#39;). &#39;storage_optimized_l1&#39;: Supports 1TB per partition, up to 12 partitions. &#39;storage_optimized_l2&#39;: Supports 2TB per partition, up to 12 partitions.&#39;
         * 
         * @return builder
         * 
         */
        public Builder name(SkuName name) {
            return name(Output.of(name));
        }

        public SkuArgs build() {
            return $;
        }
    }

}
