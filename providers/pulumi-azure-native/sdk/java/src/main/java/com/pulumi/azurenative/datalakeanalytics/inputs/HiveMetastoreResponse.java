// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datalakeanalytics.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class HiveMetastoreResponse extends com.pulumi.resources.InvokeArgs {

    public static final HiveMetastoreResponse Empty = new HiveMetastoreResponse();

    /**
     * The databaseName for the Hive MetaStore
     * 
     */
    @Import(name="databaseName", required=true)
      private final String databaseName;

    public String databaseName() {
        return this.databaseName;
    }

    /**
     * The resource identifier.
     * 
     */
    @Import(name="id", required=true)
      private final String id;

    public String id() {
        return this.id;
    }

    /**
     * The resource name.
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String name() {
        return this.name;
    }

    /**
     * The current state of the NestedResource
     * 
     */
    @Import(name="nestedResourceProvisioningState", required=true)
      private final String nestedResourceProvisioningState;

    public String nestedResourceProvisioningState() {
        return this.nestedResourceProvisioningState;
    }

    /**
     * The password for the Hive MetaStore
     * 
     */
    @Import(name="password", required=true)
      private final String password;

    public String password() {
        return this.password;
    }

    /**
     * The runtimeVersion for the Hive MetaStore
     * 
     */
    @Import(name="runtimeVersion", required=true)
      private final String runtimeVersion;

    public String runtimeVersion() {
        return this.runtimeVersion;
    }

    /**
     * The serverUri for the Hive MetaStore
     * 
     */
    @Import(name="serverUri", required=true)
      private final String serverUri;

    public String serverUri() {
        return this.serverUri;
    }

    /**
     * The resource type.
     * 
     */
    @Import(name="type", required=true)
      private final String type;

    public String type() {
        return this.type;
    }

    /**
     * The userName for the Hive MetaStore
     * 
     */
    @Import(name="userName", required=true)
      private final String userName;

    public String userName() {
        return this.userName;
    }

    public HiveMetastoreResponse(
        String databaseName,
        String id,
        String name,
        String nestedResourceProvisioningState,
        String password,
        String runtimeVersion,
        String serverUri,
        String type,
        String userName) {
        this.databaseName = Objects.requireNonNull(databaseName, "expected parameter 'databaseName' to be non-null");
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.nestedResourceProvisioningState = Objects.requireNonNull(nestedResourceProvisioningState, "expected parameter 'nestedResourceProvisioningState' to be non-null");
        this.password = Objects.requireNonNull(password, "expected parameter 'password' to be non-null");
        this.runtimeVersion = Objects.requireNonNull(runtimeVersion, "expected parameter 'runtimeVersion' to be non-null");
        this.serverUri = Objects.requireNonNull(serverUri, "expected parameter 'serverUri' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.userName = Objects.requireNonNull(userName, "expected parameter 'userName' to be non-null");
    }

    private HiveMetastoreResponse() {
        this.databaseName = null;
        this.id = null;
        this.name = null;
        this.nestedResourceProvisioningState = null;
        this.password = null;
        this.runtimeVersion = null;
        this.serverUri = null;
        this.type = null;
        this.userName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HiveMetastoreResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String databaseName;
        private String id;
        private String name;
        private String nestedResourceProvisioningState;
        private String password;
        private String runtimeVersion;
        private String serverUri;
        private String type;
        private String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(HiveMetastoreResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.nestedResourceProvisioningState = defaults.nestedResourceProvisioningState;
    	      this.password = defaults.password;
    	      this.runtimeVersion = defaults.runtimeVersion;
    	      this.serverUri = defaults.serverUri;
    	      this.type = defaults.type;
    	      this.userName = defaults.userName;
        }

        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder nestedResourceProvisioningState(String nestedResourceProvisioningState) {
            this.nestedResourceProvisioningState = Objects.requireNonNull(nestedResourceProvisioningState);
            return this;
        }
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        public Builder runtimeVersion(String runtimeVersion) {
            this.runtimeVersion = Objects.requireNonNull(runtimeVersion);
            return this;
        }
        public Builder serverUri(String serverUri) {
            this.serverUri = Objects.requireNonNull(serverUri);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }        public HiveMetastoreResponse build() {
            return new HiveMetastoreResponse(databaseName, id, name, nestedResourceProvisioningState, password, runtimeVersion, serverUri, type, userName);
        }
    }
}
