// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datalakeanalytics.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class HiveMetastoreResponse extends com.pulumi.resources.InvokeArgs {

    public static final HiveMetastoreResponse Empty = new HiveMetastoreResponse();

    /**
     * The databaseName for the Hive MetaStore
     * 
     */
    @Import(name="databaseName", required=true)
    private String databaseName;

    /**
     * @return The databaseName for the Hive MetaStore
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }

    /**
     * The resource identifier.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The resource identifier.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * The resource name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The resource name.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The current state of the NestedResource
     * 
     */
    @Import(name="nestedResourceProvisioningState", required=true)
    private String nestedResourceProvisioningState;

    /**
     * @return The current state of the NestedResource
     * 
     */
    public String nestedResourceProvisioningState() {
        return this.nestedResourceProvisioningState;
    }

    /**
     * The password for the Hive MetaStore
     * 
     */
    @Import(name="password", required=true)
    private String password;

    /**
     * @return The password for the Hive MetaStore
     * 
     */
    public String password() {
        return this.password;
    }

    /**
     * The runtimeVersion for the Hive MetaStore
     * 
     */
    @Import(name="runtimeVersion", required=true)
    private String runtimeVersion;

    /**
     * @return The runtimeVersion for the Hive MetaStore
     * 
     */
    public String runtimeVersion() {
        return this.runtimeVersion;
    }

    /**
     * The serverUri for the Hive MetaStore
     * 
     */
    @Import(name="serverUri", required=true)
    private String serverUri;

    /**
     * @return The serverUri for the Hive MetaStore
     * 
     */
    public String serverUri() {
        return this.serverUri;
    }

    /**
     * The resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * The userName for the Hive MetaStore
     * 
     */
    @Import(name="userName", required=true)
    private String userName;

    /**
     * @return The userName for the Hive MetaStore
     * 
     */
    public String userName() {
        return this.userName;
    }

    private HiveMetastoreResponse() {}

    private HiveMetastoreResponse(HiveMetastoreResponse $) {
        this.databaseName = $.databaseName;
        this.id = $.id;
        this.name = $.name;
        this.nestedResourceProvisioningState = $.nestedResourceProvisioningState;
        this.password = $.password;
        this.runtimeVersion = $.runtimeVersion;
        this.serverUri = $.serverUri;
        this.type = $.type;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HiveMetastoreResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HiveMetastoreResponse $;

        public Builder() {
            $ = new HiveMetastoreResponse();
        }

        public Builder(HiveMetastoreResponse defaults) {
            $ = new HiveMetastoreResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName The databaseName for the Hive MetaStore
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param id The resource identifier.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param name The resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param nestedResourceProvisioningState The current state of the NestedResource
         * 
         * @return builder
         * 
         */
        public Builder nestedResourceProvisioningState(String nestedResourceProvisioningState) {
            $.nestedResourceProvisioningState = nestedResourceProvisioningState;
            return this;
        }

        /**
         * @param password The password for the Hive MetaStore
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            $.password = password;
            return this;
        }

        /**
         * @param runtimeVersion The runtimeVersion for the Hive MetaStore
         * 
         * @return builder
         * 
         */
        public Builder runtimeVersion(String runtimeVersion) {
            $.runtimeVersion = runtimeVersion;
            return this;
        }

        /**
         * @param serverUri The serverUri for the Hive MetaStore
         * 
         * @return builder
         * 
         */
        public Builder serverUri(String serverUri) {
            $.serverUri = serverUri;
            return this;
        }

        /**
         * @param type The resource type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param userName The userName for the Hive MetaStore
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            $.userName = userName;
            return this;
        }

        public HiveMetastoreResponse build() {
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.nestedResourceProvisioningState = Objects.requireNonNull($.nestedResourceProvisioningState, "expected parameter 'nestedResourceProvisioningState' to be non-null");
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.runtimeVersion = Objects.requireNonNull($.runtimeVersion, "expected parameter 'runtimeVersion' to be non-null");
            $.serverUri = Objects.requireNonNull($.serverUri, "expected parameter 'serverUri' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
