// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Deployment instance payload
 * 
 */
public final class DeploymentInstanceResponse extends com.pulumi.resources.InvokeArgs {

    public static final DeploymentInstanceResponse Empty = new DeploymentInstanceResponse();

    /**
     * Discovery status of the deployment instance
     * 
     */
    @Import(name="discoveryStatus", required=true)
    private String discoveryStatus;

    /**
     * @return Discovery status of the deployment instance
     * 
     */
    public String discoveryStatus() {
        return this.discoveryStatus;
    }

    /**
     * Name of the deployment instance
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of the deployment instance
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Failed reason of the deployment instance
     * 
     */
    @Import(name="reason", required=true)
    private String reason;

    /**
     * @return Failed reason of the deployment instance
     * 
     */
    public String reason() {
        return this.reason;
    }

    /**
     * Start time of the deployment instance
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    /**
     * @return Start time of the deployment instance
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * Status of the deployment instance
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Status of the deployment instance
     * 
     */
    public String status() {
        return this.status;
    }

    private DeploymentInstanceResponse() {}

    private DeploymentInstanceResponse(DeploymentInstanceResponse $) {
        this.discoveryStatus = $.discoveryStatus;
        this.name = $.name;
        this.reason = $.reason;
        this.startTime = $.startTime;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentInstanceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentInstanceResponse $;

        public Builder() {
            $ = new DeploymentInstanceResponse();
        }

        public Builder(DeploymentInstanceResponse defaults) {
            $ = new DeploymentInstanceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param discoveryStatus Discovery status of the deployment instance
         * 
         * @return builder
         * 
         */
        public Builder discoveryStatus(String discoveryStatus) {
            $.discoveryStatus = discoveryStatus;
            return this;
        }

        /**
         * @param name Name of the deployment instance
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param reason Failed reason of the deployment instance
         * 
         * @return builder
         * 
         */
        public Builder reason(String reason) {
            $.reason = reason;
            return this;
        }

        /**
         * @param startTime Start time of the deployment instance
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param status Status of the deployment instance
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public DeploymentInstanceResponse build() {
            $.discoveryStatus = Objects.requireNonNull($.discoveryStatus, "expected parameter 'discoveryStatus' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.reason = Objects.requireNonNull($.reason, "expected parameter 'reason' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
