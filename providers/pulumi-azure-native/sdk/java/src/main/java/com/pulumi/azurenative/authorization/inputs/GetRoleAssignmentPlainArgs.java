// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRoleAssignmentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRoleAssignmentPlainArgs Empty = new GetRoleAssignmentPlainArgs();

    /**
     * The name of the role assignment. It can be any valid GUID.
     * 
     */
    @Import(name="roleAssignmentName", required=true)
    private String roleAssignmentName;

    /**
     * @return The name of the role assignment. It can be any valid GUID.
     * 
     */
    public String roleAssignmentName() {
        return this.roleAssignmentName;
    }

    /**
     * The scope of the operation or resource. Valid scopes are: subscription (format: &#39;/subscriptions/{subscriptionId}&#39;), resource group (format: &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}&#39;, or resource (format: &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}&#39;
     * 
     */
    @Import(name="scope", required=true)
    private String scope;

    /**
     * @return The scope of the operation or resource. Valid scopes are: subscription (format: &#39;/subscriptions/{subscriptionId}&#39;), resource group (format: &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}&#39;, or resource (format: &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}&#39;
     * 
     */
    public String scope() {
        return this.scope;
    }

    /**
     * Tenant ID for cross-tenant request
     * 
     */
    @Import(name="tenantId")
    private @Nullable String tenantId;

    /**
     * @return Tenant ID for cross-tenant request
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private GetRoleAssignmentPlainArgs() {}

    private GetRoleAssignmentPlainArgs(GetRoleAssignmentPlainArgs $) {
        this.roleAssignmentName = $.roleAssignmentName;
        this.scope = $.scope;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRoleAssignmentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRoleAssignmentPlainArgs $;

        public Builder() {
            $ = new GetRoleAssignmentPlainArgs();
        }

        public Builder(GetRoleAssignmentPlainArgs defaults) {
            $ = new GetRoleAssignmentPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param roleAssignmentName The name of the role assignment. It can be any valid GUID.
         * 
         * @return builder
         * 
         */
        public Builder roleAssignmentName(String roleAssignmentName) {
            $.roleAssignmentName = roleAssignmentName;
            return this;
        }

        /**
         * @param scope The scope of the operation or resource. Valid scopes are: subscription (format: &#39;/subscriptions/{subscriptionId}&#39;), resource group (format: &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}&#39;, or resource (format: &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}&#39;
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param tenantId Tenant ID for cross-tenant request
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public GetRoleAssignmentPlainArgs build() {
            $.roleAssignmentName = Objects.requireNonNull($.roleAssignmentName, "expected parameter 'roleAssignmentName' to be non-null");
            $.scope = Objects.requireNonNull($.scope, "expected parameter 'scope' to be non-null");
            return $;
        }
    }

}
