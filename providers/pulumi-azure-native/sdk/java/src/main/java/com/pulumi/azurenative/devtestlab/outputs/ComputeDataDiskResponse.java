// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ComputeDataDiskResponse {
    /**
     * @return Gets data disk size in GiB.
     * 
     */
    private final @Nullable Integer diskSizeGiB;
    /**
     * @return When backed by a blob, the URI of underlying blob.
     * 
     */
    private final @Nullable String diskUri;
    /**
     * @return When backed by managed disk, this is the ID of the compute disk resource.
     * 
     */
    private final @Nullable String managedDiskId;
    /**
     * @return Gets data disk name.
     * 
     */
    private final @Nullable String name;

    @CustomType.Constructor
    private ComputeDataDiskResponse(
        @CustomType.Parameter("diskSizeGiB") @Nullable Integer diskSizeGiB,
        @CustomType.Parameter("diskUri") @Nullable String diskUri,
        @CustomType.Parameter("managedDiskId") @Nullable String managedDiskId,
        @CustomType.Parameter("name") @Nullable String name) {
        this.diskSizeGiB = diskSizeGiB;
        this.diskUri = diskUri;
        this.managedDiskId = managedDiskId;
        this.name = name;
    }

    /**
     * @return Gets data disk size in GiB.
     * 
     */
    public Optional<Integer> diskSizeGiB() {
        return Optional.ofNullable(this.diskSizeGiB);
    }
    /**
     * @return When backed by a blob, the URI of underlying blob.
     * 
     */
    public Optional<String> diskUri() {
        return Optional.ofNullable(this.diskUri);
    }
    /**
     * @return When backed by managed disk, this is the ID of the compute disk resource.
     * 
     */
    public Optional<String> managedDiskId() {
        return Optional.ofNullable(this.managedDiskId);
    }
    /**
     * @return Gets data disk name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComputeDataDiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer diskSizeGiB;
        private @Nullable String diskUri;
        private @Nullable String managedDiskId;
        private @Nullable String name;

        public Builder() {
    	      // Empty
        }

        public Builder(ComputeDataDiskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskSizeGiB = defaults.diskSizeGiB;
    	      this.diskUri = defaults.diskUri;
    	      this.managedDiskId = defaults.managedDiskId;
    	      this.name = defaults.name;
        }

        public Builder diskSizeGiB(@Nullable Integer diskSizeGiB) {
            this.diskSizeGiB = diskSizeGiB;
            return this;
        }
        public Builder diskUri(@Nullable String diskUri) {
            this.diskUri = diskUri;
            return this;
        }
        public Builder managedDiskId(@Nullable String managedDiskId) {
            this.managedDiskId = managedDiskId;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }        public ComputeDataDiskResponse build() {
            return new ComputeDataDiskResponse(diskSizeGiB, diskUri, managedDiskId, name);
        }
    }
}
