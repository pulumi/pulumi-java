// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.management.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagementGroupArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagementGroupArgs Empty = new GetManagementGroupArgs();

    /**
     * The $expand=children query string parameter allows clients to request inclusion of children in the response payload.  $expand=path includes the path from the root group to the current group.
     * 
     */
    @Import(name="expand")
      private final @Nullable String expand;

    public Optional<String> expand() {
        return this.expand == null ? Optional.empty() : Optional.ofNullable(this.expand);
    }

    /**
     * A filter which allows the exclusion of subscriptions from results (i.e. '$filter=children.childType ne Subscription')
     * 
     */
    @Import(name="filter")
      private final @Nullable String filter;

    public Optional<String> filter() {
        return this.filter == null ? Optional.empty() : Optional.ofNullable(this.filter);
    }

    /**
     * Management Group ID.
     * 
     */
    @Import(name="groupId", required=true)
      private final String groupId;

    public String groupId() {
        return this.groupId;
    }

    /**
     * The $recurse=true query string parameter allows clients to request inclusion of entire hierarchy in the response payload. Note that  $expand=children must be passed up if $recurse is set to true.
     * 
     */
    @Import(name="recurse")
      private final @Nullable Boolean recurse;

    public Optional<Boolean> recurse() {
        return this.recurse == null ? Optional.empty() : Optional.ofNullable(this.recurse);
    }

    public GetManagementGroupArgs(
        @Nullable String expand,
        @Nullable String filter,
        String groupId,
        @Nullable Boolean recurse) {
        this.expand = expand;
        this.filter = filter;
        this.groupId = Objects.requireNonNull(groupId, "expected parameter 'groupId' to be non-null");
        this.recurse = recurse;
    }

    private GetManagementGroupArgs() {
        this.expand = null;
        this.filter = null;
        this.groupId = null;
        this.recurse = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String expand;
        private @Nullable String filter;
        private String groupId;
        private @Nullable Boolean recurse;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagementGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expand = defaults.expand;
    	      this.filter = defaults.filter;
    	      this.groupId = defaults.groupId;
    	      this.recurse = defaults.recurse;
        }

        public Builder expand(@Nullable String expand) {
            this.expand = expand;
            return this;
        }
        public Builder filter(@Nullable String filter) {
            this.filter = filter;
            return this;
        }
        public Builder groupId(String groupId) {
            this.groupId = Objects.requireNonNull(groupId);
            return this;
        }
        public Builder recurse(@Nullable Boolean recurse) {
            this.recurse = recurse;
            return this;
        }        public GetManagementGroupArgs build() {
            return new GetManagementGroupArgs(expand, filter, groupId, recurse);
        }
    }
}
