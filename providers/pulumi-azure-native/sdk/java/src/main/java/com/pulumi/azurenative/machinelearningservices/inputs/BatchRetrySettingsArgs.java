// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Retry settings for a batch inference operation.
 * 
 */
public final class BatchRetrySettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BatchRetrySettingsArgs Empty = new BatchRetrySettingsArgs();

    /**
     * Maximum retry count for a mini-batch
     * 
     */
    @Import(name="maxRetries")
    private @Nullable Output<Integer> maxRetries;

    /**
     * @return Maximum retry count for a mini-batch
     * 
     */
    public Optional<Output<Integer>> maxRetries() {
        return Optional.ofNullable(this.maxRetries);
    }

    /**
     * Invocation timeout for a mini-batch, in ISO 8601 format.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<String> timeout;

    /**
     * @return Invocation timeout for a mini-batch, in ISO 8601 format.
     * 
     */
    public Optional<Output<String>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private BatchRetrySettingsArgs() {}

    private BatchRetrySettingsArgs(BatchRetrySettingsArgs $) {
        this.maxRetries = $.maxRetries;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BatchRetrySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BatchRetrySettingsArgs $;

        public Builder() {
            $ = new BatchRetrySettingsArgs();
        }

        public Builder(BatchRetrySettingsArgs defaults) {
            $ = new BatchRetrySettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxRetries Maximum retry count for a mini-batch
         * 
         * @return builder
         * 
         */
        public Builder maxRetries(@Nullable Output<Integer> maxRetries) {
            $.maxRetries = maxRetries;
            return this;
        }

        /**
         * @param maxRetries Maximum retry count for a mini-batch
         * 
         * @return builder
         * 
         */
        public Builder maxRetries(Integer maxRetries) {
            return maxRetries(Output.of(maxRetries));
        }

        /**
         * @param timeout Invocation timeout for a mini-batch, in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<String> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Invocation timeout for a mini-batch, in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder timeout(String timeout) {
            return timeout(Output.of(timeout));
        }

        public BatchRetrySettingsArgs build() {
            return $;
        }
    }

}
