// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scheduler.inputs;

import com.pulumi.azurenative.scheduler.enums.RecurrenceFrequency;
import com.pulumi.azurenative.scheduler.inputs.JobRecurrenceScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobRecurrenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobRecurrenceArgs Empty = new JobRecurrenceArgs();

    /**
     * Gets or sets the maximum number of times that the job should run.
     * 
     */
    @Import(name="count")
    private @Nullable Output<Integer> count;

    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    /**
     * Gets or sets the time at which the job will complete.
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
     * 
     */
    @Import(name="frequency")
    private @Nullable Output<RecurrenceFrequency> frequency;

    public Optional<Output<RecurrenceFrequency>> frequency() {
        return Optional.ofNullable(this.frequency);
    }

    /**
     * Gets or sets the interval between retries.
     * 
     */
    @Import(name="interval")
    private @Nullable Output<Integer> interval;

    public Optional<Output<Integer>> interval() {
        return Optional.ofNullable(this.interval);
    }

    @Import(name="schedule")
    private @Nullable Output<JobRecurrenceScheduleArgs> schedule;

    public Optional<Output<JobRecurrenceScheduleArgs>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    private JobRecurrenceArgs() {}

    private JobRecurrenceArgs(JobRecurrenceArgs $) {
        this.count = $.count;
        this.endTime = $.endTime;
        this.frequency = $.frequency;
        this.interval = $.interval;
        this.schedule = $.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobRecurrenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobRecurrenceArgs $;

        public Builder() {
            $ = new JobRecurrenceArgs();
        }

        public Builder(JobRecurrenceArgs defaults) {
            $ = new JobRecurrenceArgs(Objects.requireNonNull(defaults));
        }

        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        public Builder frequency(@Nullable Output<RecurrenceFrequency> frequency) {
            $.frequency = frequency;
            return this;
        }

        public Builder frequency(RecurrenceFrequency frequency) {
            return frequency(Output.of(frequency));
        }

        public Builder interval(@Nullable Output<Integer> interval) {
            $.interval = interval;
            return this;
        }

        public Builder interval(Integer interval) {
            return interval(Output.of(interval));
        }

        public Builder schedule(@Nullable Output<JobRecurrenceScheduleArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        public Builder schedule(JobRecurrenceScheduleArgs schedule) {
            return schedule(Output.of(schedule));
        }

        public JobRecurrenceArgs build() {
            return $;
        }
    }

}
