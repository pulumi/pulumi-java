// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationsmanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetManagementConfigurationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagementConfigurationArgs Empty = new GetManagementConfigurationArgs();

    /**
     * User Management Configuration Name.
     * 
     */
    @Import(name="managementConfigurationName", required=true)
    private Output<String> managementConfigurationName;

    /**
     * @return User Management Configuration Name.
     * 
     */
    public Output<String> managementConfigurationName() {
        return this.managementConfigurationName;
    }

    /**
     * The name of the resource group to get. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group to get. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetManagementConfigurationArgs() {}

    private GetManagementConfigurationArgs(GetManagementConfigurationArgs $) {
        this.managementConfigurationName = $.managementConfigurationName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagementConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagementConfigurationArgs $;

        public Builder() {
            $ = new GetManagementConfigurationArgs();
        }

        public Builder(GetManagementConfigurationArgs defaults) {
            $ = new GetManagementConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managementConfigurationName User Management Configuration Name.
         * 
         * @return builder
         * 
         */
        public Builder managementConfigurationName(Output<String> managementConfigurationName) {
            $.managementConfigurationName = managementConfigurationName;
            return this;
        }

        /**
         * @param managementConfigurationName User Management Configuration Name.
         * 
         * @return builder
         * 
         */
        public Builder managementConfigurationName(String managementConfigurationName) {
            return managementConfigurationName(Output.of(managementConfigurationName));
        }

        /**
         * @param resourceGroupName The name of the resource group to get. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group to get. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetManagementConfigurationArgs build() {
            $.managementConfigurationName = Objects.requireNonNull($.managementConfigurationName, "expected parameter 'managementConfigurationName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
