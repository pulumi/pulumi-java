// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.azurenative.insights.enums.KnownDataFlowStreams;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Definition of which streams are sent to which destinations.
 * 
 */
public final class DataFlowArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataFlowArgs Empty = new DataFlowArgs();

    /**
     * List of destinations for this data flow.
     * 
     */
    @Import(name="destinations")
      private final @Nullable Output<List<String>> destinations;

    public Output<List<String>> destinations() {
        return this.destinations == null ? Codegen.empty() : this.destinations;
    }

    /**
     * List of streams for this data flow.
     * 
     */
    @Import(name="streams")
      private final @Nullable Output<List<Either<String,KnownDataFlowStreams>>> streams;

    public Output<List<Either<String,KnownDataFlowStreams>>> streams() {
        return this.streams == null ? Codegen.empty() : this.streams;
    }

    public DataFlowArgs(
        @Nullable Output<List<String>> destinations,
        @Nullable Output<List<Either<String,KnownDataFlowStreams>>> streams) {
        this.destinations = destinations;
        this.streams = streams;
    }

    private DataFlowArgs() {
        this.destinations = Codegen.empty();
        this.streams = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataFlowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> destinations;
        private @Nullable Output<List<Either<String,KnownDataFlowStreams>>> streams;

        public Builder() {
    	      // Empty
        }

        public Builder(DataFlowArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinations = defaults.destinations;
    	      this.streams = defaults.streams;
        }

        public Builder destinations(@Nullable Output<List<String>> destinations) {
            this.destinations = destinations;
            return this;
        }
        public Builder destinations(@Nullable List<String> destinations) {
            this.destinations = Codegen.ofNullable(destinations);
            return this;
        }
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }
        public Builder streams(@Nullable Output<List<Either<String,KnownDataFlowStreams>>> streams) {
            this.streams = streams;
            return this;
        }
        public Builder streams(@Nullable List<Either<String,KnownDataFlowStreams>> streams) {
            this.streams = Codegen.ofNullable(streams);
            return this;
        }
        public Builder streams(Either<String,KnownDataFlowStreams>... streams) {
            return streams(List.of(streams));
        }        public DataFlowArgs build() {
            return new DataFlowArgs(destinations, streams);
        }
    }
}
