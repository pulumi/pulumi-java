// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.azurenative.insights.enums.KnownDataFlowStreams;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Definition of which streams are sent to which destinations.
 * 
 */
public final class DataFlowArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataFlowArgs Empty = new DataFlowArgs();

    /**
     * List of destinations for this data flow.
     * 
     */
    @Import(name="destinations")
    private @Nullable Output<List<String>> destinations;

    /**
     * @return List of destinations for this data flow.
     * 
     */
    public Optional<Output<List<String>>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * List of streams for this data flow.
     * 
     */
    @Import(name="streams")
    private @Nullable Output<List<Either<String,KnownDataFlowStreams>>> streams;

    /**
     * @return List of streams for this data flow.
     * 
     */
    public Optional<Output<List<Either<String,KnownDataFlowStreams>>>> streams() {
        return Optional.ofNullable(this.streams);
    }

    private DataFlowArgs() {}

    private DataFlowArgs(DataFlowArgs $) {
        this.destinations = $.destinations;
        this.streams = $.streams;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataFlowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataFlowArgs $;

        public Builder() {
            $ = new DataFlowArgs();
        }

        public Builder(DataFlowArgs defaults) {
            $ = new DataFlowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinations List of destinations for this data flow.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable Output<List<String>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations List of destinations for this data flow.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<String> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations List of destinations for this data flow.
         * 
         * @return builder
         * 
         */
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param streams List of streams for this data flow.
         * 
         * @return builder
         * 
         */
        public Builder streams(@Nullable Output<List<Either<String,KnownDataFlowStreams>>> streams) {
            $.streams = streams;
            return this;
        }

        /**
         * @param streams List of streams for this data flow.
         * 
         * @return builder
         * 
         */
        public Builder streams(List<Either<String,KnownDataFlowStreams>> streams) {
            return streams(Output.of(streams));
        }

        /**
         * @param streams List of streams for this data flow.
         * 
         * @return builder
         * 
         */
        public Builder streams(Either<String,KnownDataFlowStreams>... streams) {
            return streams(List.of(streams));
        }

        public DataFlowArgs build() {
            return $;
        }
    }

}
