// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagesync.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class FilesNotTieringErrorResponse {
    /**
     * @return Error code (HResult)
     * 
     */
    private final Integer errorCode;
    /**
     * @return Count of files with this error
     * 
     */
    private final Double fileCount;

    @CustomType.Constructor
    private FilesNotTieringErrorResponse(
        @CustomType.Parameter("errorCode") Integer errorCode,
        @CustomType.Parameter("fileCount") Double fileCount) {
        this.errorCode = errorCode;
        this.fileCount = fileCount;
    }

    /**
     * @return Error code (HResult)
     * 
     */
    public Integer errorCode() {
        return this.errorCode;
    }
    /**
     * @return Count of files with this error
     * 
     */
    public Double fileCount() {
        return this.fileCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FilesNotTieringErrorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer errorCode;
        private Double fileCount;

        public Builder() {
    	      // Empty
        }

        public Builder(FilesNotTieringErrorResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorCode = defaults.errorCode;
    	      this.fileCount = defaults.fileCount;
        }

        public Builder errorCode(Integer errorCode) {
            this.errorCode = Objects.requireNonNull(errorCode);
            return this;
        }
        public Builder fileCount(Double fileCount) {
            this.fileCount = Objects.requireNonNull(fileCount);
            return this;
        }        public FilesNotTieringErrorResponse build() {
            return new FilesNotTieringErrorResponse(errorCode, fileCount);
        }
    }
}
