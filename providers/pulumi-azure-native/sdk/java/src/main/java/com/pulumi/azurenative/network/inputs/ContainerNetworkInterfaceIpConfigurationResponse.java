// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The ip configuration for a container network interface.
 * 
 */
public final class ContainerNetworkInterfaceIpConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContainerNetworkInterfaceIpConfigurationResponse Empty = new ContainerNetworkInterfaceIpConfigurationResponse();

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    public String etag() {
        return this.etag;
    }

    /**
     * The name of the resource. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The provisioning state of the container network interface IP configuration resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Sub Resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private ContainerNetworkInterfaceIpConfigurationResponse() {}

    private ContainerNetworkInterfaceIpConfigurationResponse(ContainerNetworkInterfaceIpConfigurationResponse $) {
        this.etag = $.etag;
        this.name = $.name;
        this.provisioningState = $.provisioningState;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerNetworkInterfaceIpConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerNetworkInterfaceIpConfigurationResponse $;

        public Builder() {
            $ = new ContainerNetworkInterfaceIpConfigurationResponse();
        }

        public Builder(ContainerNetworkInterfaceIpConfigurationResponse defaults) {
            $ = new ContainerNetworkInterfaceIpConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public ContainerNetworkInterfaceIpConfigurationResponse build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
