// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Specifies the clip time as an absolute time position in the media file.  The absolute time can point to a different position depending on whether the media file starts from a timestamp of zero or not.
 * 
 */
public final class AbsoluteClipTimeResponse extends com.pulumi.resources.InvokeArgs {

    public static final AbsoluteClipTimeResponse Empty = new AbsoluteClipTimeResponse();

    /**
     * The discriminator for derived types.
     * Expected value is '#Microsoft.Media.AbsoluteClipTime'.
     * 
     */
    @Import(name="odataType", required=true)
      private final String odataType;

    public String odataType() {
        return this.odataType;
    }

    /**
     * The time position on the timeline of the input media. It is usually specified as an ISO8601 period. e.g PT30S for 30 seconds.
     * 
     */
    @Import(name="time", required=true)
      private final String time;

    public String time() {
        return this.time;
    }

    public AbsoluteClipTimeResponse(
        String odataType,
        String time) {
        this.odataType = Codegen.stringProp("odataType").arg(odataType).require();
        this.time = Objects.requireNonNull(time, "expected parameter 'time' to be non-null");
    }

    private AbsoluteClipTimeResponse() {
        this.odataType = null;
        this.time = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AbsoluteClipTimeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String odataType;
        private String time;

        public Builder() {
    	      // Empty
        }

        public Builder(AbsoluteClipTimeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.odataType = defaults.odataType;
    	      this.time = defaults.time;
        }

        public Builder odataType(String odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }
        public Builder time(String time) {
            this.time = Objects.requireNonNull(time);
            return this;
        }        public AbsoluteClipTimeResponse build() {
            return new AbsoluteClipTimeResponse(odataType, time);
        }
    }
}
