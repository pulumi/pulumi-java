// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PartnerResponse {
    /**
     * @return Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber&#39;s
     * context will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.
     * If not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.
     * 
     */
    private final @Nullable String authorizationExpirationTimeInUtc;
    /**
     * @return The partner name.
     * 
     */
    private final @Nullable String partnerName;
    /**
     * @return The immutableId of the corresponding partner registration.
     * 
     */
    private final @Nullable String partnerRegistrationImmutableId;

    @CustomType.Constructor
    private PartnerResponse(
        @CustomType.Parameter("authorizationExpirationTimeInUtc") @Nullable String authorizationExpirationTimeInUtc,
        @CustomType.Parameter("partnerName") @Nullable String partnerName,
        @CustomType.Parameter("partnerRegistrationImmutableId") @Nullable String partnerRegistrationImmutableId) {
        this.authorizationExpirationTimeInUtc = authorizationExpirationTimeInUtc;
        this.partnerName = partnerName;
        this.partnerRegistrationImmutableId = partnerRegistrationImmutableId;
    }

    /**
     * @return Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber&#39;s
     * context will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.
     * If not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.
     * 
     */
    public Optional<String> authorizationExpirationTimeInUtc() {
        return Optional.ofNullable(this.authorizationExpirationTimeInUtc);
    }
    /**
     * @return The partner name.
     * 
     */
    public Optional<String> partnerName() {
        return Optional.ofNullable(this.partnerName);
    }
    /**
     * @return The immutableId of the corresponding partner registration.
     * 
     */
    public Optional<String> partnerRegistrationImmutableId() {
        return Optional.ofNullable(this.partnerRegistrationImmutableId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PartnerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String authorizationExpirationTimeInUtc;
        private @Nullable String partnerName;
        private @Nullable String partnerRegistrationImmutableId;

        public Builder() {
    	      // Empty
        }

        public Builder(PartnerResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationExpirationTimeInUtc = defaults.authorizationExpirationTimeInUtc;
    	      this.partnerName = defaults.partnerName;
    	      this.partnerRegistrationImmutableId = defaults.partnerRegistrationImmutableId;
        }

        public Builder authorizationExpirationTimeInUtc(@Nullable String authorizationExpirationTimeInUtc) {
            this.authorizationExpirationTimeInUtc = authorizationExpirationTimeInUtc;
            return this;
        }
        public Builder partnerName(@Nullable String partnerName) {
            this.partnerName = partnerName;
            return this;
        }
        public Builder partnerRegistrationImmutableId(@Nullable String partnerRegistrationImmutableId) {
            this.partnerRegistrationImmutableId = partnerRegistrationImmutableId;
            return this;
        }        public PartnerResponse build() {
            return new PartnerResponse(authorizationExpirationTimeInUtc, partnerName, partnerRegistrationImmutableId);
        }
    }
}
