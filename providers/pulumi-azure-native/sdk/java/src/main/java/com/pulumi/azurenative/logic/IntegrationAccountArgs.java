// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic;

import com.pulumi.azurenative.logic.enums.WorkflowState;
import com.pulumi.azurenative.logic.inputs.IntegrationAccountSkuArgs;
import com.pulumi.azurenative.logic.inputs.ResourceReferenceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationAccountArgs Empty = new IntegrationAccountArgs();

    /**
     * The integration account name.
     * 
     */
    @Import(name="integrationAccountName")
    private @Nullable Output<String> integrationAccountName;

    /**
     * @return The integration account name.
     * 
     */
    public Optional<Output<String>> integrationAccountName() {
        return Optional.ofNullable(this.integrationAccountName);
    }

    /**
     * The integration service environment.
     * 
     */
    @Import(name="integrationServiceEnvironment")
    private @Nullable Output<ResourceReferenceArgs> integrationServiceEnvironment;

    /**
     * @return The integration service environment.
     * 
     */
    public Optional<Output<ResourceReferenceArgs>> integrationServiceEnvironment() {
        return Optional.ofNullable(this.integrationServiceEnvironment);
    }

    /**
     * The resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The resource location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The sku.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<IntegrationAccountSkuArgs> sku;

    /**
     * @return The sku.
     * 
     */
    public Optional<Output<IntegrationAccountSkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * The workflow state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<Either<String,WorkflowState>> state;

    /**
     * @return The workflow state.
     * 
     */
    public Optional<Output<Either<String,WorkflowState>>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private IntegrationAccountArgs() {}

    private IntegrationAccountArgs(IntegrationAccountArgs $) {
        this.integrationAccountName = $.integrationAccountName;
        this.integrationServiceEnvironment = $.integrationServiceEnvironment;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.state = $.state;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationAccountArgs $;

        public Builder() {
            $ = new IntegrationAccountArgs();
        }

        public Builder(IntegrationAccountArgs defaults) {
            $ = new IntegrationAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param integrationAccountName The integration account name.
         * 
         * @return builder
         * 
         */
        public Builder integrationAccountName(@Nullable Output<String> integrationAccountName) {
            $.integrationAccountName = integrationAccountName;
            return this;
        }

        /**
         * @param integrationAccountName The integration account name.
         * 
         * @return builder
         * 
         */
        public Builder integrationAccountName(String integrationAccountName) {
            return integrationAccountName(Output.of(integrationAccountName));
        }

        /**
         * @param integrationServiceEnvironment The integration service environment.
         * 
         * @return builder
         * 
         */
        public Builder integrationServiceEnvironment(@Nullable Output<ResourceReferenceArgs> integrationServiceEnvironment) {
            $.integrationServiceEnvironment = integrationServiceEnvironment;
            return this;
        }

        /**
         * @param integrationServiceEnvironment The integration service environment.
         * 
         * @return builder
         * 
         */
        public Builder integrationServiceEnvironment(ResourceReferenceArgs integrationServiceEnvironment) {
            return integrationServiceEnvironment(Output.of(integrationServiceEnvironment));
        }

        /**
         * @param location The resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The resource location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku The sku.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<IntegrationAccountSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The sku.
         * 
         * @return builder
         * 
         */
        public Builder sku(IntegrationAccountSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param state The workflow state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<Either<String,WorkflowState>> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The workflow state.
         * 
         * @return builder
         * 
         */
        public Builder state(Either<String,WorkflowState> state) {
            return state(Output.of(state));
        }

        /**
         * @param state The workflow state.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Either.ofLeft(state));
        }

        /**
         * @param state The workflow state.
         * 
         * @return builder
         * 
         */
        public Builder state(WorkflowState state) {
            return state(Either.ofRight(state));
        }

        /**
         * @param tags The resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public IntegrationAccountArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
