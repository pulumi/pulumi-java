// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.mobilenetwork;

import com.pulumi.azurenative.mobilenetwork.enums.CreatedByType;
import com.pulumi.azurenative.mobilenetwork.inputs.AmbrArgs;
import com.pulumi.azurenative.mobilenetwork.inputs.SliceConfigurationArgs;
import com.pulumi.azurenative.mobilenetwork.inputs.SliceResourceIdArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SimPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SimPolicyArgs Empty = new SimPolicyArgs();

    /**
     * The timestamp of resource creation (UTC).
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The timestamp of resource creation (UTC).
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The identity that created the resource.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The identity that created the resource.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * The type of identity that created the resource.
     * 
     */
    @Import(name="createdByType")
    private @Nullable Output<Either<String,CreatedByType>> createdByType;

    /**
     * @return The type of identity that created the resource.
     * 
     */
    public Optional<Output<Either<String,CreatedByType>>> createdByType() {
        return Optional.ofNullable(this.createdByType);
    }

    /**
     * The default slice to use if the UE does not explicitly specify it.  This slice must exist in the `sliceConfigurations` map.
     * 
     */
    @Import(name="defaultSlice", required=true)
    private Output<SliceResourceIdArgs> defaultSlice;

    /**
     * @return The default slice to use if the UE does not explicitly specify it.  This slice must exist in the `sliceConfigurations` map.
     * 
     */
    public Output<SliceResourceIdArgs> defaultSlice() {
        return this.defaultSlice;
    }

    /**
     * The timestamp of resource last modification (UTC)
     * 
     */
    @Import(name="lastModifiedAt")
    private @Nullable Output<String> lastModifiedAt;

    /**
     * @return The timestamp of resource last modification (UTC)
     * 
     */
    public Optional<Output<String>> lastModifiedAt() {
        return Optional.ofNullable(this.lastModifiedAt);
    }

    /**
     * The identity that last modified the resource.
     * 
     */
    @Import(name="lastModifiedBy")
    private @Nullable Output<String> lastModifiedBy;

    /**
     * @return The identity that last modified the resource.
     * 
     */
    public Optional<Output<String>> lastModifiedBy() {
        return Optional.ofNullable(this.lastModifiedBy);
    }

    /**
     * The type of identity that last modified the resource.
     * 
     */
    @Import(name="lastModifiedByType")
    private @Nullable Output<Either<String,CreatedByType>> lastModifiedByType;

    /**
     * @return The type of identity that last modified the resource.
     * 
     */
    public Optional<Output<Either<String,CreatedByType>>> lastModifiedByType() {
        return Optional.ofNullable(this.lastModifiedByType);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the mobile network.
     * 
     */
    @Import(name="mobileNetworkName", required=true)
    private Output<String> mobileNetworkName;

    /**
     * @return The name of the mobile network.
     * 
     */
    public Output<String> mobileNetworkName() {
        return this.mobileNetworkName;
    }

    /**
     * Interval for the UE periodic registration update procedure, in seconds.
     * 
     */
    @Import(name="registrationTimer")
    private @Nullable Output<Integer> registrationTimer;

    /**
     * @return Interval for the UE periodic registration update procedure, in seconds.
     * 
     */
    public Optional<Output<Integer>> registrationTimer() {
        return Optional.ofNullable(this.registrationTimer);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413.  This is an optional setting and by default is unspecified.
     * 
     */
    @Import(name="rfspIndex")
    private @Nullable Output<Integer> rfspIndex;

    /**
     * @return RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413.  This is an optional setting and by default is unspecified.
     * 
     */
    public Optional<Output<Integer>> rfspIndex() {
        return Optional.ofNullable(this.rfspIndex);
    }

    /**
     * The name of the SIM policy.
     * 
     */
    @Import(name="simPolicyName")
    private @Nullable Output<String> simPolicyName;

    /**
     * @return The name of the SIM policy.
     * 
     */
    public Optional<Output<String>> simPolicyName() {
        return Optional.ofNullable(this.simPolicyName);
    }

    /**
     * The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.
     * 
     */
    @Import(name="sliceConfigurations", required=true)
    private Output<List<SliceConfigurationArgs>> sliceConfigurations;

    /**
     * @return The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.
     * 
     */
    public Output<List<SliceConfigurationArgs>> sliceConfigurations() {
        return this.sliceConfigurations;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Aggregate maximum bit rate across all non-GBR QoS flows of all PDU sessions of a given UE. See 3GPP TS23.501 section 5.7.2.6 for a full description of the UE-AMBR.
     * 
     */
    @Import(name="ueAmbr", required=true)
    private Output<AmbrArgs> ueAmbr;

    /**
     * @return Aggregate maximum bit rate across all non-GBR QoS flows of all PDU sessions of a given UE. See 3GPP TS23.501 section 5.7.2.6 for a full description of the UE-AMBR.
     * 
     */
    public Output<AmbrArgs> ueAmbr() {
        return this.ueAmbr;
    }

    private SimPolicyArgs() {}

    private SimPolicyArgs(SimPolicyArgs $) {
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.createdByType = $.createdByType;
        this.defaultSlice = $.defaultSlice;
        this.lastModifiedAt = $.lastModifiedAt;
        this.lastModifiedBy = $.lastModifiedBy;
        this.lastModifiedByType = $.lastModifiedByType;
        this.location = $.location;
        this.mobileNetworkName = $.mobileNetworkName;
        this.registrationTimer = $.registrationTimer;
        this.resourceGroupName = $.resourceGroupName;
        this.rfspIndex = $.rfspIndex;
        this.simPolicyName = $.simPolicyName;
        this.sliceConfigurations = $.sliceConfigurations;
        this.tags = $.tags;
        this.ueAmbr = $.ueAmbr;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SimPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SimPolicyArgs $;

        public Builder() {
            $ = new SimPolicyArgs();
        }

        public Builder(SimPolicyArgs defaults) {
            $ = new SimPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt The timestamp of resource creation (UTC).
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The timestamp of resource creation (UTC).
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param createdBy The identity that created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The identity that created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param createdByType The type of identity that created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdByType(@Nullable Output<Either<String,CreatedByType>> createdByType) {
            $.createdByType = createdByType;
            return this;
        }

        /**
         * @param createdByType The type of identity that created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdByType(Either<String,CreatedByType> createdByType) {
            return createdByType(Output.of(createdByType));
        }

        /**
         * @param createdByType The type of identity that created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdByType(String createdByType) {
            return createdByType(Either.ofLeft(createdByType));
        }

        /**
         * @param createdByType The type of identity that created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdByType(CreatedByType createdByType) {
            return createdByType(Either.ofRight(createdByType));
        }

        /**
         * @param defaultSlice The default slice to use if the UE does not explicitly specify it.  This slice must exist in the `sliceConfigurations` map.
         * 
         * @return builder
         * 
         */
        public Builder defaultSlice(Output<SliceResourceIdArgs> defaultSlice) {
            $.defaultSlice = defaultSlice;
            return this;
        }

        /**
         * @param defaultSlice The default slice to use if the UE does not explicitly specify it.  This slice must exist in the `sliceConfigurations` map.
         * 
         * @return builder
         * 
         */
        public Builder defaultSlice(SliceResourceIdArgs defaultSlice) {
            return defaultSlice(Output.of(defaultSlice));
        }

        /**
         * @param lastModifiedAt The timestamp of resource last modification (UTC)
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedAt(@Nullable Output<String> lastModifiedAt) {
            $.lastModifiedAt = lastModifiedAt;
            return this;
        }

        /**
         * @param lastModifiedAt The timestamp of resource last modification (UTC)
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedAt(String lastModifiedAt) {
            return lastModifiedAt(Output.of(lastModifiedAt));
        }

        /**
         * @param lastModifiedBy The identity that last modified the resource.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedBy(@Nullable Output<String> lastModifiedBy) {
            $.lastModifiedBy = lastModifiedBy;
            return this;
        }

        /**
         * @param lastModifiedBy The identity that last modified the resource.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedBy(String lastModifiedBy) {
            return lastModifiedBy(Output.of(lastModifiedBy));
        }

        /**
         * @param lastModifiedByType The type of identity that last modified the resource.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedByType(@Nullable Output<Either<String,CreatedByType>> lastModifiedByType) {
            $.lastModifiedByType = lastModifiedByType;
            return this;
        }

        /**
         * @param lastModifiedByType The type of identity that last modified the resource.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedByType(Either<String,CreatedByType> lastModifiedByType) {
            return lastModifiedByType(Output.of(lastModifiedByType));
        }

        /**
         * @param lastModifiedByType The type of identity that last modified the resource.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedByType(String lastModifiedByType) {
            return lastModifiedByType(Either.ofLeft(lastModifiedByType));
        }

        /**
         * @param lastModifiedByType The type of identity that last modified the resource.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedByType(CreatedByType lastModifiedByType) {
            return lastModifiedByType(Either.ofRight(lastModifiedByType));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param mobileNetworkName The name of the mobile network.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkName(Output<String> mobileNetworkName) {
            $.mobileNetworkName = mobileNetworkName;
            return this;
        }

        /**
         * @param mobileNetworkName The name of the mobile network.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkName(String mobileNetworkName) {
            return mobileNetworkName(Output.of(mobileNetworkName));
        }

        /**
         * @param registrationTimer Interval for the UE periodic registration update procedure, in seconds.
         * 
         * @return builder
         * 
         */
        public Builder registrationTimer(@Nullable Output<Integer> registrationTimer) {
            $.registrationTimer = registrationTimer;
            return this;
        }

        /**
         * @param registrationTimer Interval for the UE periodic registration update procedure, in seconds.
         * 
         * @return builder
         * 
         */
        public Builder registrationTimer(Integer registrationTimer) {
            return registrationTimer(Output.of(registrationTimer));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param rfspIndex RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413.  This is an optional setting and by default is unspecified.
         * 
         * @return builder
         * 
         */
        public Builder rfspIndex(@Nullable Output<Integer> rfspIndex) {
            $.rfspIndex = rfspIndex;
            return this;
        }

        /**
         * @param rfspIndex RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413.  This is an optional setting and by default is unspecified.
         * 
         * @return builder
         * 
         */
        public Builder rfspIndex(Integer rfspIndex) {
            return rfspIndex(Output.of(rfspIndex));
        }

        /**
         * @param simPolicyName The name of the SIM policy.
         * 
         * @return builder
         * 
         */
        public Builder simPolicyName(@Nullable Output<String> simPolicyName) {
            $.simPolicyName = simPolicyName;
            return this;
        }

        /**
         * @param simPolicyName The name of the SIM policy.
         * 
         * @return builder
         * 
         */
        public Builder simPolicyName(String simPolicyName) {
            return simPolicyName(Output.of(simPolicyName));
        }

        /**
         * @param sliceConfigurations The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.
         * 
         * @return builder
         * 
         */
        public Builder sliceConfigurations(Output<List<SliceConfigurationArgs>> sliceConfigurations) {
            $.sliceConfigurations = sliceConfigurations;
            return this;
        }

        /**
         * @param sliceConfigurations The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.
         * 
         * @return builder
         * 
         */
        public Builder sliceConfigurations(List<SliceConfigurationArgs> sliceConfigurations) {
            return sliceConfigurations(Output.of(sliceConfigurations));
        }

        /**
         * @param sliceConfigurations The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.
         * 
         * @return builder
         * 
         */
        public Builder sliceConfigurations(SliceConfigurationArgs... sliceConfigurations) {
            return sliceConfigurations(List.of(sliceConfigurations));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param ueAmbr Aggregate maximum bit rate across all non-GBR QoS flows of all PDU sessions of a given UE. See 3GPP TS23.501 section 5.7.2.6 for a full description of the UE-AMBR.
         * 
         * @return builder
         * 
         */
        public Builder ueAmbr(Output<AmbrArgs> ueAmbr) {
            $.ueAmbr = ueAmbr;
            return this;
        }

        /**
         * @param ueAmbr Aggregate maximum bit rate across all non-GBR QoS flows of all PDU sessions of a given UE. See 3GPP TS23.501 section 5.7.2.6 for a full description of the UE-AMBR.
         * 
         * @return builder
         * 
         */
        public Builder ueAmbr(AmbrArgs ueAmbr) {
            return ueAmbr(Output.of(ueAmbr));
        }

        public SimPolicyArgs build() {
            $.defaultSlice = Objects.requireNonNull($.defaultSlice, "expected parameter 'defaultSlice' to be non-null");
            $.mobileNetworkName = Objects.requireNonNull($.mobileNetworkName, "expected parameter 'mobileNetworkName' to be non-null");
            $.registrationTimer = Codegen.integerProp("registrationTimer").output().arg($.registrationTimer).def(3240).getNullable();
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sliceConfigurations = Objects.requireNonNull($.sliceConfigurations, "expected parameter 'sliceConfigurations' to be non-null");
            $.ueAmbr = Objects.requireNonNull($.ueAmbr, "expected parameter 'ueAmbr' to be non-null");
            return $;
        }
    }

}
