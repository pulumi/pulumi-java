// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.azurenative.insights.inputs.CriteriaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Specify action need to be taken when rule type is converting log to metric
 * 
 */
public final class LogToMetricActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogToMetricActionArgs Empty = new LogToMetricActionArgs();

    /**
     * Criteria of Metric
     * 
     */
    @Import(name="criteria", required=true)
    private Output<List<CriteriaArgs>> criteria;

    /**
     * @return Criteria of Metric
     * 
     */
    public Output<List<CriteriaArgs>> criteria() {
        return this.criteria;
    }

    /**
     * Specifies the action. Supported values - AlertingAction, LogToMetricAction
     * Expected value is &#39;Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private Output<String> odataType;

    /**
     * @return Specifies the action. Supported values - AlertingAction, LogToMetricAction
     * Expected value is &#39;Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction&#39;.
     * 
     */
    public Output<String> odataType() {
        return this.odataType;
    }

    private LogToMetricActionArgs() {}

    private LogToMetricActionArgs(LogToMetricActionArgs $) {
        this.criteria = $.criteria;
        this.odataType = $.odataType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogToMetricActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogToMetricActionArgs $;

        public Builder() {
            $ = new LogToMetricActionArgs();
        }

        public Builder(LogToMetricActionArgs defaults) {
            $ = new LogToMetricActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param criteria Criteria of Metric
         * 
         * @return builder
         * 
         */
        public Builder criteria(Output<List<CriteriaArgs>> criteria) {
            $.criteria = criteria;
            return this;
        }

        /**
         * @param criteria Criteria of Metric
         * 
         * @return builder
         * 
         */
        public Builder criteria(List<CriteriaArgs> criteria) {
            return criteria(Output.of(criteria));
        }

        /**
         * @param criteria Criteria of Metric
         * 
         * @return builder
         * 
         */
        public Builder criteria(CriteriaArgs... criteria) {
            return criteria(List.of(criteria));
        }

        /**
         * @param odataType Specifies the action. Supported values - AlertingAction, LogToMetricAction
         * Expected value is &#39;Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction&#39;.
         * 
         * @return builder
         * 
         */
        public Builder odataType(Output<String> odataType) {
            $.odataType = odataType;
            return this;
        }

        /**
         * @param odataType Specifies the action. Supported values - AlertingAction, LogToMetricAction
         * Expected value is &#39;Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction&#39;.
         * 
         * @return builder
         * 
         */
        public Builder odataType(String odataType) {
            return odataType(Output.of(odataType));
        }

        public LogToMetricActionArgs build() {
            $.criteria = Objects.requireNonNull($.criteria, "expected parameter 'criteria' to be non-null");
            $.odataType = Codegen.stringProp("odataType").output().arg($.odataType).require();
            return $;
        }
    }

}
