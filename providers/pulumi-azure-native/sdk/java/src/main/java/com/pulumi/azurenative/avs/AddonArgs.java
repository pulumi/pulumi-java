// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.avs;

import com.pulumi.azurenative.avs.enums.AddonType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AddonArgs extends com.pulumi.resources.ResourceArgs {

    public static final AddonArgs Empty = new AddonArgs();

    /**
     * Name of the addon for the private cloud
     * 
     */
    @Import(name="addonName")
      private final @Nullable Output<String> addonName;

    public Output<String> addonName() {
        return this.addonName == null ? Codegen.empty() : this.addonName;
    }

    /**
     * The type of private cloud addon
     * 
     */
    @Import(name="addonType")
      private final @Nullable Output<Either<String,AddonType>> addonType;

    public Output<Either<String,AddonType>> addonType() {
        return this.addonType == null ? Codegen.empty() : this.addonType;
    }

    /**
     * The SRM license
     * 
     */
    @Import(name="licenseKey")
      private final @Nullable Output<String> licenseKey;

    public Output<String> licenseKey() {
        return this.licenseKey == null ? Codegen.empty() : this.licenseKey;
    }

    /**
     * The name of the private cloud.
     * 
     */
    @Import(name="privateCloudName", required=true)
      private final Output<String> privateCloudName;

    public Output<String> privateCloudName() {
        return this.privateCloudName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    public AddonArgs(
        @Nullable Output<String> addonName,
        @Nullable Output<Either<String,AddonType>> addonType,
        @Nullable Output<String> licenseKey,
        Output<String> privateCloudName,
        Output<String> resourceGroupName) {
        this.addonName = addonName;
        this.addonType = addonType;
        this.licenseKey = licenseKey;
        this.privateCloudName = Objects.requireNonNull(privateCloudName, "expected parameter 'privateCloudName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private AddonArgs() {
        this.addonName = Codegen.empty();
        this.addonType = Codegen.empty();
        this.licenseKey = Codegen.empty();
        this.privateCloudName = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AddonArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> addonName;
        private @Nullable Output<Either<String,AddonType>> addonType;
        private @Nullable Output<String> licenseKey;
        private Output<String> privateCloudName;
        private Output<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(AddonArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonName = defaults.addonName;
    	      this.addonType = defaults.addonType;
    	      this.licenseKey = defaults.licenseKey;
    	      this.privateCloudName = defaults.privateCloudName;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder addonName(@Nullable Output<String> addonName) {
            this.addonName = addonName;
            return this;
        }
        public Builder addonName(@Nullable String addonName) {
            this.addonName = Codegen.ofNullable(addonName);
            return this;
        }
        public Builder addonType(@Nullable Output<Either<String,AddonType>> addonType) {
            this.addonType = addonType;
            return this;
        }
        public Builder addonType(@Nullable Either<String,AddonType> addonType) {
            this.addonType = Codegen.ofNullable(addonType);
            return this;
        }
        public Builder licenseKey(@Nullable Output<String> licenseKey) {
            this.licenseKey = licenseKey;
            return this;
        }
        public Builder licenseKey(@Nullable String licenseKey) {
            this.licenseKey = Codegen.ofNullable(licenseKey);
            return this;
        }
        public Builder privateCloudName(Output<String> privateCloudName) {
            this.privateCloudName = Objects.requireNonNull(privateCloudName);
            return this;
        }
        public Builder privateCloudName(String privateCloudName) {
            this.privateCloudName = Output.of(Objects.requireNonNull(privateCloudName));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }        public AddonArgs build() {
            return new AddonArgs(addonName, addonType, licenseKey, privateCloudName, resourceGroupName);
        }
    }
}
