// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.datafactory.FactoryArgs;
import com.pulumi.azurenative.datafactory.outputs.EncryptionConfigurationResponse;
import com.pulumi.azurenative.datafactory.outputs.FactoryGitHubConfigurationResponse;
import com.pulumi.azurenative.datafactory.outputs.FactoryIdentityResponse;
import com.pulumi.azurenative.datafactory.outputs.FactoryVSTSConfigurationResponse;
import com.pulumi.azurenative.datafactory.outputs.GlobalParameterSpecificationResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Factory resource type.
 * API Version: 2018-06-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:datafactory:Factory exampleFactoryName /subscriptions/12345678-1234-1234-1234-12345678abc/resourceGroups/exampleResourceGroup/providers/Microsoft.DataFactory/factories/exampleFactoryName 
 * ```
 * 
 */
@ResourceType(type="azure-native:datafactory:Factory")
public class Factory extends com.pulumi.resources.CustomResource {
    /**
     * Time the factory was created in ISO8601 format.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Time the factory was created in ISO8601 format.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Etag identifies change in the resource.
     * 
     */
    @Export(name="eTag", type=String.class, parameters={})
    private Output<String> eTag;

    /**
     * @return Etag identifies change in the resource.
     * 
     */
    public Output<String> eTag() {
        return this.eTag;
    }
    /**
     * Properties to enable Customer Managed Key for the factory.
     * 
     */
    @Export(name="encryption", type=EncryptionConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ EncryptionConfigurationResponse> encryption;

    /**
     * @return Properties to enable Customer Managed Key for the factory.
     * 
     */
    public Output</* @Nullable */ EncryptionConfigurationResponse> encryption() {
        return this.encryption;
    }
    /**
     * List of parameters for factory.
     * 
     */
    @Export(name="globalParameters", type=Map.class, parameters={String.class, GlobalParameterSpecificationResponse.class})
    private Output</* @Nullable */ Map<String,GlobalParameterSpecificationResponse>> globalParameters;

    /**
     * @return List of parameters for factory.
     * 
     */
    public Output</* @Nullable */ Map<String,GlobalParameterSpecificationResponse>> globalParameters() {
        return this.globalParameters;
    }
    /**
     * Managed service identity of the factory.
     * 
     */
    @Export(name="identity", type=FactoryIdentityResponse.class, parameters={})
    private Output</* @Nullable */ FactoryIdentityResponse> identity;

    /**
     * @return Managed service identity of the factory.
     * 
     */
    public Output</* @Nullable */ FactoryIdentityResponse> identity() {
        return this.identity;
    }
    /**
     * The resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The resource location.
     * 
     */
    public Output</* @Nullable */ String> location() {
        return this.location;
    }
    /**
     * The resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Factory provisioning state, example Succeeded.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return Factory provisioning state, example Succeeded.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Whether or not public network access is allowed for the data factory.
     * 
     */
    @Export(name="publicNetworkAccess", type=String.class, parameters={})
    private Output</* @Nullable */ String> publicNetworkAccess;

    /**
     * @return Whether or not public network access is allowed for the data factory.
     * 
     */
    public Output</* @Nullable */ String> publicNetworkAccess() {
        return this.publicNetworkAccess;
    }
    /**
     * Git repo information of the factory.
     * 
     */
    @Export(name="repoConfiguration", type=Either.class, parameters={FactoryGitHubConfigurationResponse.class, FactoryVSTSConfigurationResponse.class})
    private Output</* @Nullable */ Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse>> repoConfiguration;

    /**
     * @return Git repo information of the factory.
     * 
     */
    public Output</* @Nullable */ Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse>> repoConfiguration() {
        return this.repoConfiguration;
    }
    /**
     * The resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The resource tags.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }
    /**
     * The resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Version of the factory.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return Version of the factory.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Factory(String name) {
        this(name, FactoryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Factory(String name, FactoryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Factory(String name, FactoryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:datafactory:Factory", name, args == null ? FactoryArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Factory(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:datafactory:Factory", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:datafactory/v20170901preview:Factory").build()),
                Output.of(Alias.builder().type("azure-native:datafactory/v20180601:Factory").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Factory get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Factory(name, id, options);
    }
}
