// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.AzureKeyVaultSecretReferenceArgs;
import com.pulumi.azurenative.datafactory.inputs.SecureStringArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.util.Objects;


/**
 * SSIS access credential.
 * 
 */
public final class SSISAccessCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final SSISAccessCredentialArgs Empty = new SSISAccessCredentialArgs();

    /**
     * Domain for windows authentication.
     * 
     */
    @Import(name="domain", required=true)
    private Output<Object> domain;

    /**
     * @return Domain for windows authentication.
     * 
     */
    public Output<Object> domain() {
        return this.domain;
    }

    /**
     * Password for windows authentication.
     * 
     */
    @Import(name="password", required=true)
    private Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password;

    /**
     * @return Password for windows authentication.
     * 
     */
    public Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password() {
        return this.password;
    }

    /**
     * UseName for windows authentication.
     * 
     */
    @Import(name="userName", required=true)
    private Output<Object> userName;

    /**
     * @return UseName for windows authentication.
     * 
     */
    public Output<Object> userName() {
        return this.userName;
    }

    private SSISAccessCredentialArgs() {}

    private SSISAccessCredentialArgs(SSISAccessCredentialArgs $) {
        this.domain = $.domain;
        this.password = $.password;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SSISAccessCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SSISAccessCredentialArgs $;

        public Builder() {
            $ = new SSISAccessCredentialArgs();
        }

        public Builder(SSISAccessCredentialArgs defaults) {
            $ = new SSISAccessCredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain Domain for windows authentication.
         * 
         * @return builder
         * 
         */
        public Builder domain(Output<Object> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Domain for windows authentication.
         * 
         * @return builder
         * 
         */
        public Builder domain(Object domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param password Password for windows authentication.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Password for windows authentication.
         * 
         * @return builder
         * 
         */
        public Builder password(Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs> password) {
            return password(Output.of(password));
        }

        /**
         * @param password Password for windows authentication.
         * 
         * @return builder
         * 
         */
        public Builder password(AzureKeyVaultSecretReferenceArgs password) {
            return password(Either.ofLeft(password));
        }

        /**
         * @param password Password for windows authentication.
         * 
         * @return builder
         * 
         */
        public Builder password(SecureStringArgs password) {
            return password(Either.ofRight(password));
        }

        /**
         * @param userName UseName for windows authentication.
         * 
         * @return builder
         * 
         */
        public Builder userName(Output<Object> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName UseName for windows authentication.
         * 
         * @return builder
         * 
         */
        public Builder userName(Object userName) {
            return userName(Output.of(userName));
        }

        public SSISAccessCredentialArgs build() {
            $.domain = Objects.requireNonNull($.domain, "expected parameter 'domain' to be non-null");
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
