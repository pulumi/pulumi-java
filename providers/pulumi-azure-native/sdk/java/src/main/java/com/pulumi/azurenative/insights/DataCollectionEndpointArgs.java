// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights;

import com.pulumi.azurenative.insights.enums.KnownDataCollectionEndpointResourceKind;
import com.pulumi.azurenative.insights.inputs.DataCollectionEndpointNetworkAclsArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataCollectionEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataCollectionEndpointArgs Empty = new DataCollectionEndpointArgs();

    /**
     * The name of the data collection endpoint. The name is case insensitive.
     * 
     */
    @Import(name="dataCollectionEndpointName")
    private @Nullable Output<String> dataCollectionEndpointName;

    /**
     * @return The name of the data collection endpoint. The name is case insensitive.
     * 
     */
    public Optional<Output<String>> dataCollectionEndpointName() {
        return Optional.ofNullable(this.dataCollectionEndpointName);
    }

    /**
     * Description of the data collection endpoint.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the data collection endpoint.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The immutable ID of this data collection endpoint resource. This property is READ-ONLY.
     * 
     */
    @Import(name="immutableId")
    private @Nullable Output<String> immutableId;

    /**
     * @return The immutable ID of this data collection endpoint resource. This property is READ-ONLY.
     * 
     */
    public Optional<Output<String>> immutableId() {
        return Optional.ofNullable(this.immutableId);
    }

    /**
     * The kind of the resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<Either<String,KnownDataCollectionEndpointResourceKind>> kind;

    /**
     * @return The kind of the resource.
     * 
     */
    public Optional<Output<Either<String,KnownDataCollectionEndpointResourceKind>>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * The geo-location where the resource lives.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Network access control rules for the endpoints.
     * 
     */
    @Import(name="networkAcls")
    private @Nullable Output<DataCollectionEndpointNetworkAclsArgs> networkAcls;

    /**
     * @return Network access control rules for the endpoints.
     * 
     */
    public Optional<Output<DataCollectionEndpointNetworkAclsArgs>> networkAcls() {
        return Optional.ofNullable(this.networkAcls);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DataCollectionEndpointArgs() {}

    private DataCollectionEndpointArgs(DataCollectionEndpointArgs $) {
        this.dataCollectionEndpointName = $.dataCollectionEndpointName;
        this.description = $.description;
        this.immutableId = $.immutableId;
        this.kind = $.kind;
        this.location = $.location;
        this.networkAcls = $.networkAcls;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataCollectionEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataCollectionEndpointArgs $;

        public Builder() {
            $ = new DataCollectionEndpointArgs();
        }

        public Builder(DataCollectionEndpointArgs defaults) {
            $ = new DataCollectionEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder dataCollectionEndpointName(@Nullable Output<String> dataCollectionEndpointName) {
            $.dataCollectionEndpointName = dataCollectionEndpointName;
            return this;
        }

        /**
         * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder dataCollectionEndpointName(String dataCollectionEndpointName) {
            return dataCollectionEndpointName(Output.of(dataCollectionEndpointName));
        }

        /**
         * @param description Description of the data collection endpoint.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the data collection endpoint.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param immutableId The immutable ID of this data collection endpoint resource. This property is READ-ONLY.
         * 
         * @return builder
         * 
         */
        public Builder immutableId(@Nullable Output<String> immutableId) {
            $.immutableId = immutableId;
            return this;
        }

        /**
         * @param immutableId The immutable ID of this data collection endpoint resource. This property is READ-ONLY.
         * 
         * @return builder
         * 
         */
        public Builder immutableId(String immutableId) {
            return immutableId(Output.of(immutableId));
        }

        /**
         * @param kind The kind of the resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<Either<String,KnownDataCollectionEndpointResourceKind>> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The kind of the resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(Either<String,KnownDataCollectionEndpointResourceKind> kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param kind The kind of the resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Either.ofLeft(kind));
        }

        /**
         * @param kind The kind of the resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(KnownDataCollectionEndpointResourceKind kind) {
            return kind(Either.ofRight(kind));
        }

        /**
         * @param location The geo-location where the resource lives.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param networkAcls Network access control rules for the endpoints.
         * 
         * @return builder
         * 
         */
        public Builder networkAcls(@Nullable Output<DataCollectionEndpointNetworkAclsArgs> networkAcls) {
            $.networkAcls = networkAcls;
            return this;
        }

        /**
         * @param networkAcls Network access control rules for the endpoints.
         * 
         * @return builder
         * 
         */
        public Builder networkAcls(DataCollectionEndpointNetworkAclsArgs networkAcls) {
            return networkAcls(Output.of(networkAcls));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DataCollectionEndpointArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
