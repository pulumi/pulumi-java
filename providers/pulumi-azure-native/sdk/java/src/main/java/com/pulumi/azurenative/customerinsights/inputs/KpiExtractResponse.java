// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The KPI extract.
 * 
 */
public final class KpiExtractResponse extends com.pulumi.resources.InvokeArgs {

    public static final KpiExtractResponse Empty = new KpiExtractResponse();

    /**
     * The expression.
     * 
     */
    @Import(name="expression", required=true)
      private final String expression;

    public String expression() {
        return this.expression;
    }

    /**
     * KPI extract name.
     * 
     */
    @Import(name="extractName", required=true)
      private final String extractName;

    public String extractName() {
        return this.extractName;
    }

    public KpiExtractResponse(
        String expression,
        String extractName) {
        this.expression = Objects.requireNonNull(expression, "expected parameter 'expression' to be non-null");
        this.extractName = Objects.requireNonNull(extractName, "expected parameter 'extractName' to be non-null");
    }

    private KpiExtractResponse() {
        this.expression = null;
        this.extractName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KpiExtractResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String expression;
        private String extractName;

        public Builder() {
    	      // Empty
        }

        public Builder(KpiExtractResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expression = defaults.expression;
    	      this.extractName = defaults.extractName;
        }

        public Builder expression(String expression) {
            this.expression = Objects.requireNonNull(expression);
            return this;
        }
        public Builder extractName(String extractName) {
            this.extractName = Objects.requireNonNull(extractName);
            return this;
        }        public KpiExtractResponse build() {
            return new KpiExtractResponse(expression, extractName);
        }
    }
}
