// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub;

import com.pulumi.azurenative.providerhub.inputs.SkuResourcePropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SkusNestedResourceTypeSecondArgs extends com.pulumi.resources.ResourceArgs {

    public static final SkusNestedResourceTypeSecondArgs Empty = new SkusNestedResourceTypeSecondArgs();

    /**
     * The first child resource type.
     * 
     */
    @Import(name="nestedResourceTypeFirst", required=true)
    private Output<String> nestedResourceTypeFirst;

    public Output<String> nestedResourceTypeFirst() {
        return this.nestedResourceTypeFirst;
    }

    /**
     * The second child resource type.
     * 
     */
    @Import(name="nestedResourceTypeSecond", required=true)
    private Output<String> nestedResourceTypeSecond;

    public Output<String> nestedResourceTypeSecond() {
        return this.nestedResourceTypeSecond;
    }

    @Import(name="properties")
    private @Nullable Output<SkuResourcePropertiesArgs> properties;

    public Optional<Output<SkuResourcePropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The name of the resource provider hosted within ProviderHub.
     * 
     */
    @Import(name="providerNamespace", required=true)
    private Output<String> providerNamespace;

    public Output<String> providerNamespace() {
        return this.providerNamespace;
    }

    /**
     * The resource type.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * The SKU.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<String> sku;

    public Optional<Output<String>> sku() {
        return Optional.ofNullable(this.sku);
    }

    private SkusNestedResourceTypeSecondArgs() {}

    private SkusNestedResourceTypeSecondArgs(SkusNestedResourceTypeSecondArgs $) {
        this.nestedResourceTypeFirst = $.nestedResourceTypeFirst;
        this.nestedResourceTypeSecond = $.nestedResourceTypeSecond;
        this.properties = $.properties;
        this.providerNamespace = $.providerNamespace;
        this.resourceType = $.resourceType;
        this.sku = $.sku;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SkusNestedResourceTypeSecondArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SkusNestedResourceTypeSecondArgs $;

        public Builder() {
            $ = new SkusNestedResourceTypeSecondArgs();
        }

        public Builder(SkusNestedResourceTypeSecondArgs defaults) {
            $ = new SkusNestedResourceTypeSecondArgs(Objects.requireNonNull(defaults));
        }

        public Builder nestedResourceTypeFirst(Output<String> nestedResourceTypeFirst) {
            $.nestedResourceTypeFirst = nestedResourceTypeFirst;
            return this;
        }

        public Builder nestedResourceTypeFirst(String nestedResourceTypeFirst) {
            return nestedResourceTypeFirst(Output.of(nestedResourceTypeFirst));
        }

        public Builder nestedResourceTypeSecond(Output<String> nestedResourceTypeSecond) {
            $.nestedResourceTypeSecond = nestedResourceTypeSecond;
            return this;
        }

        public Builder nestedResourceTypeSecond(String nestedResourceTypeSecond) {
            return nestedResourceTypeSecond(Output.of(nestedResourceTypeSecond));
        }

        public Builder properties(@Nullable Output<SkuResourcePropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(SkuResourcePropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        public Builder providerNamespace(Output<String> providerNamespace) {
            $.providerNamespace = providerNamespace;
            return this;
        }

        public Builder providerNamespace(String providerNamespace) {
            return providerNamespace(Output.of(providerNamespace));
        }

        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public Builder sku(@Nullable Output<String> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(String sku) {
            return sku(Output.of(sku));
        }

        public SkusNestedResourceTypeSecondArgs build() {
            $.nestedResourceTypeFirst = Objects.requireNonNull($.nestedResourceTypeFirst, "expected parameter 'nestedResourceTypeFirst' to be non-null");
            $.nestedResourceTypeSecond = Objects.requireNonNull($.nestedResourceTypeSecond, "expected parameter 'nestedResourceTypeSecond' to be non-null");
            $.providerNamespace = Objects.requireNonNull($.providerNamespace, "expected parameter 'providerNamespace' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            return $;
        }
    }

}
