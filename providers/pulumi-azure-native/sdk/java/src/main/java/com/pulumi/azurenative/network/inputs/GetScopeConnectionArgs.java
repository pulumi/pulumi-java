// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetScopeConnectionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetScopeConnectionArgs Empty = new GetScopeConnectionArgs();

    /**
     * The name of the network manager.
     * 
     */
    @Import(name="networkManagerName", required=true)
    private String networkManagerName;

    public String networkManagerName() {
        return this.networkManagerName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name for the cross-tenant connection.
     * 
     */
    @Import(name="scopeConnectionName", required=true)
    private String scopeConnectionName;

    public String scopeConnectionName() {
        return this.scopeConnectionName;
    }

    private GetScopeConnectionArgs() {}

    private GetScopeConnectionArgs(GetScopeConnectionArgs $) {
        this.networkManagerName = $.networkManagerName;
        this.resourceGroupName = $.resourceGroupName;
        this.scopeConnectionName = $.scopeConnectionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetScopeConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetScopeConnectionArgs $;

        public Builder() {
            $ = new GetScopeConnectionArgs();
        }

        public Builder(GetScopeConnectionArgs defaults) {
            $ = new GetScopeConnectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder networkManagerName(String networkManagerName) {
            $.networkManagerName = networkManagerName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder scopeConnectionName(String scopeConnectionName) {
            $.scopeConnectionName = scopeConnectionName;
            return this;
        }

        public GetScopeConnectionArgs build() {
            $.networkManagerName = Objects.requireNonNull($.networkManagerName, "expected parameter 'networkManagerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.scopeConnectionName = Objects.requireNonNull($.scopeConnectionName, "expected parameter 'scopeConnectionName' to be non-null");
            return $;
        }
    }

}
