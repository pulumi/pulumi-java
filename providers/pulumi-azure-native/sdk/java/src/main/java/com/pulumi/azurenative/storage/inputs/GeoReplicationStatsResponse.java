// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Statistics related to replication for storage account&#39;s Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
 * 
 */
public final class GeoReplicationStatsResponse extends com.pulumi.resources.InvokeArgs {

    public static final GeoReplicationStatsResponse Empty = new GeoReplicationStatsResponse();

    /**
     * A boolean flag which indicates whether or not account failover is supported for the account.
     * 
     */
    @Import(name="canFailover", required=true)
    private Boolean canFailover;

    /**
     * @return A boolean flag which indicates whether or not account failover is supported for the account.
     * 
     */
    public Boolean canFailover() {
        return this.canFailover;
    }

    /**
     * All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
     * 
     */
    @Import(name="lastSyncTime", required=true)
    private String lastSyncTime;

    /**
     * @return All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
     * 
     */
    public String lastSyncTime() {
        return this.lastSyncTime;
    }

    /**
     * The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
     * 
     */
    public String status() {
        return this.status;
    }

    private GeoReplicationStatsResponse() {}

    private GeoReplicationStatsResponse(GeoReplicationStatsResponse $) {
        this.canFailover = $.canFailover;
        this.lastSyncTime = $.lastSyncTime;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GeoReplicationStatsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GeoReplicationStatsResponse $;

        public Builder() {
            $ = new GeoReplicationStatsResponse();
        }

        public Builder(GeoReplicationStatsResponse defaults) {
            $ = new GeoReplicationStatsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param canFailover A boolean flag which indicates whether or not account failover is supported for the account.
         * 
         * @return builder
         * 
         */
        public Builder canFailover(Boolean canFailover) {
            $.canFailover = canFailover;
            return this;
        }

        /**
         * @param lastSyncTime All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
         * 
         * @return builder
         * 
         */
        public Builder lastSyncTime(String lastSyncTime) {
            $.lastSyncTime = lastSyncTime;
            return this;
        }

        /**
         * @param status The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public GeoReplicationStatsResponse build() {
            $.canFailover = Objects.requireNonNull($.canFailover, "expected parameter 'canFailover' to be non-null");
            $.lastSyncTime = Objects.requireNonNull($.lastSyncTime, "expected parameter 'lastSyncTime' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
