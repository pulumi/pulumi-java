// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInboundNatRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInboundNatRuleArgs Empty = new GetInboundNatRuleArgs();

    /**
     * Expands referenced resources.
     * 
     */
    @Import(name="expand")
    private @Nullable Output<String> expand;

    /**
     * @return Expands referenced resources.
     * 
     */
    public Optional<Output<String>> expand() {
        return Optional.ofNullable(this.expand);
    }

    /**
     * The name of the inbound nat rule.
     * 
     */
    @Import(name="inboundNatRuleName", required=true)
    private Output<String> inboundNatRuleName;

    /**
     * @return The name of the inbound nat rule.
     * 
     */
    public Output<String> inboundNatRuleName() {
        return this.inboundNatRuleName;
    }

    /**
     * The name of the load balancer.
     * 
     */
    @Import(name="loadBalancerName", required=true)
    private Output<String> loadBalancerName;

    /**
     * @return The name of the load balancer.
     * 
     */
    public Output<String> loadBalancerName() {
        return this.loadBalancerName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetInboundNatRuleArgs() {}

    private GetInboundNatRuleArgs(GetInboundNatRuleArgs $) {
        this.expand = $.expand;
        this.inboundNatRuleName = $.inboundNatRuleName;
        this.loadBalancerName = $.loadBalancerName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInboundNatRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInboundNatRuleArgs $;

        public Builder() {
            $ = new GetInboundNatRuleArgs();
        }

        public Builder(GetInboundNatRuleArgs defaults) {
            $ = new GetInboundNatRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expand Expands referenced resources.
         * 
         * @return builder
         * 
         */
        public Builder expand(@Nullable Output<String> expand) {
            $.expand = expand;
            return this;
        }

        /**
         * @param expand Expands referenced resources.
         * 
         * @return builder
         * 
         */
        public Builder expand(String expand) {
            return expand(Output.of(expand));
        }

        /**
         * @param inboundNatRuleName The name of the inbound nat rule.
         * 
         * @return builder
         * 
         */
        public Builder inboundNatRuleName(Output<String> inboundNatRuleName) {
            $.inboundNatRuleName = inboundNatRuleName;
            return this;
        }

        /**
         * @param inboundNatRuleName The name of the inbound nat rule.
         * 
         * @return builder
         * 
         */
        public Builder inboundNatRuleName(String inboundNatRuleName) {
            return inboundNatRuleName(Output.of(inboundNatRuleName));
        }

        /**
         * @param loadBalancerName The name of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(Output<String> loadBalancerName) {
            $.loadBalancerName = loadBalancerName;
            return this;
        }

        /**
         * @param loadBalancerName The name of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(String loadBalancerName) {
            return loadBalancerName(Output.of(loadBalancerName));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetInboundNatRuleArgs build() {
            $.inboundNatRuleName = Objects.requireNonNull($.inboundNatRuleName, "expected parameter 'inboundNatRuleName' to be non-null");
            $.loadBalancerName = Objects.requireNonNull($.loadBalancerName, "expected parameter 'loadBalancerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
