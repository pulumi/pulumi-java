// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A custom alert rule that checks if a value (depends on the custom alert type) is allowed.
 * 
 */
public final class AllowlistCustomAlertRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final AllowlistCustomAlertRuleResponse Empty = new AllowlistCustomAlertRuleResponse();

    /**
     * The values to allow. The format of the values depends on the rule type.
     * 
     */
    @Import(name="allowlistValues", required=true)
    private List<String> allowlistValues;

    public List<String> allowlistValues() {
        return this.allowlistValues;
    }

    /**
     * The description of the custom alert.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    public String description() {
        return this.description;
    }

    /**
     * The display name of the custom alert.
     * 
     */
    @Import(name="displayName", required=true)
    private String displayName;

    public String displayName() {
        return this.displayName;
    }

    /**
     * Status of the custom alert.
     * 
     */
    @Import(name="isEnabled", required=true)
    private Boolean isEnabled;

    public Boolean isEnabled() {
        return this.isEnabled;
    }

    /**
     * The type of the custom alert rule.
     * Expected value is &#39;AllowlistCustomAlertRule&#39;.
     * 
     */
    @Import(name="ruleType", required=true)
    private String ruleType;

    public String ruleType() {
        return this.ruleType;
    }

    /**
     * The value type of the items in the list.
     * 
     */
    @Import(name="valueType", required=true)
    private String valueType;

    public String valueType() {
        return this.valueType;
    }

    private AllowlistCustomAlertRuleResponse() {}

    private AllowlistCustomAlertRuleResponse(AllowlistCustomAlertRuleResponse $) {
        this.allowlistValues = $.allowlistValues;
        this.description = $.description;
        this.displayName = $.displayName;
        this.isEnabled = $.isEnabled;
        this.ruleType = $.ruleType;
        this.valueType = $.valueType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AllowlistCustomAlertRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AllowlistCustomAlertRuleResponse $;

        public Builder() {
            $ = new AllowlistCustomAlertRuleResponse();
        }

        public Builder(AllowlistCustomAlertRuleResponse defaults) {
            $ = new AllowlistCustomAlertRuleResponse(Objects.requireNonNull(defaults));
        }

        public Builder allowlistValues(List<String> allowlistValues) {
            $.allowlistValues = allowlistValues;
            return this;
        }

        public Builder allowlistValues(String... allowlistValues) {
            return allowlistValues(List.of(allowlistValues));
        }

        public Builder description(String description) {
            $.description = description;
            return this;
        }

        public Builder displayName(String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder isEnabled(Boolean isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        public Builder ruleType(String ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        public Builder valueType(String valueType) {
            $.valueType = valueType;
            return this;
        }

        public AllowlistCustomAlertRuleResponse build() {
            $.allowlistValues = Objects.requireNonNull($.allowlistValues, "expected parameter 'allowlistValues' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            $.ruleType = Codegen.stringProp("ruleType").arg($.ruleType).require();
            $.valueType = Objects.requireNonNull($.valueType, "expected parameter 'valueType' to be non-null");
            return $;
        }
    }

}
