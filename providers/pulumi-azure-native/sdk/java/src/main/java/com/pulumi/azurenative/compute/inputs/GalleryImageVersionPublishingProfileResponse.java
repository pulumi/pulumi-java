// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.TargetRegionResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The publishing profile of a gallery image Version.
 * 
 */
public final class GalleryImageVersionPublishingProfileResponse extends com.pulumi.resources.InvokeArgs {

    public static final GalleryImageVersionPublishingProfileResponse Empty = new GalleryImageVersionPublishingProfileResponse();

    /**
     * The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
     * 
     */
    @Import(name="endOfLifeDate")
    private @Nullable String endOfLifeDate;

    public Optional<String> endOfLifeDate() {
        return Optional.ofNullable(this.endOfLifeDate);
    }

    /**
     * If set to true, Virtual Machines deployed from the latest version of the Image Definition won&#39;t use this Image Version.
     * 
     */
    @Import(name="excludeFromLatest")
    private @Nullable Boolean excludeFromLatest;

    public Optional<Boolean> excludeFromLatest() {
        return Optional.ofNullable(this.excludeFromLatest);
    }

    /**
     * The timestamp for when the gallery image version is published.
     * 
     */
    @Import(name="publishedDate", required=true)
    private String publishedDate;

    public String publishedDate() {
        return this.publishedDate;
    }

    /**
     * The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
     * 
     */
    @Import(name="replicaCount")
    private @Nullable Integer replicaCount;

    public Optional<Integer> replicaCount() {
        return Optional.ofNullable(this.replicaCount);
    }

    /**
     * Specifies the storage account type to be used to store the image. This property is not updatable.
     * 
     */
    @Import(name="storageAccountType")
    private @Nullable String storageAccountType;

    public Optional<String> storageAccountType() {
        return Optional.ofNullable(this.storageAccountType);
    }

    /**
     * The target regions where the Image Version is going to be replicated to. This property is updatable.
     * 
     */
    @Import(name="targetRegions")
    private @Nullable List<TargetRegionResponse> targetRegions;

    public Optional<List<TargetRegionResponse>> targetRegions() {
        return Optional.ofNullable(this.targetRegions);
    }

    private GalleryImageVersionPublishingProfileResponse() {}

    private GalleryImageVersionPublishingProfileResponse(GalleryImageVersionPublishingProfileResponse $) {
        this.endOfLifeDate = $.endOfLifeDate;
        this.excludeFromLatest = $.excludeFromLatest;
        this.publishedDate = $.publishedDate;
        this.replicaCount = $.replicaCount;
        this.storageAccountType = $.storageAccountType;
        this.targetRegions = $.targetRegions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GalleryImageVersionPublishingProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GalleryImageVersionPublishingProfileResponse $;

        public Builder() {
            $ = new GalleryImageVersionPublishingProfileResponse();
        }

        public Builder(GalleryImageVersionPublishingProfileResponse defaults) {
            $ = new GalleryImageVersionPublishingProfileResponse(Objects.requireNonNull(defaults));
        }

        public Builder endOfLifeDate(@Nullable String endOfLifeDate) {
            $.endOfLifeDate = endOfLifeDate;
            return this;
        }

        public Builder excludeFromLatest(@Nullable Boolean excludeFromLatest) {
            $.excludeFromLatest = excludeFromLatest;
            return this;
        }

        public Builder publishedDate(String publishedDate) {
            $.publishedDate = publishedDate;
            return this;
        }

        public Builder replicaCount(@Nullable Integer replicaCount) {
            $.replicaCount = replicaCount;
            return this;
        }

        public Builder storageAccountType(@Nullable String storageAccountType) {
            $.storageAccountType = storageAccountType;
            return this;
        }

        public Builder targetRegions(@Nullable List<TargetRegionResponse> targetRegions) {
            $.targetRegions = targetRegions;
            return this;
        }

        public Builder targetRegions(TargetRegionResponse... targetRegions) {
            return targetRegions(List.of(targetRegions));
        }

        public GalleryImageVersionPublishingProfileResponse build() {
            $.publishedDate = Objects.requireNonNull($.publishedDate, "expected parameter 'publishedDate' to be non-null");
            return $;
        }
    }

}
