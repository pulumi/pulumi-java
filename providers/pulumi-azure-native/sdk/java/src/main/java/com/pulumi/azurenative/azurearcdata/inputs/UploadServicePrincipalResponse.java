// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurearcdata.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Service principal for uploading billing, metrics and logs.
 * 
 */
public final class UploadServicePrincipalResponse extends com.pulumi.resources.InvokeArgs {

    public static final UploadServicePrincipalResponse Empty = new UploadServicePrincipalResponse();

    /**
     * Authority for the service principal. Example: https://login.microsoftonline.com/
     * 
     */
    @Import(name="authority")
    private @Nullable String authority;

    /**
     * @return Authority for the service principal. Example: https://login.microsoftonline.com/
     * 
     */
    public Optional<String> authority() {
        return Optional.ofNullable(this.authority);
    }

    /**
     * Client ID of the service principal for uploading data.
     * 
     */
    @Import(name="clientId")
    private @Nullable String clientId;

    /**
     * @return Client ID of the service principal for uploading data.
     * 
     */
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Tenant ID of the service principal.
     * 
     */
    @Import(name="tenantId")
    private @Nullable String tenantId;

    /**
     * @return Tenant ID of the service principal.
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private UploadServicePrincipalResponse() {}

    private UploadServicePrincipalResponse(UploadServicePrincipalResponse $) {
        this.authority = $.authority;
        this.clientId = $.clientId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UploadServicePrincipalResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UploadServicePrincipalResponse $;

        public Builder() {
            $ = new UploadServicePrincipalResponse();
        }

        public Builder(UploadServicePrincipalResponse defaults) {
            $ = new UploadServicePrincipalResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param authority Authority for the service principal. Example: https://login.microsoftonline.com/
         * 
         * @return builder
         * 
         */
        public Builder authority(@Nullable String authority) {
            $.authority = authority;
            return this;
        }

        /**
         * @param clientId Client ID of the service principal for uploading data.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable String clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param tenantId Tenant ID of the service principal.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public UploadServicePrincipalResponse build() {
            return $;
        }
    }

}
