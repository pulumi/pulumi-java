// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Network details of the environment
 * 
 */
public final class NetworkInterfaceResponse extends com.pulumi.resources.InvokeArgs {

    public static final NetworkInterfaceResponse Empty = new NetworkInterfaceResponse();

    /**
     * PrivateIp address of the Compute VM
     * 
     */
    @Import(name="privateIpAddress", required=true)
    private String privateIpAddress;

    public String privateIpAddress() {
        return this.privateIpAddress;
    }

    /**
     * Connection information for Windows
     * 
     */
    @Import(name="rdpAuthority", required=true)
    private String rdpAuthority;

    public String rdpAuthority() {
        return this.rdpAuthority;
    }

    /**
     * Connection information for Linux
     * 
     */
    @Import(name="sshAuthority", required=true)
    private String sshAuthority;

    public String sshAuthority() {
        return this.sshAuthority;
    }

    /**
     * Username of the VM
     * 
     */
    @Import(name="username", required=true)
    private String username;

    public String username() {
        return this.username;
    }

    private NetworkInterfaceResponse() {}

    private NetworkInterfaceResponse(NetworkInterfaceResponse $) {
        this.privateIpAddress = $.privateIpAddress;
        this.rdpAuthority = $.rdpAuthority;
        this.sshAuthority = $.sshAuthority;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkInterfaceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkInterfaceResponse $;

        public Builder() {
            $ = new NetworkInterfaceResponse();
        }

        public Builder(NetworkInterfaceResponse defaults) {
            $ = new NetworkInterfaceResponse(Objects.requireNonNull(defaults));
        }

        public Builder privateIpAddress(String privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        public Builder rdpAuthority(String rdpAuthority) {
            $.rdpAuthority = rdpAuthority;
            return this;
        }

        public Builder sshAuthority(String sshAuthority) {
            $.sshAuthority = sshAuthority;
            return this;
        }

        public Builder username(String username) {
            $.username = username;
            return this;
        }

        public NetworkInterfaceResponse build() {
            $.privateIpAddress = Objects.requireNonNull($.privateIpAddress, "expected parameter 'privateIpAddress' to be non-null");
            $.rdpAuthority = Objects.requireNonNull($.rdpAuthority, "expected parameter 'rdpAuthority' to be non-null");
            $.sshAuthority = Objects.requireNonNull($.sshAuthority, "expected parameter 'sshAuthority' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
