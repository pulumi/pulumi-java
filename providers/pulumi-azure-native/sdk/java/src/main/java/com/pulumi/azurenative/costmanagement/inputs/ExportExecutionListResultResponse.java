// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.azurenative.costmanagement.inputs.ExportExecutionResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


/**
 * Result of listing the execution history of an export.
 * 
 */
public final class ExportExecutionListResultResponse extends com.pulumi.resources.InvokeArgs {

    public static final ExportExecutionListResultResponse Empty = new ExportExecutionListResultResponse();

    /**
     * A list of export executions.
     * 
     */
    @Import(name="value", required=true)
    private List<ExportExecutionResponse> value;

    /**
     * @return A list of export executions.
     * 
     */
    public List<ExportExecutionResponse> value() {
        return this.value;
    }

    private ExportExecutionListResultResponse() {}

    private ExportExecutionListResultResponse(ExportExecutionListResultResponse $) {
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExportExecutionListResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExportExecutionListResultResponse $;

        public Builder() {
            $ = new ExportExecutionListResultResponse();
        }

        public Builder(ExportExecutionListResultResponse defaults) {
            $ = new ExportExecutionListResultResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param value A list of export executions.
         * 
         * @return builder
         * 
         */
        public Builder value(List<ExportExecutionResponse> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value A list of export executions.
         * 
         * @return builder
         * 
         */
        public Builder value(ExportExecutionResponse... value) {
            return value(List.of(value));
        }

        public ExportExecutionListResultResponse build() {
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
