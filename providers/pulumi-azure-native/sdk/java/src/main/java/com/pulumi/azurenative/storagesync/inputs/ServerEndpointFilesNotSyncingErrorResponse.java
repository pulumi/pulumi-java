// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagesync.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


/**
 * Files not syncing error object
 * 
 */
public final class ServerEndpointFilesNotSyncingErrorResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServerEndpointFilesNotSyncingErrorResponse Empty = new ServerEndpointFilesNotSyncingErrorResponse();

    /**
     * Error code (HResult)
     * 
     */
    @Import(name="errorCode", required=true)
    private Integer errorCode;

    /**
     * @return Error code (HResult)
     * 
     */
    public Integer errorCode() {
        return this.errorCode;
    }

    /**
     * Count of persistent files not syncing with the specified error code
     * 
     */
    @Import(name="persistentCount", required=true)
    private Double persistentCount;

    /**
     * @return Count of persistent files not syncing with the specified error code
     * 
     */
    public Double persistentCount() {
        return this.persistentCount;
    }

    /**
     * Count of transient files not syncing with the specified error code
     * 
     */
    @Import(name="transientCount", required=true)
    private Double transientCount;

    /**
     * @return Count of transient files not syncing with the specified error code
     * 
     */
    public Double transientCount() {
        return this.transientCount;
    }

    private ServerEndpointFilesNotSyncingErrorResponse() {}

    private ServerEndpointFilesNotSyncingErrorResponse(ServerEndpointFilesNotSyncingErrorResponse $) {
        this.errorCode = $.errorCode;
        this.persistentCount = $.persistentCount;
        this.transientCount = $.transientCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerEndpointFilesNotSyncingErrorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerEndpointFilesNotSyncingErrorResponse $;

        public Builder() {
            $ = new ServerEndpointFilesNotSyncingErrorResponse();
        }

        public Builder(ServerEndpointFilesNotSyncingErrorResponse defaults) {
            $ = new ServerEndpointFilesNotSyncingErrorResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param errorCode Error code (HResult)
         * 
         * @return builder
         * 
         */
        public Builder errorCode(Integer errorCode) {
            $.errorCode = errorCode;
            return this;
        }

        /**
         * @param persistentCount Count of persistent files not syncing with the specified error code
         * 
         * @return builder
         * 
         */
        public Builder persistentCount(Double persistentCount) {
            $.persistentCount = persistentCount;
            return this;
        }

        /**
         * @param transientCount Count of transient files not syncing with the specified error code
         * 
         * @return builder
         * 
         */
        public Builder transientCount(Double transientCount) {
            $.transientCount = transientCount;
            return this;
        }

        public ServerEndpointFilesNotSyncingErrorResponse build() {
            $.errorCode = Objects.requireNonNull($.errorCode, "expected parameter 'errorCode' to be non-null");
            $.persistentCount = Objects.requireNonNull($.persistentCount, "expected parameter 'persistentCount' to be non-null");
            $.transientCount = Objects.requireNonNull($.transientCount, "expected parameter 'transientCount' to be non-null");
            return $;
        }
    }

}
