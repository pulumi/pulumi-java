// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a repository.
 * 
 */
public final class RepoResponse extends com.pulumi.resources.InvokeArgs {

    public static final RepoResponse Empty = new RepoResponse();

    /**
     * Array of branches.
     * 
     */
    @Import(name="branches")
    private @Nullable List<String> branches;

    /**
     * @return Array of branches.
     * 
     */
    public Optional<List<String>> branches() {
        return Optional.ofNullable(this.branches);
    }

    /**
     * The name of the repository.
     * 
     */
    @Import(name="fullName")
    private @Nullable String fullName;

    /**
     * @return The name of the repository.
     * 
     */
    public Optional<String> fullName() {
        return Optional.ofNullable(this.fullName);
    }

    /**
     * The url to access the repository.
     * 
     */
    @Import(name="url")
    private @Nullable String url;

    /**
     * @return The url to access the repository.
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    private RepoResponse() {}

    private RepoResponse(RepoResponse $) {
        this.branches = $.branches;
        this.fullName = $.fullName;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepoResponse $;

        public Builder() {
            $ = new RepoResponse();
        }

        public Builder(RepoResponse defaults) {
            $ = new RepoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param branches Array of branches.
         * 
         * @return builder
         * 
         */
        public Builder branches(@Nullable List<String> branches) {
            $.branches = branches;
            return this;
        }

        /**
         * @param branches Array of branches.
         * 
         * @return builder
         * 
         */
        public Builder branches(String... branches) {
            return branches(List.of(branches));
        }

        /**
         * @param fullName The name of the repository.
         * 
         * @return builder
         * 
         */
        public Builder fullName(@Nullable String fullName) {
            $.fullName = fullName;
            return this;
        }

        /**
         * @param url The url to access the repository.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable String url) {
            $.url = url;
            return this;
        }

        public RepoResponse build() {
            return $;
        }
    }

}
