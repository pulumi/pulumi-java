// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LongTermRetentionPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final LongTermRetentionPolicyArgs Empty = new LongTermRetentionPolicyArgs();

    /**
     * The name of the database.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    /**
     * @return The name of the database.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * The monthly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    @Import(name="monthlyRetention")
    private @Nullable Output<String> monthlyRetention;

    /**
     * @return The monthly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    public Optional<Output<String>> monthlyRetention() {
        return Optional.ofNullable(this.monthlyRetention);
    }

    /**
     * The policy name. Should always be Default.
     * 
     */
    @Import(name="policyName")
    private @Nullable Output<String> policyName;

    /**
     * @return The policy name. Should always be Default.
     * 
     */
    public Optional<Output<String>> policyName() {
        return Optional.ofNullable(this.policyName);
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the server.
     * 
     */
    @Import(name="serverName", required=true)
    private Output<String> serverName;

    /**
     * @return The name of the server.
     * 
     */
    public Output<String> serverName() {
        return this.serverName;
    }

    /**
     * The week of year to take the yearly backup in an ISO 8601 format.
     * 
     */
    @Import(name="weekOfYear")
    private @Nullable Output<Integer> weekOfYear;

    /**
     * @return The week of year to take the yearly backup in an ISO 8601 format.
     * 
     */
    public Optional<Output<Integer>> weekOfYear() {
        return Optional.ofNullable(this.weekOfYear);
    }

    /**
     * The weekly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    @Import(name="weeklyRetention")
    private @Nullable Output<String> weeklyRetention;

    /**
     * @return The weekly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    public Optional<Output<String>> weeklyRetention() {
        return Optional.ofNullable(this.weeklyRetention);
    }

    /**
     * The yearly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    @Import(name="yearlyRetention")
    private @Nullable Output<String> yearlyRetention;

    /**
     * @return The yearly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    public Optional<Output<String>> yearlyRetention() {
        return Optional.ofNullable(this.yearlyRetention);
    }

    private LongTermRetentionPolicyArgs() {}

    private LongTermRetentionPolicyArgs(LongTermRetentionPolicyArgs $) {
        this.databaseName = $.databaseName;
        this.monthlyRetention = $.monthlyRetention;
        this.policyName = $.policyName;
        this.resourceGroupName = $.resourceGroupName;
        this.serverName = $.serverName;
        this.weekOfYear = $.weekOfYear;
        this.weeklyRetention = $.weeklyRetention;
        this.yearlyRetention = $.yearlyRetention;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LongTermRetentionPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LongTermRetentionPolicyArgs $;

        public Builder() {
            $ = new LongTermRetentionPolicyArgs();
        }

        public Builder(LongTermRetentionPolicyArgs defaults) {
            $ = new LongTermRetentionPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName The name of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName The name of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param monthlyRetention The monthly retention policy for an LTR backup in an ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder monthlyRetention(@Nullable Output<String> monthlyRetention) {
            $.monthlyRetention = monthlyRetention;
            return this;
        }

        /**
         * @param monthlyRetention The monthly retention policy for an LTR backup in an ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder monthlyRetention(String monthlyRetention) {
            return monthlyRetention(Output.of(monthlyRetention));
        }

        /**
         * @param policyName The policy name. Should always be Default.
         * 
         * @return builder
         * 
         */
        public Builder policyName(@Nullable Output<String> policyName) {
            $.policyName = policyName;
            return this;
        }

        /**
         * @param policyName The policy name. Should always be Default.
         * 
         * @return builder
         * 
         */
        public Builder policyName(String policyName) {
            return policyName(Output.of(policyName));
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serverName The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder serverName(Output<String> serverName) {
            $.serverName = serverName;
            return this;
        }

        /**
         * @param serverName The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder serverName(String serverName) {
            return serverName(Output.of(serverName));
        }

        /**
         * @param weekOfYear The week of year to take the yearly backup in an ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder weekOfYear(@Nullable Output<Integer> weekOfYear) {
            $.weekOfYear = weekOfYear;
            return this;
        }

        /**
         * @param weekOfYear The week of year to take the yearly backup in an ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder weekOfYear(Integer weekOfYear) {
            return weekOfYear(Output.of(weekOfYear));
        }

        /**
         * @param weeklyRetention The weekly retention policy for an LTR backup in an ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder weeklyRetention(@Nullable Output<String> weeklyRetention) {
            $.weeklyRetention = weeklyRetention;
            return this;
        }

        /**
         * @param weeklyRetention The weekly retention policy for an LTR backup in an ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder weeklyRetention(String weeklyRetention) {
            return weeklyRetention(Output.of(weeklyRetention));
        }

        /**
         * @param yearlyRetention The yearly retention policy for an LTR backup in an ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder yearlyRetention(@Nullable Output<String> yearlyRetention) {
            $.yearlyRetention = yearlyRetention;
            return this;
        }

        /**
         * @param yearlyRetention The yearly retention policy for an LTR backup in an ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder yearlyRetention(String yearlyRetention) {
            return yearlyRetention(Output.of(yearlyRetention));
        }

        public LongTermRetentionPolicyArgs build() {
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serverName = Objects.requireNonNull($.serverName, "expected parameter 'serverName' to be non-null");
            return $;
        }
    }

}
