// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices;

import com.pulumi.azurenative.recoveryservices.inputs.EnableProtectionInputPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ReplicationProtectedItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationProtectedItemArgs Empty = new ReplicationProtectedItemArgs();

    /**
     * Name of the fabric.
     * 
     */
    @Import(name="fabricName", required=true)
      private final Output<String> fabricName;

    public Output<String> fabricName() {
        return this.fabricName;
    }

    /**
     * Enable protection input properties.
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<EnableProtectionInputPropertiesArgs> properties;

    public Output<EnableProtectionInputPropertiesArgs> properties() {
        return this.properties == null ? Codegen.empty() : this.properties;
    }

    /**
     * Protection container name.
     * 
     */
    @Import(name="protectionContainerName", required=true)
      private final Output<String> protectionContainerName;

    public Output<String> protectionContainerName() {
        return this.protectionContainerName;
    }

    /**
     * A name for the replication protected item.
     * 
     */
    @Import(name="replicatedProtectedItemName")
      private final @Nullable Output<String> replicatedProtectedItemName;

    public Output<String> replicatedProtectedItemName() {
        return this.replicatedProtectedItemName == null ? Codegen.empty() : this.replicatedProtectedItemName;
    }

    /**
     * The name of the resource group where the recovery services vault is present.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the recovery services vault.
     * 
     */
    @Import(name="resourceName", required=true)
      private final Output<String> resourceName;

    public Output<String> resourceName() {
        return this.resourceName;
    }

    public ReplicationProtectedItemArgs(
        Output<String> fabricName,
        @Nullable Output<EnableProtectionInputPropertiesArgs> properties,
        Output<String> protectionContainerName,
        @Nullable Output<String> replicatedProtectedItemName,
        Output<String> resourceGroupName,
        Output<String> resourceName) {
        this.fabricName = Objects.requireNonNull(fabricName, "expected parameter 'fabricName' to be non-null");
        this.properties = properties;
        this.protectionContainerName = Objects.requireNonNull(protectionContainerName, "expected parameter 'protectionContainerName' to be non-null");
        this.replicatedProtectedItemName = replicatedProtectedItemName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = Objects.requireNonNull(resourceName, "expected parameter 'resourceName' to be non-null");
    }

    private ReplicationProtectedItemArgs() {
        this.fabricName = Codegen.empty();
        this.properties = Codegen.empty();
        this.protectionContainerName = Codegen.empty();
        this.replicatedProtectedItemName = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.resourceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicationProtectedItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> fabricName;
        private @Nullable Output<EnableProtectionInputPropertiesArgs> properties;
        private Output<String> protectionContainerName;
        private @Nullable Output<String> replicatedProtectedItemName;
        private Output<String> resourceGroupName;
        private Output<String> resourceName;

        public Builder() {
    	      // Empty
        }

        public Builder(ReplicationProtectedItemArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fabricName = defaults.fabricName;
    	      this.properties = defaults.properties;
    	      this.protectionContainerName = defaults.protectionContainerName;
    	      this.replicatedProtectedItemName = defaults.replicatedProtectedItemName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
        }

        public Builder fabricName(Output<String> fabricName) {
            this.fabricName = Objects.requireNonNull(fabricName);
            return this;
        }
        public Builder fabricName(String fabricName) {
            this.fabricName = Output.of(Objects.requireNonNull(fabricName));
            return this;
        }
        public Builder properties(@Nullable Output<EnableProtectionInputPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }
        public Builder properties(@Nullable EnableProtectionInputPropertiesArgs properties) {
            this.properties = Codegen.ofNullable(properties);
            return this;
        }
        public Builder protectionContainerName(Output<String> protectionContainerName) {
            this.protectionContainerName = Objects.requireNonNull(protectionContainerName);
            return this;
        }
        public Builder protectionContainerName(String protectionContainerName) {
            this.protectionContainerName = Output.of(Objects.requireNonNull(protectionContainerName));
            return this;
        }
        public Builder replicatedProtectedItemName(@Nullable Output<String> replicatedProtectedItemName) {
            this.replicatedProtectedItemName = replicatedProtectedItemName;
            return this;
        }
        public Builder replicatedProtectedItemName(@Nullable String replicatedProtectedItemName) {
            this.replicatedProtectedItemName = Codegen.ofNullable(replicatedProtectedItemName);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder resourceName(Output<String> resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        public Builder resourceName(String resourceName) {
            this.resourceName = Output.of(Objects.requireNonNull(resourceName));
            return this;
        }        public ReplicationProtectedItemArgs build() {
            return new ReplicationProtectedItemArgs(fabricName, properties, protectionContainerName, replicatedProtectedItemName, resourceGroupName, resourceName);
        }
    }
}
