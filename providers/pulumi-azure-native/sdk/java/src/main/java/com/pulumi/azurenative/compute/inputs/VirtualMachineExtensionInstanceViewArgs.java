// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.InstanceViewStatusArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The instance view of a virtual machine extension.
 * 
 */
public final class VirtualMachineExtensionInstanceViewArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineExtensionInstanceViewArgs Empty = new VirtualMachineExtensionInstanceViewArgs();

    /**
     * The virtual machine extension name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The virtual machine extension name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The resource status information.
     * 
     */
    @Import(name="statuses")
    private @Nullable Output<List<InstanceViewStatusArgs>> statuses;

    /**
     * @return The resource status information.
     * 
     */
    public Optional<Output<List<InstanceViewStatusArgs>>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    /**
     * The resource status information.
     * 
     */
    @Import(name="substatuses")
    private @Nullable Output<List<InstanceViewStatusArgs>> substatuses;

    /**
     * @return The resource status information.
     * 
     */
    public Optional<Output<List<InstanceViewStatusArgs>>> substatuses() {
        return Optional.ofNullable(this.substatuses);
    }

    /**
     * Specifies the type of the extension; an example is &#34;CustomScriptExtension&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Specifies the type of the extension; an example is &#34;CustomScriptExtension&#34;.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Specifies the version of the script handler.
     * 
     */
    @Import(name="typeHandlerVersion")
    private @Nullable Output<String> typeHandlerVersion;

    /**
     * @return Specifies the version of the script handler.
     * 
     */
    public Optional<Output<String>> typeHandlerVersion() {
        return Optional.ofNullable(this.typeHandlerVersion);
    }

    private VirtualMachineExtensionInstanceViewArgs() {}

    private VirtualMachineExtensionInstanceViewArgs(VirtualMachineExtensionInstanceViewArgs $) {
        this.name = $.name;
        this.statuses = $.statuses;
        this.substatuses = $.substatuses;
        this.type = $.type;
        this.typeHandlerVersion = $.typeHandlerVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineExtensionInstanceViewArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineExtensionInstanceViewArgs $;

        public Builder() {
            $ = new VirtualMachineExtensionInstanceViewArgs();
        }

        public Builder(VirtualMachineExtensionInstanceViewArgs defaults) {
            $ = new VirtualMachineExtensionInstanceViewArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The virtual machine extension name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The virtual machine extension name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param statuses The resource status information.
         * 
         * @return builder
         * 
         */
        public Builder statuses(@Nullable Output<List<InstanceViewStatusArgs>> statuses) {
            $.statuses = statuses;
            return this;
        }

        /**
         * @param statuses The resource status information.
         * 
         * @return builder
         * 
         */
        public Builder statuses(List<InstanceViewStatusArgs> statuses) {
            return statuses(Output.of(statuses));
        }

        /**
         * @param statuses The resource status information.
         * 
         * @return builder
         * 
         */
        public Builder statuses(InstanceViewStatusArgs... statuses) {
            return statuses(List.of(statuses));
        }

        /**
         * @param substatuses The resource status information.
         * 
         * @return builder
         * 
         */
        public Builder substatuses(@Nullable Output<List<InstanceViewStatusArgs>> substatuses) {
            $.substatuses = substatuses;
            return this;
        }

        /**
         * @param substatuses The resource status information.
         * 
         * @return builder
         * 
         */
        public Builder substatuses(List<InstanceViewStatusArgs> substatuses) {
            return substatuses(Output.of(substatuses));
        }

        /**
         * @param substatuses The resource status information.
         * 
         * @return builder
         * 
         */
        public Builder substatuses(InstanceViewStatusArgs... substatuses) {
            return substatuses(List.of(substatuses));
        }

        /**
         * @param type Specifies the type of the extension; an example is &#34;CustomScriptExtension&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Specifies the type of the extension; an example is &#34;CustomScriptExtension&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param typeHandlerVersion Specifies the version of the script handler.
         * 
         * @return builder
         * 
         */
        public Builder typeHandlerVersion(@Nullable Output<String> typeHandlerVersion) {
            $.typeHandlerVersion = typeHandlerVersion;
            return this;
        }

        /**
         * @param typeHandlerVersion Specifies the version of the script handler.
         * 
         * @return builder
         * 
         */
        public Builder typeHandlerVersion(String typeHandlerVersion) {
            return typeHandlerVersion(Output.of(typeHandlerVersion));
        }

        public VirtualMachineExtensionInstanceViewArgs build() {
            return $;
        }
    }

}
