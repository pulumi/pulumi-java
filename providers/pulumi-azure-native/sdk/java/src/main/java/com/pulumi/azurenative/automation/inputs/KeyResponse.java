// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Automation key which is used to register a DSC Node
 * 
 */
public final class KeyResponse extends com.pulumi.resources.InvokeArgs {

    public static final KeyResponse Empty = new KeyResponse();

    /**
     * Automation key name.
     * 
     */
    @Import(name="keyName", required=true)
    private String keyName;

    public String keyName() {
        return this.keyName;
    }

    /**
     * Automation key permissions.
     * 
     */
    @Import(name="permissions", required=true)
    private String permissions;

    public String permissions() {
        return this.permissions;
    }

    /**
     * Value of the Automation Key used for registration.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    public String value() {
        return this.value;
    }

    private KeyResponse() {}

    private KeyResponse(KeyResponse $) {
        this.keyName = $.keyName;
        this.permissions = $.permissions;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyResponse $;

        public Builder() {
            $ = new KeyResponse();
        }

        public Builder(KeyResponse defaults) {
            $ = new KeyResponse(Objects.requireNonNull(defaults));
        }

        public Builder keyName(String keyName) {
            $.keyName = keyName;
            return this;
        }

        public Builder permissions(String permissions) {
            $.permissions = permissions;
            return this;
        }

        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public KeyResponse build() {
            $.keyName = Objects.requireNonNull($.keyName, "expected parameter 'keyName' to be non-null");
            $.permissions = Objects.requireNonNull($.permissions, "expected parameter 'permissions' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
