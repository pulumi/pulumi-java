// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.enums.IPVersion;
import com.pulumi.azurenative.network.enums.IpAllocationType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IpAllocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final IpAllocationArgs Empty = new IpAllocationArgs();

    /**
     * IpAllocation tags.
     * 
     */
    @Import(name="allocationTags")
      private final @Nullable Output<Map<String,String>> allocationTags;

    public Output<Map<String,String>> allocationTags() {
        return this.allocationTags == null ? Codegen.empty() : this.allocationTags;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * The name of the IpAllocation.
     * 
     */
    @Import(name="ipAllocationName")
      private final @Nullable Output<String> ipAllocationName;

    public Output<String> ipAllocationName() {
        return this.ipAllocationName == null ? Codegen.empty() : this.ipAllocationName;
    }

    /**
     * The IPAM allocation ID.
     * 
     */
    @Import(name="ipamAllocationId")
      private final @Nullable Output<String> ipamAllocationId;

    public Output<String> ipamAllocationId() {
        return this.ipamAllocationId == null ? Codegen.empty() : this.ipamAllocationId;
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The address prefix for the IpAllocation.
     * 
     */
    @Import(name="prefix")
      private final @Nullable Output<String> prefix;

    public Output<String> prefix() {
        return this.prefix == null ? Codegen.empty() : this.prefix;
    }

    /**
     * The address prefix length for the IpAllocation.
     * 
     */
    @Import(name="prefixLength")
      private final @Nullable Output<Integer> prefixLength;

    public Output<Integer> prefixLength() {
        return this.prefixLength == null ? Codegen.empty() : this.prefixLength;
    }

    /**
     * The address prefix Type for the IpAllocation.
     * 
     */
    @Import(name="prefixType")
      private final @Nullable Output<Either<String,IPVersion>> prefixType;

    public Output<Either<String,IPVersion>> prefixType() {
        return this.prefixType == null ? Codegen.empty() : this.prefixType;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The type for the IpAllocation.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<Either<String,IpAllocationType>> type;

    public Output<Either<String,IpAllocationType>> type() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    public IpAllocationArgs(
        @Nullable Output<Map<String,String>> allocationTags,
        @Nullable Output<String> id,
        @Nullable Output<String> ipAllocationName,
        @Nullable Output<String> ipamAllocationId,
        @Nullable Output<String> location,
        @Nullable Output<String> prefix,
        @Nullable Output<Integer> prefixLength,
        @Nullable Output<Either<String,IPVersion>> prefixType,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Either<String,IpAllocationType>> type) {
        this.allocationTags = allocationTags;
        this.id = id;
        this.ipAllocationName = ipAllocationName;
        this.ipamAllocationId = ipamAllocationId;
        this.location = location;
        this.prefix = prefix;
        this.prefixLength = prefixLength == null ? Codegen.ofNullable(0) : prefixLength;
        this.prefixType = prefixType;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.type = type;
    }

    private IpAllocationArgs() {
        this.allocationTags = Codegen.empty();
        this.id = Codegen.empty();
        this.ipAllocationName = Codegen.empty();
        this.ipamAllocationId = Codegen.empty();
        this.location = Codegen.empty();
        this.prefix = Codegen.empty();
        this.prefixLength = Codegen.empty();
        this.prefixType = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IpAllocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,String>> allocationTags;
        private @Nullable Output<String> id;
        private @Nullable Output<String> ipAllocationName;
        private @Nullable Output<String> ipamAllocationId;
        private @Nullable Output<String> location;
        private @Nullable Output<String> prefix;
        private @Nullable Output<Integer> prefixLength;
        private @Nullable Output<Either<String,IPVersion>> prefixType;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Either<String,IpAllocationType>> type;

        public Builder() {
    	      // Empty
        }

        public Builder(IpAllocationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationTags = defaults.allocationTags;
    	      this.id = defaults.id;
    	      this.ipAllocationName = defaults.ipAllocationName;
    	      this.ipamAllocationId = defaults.ipamAllocationId;
    	      this.location = defaults.location;
    	      this.prefix = defaults.prefix;
    	      this.prefixLength = defaults.prefixLength;
    	      this.prefixType = defaults.prefixType;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder allocationTags(@Nullable Output<Map<String,String>> allocationTags) {
            this.allocationTags = allocationTags;
            return this;
        }
        public Builder allocationTags(@Nullable Map<String,String> allocationTags) {
            this.allocationTags = Codegen.ofNullable(allocationTags);
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder ipAllocationName(@Nullable Output<String> ipAllocationName) {
            this.ipAllocationName = ipAllocationName;
            return this;
        }
        public Builder ipAllocationName(@Nullable String ipAllocationName) {
            this.ipAllocationName = Codegen.ofNullable(ipAllocationName);
            return this;
        }
        public Builder ipamAllocationId(@Nullable Output<String> ipamAllocationId) {
            this.ipamAllocationId = ipamAllocationId;
            return this;
        }
        public Builder ipamAllocationId(@Nullable String ipamAllocationId) {
            this.ipamAllocationId = Codegen.ofNullable(ipamAllocationId);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder prefix(@Nullable Output<String> prefix) {
            this.prefix = prefix;
            return this;
        }
        public Builder prefix(@Nullable String prefix) {
            this.prefix = Codegen.ofNullable(prefix);
            return this;
        }
        public Builder prefixLength(@Nullable Output<Integer> prefixLength) {
            this.prefixLength = prefixLength;
            return this;
        }
        public Builder prefixLength(@Nullable Integer prefixLength) {
            this.prefixLength = Codegen.ofNullable(prefixLength);
            return this;
        }
        public Builder prefixType(@Nullable Output<Either<String,IPVersion>> prefixType) {
            this.prefixType = prefixType;
            return this;
        }
        public Builder prefixType(@Nullable Either<String,IPVersion> prefixType) {
            this.prefixType = Codegen.ofNullable(prefixType);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder type(@Nullable Output<Either<String,IpAllocationType>> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable Either<String,IpAllocationType> type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }        public IpAllocationArgs build() {
            return new IpAllocationArgs(allocationTags, id, ipAllocationName, ipamAllocationId, location, prefix, prefixLength, prefixType, resourceGroupName, tags, type);
        }
    }
}
