// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.solutions;

import com.pulumi.azurenative.solutions.inputs.JitAuthorizationPoliciesArgs;
import com.pulumi.azurenative.solutions.inputs.JitSchedulingPolicyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JitRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final JitRequestArgs Empty = new JitRequestArgs();

    /**
     * The parent application id.
     * 
     */
    @Import(name="applicationResourceId", required=true)
    private Output<String> applicationResourceId;

    public Output<String> applicationResourceId() {
        return this.applicationResourceId;
    }

    /**
     * The JIT authorization policies.
     * 
     */
    @Import(name="jitAuthorizationPolicies", required=true)
    private Output<List<JitAuthorizationPoliciesArgs>> jitAuthorizationPolicies;

    public Output<List<JitAuthorizationPoliciesArgs>> jitAuthorizationPolicies() {
        return this.jitAuthorizationPolicies;
    }

    /**
     * The name of the JIT request.
     * 
     */
    @Import(name="jitRequestName")
    private @Nullable Output<String> jitRequestName;

    public Optional<Output<String>> jitRequestName() {
        return Optional.ofNullable(this.jitRequestName);
    }

    /**
     * The JIT request properties.
     * 
     */
    @Import(name="jitSchedulingPolicy", required=true)
    private Output<JitSchedulingPolicyArgs> jitSchedulingPolicy;

    public Output<JitSchedulingPolicyArgs> jitSchedulingPolicy() {
        return this.jitSchedulingPolicy;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private JitRequestArgs() {}

    private JitRequestArgs(JitRequestArgs $) {
        this.applicationResourceId = $.applicationResourceId;
        this.jitAuthorizationPolicies = $.jitAuthorizationPolicies;
        this.jitRequestName = $.jitRequestName;
        this.jitSchedulingPolicy = $.jitSchedulingPolicy;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JitRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JitRequestArgs $;

        public Builder() {
            $ = new JitRequestArgs();
        }

        public Builder(JitRequestArgs defaults) {
            $ = new JitRequestArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationResourceId(Output<String> applicationResourceId) {
            $.applicationResourceId = applicationResourceId;
            return this;
        }

        public Builder applicationResourceId(String applicationResourceId) {
            return applicationResourceId(Output.of(applicationResourceId));
        }

        public Builder jitAuthorizationPolicies(Output<List<JitAuthorizationPoliciesArgs>> jitAuthorizationPolicies) {
            $.jitAuthorizationPolicies = jitAuthorizationPolicies;
            return this;
        }

        public Builder jitAuthorizationPolicies(List<JitAuthorizationPoliciesArgs> jitAuthorizationPolicies) {
            return jitAuthorizationPolicies(Output.of(jitAuthorizationPolicies));
        }

        public Builder jitAuthorizationPolicies(JitAuthorizationPoliciesArgs... jitAuthorizationPolicies) {
            return jitAuthorizationPolicies(List.of(jitAuthorizationPolicies));
        }

        public Builder jitRequestName(@Nullable Output<String> jitRequestName) {
            $.jitRequestName = jitRequestName;
            return this;
        }

        public Builder jitRequestName(String jitRequestName) {
            return jitRequestName(Output.of(jitRequestName));
        }

        public Builder jitSchedulingPolicy(Output<JitSchedulingPolicyArgs> jitSchedulingPolicy) {
            $.jitSchedulingPolicy = jitSchedulingPolicy;
            return this;
        }

        public Builder jitSchedulingPolicy(JitSchedulingPolicyArgs jitSchedulingPolicy) {
            return jitSchedulingPolicy(Output.of(jitSchedulingPolicy));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public JitRequestArgs build() {
            $.applicationResourceId = Objects.requireNonNull($.applicationResourceId, "expected parameter 'applicationResourceId' to be non-null");
            $.jitAuthorizationPolicies = Objects.requireNonNull($.jitAuthorizationPolicies, "expected parameter 'jitAuthorizationPolicies' to be non-null");
            $.jitSchedulingPolicy = Objects.requireNonNull($.jitSchedulingPolicy, "expected parameter 'jitSchedulingPolicy' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
