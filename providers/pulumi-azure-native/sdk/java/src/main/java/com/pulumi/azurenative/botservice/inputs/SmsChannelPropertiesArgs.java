// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The parameters to provide for the Sms channel.
 * 
 */
public final class SmsChannelPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final SmsChannelPropertiesArgs Empty = new SmsChannelPropertiesArgs();

    /**
     * The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    @Import(name="accountSID", required=true)
    private Output<String> accountSID;

    public Output<String> accountSID() {
        return this.accountSID;
    }

    /**
     * The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    @Import(name="authToken")
    private @Nullable Output<String> authToken;

    public Optional<Output<String>> authToken() {
        return Optional.ofNullable(this.authToken);
    }

    /**
     * Whether this channel is enabled for the bot
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * Whether this channel is validated for the bot
     * 
     */
    @Import(name="isValidated")
    private @Nullable Output<Boolean> isValidated;

    public Optional<Output<Boolean>> isValidated() {
        return Optional.ofNullable(this.isValidated);
    }

    /**
     * The Sms phone
     * 
     */
    @Import(name="phone", required=true)
    private Output<String> phone;

    public Output<String> phone() {
        return this.phone;
    }

    private SmsChannelPropertiesArgs() {}

    private SmsChannelPropertiesArgs(SmsChannelPropertiesArgs $) {
        this.accountSID = $.accountSID;
        this.authToken = $.authToken;
        this.isEnabled = $.isEnabled;
        this.isValidated = $.isValidated;
        this.phone = $.phone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SmsChannelPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SmsChannelPropertiesArgs $;

        public Builder() {
            $ = new SmsChannelPropertiesArgs();
        }

        public Builder(SmsChannelPropertiesArgs defaults) {
            $ = new SmsChannelPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountSID(Output<String> accountSID) {
            $.accountSID = accountSID;
            return this;
        }

        public Builder accountSID(String accountSID) {
            return accountSID(Output.of(accountSID));
        }

        public Builder authToken(@Nullable Output<String> authToken) {
            $.authToken = authToken;
            return this;
        }

        public Builder authToken(String authToken) {
            return authToken(Output.of(authToken));
        }

        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        public Builder isValidated(@Nullable Output<Boolean> isValidated) {
            $.isValidated = isValidated;
            return this;
        }

        public Builder isValidated(Boolean isValidated) {
            return isValidated(Output.of(isValidated));
        }

        public Builder phone(Output<String> phone) {
            $.phone = phone;
            return this;
        }

        public Builder phone(String phone) {
            return phone(Output.of(phone));
        }

        public SmsChannelPropertiesArgs build() {
            $.accountSID = Objects.requireNonNull($.accountSID, "expected parameter 'accountSID' to be non-null");
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            $.phone = Objects.requireNonNull($.phone, "expected parameter 'phone' to be non-null");
            return $;
        }
    }

}
