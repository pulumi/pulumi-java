// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.inputs;

import com.pulumi.azurenative.testbase.enums.Tier;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes a Test Base Account SKU.
 * 
 */
public final class TestBaseAccountSKUArgs extends com.pulumi.resources.ResourceArgs {

    public static final TestBaseAccountSKUArgs Empty = new TestBaseAccountSKUArgs();

    /**
     * The locations that the SKU is available.
     * 
     */
    @Import(name="locations")
    private @Nullable Output<List<String>> locations;

    /**
     * @return The locations that the SKU is available.
     * 
     */
    public Optional<Output<List<String>>> locations() {
        return Optional.ofNullable(this.locations);
    }

    /**
     * The name of the SKU. This is typically a letter + number code, such as B0 or S0.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the SKU. This is typically a letter + number code, such as B0 or S0.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The type of resource the SKU applies to.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The type of resource the SKU applies to.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * The tier of this particular SKU.
     * 
     */
    @Import(name="tier", required=true)
    private Output<Either<String,Tier>> tier;

    /**
     * @return The tier of this particular SKU.
     * 
     */
    public Output<Either<String,Tier>> tier() {
        return this.tier;
    }

    private TestBaseAccountSKUArgs() {}

    private TestBaseAccountSKUArgs(TestBaseAccountSKUArgs $) {
        this.locations = $.locations;
        this.name = $.name;
        this.resourceType = $.resourceType;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TestBaseAccountSKUArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TestBaseAccountSKUArgs $;

        public Builder() {
            $ = new TestBaseAccountSKUArgs();
        }

        public Builder(TestBaseAccountSKUArgs defaults) {
            $ = new TestBaseAccountSKUArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param locations The locations that the SKU is available.
         * 
         * @return builder
         * 
         */
        public Builder locations(@Nullable Output<List<String>> locations) {
            $.locations = locations;
            return this;
        }

        /**
         * @param locations The locations that the SKU is available.
         * 
         * @return builder
         * 
         */
        public Builder locations(List<String> locations) {
            return locations(Output.of(locations));
        }

        /**
         * @param locations The locations that the SKU is available.
         * 
         * @return builder
         * 
         */
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }

        /**
         * @param name The name of the SKU. This is typically a letter + number code, such as B0 or S0.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the SKU. This is typically a letter + number code, such as B0 or S0.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceType The type of resource the SKU applies to.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The type of resource the SKU applies to.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param tier The tier of this particular SKU.
         * 
         * @return builder
         * 
         */
        public Builder tier(Output<Either<String,Tier>> tier) {
            $.tier = tier;
            return this;
        }

        /**
         * @param tier The tier of this particular SKU.
         * 
         * @return builder
         * 
         */
        public Builder tier(Either<String,Tier> tier) {
            return tier(Output.of(tier));
        }

        /**
         * @param tier The tier of this particular SKU.
         * 
         * @return builder
         * 
         */
        public Builder tier(String tier) {
            return tier(Either.ofLeft(tier));
        }

        /**
         * @param tier The tier of this particular SKU.
         * 
         * @return builder
         * 
         */
        public Builder tier(Tier tier) {
            return tier(Either.ofRight(tier));
        }

        public TestBaseAccountSKUArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.tier = Objects.requireNonNull($.tier, "expected parameter 'tier' to be non-null");
            return $;
        }
    }

}
