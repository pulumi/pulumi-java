// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.azurenative.migrate.inputs.LoadBalancerBackendAddressPoolReferenceArgs;
import com.pulumi.azurenative.migrate.inputs.LoadBalancerNatRuleReferenceArgs;
import com.pulumi.azurenative.migrate.inputs.PublicIpReferenceArgs;
import com.pulumi.azurenative.migrate.inputs.SubnetReferenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines NIC IP configuration properties.
 * 
 */
public final class NicIpConfigurationResourceSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final NicIpConfigurationResourceSettingsArgs Empty = new NicIpConfigurationResourceSettingsArgs();

    /**
     * Gets or sets the references of the load balancer backend address pools.
     * 
     */
    @Import(name="loadBalancerBackendAddressPools")
    private @Nullable Output<List<LoadBalancerBackendAddressPoolReferenceArgs>> loadBalancerBackendAddressPools;

    public Optional<Output<List<LoadBalancerBackendAddressPoolReferenceArgs>>> loadBalancerBackendAddressPools() {
        return Optional.ofNullable(this.loadBalancerBackendAddressPools);
    }

    /**
     * Gets or sets the references of the load balancer NAT rules.
     * 
     */
    @Import(name="loadBalancerNatRules")
    private @Nullable Output<List<LoadBalancerNatRuleReferenceArgs>> loadBalancerNatRules;

    public Optional<Output<List<LoadBalancerNatRuleReferenceArgs>>> loadBalancerNatRules() {
        return Optional.ofNullable(this.loadBalancerNatRules);
    }

    /**
     * Gets or sets the IP configuration name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Gets or sets a value indicating whether this IP configuration is the primary.
     * 
     */
    @Import(name="primary")
    private @Nullable Output<Boolean> primary;

    public Optional<Output<Boolean>> primary() {
        return Optional.ofNullable(this.primary);
    }

    /**
     * Gets or sets the private IP address of the network interface IP Configuration.
     * 
     */
    @Import(name="privateIpAddress")
    private @Nullable Output<String> privateIpAddress;

    public Optional<Output<String>> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * Gets or sets the private IP address allocation method.
     * 
     */
    @Import(name="privateIpAllocationMethod")
    private @Nullable Output<String> privateIpAllocationMethod;

    public Optional<Output<String>> privateIpAllocationMethod() {
        return Optional.ofNullable(this.privateIpAllocationMethod);
    }

    /**
     * Defines reference to a public IP.
     * 
     */
    @Import(name="publicIp")
    private @Nullable Output<PublicIpReferenceArgs> publicIp;

    public Optional<Output<PublicIpReferenceArgs>> publicIp() {
        return Optional.ofNullable(this.publicIp);
    }

    /**
     * Defines reference to subnet.
     * 
     */
    @Import(name="subnet")
    private @Nullable Output<SubnetReferenceArgs> subnet;

    public Optional<Output<SubnetReferenceArgs>> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    private NicIpConfigurationResourceSettingsArgs() {}

    private NicIpConfigurationResourceSettingsArgs(NicIpConfigurationResourceSettingsArgs $) {
        this.loadBalancerBackendAddressPools = $.loadBalancerBackendAddressPools;
        this.loadBalancerNatRules = $.loadBalancerNatRules;
        this.name = $.name;
        this.primary = $.primary;
        this.privateIpAddress = $.privateIpAddress;
        this.privateIpAllocationMethod = $.privateIpAllocationMethod;
        this.publicIp = $.publicIp;
        this.subnet = $.subnet;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NicIpConfigurationResourceSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NicIpConfigurationResourceSettingsArgs $;

        public Builder() {
            $ = new NicIpConfigurationResourceSettingsArgs();
        }

        public Builder(NicIpConfigurationResourceSettingsArgs defaults) {
            $ = new NicIpConfigurationResourceSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder loadBalancerBackendAddressPools(@Nullable Output<List<LoadBalancerBackendAddressPoolReferenceArgs>> loadBalancerBackendAddressPools) {
            $.loadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
            return this;
        }

        public Builder loadBalancerBackendAddressPools(List<LoadBalancerBackendAddressPoolReferenceArgs> loadBalancerBackendAddressPools) {
            return loadBalancerBackendAddressPools(Output.of(loadBalancerBackendAddressPools));
        }

        public Builder loadBalancerBackendAddressPools(LoadBalancerBackendAddressPoolReferenceArgs... loadBalancerBackendAddressPools) {
            return loadBalancerBackendAddressPools(List.of(loadBalancerBackendAddressPools));
        }

        public Builder loadBalancerNatRules(@Nullable Output<List<LoadBalancerNatRuleReferenceArgs>> loadBalancerNatRules) {
            $.loadBalancerNatRules = loadBalancerNatRules;
            return this;
        }

        public Builder loadBalancerNatRules(List<LoadBalancerNatRuleReferenceArgs> loadBalancerNatRules) {
            return loadBalancerNatRules(Output.of(loadBalancerNatRules));
        }

        public Builder loadBalancerNatRules(LoadBalancerNatRuleReferenceArgs... loadBalancerNatRules) {
            return loadBalancerNatRules(List.of(loadBalancerNatRules));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder primary(@Nullable Output<Boolean> primary) {
            $.primary = primary;
            return this;
        }

        public Builder primary(Boolean primary) {
            return primary(Output.of(primary));
        }

        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        public Builder privateIpAllocationMethod(@Nullable Output<String> privateIpAllocationMethod) {
            $.privateIpAllocationMethod = privateIpAllocationMethod;
            return this;
        }

        public Builder privateIpAllocationMethod(String privateIpAllocationMethod) {
            return privateIpAllocationMethod(Output.of(privateIpAllocationMethod));
        }

        public Builder publicIp(@Nullable Output<PublicIpReferenceArgs> publicIp) {
            $.publicIp = publicIp;
            return this;
        }

        public Builder publicIp(PublicIpReferenceArgs publicIp) {
            return publicIp(Output.of(publicIp));
        }

        public Builder subnet(@Nullable Output<SubnetReferenceArgs> subnet) {
            $.subnet = subnet;
            return this;
        }

        public Builder subnet(SubnetReferenceArgs subnet) {
            return subnet(Output.of(subnet));
        }

        public NicIpConfigurationResourceSettingsArgs build() {
            return $;
        }
    }

}
