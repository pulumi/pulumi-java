// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Creates a particular correlation between services.
 * 
 */
public final class ServiceCorrelationDescriptionResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServiceCorrelationDescriptionResponse Empty = new ServiceCorrelationDescriptionResponse();

    /**
     * The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.
     * 
     */
    @Import(name="scheme", required=true)
    private String scheme;

    public String scheme() {
        return this.scheme;
    }

    /**
     * The name of the service that the correlation relationship is established with.
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    public String serviceName() {
        return this.serviceName;
    }

    private ServiceCorrelationDescriptionResponse() {}

    private ServiceCorrelationDescriptionResponse(ServiceCorrelationDescriptionResponse $) {
        this.scheme = $.scheme;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceCorrelationDescriptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceCorrelationDescriptionResponse $;

        public Builder() {
            $ = new ServiceCorrelationDescriptionResponse();
        }

        public Builder(ServiceCorrelationDescriptionResponse defaults) {
            $ = new ServiceCorrelationDescriptionResponse(Objects.requireNonNull(defaults));
        }

        public Builder scheme(String scheme) {
            $.scheme = scheme;
            return this;
        }

        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public ServiceCorrelationDescriptionResponse build() {
            $.scheme = Objects.requireNonNull($.scheme, "expected parameter 'scheme' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
