// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerRegistryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerRegistryArgs Empty = new ContainerRegistryArgs();

    @Import(name="password", required=true)
    private Output<String> password;

    public Output<String> password() {
        return this.password;
    }

    /**
     * If omitted, the default is &#34;docker.io&#34;.
     * 
     */
    @Import(name="registryServer")
    private @Nullable Output<String> registryServer;

    /**
     * @return If omitted, the default is &#34;docker.io&#34;.
     * 
     */
    public Optional<Output<String>> registryServer() {
        return Optional.ofNullable(this.registryServer);
    }

    @Import(name="userName", required=true)
    private Output<String> userName;

    public Output<String> userName() {
        return this.userName;
    }

    private ContainerRegistryArgs() {}

    private ContainerRegistryArgs(ContainerRegistryArgs $) {
        this.password = $.password;
        this.registryServer = $.registryServer;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerRegistryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerRegistryArgs $;

        public Builder() {
            $ = new ContainerRegistryArgs();
        }

        public Builder(ContainerRegistryArgs defaults) {
            $ = new ContainerRegistryArgs(Objects.requireNonNull(defaults));
        }

        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param registryServer If omitted, the default is &#34;docker.io&#34;.
         * 
         * @return builder
         * 
         */
        public Builder registryServer(@Nullable Output<String> registryServer) {
            $.registryServer = registryServer;
            return this;
        }

        /**
         * @param registryServer If omitted, the default is &#34;docker.io&#34;.
         * 
         * @return builder
         * 
         */
        public Builder registryServer(String registryServer) {
            return registryServer(Output.of(registryServer));
        }

        public Builder userName(Output<String> userName) {
            $.userName = userName;
            return this;
        }

        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public ContainerRegistryArgs build() {
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
