// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.A2AProtectedDiskDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.A2AProtectedManagedDiskDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.A2AUnprotectedDiskDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.AzureToAzureVmSyncedConfigDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.VMNicDetailsResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A2A provider specific settings.
 * 
 */
public final class A2AReplicationDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final A2AReplicationDetailsResponse Empty = new A2AReplicationDetailsResponse();

    /**
     * The agent version.
     * 
     */
    @Import(name="agentVersion")
    private @Nullable String agentVersion;

    public Optional<String> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }

    /**
     * The fabric specific object Id of the virtual machine.
     * 
     */
    @Import(name="fabricObjectId")
    private @Nullable String fabricObjectId;

    public Optional<String> fabricObjectId() {
        return Optional.ofNullable(this.fabricObjectId);
    }

    /**
     * The initial primary fabric location.
     * 
     */
    @Import(name="initialPrimaryFabricLocation", required=true)
    private String initialPrimaryFabricLocation;

    public String initialPrimaryFabricLocation() {
        return this.initialPrimaryFabricLocation;
    }

    /**
     * The initial primary availability zone.
     * 
     */
    @Import(name="initialPrimaryZone", required=true)
    private String initialPrimaryZone;

    public String initialPrimaryZone() {
        return this.initialPrimaryZone;
    }

    /**
     * The initial recovery fabric location.
     * 
     */
    @Import(name="initialRecoveryFabricLocation", required=true)
    private String initialRecoveryFabricLocation;

    public String initialRecoveryFabricLocation() {
        return this.initialRecoveryFabricLocation;
    }

    /**
     * The initial recovery availability zone.
     * 
     */
    @Import(name="initialRecoveryZone", required=true)
    private String initialRecoveryZone;

    public String initialRecoveryZone() {
        return this.initialRecoveryZone;
    }

    /**
     * Gets the Instance type.
     * Expected value is &#39;A2A&#39;.
     * 
     */
    @Import(name="instanceType", required=true)
    private String instanceType;

    public String instanceType() {
        return this.instanceType;
    }

    /**
     * A value indicating whether replication agent update is required.
     * 
     */
    @Import(name="isReplicationAgentUpdateRequired")
    private @Nullable Boolean isReplicationAgentUpdateRequired;

    public Optional<Boolean> isReplicationAgentUpdateRequired() {
        return Optional.ofNullable(this.isReplicationAgentUpdateRequired);
    }

    /**
     * The last heartbeat received from the source server.
     * 
     */
    @Import(name="lastHeartbeat")
    private @Nullable String lastHeartbeat;

    public Optional<String> lastHeartbeat() {
        return Optional.ofNullable(this.lastHeartbeat);
    }

    /**
     * The time (in UTC) when the last RPO value was calculated by Protection Service.
     * 
     */
    @Import(name="lastRpoCalculatedTime")
    private @Nullable String lastRpoCalculatedTime;

    public Optional<String> lastRpoCalculatedTime() {
        return Optional.ofNullable(this.lastRpoCalculatedTime);
    }

    /**
     * An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the &#34;same&#34; protected item even though other internal Ids/ARM Id might be changing.
     * 
     */
    @Import(name="lifecycleId")
    private @Nullable String lifecycleId;

    public Optional<String> lifecycleId() {
        return Optional.ofNullable(this.lifecycleId);
    }

    /**
     * The management Id.
     * 
     */
    @Import(name="managementId")
    private @Nullable String managementId;

    public Optional<String> managementId() {
        return Optional.ofNullable(this.managementId);
    }

    /**
     * The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
     * 
     */
    @Import(name="monitoringJobType")
    private @Nullable String monitoringJobType;

    public Optional<String> monitoringJobType() {
        return Optional.ofNullable(this.monitoringJobType);
    }

    /**
     * The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
     * 
     */
    @Import(name="monitoringPercentageCompletion")
    private @Nullable Integer monitoringPercentageCompletion;

    public Optional<Integer> monitoringPercentageCompletion() {
        return Optional.ofNullable(this.monitoringPercentageCompletion);
    }

    /**
     * Whether Multi VM group is auto created or specified by user.
     * 
     */
    @Import(name="multiVmGroupCreateOption")
    private @Nullable String multiVmGroupCreateOption;

    public Optional<String> multiVmGroupCreateOption() {
        return Optional.ofNullable(this.multiVmGroupCreateOption);
    }

    /**
     * The multi vm group Id.
     * 
     */
    @Import(name="multiVmGroupId")
    private @Nullable String multiVmGroupId;

    public Optional<String> multiVmGroupId() {
        return Optional.ofNullable(this.multiVmGroupId);
    }

    /**
     * The multi vm group name.
     * 
     */
    @Import(name="multiVmGroupName")
    private @Nullable String multiVmGroupName;

    public Optional<String> multiVmGroupName() {
        return Optional.ofNullable(this.multiVmGroupName);
    }

    /**
     * The type of operating system.
     * 
     */
    @Import(name="osType")
    private @Nullable String osType;

    public Optional<String> osType() {
        return Optional.ofNullable(this.osType);
    }

    /**
     * Primary fabric location.
     * 
     */
    @Import(name="primaryFabricLocation")
    private @Nullable String primaryFabricLocation;

    public Optional<String> primaryFabricLocation() {
        return Optional.ofNullable(this.primaryFabricLocation);
    }

    /**
     * The list of protected disks.
     * 
     */
    @Import(name="protectedDisks")
    private @Nullable List<A2AProtectedDiskDetailsResponse> protectedDisks;

    public Optional<List<A2AProtectedDiskDetailsResponse>> protectedDisks() {
        return Optional.ofNullable(this.protectedDisks);
    }

    /**
     * The list of protected managed disks.
     * 
     */
    @Import(name="protectedManagedDisks")
    private @Nullable List<A2AProtectedManagedDiskDetailsResponse> protectedManagedDisks;

    public Optional<List<A2AProtectedManagedDiskDetailsResponse>> protectedManagedDisks() {
        return Optional.ofNullable(this.protectedManagedDisks);
    }

    /**
     * The recovery availability set.
     * 
     */
    @Import(name="recoveryAvailabilitySet")
    private @Nullable String recoveryAvailabilitySet;

    public Optional<String> recoveryAvailabilitySet() {
        return Optional.ofNullable(this.recoveryAvailabilitySet);
    }

    /**
     * The recovery availability zone.
     * 
     */
    @Import(name="recoveryAvailabilityZone")
    private @Nullable String recoveryAvailabilityZone;

    public Optional<String> recoveryAvailabilityZone() {
        return Optional.ofNullable(this.recoveryAvailabilityZone);
    }

    /**
     * The recovery resource group.
     * 
     */
    @Import(name="recoveryAzureResourceGroupId")
    private @Nullable String recoveryAzureResourceGroupId;

    public Optional<String> recoveryAzureResourceGroupId() {
        return Optional.ofNullable(this.recoveryAzureResourceGroupId);
    }

    /**
     * The name of recovery virtual machine.
     * 
     */
    @Import(name="recoveryAzureVMName")
    private @Nullable String recoveryAzureVMName;

    public Optional<String> recoveryAzureVMName() {
        return Optional.ofNullable(this.recoveryAzureVMName);
    }

    /**
     * The size of recovery virtual machine.
     * 
     */
    @Import(name="recoveryAzureVMSize")
    private @Nullable String recoveryAzureVMSize;

    public Optional<String> recoveryAzureVMSize() {
        return Optional.ofNullable(this.recoveryAzureVMSize);
    }

    /**
     * The recovery boot diagnostic storage account Arm Id.
     * 
     */
    @Import(name="recoveryBootDiagStorageAccountId")
    private @Nullable String recoveryBootDiagStorageAccountId;

    public Optional<String> recoveryBootDiagStorageAccountId() {
        return Optional.ofNullable(this.recoveryBootDiagStorageAccountId);
    }

    /**
     * The recovery cloud service.
     * 
     */
    @Import(name="recoveryCloudService")
    private @Nullable String recoveryCloudService;

    public Optional<String> recoveryCloudService() {
        return Optional.ofNullable(this.recoveryCloudService);
    }

    /**
     * The recovery fabric location.
     * 
     */
    @Import(name="recoveryFabricLocation")
    private @Nullable String recoveryFabricLocation;

    public Optional<String> recoveryFabricLocation() {
        return Optional.ofNullable(this.recoveryFabricLocation);
    }

    /**
     * The recovery fabric object Id.
     * 
     */
    @Import(name="recoveryFabricObjectId")
    private @Nullable String recoveryFabricObjectId;

    public Optional<String> recoveryFabricObjectId() {
        return Optional.ofNullable(this.recoveryFabricObjectId);
    }

    /**
     * The recovery proximity placement group Id.
     * 
     */
    @Import(name="recoveryProximityPlacementGroupId")
    private @Nullable String recoveryProximityPlacementGroupId;

    public Optional<String> recoveryProximityPlacementGroupId() {
        return Optional.ofNullable(this.recoveryProximityPlacementGroupId);
    }

    /**
     * The last RPO value in seconds.
     * 
     */
    @Import(name="rpoInSeconds")
    private @Nullable Double rpoInSeconds;

    public Optional<Double> rpoInSeconds() {
        return Optional.ofNullable(this.rpoInSeconds);
    }

    /**
     * The recovery virtual network.
     * 
     */
    @Import(name="selectedRecoveryAzureNetworkId")
    private @Nullable String selectedRecoveryAzureNetworkId;

    public Optional<String> selectedRecoveryAzureNetworkId() {
        return Optional.ofNullable(this.selectedRecoveryAzureNetworkId);
    }

    /**
     * The test failover virtual network.
     * 
     */
    @Import(name="selectedTfoAzureNetworkId")
    private @Nullable String selectedTfoAzureNetworkId;

    public Optional<String> selectedTfoAzureNetworkId() {
        return Optional.ofNullable(this.selectedTfoAzureNetworkId);
    }

    /**
     * The test failover fabric object Id.
     * 
     */
    @Import(name="testFailoverRecoveryFabricObjectId")
    private @Nullable String testFailoverRecoveryFabricObjectId;

    public Optional<String> testFailoverRecoveryFabricObjectId() {
        return Optional.ofNullable(this.testFailoverRecoveryFabricObjectId);
    }

    /**
     * The test failover VM name.
     * 
     */
    @Import(name="tfoAzureVMName")
    private @Nullable String tfoAzureVMName;

    public Optional<String> tfoAzureVMName() {
        return Optional.ofNullable(this.tfoAzureVMName);
    }

    /**
     * The list of unprotected disks.
     * 
     */
    @Import(name="unprotectedDisks")
    private @Nullable List<A2AUnprotectedDiskDetailsResponse> unprotectedDisks;

    public Optional<List<A2AUnprotectedDiskDetailsResponse>> unprotectedDisks() {
        return Optional.ofNullable(this.unprotectedDisks);
    }

    /**
     * The encryption type of the VM.
     * 
     */
    @Import(name="vmEncryptionType", required=true)
    private String vmEncryptionType;

    public String vmEncryptionType() {
        return this.vmEncryptionType;
    }

    /**
     * The virtual machine nic details.
     * 
     */
    @Import(name="vmNics")
    private @Nullable List<VMNicDetailsResponse> vmNics;

    public Optional<List<VMNicDetailsResponse>> vmNics() {
        return Optional.ofNullable(this.vmNics);
    }

    /**
     * The protection state for the vm.
     * 
     */
    @Import(name="vmProtectionState")
    private @Nullable String vmProtectionState;

    public Optional<String> vmProtectionState() {
        return Optional.ofNullable(this.vmProtectionState);
    }

    /**
     * The protection state description for the vm.
     * 
     */
    @Import(name="vmProtectionStateDescription")
    private @Nullable String vmProtectionStateDescription;

    public Optional<String> vmProtectionStateDescription() {
        return Optional.ofNullable(this.vmProtectionStateDescription);
    }

    /**
     * The synced configuration details.
     * 
     */
    @Import(name="vmSyncedConfigDetails")
    private @Nullable AzureToAzureVmSyncedConfigDetailsResponse vmSyncedConfigDetails;

    public Optional<AzureToAzureVmSyncedConfigDetailsResponse> vmSyncedConfigDetails() {
        return Optional.ofNullable(this.vmSyncedConfigDetails);
    }

    private A2AReplicationDetailsResponse() {}

    private A2AReplicationDetailsResponse(A2AReplicationDetailsResponse $) {
        this.agentVersion = $.agentVersion;
        this.fabricObjectId = $.fabricObjectId;
        this.initialPrimaryFabricLocation = $.initialPrimaryFabricLocation;
        this.initialPrimaryZone = $.initialPrimaryZone;
        this.initialRecoveryFabricLocation = $.initialRecoveryFabricLocation;
        this.initialRecoveryZone = $.initialRecoveryZone;
        this.instanceType = $.instanceType;
        this.isReplicationAgentUpdateRequired = $.isReplicationAgentUpdateRequired;
        this.lastHeartbeat = $.lastHeartbeat;
        this.lastRpoCalculatedTime = $.lastRpoCalculatedTime;
        this.lifecycleId = $.lifecycleId;
        this.managementId = $.managementId;
        this.monitoringJobType = $.monitoringJobType;
        this.monitoringPercentageCompletion = $.monitoringPercentageCompletion;
        this.multiVmGroupCreateOption = $.multiVmGroupCreateOption;
        this.multiVmGroupId = $.multiVmGroupId;
        this.multiVmGroupName = $.multiVmGroupName;
        this.osType = $.osType;
        this.primaryFabricLocation = $.primaryFabricLocation;
        this.protectedDisks = $.protectedDisks;
        this.protectedManagedDisks = $.protectedManagedDisks;
        this.recoveryAvailabilitySet = $.recoveryAvailabilitySet;
        this.recoveryAvailabilityZone = $.recoveryAvailabilityZone;
        this.recoveryAzureResourceGroupId = $.recoveryAzureResourceGroupId;
        this.recoveryAzureVMName = $.recoveryAzureVMName;
        this.recoveryAzureVMSize = $.recoveryAzureVMSize;
        this.recoveryBootDiagStorageAccountId = $.recoveryBootDiagStorageAccountId;
        this.recoveryCloudService = $.recoveryCloudService;
        this.recoveryFabricLocation = $.recoveryFabricLocation;
        this.recoveryFabricObjectId = $.recoveryFabricObjectId;
        this.recoveryProximityPlacementGroupId = $.recoveryProximityPlacementGroupId;
        this.rpoInSeconds = $.rpoInSeconds;
        this.selectedRecoveryAzureNetworkId = $.selectedRecoveryAzureNetworkId;
        this.selectedTfoAzureNetworkId = $.selectedTfoAzureNetworkId;
        this.testFailoverRecoveryFabricObjectId = $.testFailoverRecoveryFabricObjectId;
        this.tfoAzureVMName = $.tfoAzureVMName;
        this.unprotectedDisks = $.unprotectedDisks;
        this.vmEncryptionType = $.vmEncryptionType;
        this.vmNics = $.vmNics;
        this.vmProtectionState = $.vmProtectionState;
        this.vmProtectionStateDescription = $.vmProtectionStateDescription;
        this.vmSyncedConfigDetails = $.vmSyncedConfigDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(A2AReplicationDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private A2AReplicationDetailsResponse $;

        public Builder() {
            $ = new A2AReplicationDetailsResponse();
        }

        public Builder(A2AReplicationDetailsResponse defaults) {
            $ = new A2AReplicationDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder agentVersion(@Nullable String agentVersion) {
            $.agentVersion = agentVersion;
            return this;
        }

        public Builder fabricObjectId(@Nullable String fabricObjectId) {
            $.fabricObjectId = fabricObjectId;
            return this;
        }

        public Builder initialPrimaryFabricLocation(String initialPrimaryFabricLocation) {
            $.initialPrimaryFabricLocation = initialPrimaryFabricLocation;
            return this;
        }

        public Builder initialPrimaryZone(String initialPrimaryZone) {
            $.initialPrimaryZone = initialPrimaryZone;
            return this;
        }

        public Builder initialRecoveryFabricLocation(String initialRecoveryFabricLocation) {
            $.initialRecoveryFabricLocation = initialRecoveryFabricLocation;
            return this;
        }

        public Builder initialRecoveryZone(String initialRecoveryZone) {
            $.initialRecoveryZone = initialRecoveryZone;
            return this;
        }

        public Builder instanceType(String instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder isReplicationAgentUpdateRequired(@Nullable Boolean isReplicationAgentUpdateRequired) {
            $.isReplicationAgentUpdateRequired = isReplicationAgentUpdateRequired;
            return this;
        }

        public Builder lastHeartbeat(@Nullable String lastHeartbeat) {
            $.lastHeartbeat = lastHeartbeat;
            return this;
        }

        public Builder lastRpoCalculatedTime(@Nullable String lastRpoCalculatedTime) {
            $.lastRpoCalculatedTime = lastRpoCalculatedTime;
            return this;
        }

        public Builder lifecycleId(@Nullable String lifecycleId) {
            $.lifecycleId = lifecycleId;
            return this;
        }

        public Builder managementId(@Nullable String managementId) {
            $.managementId = managementId;
            return this;
        }

        public Builder monitoringJobType(@Nullable String monitoringJobType) {
            $.monitoringJobType = monitoringJobType;
            return this;
        }

        public Builder monitoringPercentageCompletion(@Nullable Integer monitoringPercentageCompletion) {
            $.monitoringPercentageCompletion = monitoringPercentageCompletion;
            return this;
        }

        public Builder multiVmGroupCreateOption(@Nullable String multiVmGroupCreateOption) {
            $.multiVmGroupCreateOption = multiVmGroupCreateOption;
            return this;
        }

        public Builder multiVmGroupId(@Nullable String multiVmGroupId) {
            $.multiVmGroupId = multiVmGroupId;
            return this;
        }

        public Builder multiVmGroupName(@Nullable String multiVmGroupName) {
            $.multiVmGroupName = multiVmGroupName;
            return this;
        }

        public Builder osType(@Nullable String osType) {
            $.osType = osType;
            return this;
        }

        public Builder primaryFabricLocation(@Nullable String primaryFabricLocation) {
            $.primaryFabricLocation = primaryFabricLocation;
            return this;
        }

        public Builder protectedDisks(@Nullable List<A2AProtectedDiskDetailsResponse> protectedDisks) {
            $.protectedDisks = protectedDisks;
            return this;
        }

        public Builder protectedDisks(A2AProtectedDiskDetailsResponse... protectedDisks) {
            return protectedDisks(List.of(protectedDisks));
        }

        public Builder protectedManagedDisks(@Nullable List<A2AProtectedManagedDiskDetailsResponse> protectedManagedDisks) {
            $.protectedManagedDisks = protectedManagedDisks;
            return this;
        }

        public Builder protectedManagedDisks(A2AProtectedManagedDiskDetailsResponse... protectedManagedDisks) {
            return protectedManagedDisks(List.of(protectedManagedDisks));
        }

        public Builder recoveryAvailabilitySet(@Nullable String recoveryAvailabilitySet) {
            $.recoveryAvailabilitySet = recoveryAvailabilitySet;
            return this;
        }

        public Builder recoveryAvailabilityZone(@Nullable String recoveryAvailabilityZone) {
            $.recoveryAvailabilityZone = recoveryAvailabilityZone;
            return this;
        }

        public Builder recoveryAzureResourceGroupId(@Nullable String recoveryAzureResourceGroupId) {
            $.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
            return this;
        }

        public Builder recoveryAzureVMName(@Nullable String recoveryAzureVMName) {
            $.recoveryAzureVMName = recoveryAzureVMName;
            return this;
        }

        public Builder recoveryAzureVMSize(@Nullable String recoveryAzureVMSize) {
            $.recoveryAzureVMSize = recoveryAzureVMSize;
            return this;
        }

        public Builder recoveryBootDiagStorageAccountId(@Nullable String recoveryBootDiagStorageAccountId) {
            $.recoveryBootDiagStorageAccountId = recoveryBootDiagStorageAccountId;
            return this;
        }

        public Builder recoveryCloudService(@Nullable String recoveryCloudService) {
            $.recoveryCloudService = recoveryCloudService;
            return this;
        }

        public Builder recoveryFabricLocation(@Nullable String recoveryFabricLocation) {
            $.recoveryFabricLocation = recoveryFabricLocation;
            return this;
        }

        public Builder recoveryFabricObjectId(@Nullable String recoveryFabricObjectId) {
            $.recoveryFabricObjectId = recoveryFabricObjectId;
            return this;
        }

        public Builder recoveryProximityPlacementGroupId(@Nullable String recoveryProximityPlacementGroupId) {
            $.recoveryProximityPlacementGroupId = recoveryProximityPlacementGroupId;
            return this;
        }

        public Builder rpoInSeconds(@Nullable Double rpoInSeconds) {
            $.rpoInSeconds = rpoInSeconds;
            return this;
        }

        public Builder selectedRecoveryAzureNetworkId(@Nullable String selectedRecoveryAzureNetworkId) {
            $.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
            return this;
        }

        public Builder selectedTfoAzureNetworkId(@Nullable String selectedTfoAzureNetworkId) {
            $.selectedTfoAzureNetworkId = selectedTfoAzureNetworkId;
            return this;
        }

        public Builder testFailoverRecoveryFabricObjectId(@Nullable String testFailoverRecoveryFabricObjectId) {
            $.testFailoverRecoveryFabricObjectId = testFailoverRecoveryFabricObjectId;
            return this;
        }

        public Builder tfoAzureVMName(@Nullable String tfoAzureVMName) {
            $.tfoAzureVMName = tfoAzureVMName;
            return this;
        }

        public Builder unprotectedDisks(@Nullable List<A2AUnprotectedDiskDetailsResponse> unprotectedDisks) {
            $.unprotectedDisks = unprotectedDisks;
            return this;
        }

        public Builder unprotectedDisks(A2AUnprotectedDiskDetailsResponse... unprotectedDisks) {
            return unprotectedDisks(List.of(unprotectedDisks));
        }

        public Builder vmEncryptionType(String vmEncryptionType) {
            $.vmEncryptionType = vmEncryptionType;
            return this;
        }

        public Builder vmNics(@Nullable List<VMNicDetailsResponse> vmNics) {
            $.vmNics = vmNics;
            return this;
        }

        public Builder vmNics(VMNicDetailsResponse... vmNics) {
            return vmNics(List.of(vmNics));
        }

        public Builder vmProtectionState(@Nullable String vmProtectionState) {
            $.vmProtectionState = vmProtectionState;
            return this;
        }

        public Builder vmProtectionStateDescription(@Nullable String vmProtectionStateDescription) {
            $.vmProtectionStateDescription = vmProtectionStateDescription;
            return this;
        }

        public Builder vmSyncedConfigDetails(@Nullable AzureToAzureVmSyncedConfigDetailsResponse vmSyncedConfigDetails) {
            $.vmSyncedConfigDetails = vmSyncedConfigDetails;
            return this;
        }

        public A2AReplicationDetailsResponse build() {
            $.initialPrimaryFabricLocation = Objects.requireNonNull($.initialPrimaryFabricLocation, "expected parameter 'initialPrimaryFabricLocation' to be non-null");
            $.initialPrimaryZone = Objects.requireNonNull($.initialPrimaryZone, "expected parameter 'initialPrimaryZone' to be non-null");
            $.initialRecoveryFabricLocation = Objects.requireNonNull($.initialRecoveryFabricLocation, "expected parameter 'initialRecoveryFabricLocation' to be non-null");
            $.initialRecoveryZone = Objects.requireNonNull($.initialRecoveryZone, "expected parameter 'initialRecoveryZone' to be non-null");
            $.instanceType = Codegen.stringProp("instanceType").arg($.instanceType).require();
            $.vmEncryptionType = Objects.requireNonNull($.vmEncryptionType, "expected parameter 'vmEncryptionType' to be non-null");
            return $;
        }
    }

}
