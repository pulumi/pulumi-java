// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation;

import com.pulumi.azurenative.automation.inputs.RunbookAssociationPropertyArgs;
import com.pulumi.azurenative.automation.inputs.ScheduleAssociationPropertyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobScheduleArgs Empty = new JobScheduleArgs();

    /**
     * The name of the automation account.
     * 
     */
    @Import(name="automationAccountName", required=true)
    private Output<String> automationAccountName;

    public Output<String> automationAccountName() {
        return this.automationAccountName;
    }

    /**
     * The job schedule name.
     * 
     */
    @Import(name="jobScheduleId")
    private @Nullable Output<String> jobScheduleId;

    public Optional<Output<String>> jobScheduleId() {
        return Optional.ofNullable(this.jobScheduleId);
    }

    /**
     * Gets or sets a list of job properties.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Name of an Azure Resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets the hybrid worker group that the scheduled job should run on.
     * 
     */
    @Import(name="runOn")
    private @Nullable Output<String> runOn;

    public Optional<Output<String>> runOn() {
        return Optional.ofNullable(this.runOn);
    }

    /**
     * Gets or sets the runbook.
     * 
     */
    @Import(name="runbook", required=true)
    private Output<RunbookAssociationPropertyArgs> runbook;

    public Output<RunbookAssociationPropertyArgs> runbook() {
        return this.runbook;
    }

    /**
     * Gets or sets the schedule.
     * 
     */
    @Import(name="schedule", required=true)
    private Output<ScheduleAssociationPropertyArgs> schedule;

    public Output<ScheduleAssociationPropertyArgs> schedule() {
        return this.schedule;
    }

    private JobScheduleArgs() {}

    private JobScheduleArgs(JobScheduleArgs $) {
        this.automationAccountName = $.automationAccountName;
        this.jobScheduleId = $.jobScheduleId;
        this.parameters = $.parameters;
        this.resourceGroupName = $.resourceGroupName;
        this.runOn = $.runOn;
        this.runbook = $.runbook;
        this.schedule = $.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobScheduleArgs $;

        public Builder() {
            $ = new JobScheduleArgs();
        }

        public Builder(JobScheduleArgs defaults) {
            $ = new JobScheduleArgs(Objects.requireNonNull(defaults));
        }

        public Builder automationAccountName(Output<String> automationAccountName) {
            $.automationAccountName = automationAccountName;
            return this;
        }

        public Builder automationAccountName(String automationAccountName) {
            return automationAccountName(Output.of(automationAccountName));
        }

        public Builder jobScheduleId(@Nullable Output<String> jobScheduleId) {
            $.jobScheduleId = jobScheduleId;
            return this;
        }

        public Builder jobScheduleId(String jobScheduleId) {
            return jobScheduleId(Output.of(jobScheduleId));
        }

        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder runOn(@Nullable Output<String> runOn) {
            $.runOn = runOn;
            return this;
        }

        public Builder runOn(String runOn) {
            return runOn(Output.of(runOn));
        }

        public Builder runbook(Output<RunbookAssociationPropertyArgs> runbook) {
            $.runbook = runbook;
            return this;
        }

        public Builder runbook(RunbookAssociationPropertyArgs runbook) {
            return runbook(Output.of(runbook));
        }

        public Builder schedule(Output<ScheduleAssociationPropertyArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        public Builder schedule(ScheduleAssociationPropertyArgs schedule) {
            return schedule(Output.of(schedule));
        }

        public JobScheduleArgs build() {
            $.automationAccountName = Objects.requireNonNull($.automationAccountName, "expected parameter 'automationAccountName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.runbook = Objects.requireNonNull($.runbook, "expected parameter 'runbook' to be non-null");
            $.schedule = Objects.requireNonNull($.schedule, "expected parameter 'schedule' to be non-null");
            return $;
        }
    }

}
