// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybridnetwork.inputs;

import com.pulumi.azurenative.hybridnetwork.inputs.NetworkInterfaceIPConfigurationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Network interface properties.
 * 
 */
public final class NetworkInterfaceResponse extends com.pulumi.resources.InvokeArgs {

    public static final NetworkInterfaceResponse Empty = new NetworkInterfaceResponse();

    /**
     * A list of IP configurations of the network interface.
     * 
     */
    @Import(name="ipConfigurations")
      private final @Nullable List<NetworkInterfaceIPConfigurationResponse> ipConfigurations;

    public List<NetworkInterfaceIPConfigurationResponse> ipConfigurations() {
        return this.ipConfigurations == null ? List.of() : this.ipConfigurations;
    }

    /**
     * The MAC address of the network interface.
     * 
     */
    @Import(name="macAddress")
      private final @Nullable String macAddress;

    public Optional<String> macAddress() {
        return this.macAddress == null ? Optional.empty() : Optional.ofNullable(this.macAddress);
    }

    /**
     * The name of the network interface.
     * 
     */
    @Import(name="networkInterfaceName")
      private final @Nullable String networkInterfaceName;

    public Optional<String> networkInterfaceName() {
        return this.networkInterfaceName == null ? Optional.empty() : Optional.ofNullable(this.networkInterfaceName);
    }

    /**
     * The type of the VM switch.
     * 
     */
    @Import(name="vmSwitchType")
      private final @Nullable String vmSwitchType;

    public Optional<String> vmSwitchType() {
        return this.vmSwitchType == null ? Optional.empty() : Optional.ofNullable(this.vmSwitchType);
    }

    public NetworkInterfaceResponse(
        @Nullable List<NetworkInterfaceIPConfigurationResponse> ipConfigurations,
        @Nullable String macAddress,
        @Nullable String networkInterfaceName,
        @Nullable String vmSwitchType) {
        this.ipConfigurations = ipConfigurations;
        this.macAddress = macAddress;
        this.networkInterfaceName = networkInterfaceName;
        this.vmSwitchType = vmSwitchType;
    }

    private NetworkInterfaceResponse() {
        this.ipConfigurations = List.of();
        this.macAddress = null;
        this.networkInterfaceName = null;
        this.vmSwitchType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInterfaceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<NetworkInterfaceIPConfigurationResponse> ipConfigurations;
        private @Nullable String macAddress;
        private @Nullable String networkInterfaceName;
        private @Nullable String vmSwitchType;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkInterfaceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipConfigurations = defaults.ipConfigurations;
    	      this.macAddress = defaults.macAddress;
    	      this.networkInterfaceName = defaults.networkInterfaceName;
    	      this.vmSwitchType = defaults.vmSwitchType;
        }

        public Builder ipConfigurations(@Nullable List<NetworkInterfaceIPConfigurationResponse> ipConfigurations) {
            this.ipConfigurations = ipConfigurations;
            return this;
        }
        public Builder ipConfigurations(NetworkInterfaceIPConfigurationResponse... ipConfigurations) {
            return ipConfigurations(List.of(ipConfigurations));
        }
        public Builder macAddress(@Nullable String macAddress) {
            this.macAddress = macAddress;
            return this;
        }
        public Builder networkInterfaceName(@Nullable String networkInterfaceName) {
            this.networkInterfaceName = networkInterfaceName;
            return this;
        }
        public Builder vmSwitchType(@Nullable String vmSwitchType) {
            this.vmSwitchType = vmSwitchType;
            return this;
        }        public NetworkInterfaceResponse build() {
            return new NetworkInterfaceResponse(ipConfigurations, macAddress, networkInterfaceName, vmSwitchType);
        }
    }
}
