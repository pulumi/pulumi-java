// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybridnetwork.inputs;

import com.pulumi.azurenative.hybridnetwork.inputs.NetworkInterfaceIPConfigurationResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Network interface properties.
 * 
 */
public final class NetworkInterfaceResponse extends com.pulumi.resources.InvokeArgs {

    public static final NetworkInterfaceResponse Empty = new NetworkInterfaceResponse();

    /**
     * A list of IP configurations of the network interface.
     * 
     */
    @Import(name="ipConfigurations")
    private @Nullable List<NetworkInterfaceIPConfigurationResponse> ipConfigurations;

    /**
     * @return A list of IP configurations of the network interface.
     * 
     */
    public Optional<List<NetworkInterfaceIPConfigurationResponse>> ipConfigurations() {
        return Optional.ofNullable(this.ipConfigurations);
    }

    /**
     * The MAC address of the network interface.
     * 
     */
    @Import(name="macAddress")
    private @Nullable String macAddress;

    /**
     * @return The MAC address of the network interface.
     * 
     */
    public Optional<String> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    /**
     * The name of the network interface.
     * 
     */
    @Import(name="networkInterfaceName")
    private @Nullable String networkInterfaceName;

    /**
     * @return The name of the network interface.
     * 
     */
    public Optional<String> networkInterfaceName() {
        return Optional.ofNullable(this.networkInterfaceName);
    }

    /**
     * The type of the VM switch.
     * 
     */
    @Import(name="vmSwitchType")
    private @Nullable String vmSwitchType;

    /**
     * @return The type of the VM switch.
     * 
     */
    public Optional<String> vmSwitchType() {
        return Optional.ofNullable(this.vmSwitchType);
    }

    private NetworkInterfaceResponse() {}

    private NetworkInterfaceResponse(NetworkInterfaceResponse $) {
        this.ipConfigurations = $.ipConfigurations;
        this.macAddress = $.macAddress;
        this.networkInterfaceName = $.networkInterfaceName;
        this.vmSwitchType = $.vmSwitchType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkInterfaceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkInterfaceResponse $;

        public Builder() {
            $ = new NetworkInterfaceResponse();
        }

        public Builder(NetworkInterfaceResponse defaults) {
            $ = new NetworkInterfaceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipConfigurations A list of IP configurations of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder ipConfigurations(@Nullable List<NetworkInterfaceIPConfigurationResponse> ipConfigurations) {
            $.ipConfigurations = ipConfigurations;
            return this;
        }

        /**
         * @param ipConfigurations A list of IP configurations of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder ipConfigurations(NetworkInterfaceIPConfigurationResponse... ipConfigurations) {
            return ipConfigurations(List.of(ipConfigurations));
        }

        /**
         * @param macAddress The MAC address of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder macAddress(@Nullable String macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        /**
         * @param networkInterfaceName The name of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceName(@Nullable String networkInterfaceName) {
            $.networkInterfaceName = networkInterfaceName;
            return this;
        }

        /**
         * @param vmSwitchType The type of the VM switch.
         * 
         * @return builder
         * 
         */
        public Builder vmSwitchType(@Nullable String vmSwitchType) {
            $.vmSwitchType = vmSwitchType;
            return this;
        }

        public NetworkInterfaceResponse build() {
            return $;
        }
    }

}
