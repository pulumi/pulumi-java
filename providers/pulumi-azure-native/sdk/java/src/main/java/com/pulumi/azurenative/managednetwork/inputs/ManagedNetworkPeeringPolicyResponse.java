// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.managednetwork.inputs;

import com.pulumi.azurenative.managednetwork.inputs.ManagedNetworkPeeringPolicyPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The Managed Network Peering Policy resource
 * 
 */
public final class ManagedNetworkPeeringPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final ManagedNetworkPeeringPolicyResponse Empty = new ManagedNetworkPeeringPolicyResponse();

    /**
     * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Gets or sets the properties of a Managed Network Policy
     * 
     */
    @Import(name="properties")
    private @Nullable ManagedNetworkPeeringPolicyPropertiesResponse properties;

    public Optional<ManagedNetworkPeeringPolicyPropertiesResponse> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private ManagedNetworkPeeringPolicyResponse() {}

    private ManagedNetworkPeeringPolicyResponse(ManagedNetworkPeeringPolicyResponse $) {
        this.id = $.id;
        this.location = $.location;
        this.name = $.name;
        this.properties = $.properties;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedNetworkPeeringPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedNetworkPeeringPolicyResponse $;

        public Builder() {
            $ = new ManagedNetworkPeeringPolicyResponse();
        }

        public Builder(ManagedNetworkPeeringPolicyResponse defaults) {
            $ = new ManagedNetworkPeeringPolicyResponse(Objects.requireNonNull(defaults));
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder properties(@Nullable ManagedNetworkPeeringPolicyPropertiesResponse properties) {
            $.properties = properties;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public ManagedNetworkPeeringPolicyResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
