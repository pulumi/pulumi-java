// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A custom alert rule that checks if a value (depends on the custom alert type) is allowed.
 * 
 */
public final class AllowlistCustomAlertRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AllowlistCustomAlertRuleArgs Empty = new AllowlistCustomAlertRuleArgs();

    /**
     * The values to allow. The format of the values depends on the rule type.
     * 
     */
    @Import(name="allowlistValues", required=true)
    private Output<List<String>> allowlistValues;

    /**
     * @return The values to allow. The format of the values depends on the rule type.
     * 
     */
    public Output<List<String>> allowlistValues() {
        return this.allowlistValues;
    }

    /**
     * Status of the custom alert.
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return Status of the custom alert.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * The type of the custom alert rule.
     * Expected value is &#39;AllowlistCustomAlertRule&#39;.
     * 
     */
    @Import(name="ruleType", required=true)
    private Output<String> ruleType;

    /**
     * @return The type of the custom alert rule.
     * Expected value is &#39;AllowlistCustomAlertRule&#39;.
     * 
     */
    public Output<String> ruleType() {
        return this.ruleType;
    }

    private AllowlistCustomAlertRuleArgs() {}

    private AllowlistCustomAlertRuleArgs(AllowlistCustomAlertRuleArgs $) {
        this.allowlistValues = $.allowlistValues;
        this.isEnabled = $.isEnabled;
        this.ruleType = $.ruleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AllowlistCustomAlertRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AllowlistCustomAlertRuleArgs $;

        public Builder() {
            $ = new AllowlistCustomAlertRuleArgs();
        }

        public Builder(AllowlistCustomAlertRuleArgs defaults) {
            $ = new AllowlistCustomAlertRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowlistValues The values to allow. The format of the values depends on the rule type.
         * 
         * @return builder
         * 
         */
        public Builder allowlistValues(Output<List<String>> allowlistValues) {
            $.allowlistValues = allowlistValues;
            return this;
        }

        /**
         * @param allowlistValues The values to allow. The format of the values depends on the rule type.
         * 
         * @return builder
         * 
         */
        public Builder allowlistValues(List<String> allowlistValues) {
            return allowlistValues(Output.of(allowlistValues));
        }

        /**
         * @param allowlistValues The values to allow. The format of the values depends on the rule type.
         * 
         * @return builder
         * 
         */
        public Builder allowlistValues(String... allowlistValues) {
            return allowlistValues(List.of(allowlistValues));
        }

        /**
         * @param isEnabled Status of the custom alert.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Status of the custom alert.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param ruleType The type of the custom alert rule.
         * Expected value is &#39;AllowlistCustomAlertRule&#39;.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(Output<String> ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        /**
         * @param ruleType The type of the custom alert rule.
         * Expected value is &#39;AllowlistCustomAlertRule&#39;.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(String ruleType) {
            return ruleType(Output.of(ruleType));
        }

        public AllowlistCustomAlertRuleArgs build() {
            $.allowlistValues = Objects.requireNonNull($.allowlistValues, "expected parameter 'allowlistValues' to be non-null");
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            $.ruleType = Codegen.stringProp("ruleType").output().arg($.ruleType).require();
            return $;
        }
    }

}
