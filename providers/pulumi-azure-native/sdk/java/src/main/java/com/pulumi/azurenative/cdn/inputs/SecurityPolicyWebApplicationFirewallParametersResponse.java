// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.inputs.ResourceReferenceResponse;
import com.pulumi.azurenative.cdn.inputs.SecurityPolicyWebApplicationFirewallAssociationResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The json object containing security policy waf parameters
 * 
 */
public final class SecurityPolicyWebApplicationFirewallParametersResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecurityPolicyWebApplicationFirewallParametersResponse Empty = new SecurityPolicyWebApplicationFirewallParametersResponse();

    /**
     * Waf associations
     * 
     */
    @Import(name="associations")
    private @Nullable List<SecurityPolicyWebApplicationFirewallAssociationResponse> associations;

    /**
     * @return Waf associations
     * 
     */
    public Optional<List<SecurityPolicyWebApplicationFirewallAssociationResponse>> associations() {
        return Optional.ofNullable(this.associations);
    }

    /**
     * The type of the Security policy to create.
     * Expected value is &#39;WebApplicationFirewall&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of the Security policy to create.
     * Expected value is &#39;WebApplicationFirewall&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="wafPolicy")
    private @Nullable ResourceReferenceResponse wafPolicy;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<ResourceReferenceResponse> wafPolicy() {
        return Optional.ofNullable(this.wafPolicy);
    }

    private SecurityPolicyWebApplicationFirewallParametersResponse() {}

    private SecurityPolicyWebApplicationFirewallParametersResponse(SecurityPolicyWebApplicationFirewallParametersResponse $) {
        this.associations = $.associations;
        this.type = $.type;
        this.wafPolicy = $.wafPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyWebApplicationFirewallParametersResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyWebApplicationFirewallParametersResponse $;

        public Builder() {
            $ = new SecurityPolicyWebApplicationFirewallParametersResponse();
        }

        public Builder(SecurityPolicyWebApplicationFirewallParametersResponse defaults) {
            $ = new SecurityPolicyWebApplicationFirewallParametersResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param associations Waf associations
         * 
         * @return builder
         * 
         */
        public Builder associations(@Nullable List<SecurityPolicyWebApplicationFirewallAssociationResponse> associations) {
            $.associations = associations;
            return this;
        }

        /**
         * @param associations Waf associations
         * 
         * @return builder
         * 
         */
        public Builder associations(SecurityPolicyWebApplicationFirewallAssociationResponse... associations) {
            return associations(List.of(associations));
        }

        /**
         * @param type The type of the Security policy to create.
         * Expected value is &#39;WebApplicationFirewall&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param wafPolicy Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder wafPolicy(@Nullable ResourceReferenceResponse wafPolicy) {
            $.wafPolicy = wafPolicy;
            return this;
        }

        public SecurityPolicyWebApplicationFirewallParametersResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
