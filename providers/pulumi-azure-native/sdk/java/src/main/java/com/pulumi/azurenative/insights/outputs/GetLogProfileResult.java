// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.outputs;

import com.pulumi.azurenative.insights.outputs.RetentionPolicyResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLogProfileResult {
    /**
     * the categories of the logs. These categories are created as is convenient to the user. Some values are: 'Write', 'Delete', and/or 'Action.'
     * 
     */
    private final List<String> categories;
    /**
     * Azure resource Id
     * 
     */
    private final String id;
    /**
     * Resource location
     * 
     */
    private final String location;
    /**
     * List of regions for which Activity Log events should be stored or streamed. It is a comma separated list of valid ARM locations including the 'global' location.
     * 
     */
    private final List<String> locations;
    /**
     * Azure resource name
     * 
     */
    private final String name;
    /**
     * the retention policy for the events in the log.
     * 
     */
    private final RetentionPolicyResponse retentionPolicy;
    /**
     * The service bus rule ID of the service bus namespace in which you would like to have Event Hubs created for streaming the Activity Log. The rule ID is of the format: '{service bus resource ID}/authorizationrules/{key name}'.
     * 
     */
    private final @Nullable String serviceBusRuleId;
    /**
     * the resource id of the storage account to which you would like to send the Activity Log.
     * 
     */
    private final @Nullable String storageAccountId;
    /**
     * Resource tags
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Azure resource type
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetLogProfileResult(
        @CustomType.Parameter("categories") List<String> categories,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("locations") List<String> locations,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("retentionPolicy") RetentionPolicyResponse retentionPolicy,
        @CustomType.Parameter("serviceBusRuleId") @Nullable String serviceBusRuleId,
        @CustomType.Parameter("storageAccountId") @Nullable String storageAccountId,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.categories = categories;
        this.id = id;
        this.location = location;
        this.locations = locations;
        this.name = name;
        this.retentionPolicy = retentionPolicy;
        this.serviceBusRuleId = serviceBusRuleId;
        this.storageAccountId = storageAccountId;
        this.tags = tags;
        this.type = type;
    }

    /**
     * the categories of the logs. These categories are created as is convenient to the user. Some values are: 'Write', 'Delete', and/or 'Action.'
     * 
    */
    public List<String> categories() {
        return this.categories;
    }
    /**
     * Azure resource Id
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * Resource location
     * 
    */
    public String location() {
        return this.location;
    }
    /**
     * List of regions for which Activity Log events should be stored or streamed. It is a comma separated list of valid ARM locations including the 'global' location.
     * 
    */
    public List<String> locations() {
        return this.locations;
    }
    /**
     * Azure resource name
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * the retention policy for the events in the log.
     * 
    */
    public RetentionPolicyResponse retentionPolicy() {
        return this.retentionPolicy;
    }
    /**
     * The service bus rule ID of the service bus namespace in which you would like to have Event Hubs created for streaming the Activity Log. The rule ID is of the format: '{service bus resource ID}/authorizationrules/{key name}'.
     * 
    */
    public Optional<String> serviceBusRuleId() {
        return Optional.ofNullable(this.serviceBusRuleId);
    }
    /**
     * the resource id of the storage account to which you would like to send the Activity Log.
     * 
    */
    public Optional<String> storageAccountId() {
        return Optional.ofNullable(this.storageAccountId);
    }
    /**
     * Resource tags
     * 
    */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Azure resource type
     * 
    */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogProfileResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> categories;
        private String id;
        private String location;
        private List<String> locations;
        private String name;
        private RetentionPolicyResponse retentionPolicy;
        private @Nullable String serviceBusRuleId;
        private @Nullable String storageAccountId;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLogProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categories = defaults.categories;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.locations = defaults.locations;
    	      this.name = defaults.name;
    	      this.retentionPolicy = defaults.retentionPolicy;
    	      this.serviceBusRuleId = defaults.serviceBusRuleId;
    	      this.storageAccountId = defaults.storageAccountId;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder categories(List<String> categories) {
            this.categories = Objects.requireNonNull(categories);
            return this;
        }
        public Builder categories(String... categories) {
            return categories(List.of(categories));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder locations(List<String> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder retentionPolicy(RetentionPolicyResponse retentionPolicy) {
            this.retentionPolicy = Objects.requireNonNull(retentionPolicy);
            return this;
        }
        public Builder serviceBusRuleId(@Nullable String serviceBusRuleId) {
            this.serviceBusRuleId = serviceBusRuleId;
            return this;
        }
        public Builder storageAccountId(@Nullable String storageAccountId) {
            this.storageAccountId = storageAccountId;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetLogProfileResult build() {
            return new GetLogProfileResult(categories, id, location, locations, name, retentionPolicy, serviceBusRuleId, storageAccountId, tags, type);
        }
    }
}
