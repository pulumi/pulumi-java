// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.azurenative.documentdb.inputs.MongoIndexKeysArgs;
import com.pulumi.azurenative.documentdb.inputs.MongoIndexOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Cosmos DB MongoDB collection index key
 * 
 */
public final class MongoIndexArgs extends com.pulumi.resources.ResourceArgs {

    public static final MongoIndexArgs Empty = new MongoIndexArgs();

    /**
     * Cosmos DB MongoDB collection index keys
     * 
     */
    @Import(name="key")
    private @Nullable Output<MongoIndexKeysArgs> key;

    /**
     * @return Cosmos DB MongoDB collection index keys
     * 
     */
    public Optional<Output<MongoIndexKeysArgs>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Cosmos DB MongoDB collection index key options
     * 
     */
    @Import(name="options")
    private @Nullable Output<MongoIndexOptionsArgs> options;

    /**
     * @return Cosmos DB MongoDB collection index key options
     * 
     */
    public Optional<Output<MongoIndexOptionsArgs>> options() {
        return Optional.ofNullable(this.options);
    }

    private MongoIndexArgs() {}

    private MongoIndexArgs(MongoIndexArgs $) {
        this.key = $.key;
        this.options = $.options;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MongoIndexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MongoIndexArgs $;

        public Builder() {
            $ = new MongoIndexArgs();
        }

        public Builder(MongoIndexArgs defaults) {
            $ = new MongoIndexArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param key Cosmos DB MongoDB collection index keys
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<MongoIndexKeysArgs> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Cosmos DB MongoDB collection index keys
         * 
         * @return builder
         * 
         */
        public Builder key(MongoIndexKeysArgs key) {
            return key(Output.of(key));
        }

        /**
         * @param options Cosmos DB MongoDB collection index key options
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable Output<MongoIndexOptionsArgs> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options Cosmos DB MongoDB collection index key options
         * 
         * @return builder
         * 
         */
        public Builder options(MongoIndexOptionsArgs options) {
            return options(Output.of(options));
        }

        public MongoIndexArgs build() {
            return $;
        }
    }

}
