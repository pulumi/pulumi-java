// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The policy definition group.
 * 
 */
public final class PolicyDefinitionGroupResponse extends com.pulumi.resources.InvokeArgs {

    public static final PolicyDefinitionGroupResponse Empty = new PolicyDefinitionGroupResponse();

    /**
     * A resource ID of a resource that contains additional metadata about the group.
     * 
     */
    @Import(name="additionalMetadataId")
    private @Nullable String additionalMetadataId;

    public Optional<String> additionalMetadataId() {
        return Optional.ofNullable(this.additionalMetadataId);
    }

    /**
     * The group&#39;s category.
     * 
     */
    @Import(name="category")
    private @Nullable String category;

    public Optional<String> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * The group&#39;s description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The group&#39;s display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The name of the group.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    private PolicyDefinitionGroupResponse() {}

    private PolicyDefinitionGroupResponse(PolicyDefinitionGroupResponse $) {
        this.additionalMetadataId = $.additionalMetadataId;
        this.category = $.category;
        this.description = $.description;
        this.displayName = $.displayName;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyDefinitionGroupResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyDefinitionGroupResponse $;

        public Builder() {
            $ = new PolicyDefinitionGroupResponse();
        }

        public Builder(PolicyDefinitionGroupResponse defaults) {
            $ = new PolicyDefinitionGroupResponse(Objects.requireNonNull(defaults));
        }

        public Builder additionalMetadataId(@Nullable String additionalMetadataId) {
            $.additionalMetadataId = additionalMetadataId;
            return this;
        }

        public Builder category(@Nullable String category) {
            $.category = category;
            return this;
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public PolicyDefinitionGroupResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
