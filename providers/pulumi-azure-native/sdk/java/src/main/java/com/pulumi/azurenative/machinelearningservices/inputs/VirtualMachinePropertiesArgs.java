// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.VirtualMachineSshCredentialsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualMachinePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachinePropertiesArgs Empty = new VirtualMachinePropertiesArgs();

    /**
     * Public IP address of the virtual machine.
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * Admin credentials for virtual machine
     * 
     */
    @Import(name="administratorAccount")
    private @Nullable Output<VirtualMachineSshCredentialsArgs> administratorAccount;

    public Optional<Output<VirtualMachineSshCredentialsArgs>> administratorAccount() {
        return Optional.ofNullable(this.administratorAccount);
    }

    /**
     * Port open for ssh connections.
     * 
     */
    @Import(name="sshPort")
    private @Nullable Output<Integer> sshPort;

    public Optional<Output<Integer>> sshPort() {
        return Optional.ofNullable(this.sshPort);
    }

    /**
     * Virtual Machine size
     * 
     */
    @Import(name="virtualMachineSize")
    private @Nullable Output<String> virtualMachineSize;

    public Optional<Output<String>> virtualMachineSize() {
        return Optional.ofNullable(this.virtualMachineSize);
    }

    private VirtualMachinePropertiesArgs() {}

    private VirtualMachinePropertiesArgs(VirtualMachinePropertiesArgs $) {
        this.address = $.address;
        this.administratorAccount = $.administratorAccount;
        this.sshPort = $.sshPort;
        this.virtualMachineSize = $.virtualMachineSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachinePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachinePropertiesArgs $;

        public Builder() {
            $ = new VirtualMachinePropertiesArgs();
        }

        public Builder(VirtualMachinePropertiesArgs defaults) {
            $ = new VirtualMachinePropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        public Builder address(String address) {
            return address(Output.of(address));
        }

        public Builder administratorAccount(@Nullable Output<VirtualMachineSshCredentialsArgs> administratorAccount) {
            $.administratorAccount = administratorAccount;
            return this;
        }

        public Builder administratorAccount(VirtualMachineSshCredentialsArgs administratorAccount) {
            return administratorAccount(Output.of(administratorAccount));
        }

        public Builder sshPort(@Nullable Output<Integer> sshPort) {
            $.sshPort = sshPort;
            return this;
        }

        public Builder sshPort(Integer sshPort) {
            return sshPort(Output.of(sshPort));
        }

        public Builder virtualMachineSize(@Nullable Output<String> virtualMachineSize) {
            $.virtualMachineSize = virtualMachineSize;
            return this;
        }

        public Builder virtualMachineSize(String virtualMachineSize) {
            return virtualMachineSize(Output.of(virtualMachineSize));
        }

        public VirtualMachinePropertiesArgs build() {
            return $;
        }
    }

}
