// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.inputs;

import com.pulumi.azurenative.videoanalyzer.inputs.ResourceIdentityResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The details about the associated storage account.
 * 
 */
public final class StorageAccountResponse extends com.pulumi.resources.InvokeArgs {

    public static final StorageAccountResponse Empty = new StorageAccountResponse();

    /**
     * The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage).
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage).
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A managed identity that Video Analyzer will use to access the storage account.
     * 
     */
    @Import(name="identity")
    private @Nullable ResourceIdentityResponse identity;

    /**
     * @return A managed identity that Video Analyzer will use to access the storage account.
     * 
     */
    public Optional<ResourceIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The current status of the storage account mapping.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return The current status of the storage account mapping.
     * 
     */
    public String status() {
        return this.status;
    }

    private StorageAccountResponse() {}

    private StorageAccountResponse(StorageAccountResponse $) {
        this.id = $.id;
        this.identity = $.identity;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageAccountResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageAccountResponse $;

        public Builder() {
            $ = new StorageAccountResponse();
        }

        public Builder(StorageAccountResponse defaults) {
            $ = new StorageAccountResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage).
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param identity A managed identity that Video Analyzer will use to access the storage account.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable ResourceIdentityResponse identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param status The current status of the storage account mapping.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public StorageAccountResponse build() {
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
