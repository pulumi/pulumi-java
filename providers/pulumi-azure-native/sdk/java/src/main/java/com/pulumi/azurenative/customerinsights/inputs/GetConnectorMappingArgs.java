// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetConnectorMappingArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectorMappingArgs Empty = new GetConnectorMappingArgs();

    /**
     * The name of the connector.
     * 
     */
    @Import(name="connectorName", required=true)
    private Output<String> connectorName;

    /**
     * @return The name of the connector.
     * 
     */
    public Output<String> connectorName() {
        return this.connectorName;
    }

    /**
     * The name of the hub.
     * 
     */
    @Import(name="hubName", required=true)
    private Output<String> hubName;

    /**
     * @return The name of the hub.
     * 
     */
    public Output<String> hubName() {
        return this.hubName;
    }

    /**
     * The name of the connector mapping.
     * 
     */
    @Import(name="mappingName", required=true)
    private Output<String> mappingName;

    /**
     * @return The name of the connector mapping.
     * 
     */
    public Output<String> mappingName() {
        return this.mappingName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetConnectorMappingArgs() {}

    private GetConnectorMappingArgs(GetConnectorMappingArgs $) {
        this.connectorName = $.connectorName;
        this.hubName = $.hubName;
        this.mappingName = $.mappingName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectorMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectorMappingArgs $;

        public Builder() {
            $ = new GetConnectorMappingArgs();
        }

        public Builder(GetConnectorMappingArgs defaults) {
            $ = new GetConnectorMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectorName The name of the connector.
         * 
         * @return builder
         * 
         */
        public Builder connectorName(Output<String> connectorName) {
            $.connectorName = connectorName;
            return this;
        }

        /**
         * @param connectorName The name of the connector.
         * 
         * @return builder
         * 
         */
        public Builder connectorName(String connectorName) {
            return connectorName(Output.of(connectorName));
        }

        /**
         * @param hubName The name of the hub.
         * 
         * @return builder
         * 
         */
        public Builder hubName(Output<String> hubName) {
            $.hubName = hubName;
            return this;
        }

        /**
         * @param hubName The name of the hub.
         * 
         * @return builder
         * 
         */
        public Builder hubName(String hubName) {
            return hubName(Output.of(hubName));
        }

        /**
         * @param mappingName The name of the connector mapping.
         * 
         * @return builder
         * 
         */
        public Builder mappingName(Output<String> mappingName) {
            $.mappingName = mappingName;
            return this;
        }

        /**
         * @param mappingName The name of the connector mapping.
         * 
         * @return builder
         * 
         */
        public Builder mappingName(String mappingName) {
            return mappingName(Output.of(mappingName));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetConnectorMappingArgs build() {
            $.connectorName = Objects.requireNonNull($.connectorName, "expected parameter 'connectorName' to be non-null");
            $.hubName = Objects.requireNonNull($.hubName, "expected parameter 'hubName' to be non-null");
            $.mappingName = Objects.requireNonNull($.mappingName, "expected parameter 'mappingName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
