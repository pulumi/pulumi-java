// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.azurenative.datamigration.inputs.ReportableExceptionResponse;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class MigrateSqlServerSqlMITaskOutputLoginLevelResponse extends com.pulumi.resources.InvokeArgs {

    public static final MigrateSqlServerSqlMITaskOutputLoginLevelResponse Empty = new MigrateSqlServerSqlMITaskOutputLoginLevelResponse();

    /**
     * Login migration end time
     * 
     */
    @Import(name="endedOn", required=true)
      private final String endedOn;

    public String endedOn() {
        return this.endedOn;
    }

    /**
     * Login migration errors and warnings per login
     * 
     */
    @Import(name="exceptionsAndWarnings", required=true)
      private final List<ReportableExceptionResponse> exceptionsAndWarnings;

    public List<ReportableExceptionResponse> exceptionsAndWarnings() {
        return this.exceptionsAndWarnings;
    }

    /**
     * Result identifier
     * 
     */
    @Import(name="id", required=true)
      private final String id;

    public String id() {
        return this.id;
    }

    /**
     * Login name.
     * 
     */
    @Import(name="loginName", required=true)
      private final String loginName;

    public String loginName() {
        return this.loginName;
    }

    /**
     * Login migration progress message
     * 
     */
    @Import(name="message", required=true)
      private final String message;

    public String message() {
        return this.message;
    }

    /**
     * Result type
     * Expected value is &#39;LoginLevelOutput&#39;.
     * 
     */
    @Import(name="resultType", required=true)
      private final String resultType;

    public String resultType() {
        return this.resultType;
    }

    /**
     * Current stage of login
     * 
     */
    @Import(name="stage", required=true)
      private final String stage;

    public String stage() {
        return this.stage;
    }

    /**
     * Login migration start time
     * 
     */
    @Import(name="startedOn", required=true)
      private final String startedOn;

    public String startedOn() {
        return this.startedOn;
    }

    /**
     * Current state of login
     * 
     */
    @Import(name="state", required=true)
      private final String state;

    public String state() {
        return this.state;
    }

    public MigrateSqlServerSqlMITaskOutputLoginLevelResponse(
        String endedOn,
        List<ReportableExceptionResponse> exceptionsAndWarnings,
        String id,
        String loginName,
        String message,
        String resultType,
        String stage,
        String startedOn,
        String state) {
        this.endedOn = Objects.requireNonNull(endedOn, "expected parameter 'endedOn' to be non-null");
        this.exceptionsAndWarnings = Objects.requireNonNull(exceptionsAndWarnings, "expected parameter 'exceptionsAndWarnings' to be non-null");
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.loginName = Objects.requireNonNull(loginName, "expected parameter 'loginName' to be non-null");
        this.message = Objects.requireNonNull(message, "expected parameter 'message' to be non-null");
        this.resultType = Codegen.stringProp("resultType").arg(resultType).require();
        this.stage = Objects.requireNonNull(stage, "expected parameter 'stage' to be non-null");
        this.startedOn = Objects.requireNonNull(startedOn, "expected parameter 'startedOn' to be non-null");
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
    }

    private MigrateSqlServerSqlMITaskOutputLoginLevelResponse() {
        this.endedOn = null;
        this.exceptionsAndWarnings = List.of();
        this.id = null;
        this.loginName = null;
        this.message = null;
        this.resultType = null;
        this.stage = null;
        this.startedOn = null;
        this.state = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateSqlServerSqlMITaskOutputLoginLevelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String endedOn;
        private List<ReportableExceptionResponse> exceptionsAndWarnings;
        private String id;
        private String loginName;
        private String message;
        private String resultType;
        private String stage;
        private String startedOn;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrateSqlServerSqlMITaskOutputLoginLevelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endedOn = defaults.endedOn;
    	      this.exceptionsAndWarnings = defaults.exceptionsAndWarnings;
    	      this.id = defaults.id;
    	      this.loginName = defaults.loginName;
    	      this.message = defaults.message;
    	      this.resultType = defaults.resultType;
    	      this.stage = defaults.stage;
    	      this.startedOn = defaults.startedOn;
    	      this.state = defaults.state;
        }

        public Builder endedOn(String endedOn) {
            this.endedOn = Objects.requireNonNull(endedOn);
            return this;
        }
        public Builder exceptionsAndWarnings(List<ReportableExceptionResponse> exceptionsAndWarnings) {
            this.exceptionsAndWarnings = Objects.requireNonNull(exceptionsAndWarnings);
            return this;
        }
        public Builder exceptionsAndWarnings(ReportableExceptionResponse... exceptionsAndWarnings) {
            return exceptionsAndWarnings(List.of(exceptionsAndWarnings));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder loginName(String loginName) {
            this.loginName = Objects.requireNonNull(loginName);
            return this;
        }
        public Builder message(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }
        public Builder resultType(String resultType) {
            this.resultType = Objects.requireNonNull(resultType);
            return this;
        }
        public Builder stage(String stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }
        public Builder startedOn(String startedOn) {
            this.startedOn = Objects.requireNonNull(startedOn);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }        public MigrateSqlServerSqlMITaskOutputLoginLevelResponse build() {
            return new MigrateSqlServerSqlMITaskOutputLoginLevelResponse(endedOn, exceptionsAndWarnings, id, loginName, message, resultType, stage, startedOn, state);
        }
    }
}
