// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.inputs;

import com.pulumi.azurenative.appplatform.inputs.ApiPortalInstanceResponse;
import com.pulumi.azurenative.appplatform.inputs.ApiPortalResourceRequestsResponse;
import com.pulumi.azurenative.appplatform.inputs.SsoPropertiesResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * API portal properties payload
 * 
 */
public final class ApiPortalPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApiPortalPropertiesResponse Empty = new ApiPortalPropertiesResponse();

    /**
     * The array of resource Ids of gateway to integrate with API portal.
     * 
     */
    @Import(name="gatewayIds")
    private @Nullable List<String> gatewayIds;

    /**
     * @return The array of resource Ids of gateway to integrate with API portal.
     * 
     */
    public Optional<List<String>> gatewayIds() {
        return Optional.ofNullable(this.gatewayIds);
    }

    /**
     * Indicate if only https is allowed.
     * 
     */
    @Import(name="httpsOnly")
    private @Nullable Boolean httpsOnly;

    /**
     * @return Indicate if only https is allowed.
     * 
     */
    public Optional<Boolean> httpsOnly() {
        return Optional.ofNullable(this.httpsOnly);
    }

    /**
     * Collection of instances belong to API portal.
     * 
     */
    @Import(name="instances", required=true)
    private List<ApiPortalInstanceResponse> instances;

    /**
     * @return Collection of instances belong to API portal.
     * 
     */
    public List<ApiPortalInstanceResponse> instances() {
        return this.instances;
    }

    /**
     * State of the API portal.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return State of the API portal.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Indicates whether the API portal exposes endpoint.
     * 
     */
    @Import(name="public")
    private @Nullable Boolean public_;

    /**
     * @return Indicates whether the API portal exposes endpoint.
     * 
     */
    public Optional<Boolean> public_() {
        return Optional.ofNullable(this.public_);
    }

    /**
     * The requested resource quantity for required CPU and Memory.
     * 
     */
    @Import(name="resourceRequests", required=true)
    private ApiPortalResourceRequestsResponse resourceRequests;

    /**
     * @return The requested resource quantity for required CPU and Memory.
     * 
     */
    public ApiPortalResourceRequestsResponse resourceRequests() {
        return this.resourceRequests;
    }

    /**
     * Collection of OpenAPI source URL locations.
     * 
     */
    @Import(name="sourceUrls")
    private @Nullable List<String> sourceUrls;

    /**
     * @return Collection of OpenAPI source URL locations.
     * 
     */
    public Optional<List<String>> sourceUrls() {
        return Optional.ofNullable(this.sourceUrls);
    }

    /**
     * Single sign-on related configuration
     * 
     */
    @Import(name="ssoProperties")
    private @Nullable SsoPropertiesResponse ssoProperties;

    /**
     * @return Single sign-on related configuration
     * 
     */
    public Optional<SsoPropertiesResponse> ssoProperties() {
        return Optional.ofNullable(this.ssoProperties);
    }

    /**
     * URL of the API portal, exposed when &#39;public&#39; is true.
     * 
     */
    @Import(name="url", required=true)
    private String url;

    /**
     * @return URL of the API portal, exposed when &#39;public&#39; is true.
     * 
     */
    public String url() {
        return this.url;
    }

    private ApiPortalPropertiesResponse() {}

    private ApiPortalPropertiesResponse(ApiPortalPropertiesResponse $) {
        this.gatewayIds = $.gatewayIds;
        this.httpsOnly = $.httpsOnly;
        this.instances = $.instances;
        this.provisioningState = $.provisioningState;
        this.public_ = $.public_;
        this.resourceRequests = $.resourceRequests;
        this.sourceUrls = $.sourceUrls;
        this.ssoProperties = $.ssoProperties;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiPortalPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiPortalPropertiesResponse $;

        public Builder() {
            $ = new ApiPortalPropertiesResponse();
        }

        public Builder(ApiPortalPropertiesResponse defaults) {
            $ = new ApiPortalPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param gatewayIds The array of resource Ids of gateway to integrate with API portal.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIds(@Nullable List<String> gatewayIds) {
            $.gatewayIds = gatewayIds;
            return this;
        }

        /**
         * @param gatewayIds The array of resource Ids of gateway to integrate with API portal.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIds(String... gatewayIds) {
            return gatewayIds(List.of(gatewayIds));
        }

        /**
         * @param httpsOnly Indicate if only https is allowed.
         * 
         * @return builder
         * 
         */
        public Builder httpsOnly(@Nullable Boolean httpsOnly) {
            $.httpsOnly = httpsOnly;
            return this;
        }

        /**
         * @param instances Collection of instances belong to API portal.
         * 
         * @return builder
         * 
         */
        public Builder instances(List<ApiPortalInstanceResponse> instances) {
            $.instances = instances;
            return this;
        }

        /**
         * @param instances Collection of instances belong to API portal.
         * 
         * @return builder
         * 
         */
        public Builder instances(ApiPortalInstanceResponse... instances) {
            return instances(List.of(instances));
        }

        /**
         * @param provisioningState State of the API portal.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param public_ Indicates whether the API portal exposes endpoint.
         * 
         * @return builder
         * 
         */
        public Builder public_(@Nullable Boolean public_) {
            $.public_ = public_;
            return this;
        }

        /**
         * @param resourceRequests The requested resource quantity for required CPU and Memory.
         * 
         * @return builder
         * 
         */
        public Builder resourceRequests(ApiPortalResourceRequestsResponse resourceRequests) {
            $.resourceRequests = resourceRequests;
            return this;
        }

        /**
         * @param sourceUrls Collection of OpenAPI source URL locations.
         * 
         * @return builder
         * 
         */
        public Builder sourceUrls(@Nullable List<String> sourceUrls) {
            $.sourceUrls = sourceUrls;
            return this;
        }

        /**
         * @param sourceUrls Collection of OpenAPI source URL locations.
         * 
         * @return builder
         * 
         */
        public Builder sourceUrls(String... sourceUrls) {
            return sourceUrls(List.of(sourceUrls));
        }

        /**
         * @param ssoProperties Single sign-on related configuration
         * 
         * @return builder
         * 
         */
        public Builder ssoProperties(@Nullable SsoPropertiesResponse ssoProperties) {
            $.ssoProperties = ssoProperties;
            return this;
        }

        /**
         * @param url URL of the API portal, exposed when &#39;public&#39; is true.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            $.url = url;
            return this;
        }

        public ApiPortalPropertiesResponse build() {
            $.instances = Objects.requireNonNull($.instances, "expected parameter 'instances' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.resourceRequests = Objects.requireNonNull($.resourceRequests, "expected parameter 'resourceRequests' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
