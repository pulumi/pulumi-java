// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.CapabilityArgs;
import com.pulumi.azurenative.web.inputs.SkuCapacityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Description of a SKU for a scalable resource.
 * 
 */
public final class SkuDescriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SkuDescriptionArgs Empty = new SkuDescriptionArgs();

    /**
     * Capabilities of the SKU, e.g., is traffic manager enabled?
     * 
     */
    @Import(name="capabilities")
    private @Nullable Output<List<CapabilityArgs>> capabilities;

    public Optional<Output<List<CapabilityArgs>>> capabilities() {
        return Optional.ofNullable(this.capabilities);
    }

    /**
     * Current number of instances assigned to the resource.
     * 
     */
    @Import(name="capacity")
    private @Nullable Output<Integer> capacity;

    public Optional<Output<Integer>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * Family code of the resource SKU.
     * 
     */
    @Import(name="family")
    private @Nullable Output<String> family;

    public Optional<Output<String>> family() {
        return Optional.ofNullable(this.family);
    }

    /**
     * Locations of the SKU.
     * 
     */
    @Import(name="locations")
    private @Nullable Output<List<String>> locations;

    public Optional<Output<List<String>>> locations() {
        return Optional.ofNullable(this.locations);
    }

    /**
     * Name of the resource SKU.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Size specifier of the resource SKU.
     * 
     */
    @Import(name="size")
    private @Nullable Output<String> size;

    public Optional<Output<String>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * Min, max, and default scale values of the SKU.
     * 
     */
    @Import(name="skuCapacity")
    private @Nullable Output<SkuCapacityArgs> skuCapacity;

    public Optional<Output<SkuCapacityArgs>> skuCapacity() {
        return Optional.ofNullable(this.skuCapacity);
    }

    /**
     * Service tier of the resource SKU.
     * 
     */
    @Import(name="tier")
    private @Nullable Output<String> tier;

    public Optional<Output<String>> tier() {
        return Optional.ofNullable(this.tier);
    }

    private SkuDescriptionArgs() {}

    private SkuDescriptionArgs(SkuDescriptionArgs $) {
        this.capabilities = $.capabilities;
        this.capacity = $.capacity;
        this.family = $.family;
        this.locations = $.locations;
        this.name = $.name;
        this.size = $.size;
        this.skuCapacity = $.skuCapacity;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SkuDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SkuDescriptionArgs $;

        public Builder() {
            $ = new SkuDescriptionArgs();
        }

        public Builder(SkuDescriptionArgs defaults) {
            $ = new SkuDescriptionArgs(Objects.requireNonNull(defaults));
        }

        public Builder capabilities(@Nullable Output<List<CapabilityArgs>> capabilities) {
            $.capabilities = capabilities;
            return this;
        }

        public Builder capabilities(List<CapabilityArgs> capabilities) {
            return capabilities(Output.of(capabilities));
        }

        public Builder capabilities(CapabilityArgs... capabilities) {
            return capabilities(List.of(capabilities));
        }

        public Builder capacity(@Nullable Output<Integer> capacity) {
            $.capacity = capacity;
            return this;
        }

        public Builder capacity(Integer capacity) {
            return capacity(Output.of(capacity));
        }

        public Builder family(@Nullable Output<String> family) {
            $.family = family;
            return this;
        }

        public Builder family(String family) {
            return family(Output.of(family));
        }

        public Builder locations(@Nullable Output<List<String>> locations) {
            $.locations = locations;
            return this;
        }

        public Builder locations(List<String> locations) {
            return locations(Output.of(locations));
        }

        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder size(@Nullable Output<String> size) {
            $.size = size;
            return this;
        }

        public Builder size(String size) {
            return size(Output.of(size));
        }

        public Builder skuCapacity(@Nullable Output<SkuCapacityArgs> skuCapacity) {
            $.skuCapacity = skuCapacity;
            return this;
        }

        public Builder skuCapacity(SkuCapacityArgs skuCapacity) {
            return skuCapacity(Output.of(skuCapacity));
        }

        public Builder tier(@Nullable Output<String> tier) {
            $.tier = tier;
            return this;
        }

        public Builder tier(String tier) {
            return tier(Output.of(tier));
        }

        public SkuDescriptionArgs build() {
            return $;
        }
    }

}
