// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybridconnectivity.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListEndpointManagedProxyDetailsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListEndpointManagedProxyDetailsPlainArgs Empty = new ListEndpointManagedProxyDetailsPlainArgs();

    /**
     * The endpoint name.
     * 
     */
    @Import(name="endpointName", required=true)
    private String endpointName;

    /**
     * @return The endpoint name.
     * 
     */
    public String endpointName() {
        return this.endpointName;
    }

    /**
     * The target host name.
     * 
     */
    @Import(name="hostname")
    private @Nullable String hostname;

    /**
     * @return The target host name.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * The fully qualified Azure Resource manager identifier of the resource to be connected.
     * 
     */
    @Import(name="resourceUri", required=true)
    private String resourceUri;

    /**
     * @return The fully qualified Azure Resource manager identifier of the resource to be connected.
     * 
     */
    public String resourceUri() {
        return this.resourceUri;
    }

    /**
     * The name of the service.
     * 
     */
    @Import(name="service", required=true)
    private String service;

    /**
     * @return The name of the service.
     * 
     */
    public String service() {
        return this.service;
    }

    private ListEndpointManagedProxyDetailsPlainArgs() {}

    private ListEndpointManagedProxyDetailsPlainArgs(ListEndpointManagedProxyDetailsPlainArgs $) {
        this.endpointName = $.endpointName;
        this.hostname = $.hostname;
        this.resourceUri = $.resourceUri;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListEndpointManagedProxyDetailsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListEndpointManagedProxyDetailsPlainArgs $;

        public Builder() {
            $ = new ListEndpointManagedProxyDetailsPlainArgs();
        }

        public Builder(ListEndpointManagedProxyDetailsPlainArgs defaults) {
            $ = new ListEndpointManagedProxyDetailsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointName The endpoint name.
         * 
         * @return builder
         * 
         */
        public Builder endpointName(String endpointName) {
            $.endpointName = endpointName;
            return this;
        }

        /**
         * @param hostname The target host name.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable String hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be connected.
         * 
         * @return builder
         * 
         */
        public Builder resourceUri(String resourceUri) {
            $.resourceUri = resourceUri;
            return this;
        }

        /**
         * @param service The name of the service.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            $.service = service;
            return this;
        }

        public ListEndpointManagedProxyDetailsPlainArgs build() {
            $.endpointName = Objects.requireNonNull($.endpointName, "expected parameter 'endpointName' to be non-null");
            $.resourceUri = Objects.requireNonNull($.resourceUri, "expected parameter 'resourceUri' to be non-null");
            $.service = Objects.requireNonNull($.service, "expected parameter 'service' to be non-null");
            return $;
        }
    }

}
