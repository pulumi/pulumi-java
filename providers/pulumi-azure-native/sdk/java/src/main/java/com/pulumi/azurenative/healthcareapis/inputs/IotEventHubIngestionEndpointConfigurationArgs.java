// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.healthcareapis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Event Hub ingestion endpoint configuration
 * 
 */
public final class IotEventHubIngestionEndpointConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final IotEventHubIngestionEndpointConfigurationArgs Empty = new IotEventHubIngestionEndpointConfigurationArgs();

    /**
     * Consumer group of the event hub to connected to.
     * 
     */
    @Import(name="consumerGroup")
    private @Nullable Output<String> consumerGroup;

    /**
     * @return Consumer group of the event hub to connected to.
     * 
     */
    public Optional<Output<String>> consumerGroup() {
        return Optional.ofNullable(this.consumerGroup);
    }

    /**
     * Event Hub name to connect to.
     * 
     */
    @Import(name="eventHubName")
    private @Nullable Output<String> eventHubName;

    /**
     * @return Event Hub name to connect to.
     * 
     */
    public Optional<Output<String>> eventHubName() {
        return Optional.ofNullable(this.eventHubName);
    }

    /**
     * Fully qualified namespace of the Event Hub to connect to.
     * 
     */
    @Import(name="fullyQualifiedEventHubNamespace")
    private @Nullable Output<String> fullyQualifiedEventHubNamespace;

    /**
     * @return Fully qualified namespace of the Event Hub to connect to.
     * 
     */
    public Optional<Output<String>> fullyQualifiedEventHubNamespace() {
        return Optional.ofNullable(this.fullyQualifiedEventHubNamespace);
    }

    private IotEventHubIngestionEndpointConfigurationArgs() {}

    private IotEventHubIngestionEndpointConfigurationArgs(IotEventHubIngestionEndpointConfigurationArgs $) {
        this.consumerGroup = $.consumerGroup;
        this.eventHubName = $.eventHubName;
        this.fullyQualifiedEventHubNamespace = $.fullyQualifiedEventHubNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IotEventHubIngestionEndpointConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IotEventHubIngestionEndpointConfigurationArgs $;

        public Builder() {
            $ = new IotEventHubIngestionEndpointConfigurationArgs();
        }

        public Builder(IotEventHubIngestionEndpointConfigurationArgs defaults) {
            $ = new IotEventHubIngestionEndpointConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumerGroup Consumer group of the event hub to connected to.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroup(@Nullable Output<String> consumerGroup) {
            $.consumerGroup = consumerGroup;
            return this;
        }

        /**
         * @param consumerGroup Consumer group of the event hub to connected to.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroup(String consumerGroup) {
            return consumerGroup(Output.of(consumerGroup));
        }

        /**
         * @param eventHubName Event Hub name to connect to.
         * 
         * @return builder
         * 
         */
        public Builder eventHubName(@Nullable Output<String> eventHubName) {
            $.eventHubName = eventHubName;
            return this;
        }

        /**
         * @param eventHubName Event Hub name to connect to.
         * 
         * @return builder
         * 
         */
        public Builder eventHubName(String eventHubName) {
            return eventHubName(Output.of(eventHubName));
        }

        /**
         * @param fullyQualifiedEventHubNamespace Fully qualified namespace of the Event Hub to connect to.
         * 
         * @return builder
         * 
         */
        public Builder fullyQualifiedEventHubNamespace(@Nullable Output<String> fullyQualifiedEventHubNamespace) {
            $.fullyQualifiedEventHubNamespace = fullyQualifiedEventHubNamespace;
            return this;
        }

        /**
         * @param fullyQualifiedEventHubNamespace Fully qualified namespace of the Event Hub to connect to.
         * 
         * @return builder
         * 
         */
        public Builder fullyQualifiedEventHubNamespace(String fullyQualifiedEventHubNamespace) {
            return fullyQualifiedEventHubNamespace(Output.of(fullyQualifiedEventHubNamespace));
        }

        public IotEventHubIngestionEndpointConfigurationArgs build() {
            return $;
        }
    }

}
