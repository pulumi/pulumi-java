// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.InquiryValidationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details of an inquired protectable item.
 * 
 */
public final class WorkloadInquiryDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadInquiryDetailsArgs Empty = new WorkloadInquiryDetailsArgs();

    /**
     * Inquiry validation such as permissions and other backup validations.
     * 
     */
    @Import(name="inquiryValidation")
    private @Nullable Output<InquiryValidationArgs> inquiryValidation;

    /**
     * @return Inquiry validation such as permissions and other backup validations.
     * 
     */
    public Optional<Output<InquiryValidationArgs>> inquiryValidation() {
        return Optional.ofNullable(this.inquiryValidation);
    }

    /**
     * Contains the protectable item Count inside this Container.
     * 
     */
    @Import(name="itemCount")
    private @Nullable Output<Double> itemCount;

    /**
     * @return Contains the protectable item Count inside this Container.
     * 
     */
    public Optional<Output<Double>> itemCount() {
        return Optional.ofNullable(this.itemCount);
    }

    /**
     * Type of the Workload such as SQL, Oracle etc.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the Workload such as SQL, Oracle etc.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private WorkloadInquiryDetailsArgs() {}

    private WorkloadInquiryDetailsArgs(WorkloadInquiryDetailsArgs $) {
        this.inquiryValidation = $.inquiryValidation;
        this.itemCount = $.itemCount;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadInquiryDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadInquiryDetailsArgs $;

        public Builder() {
            $ = new WorkloadInquiryDetailsArgs();
        }

        public Builder(WorkloadInquiryDetailsArgs defaults) {
            $ = new WorkloadInquiryDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inquiryValidation Inquiry validation such as permissions and other backup validations.
         * 
         * @return builder
         * 
         */
        public Builder inquiryValidation(@Nullable Output<InquiryValidationArgs> inquiryValidation) {
            $.inquiryValidation = inquiryValidation;
            return this;
        }

        /**
         * @param inquiryValidation Inquiry validation such as permissions and other backup validations.
         * 
         * @return builder
         * 
         */
        public Builder inquiryValidation(InquiryValidationArgs inquiryValidation) {
            return inquiryValidation(Output.of(inquiryValidation));
        }

        /**
         * @param itemCount Contains the protectable item Count inside this Container.
         * 
         * @return builder
         * 
         */
        public Builder itemCount(@Nullable Output<Double> itemCount) {
            $.itemCount = itemCount;
            return this;
        }

        /**
         * @param itemCount Contains the protectable item Count inside this Container.
         * 
         * @return builder
         * 
         */
        public Builder itemCount(Double itemCount) {
            return itemCount(Output.of(itemCount));
        }

        /**
         * @param type Type of the Workload such as SQL, Oracle etc.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the Workload such as SQL, Oracle etc.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public WorkloadInquiryDetailsArgs build() {
            return $;
        }
    }

}
