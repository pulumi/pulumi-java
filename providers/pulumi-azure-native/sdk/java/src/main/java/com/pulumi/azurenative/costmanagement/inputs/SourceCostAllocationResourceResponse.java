// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Source resources for cost allocation
 * 
 */
public final class SourceCostAllocationResourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final SourceCostAllocationResourceResponse Empty = new SourceCostAllocationResourceResponse();

    /**
     * If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Type of resources contained in this cost allocation rule
     * 
     */
    @Import(name="resourceType", required=true)
    private String resourceType;

    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Source Resources for cost allocation. This list cannot contain more than 25 values.
     * 
     */
    @Import(name="values", required=true)
    private List<String> values;

    public List<String> values() {
        return this.values;
    }

    private SourceCostAllocationResourceResponse() {}

    private SourceCostAllocationResourceResponse(SourceCostAllocationResourceResponse $) {
        this.name = $.name;
        this.resourceType = $.resourceType;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceCostAllocationResourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceCostAllocationResourceResponse $;

        public Builder() {
            $ = new SourceCostAllocationResourceResponse();
        }

        public Builder(SourceCostAllocationResourceResponse defaults) {
            $ = new SourceCostAllocationResourceResponse(Objects.requireNonNull(defaults));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder resourceType(String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder values(List<String> values) {
            $.values = values;
            return this;
        }

        public Builder values(String... values) {
            return values(List.of(values));
        }

        public SourceCostAllocationResourceResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            $.values = Objects.requireNonNull($.values, "expected parameter 'values' to be non-null");
            return $;
        }
    }

}
