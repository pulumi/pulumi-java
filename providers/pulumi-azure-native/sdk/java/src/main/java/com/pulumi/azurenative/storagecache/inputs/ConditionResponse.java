// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagecache.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Outstanding conditions that will need to be resolved.
 * 
 */
public final class ConditionResponse extends com.pulumi.resources.InvokeArgs {

    public static final ConditionResponse Empty = new ConditionResponse();

    /**
     * The issue requiring attention.
     * 
     */
    @Import(name="message", required=true)
      private final String message;

    public String message() {
        return this.message;
    }

    /**
     * The time when the condition was raised.
     * 
     */
    @Import(name="timestamp", required=true)
      private final String timestamp;

    public String timestamp() {
        return this.timestamp;
    }

    public ConditionResponse(
        String message,
        String timestamp) {
        this.message = Objects.requireNonNull(message, "expected parameter 'message' to be non-null");
        this.timestamp = Objects.requireNonNull(timestamp, "expected parameter 'timestamp' to be non-null");
    }

    private ConditionResponse() {
        this.message = null;
        this.timestamp = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String message;
        private String timestamp;

        public Builder() {
    	      // Empty
        }

        public Builder(ConditionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.message = defaults.message;
    	      this.timestamp = defaults.timestamp;
        }

        public Builder message(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }
        public Builder timestamp(String timestamp) {
            this.timestamp = Objects.requireNonNull(timestamp);
            return this;
        }        public ConditionResponse build() {
            return new ConditionResponse(message, timestamp);
        }
    }
}
