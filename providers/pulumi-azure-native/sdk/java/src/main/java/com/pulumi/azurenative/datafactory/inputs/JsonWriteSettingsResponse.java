// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Json write settings.
 * 
 */
public final class JsonWriteSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final JsonWriteSettingsResponse Empty = new JsonWriteSettingsResponse();

    /**
     * File pattern of JSON. This setting controls the way a collection of JSON objects will be treated. The default value is &#39;setOfObjects&#39;. It is case-sensitive.
     * 
     */
    @Import(name="filePattern")
    private @Nullable Object filePattern;

    /**
     * @return File pattern of JSON. This setting controls the way a collection of JSON objects will be treated. The default value is &#39;setOfObjects&#39;. It is case-sensitive.
     * 
     */
    public Optional<Object> filePattern() {
        return Optional.ofNullable(this.filePattern);
    }

    /**
     * The write setting type.
     * Expected value is &#39;JsonWriteSettings&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The write setting type.
     * Expected value is &#39;JsonWriteSettings&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    private JsonWriteSettingsResponse() {}

    private JsonWriteSettingsResponse(JsonWriteSettingsResponse $) {
        this.filePattern = $.filePattern;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JsonWriteSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JsonWriteSettingsResponse $;

        public Builder() {
            $ = new JsonWriteSettingsResponse();
        }

        public Builder(JsonWriteSettingsResponse defaults) {
            $ = new JsonWriteSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param filePattern File pattern of JSON. This setting controls the way a collection of JSON objects will be treated. The default value is &#39;setOfObjects&#39;. It is case-sensitive.
         * 
         * @return builder
         * 
         */
        public Builder filePattern(@Nullable Object filePattern) {
            $.filePattern = filePattern;
            return this;
        }

        /**
         * @param type The write setting type.
         * Expected value is &#39;JsonWriteSettings&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public JsonWriteSettingsResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
