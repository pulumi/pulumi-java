// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.inputs;

import com.pulumi.azurenative.batch.inputs.InboundNatPoolResponse;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class PoolEndpointConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final PoolEndpointConfigurationResponse Empty = new PoolEndpointConfigurationResponse();

    /**
     * The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.
     * 
     */
    @Import(name="inboundNatPools", required=true)
    private List<InboundNatPoolResponse> inboundNatPools;

    public List<InboundNatPoolResponse> inboundNatPools() {
        return this.inboundNatPools;
    }

    private PoolEndpointConfigurationResponse() {}

    private PoolEndpointConfigurationResponse(PoolEndpointConfigurationResponse $) {
        this.inboundNatPools = $.inboundNatPools;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PoolEndpointConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PoolEndpointConfigurationResponse $;

        public Builder() {
            $ = new PoolEndpointConfigurationResponse();
        }

        public Builder(PoolEndpointConfigurationResponse defaults) {
            $ = new PoolEndpointConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder inboundNatPools(List<InboundNatPoolResponse> inboundNatPools) {
            $.inboundNatPools = inboundNatPools;
            return this;
        }

        public Builder inboundNatPools(InboundNatPoolResponse... inboundNatPools) {
            return inboundNatPools(List.of(inboundNatPools));
        }

        public PoolEndpointConfigurationResponse build() {
            $.inboundNatPools = Objects.requireNonNull($.inboundNatPools, "expected parameter 'inboundNatPools' to be non-null");
            return $;
        }
    }

}
