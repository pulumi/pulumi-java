// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datadog;

import com.pulumi.azurenative.datadog.inputs.IdentityPropertiesArgs;
import com.pulumi.azurenative.datadog.inputs.MonitorPropertiesArgs;
import com.pulumi.azurenative.datadog.inputs.ResourceSkuArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MonitorArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorArgs Empty = new MonitorArgs();

    @Import(name="identity")
      private final @Nullable Output<IdentityPropertiesArgs> identity;

    public Output<IdentityPropertiesArgs> identity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Monitor resource name
     * 
     */
    @Import(name="monitorName")
      private final @Nullable Output<String> monitorName;

    public Output<String> monitorName() {
        return this.monitorName == null ? Codegen.empty() : this.monitorName;
    }

    /**
     * Properties specific to the monitor resource.
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<MonitorPropertiesArgs> properties;

    public Output<MonitorPropertiesArgs> properties() {
        return this.properties == null ? Codegen.empty() : this.properties;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    @Import(name="sku")
      private final @Nullable Output<ResourceSkuArgs> sku;

    public Output<ResourceSkuArgs> sku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public MonitorArgs(
        @Nullable Output<IdentityPropertiesArgs> identity,
        @Nullable Output<String> location,
        @Nullable Output<String> monitorName,
        @Nullable Output<MonitorPropertiesArgs> properties,
        Output<String> resourceGroupName,
        @Nullable Output<ResourceSkuArgs> sku,
        @Nullable Output<Map<String,String>> tags) {
        this.identity = identity;
        this.location = location;
        this.monitorName = monitorName;
        this.properties = properties;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sku = sku;
        this.tags = tags;
    }

    private MonitorArgs() {
        this.identity = Codegen.empty();
        this.location = Codegen.empty();
        this.monitorName = Codegen.empty();
        this.properties = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.sku = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<IdentityPropertiesArgs> identity;
        private @Nullable Output<String> location;
        private @Nullable Output<String> monitorName;
        private @Nullable Output<MonitorPropertiesArgs> properties;
        private Output<String> resourceGroupName;
        private @Nullable Output<ResourceSkuArgs> sku;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.monitorName = defaults.monitorName;
    	      this.properties = defaults.properties;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
        }

        public Builder identity(@Nullable Output<IdentityPropertiesArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable IdentityPropertiesArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder monitorName(@Nullable Output<String> monitorName) {
            this.monitorName = monitorName;
            return this;
        }
        public Builder monitorName(@Nullable String monitorName) {
            this.monitorName = Codegen.ofNullable(monitorName);
            return this;
        }
        public Builder properties(@Nullable Output<MonitorPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }
        public Builder properties(@Nullable MonitorPropertiesArgs properties) {
            this.properties = Codegen.ofNullable(properties);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder sku(@Nullable Output<ResourceSkuArgs> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable ResourceSkuArgs sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public MonitorArgs build() {
            return new MonitorArgs(identity, location, monitorName, properties, resourceGroupName, sku, tags);
        }
    }
}
