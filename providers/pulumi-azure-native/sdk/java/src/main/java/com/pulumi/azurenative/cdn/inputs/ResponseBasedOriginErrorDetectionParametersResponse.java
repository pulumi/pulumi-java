// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.inputs.HttpErrorRangeParametersResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The JSON object that contains the properties to determine origin health using real requests/responses.
 * 
 */
public final class ResponseBasedOriginErrorDetectionParametersResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResponseBasedOriginErrorDetectionParametersResponse Empty = new ResponseBasedOriginErrorDetectionParametersResponse();

    /**
     * The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
     * 
     */
    @Import(name="httpErrorRanges")
    private @Nullable List<HttpErrorRangeParametersResponse> httpErrorRanges;

    public Optional<List<HttpErrorRangeParametersResponse>> httpErrorRanges() {
        return Optional.ofNullable(this.httpErrorRanges);
    }

    /**
     * Type of response errors for real user requests for which origin will be deemed unhealthy
     * 
     */
    @Import(name="responseBasedDetectedErrorTypes")
    private @Nullable String responseBasedDetectedErrorTypes;

    public Optional<String> responseBasedDetectedErrorTypes() {
        return Optional.ofNullable(this.responseBasedDetectedErrorTypes);
    }

    /**
     * The percentage of failed requests in the sample where failover should trigger.
     * 
     */
    @Import(name="responseBasedFailoverThresholdPercentage")
    private @Nullable Integer responseBasedFailoverThresholdPercentage;

    public Optional<Integer> responseBasedFailoverThresholdPercentage() {
        return Optional.ofNullable(this.responseBasedFailoverThresholdPercentage);
    }

    private ResponseBasedOriginErrorDetectionParametersResponse() {}

    private ResponseBasedOriginErrorDetectionParametersResponse(ResponseBasedOriginErrorDetectionParametersResponse $) {
        this.httpErrorRanges = $.httpErrorRanges;
        this.responseBasedDetectedErrorTypes = $.responseBasedDetectedErrorTypes;
        this.responseBasedFailoverThresholdPercentage = $.responseBasedFailoverThresholdPercentage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResponseBasedOriginErrorDetectionParametersResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResponseBasedOriginErrorDetectionParametersResponse $;

        public Builder() {
            $ = new ResponseBasedOriginErrorDetectionParametersResponse();
        }

        public Builder(ResponseBasedOriginErrorDetectionParametersResponse defaults) {
            $ = new ResponseBasedOriginErrorDetectionParametersResponse(Objects.requireNonNull(defaults));
        }

        public Builder httpErrorRanges(@Nullable List<HttpErrorRangeParametersResponse> httpErrorRanges) {
            $.httpErrorRanges = httpErrorRanges;
            return this;
        }

        public Builder httpErrorRanges(HttpErrorRangeParametersResponse... httpErrorRanges) {
            return httpErrorRanges(List.of(httpErrorRanges));
        }

        public Builder responseBasedDetectedErrorTypes(@Nullable String responseBasedDetectedErrorTypes) {
            $.responseBasedDetectedErrorTypes = responseBasedDetectedErrorTypes;
            return this;
        }

        public Builder responseBasedFailoverThresholdPercentage(@Nullable Integer responseBasedFailoverThresholdPercentage) {
            $.responseBasedFailoverThresholdPercentage = responseBasedFailoverThresholdPercentage;
            return this;
        }

        public ResponseBasedOriginErrorDetectionParametersResponse build() {
            return $;
        }
    }

}
