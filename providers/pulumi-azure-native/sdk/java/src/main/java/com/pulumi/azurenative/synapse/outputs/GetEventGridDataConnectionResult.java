// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.outputs;

import com.pulumi.azurenative.synapse.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEventGridDataConnectionResult {
    /**
     * @return The name of blob storage event type to process.
     * 
     */
    private final @Nullable String blobStorageEventType;
    /**
     * @return The event hub consumer group.
     * 
     */
    private final String consumerGroup;
    /**
     * @return The data format of the message. Optionally the data format can be added to each message.
     * 
     */
    private final @Nullable String dataFormat;
    /**
     * @return The resource ID where the event grid is configured to send events.
     * 
     */
    private final String eventHubResourceId;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * @return A Boolean value that, if set to true, indicates that ingestion should ignore the first record of every file
     * 
     */
    private final @Nullable Boolean ignoreFirstRecord;
    /**
     * @return Kind of the endpoint for the data connection
     * Expected value is &#39;EventGrid&#39;.
     * 
     */
    private final String kind;
    /**
     * @return Resource location.
     * 
     */
    private final @Nullable String location;
    /**
     * @return The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.
     * 
     */
    private final @Nullable String mappingRuleName;
    /**
     * @return The name of the resource
     * 
     */
    private final String name;
    /**
     * @return The provisioned state of the resource.
     * 
     */
    private final String provisioningState;
    /**
     * @return The resource ID of the storage account where the data resides.
     * 
     */
    private final String storageAccountResourceId;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * @return The table where the data should be ingested. Optionally the table information can be added to each message.
     * 
     */
    private final @Nullable String tableName;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetEventGridDataConnectionResult(
        @CustomType.Parameter("blobStorageEventType") @Nullable String blobStorageEventType,
        @CustomType.Parameter("consumerGroup") String consumerGroup,
        @CustomType.Parameter("dataFormat") @Nullable String dataFormat,
        @CustomType.Parameter("eventHubResourceId") String eventHubResourceId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ignoreFirstRecord") @Nullable Boolean ignoreFirstRecord,
        @CustomType.Parameter("kind") String kind,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("mappingRuleName") @Nullable String mappingRuleName,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("storageAccountResourceId") String storageAccountResourceId,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("tableName") @Nullable String tableName,
        @CustomType.Parameter("type") String type) {
        this.blobStorageEventType = blobStorageEventType;
        this.consumerGroup = consumerGroup;
        this.dataFormat = dataFormat;
        this.eventHubResourceId = eventHubResourceId;
        this.id = id;
        this.ignoreFirstRecord = ignoreFirstRecord;
        this.kind = kind;
        this.location = location;
        this.mappingRuleName = mappingRuleName;
        this.name = name;
        this.provisioningState = provisioningState;
        this.storageAccountResourceId = storageAccountResourceId;
        this.systemData = systemData;
        this.tableName = tableName;
        this.type = type;
    }

    /**
     * @return The name of blob storage event type to process.
     * 
     */
    public Optional<String> blobStorageEventType() {
        return Optional.ofNullable(this.blobStorageEventType);
    }
    /**
     * @return The event hub consumer group.
     * 
     */
    public String consumerGroup() {
        return this.consumerGroup;
    }
    /**
     * @return The data format of the message. Optionally the data format can be added to each message.
     * 
     */
    public Optional<String> dataFormat() {
        return Optional.ofNullable(this.dataFormat);
    }
    /**
     * @return The resource ID where the event grid is configured to send events.
     * 
     */
    public String eventHubResourceId() {
        return this.eventHubResourceId;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A Boolean value that, if set to true, indicates that ingestion should ignore the first record of every file
     * 
     */
    public Optional<Boolean> ignoreFirstRecord() {
        return Optional.ofNullable(this.ignoreFirstRecord);
    }
    /**
     * @return Kind of the endpoint for the data connection
     * Expected value is &#39;EventGrid&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.
     * 
     */
    public Optional<String> mappingRuleName() {
        return Optional.ofNullable(this.mappingRuleName);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioned state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The resource ID of the storage account where the data resides.
     * 
     */
    public String storageAccountResourceId() {
        return this.storageAccountResourceId;
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The table where the data should be ingested. Optionally the table information can be added to each message.
     * 
     */
    public Optional<String> tableName() {
        return Optional.ofNullable(this.tableName);
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventGridDataConnectionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String blobStorageEventType;
        private String consumerGroup;
        private @Nullable String dataFormat;
        private String eventHubResourceId;
        private String id;
        private @Nullable Boolean ignoreFirstRecord;
        private String kind;
        private @Nullable String location;
        private @Nullable String mappingRuleName;
        private String name;
        private String provisioningState;
        private String storageAccountResourceId;
        private SystemDataResponse systemData;
        private @Nullable String tableName;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEventGridDataConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blobStorageEventType = defaults.blobStorageEventType;
    	      this.consumerGroup = defaults.consumerGroup;
    	      this.dataFormat = defaults.dataFormat;
    	      this.eventHubResourceId = defaults.eventHubResourceId;
    	      this.id = defaults.id;
    	      this.ignoreFirstRecord = defaults.ignoreFirstRecord;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.mappingRuleName = defaults.mappingRuleName;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.storageAccountResourceId = defaults.storageAccountResourceId;
    	      this.systemData = defaults.systemData;
    	      this.tableName = defaults.tableName;
    	      this.type = defaults.type;
        }

        public Builder blobStorageEventType(@Nullable String blobStorageEventType) {
            this.blobStorageEventType = blobStorageEventType;
            return this;
        }
        public Builder consumerGroup(String consumerGroup) {
            this.consumerGroup = Objects.requireNonNull(consumerGroup);
            return this;
        }
        public Builder dataFormat(@Nullable String dataFormat) {
            this.dataFormat = dataFormat;
            return this;
        }
        public Builder eventHubResourceId(String eventHubResourceId) {
            this.eventHubResourceId = Objects.requireNonNull(eventHubResourceId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ignoreFirstRecord(@Nullable Boolean ignoreFirstRecord) {
            this.ignoreFirstRecord = ignoreFirstRecord;
            return this;
        }
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder mappingRuleName(@Nullable String mappingRuleName) {
            this.mappingRuleName = mappingRuleName;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder storageAccountResourceId(String storageAccountResourceId) {
            this.storageAccountResourceId = Objects.requireNonNull(storageAccountResourceId);
            return this;
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder tableName(@Nullable String tableName) {
            this.tableName = tableName;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetEventGridDataConnectionResult build() {
            return new GetEventGridDataConnectionResult(blobStorageEventType, consumerGroup, dataFormat, eventHubResourceId, id, ignoreFirstRecord, kind, location, mappingRuleName, name, provisioningState, storageAccountResourceId, systemData, tableName, type);
        }
    }
}
