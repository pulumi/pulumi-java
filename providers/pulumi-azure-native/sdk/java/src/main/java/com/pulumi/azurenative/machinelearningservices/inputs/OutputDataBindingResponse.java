// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OutputDataBindingResponse extends com.pulumi.resources.InvokeArgs {

    public static final OutputDataBindingResponse Empty = new OutputDataBindingResponse();

    /**
     * ARM resource ID of the datastore where the data output will be stored.
     * 
     */
    @Import(name="datastoreId")
    private @Nullable String datastoreId;

    public Optional<String> datastoreId() {
        return Optional.ofNullable(this.datastoreId);
    }

    /**
     * Mechanism for data movement to datastore.
     * 
     */
    @Import(name="mode")
    private @Nullable String mode;

    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Location of data inside the container process.
     * 
     */
    @Import(name="pathOnCompute")
    private @Nullable String pathOnCompute;

    public Optional<String> pathOnCompute() {
        return Optional.ofNullable(this.pathOnCompute);
    }

    /**
     * Path within the datastore to the data.
     * 
     */
    @Import(name="pathOnDatastore")
    private @Nullable String pathOnDatastore;

    public Optional<String> pathOnDatastore() {
        return Optional.ofNullable(this.pathOnDatastore);
    }

    private OutputDataBindingResponse() {}

    private OutputDataBindingResponse(OutputDataBindingResponse $) {
        this.datastoreId = $.datastoreId;
        this.mode = $.mode;
        this.pathOnCompute = $.pathOnCompute;
        this.pathOnDatastore = $.pathOnDatastore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OutputDataBindingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OutputDataBindingResponse $;

        public Builder() {
            $ = new OutputDataBindingResponse();
        }

        public Builder(OutputDataBindingResponse defaults) {
            $ = new OutputDataBindingResponse(Objects.requireNonNull(defaults));
        }

        public Builder datastoreId(@Nullable String datastoreId) {
            $.datastoreId = datastoreId;
            return this;
        }

        public Builder mode(@Nullable String mode) {
            $.mode = mode;
            return this;
        }

        public Builder pathOnCompute(@Nullable String pathOnCompute) {
            $.pathOnCompute = pathOnCompute;
            return this;
        }

        public Builder pathOnDatastore(@Nullable String pathOnDatastore) {
            $.pathOnDatastore = pathOnDatastore;
            return this;
        }

        public OutputDataBindingResponse build() {
            return $;
        }
    }

}
