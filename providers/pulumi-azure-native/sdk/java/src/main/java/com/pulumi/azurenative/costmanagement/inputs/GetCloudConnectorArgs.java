// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudConnectorArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudConnectorArgs Empty = new GetCloudConnectorArgs();

    /**
     * Connector Name.
     * 
     */
    @Import(name="connectorName", required=true)
    private Output<String> connectorName;

    /**
     * @return Connector Name.
     * 
     */
    public Output<String> connectorName() {
        return this.connectorName;
    }

    /**
     * May be used to expand the collectionInfo property. By default, collectionInfo is not included.
     * 
     */
    @Import(name="expand")
    private @Nullable Output<String> expand;

    /**
     * @return May be used to expand the collectionInfo property. By default, collectionInfo is not included.
     * 
     */
    public Optional<Output<String>> expand() {
        return Optional.ofNullable(this.expand);
    }

    private GetCloudConnectorArgs() {}

    private GetCloudConnectorArgs(GetCloudConnectorArgs $) {
        this.connectorName = $.connectorName;
        this.expand = $.expand;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudConnectorArgs $;

        public Builder() {
            $ = new GetCloudConnectorArgs();
        }

        public Builder(GetCloudConnectorArgs defaults) {
            $ = new GetCloudConnectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectorName Connector Name.
         * 
         * @return builder
         * 
         */
        public Builder connectorName(Output<String> connectorName) {
            $.connectorName = connectorName;
            return this;
        }

        /**
         * @param connectorName Connector Name.
         * 
         * @return builder
         * 
         */
        public Builder connectorName(String connectorName) {
            return connectorName(Output.of(connectorName));
        }

        /**
         * @param expand May be used to expand the collectionInfo property. By default, collectionInfo is not included.
         * 
         * @return builder
         * 
         */
        public Builder expand(@Nullable Output<String> expand) {
            $.expand = expand;
            return this;
        }

        /**
         * @param expand May be used to expand the collectionInfo property. By default, collectionInfo is not included.
         * 
         * @return builder
         * 
         */
        public Builder expand(String expand) {
            return expand(Output.of(expand));
        }

        public GetCloudConnectorArgs build() {
            $.connectorName = Objects.requireNonNull($.connectorName, "expected parameter 'connectorName' to be non-null");
            return $;
        }
    }

}
