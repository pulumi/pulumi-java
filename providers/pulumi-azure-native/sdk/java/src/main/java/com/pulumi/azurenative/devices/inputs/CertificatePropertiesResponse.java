// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * The description of an X509 CA Certificate.
 * 
 */
public final class CertificatePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final CertificatePropertiesResponse Empty = new CertificatePropertiesResponse();

    /**
     * base-64 representation of X509 certificate .cer file or just .pem file content.
     * 
     */
    @Import(name="certificate", required=true)
    private String certificate;

    public String certificate() {
        return this.certificate;
    }

    /**
     * The certificate&#39;s creation date and time.
     * 
     */
    @Import(name="created", required=true)
    private String created;

    public String created() {
        return this.created;
    }

    /**
     * The certificate&#39;s expiration date and time.
     * 
     */
    @Import(name="expiry", required=true)
    private String expiry;

    public String expiry() {
        return this.expiry;
    }

    /**
     * Determines whether certificate has been verified.
     * 
     */
    @Import(name="isVerified", required=true)
    private Boolean isVerified;

    public Boolean isVerified() {
        return this.isVerified;
    }

    /**
     * The certificate&#39;s subject name.
     * 
     */
    @Import(name="subject", required=true)
    private String subject;

    public String subject() {
        return this.subject;
    }

    /**
     * The certificate&#39;s thumbprint.
     * 
     */
    @Import(name="thumbprint", required=true)
    private String thumbprint;

    public String thumbprint() {
        return this.thumbprint;
    }

    /**
     * The certificate&#39;s last update date and time.
     * 
     */
    @Import(name="updated", required=true)
    private String updated;

    public String updated() {
        return this.updated;
    }

    private CertificatePropertiesResponse() {}

    private CertificatePropertiesResponse(CertificatePropertiesResponse $) {
        this.certificate = $.certificate;
        this.created = $.created;
        this.expiry = $.expiry;
        this.isVerified = $.isVerified;
        this.subject = $.subject;
        this.thumbprint = $.thumbprint;
        this.updated = $.updated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificatePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificatePropertiesResponse $;

        public Builder() {
            $ = new CertificatePropertiesResponse();
        }

        public Builder(CertificatePropertiesResponse defaults) {
            $ = new CertificatePropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder certificate(String certificate) {
            $.certificate = certificate;
            return this;
        }

        public Builder created(String created) {
            $.created = created;
            return this;
        }

        public Builder expiry(String expiry) {
            $.expiry = expiry;
            return this;
        }

        public Builder isVerified(Boolean isVerified) {
            $.isVerified = isVerified;
            return this;
        }

        public Builder subject(String subject) {
            $.subject = subject;
            return this;
        }

        public Builder thumbprint(String thumbprint) {
            $.thumbprint = thumbprint;
            return this;
        }

        public Builder updated(String updated) {
            $.updated = updated;
            return this;
        }

        public CertificatePropertiesResponse build() {
            $.certificate = Objects.requireNonNull($.certificate, "expected parameter 'certificate' to be non-null");
            $.created = Objects.requireNonNull($.created, "expected parameter 'created' to be non-null");
            $.expiry = Objects.requireNonNull($.expiry, "expected parameter 'expiry' to be non-null");
            $.isVerified = Objects.requireNonNull($.isVerified, "expected parameter 'isVerified' to be non-null");
            $.subject = Objects.requireNonNull($.subject, "expected parameter 'subject' to be non-null");
            $.thumbprint = Objects.requireNonNull($.thumbprint, "expected parameter 'thumbprint' to be non-null");
            $.updated = Objects.requireNonNull($.updated, "expected parameter 'updated' to be non-null");
            return $;
        }
    }

}
