// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Additional information of DPM Protected item.
 * 
 */
public final class DPMProtectedItemExtendedInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final DPMProtectedItemExtendedInfoArgs Empty = new DPMProtectedItemExtendedInfoArgs();

    /**
     * Used Disk storage in bytes.
     * 
     */
    @Import(name="diskStorageUsedInBytes")
    private @Nullable Output<String> diskStorageUsedInBytes;

    public Optional<Output<String>> diskStorageUsedInBytes() {
        return Optional.ofNullable(this.diskStorageUsedInBytes);
    }

    /**
     * To check if backup item is collocated.
     * 
     */
    @Import(name="isCollocated")
    private @Nullable Output<Boolean> isCollocated;

    public Optional<Output<Boolean>> isCollocated() {
        return Optional.ofNullable(this.isCollocated);
    }

    /**
     * To check if backup item is cloud protected.
     * 
     */
    @Import(name="isPresentOnCloud")
    private @Nullable Output<Boolean> isPresentOnCloud;

    public Optional<Output<Boolean>> isPresentOnCloud() {
        return Optional.ofNullable(this.isPresentOnCloud);
    }

    /**
     * Last backup status information on backup item.
     * 
     */
    @Import(name="lastBackupStatus")
    private @Nullable Output<String> lastBackupStatus;

    public Optional<Output<String>> lastBackupStatus() {
        return Optional.ofNullable(this.lastBackupStatus);
    }

    /**
     * Last refresh time on backup item.
     * 
     */
    @Import(name="lastRefreshedAt")
    private @Nullable Output<String> lastRefreshedAt;

    public Optional<Output<String>> lastRefreshedAt() {
        return Optional.ofNullable(this.lastRefreshedAt);
    }

    /**
     * Oldest cloud recovery point time.
     * 
     */
    @Import(name="oldestRecoveryPoint")
    private @Nullable Output<String> oldestRecoveryPoint;

    public Optional<Output<String>> oldestRecoveryPoint() {
        return Optional.ofNullable(this.oldestRecoveryPoint);
    }

    /**
     * latest disk recovery point time.
     * 
     */
    @Import(name="onPremiseLatestRecoveryPoint")
    private @Nullable Output<String> onPremiseLatestRecoveryPoint;

    public Optional<Output<String>> onPremiseLatestRecoveryPoint() {
        return Optional.ofNullable(this.onPremiseLatestRecoveryPoint);
    }

    /**
     * Oldest disk recovery point time.
     * 
     */
    @Import(name="onPremiseOldestRecoveryPoint")
    private @Nullable Output<String> onPremiseOldestRecoveryPoint;

    public Optional<Output<String>> onPremiseOldestRecoveryPoint() {
        return Optional.ofNullable(this.onPremiseOldestRecoveryPoint);
    }

    /**
     * disk recovery point count.
     * 
     */
    @Import(name="onPremiseRecoveryPointCount")
    private @Nullable Output<Integer> onPremiseRecoveryPointCount;

    public Optional<Output<Integer>> onPremiseRecoveryPointCount() {
        return Optional.ofNullable(this.onPremiseRecoveryPointCount);
    }

    /**
     * Attribute to provide information on various DBs.
     * 
     */
    @Import(name="protectableObjectLoadPath")
    private @Nullable Output<Map<String,String>> protectableObjectLoadPath;

    public Optional<Output<Map<String,String>>> protectableObjectLoadPath() {
        return Optional.ofNullable(this.protectableObjectLoadPath);
    }

    /**
     * To check if backup item is disk protected.
     * 
     */
    @Import(name="protected")
    private @Nullable Output<Boolean> protected_;

    public Optional<Output<Boolean>> protected_() {
        return Optional.ofNullable(this.protected_);
    }

    /**
     * Protection group name of the backup item.
     * 
     */
    @Import(name="protectionGroupName")
    private @Nullable Output<String> protectionGroupName;

    public Optional<Output<String>> protectionGroupName() {
        return Optional.ofNullable(this.protectionGroupName);
    }

    /**
     * cloud recovery point count.
     * 
     */
    @Import(name="recoveryPointCount")
    private @Nullable Output<Integer> recoveryPointCount;

    public Optional<Output<Integer>> recoveryPointCount() {
        return Optional.ofNullable(this.recoveryPointCount);
    }

    /**
     * total Disk storage in bytes.
     * 
     */
    @Import(name="totalDiskStorageSizeInBytes")
    private @Nullable Output<String> totalDiskStorageSizeInBytes;

    public Optional<Output<String>> totalDiskStorageSizeInBytes() {
        return Optional.ofNullable(this.totalDiskStorageSizeInBytes);
    }

    private DPMProtectedItemExtendedInfoArgs() {}

    private DPMProtectedItemExtendedInfoArgs(DPMProtectedItemExtendedInfoArgs $) {
        this.diskStorageUsedInBytes = $.diskStorageUsedInBytes;
        this.isCollocated = $.isCollocated;
        this.isPresentOnCloud = $.isPresentOnCloud;
        this.lastBackupStatus = $.lastBackupStatus;
        this.lastRefreshedAt = $.lastRefreshedAt;
        this.oldestRecoveryPoint = $.oldestRecoveryPoint;
        this.onPremiseLatestRecoveryPoint = $.onPremiseLatestRecoveryPoint;
        this.onPremiseOldestRecoveryPoint = $.onPremiseOldestRecoveryPoint;
        this.onPremiseRecoveryPointCount = $.onPremiseRecoveryPointCount;
        this.protectableObjectLoadPath = $.protectableObjectLoadPath;
        this.protected_ = $.protected_;
        this.protectionGroupName = $.protectionGroupName;
        this.recoveryPointCount = $.recoveryPointCount;
        this.totalDiskStorageSizeInBytes = $.totalDiskStorageSizeInBytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DPMProtectedItemExtendedInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DPMProtectedItemExtendedInfoArgs $;

        public Builder() {
            $ = new DPMProtectedItemExtendedInfoArgs();
        }

        public Builder(DPMProtectedItemExtendedInfoArgs defaults) {
            $ = new DPMProtectedItemExtendedInfoArgs(Objects.requireNonNull(defaults));
        }

        public Builder diskStorageUsedInBytes(@Nullable Output<String> diskStorageUsedInBytes) {
            $.diskStorageUsedInBytes = diskStorageUsedInBytes;
            return this;
        }

        public Builder diskStorageUsedInBytes(String diskStorageUsedInBytes) {
            return diskStorageUsedInBytes(Output.of(diskStorageUsedInBytes));
        }

        public Builder isCollocated(@Nullable Output<Boolean> isCollocated) {
            $.isCollocated = isCollocated;
            return this;
        }

        public Builder isCollocated(Boolean isCollocated) {
            return isCollocated(Output.of(isCollocated));
        }

        public Builder isPresentOnCloud(@Nullable Output<Boolean> isPresentOnCloud) {
            $.isPresentOnCloud = isPresentOnCloud;
            return this;
        }

        public Builder isPresentOnCloud(Boolean isPresentOnCloud) {
            return isPresentOnCloud(Output.of(isPresentOnCloud));
        }

        public Builder lastBackupStatus(@Nullable Output<String> lastBackupStatus) {
            $.lastBackupStatus = lastBackupStatus;
            return this;
        }

        public Builder lastBackupStatus(String lastBackupStatus) {
            return lastBackupStatus(Output.of(lastBackupStatus));
        }

        public Builder lastRefreshedAt(@Nullable Output<String> lastRefreshedAt) {
            $.lastRefreshedAt = lastRefreshedAt;
            return this;
        }

        public Builder lastRefreshedAt(String lastRefreshedAt) {
            return lastRefreshedAt(Output.of(lastRefreshedAt));
        }

        public Builder oldestRecoveryPoint(@Nullable Output<String> oldestRecoveryPoint) {
            $.oldestRecoveryPoint = oldestRecoveryPoint;
            return this;
        }

        public Builder oldestRecoveryPoint(String oldestRecoveryPoint) {
            return oldestRecoveryPoint(Output.of(oldestRecoveryPoint));
        }

        public Builder onPremiseLatestRecoveryPoint(@Nullable Output<String> onPremiseLatestRecoveryPoint) {
            $.onPremiseLatestRecoveryPoint = onPremiseLatestRecoveryPoint;
            return this;
        }

        public Builder onPremiseLatestRecoveryPoint(String onPremiseLatestRecoveryPoint) {
            return onPremiseLatestRecoveryPoint(Output.of(onPremiseLatestRecoveryPoint));
        }

        public Builder onPremiseOldestRecoveryPoint(@Nullable Output<String> onPremiseOldestRecoveryPoint) {
            $.onPremiseOldestRecoveryPoint = onPremiseOldestRecoveryPoint;
            return this;
        }

        public Builder onPremiseOldestRecoveryPoint(String onPremiseOldestRecoveryPoint) {
            return onPremiseOldestRecoveryPoint(Output.of(onPremiseOldestRecoveryPoint));
        }

        public Builder onPremiseRecoveryPointCount(@Nullable Output<Integer> onPremiseRecoveryPointCount) {
            $.onPremiseRecoveryPointCount = onPremiseRecoveryPointCount;
            return this;
        }

        public Builder onPremiseRecoveryPointCount(Integer onPremiseRecoveryPointCount) {
            return onPremiseRecoveryPointCount(Output.of(onPremiseRecoveryPointCount));
        }

        public Builder protectableObjectLoadPath(@Nullable Output<Map<String,String>> protectableObjectLoadPath) {
            $.protectableObjectLoadPath = protectableObjectLoadPath;
            return this;
        }

        public Builder protectableObjectLoadPath(Map<String,String> protectableObjectLoadPath) {
            return protectableObjectLoadPath(Output.of(protectableObjectLoadPath));
        }

        public Builder protected_(@Nullable Output<Boolean> protected_) {
            $.protected_ = protected_;
            return this;
        }

        public Builder protected_(Boolean protected_) {
            return protected_(Output.of(protected_));
        }

        public Builder protectionGroupName(@Nullable Output<String> protectionGroupName) {
            $.protectionGroupName = protectionGroupName;
            return this;
        }

        public Builder protectionGroupName(String protectionGroupName) {
            return protectionGroupName(Output.of(protectionGroupName));
        }

        public Builder recoveryPointCount(@Nullable Output<Integer> recoveryPointCount) {
            $.recoveryPointCount = recoveryPointCount;
            return this;
        }

        public Builder recoveryPointCount(Integer recoveryPointCount) {
            return recoveryPointCount(Output.of(recoveryPointCount));
        }

        public Builder totalDiskStorageSizeInBytes(@Nullable Output<String> totalDiskStorageSizeInBytes) {
            $.totalDiskStorageSizeInBytes = totalDiskStorageSizeInBytes;
            return this;
        }

        public Builder totalDiskStorageSizeInBytes(String totalDiskStorageSizeInBytes) {
            return totalDiskStorageSizeInBytes(Output.of(totalDiskStorageSizeInBytes));
        }

        public DPMProtectedItemExtendedInfoArgs build() {
            return $;
        }
    }

}
