// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.inputs;

import com.pulumi.azurenative.costmanagement.enums.GranularityType;
import com.pulumi.azurenative.costmanagement.inputs.ExportDatasetConfigurationArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The definition for data in the export.
 * 
 */
public final class ExportDatasetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExportDatasetArgs Empty = new ExportDatasetArgs();

    /**
     * The export dataset configuration.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<ExportDatasetConfigurationArgs> configuration;

    public Optional<Output<ExportDatasetConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * The granularity of rows in the export. Currently only &#39;Daily&#39; is supported.
     * 
     */
    @Import(name="granularity")
    private @Nullable Output<Either<String,GranularityType>> granularity;

    public Optional<Output<Either<String,GranularityType>>> granularity() {
        return Optional.ofNullable(this.granularity);
    }

    private ExportDatasetArgs() {}

    private ExportDatasetArgs(ExportDatasetArgs $) {
        this.configuration = $.configuration;
        this.granularity = $.granularity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExportDatasetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExportDatasetArgs $;

        public Builder() {
            $ = new ExportDatasetArgs();
        }

        public Builder(ExportDatasetArgs defaults) {
            $ = new ExportDatasetArgs(Objects.requireNonNull(defaults));
        }

        public Builder configuration(@Nullable Output<ExportDatasetConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        public Builder configuration(ExportDatasetConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        public Builder granularity(@Nullable Output<Either<String,GranularityType>> granularity) {
            $.granularity = granularity;
            return this;
        }

        public Builder granularity(Either<String,GranularityType> granularity) {
            return granularity(Output.of(granularity));
        }

        public Builder granularity(String granularity) {
            return granularity(Either.ofLeft(granularity));
        }

        public Builder granularity(GranularityType granularity) {
            return granularity(Either.ofRight(granularity));
        }

        public ExportDatasetArgs build() {
            return $;
        }
    }

}
