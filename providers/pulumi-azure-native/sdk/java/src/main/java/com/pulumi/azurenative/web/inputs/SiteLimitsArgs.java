// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Metric limits set on an app.
 * 
 */
public final class SiteLimitsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SiteLimitsArgs Empty = new SiteLimitsArgs();

    /**
     * Maximum allowed disk size usage in MB.
     * 
     */
    @Import(name="maxDiskSizeInMb")
    private @Nullable Output<Double> maxDiskSizeInMb;

    /**
     * @return Maximum allowed disk size usage in MB.
     * 
     */
    public Optional<Output<Double>> maxDiskSizeInMb() {
        return Optional.ofNullable(this.maxDiskSizeInMb);
    }

    /**
     * Maximum allowed memory usage in MB.
     * 
     */
    @Import(name="maxMemoryInMb")
    private @Nullable Output<Double> maxMemoryInMb;

    /**
     * @return Maximum allowed memory usage in MB.
     * 
     */
    public Optional<Output<Double>> maxMemoryInMb() {
        return Optional.ofNullable(this.maxMemoryInMb);
    }

    /**
     * Maximum allowed CPU usage percentage.
     * 
     */
    @Import(name="maxPercentageCpu")
    private @Nullable Output<Double> maxPercentageCpu;

    /**
     * @return Maximum allowed CPU usage percentage.
     * 
     */
    public Optional<Output<Double>> maxPercentageCpu() {
        return Optional.ofNullable(this.maxPercentageCpu);
    }

    private SiteLimitsArgs() {}

    private SiteLimitsArgs(SiteLimitsArgs $) {
        this.maxDiskSizeInMb = $.maxDiskSizeInMb;
        this.maxMemoryInMb = $.maxMemoryInMb;
        this.maxPercentageCpu = $.maxPercentageCpu;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SiteLimitsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SiteLimitsArgs $;

        public Builder() {
            $ = new SiteLimitsArgs();
        }

        public Builder(SiteLimitsArgs defaults) {
            $ = new SiteLimitsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxDiskSizeInMb Maximum allowed disk size usage in MB.
         * 
         * @return builder
         * 
         */
        public Builder maxDiskSizeInMb(@Nullable Output<Double> maxDiskSizeInMb) {
            $.maxDiskSizeInMb = maxDiskSizeInMb;
            return this;
        }

        /**
         * @param maxDiskSizeInMb Maximum allowed disk size usage in MB.
         * 
         * @return builder
         * 
         */
        public Builder maxDiskSizeInMb(Double maxDiskSizeInMb) {
            return maxDiskSizeInMb(Output.of(maxDiskSizeInMb));
        }

        /**
         * @param maxMemoryInMb Maximum allowed memory usage in MB.
         * 
         * @return builder
         * 
         */
        public Builder maxMemoryInMb(@Nullable Output<Double> maxMemoryInMb) {
            $.maxMemoryInMb = maxMemoryInMb;
            return this;
        }

        /**
         * @param maxMemoryInMb Maximum allowed memory usage in MB.
         * 
         * @return builder
         * 
         */
        public Builder maxMemoryInMb(Double maxMemoryInMb) {
            return maxMemoryInMb(Output.of(maxMemoryInMb));
        }

        /**
         * @param maxPercentageCpu Maximum allowed CPU usage percentage.
         * 
         * @return builder
         * 
         */
        public Builder maxPercentageCpu(@Nullable Output<Double> maxPercentageCpu) {
            $.maxPercentageCpu = maxPercentageCpu;
            return this;
        }

        /**
         * @param maxPercentageCpu Maximum allowed CPU usage percentage.
         * 
         * @return builder
         * 
         */
        public Builder maxPercentageCpu(Double maxPercentageCpu) {
            return maxPercentageCpu(Output.of(maxPercentageCpu));
        }

        public SiteLimitsArgs build() {
            return $;
        }
    }

}
