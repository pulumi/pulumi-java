// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.enums.SubscriptionReregistrationResult;
import com.pulumi.azurenative.providerhub.enums.TrafficRegionCategory;
import com.pulumi.azurenative.providerhub.inputs.ExtendedErrorInfoArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefaultRolloutPropertiesStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefaultRolloutPropertiesStatusArgs Empty = new DefaultRolloutPropertiesStatusArgs();

    @Import(name="completedRegions")
    private @Nullable Output<List<String>> completedRegions;

    public Optional<Output<List<String>>> completedRegions() {
        return Optional.ofNullable(this.completedRegions);
    }

    @Import(name="failedOrSkippedRegions")
    private @Nullable Output<Map<String,ExtendedErrorInfoArgs>> failedOrSkippedRegions;

    public Optional<Output<Map<String,ExtendedErrorInfoArgs>>> failedOrSkippedRegions() {
        return Optional.ofNullable(this.failedOrSkippedRegions);
    }

    @Import(name="nextTrafficRegion")
    private @Nullable Output<Either<String,TrafficRegionCategory>> nextTrafficRegion;

    public Optional<Output<Either<String,TrafficRegionCategory>>> nextTrafficRegion() {
        return Optional.ofNullable(this.nextTrafficRegion);
    }

    @Import(name="nextTrafficRegionScheduledTime")
    private @Nullable Output<String> nextTrafficRegionScheduledTime;

    public Optional<Output<String>> nextTrafficRegionScheduledTime() {
        return Optional.ofNullable(this.nextTrafficRegionScheduledTime);
    }

    @Import(name="subscriptionReregistrationResult")
    private @Nullable Output<Either<String,SubscriptionReregistrationResult>> subscriptionReregistrationResult;

    public Optional<Output<Either<String,SubscriptionReregistrationResult>>> subscriptionReregistrationResult() {
        return Optional.ofNullable(this.subscriptionReregistrationResult);
    }

    private DefaultRolloutPropertiesStatusArgs() {}

    private DefaultRolloutPropertiesStatusArgs(DefaultRolloutPropertiesStatusArgs $) {
        this.completedRegions = $.completedRegions;
        this.failedOrSkippedRegions = $.failedOrSkippedRegions;
        this.nextTrafficRegion = $.nextTrafficRegion;
        this.nextTrafficRegionScheduledTime = $.nextTrafficRegionScheduledTime;
        this.subscriptionReregistrationResult = $.subscriptionReregistrationResult;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultRolloutPropertiesStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultRolloutPropertiesStatusArgs $;

        public Builder() {
            $ = new DefaultRolloutPropertiesStatusArgs();
        }

        public Builder(DefaultRolloutPropertiesStatusArgs defaults) {
            $ = new DefaultRolloutPropertiesStatusArgs(Objects.requireNonNull(defaults));
        }

        public Builder completedRegions(@Nullable Output<List<String>> completedRegions) {
            $.completedRegions = completedRegions;
            return this;
        }

        public Builder completedRegions(List<String> completedRegions) {
            return completedRegions(Output.of(completedRegions));
        }

        public Builder completedRegions(String... completedRegions) {
            return completedRegions(List.of(completedRegions));
        }

        public Builder failedOrSkippedRegions(@Nullable Output<Map<String,ExtendedErrorInfoArgs>> failedOrSkippedRegions) {
            $.failedOrSkippedRegions = failedOrSkippedRegions;
            return this;
        }

        public Builder failedOrSkippedRegions(Map<String,ExtendedErrorInfoArgs> failedOrSkippedRegions) {
            return failedOrSkippedRegions(Output.of(failedOrSkippedRegions));
        }

        public Builder nextTrafficRegion(@Nullable Output<Either<String,TrafficRegionCategory>> nextTrafficRegion) {
            $.nextTrafficRegion = nextTrafficRegion;
            return this;
        }

        public Builder nextTrafficRegion(Either<String,TrafficRegionCategory> nextTrafficRegion) {
            return nextTrafficRegion(Output.of(nextTrafficRegion));
        }

        public Builder nextTrafficRegion(String nextTrafficRegion) {
            return nextTrafficRegion(Either.ofLeft(nextTrafficRegion));
        }

        public Builder nextTrafficRegion(TrafficRegionCategory nextTrafficRegion) {
            return nextTrafficRegion(Either.ofRight(nextTrafficRegion));
        }

        public Builder nextTrafficRegionScheduledTime(@Nullable Output<String> nextTrafficRegionScheduledTime) {
            $.nextTrafficRegionScheduledTime = nextTrafficRegionScheduledTime;
            return this;
        }

        public Builder nextTrafficRegionScheduledTime(String nextTrafficRegionScheduledTime) {
            return nextTrafficRegionScheduledTime(Output.of(nextTrafficRegionScheduledTime));
        }

        public Builder subscriptionReregistrationResult(@Nullable Output<Either<String,SubscriptionReregistrationResult>> subscriptionReregistrationResult) {
            $.subscriptionReregistrationResult = subscriptionReregistrationResult;
            return this;
        }

        public Builder subscriptionReregistrationResult(Either<String,SubscriptionReregistrationResult> subscriptionReregistrationResult) {
            return subscriptionReregistrationResult(Output.of(subscriptionReregistrationResult));
        }

        public Builder subscriptionReregistrationResult(String subscriptionReregistrationResult) {
            return subscriptionReregistrationResult(Either.ofLeft(subscriptionReregistrationResult));
        }

        public Builder subscriptionReregistrationResult(SubscriptionReregistrationResult subscriptionReregistrationResult) {
            return subscriptionReregistrationResult(Either.ofRight(subscriptionReregistrationResult));
        }

        public DefaultRolloutPropertiesStatusArgs build() {
            return $;
        }
    }

}
