// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security;

import com.pulumi.azurenative.security.inputs.PathRecommendationArgs;
import com.pulumi.azurenative.security.inputs.ProtectionModeArgs;
import com.pulumi.azurenative.security.inputs.VmRecommendationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdaptiveApplicationControlArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdaptiveApplicationControlArgs Empty = new AdaptiveApplicationControlArgs();

    /**
     * The location where ASC stores the data of the subscription. can be retrieved from Get locations
     * 
     */
    @Import(name="ascLocation", required=true)
    private Output<String> ascLocation;

    /**
     * @return The location where ASC stores the data of the subscription. can be retrieved from Get locations
     * 
     */
    public Output<String> ascLocation() {
        return this.ascLocation;
    }

    /**
     * The application control policy enforcement/protection mode of the machine group
     * 
     */
    @Import(name="enforcementMode")
    private @Nullable Output<String> enforcementMode;

    /**
     * @return The application control policy enforcement/protection mode of the machine group
     * 
     */
    public Optional<Output<String>> enforcementMode() {
        return Optional.ofNullable(this.enforcementMode);
    }

    /**
     * Name of an application control machine group
     * 
     */
    @Import(name="groupName")
    private @Nullable Output<String> groupName;

    /**
     * @return Name of an application control machine group
     * 
     */
    public Optional<Output<String>> groupName() {
        return Optional.ofNullable(this.groupName);
    }

    @Import(name="pathRecommendations")
    private @Nullable Output<List<PathRecommendationArgs>> pathRecommendations;

    public Optional<Output<List<PathRecommendationArgs>>> pathRecommendations() {
        return Optional.ofNullable(this.pathRecommendations);
    }

    /**
     * The protection mode of the collection/file types. Exe/Msi/Script are used for Windows, Executable is used for Linux.
     * 
     */
    @Import(name="protectionMode")
    private @Nullable Output<ProtectionModeArgs> protectionMode;

    /**
     * @return The protection mode of the collection/file types. Exe/Msi/Script are used for Windows, Executable is used for Linux.
     * 
     */
    public Optional<Output<ProtectionModeArgs>> protectionMode() {
        return Optional.ofNullable(this.protectionMode);
    }

    @Import(name="vmRecommendations")
    private @Nullable Output<List<VmRecommendationArgs>> vmRecommendations;

    public Optional<Output<List<VmRecommendationArgs>>> vmRecommendations() {
        return Optional.ofNullable(this.vmRecommendations);
    }

    private AdaptiveApplicationControlArgs() {}

    private AdaptiveApplicationControlArgs(AdaptiveApplicationControlArgs $) {
        this.ascLocation = $.ascLocation;
        this.enforcementMode = $.enforcementMode;
        this.groupName = $.groupName;
        this.pathRecommendations = $.pathRecommendations;
        this.protectionMode = $.protectionMode;
        this.vmRecommendations = $.vmRecommendations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdaptiveApplicationControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdaptiveApplicationControlArgs $;

        public Builder() {
            $ = new AdaptiveApplicationControlArgs();
        }

        public Builder(AdaptiveApplicationControlArgs defaults) {
            $ = new AdaptiveApplicationControlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from Get locations
         * 
         * @return builder
         * 
         */
        public Builder ascLocation(Output<String> ascLocation) {
            $.ascLocation = ascLocation;
            return this;
        }

        /**
         * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from Get locations
         * 
         * @return builder
         * 
         */
        public Builder ascLocation(String ascLocation) {
            return ascLocation(Output.of(ascLocation));
        }

        /**
         * @param enforcementMode The application control policy enforcement/protection mode of the machine group
         * 
         * @return builder
         * 
         */
        public Builder enforcementMode(@Nullable Output<String> enforcementMode) {
            $.enforcementMode = enforcementMode;
            return this;
        }

        /**
         * @param enforcementMode The application control policy enforcement/protection mode of the machine group
         * 
         * @return builder
         * 
         */
        public Builder enforcementMode(String enforcementMode) {
            return enforcementMode(Output.of(enforcementMode));
        }

        /**
         * @param groupName Name of an application control machine group
         * 
         * @return builder
         * 
         */
        public Builder groupName(@Nullable Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName Name of an application control machine group
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        public Builder pathRecommendations(@Nullable Output<List<PathRecommendationArgs>> pathRecommendations) {
            $.pathRecommendations = pathRecommendations;
            return this;
        }

        public Builder pathRecommendations(List<PathRecommendationArgs> pathRecommendations) {
            return pathRecommendations(Output.of(pathRecommendations));
        }

        public Builder pathRecommendations(PathRecommendationArgs... pathRecommendations) {
            return pathRecommendations(List.of(pathRecommendations));
        }

        /**
         * @param protectionMode The protection mode of the collection/file types. Exe/Msi/Script are used for Windows, Executable is used for Linux.
         * 
         * @return builder
         * 
         */
        public Builder protectionMode(@Nullable Output<ProtectionModeArgs> protectionMode) {
            $.protectionMode = protectionMode;
            return this;
        }

        /**
         * @param protectionMode The protection mode of the collection/file types. Exe/Msi/Script are used for Windows, Executable is used for Linux.
         * 
         * @return builder
         * 
         */
        public Builder protectionMode(ProtectionModeArgs protectionMode) {
            return protectionMode(Output.of(protectionMode));
        }

        public Builder vmRecommendations(@Nullable Output<List<VmRecommendationArgs>> vmRecommendations) {
            $.vmRecommendations = vmRecommendations;
            return this;
        }

        public Builder vmRecommendations(List<VmRecommendationArgs> vmRecommendations) {
            return vmRecommendations(Output.of(vmRecommendations));
        }

        public Builder vmRecommendations(VmRecommendationArgs... vmRecommendations) {
            return vmRecommendations(List.of(vmRecommendations));
        }

        public AdaptiveApplicationControlArgs build() {
            $.ascLocation = Objects.requireNonNull($.ascLocation, "expected parameter 'ascLocation' to be non-null");
            return $;
        }
    }

}
