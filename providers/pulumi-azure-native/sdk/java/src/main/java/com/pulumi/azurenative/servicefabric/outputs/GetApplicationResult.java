// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.outputs;

import com.pulumi.azurenative.servicefabric.outputs.ApplicationMetricDescriptionResponse;
import com.pulumi.azurenative.servicefabric.outputs.ApplicationUpgradePolicyResponse;
import com.pulumi.azurenative.servicefabric.outputs.ApplicationUserAssignedIdentityResponse;
import com.pulumi.azurenative.servicefabric.outputs.ManagedIdentityResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApplicationResult {
    /**
     * @return Azure resource etag.
     * 
     */
    private final String etag;
    /**
     * @return Azure resource identifier.
     * 
     */
    private final String id;
    /**
     * @return Describes the managed identities for an Azure resource.
     * 
     */
    private final @Nullable ManagedIdentityResponse identity;
    /**
     * @return It will be deprecated in New API, resource location depends on the parent resource.
     * 
     */
    private final @Nullable String location;
    /**
     * @return List of user assigned identities for the application, each mapped to a friendly name.
     * 
     */
    private final @Nullable List<ApplicationUserAssignedIdentityResponse> managedIdentities;
    /**
     * @return The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
     * 
     */
    private final @Nullable Double maximumNodes;
    /**
     * @return List of application capacity metric description.
     * 
     */
    private final @Nullable List<ApplicationMetricDescriptionResponse> metrics;
    /**
     * @return The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
     * 
     */
    private final @Nullable Double minimumNodes;
    /**
     * @return Azure resource name.
     * 
     */
    private final String name;
    /**
     * @return List of application parameters with overridden values from their default values specified in the application manifest.
     * 
     */
    private final @Nullable Map<String,String> parameters;
    /**
     * @return The current deployment or provisioning state, which only appears in the response
     * 
     */
    private final String provisioningState;
    /**
     * @return Remove the current application capacity settings.
     * 
     */
    private final @Nullable Boolean removeApplicationCapacity;
    /**
     * @return Azure resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return Azure resource type.
     * 
     */
    private final String type;
    /**
     * @return The application type name as defined in the application manifest.
     * 
     */
    private final @Nullable String typeName;
    /**
     * @return The version of the application type as defined in the application manifest.
     * 
     */
    private final @Nullable String typeVersion;
    /**
     * @return Describes the policy for a monitored application upgrade.
     * 
     */
    private final @Nullable ApplicationUpgradePolicyResponse upgradePolicy;

    @CustomType.Constructor
    private GetApplicationResult(
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identity") @Nullable ManagedIdentityResponse identity,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("managedIdentities") @Nullable List<ApplicationUserAssignedIdentityResponse> managedIdentities,
        @CustomType.Parameter("maximumNodes") @Nullable Double maximumNodes,
        @CustomType.Parameter("metrics") @Nullable List<ApplicationMetricDescriptionResponse> metrics,
        @CustomType.Parameter("minimumNodes") @Nullable Double minimumNodes,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("parameters") @Nullable Map<String,String> parameters,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("removeApplicationCapacity") @Nullable Boolean removeApplicationCapacity,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("typeName") @Nullable String typeName,
        @CustomType.Parameter("typeVersion") @Nullable String typeVersion,
        @CustomType.Parameter("upgradePolicy") @Nullable ApplicationUpgradePolicyResponse upgradePolicy) {
        this.etag = etag;
        this.id = id;
        this.identity = identity;
        this.location = location;
        this.managedIdentities = managedIdentities;
        this.maximumNodes = maximumNodes;
        this.metrics = metrics;
        this.minimumNodes = minimumNodes;
        this.name = name;
        this.parameters = parameters;
        this.provisioningState = provisioningState;
        this.removeApplicationCapacity = removeApplicationCapacity;
        this.tags = tags;
        this.type = type;
        this.typeName = typeName;
        this.typeVersion = typeVersion;
        this.upgradePolicy = upgradePolicy;
    }

    /**
     * @return Azure resource etag.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Azure resource identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Describes the managed identities for an Azure resource.
     * 
     */
    public Optional<ManagedIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return It will be deprecated in New API, resource location depends on the parent resource.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return List of user assigned identities for the application, each mapped to a friendly name.
     * 
     */
    public List<ApplicationUserAssignedIdentityResponse> managedIdentities() {
        return this.managedIdentities == null ? List.of() : this.managedIdentities;
    }
    /**
     * @return The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
     * 
     */
    public Optional<Double> maximumNodes() {
        return Optional.ofNullable(this.maximumNodes);
    }
    /**
     * @return List of application capacity metric description.
     * 
     */
    public List<ApplicationMetricDescriptionResponse> metrics() {
        return this.metrics == null ? List.of() : this.metrics;
    }
    /**
     * @return The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
     * 
     */
    public Optional<Double> minimumNodes() {
        return Optional.ofNullable(this.minimumNodes);
    }
    /**
     * @return Azure resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of application parameters with overridden values from their default values specified in the application manifest.
     * 
     */
    public Map<String,String> parameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }
    /**
     * @return The current deployment or provisioning state, which only appears in the response
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Remove the current application capacity settings.
     * 
     */
    public Optional<Boolean> removeApplicationCapacity() {
        return Optional.ofNullable(this.removeApplicationCapacity);
    }
    /**
     * @return Azure resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Azure resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The application type name as defined in the application manifest.
     * 
     */
    public Optional<String> typeName() {
        return Optional.ofNullable(this.typeName);
    }
    /**
     * @return The version of the application type as defined in the application manifest.
     * 
     */
    public Optional<String> typeVersion() {
        return Optional.ofNullable(this.typeVersion);
    }
    /**
     * @return Describes the policy for a monitored application upgrade.
     * 
     */
    public Optional<ApplicationUpgradePolicyResponse> upgradePolicy() {
        return Optional.ofNullable(this.upgradePolicy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String etag;
        private String id;
        private @Nullable ManagedIdentityResponse identity;
        private @Nullable String location;
        private @Nullable List<ApplicationUserAssignedIdentityResponse> managedIdentities;
        private @Nullable Double maximumNodes;
        private @Nullable List<ApplicationMetricDescriptionResponse> metrics;
        private @Nullable Double minimumNodes;
        private String name;
        private @Nullable Map<String,String> parameters;
        private String provisioningState;
        private @Nullable Boolean removeApplicationCapacity;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable String typeName;
        private @Nullable String typeVersion;
        private @Nullable ApplicationUpgradePolicyResponse upgradePolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.managedIdentities = defaults.managedIdentities;
    	      this.maximumNodes = defaults.maximumNodes;
    	      this.metrics = defaults.metrics;
    	      this.minimumNodes = defaults.minimumNodes;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.provisioningState = defaults.provisioningState;
    	      this.removeApplicationCapacity = defaults.removeApplicationCapacity;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.typeName = defaults.typeName;
    	      this.typeVersion = defaults.typeVersion;
    	      this.upgradePolicy = defaults.upgradePolicy;
        }

        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identity(@Nullable ManagedIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder managedIdentities(@Nullable List<ApplicationUserAssignedIdentityResponse> managedIdentities) {
            this.managedIdentities = managedIdentities;
            return this;
        }
        public Builder managedIdentities(ApplicationUserAssignedIdentityResponse... managedIdentities) {
            return managedIdentities(List.of(managedIdentities));
        }
        public Builder maximumNodes(@Nullable Double maximumNodes) {
            this.maximumNodes = maximumNodes;
            return this;
        }
        public Builder metrics(@Nullable List<ApplicationMetricDescriptionResponse> metrics) {
            this.metrics = metrics;
            return this;
        }
        public Builder metrics(ApplicationMetricDescriptionResponse... metrics) {
            return metrics(List.of(metrics));
        }
        public Builder minimumNodes(@Nullable Double minimumNodes) {
            this.minimumNodes = minimumNodes;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder parameters(@Nullable Map<String,String> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder removeApplicationCapacity(@Nullable Boolean removeApplicationCapacity) {
            this.removeApplicationCapacity = removeApplicationCapacity;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder typeName(@Nullable String typeName) {
            this.typeName = typeName;
            return this;
        }
        public Builder typeVersion(@Nullable String typeVersion) {
            this.typeVersion = typeVersion;
            return this;
        }
        public Builder upgradePolicy(@Nullable ApplicationUpgradePolicyResponse upgradePolicy) {
            this.upgradePolicy = upgradePolicy;
            return this;
        }        public GetApplicationResult build() {
            return new GetApplicationResult(etag, id, identity, location, managedIdentities, maximumNodes, metrics, minimumNodes, name, parameters, provisioningState, removeApplicationCapacity, tags, type, typeName, typeVersion, upgradePolicy);
        }
    }
}
