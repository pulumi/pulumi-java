// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer;

import com.pulumi.azurenative.videoanalyzer.inputs.ParameterDefinitionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineJobArgs Empty = new PipelineJobArgs();

    /**
     * The Azure Video Analyzer account name.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The Azure Video Analyzer account name.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * An optional description for the pipeline.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description for the pipeline.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<ParameterDefinitionArgs>> parameters;

    /**
     * @return List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
     * 
     */
    public Optional<Output<List<ParameterDefinitionArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The pipeline job name.
     * 
     */
    @Import(name="pipelineJobName")
    private @Nullable Output<String> pipelineJobName;

    /**
     * @return The pipeline job name.
     * 
     */
    public Optional<Output<String>> pipelineJobName() {
        return Optional.ofNullable(this.pipelineJobName);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition.
     * 
     */
    @Import(name="topologyName", required=true)
    private Output<String> topologyName;

    /**
     * @return Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition.
     * 
     */
    public Output<String> topologyName() {
        return this.topologyName;
    }

    private PipelineJobArgs() {}

    private PipelineJobArgs(PipelineJobArgs $) {
        this.accountName = $.accountName;
        this.description = $.description;
        this.parameters = $.parameters;
        this.pipelineJobName = $.pipelineJobName;
        this.resourceGroupName = $.resourceGroupName;
        this.topologyName = $.topologyName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineJobArgs $;

        public Builder() {
            $ = new PipelineJobArgs();
        }

        public Builder(PipelineJobArgs defaults) {
            $ = new PipelineJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The Azure Video Analyzer account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The Azure Video Analyzer account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param description An optional description for the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description for the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param parameters List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<ParameterDefinitionArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<ParameterDefinitionArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
         * 
         * @return builder
         * 
         */
        public Builder parameters(ParameterDefinitionArgs... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param pipelineJobName The pipeline job name.
         * 
         * @return builder
         * 
         */
        public Builder pipelineJobName(@Nullable Output<String> pipelineJobName) {
            $.pipelineJobName = pipelineJobName;
            return this;
        }

        /**
         * @param pipelineJobName The pipeline job name.
         * 
         * @return builder
         * 
         */
        public Builder pipelineJobName(String pipelineJobName) {
            return pipelineJobName(Output.of(pipelineJobName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param topologyName Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition.
         * 
         * @return builder
         * 
         */
        public Builder topologyName(Output<String> topologyName) {
            $.topologyName = topologyName;
            return this;
        }

        /**
         * @param topologyName Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition.
         * 
         * @return builder
         * 
         */
        public Builder topologyName(String topologyName) {
            return topologyName(Output.of(topologyName));
        }

        public PipelineJobArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.topologyName = Objects.requireNonNull($.topologyName, "expected parameter 'topologyName' to be non-null");
            return $;
        }
    }

}
