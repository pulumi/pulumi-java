// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The information of the target OS to be tested.
 * 
 */
public final class TargetOSInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final TargetOSInfoResponse Empty = new TargetOSInfoResponse();

    /**
     * Specifies the OS update type to test against, e.g., &#39;Security updates&#39; or &#39;Feature updates&#39;.
     * 
     */
    @Import(name="osUpdateType", required=true)
    private String osUpdateType;

    public String osUpdateType() {
        return this.osUpdateType;
    }

    /**
     * Specifies the target OSs to be tested.
     * 
     */
    @Import(name="targetOSs", required=true)
    private List<String> targetOSs;

    public List<String> targetOSs() {
        return this.targetOSs;
    }

    private TargetOSInfoResponse() {}

    private TargetOSInfoResponse(TargetOSInfoResponse $) {
        this.osUpdateType = $.osUpdateType;
        this.targetOSs = $.targetOSs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetOSInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetOSInfoResponse $;

        public Builder() {
            $ = new TargetOSInfoResponse();
        }

        public Builder(TargetOSInfoResponse defaults) {
            $ = new TargetOSInfoResponse(Objects.requireNonNull(defaults));
        }

        public Builder osUpdateType(String osUpdateType) {
            $.osUpdateType = osUpdateType;
            return this;
        }

        public Builder targetOSs(List<String> targetOSs) {
            $.targetOSs = targetOSs;
            return this;
        }

        public Builder targetOSs(String... targetOSs) {
            return targetOSs(List.of(targetOSs));
        }

        public TargetOSInfoResponse build() {
            $.osUpdateType = Objects.requireNonNull($.osUpdateType, "expected parameter 'osUpdateType' to be non-null");
            $.targetOSs = Objects.requireNonNull($.targetOSs, "expected parameter 'targetOSs' to be non-null");
            return $;
        }
    }

}
