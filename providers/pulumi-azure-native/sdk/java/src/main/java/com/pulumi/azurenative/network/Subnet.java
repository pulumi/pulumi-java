// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.network.SubnetArgs;
import com.pulumi.azurenative.network.outputs.ApplicationGatewayIPConfigurationResponse;
import com.pulumi.azurenative.network.outputs.DelegationResponse;
import com.pulumi.azurenative.network.outputs.IPConfigurationProfileResponse;
import com.pulumi.azurenative.network.outputs.IPConfigurationResponse;
import com.pulumi.azurenative.network.outputs.NetworkSecurityGroupResponse;
import com.pulumi.azurenative.network.outputs.PrivateEndpointResponse;
import com.pulumi.azurenative.network.outputs.ResourceNavigationLinkResponse;
import com.pulumi.azurenative.network.outputs.RouteTableResponse;
import com.pulumi.azurenative.network.outputs.ServiceAssociationLinkResponse;
import com.pulumi.azurenative.network.outputs.ServiceEndpointPolicyResponse;
import com.pulumi.azurenative.network.outputs.ServiceEndpointPropertiesFormatResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Subnet in a virtual network resource.
 * API Version: 2020-11-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:Subnet subnet1 /subscriptions/subid/resourceGroups/subnet-test/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/subnet1 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:Subnet")
public class Subnet extends com.pulumi.resources.CustomResource {
    /**
     * The address prefix for the subnet.
     * 
     */
    @Export(name="addressPrefix", type=String.class, parameters={})
    private Output</* @Nullable */ String> addressPrefix;

    /**
     * @return The address prefix for the subnet.
     * 
     */
    public Output<Optional<String>> addressPrefix() {
        return Codegen.optional(this.addressPrefix);
    }
    /**
     * List of address prefixes for the subnet.
     * 
     */
    @Export(name="addressPrefixes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> addressPrefixes;

    /**
     * @return List of address prefixes for the subnet.
     * 
     */
    public Output<Optional<List<String>>> addressPrefixes() {
        return Codegen.optional(this.addressPrefixes);
    }
    /**
     * Application gateway IP configurations of virtual network resource.
     * 
     */
    @Export(name="applicationGatewayIpConfigurations", type=List.class, parameters={ApplicationGatewayIPConfigurationResponse.class})
    private Output</* @Nullable */ List<ApplicationGatewayIPConfigurationResponse>> applicationGatewayIpConfigurations;

    /**
     * @return Application gateway IP configurations of virtual network resource.
     * 
     */
    public Output<Optional<List<ApplicationGatewayIPConfigurationResponse>>> applicationGatewayIpConfigurations() {
        return Codegen.optional(this.applicationGatewayIpConfigurations);
    }
    /**
     * An array of references to the delegations on the subnet.
     * 
     */
    @Export(name="delegations", type=List.class, parameters={DelegationResponse.class})
    private Output</* @Nullable */ List<DelegationResponse>> delegations;

    /**
     * @return An array of references to the delegations on the subnet.
     * 
     */
    public Output<Optional<List<DelegationResponse>>> delegations() {
        return Codegen.optional(this.delegations);
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Array of IpAllocation which reference this subnet.
     * 
     */
    @Export(name="ipAllocations", type=List.class, parameters={SubResourceResponse.class})
    private Output</* @Nullable */ List<SubResourceResponse>> ipAllocations;

    /**
     * @return Array of IpAllocation which reference this subnet.
     * 
     */
    public Output<Optional<List<SubResourceResponse>>> ipAllocations() {
        return Codegen.optional(this.ipAllocations);
    }
    /**
     * Array of IP configuration profiles which reference this subnet.
     * 
     */
    @Export(name="ipConfigurationProfiles", type=List.class, parameters={IPConfigurationProfileResponse.class})
    private Output<List<IPConfigurationProfileResponse>> ipConfigurationProfiles;

    /**
     * @return Array of IP configuration profiles which reference this subnet.
     * 
     */
    public Output<List<IPConfigurationProfileResponse>> ipConfigurationProfiles() {
        return this.ipConfigurationProfiles;
    }
    /**
     * An array of references to the network interface IP configurations using subnet.
     * 
     */
    @Export(name="ipConfigurations", type=List.class, parameters={IPConfigurationResponse.class})
    private Output<List<IPConfigurationResponse>> ipConfigurations;

    /**
     * @return An array of references to the network interface IP configurations using subnet.
     * 
     */
    public Output<List<IPConfigurationResponse>> ipConfigurations() {
        return this.ipConfigurations;
    }
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    /**
     * Nat gateway associated with this subnet.
     * 
     */
    @Export(name="natGateway", type=SubResourceResponse.class, parameters={})
    private Output</* @Nullable */ SubResourceResponse> natGateway;

    /**
     * @return Nat gateway associated with this subnet.
     * 
     */
    public Output<Optional<SubResourceResponse>> natGateway() {
        return Codegen.optional(this.natGateway);
    }
    /**
     * The reference to the NetworkSecurityGroup resource.
     * 
     */
    @Export(name="networkSecurityGroup", type=NetworkSecurityGroupResponse.class, parameters={})
    private Output</* @Nullable */ NetworkSecurityGroupResponse> networkSecurityGroup;

    /**
     * @return The reference to the NetworkSecurityGroup resource.
     * 
     */
    public Output<Optional<NetworkSecurityGroupResponse>> networkSecurityGroup() {
        return Codegen.optional(this.networkSecurityGroup);
    }
    /**
     * Enable or Disable apply network policies on private end point in the subnet.
     * 
     */
    @Export(name="privateEndpointNetworkPolicies", type=String.class, parameters={})
    private Output</* @Nullable */ String> privateEndpointNetworkPolicies;

    /**
     * @return Enable or Disable apply network policies on private end point in the subnet.
     * 
     */
    public Output<Optional<String>> privateEndpointNetworkPolicies() {
        return Codegen.optional(this.privateEndpointNetworkPolicies);
    }
    /**
     * An array of references to private endpoints.
     * 
     */
    @Export(name="privateEndpoints", type=List.class, parameters={PrivateEndpointResponse.class})
    private Output<List<PrivateEndpointResponse>> privateEndpoints;

    /**
     * @return An array of references to private endpoints.
     * 
     */
    public Output<List<PrivateEndpointResponse>> privateEndpoints() {
        return this.privateEndpoints;
    }
    /**
     * Enable or Disable apply network policies on private link service in the subnet.
     * 
     */
    @Export(name="privateLinkServiceNetworkPolicies", type=String.class, parameters={})
    private Output</* @Nullable */ String> privateLinkServiceNetworkPolicies;

    /**
     * @return Enable or Disable apply network policies on private link service in the subnet.
     * 
     */
    public Output<Optional<String>> privateLinkServiceNetworkPolicies() {
        return Codegen.optional(this.privateLinkServiceNetworkPolicies);
    }
    /**
     * The provisioning state of the subnet resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the subnet resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
     * 
     */
    @Export(name="purpose", type=String.class, parameters={})
    private Output<String> purpose;

    /**
     * @return A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
     * 
     */
    public Output<String> purpose() {
        return this.purpose;
    }
    /**
     * An array of references to the external resources using subnet.
     * 
     */
    @Export(name="resourceNavigationLinks", type=List.class, parameters={ResourceNavigationLinkResponse.class})
    private Output<List<ResourceNavigationLinkResponse>> resourceNavigationLinks;

    /**
     * @return An array of references to the external resources using subnet.
     * 
     */
    public Output<List<ResourceNavigationLinkResponse>> resourceNavigationLinks() {
        return this.resourceNavigationLinks;
    }
    /**
     * The reference to the RouteTable resource.
     * 
     */
    @Export(name="routeTable", type=RouteTableResponse.class, parameters={})
    private Output</* @Nullable */ RouteTableResponse> routeTable;

    /**
     * @return The reference to the RouteTable resource.
     * 
     */
    public Output<Optional<RouteTableResponse>> routeTable() {
        return Codegen.optional(this.routeTable);
    }
    /**
     * An array of references to services injecting into this subnet.
     * 
     */
    @Export(name="serviceAssociationLinks", type=List.class, parameters={ServiceAssociationLinkResponse.class})
    private Output<List<ServiceAssociationLinkResponse>> serviceAssociationLinks;

    /**
     * @return An array of references to services injecting into this subnet.
     * 
     */
    public Output<List<ServiceAssociationLinkResponse>> serviceAssociationLinks() {
        return this.serviceAssociationLinks;
    }
    /**
     * An array of service endpoint policies.
     * 
     */
    @Export(name="serviceEndpointPolicies", type=List.class, parameters={ServiceEndpointPolicyResponse.class})
    private Output</* @Nullable */ List<ServiceEndpointPolicyResponse>> serviceEndpointPolicies;

    /**
     * @return An array of service endpoint policies.
     * 
     */
    public Output<Optional<List<ServiceEndpointPolicyResponse>>> serviceEndpointPolicies() {
        return Codegen.optional(this.serviceEndpointPolicies);
    }
    /**
     * An array of service endpoints.
     * 
     */
    @Export(name="serviceEndpoints", type=List.class, parameters={ServiceEndpointPropertiesFormatResponse.class})
    private Output</* @Nullable */ List<ServiceEndpointPropertiesFormatResponse>> serviceEndpoints;

    /**
     * @return An array of service endpoints.
     * 
     */
    public Output<Optional<List<ServiceEndpointPropertiesFormatResponse>>> serviceEndpoints() {
        return Codegen.optional(this.serviceEndpoints);
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output</* @Nullable */ String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Subnet(String name) {
        this(name, SubnetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Subnet(String name, SubnetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Subnet(String name, SubnetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:Subnet", name, args == null ? SubnetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Subnet(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:Subnet", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:network/v20150501preview:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20150615:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20160330:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20160601:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20160901:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20161201:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20170301:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20170601:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20170801:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20170901:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20171001:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20171101:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180101:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180201:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180401:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180601:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180701:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180801:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181001:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181101:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181201:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190201:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190401:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190601:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190701:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190801:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190901:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191101:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191201:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200301:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200401:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200501:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200601:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200701:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200801:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20201101:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210201:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210301:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210501:Subnet").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210801:Subnet").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Subnet get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Subnet(name, id, options);
    }
}
