// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.inputs;

import com.pulumi.azurenative.edgeorder.inputs.ErrorAdditionalInfoResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The error detail.
 * 
 */
public final class ErrorDetailResponse extends com.pulumi.resources.InvokeArgs {

    public static final ErrorDetailResponse Empty = new ErrorDetailResponse();

    /**
     * The error additional info.
     * 
     */
    @Import(name="additionalInfo", required=true)
    private List<ErrorAdditionalInfoResponse> additionalInfo;

    /**
     * @return The error additional info.
     * 
     */
    public List<ErrorAdditionalInfoResponse> additionalInfo() {
        return this.additionalInfo;
    }

    /**
     * The error code.
     * 
     */
    @Import(name="code", required=true)
    private String code;

    /**
     * @return The error code.
     * 
     */
    public String code() {
        return this.code;
    }

    /**
     * The error details.
     * 
     */
    @Import(name="details", required=true)
    private List<ErrorDetailResponse> details;

    /**
     * @return The error details.
     * 
     */
    public List<ErrorDetailResponse> details() {
        return this.details;
    }

    /**
     * The error message.
     * 
     */
    @Import(name="message", required=true)
    private String message;

    /**
     * @return The error message.
     * 
     */
    public String message() {
        return this.message;
    }

    /**
     * The error target.
     * 
     */
    @Import(name="target", required=true)
    private String target;

    /**
     * @return The error target.
     * 
     */
    public String target() {
        return this.target;
    }

    private ErrorDetailResponse() {}

    private ErrorDetailResponse(ErrorDetailResponse $) {
        this.additionalInfo = $.additionalInfo;
        this.code = $.code;
        this.details = $.details;
        this.message = $.message;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ErrorDetailResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ErrorDetailResponse $;

        public Builder() {
            $ = new ErrorDetailResponse();
        }

        public Builder(ErrorDetailResponse defaults) {
            $ = new ErrorDetailResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalInfo The error additional info.
         * 
         * @return builder
         * 
         */
        public Builder additionalInfo(List<ErrorAdditionalInfoResponse> additionalInfo) {
            $.additionalInfo = additionalInfo;
            return this;
        }

        /**
         * @param additionalInfo The error additional info.
         * 
         * @return builder
         * 
         */
        public Builder additionalInfo(ErrorAdditionalInfoResponse... additionalInfo) {
            return additionalInfo(List.of(additionalInfo));
        }

        /**
         * @param code The error code.
         * 
         * @return builder
         * 
         */
        public Builder code(String code) {
            $.code = code;
            return this;
        }

        /**
         * @param details The error details.
         * 
         * @return builder
         * 
         */
        public Builder details(List<ErrorDetailResponse> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details The error details.
         * 
         * @return builder
         * 
         */
        public Builder details(ErrorDetailResponse... details) {
            return details(List.of(details));
        }

        /**
         * @param message The error message.
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            $.message = message;
            return this;
        }

        /**
         * @param target The error target.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            $.target = target;
            return this;
        }

        public ErrorDetailResponse build() {
            $.additionalInfo = Objects.requireNonNull($.additionalInfo, "expected parameter 'additionalInfo' to be non-null");
            $.code = Objects.requireNonNull($.code, "expected parameter 'code' to be non-null");
            $.details = Objects.requireNonNull($.details, "expected parameter 'details' to be non-null");
            $.message = Objects.requireNonNull($.message, "expected parameter 'message' to be non-null");
            $.target = Objects.requireNonNull($.target, "expected parameter 'target' to be non-null");
            return $;
        }
    }

}
