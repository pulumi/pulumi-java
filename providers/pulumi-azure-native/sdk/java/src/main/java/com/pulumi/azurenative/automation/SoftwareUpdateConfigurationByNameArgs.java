// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation;

import com.pulumi.azurenative.automation.inputs.ErrorResponseArgs;
import com.pulumi.azurenative.automation.inputs.SUCSchedulePropertiesArgs;
import com.pulumi.azurenative.automation.inputs.SoftwareUpdateConfigurationTasksArgs;
import com.pulumi.azurenative.automation.inputs.UpdateConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SoftwareUpdateConfigurationByNameArgs extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareUpdateConfigurationByNameArgs Empty = new SoftwareUpdateConfigurationByNameArgs();

    /**
     * The name of the automation account.
     * 
     */
    @Import(name="automationAccountName", required=true)
    private Output<String> automationAccountName;

    public Output<String> automationAccountName() {
        return this.automationAccountName;
    }

    /**
     * Details of provisioning error
     * 
     */
    @Import(name="error")
    private @Nullable Output<ErrorResponseArgs> error;

    public Optional<Output<ErrorResponseArgs>> error() {
        return Optional.ofNullable(this.error);
    }

    /**
     * Name of an Azure Resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Schedule information for the Software update configuration
     * 
     */
    @Import(name="scheduleInfo", required=true)
    private Output<SUCSchedulePropertiesArgs> scheduleInfo;

    public Output<SUCSchedulePropertiesArgs> scheduleInfo() {
        return this.scheduleInfo;
    }

    /**
     * The name of the software update configuration to be created.
     * 
     */
    @Import(name="softwareUpdateConfigurationName")
    private @Nullable Output<String> softwareUpdateConfigurationName;

    public Optional<Output<String>> softwareUpdateConfigurationName() {
        return Optional.ofNullable(this.softwareUpdateConfigurationName);
    }

    /**
     * Tasks information for the Software update configuration.
     * 
     */
    @Import(name="tasks")
    private @Nullable Output<SoftwareUpdateConfigurationTasksArgs> tasks;

    public Optional<Output<SoftwareUpdateConfigurationTasksArgs>> tasks() {
        return Optional.ofNullable(this.tasks);
    }

    /**
     * update specific properties for the Software update configuration
     * 
     */
    @Import(name="updateConfiguration", required=true)
    private Output<UpdateConfigurationArgs> updateConfiguration;

    public Output<UpdateConfigurationArgs> updateConfiguration() {
        return this.updateConfiguration;
    }

    private SoftwareUpdateConfigurationByNameArgs() {}

    private SoftwareUpdateConfigurationByNameArgs(SoftwareUpdateConfigurationByNameArgs $) {
        this.automationAccountName = $.automationAccountName;
        this.error = $.error;
        this.resourceGroupName = $.resourceGroupName;
        this.scheduleInfo = $.scheduleInfo;
        this.softwareUpdateConfigurationName = $.softwareUpdateConfigurationName;
        this.tasks = $.tasks;
        this.updateConfiguration = $.updateConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareUpdateConfigurationByNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareUpdateConfigurationByNameArgs $;

        public Builder() {
            $ = new SoftwareUpdateConfigurationByNameArgs();
        }

        public Builder(SoftwareUpdateConfigurationByNameArgs defaults) {
            $ = new SoftwareUpdateConfigurationByNameArgs(Objects.requireNonNull(defaults));
        }

        public Builder automationAccountName(Output<String> automationAccountName) {
            $.automationAccountName = automationAccountName;
            return this;
        }

        public Builder automationAccountName(String automationAccountName) {
            return automationAccountName(Output.of(automationAccountName));
        }

        public Builder error(@Nullable Output<ErrorResponseArgs> error) {
            $.error = error;
            return this;
        }

        public Builder error(ErrorResponseArgs error) {
            return error(Output.of(error));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder scheduleInfo(Output<SUCSchedulePropertiesArgs> scheduleInfo) {
            $.scheduleInfo = scheduleInfo;
            return this;
        }

        public Builder scheduleInfo(SUCSchedulePropertiesArgs scheduleInfo) {
            return scheduleInfo(Output.of(scheduleInfo));
        }

        public Builder softwareUpdateConfigurationName(@Nullable Output<String> softwareUpdateConfigurationName) {
            $.softwareUpdateConfigurationName = softwareUpdateConfigurationName;
            return this;
        }

        public Builder softwareUpdateConfigurationName(String softwareUpdateConfigurationName) {
            return softwareUpdateConfigurationName(Output.of(softwareUpdateConfigurationName));
        }

        public Builder tasks(@Nullable Output<SoftwareUpdateConfigurationTasksArgs> tasks) {
            $.tasks = tasks;
            return this;
        }

        public Builder tasks(SoftwareUpdateConfigurationTasksArgs tasks) {
            return tasks(Output.of(tasks));
        }

        public Builder updateConfiguration(Output<UpdateConfigurationArgs> updateConfiguration) {
            $.updateConfiguration = updateConfiguration;
            return this;
        }

        public Builder updateConfiguration(UpdateConfigurationArgs updateConfiguration) {
            return updateConfiguration(Output.of(updateConfiguration));
        }

        public SoftwareUpdateConfigurationByNameArgs build() {
            $.automationAccountName = Objects.requireNonNull($.automationAccountName, "expected parameter 'automationAccountName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.scheduleInfo = Objects.requireNonNull($.scheduleInfo, "expected parameter 'scheduleInfo' to be non-null");
            $.updateConfiguration = Objects.requireNonNull($.updateConfiguration, "expected parameter 'updateConfiguration' to be non-null");
            return $;
        }
    }

}
