// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of a network port.
 * 
 */
public final class PortResponse extends com.pulumi.resources.InvokeArgs {

    public static final PortResponse Empty = new PortResponse();

    /**
     * Backend port of the target virtual machine.
     * 
     */
    @Import(name="backendPort")
    private @Nullable Integer backendPort;

    public Optional<Integer> backendPort() {
        return Optional.ofNullable(this.backendPort);
    }

    /**
     * Protocol type of the port.
     * 
     */
    @Import(name="transportProtocol")
    private @Nullable String transportProtocol;

    public Optional<String> transportProtocol() {
        return Optional.ofNullable(this.transportProtocol);
    }

    private PortResponse() {}

    private PortResponse(PortResponse $) {
        this.backendPort = $.backendPort;
        this.transportProtocol = $.transportProtocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortResponse $;

        public Builder() {
            $ = new PortResponse();
        }

        public Builder(PortResponse defaults) {
            $ = new PortResponse(Objects.requireNonNull(defaults));
        }

        public Builder backendPort(@Nullable Integer backendPort) {
            $.backendPort = backendPort;
            return this;
        }

        public Builder transportProtocol(@Nullable String transportProtocol) {
            $.transportProtocol = transportProtocol;
            return this;
        }

        public PortResponse build() {
            return $;
        }
    }

}
