// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.vmwarecloudsimple.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Guest OS Customization properties
 * 
 */
public final class GuestOSCustomizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GuestOSCustomizationArgs Empty = new GuestOSCustomizationArgs();

    /**
     * List of dns servers to use
     * 
     */
    @Import(name="dnsServers")
    private @Nullable Output<List<String>> dnsServers;

    /**
     * @return List of dns servers to use
     * 
     */
    public Optional<Output<List<String>>> dnsServers() {
        return Optional.ofNullable(this.dnsServers);
    }

    /**
     * Virtual Machine hostname
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return Virtual Machine hostname
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * Password for login
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Password for login
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * id of customization policy
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return id of customization policy
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * Username for login
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return Username for login
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private GuestOSCustomizationArgs() {}

    private GuestOSCustomizationArgs(GuestOSCustomizationArgs $) {
        this.dnsServers = $.dnsServers;
        this.hostName = $.hostName;
        this.password = $.password;
        this.policyId = $.policyId;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GuestOSCustomizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GuestOSCustomizationArgs $;

        public Builder() {
            $ = new GuestOSCustomizationArgs();
        }

        public Builder(GuestOSCustomizationArgs defaults) {
            $ = new GuestOSCustomizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsServers List of dns servers to use
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(@Nullable Output<List<String>> dnsServers) {
            $.dnsServers = dnsServers;
            return this;
        }

        /**
         * @param dnsServers List of dns servers to use
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(List<String> dnsServers) {
            return dnsServers(Output.of(dnsServers));
        }

        /**
         * @param dnsServers List of dns servers to use
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }

        /**
         * @param hostName Virtual Machine hostname
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName Virtual Machine hostname
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param password Password for login
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Password for login
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param policyId id of customization policy
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId id of customization policy
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        /**
         * @param username Username for login
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Username for login
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public GuestOSCustomizationArgs build() {
            return $;
        }
    }

}
