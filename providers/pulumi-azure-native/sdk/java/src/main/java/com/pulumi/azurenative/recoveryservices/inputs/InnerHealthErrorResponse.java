// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&amp;gt; InnerException.
 * 
 */
public final class InnerHealthErrorResponse extends com.pulumi.resources.InvokeArgs {

    public static final InnerHealthErrorResponse Empty = new InnerHealthErrorResponse();

    /**
     * Error creation time (UTC)
     * 
     */
    @Import(name="creationTimeUtc")
    private @Nullable String creationTimeUtc;

    /**
     * @return Error creation time (UTC)
     * 
     */
    public Optional<String> creationTimeUtc() {
        return Optional.ofNullable(this.creationTimeUtc);
    }

    /**
     * ID of the entity.
     * 
     */
    @Import(name="entityId")
    private @Nullable String entityId;

    /**
     * @return ID of the entity.
     * 
     */
    public Optional<String> entityId() {
        return Optional.ofNullable(this.entityId);
    }

    /**
     * Category of error.
     * 
     */
    @Import(name="errorCategory")
    private @Nullable String errorCategory;

    /**
     * @return Category of error.
     * 
     */
    public Optional<String> errorCategory() {
        return Optional.ofNullable(this.errorCategory);
    }

    /**
     * Error code.
     * 
     */
    @Import(name="errorCode")
    private @Nullable String errorCode;

    /**
     * @return Error code.
     * 
     */
    public Optional<String> errorCode() {
        return Optional.ofNullable(this.errorCode);
    }

    /**
     * Level of error.
     * 
     */
    @Import(name="errorLevel")
    private @Nullable String errorLevel;

    /**
     * @return Level of error.
     * 
     */
    public Optional<String> errorLevel() {
        return Optional.ofNullable(this.errorLevel);
    }

    /**
     * Error message.
     * 
     */
    @Import(name="errorMessage")
    private @Nullable String errorMessage;

    /**
     * @return Error message.
     * 
     */
    public Optional<String> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }

    /**
     * Source of error.
     * 
     */
    @Import(name="errorSource")
    private @Nullable String errorSource;

    /**
     * @return Source of error.
     * 
     */
    public Optional<String> errorSource() {
        return Optional.ofNullable(this.errorSource);
    }

    /**
     * Type of error.
     * 
     */
    @Import(name="errorType")
    private @Nullable String errorType;

    /**
     * @return Type of error.
     * 
     */
    public Optional<String> errorType() {
        return Optional.ofNullable(this.errorType);
    }

    /**
     * Possible causes of error.
     * 
     */
    @Import(name="possibleCauses")
    private @Nullable String possibleCauses;

    /**
     * @return Possible causes of error.
     * 
     */
    public Optional<String> possibleCauses() {
        return Optional.ofNullable(this.possibleCauses);
    }

    /**
     * Recommended action to resolve error.
     * 
     */
    @Import(name="recommendedAction")
    private @Nullable String recommendedAction;

    /**
     * @return Recommended action to resolve error.
     * 
     */
    public Optional<String> recommendedAction() {
        return Optional.ofNullable(this.recommendedAction);
    }

    /**
     * DRA error message.
     * 
     */
    @Import(name="recoveryProviderErrorMessage")
    private @Nullable String recoveryProviderErrorMessage;

    /**
     * @return DRA error message.
     * 
     */
    public Optional<String> recoveryProviderErrorMessage() {
        return Optional.ofNullable(this.recoveryProviderErrorMessage);
    }

    /**
     * Summary message of the entity.
     * 
     */
    @Import(name="summaryMessage")
    private @Nullable String summaryMessage;

    /**
     * @return Summary message of the entity.
     * 
     */
    public Optional<String> summaryMessage() {
        return Optional.ofNullable(this.summaryMessage);
    }

    private InnerHealthErrorResponse() {}

    private InnerHealthErrorResponse(InnerHealthErrorResponse $) {
        this.creationTimeUtc = $.creationTimeUtc;
        this.entityId = $.entityId;
        this.errorCategory = $.errorCategory;
        this.errorCode = $.errorCode;
        this.errorLevel = $.errorLevel;
        this.errorMessage = $.errorMessage;
        this.errorSource = $.errorSource;
        this.errorType = $.errorType;
        this.possibleCauses = $.possibleCauses;
        this.recommendedAction = $.recommendedAction;
        this.recoveryProviderErrorMessage = $.recoveryProviderErrorMessage;
        this.summaryMessage = $.summaryMessage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InnerHealthErrorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InnerHealthErrorResponse $;

        public Builder() {
            $ = new InnerHealthErrorResponse();
        }

        public Builder(InnerHealthErrorResponse defaults) {
            $ = new InnerHealthErrorResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationTimeUtc Error creation time (UTC)
         * 
         * @return builder
         * 
         */
        public Builder creationTimeUtc(@Nullable String creationTimeUtc) {
            $.creationTimeUtc = creationTimeUtc;
            return this;
        }

        /**
         * @param entityId ID of the entity.
         * 
         * @return builder
         * 
         */
        public Builder entityId(@Nullable String entityId) {
            $.entityId = entityId;
            return this;
        }

        /**
         * @param errorCategory Category of error.
         * 
         * @return builder
         * 
         */
        public Builder errorCategory(@Nullable String errorCategory) {
            $.errorCategory = errorCategory;
            return this;
        }

        /**
         * @param errorCode Error code.
         * 
         * @return builder
         * 
         */
        public Builder errorCode(@Nullable String errorCode) {
            $.errorCode = errorCode;
            return this;
        }

        /**
         * @param errorLevel Level of error.
         * 
         * @return builder
         * 
         */
        public Builder errorLevel(@Nullable String errorLevel) {
            $.errorLevel = errorLevel;
            return this;
        }

        /**
         * @param errorMessage Error message.
         * 
         * @return builder
         * 
         */
        public Builder errorMessage(@Nullable String errorMessage) {
            $.errorMessage = errorMessage;
            return this;
        }

        /**
         * @param errorSource Source of error.
         * 
         * @return builder
         * 
         */
        public Builder errorSource(@Nullable String errorSource) {
            $.errorSource = errorSource;
            return this;
        }

        /**
         * @param errorType Type of error.
         * 
         * @return builder
         * 
         */
        public Builder errorType(@Nullable String errorType) {
            $.errorType = errorType;
            return this;
        }

        /**
         * @param possibleCauses Possible causes of error.
         * 
         * @return builder
         * 
         */
        public Builder possibleCauses(@Nullable String possibleCauses) {
            $.possibleCauses = possibleCauses;
            return this;
        }

        /**
         * @param recommendedAction Recommended action to resolve error.
         * 
         * @return builder
         * 
         */
        public Builder recommendedAction(@Nullable String recommendedAction) {
            $.recommendedAction = recommendedAction;
            return this;
        }

        /**
         * @param recoveryProviderErrorMessage DRA error message.
         * 
         * @return builder
         * 
         */
        public Builder recoveryProviderErrorMessage(@Nullable String recoveryProviderErrorMessage) {
            $.recoveryProviderErrorMessage = recoveryProviderErrorMessage;
            return this;
        }

        /**
         * @param summaryMessage Summary message of the entity.
         * 
         * @return builder
         * 
         */
        public Builder summaryMessage(@Nullable String summaryMessage) {
            $.summaryMessage = summaryMessage;
            return this;
        }

        public InnerHealthErrorResponse build() {
            return $;
        }
    }

}
