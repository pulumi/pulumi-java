// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.ModelDockerSectionBaseImageRegistryArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The definition of a Docker container.
 * 
 */
public final class ModelEnvironmentDefinitionDockerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelEnvironmentDefinitionDockerArgs Empty = new ModelEnvironmentDefinitionDockerArgs();

    /**
     * Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
     * 
     */
    @Import(name="baseDockerfile")
    private @Nullable Output<String> baseDockerfile;

    public Optional<Output<String>> baseDockerfile() {
        return Optional.ofNullable(this.baseDockerfile);
    }

    /**
     * Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
     * 
     */
    @Import(name="baseImage")
    private @Nullable Output<String> baseImage;

    public Optional<Output<String>> baseImage() {
        return Optional.ofNullable(this.baseImage);
    }

    /**
     * Image registry that contains the base image.
     * 
     */
    @Import(name="baseImageRegistry")
    private @Nullable Output<ModelDockerSectionBaseImageRegistryArgs> baseImageRegistry;

    public Optional<Output<ModelDockerSectionBaseImageRegistryArgs>> baseImageRegistry() {
        return Optional.ofNullable(this.baseImageRegistry);
    }

    private ModelEnvironmentDefinitionDockerArgs() {}

    private ModelEnvironmentDefinitionDockerArgs(ModelEnvironmentDefinitionDockerArgs $) {
        this.baseDockerfile = $.baseDockerfile;
        this.baseImage = $.baseImage;
        this.baseImageRegistry = $.baseImageRegistry;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelEnvironmentDefinitionDockerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelEnvironmentDefinitionDockerArgs $;

        public Builder() {
            $ = new ModelEnvironmentDefinitionDockerArgs();
        }

        public Builder(ModelEnvironmentDefinitionDockerArgs defaults) {
            $ = new ModelEnvironmentDefinitionDockerArgs(Objects.requireNonNull(defaults));
        }

        public Builder baseDockerfile(@Nullable Output<String> baseDockerfile) {
            $.baseDockerfile = baseDockerfile;
            return this;
        }

        public Builder baseDockerfile(String baseDockerfile) {
            return baseDockerfile(Output.of(baseDockerfile));
        }

        public Builder baseImage(@Nullable Output<String> baseImage) {
            $.baseImage = baseImage;
            return this;
        }

        public Builder baseImage(String baseImage) {
            return baseImage(Output.of(baseImage));
        }

        public Builder baseImageRegistry(@Nullable Output<ModelDockerSectionBaseImageRegistryArgs> baseImageRegistry) {
            $.baseImageRegistry = baseImageRegistry;
            return this;
        }

        public Builder baseImageRegistry(ModelDockerSectionBaseImageRegistryArgs baseImageRegistry) {
            return baseImageRegistry(Output.of(baseImageRegistry));
        }

        public ModelEnvironmentDefinitionDockerArgs build() {
            return $;
        }
    }

}
