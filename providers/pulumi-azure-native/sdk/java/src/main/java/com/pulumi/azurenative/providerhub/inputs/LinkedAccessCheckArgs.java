// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinkedAccessCheckArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinkedAccessCheckArgs Empty = new LinkedAccessCheckArgs();

    @Import(name="actionName")
    private @Nullable Output<String> actionName;

    public Optional<Output<String>> actionName() {
        return Optional.ofNullable(this.actionName);
    }

    @Import(name="linkedAction")
    private @Nullable Output<String> linkedAction;

    public Optional<Output<String>> linkedAction() {
        return Optional.ofNullable(this.linkedAction);
    }

    @Import(name="linkedActionVerb")
    private @Nullable Output<String> linkedActionVerb;

    public Optional<Output<String>> linkedActionVerb() {
        return Optional.ofNullable(this.linkedActionVerb);
    }

    @Import(name="linkedProperty")
    private @Nullable Output<String> linkedProperty;

    public Optional<Output<String>> linkedProperty() {
        return Optional.ofNullable(this.linkedProperty);
    }

    @Import(name="linkedType")
    private @Nullable Output<String> linkedType;

    public Optional<Output<String>> linkedType() {
        return Optional.ofNullable(this.linkedType);
    }

    private LinkedAccessCheckArgs() {}

    private LinkedAccessCheckArgs(LinkedAccessCheckArgs $) {
        this.actionName = $.actionName;
        this.linkedAction = $.linkedAction;
        this.linkedActionVerb = $.linkedActionVerb;
        this.linkedProperty = $.linkedProperty;
        this.linkedType = $.linkedType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinkedAccessCheckArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinkedAccessCheckArgs $;

        public Builder() {
            $ = new LinkedAccessCheckArgs();
        }

        public Builder(LinkedAccessCheckArgs defaults) {
            $ = new LinkedAccessCheckArgs(Objects.requireNonNull(defaults));
        }

        public Builder actionName(@Nullable Output<String> actionName) {
            $.actionName = actionName;
            return this;
        }

        public Builder actionName(String actionName) {
            return actionName(Output.of(actionName));
        }

        public Builder linkedAction(@Nullable Output<String> linkedAction) {
            $.linkedAction = linkedAction;
            return this;
        }

        public Builder linkedAction(String linkedAction) {
            return linkedAction(Output.of(linkedAction));
        }

        public Builder linkedActionVerb(@Nullable Output<String> linkedActionVerb) {
            $.linkedActionVerb = linkedActionVerb;
            return this;
        }

        public Builder linkedActionVerb(String linkedActionVerb) {
            return linkedActionVerb(Output.of(linkedActionVerb));
        }

        public Builder linkedProperty(@Nullable Output<String> linkedProperty) {
            $.linkedProperty = linkedProperty;
            return this;
        }

        public Builder linkedProperty(String linkedProperty) {
            return linkedProperty(Output.of(linkedProperty));
        }

        public Builder linkedType(@Nullable Output<String> linkedType) {
            $.linkedType = linkedType;
            return this;
        }

        public Builder linkedType(String linkedType) {
            return linkedType(Output.of(linkedType));
        }

        public LinkedAccessCheckArgs build() {
            return $;
        }
    }

}
