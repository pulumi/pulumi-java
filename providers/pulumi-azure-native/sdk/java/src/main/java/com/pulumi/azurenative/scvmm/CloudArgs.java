// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scvmm;

import com.pulumi.azurenative.scvmm.inputs.ExtendedLocationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudArgs Empty = new CloudArgs();

    /**
     * Name of the Cloud.
     * 
     */
    @Import(name="cloudName")
    private @Nullable Output<String> cloudName;

    /**
     * @return Name of the Cloud.
     * 
     */
    public Optional<Output<String>> cloudName() {
        return Optional.ofNullable(this.cloudName);
    }

    /**
     * The extended location.
     * 
     */
    @Import(name="extendedLocation", required=true)
    private Output<ExtendedLocationArgs> extendedLocation;

    /**
     * @return The extended location.
     * 
     */
    public Output<ExtendedLocationArgs> extendedLocation() {
        return this.extendedLocation;
    }

    /**
     * Gets or sets the inventory Item ID for the resource.
     * 
     */
    @Import(name="inventoryItemId")
    private @Nullable Output<String> inventoryItemId;

    /**
     * @return Gets or sets the inventory Item ID for the resource.
     * 
     */
    public Optional<Output<String>> inventoryItemId() {
        return Optional.ofNullable(this.inventoryItemId);
    }

    /**
     * Gets or sets the location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Gets or sets the location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Unique ID of the cloud.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return Unique ID of the cloud.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    /**
     * ARM Id of the vmmServer resource in which this resource resides.
     * 
     */
    @Import(name="vmmServerId")
    private @Nullable Output<String> vmmServerId;

    /**
     * @return ARM Id of the vmmServer resource in which this resource resides.
     * 
     */
    public Optional<Output<String>> vmmServerId() {
        return Optional.ofNullable(this.vmmServerId);
    }

    private CloudArgs() {}

    private CloudArgs(CloudArgs $) {
        this.cloudName = $.cloudName;
        this.extendedLocation = $.extendedLocation;
        this.inventoryItemId = $.inventoryItemId;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.uuid = $.uuid;
        this.vmmServerId = $.vmmServerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudArgs $;

        public Builder() {
            $ = new CloudArgs();
        }

        public Builder(CloudArgs defaults) {
            $ = new CloudArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudName Name of the Cloud.
         * 
         * @return builder
         * 
         */
        public Builder cloudName(@Nullable Output<String> cloudName) {
            $.cloudName = cloudName;
            return this;
        }

        /**
         * @param cloudName Name of the Cloud.
         * 
         * @return builder
         * 
         */
        public Builder cloudName(String cloudName) {
            return cloudName(Output.of(cloudName));
        }

        /**
         * @param extendedLocation The extended location.
         * 
         * @return builder
         * 
         */
        public Builder extendedLocation(Output<ExtendedLocationArgs> extendedLocation) {
            $.extendedLocation = extendedLocation;
            return this;
        }

        /**
         * @param extendedLocation The extended location.
         * 
         * @return builder
         * 
         */
        public Builder extendedLocation(ExtendedLocationArgs extendedLocation) {
            return extendedLocation(Output.of(extendedLocation));
        }

        /**
         * @param inventoryItemId Gets or sets the inventory Item ID for the resource.
         * 
         * @return builder
         * 
         */
        public Builder inventoryItemId(@Nullable Output<String> inventoryItemId) {
            $.inventoryItemId = inventoryItemId;
            return this;
        }

        /**
         * @param inventoryItemId Gets or sets the inventory Item ID for the resource.
         * 
         * @return builder
         * 
         */
        public Builder inventoryItemId(String inventoryItemId) {
            return inventoryItemId(Output.of(inventoryItemId));
        }

        /**
         * @param location Gets or sets the location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Gets or sets the location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param uuid Unique ID of the cloud.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid Unique ID of the cloud.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        /**
         * @param vmmServerId ARM Id of the vmmServer resource in which this resource resides.
         * 
         * @return builder
         * 
         */
        public Builder vmmServerId(@Nullable Output<String> vmmServerId) {
            $.vmmServerId = vmmServerId;
            return this;
        }

        /**
         * @param vmmServerId ARM Id of the vmmServer resource in which this resource resides.
         * 
         * @return builder
         * 
         */
        public Builder vmmServerId(String vmmServerId) {
            return vmmServerId(Output.of(vmmServerId));
        }

        public CloudArgs build() {
            $.extendedLocation = Objects.requireNonNull($.extendedLocation, "expected parameter 'extendedLocation' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
