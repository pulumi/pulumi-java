// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.azurenative.storage.inputs.StorageAccountInternetEndpointsResponse;
import com.pulumi.azurenative.storage.inputs.StorageAccountMicrosoftEndpointsResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
 * 
 */
public final class EndpointsResponse extends com.pulumi.resources.InvokeArgs {

    public static final EndpointsResponse Empty = new EndpointsResponse();

    /**
     * Gets the blob endpoint.
     * 
     */
    @Import(name="blob", required=true)
    private String blob;

    /**
     * @return Gets the blob endpoint.
     * 
     */
    public String blob() {
        return this.blob;
    }

    /**
     * Gets the dfs endpoint.
     * 
     */
    @Import(name="dfs", required=true)
    private String dfs;

    /**
     * @return Gets the dfs endpoint.
     * 
     */
    public String dfs() {
        return this.dfs;
    }

    /**
     * Gets the file endpoint.
     * 
     */
    @Import(name="file", required=true)
    private String file;

    /**
     * @return Gets the file endpoint.
     * 
     */
    public String file() {
        return this.file;
    }

    /**
     * Gets the internet routing storage endpoints
     * 
     */
    @Import(name="internetEndpoints")
    private @Nullable StorageAccountInternetEndpointsResponse internetEndpoints;

    /**
     * @return Gets the internet routing storage endpoints
     * 
     */
    public Optional<StorageAccountInternetEndpointsResponse> internetEndpoints() {
        return Optional.ofNullable(this.internetEndpoints);
    }

    /**
     * Gets the microsoft routing storage endpoints.
     * 
     */
    @Import(name="microsoftEndpoints")
    private @Nullable StorageAccountMicrosoftEndpointsResponse microsoftEndpoints;

    /**
     * @return Gets the microsoft routing storage endpoints.
     * 
     */
    public Optional<StorageAccountMicrosoftEndpointsResponse> microsoftEndpoints() {
        return Optional.ofNullable(this.microsoftEndpoints);
    }

    /**
     * Gets the queue endpoint.
     * 
     */
    @Import(name="queue", required=true)
    private String queue;

    /**
     * @return Gets the queue endpoint.
     * 
     */
    public String queue() {
        return this.queue;
    }

    /**
     * Gets the table endpoint.
     * 
     */
    @Import(name="table", required=true)
    private String table;

    /**
     * @return Gets the table endpoint.
     * 
     */
    public String table() {
        return this.table;
    }

    /**
     * Gets the web endpoint.
     * 
     */
    @Import(name="web", required=true)
    private String web;

    /**
     * @return Gets the web endpoint.
     * 
     */
    public String web() {
        return this.web;
    }

    private EndpointsResponse() {}

    private EndpointsResponse(EndpointsResponse $) {
        this.blob = $.blob;
        this.dfs = $.dfs;
        this.file = $.file;
        this.internetEndpoints = $.internetEndpoints;
        this.microsoftEndpoints = $.microsoftEndpoints;
        this.queue = $.queue;
        this.table = $.table;
        this.web = $.web;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointsResponse $;

        public Builder() {
            $ = new EndpointsResponse();
        }

        public Builder(EndpointsResponse defaults) {
            $ = new EndpointsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param blob Gets the blob endpoint.
         * 
         * @return builder
         * 
         */
        public Builder blob(String blob) {
            $.blob = blob;
            return this;
        }

        /**
         * @param dfs Gets the dfs endpoint.
         * 
         * @return builder
         * 
         */
        public Builder dfs(String dfs) {
            $.dfs = dfs;
            return this;
        }

        /**
         * @param file Gets the file endpoint.
         * 
         * @return builder
         * 
         */
        public Builder file(String file) {
            $.file = file;
            return this;
        }

        /**
         * @param internetEndpoints Gets the internet routing storage endpoints
         * 
         * @return builder
         * 
         */
        public Builder internetEndpoints(@Nullable StorageAccountInternetEndpointsResponse internetEndpoints) {
            $.internetEndpoints = internetEndpoints;
            return this;
        }

        /**
         * @param microsoftEndpoints Gets the microsoft routing storage endpoints.
         * 
         * @return builder
         * 
         */
        public Builder microsoftEndpoints(@Nullable StorageAccountMicrosoftEndpointsResponse microsoftEndpoints) {
            $.microsoftEndpoints = microsoftEndpoints;
            return this;
        }

        /**
         * @param queue Gets the queue endpoint.
         * 
         * @return builder
         * 
         */
        public Builder queue(String queue) {
            $.queue = queue;
            return this;
        }

        /**
         * @param table Gets the table endpoint.
         * 
         * @return builder
         * 
         */
        public Builder table(String table) {
            $.table = table;
            return this;
        }

        /**
         * @param web Gets the web endpoint.
         * 
         * @return builder
         * 
         */
        public Builder web(String web) {
            $.web = web;
            return this;
        }

        public EndpointsResponse build() {
            $.blob = Objects.requireNonNull($.blob, "expected parameter 'blob' to be non-null");
            $.dfs = Objects.requireNonNull($.dfs, "expected parameter 'dfs' to be non-null");
            $.file = Objects.requireNonNull($.file, "expected parameter 'file' to be non-null");
            $.queue = Objects.requireNonNull($.queue, "expected parameter 'queue' to be non-null");
            $.table = Objects.requireNonNull($.table, "expected parameter 'table' to be non-null");
            $.web = Objects.requireNonNull($.web, "expected parameter 'web' to be non-null");
            return $;
        }
    }

}
