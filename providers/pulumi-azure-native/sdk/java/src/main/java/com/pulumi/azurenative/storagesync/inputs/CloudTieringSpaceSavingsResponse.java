// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagesync.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Server endpoint cloud tiering status object.
 * 
 */
public final class CloudTieringSpaceSavingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final CloudTieringSpaceSavingsResponse Empty = new CloudTieringSpaceSavingsResponse();

    /**
     * Cached content size on the server
     * 
     */
    @Import(name="cachedSizeBytes", required=true)
    private Double cachedSizeBytes;

    /**
     * @return Cached content size on the server
     * 
     */
    public Double cachedSizeBytes() {
        return this.cachedSizeBytes;
    }

    /**
     * Last updated timestamp
     * 
     */
    @Import(name="lastUpdatedTimestamp", required=true)
    private String lastUpdatedTimestamp;

    /**
     * @return Last updated timestamp
     * 
     */
    public String lastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    /**
     * Count of bytes saved on the server
     * 
     */
    @Import(name="spaceSavingsBytes", required=true)
    private Double spaceSavingsBytes;

    /**
     * @return Count of bytes saved on the server
     * 
     */
    public Double spaceSavingsBytes() {
        return this.spaceSavingsBytes;
    }

    /**
     * Percentage of cached size over total size
     * 
     */
    @Import(name="spaceSavingsPercent", required=true)
    private Integer spaceSavingsPercent;

    /**
     * @return Percentage of cached size over total size
     * 
     */
    public Integer spaceSavingsPercent() {
        return this.spaceSavingsPercent;
    }

    /**
     * Total size of content in the azure file share
     * 
     */
    @Import(name="totalSizeCloudBytes", required=true)
    private Double totalSizeCloudBytes;

    /**
     * @return Total size of content in the azure file share
     * 
     */
    public Double totalSizeCloudBytes() {
        return this.totalSizeCloudBytes;
    }

    /**
     * Volume size
     * 
     */
    @Import(name="volumeSizeBytes", required=true)
    private Double volumeSizeBytes;

    /**
     * @return Volume size
     * 
     */
    public Double volumeSizeBytes() {
        return this.volumeSizeBytes;
    }

    private CloudTieringSpaceSavingsResponse() {}

    private CloudTieringSpaceSavingsResponse(CloudTieringSpaceSavingsResponse $) {
        this.cachedSizeBytes = $.cachedSizeBytes;
        this.lastUpdatedTimestamp = $.lastUpdatedTimestamp;
        this.spaceSavingsBytes = $.spaceSavingsBytes;
        this.spaceSavingsPercent = $.spaceSavingsPercent;
        this.totalSizeCloudBytes = $.totalSizeCloudBytes;
        this.volumeSizeBytes = $.volumeSizeBytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudTieringSpaceSavingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudTieringSpaceSavingsResponse $;

        public Builder() {
            $ = new CloudTieringSpaceSavingsResponse();
        }

        public Builder(CloudTieringSpaceSavingsResponse defaults) {
            $ = new CloudTieringSpaceSavingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param cachedSizeBytes Cached content size on the server
         * 
         * @return builder
         * 
         */
        public Builder cachedSizeBytes(Double cachedSizeBytes) {
            $.cachedSizeBytes = cachedSizeBytes;
            return this;
        }

        /**
         * @param lastUpdatedTimestamp Last updated timestamp
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedTimestamp(String lastUpdatedTimestamp) {
            $.lastUpdatedTimestamp = lastUpdatedTimestamp;
            return this;
        }

        /**
         * @param spaceSavingsBytes Count of bytes saved on the server
         * 
         * @return builder
         * 
         */
        public Builder spaceSavingsBytes(Double spaceSavingsBytes) {
            $.spaceSavingsBytes = spaceSavingsBytes;
            return this;
        }

        /**
         * @param spaceSavingsPercent Percentage of cached size over total size
         * 
         * @return builder
         * 
         */
        public Builder spaceSavingsPercent(Integer spaceSavingsPercent) {
            $.spaceSavingsPercent = spaceSavingsPercent;
            return this;
        }

        /**
         * @param totalSizeCloudBytes Total size of content in the azure file share
         * 
         * @return builder
         * 
         */
        public Builder totalSizeCloudBytes(Double totalSizeCloudBytes) {
            $.totalSizeCloudBytes = totalSizeCloudBytes;
            return this;
        }

        /**
         * @param volumeSizeBytes Volume size
         * 
         * @return builder
         * 
         */
        public Builder volumeSizeBytes(Double volumeSizeBytes) {
            $.volumeSizeBytes = volumeSizeBytes;
            return this;
        }

        public CloudTieringSpaceSavingsResponse build() {
            $.cachedSizeBytes = Objects.requireNonNull($.cachedSizeBytes, "expected parameter 'cachedSizeBytes' to be non-null");
            $.lastUpdatedTimestamp = Objects.requireNonNull($.lastUpdatedTimestamp, "expected parameter 'lastUpdatedTimestamp' to be non-null");
            $.spaceSavingsBytes = Objects.requireNonNull($.spaceSavingsBytes, "expected parameter 'spaceSavingsBytes' to be non-null");
            $.spaceSavingsPercent = Objects.requireNonNull($.spaceSavingsPercent, "expected parameter 'spaceSavingsPercent' to be non-null");
            $.totalSizeCloudBytes = Objects.requireNonNull($.totalSizeCloudBytes, "expected parameter 'totalSizeCloudBytes' to be non-null");
            $.volumeSizeBytes = Objects.requireNonNull($.volumeSizeBytes, "expected parameter 'volumeSizeBytes' to be non-null");
            return $;
        }
    }

}
