// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Parameters that define the configuration of traffic analytics.
 * 
 */
public final class TrafficAnalyticsConfigurationPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final TrafficAnalyticsConfigurationPropertiesArgs Empty = new TrafficAnalyticsConfigurationPropertiesArgs();

    /**
     * Flag to enable/disable traffic analytics.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The interval in minutes which would decide how frequently TA service should do flow analytics.
     * 
     */
    @Import(name="trafficAnalyticsInterval")
    private @Nullable Output<Integer> trafficAnalyticsInterval;

    public Optional<Output<Integer>> trafficAnalyticsInterval() {
        return Optional.ofNullable(this.trafficAnalyticsInterval);
    }

    /**
     * The resource guid of the attached workspace.
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    /**
     * The location of the attached workspace.
     * 
     */
    @Import(name="workspaceRegion")
    private @Nullable Output<String> workspaceRegion;

    public Optional<Output<String>> workspaceRegion() {
        return Optional.ofNullable(this.workspaceRegion);
    }

    /**
     * Resource Id of the attached workspace.
     * 
     */
    @Import(name="workspaceResourceId")
    private @Nullable Output<String> workspaceResourceId;

    public Optional<Output<String>> workspaceResourceId() {
        return Optional.ofNullable(this.workspaceResourceId);
    }

    private TrafficAnalyticsConfigurationPropertiesArgs() {}

    private TrafficAnalyticsConfigurationPropertiesArgs(TrafficAnalyticsConfigurationPropertiesArgs $) {
        this.enabled = $.enabled;
        this.trafficAnalyticsInterval = $.trafficAnalyticsInterval;
        this.workspaceId = $.workspaceId;
        this.workspaceRegion = $.workspaceRegion;
        this.workspaceResourceId = $.workspaceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrafficAnalyticsConfigurationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrafficAnalyticsConfigurationPropertiesArgs $;

        public Builder() {
            $ = new TrafficAnalyticsConfigurationPropertiesArgs();
        }

        public Builder(TrafficAnalyticsConfigurationPropertiesArgs defaults) {
            $ = new TrafficAnalyticsConfigurationPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder trafficAnalyticsInterval(@Nullable Output<Integer> trafficAnalyticsInterval) {
            $.trafficAnalyticsInterval = trafficAnalyticsInterval;
            return this;
        }

        public Builder trafficAnalyticsInterval(Integer trafficAnalyticsInterval) {
            return trafficAnalyticsInterval(Output.of(trafficAnalyticsInterval));
        }

        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public Builder workspaceRegion(@Nullable Output<String> workspaceRegion) {
            $.workspaceRegion = workspaceRegion;
            return this;
        }

        public Builder workspaceRegion(String workspaceRegion) {
            return workspaceRegion(Output.of(workspaceRegion));
        }

        public Builder workspaceResourceId(@Nullable Output<String> workspaceResourceId) {
            $.workspaceResourceId = workspaceResourceId;
            return this;
        }

        public Builder workspaceResourceId(String workspaceResourceId) {
            return workspaceResourceId(Output.of(workspaceResourceId));
        }

        public TrafficAnalyticsConfigurationPropertiesArgs build() {
            return $;
        }
    }

}
