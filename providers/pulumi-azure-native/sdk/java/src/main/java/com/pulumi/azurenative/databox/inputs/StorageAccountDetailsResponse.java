// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databox.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Details for the storage account.
 * 
 */
public final class StorageAccountDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final StorageAccountDetailsResponse Empty = new StorageAccountDetailsResponse();

    /**
     * Account Type of the data to be transferred.
     * Expected value is &#39;StorageAccount&#39;.
     * 
     */
    @Import(name="dataAccountType", required=true)
    private String dataAccountType;

    public String dataAccountType() {
        return this.dataAccountType;
    }

    /**
     * Storage Account Resource Id.
     * 
     */
    @Import(name="storageAccountId", required=true)
    private String storageAccountId;

    public String storageAccountId() {
        return this.storageAccountId;
    }

    private StorageAccountDetailsResponse() {}

    private StorageAccountDetailsResponse(StorageAccountDetailsResponse $) {
        this.dataAccountType = $.dataAccountType;
        this.storageAccountId = $.storageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageAccountDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageAccountDetailsResponse $;

        public Builder() {
            $ = new StorageAccountDetailsResponse();
        }

        public Builder(StorageAccountDetailsResponse defaults) {
            $ = new StorageAccountDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder dataAccountType(String dataAccountType) {
            $.dataAccountType = dataAccountType;
            return this;
        }

        public Builder storageAccountId(String storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        public StorageAccountDetailsResponse build() {
            $.dataAccountType = Codegen.stringProp("dataAccountType").arg($.dataAccountType).def("StorageAccount").require();
            $.storageAccountId = Objects.requireNonNull($.storageAccountId, "expected parameter 'storageAccountId' to be non-null");
            return $;
        }
    }

}
