// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Defines the parameters for using CDN managed certificate for securing custom domain.
 * 
 */
public final class CdnCertificateSourceParametersResponse extends com.pulumi.resources.InvokeArgs {

    public static final CdnCertificateSourceParametersResponse Empty = new CdnCertificateSourceParametersResponse();

    /**
     * Type of certificate used
     * 
     */
    @Import(name="certificateType", required=true)
    private String certificateType;

    /**
     * @return Type of certificate used
     * 
     */
    public String certificateType() {
        return this.certificateType;
    }

    @Import(name="odataType", required=true)
    private String odataType;

    public String odataType() {
        return this.odataType;
    }

    private CdnCertificateSourceParametersResponse() {}

    private CdnCertificateSourceParametersResponse(CdnCertificateSourceParametersResponse $) {
        this.certificateType = $.certificateType;
        this.odataType = $.odataType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CdnCertificateSourceParametersResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CdnCertificateSourceParametersResponse $;

        public Builder() {
            $ = new CdnCertificateSourceParametersResponse();
        }

        public Builder(CdnCertificateSourceParametersResponse defaults) {
            $ = new CdnCertificateSourceParametersResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateType Type of certificate used
         * 
         * @return builder
         * 
         */
        public Builder certificateType(String certificateType) {
            $.certificateType = certificateType;
            return this;
        }

        public Builder odataType(String odataType) {
            $.odataType = odataType;
            return this;
        }

        public CdnCertificateSourceParametersResponse build() {
            $.certificateType = Objects.requireNonNull($.certificateType, "expected parameter 'certificateType' to be non-null");
            $.odataType = Objects.requireNonNull($.odataType, "expected parameter 'odataType' to be non-null");
            return $;
        }
    }

}
