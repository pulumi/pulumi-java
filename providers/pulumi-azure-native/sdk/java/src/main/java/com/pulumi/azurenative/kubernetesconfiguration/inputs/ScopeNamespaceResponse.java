// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.kubernetesconfiguration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies that the scope of the extensionInstance is Namespace
 * 
 */
public final class ScopeNamespaceResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScopeNamespaceResponse Empty = new ScopeNamespaceResponse();

    /**
     * Namespace where the extensionInstance will be created for an Namespace scoped extensionInstance.  If this namespace does not exist, it will be created
     * 
     */
    @Import(name="targetNamespace")
    private @Nullable String targetNamespace;

    /**
     * @return Namespace where the extensionInstance will be created for an Namespace scoped extensionInstance.  If this namespace does not exist, it will be created
     * 
     */
    public Optional<String> targetNamespace() {
        return Optional.ofNullable(this.targetNamespace);
    }

    private ScopeNamespaceResponse() {}

    private ScopeNamespaceResponse(ScopeNamespaceResponse $) {
        this.targetNamespace = $.targetNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScopeNamespaceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScopeNamespaceResponse $;

        public Builder() {
            $ = new ScopeNamespaceResponse();
        }

        public Builder(ScopeNamespaceResponse defaults) {
            $ = new ScopeNamespaceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetNamespace Namespace where the extensionInstance will be created for an Namespace scoped extensionInstance.  If this namespace does not exist, it will be created
         * 
         * @return builder
         * 
         */
        public Builder targetNamespace(@Nullable String targetNamespace) {
            $.targetNamespace = targetNamespace;
            return this;
        }

        public ScopeNamespaceResponse build() {
            return $;
        }
    }

}
