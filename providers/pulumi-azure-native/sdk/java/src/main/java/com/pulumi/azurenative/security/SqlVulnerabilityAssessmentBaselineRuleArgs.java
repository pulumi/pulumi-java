// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlVulnerabilityAssessmentBaselineRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlVulnerabilityAssessmentBaselineRuleArgs Empty = new SqlVulnerabilityAssessmentBaselineRuleArgs();

    /**
     * Take results from latest scan.
     * 
     */
    @Import(name="latestScan")
    private @Nullable Output<Boolean> latestScan;

    /**
     * @return Take results from latest scan.
     * 
     */
    public Optional<Output<Boolean>> latestScan() {
        return Optional.ofNullable(this.latestScan);
    }

    /**
     * The identifier of the resource.
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return The identifier of the resource.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    /**
     * Expected results to be inserted into the baseline.
     * Leave this field empty it LatestScan == true.
     * 
     */
    @Import(name="results")
    private @Nullable Output<List<List<String>>> results;

    /**
     * @return Expected results to be inserted into the baseline.
     * Leave this field empty it LatestScan == true.
     * 
     */
    public Optional<Output<List<List<String>>>> results() {
        return Optional.ofNullable(this.results);
    }

    /**
     * The rule Id.
     * 
     */
    @Import(name="ruleId")
    private @Nullable Output<String> ruleId;

    /**
     * @return The rule Id.
     * 
     */
    public Optional<Output<String>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    /**
     * The workspace Id.
     * 
     */
    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    /**
     * @return The workspace Id.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    private SqlVulnerabilityAssessmentBaselineRuleArgs() {}

    private SqlVulnerabilityAssessmentBaselineRuleArgs(SqlVulnerabilityAssessmentBaselineRuleArgs $) {
        this.latestScan = $.latestScan;
        this.resourceId = $.resourceId;
        this.results = $.results;
        this.ruleId = $.ruleId;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlVulnerabilityAssessmentBaselineRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlVulnerabilityAssessmentBaselineRuleArgs $;

        public Builder() {
            $ = new SqlVulnerabilityAssessmentBaselineRuleArgs();
        }

        public Builder(SqlVulnerabilityAssessmentBaselineRuleArgs defaults) {
            $ = new SqlVulnerabilityAssessmentBaselineRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param latestScan Take results from latest scan.
         * 
         * @return builder
         * 
         */
        public Builder latestScan(@Nullable Output<Boolean> latestScan) {
            $.latestScan = latestScan;
            return this;
        }

        /**
         * @param latestScan Take results from latest scan.
         * 
         * @return builder
         * 
         */
        public Builder latestScan(Boolean latestScan) {
            return latestScan(Output.of(latestScan));
        }

        /**
         * @param resourceId The identifier of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The identifier of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param results Expected results to be inserted into the baseline.
         * Leave this field empty it LatestScan == true.
         * 
         * @return builder
         * 
         */
        public Builder results(@Nullable Output<List<List<String>>> results) {
            $.results = results;
            return this;
        }

        /**
         * @param results Expected results to be inserted into the baseline.
         * Leave this field empty it LatestScan == true.
         * 
         * @return builder
         * 
         */
        public Builder results(List<List<String>> results) {
            return results(Output.of(results));
        }

        /**
         * @param results Expected results to be inserted into the baseline.
         * Leave this field empty it LatestScan == true.
         * 
         * @return builder
         * 
         */
        public Builder results(List<String>... results) {
            return results(List.of(results));
        }

        /**
         * @param ruleId The rule Id.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(@Nullable Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId The rule Id.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        /**
         * @param workspaceId The workspace Id.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The workspace Id.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public SqlVulnerabilityAssessmentBaselineRuleArgs build() {
            $.resourceId = Objects.requireNonNull($.resourceId, "expected parameter 'resourceId' to be non-null");
            $.workspaceId = Objects.requireNonNull($.workspaceId, "expected parameter 'workspaceId' to be non-null");
            return $;
        }
    }

}
