// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class ManagedClusterPodIdentityExceptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedClusterPodIdentityExceptionArgs Empty = new ManagedClusterPodIdentityExceptionArgs();

    /**
     * Name of the pod identity exception.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the pod identity exception.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Namespace of the pod identity exception.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return Namespace of the pod identity exception.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * Pod labels to match.
     * 
     */
    @Import(name="podLabels", required=true)
    private Output<Map<String,String>> podLabels;

    /**
     * @return Pod labels to match.
     * 
     */
    public Output<Map<String,String>> podLabels() {
        return this.podLabels;
    }

    private ManagedClusterPodIdentityExceptionArgs() {}

    private ManagedClusterPodIdentityExceptionArgs(ManagedClusterPodIdentityExceptionArgs $) {
        this.name = $.name;
        this.namespace = $.namespace;
        this.podLabels = $.podLabels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedClusterPodIdentityExceptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedClusterPodIdentityExceptionArgs $;

        public Builder() {
            $ = new ManagedClusterPodIdentityExceptionArgs();
        }

        public Builder(ManagedClusterPodIdentityExceptionArgs defaults) {
            $ = new ManagedClusterPodIdentityExceptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the pod identity exception.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the pod identity exception.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespace Namespace of the pod identity exception.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Namespace of the pod identity exception.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param podLabels Pod labels to match.
         * 
         * @return builder
         * 
         */
        public Builder podLabels(Output<Map<String,String>> podLabels) {
            $.podLabels = podLabels;
            return this;
        }

        /**
         * @param podLabels Pod labels to match.
         * 
         * @return builder
         * 
         */
        public Builder podLabels(Map<String,String> podLabels) {
            return podLabels(Output.of(podLabels));
        }

        public ManagedClusterPodIdentityExceptionArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            $.podLabels = Objects.requireNonNull($.podLabels, "expected parameter 'podLabels' to be non-null");
            return $;
        }
    }

}
