// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started -&gt;**. Enter any required information and then click **Save**.
 * 
 */
public final class PlanResponse extends com.pulumi.resources.InvokeArgs {

    public static final PlanResponse Empty = new PlanResponse();

    /**
     * The plan ID.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The plan ID.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
     * 
     */
    @Import(name="product")
    private @Nullable String product;

    /**
     * @return Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
     * 
     */
    public Optional<String> product() {
        return Optional.ofNullable(this.product);
    }

    /**
     * The promotion code.
     * 
     */
    @Import(name="promotionCode")
    private @Nullable String promotionCode;

    /**
     * @return The promotion code.
     * 
     */
    public Optional<String> promotionCode() {
        return Optional.ofNullable(this.promotionCode);
    }

    /**
     * The publisher ID.
     * 
     */
    @Import(name="publisher")
    private @Nullable String publisher;

    /**
     * @return The publisher ID.
     * 
     */
    public Optional<String> publisher() {
        return Optional.ofNullable(this.publisher);
    }

    private PlanResponse() {}

    private PlanResponse(PlanResponse $) {
        this.name = $.name;
        this.product = $.product;
        this.promotionCode = $.promotionCode;
        this.publisher = $.publisher;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlanResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlanResponse $;

        public Builder() {
            $ = new PlanResponse();
        }

        public Builder(PlanResponse defaults) {
            $ = new PlanResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The plan ID.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param product Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
         * 
         * @return builder
         * 
         */
        public Builder product(@Nullable String product) {
            $.product = product;
            return this;
        }

        /**
         * @param promotionCode The promotion code.
         * 
         * @return builder
         * 
         */
        public Builder promotionCode(@Nullable String promotionCode) {
            $.promotionCode = promotionCode;
            return this;
        }

        /**
         * @param publisher The publisher ID.
         * 
         * @return builder
         * 
         */
        public Builder publisher(@Nullable String publisher) {
            $.publisher = publisher;
            return this;
        }

        public PlanResponse build() {
            return $;
        }
    }

}
