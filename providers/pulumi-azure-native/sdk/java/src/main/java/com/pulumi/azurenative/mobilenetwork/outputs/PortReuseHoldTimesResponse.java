// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.mobilenetwork.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PortReuseHoldTimesResponse {
    /**
     * @return Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused. Default for TCP is 2 minutes.
     * 
     */
    private final @Nullable Integer tcp;
    /**
     * @return Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused. Default for UDP is 1 minute.
     * 
     */
    private final @Nullable Integer udp;

    @CustomType.Constructor
    private PortReuseHoldTimesResponse(
        @CustomType.Parameter("tcp") @Nullable Integer tcp,
        @CustomType.Parameter("udp") @Nullable Integer udp) {
        this.tcp = tcp;
        this.udp = udp;
    }

    /**
     * @return Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused. Default for TCP is 2 minutes.
     * 
     */
    public Optional<Integer> tcp() {
        return Optional.ofNullable(this.tcp);
    }
    /**
     * @return Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused. Default for UDP is 1 minute.
     * 
     */
    public Optional<Integer> udp() {
        return Optional.ofNullable(this.udp);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PortReuseHoldTimesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer tcp;
        private @Nullable Integer udp;

        public Builder() {
    	      // Empty
        }

        public Builder(PortReuseHoldTimesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.tcp = defaults.tcp;
    	      this.udp = defaults.udp;
        }

        public Builder tcp(@Nullable Integer tcp) {
            this.tcp = tcp;
            return this;
        }
        public Builder udp(@Nullable Integer udp) {
            this.udp = udp;
            return this;
        }        public PortReuseHoldTimesResponse build() {
            return new PortReuseHoldTimesResponse(tcp, udp);
        }
    }
}
