// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.ConfigurationType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListNetworkManagerDeploymentStatusArgs extends com.pulumi.resources.InvokeArgs {

    public static final ListNetworkManagerDeploymentStatusArgs Empty = new ListNetworkManagerDeploymentStatusArgs();

    /**
     * List of deployment types.
     * 
     */
    @Import(name="deploymentTypes")
    private @Nullable Output<List<Either<String,ConfigurationType>>> deploymentTypes;

    /**
     * @return List of deployment types.
     * 
     */
    public Optional<Output<List<Either<String,ConfigurationType>>>> deploymentTypes() {
        return Optional.ofNullable(this.deploymentTypes);
    }

    /**
     * The name of the network manager.
     * 
     */
    @Import(name="networkManagerName", required=true)
    private Output<String> networkManagerName;

    /**
     * @return The name of the network manager.
     * 
     */
    public Output<String> networkManagerName() {
        return this.networkManagerName;
    }

    /**
     * List of locations.
     * 
     */
    @Import(name="regions")
    private @Nullable Output<List<String>> regions;

    /**
     * @return List of locations.
     * 
     */
    public Optional<Output<List<String>>> regions() {
        return Optional.ofNullable(this.regions);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
     * 
     */
    @Import(name="skipToken")
    private @Nullable Output<String> skipToken;

    /**
     * @return Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
     * 
     */
    public Optional<Output<String>> skipToken() {
        return Optional.ofNullable(this.skipToken);
    }

    private ListNetworkManagerDeploymentStatusArgs() {}

    private ListNetworkManagerDeploymentStatusArgs(ListNetworkManagerDeploymentStatusArgs $) {
        this.deploymentTypes = $.deploymentTypes;
        this.networkManagerName = $.networkManagerName;
        this.regions = $.regions;
        this.resourceGroupName = $.resourceGroupName;
        this.skipToken = $.skipToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListNetworkManagerDeploymentStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListNetworkManagerDeploymentStatusArgs $;

        public Builder() {
            $ = new ListNetworkManagerDeploymentStatusArgs();
        }

        public Builder(ListNetworkManagerDeploymentStatusArgs defaults) {
            $ = new ListNetworkManagerDeploymentStatusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentTypes List of deployment types.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTypes(@Nullable Output<List<Either<String,ConfigurationType>>> deploymentTypes) {
            $.deploymentTypes = deploymentTypes;
            return this;
        }

        /**
         * @param deploymentTypes List of deployment types.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTypes(List<Either<String,ConfigurationType>> deploymentTypes) {
            return deploymentTypes(Output.of(deploymentTypes));
        }

        /**
         * @param deploymentTypes List of deployment types.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTypes(Either<String,ConfigurationType>... deploymentTypes) {
            return deploymentTypes(List.of(deploymentTypes));
        }

        /**
         * @param networkManagerName The name of the network manager.
         * 
         * @return builder
         * 
         */
        public Builder networkManagerName(Output<String> networkManagerName) {
            $.networkManagerName = networkManagerName;
            return this;
        }

        /**
         * @param networkManagerName The name of the network manager.
         * 
         * @return builder
         * 
         */
        public Builder networkManagerName(String networkManagerName) {
            return networkManagerName(Output.of(networkManagerName));
        }

        /**
         * @param regions List of locations.
         * 
         * @return builder
         * 
         */
        public Builder regions(@Nullable Output<List<String>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions List of locations.
         * 
         * @return builder
         * 
         */
        public Builder regions(List<String> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions List of locations.
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skipToken Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
         * 
         * @return builder
         * 
         */
        public Builder skipToken(@Nullable Output<String> skipToken) {
            $.skipToken = skipToken;
            return this;
        }

        /**
         * @param skipToken Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
         * 
         * @return builder
         * 
         */
        public Builder skipToken(String skipToken) {
            return skipToken(Output.of(skipToken));
        }

        public ListNetworkManagerDeploymentStatusArgs build() {
            $.networkManagerName = Objects.requireNonNull($.networkManagerName, "expected parameter 'networkManagerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
