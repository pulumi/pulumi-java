// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A consent link
 * 
 */
public final class ConsentLinkDefinitionResponse extends com.pulumi.resources.InvokeArgs {

    public static final ConsentLinkDefinitionResponse Empty = new ConsentLinkDefinitionResponse();

    /**
     * Display name of the parameter in the connection provider&#39;s OAuth settings
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return Display name of the parameter in the connection provider&#39;s OAuth settings
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * URI for first party login
     * 
     */
    @Import(name="firstPartyLoginUri")
    private @Nullable String firstPartyLoginUri;

    /**
     * @return URI for first party login
     * 
     */
    public Optional<String> firstPartyLoginUri() {
        return Optional.ofNullable(this.firstPartyLoginUri);
    }

    /**
     * URI for the consent link
     * 
     */
    @Import(name="link")
    private @Nullable String link;

    /**
     * @return URI for the consent link
     * 
     */
    public Optional<String> link() {
        return Optional.ofNullable(this.link);
    }

    /**
     * Status of the link
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return Status of the link
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private ConsentLinkDefinitionResponse() {}

    private ConsentLinkDefinitionResponse(ConsentLinkDefinitionResponse $) {
        this.displayName = $.displayName;
        this.firstPartyLoginUri = $.firstPartyLoginUri;
        this.link = $.link;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsentLinkDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsentLinkDefinitionResponse $;

        public Builder() {
            $ = new ConsentLinkDefinitionResponse();
        }

        public Builder(ConsentLinkDefinitionResponse defaults) {
            $ = new ConsentLinkDefinitionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName Display name of the parameter in the connection provider&#39;s OAuth settings
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param firstPartyLoginUri URI for first party login
         * 
         * @return builder
         * 
         */
        public Builder firstPartyLoginUri(@Nullable String firstPartyLoginUri) {
            $.firstPartyLoginUri = firstPartyLoginUri;
            return this;
        }

        /**
         * @param link URI for the consent link
         * 
         * @return builder
         * 
         */
        public Builder link(@Nullable String link) {
            $.link = link;
            return this;
        }

        /**
         * @param status Status of the link
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public ConsentLinkDefinitionResponse build() {
            return $;
        }
    }

}
