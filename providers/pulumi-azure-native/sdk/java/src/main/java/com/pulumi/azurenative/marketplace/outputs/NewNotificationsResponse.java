// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.marketplace.outputs;

import com.pulumi.azurenative.marketplace.outputs.PlanNotificationDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NewNotificationsResponse {
    /**
     * @return Gets offer display name
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return Gets or sets the icon url
     * 
     */
    private final @Nullable String icon;
    /**
     * @return Gets a value indicating whether future plans is enabled.
     * 
     */
    private final @Nullable Boolean isFuturePlansEnabled;
    /**
     * @return Gets or sets the notification message id
     * 
     */
    private final @Nullable Double messageCode;
    /**
     * @return Gets offer id
     * 
     */
    private final @Nullable String offerId;
    /**
     * @return Gets or sets removed plans notifications
     * 
     */
    private final @Nullable List<PlanNotificationDetailsResponse> plans;

    @CustomType.Constructor
    private NewNotificationsResponse(
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("icon") @Nullable String icon,
        @CustomType.Parameter("isFuturePlansEnabled") @Nullable Boolean isFuturePlansEnabled,
        @CustomType.Parameter("messageCode") @Nullable Double messageCode,
        @CustomType.Parameter("offerId") @Nullable String offerId,
        @CustomType.Parameter("plans") @Nullable List<PlanNotificationDetailsResponse> plans) {
        this.displayName = displayName;
        this.icon = icon;
        this.isFuturePlansEnabled = isFuturePlansEnabled;
        this.messageCode = messageCode;
        this.offerId = offerId;
        this.plans = plans;
    }

    /**
     * @return Gets offer display name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Gets or sets the icon url
     * 
     */
    public Optional<String> icon() {
        return Optional.ofNullable(this.icon);
    }
    /**
     * @return Gets a value indicating whether future plans is enabled.
     * 
     */
    public Optional<Boolean> isFuturePlansEnabled() {
        return Optional.ofNullable(this.isFuturePlansEnabled);
    }
    /**
     * @return Gets or sets the notification message id
     * 
     */
    public Optional<Double> messageCode() {
        return Optional.ofNullable(this.messageCode);
    }
    /**
     * @return Gets offer id
     * 
     */
    public Optional<String> offerId() {
        return Optional.ofNullable(this.offerId);
    }
    /**
     * @return Gets or sets removed plans notifications
     * 
     */
    public List<PlanNotificationDetailsResponse> plans() {
        return this.plans == null ? List.of() : this.plans;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NewNotificationsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String displayName;
        private @Nullable String icon;
        private @Nullable Boolean isFuturePlansEnabled;
        private @Nullable Double messageCode;
        private @Nullable String offerId;
        private @Nullable List<PlanNotificationDetailsResponse> plans;

        public Builder() {
    	      // Empty
        }

        public Builder(NewNotificationsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.icon = defaults.icon;
    	      this.isFuturePlansEnabled = defaults.isFuturePlansEnabled;
    	      this.messageCode = defaults.messageCode;
    	      this.offerId = defaults.offerId;
    	      this.plans = defaults.plans;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder icon(@Nullable String icon) {
            this.icon = icon;
            return this;
        }
        public Builder isFuturePlansEnabled(@Nullable Boolean isFuturePlansEnabled) {
            this.isFuturePlansEnabled = isFuturePlansEnabled;
            return this;
        }
        public Builder messageCode(@Nullable Double messageCode) {
            this.messageCode = messageCode;
            return this;
        }
        public Builder offerId(@Nullable String offerId) {
            this.offerId = offerId;
            return this;
        }
        public Builder plans(@Nullable List<PlanNotificationDetailsResponse> plans) {
            this.plans = plans;
            return this;
        }
        public Builder plans(PlanNotificationDetailsResponse... plans) {
            return plans(List.of(plans));
        }        public NewNotificationsResponse build() {
            return new NewNotificationsResponse(displayName, icon, isFuturePlansEnabled, messageCode, offerId, plans);
        }
    }
}
