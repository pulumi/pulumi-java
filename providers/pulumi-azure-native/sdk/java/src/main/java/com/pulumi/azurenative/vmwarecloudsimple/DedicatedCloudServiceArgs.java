// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.vmwarecloudsimple;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DedicatedCloudServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DedicatedCloudServiceArgs Empty = new DedicatedCloudServiceArgs();

    /**
     * dedicated cloud Service name
     * 
     */
    @Import(name="dedicatedCloudServiceName")
    private @Nullable Output<String> dedicatedCloudServiceName;

    /**
     * @return dedicated cloud Service name
     * 
     */
    public Optional<Output<String>> dedicatedCloudServiceName() {
        return Optional.ofNullable(this.dedicatedCloudServiceName);
    }

    /**
     * gateway Subnet for the account. It will collect the subnet address and always treat it as /28
     * 
     */
    @Import(name="gatewaySubnet", required=true)
    private Output<String> gatewaySubnet;

    /**
     * @return gateway Subnet for the account. It will collect the subnet address and always treat it as /28
     * 
     */
    public Output<String> gatewaySubnet() {
        return this.gatewaySubnet;
    }

    /**
     * Azure region
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Azure region
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The list of tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The list of tags
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DedicatedCloudServiceArgs() {}

    private DedicatedCloudServiceArgs(DedicatedCloudServiceArgs $) {
        this.dedicatedCloudServiceName = $.dedicatedCloudServiceName;
        this.gatewaySubnet = $.gatewaySubnet;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DedicatedCloudServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DedicatedCloudServiceArgs $;

        public Builder() {
            $ = new DedicatedCloudServiceArgs();
        }

        public Builder(DedicatedCloudServiceArgs defaults) {
            $ = new DedicatedCloudServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dedicatedCloudServiceName dedicated cloud Service name
         * 
         * @return builder
         * 
         */
        public Builder dedicatedCloudServiceName(@Nullable Output<String> dedicatedCloudServiceName) {
            $.dedicatedCloudServiceName = dedicatedCloudServiceName;
            return this;
        }

        /**
         * @param dedicatedCloudServiceName dedicated cloud Service name
         * 
         * @return builder
         * 
         */
        public Builder dedicatedCloudServiceName(String dedicatedCloudServiceName) {
            return dedicatedCloudServiceName(Output.of(dedicatedCloudServiceName));
        }

        /**
         * @param gatewaySubnet gateway Subnet for the account. It will collect the subnet address and always treat it as /28
         * 
         * @return builder
         * 
         */
        public Builder gatewaySubnet(Output<String> gatewaySubnet) {
            $.gatewaySubnet = gatewaySubnet;
            return this;
        }

        /**
         * @param gatewaySubnet gateway Subnet for the account. It will collect the subnet address and always treat it as /28
         * 
         * @return builder
         * 
         */
        public Builder gatewaySubnet(String gatewaySubnet) {
            return gatewaySubnet(Output.of(gatewaySubnet));
        }

        /**
         * @param location Azure region
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Azure region
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The name of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags The list of tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The list of tags
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DedicatedCloudServiceArgs build() {
            $.gatewaySubnet = Objects.requireNonNull($.gatewaySubnet, "expected parameter 'gatewaySubnet' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
