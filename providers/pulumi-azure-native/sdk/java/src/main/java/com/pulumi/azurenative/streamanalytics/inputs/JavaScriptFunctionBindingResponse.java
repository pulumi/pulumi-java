// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The binding to a JavaScript function.
 * 
 */
public final class JavaScriptFunctionBindingResponse extends com.pulumi.resources.InvokeArgs {

    public static final JavaScriptFunctionBindingResponse Empty = new JavaScriptFunctionBindingResponse();

    /**
     * The JavaScript code containing a single function definition. For example: &#39;function (x, y) { return x + y; }&#39;
     * 
     */
    @Import(name="script")
    private @Nullable String script;

    /**
     * @return The JavaScript code containing a single function definition. For example: &#39;function (x, y) { return x + y; }&#39;
     * 
     */
    public Optional<String> script() {
        return Optional.ofNullable(this.script);
    }

    /**
     * Indicates the function binding type.
     * Expected value is &#39;Microsoft.StreamAnalytics/JavascriptUdf&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Indicates the function binding type.
     * Expected value is &#39;Microsoft.StreamAnalytics/JavascriptUdf&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    private JavaScriptFunctionBindingResponse() {}

    private JavaScriptFunctionBindingResponse(JavaScriptFunctionBindingResponse $) {
        this.script = $.script;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JavaScriptFunctionBindingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JavaScriptFunctionBindingResponse $;

        public Builder() {
            $ = new JavaScriptFunctionBindingResponse();
        }

        public Builder(JavaScriptFunctionBindingResponse defaults) {
            $ = new JavaScriptFunctionBindingResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param script The JavaScript code containing a single function definition. For example: &#39;function (x, y) { return x + y; }&#39;
         * 
         * @return builder
         * 
         */
        public Builder script(@Nullable String script) {
            $.script = script;
            return this;
        }

        /**
         * @param type Indicates the function binding type.
         * Expected value is &#39;Microsoft.StreamAnalytics/JavascriptUdf&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public JavaScriptFunctionBindingResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
