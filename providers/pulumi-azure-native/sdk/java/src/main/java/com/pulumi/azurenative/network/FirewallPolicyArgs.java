// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.enums.AzureFirewallThreatIntelMode;
import com.pulumi.azurenative.network.inputs.DnsSettingsArgs;
import com.pulumi.azurenative.network.inputs.FirewallPolicyInsightsArgs;
import com.pulumi.azurenative.network.inputs.FirewallPolicyIntrusionDetectionArgs;
import com.pulumi.azurenative.network.inputs.FirewallPolicySNATArgs;
import com.pulumi.azurenative.network.inputs.FirewallPolicySkuArgs;
import com.pulumi.azurenative.network.inputs.FirewallPolicyThreatIntelWhitelistArgs;
import com.pulumi.azurenative.network.inputs.FirewallPolicyTransportSecurityArgs;
import com.pulumi.azurenative.network.inputs.ManagedServiceIdentityArgs;
import com.pulumi.azurenative.network.inputs.SubResourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallPolicyArgs Empty = new FirewallPolicyArgs();

    /**
     * The parent firewall policy from which rules are inherited.
     * 
     */
    @Import(name="basePolicy")
    private @Nullable Output<SubResourceArgs> basePolicy;

    public Optional<Output<SubResourceArgs>> basePolicy() {
        return Optional.ofNullable(this.basePolicy);
    }

    /**
     * DNS Proxy Settings definition.
     * 
     */
    @Import(name="dnsSettings")
    private @Nullable Output<DnsSettingsArgs> dnsSettings;

    public Optional<Output<DnsSettingsArgs>> dnsSettings() {
        return Optional.ofNullable(this.dnsSettings);
    }

    /**
     * The name of the Firewall Policy.
     * 
     */
    @Import(name="firewallPolicyName")
    private @Nullable Output<String> firewallPolicyName;

    public Optional<Output<String>> firewallPolicyName() {
        return Optional.ofNullable(this.firewallPolicyName);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The identity of the firewall policy.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<ManagedServiceIdentityArgs> identity;

    public Optional<Output<ManagedServiceIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Insights on Firewall Policy.
     * 
     */
    @Import(name="insights")
    private @Nullable Output<FirewallPolicyInsightsArgs> insights;

    public Optional<Output<FirewallPolicyInsightsArgs>> insights() {
        return Optional.ofNullable(this.insights);
    }

    /**
     * The configuration for Intrusion detection.
     * 
     */
    @Import(name="intrusionDetection")
    private @Nullable Output<FirewallPolicyIntrusionDetectionArgs> intrusionDetection;

    public Optional<Output<FirewallPolicyIntrusionDetectionArgs>> intrusionDetection() {
        return Optional.ofNullable(this.intrusionDetection);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The Firewall Policy SKU.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<FirewallPolicySkuArgs> sku;

    public Optional<Output<FirewallPolicySkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * The private IP addresses/IP ranges to which traffic will not be SNAT.
     * 
     */
    @Import(name="snat")
    private @Nullable Output<FirewallPolicySNATArgs> snat;

    public Optional<Output<FirewallPolicySNATArgs>> snat() {
        return Optional.ofNullable(this.snat);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The operation mode for Threat Intelligence.
     * 
     */
    @Import(name="threatIntelMode")
    private @Nullable Output<Either<String,AzureFirewallThreatIntelMode>> threatIntelMode;

    public Optional<Output<Either<String,AzureFirewallThreatIntelMode>>> threatIntelMode() {
        return Optional.ofNullable(this.threatIntelMode);
    }

    /**
     * ThreatIntel Whitelist for Firewall Policy.
     * 
     */
    @Import(name="threatIntelWhitelist")
    private @Nullable Output<FirewallPolicyThreatIntelWhitelistArgs> threatIntelWhitelist;

    public Optional<Output<FirewallPolicyThreatIntelWhitelistArgs>> threatIntelWhitelist() {
        return Optional.ofNullable(this.threatIntelWhitelist);
    }

    /**
     * TLS Configuration definition.
     * 
     */
    @Import(name="transportSecurity")
    private @Nullable Output<FirewallPolicyTransportSecurityArgs> transportSecurity;

    public Optional<Output<FirewallPolicyTransportSecurityArgs>> transportSecurity() {
        return Optional.ofNullable(this.transportSecurity);
    }

    private FirewallPolicyArgs() {}

    private FirewallPolicyArgs(FirewallPolicyArgs $) {
        this.basePolicy = $.basePolicy;
        this.dnsSettings = $.dnsSettings;
        this.firewallPolicyName = $.firewallPolicyName;
        this.id = $.id;
        this.identity = $.identity;
        this.insights = $.insights;
        this.intrusionDetection = $.intrusionDetection;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.snat = $.snat;
        this.tags = $.tags;
        this.threatIntelMode = $.threatIntelMode;
        this.threatIntelWhitelist = $.threatIntelWhitelist;
        this.transportSecurity = $.transportSecurity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallPolicyArgs $;

        public Builder() {
            $ = new FirewallPolicyArgs();
        }

        public Builder(FirewallPolicyArgs defaults) {
            $ = new FirewallPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder basePolicy(@Nullable Output<SubResourceArgs> basePolicy) {
            $.basePolicy = basePolicy;
            return this;
        }

        public Builder basePolicy(SubResourceArgs basePolicy) {
            return basePolicy(Output.of(basePolicy));
        }

        public Builder dnsSettings(@Nullable Output<DnsSettingsArgs> dnsSettings) {
            $.dnsSettings = dnsSettings;
            return this;
        }

        public Builder dnsSettings(DnsSettingsArgs dnsSettings) {
            return dnsSettings(Output.of(dnsSettings));
        }

        public Builder firewallPolicyName(@Nullable Output<String> firewallPolicyName) {
            $.firewallPolicyName = firewallPolicyName;
            return this;
        }

        public Builder firewallPolicyName(String firewallPolicyName) {
            return firewallPolicyName(Output.of(firewallPolicyName));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder identity(@Nullable Output<ManagedServiceIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(ManagedServiceIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        public Builder insights(@Nullable Output<FirewallPolicyInsightsArgs> insights) {
            $.insights = insights;
            return this;
        }

        public Builder insights(FirewallPolicyInsightsArgs insights) {
            return insights(Output.of(insights));
        }

        public Builder intrusionDetection(@Nullable Output<FirewallPolicyIntrusionDetectionArgs> intrusionDetection) {
            $.intrusionDetection = intrusionDetection;
            return this;
        }

        public Builder intrusionDetection(FirewallPolicyIntrusionDetectionArgs intrusionDetection) {
            return intrusionDetection(Output.of(intrusionDetection));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder sku(@Nullable Output<FirewallPolicySkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(FirewallPolicySkuArgs sku) {
            return sku(Output.of(sku));
        }

        public Builder snat(@Nullable Output<FirewallPolicySNATArgs> snat) {
            $.snat = snat;
            return this;
        }

        public Builder snat(FirewallPolicySNATArgs snat) {
            return snat(Output.of(snat));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder threatIntelMode(@Nullable Output<Either<String,AzureFirewallThreatIntelMode>> threatIntelMode) {
            $.threatIntelMode = threatIntelMode;
            return this;
        }

        public Builder threatIntelMode(Either<String,AzureFirewallThreatIntelMode> threatIntelMode) {
            return threatIntelMode(Output.of(threatIntelMode));
        }

        public Builder threatIntelMode(String threatIntelMode) {
            return threatIntelMode(Either.ofLeft(threatIntelMode));
        }

        public Builder threatIntelMode(AzureFirewallThreatIntelMode threatIntelMode) {
            return threatIntelMode(Either.ofRight(threatIntelMode));
        }

        public Builder threatIntelWhitelist(@Nullable Output<FirewallPolicyThreatIntelWhitelistArgs> threatIntelWhitelist) {
            $.threatIntelWhitelist = threatIntelWhitelist;
            return this;
        }

        public Builder threatIntelWhitelist(FirewallPolicyThreatIntelWhitelistArgs threatIntelWhitelist) {
            return threatIntelWhitelist(Output.of(threatIntelWhitelist));
        }

        public Builder transportSecurity(@Nullable Output<FirewallPolicyTransportSecurityArgs> transportSecurity) {
            $.transportSecurity = transportSecurity;
            return this;
        }

        public Builder transportSecurity(FirewallPolicyTransportSecurityArgs transportSecurity) {
            return transportSecurity(Output.of(transportSecurity));
        }

        public FirewallPolicyArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
