// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * AWS cloud account connector based credentials, the credentials is composed of access key ID and secret key, for more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html">Creating an IAM User in Your AWS Account (write only)</a>
 * 
 */
public final class AwsCredsAuthenticationDetailsPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsCredsAuthenticationDetailsPropertiesArgs Empty = new AwsCredsAuthenticationDetailsPropertiesArgs();

    /**
     * Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
     * Expected value is 'awsCreds'.
     * 
     */
    @Import(name="authenticationType", required=true)
      private final Output<String> authenticationType;

    public Output<String> authenticationType() {
        return this.authenticationType;
    }

    /**
     * Public key element of the AWS credential object (write only)
     * 
     */
    @Import(name="awsAccessKeyId", required=true)
      private final Output<String> awsAccessKeyId;

    public Output<String> awsAccessKeyId() {
        return this.awsAccessKeyId;
    }

    /**
     * Secret key element of the AWS credential object (write only)
     * 
     */
    @Import(name="awsSecretAccessKey", required=true)
      private final Output<String> awsSecretAccessKey;

    public Output<String> awsSecretAccessKey() {
        return this.awsSecretAccessKey;
    }

    public AwsCredsAuthenticationDetailsPropertiesArgs(
        Output<String> authenticationType,
        Output<String> awsAccessKeyId,
        Output<String> awsSecretAccessKey) {
        this.authenticationType = Codegen.stringProp("authenticationType").output().arg(authenticationType).require();
        this.awsAccessKeyId = Objects.requireNonNull(awsAccessKeyId, "expected parameter 'awsAccessKeyId' to be non-null");
        this.awsSecretAccessKey = Objects.requireNonNull(awsSecretAccessKey, "expected parameter 'awsSecretAccessKey' to be non-null");
    }

    private AwsCredsAuthenticationDetailsPropertiesArgs() {
        this.authenticationType = Codegen.empty();
        this.awsAccessKeyId = Codegen.empty();
        this.awsSecretAccessKey = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AwsCredsAuthenticationDetailsPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> authenticationType;
        private Output<String> awsAccessKeyId;
        private Output<String> awsSecretAccessKey;

        public Builder() {
    	      // Empty
        }

        public Builder(AwsCredsAuthenticationDetailsPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationType = defaults.authenticationType;
    	      this.awsAccessKeyId = defaults.awsAccessKeyId;
    	      this.awsSecretAccessKey = defaults.awsSecretAccessKey;
        }

        public Builder authenticationType(Output<String> authenticationType) {
            this.authenticationType = Objects.requireNonNull(authenticationType);
            return this;
        }
        public Builder authenticationType(String authenticationType) {
            this.authenticationType = Output.of(Objects.requireNonNull(authenticationType));
            return this;
        }
        public Builder awsAccessKeyId(Output<String> awsAccessKeyId) {
            this.awsAccessKeyId = Objects.requireNonNull(awsAccessKeyId);
            return this;
        }
        public Builder awsAccessKeyId(String awsAccessKeyId) {
            this.awsAccessKeyId = Output.of(Objects.requireNonNull(awsAccessKeyId));
            return this;
        }
        public Builder awsSecretAccessKey(Output<String> awsSecretAccessKey) {
            this.awsSecretAccessKey = Objects.requireNonNull(awsSecretAccessKey);
            return this;
        }
        public Builder awsSecretAccessKey(String awsSecretAccessKey) {
            this.awsSecretAccessKey = Output.of(Objects.requireNonNull(awsSecretAccessKey));
            return this;
        }        public AwsCredsAuthenticationDetailsPropertiesArgs build() {
            return new AwsCredsAuthenticationDetailsPropertiesArgs(authenticationType, awsAccessKeyId, awsSecretAccessKey);
        }
    }
}
