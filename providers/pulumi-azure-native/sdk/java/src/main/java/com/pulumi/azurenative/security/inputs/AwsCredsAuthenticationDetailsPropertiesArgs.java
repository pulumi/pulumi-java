// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * AWS cloud account connector based credentials, the credentials is composed of access key ID and secret key, for more details, refer to &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html&#34;&gt;Creating an IAM User in Your AWS Account (write only)&lt;/a&gt;
 * 
 */
public final class AwsCredsAuthenticationDetailsPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsCredsAuthenticationDetailsPropertiesArgs Empty = new AwsCredsAuthenticationDetailsPropertiesArgs();

    /**
     * Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
     * Expected value is &#39;awsCreds&#39;.
     * 
     */
    @Import(name="authenticationType", required=true)
    private Output<String> authenticationType;

    /**
     * @return Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
     * Expected value is &#39;awsCreds&#39;.
     * 
     */
    public Output<String> authenticationType() {
        return this.authenticationType;
    }

    /**
     * Public key element of the AWS credential object (write only)
     * 
     */
    @Import(name="awsAccessKeyId", required=true)
    private Output<String> awsAccessKeyId;

    /**
     * @return Public key element of the AWS credential object (write only)
     * 
     */
    public Output<String> awsAccessKeyId() {
        return this.awsAccessKeyId;
    }

    /**
     * Secret key element of the AWS credential object (write only)
     * 
     */
    @Import(name="awsSecretAccessKey", required=true)
    private Output<String> awsSecretAccessKey;

    /**
     * @return Secret key element of the AWS credential object (write only)
     * 
     */
    public Output<String> awsSecretAccessKey() {
        return this.awsSecretAccessKey;
    }

    private AwsCredsAuthenticationDetailsPropertiesArgs() {}

    private AwsCredsAuthenticationDetailsPropertiesArgs(AwsCredsAuthenticationDetailsPropertiesArgs $) {
        this.authenticationType = $.authenticationType;
        this.awsAccessKeyId = $.awsAccessKeyId;
        this.awsSecretAccessKey = $.awsSecretAccessKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsCredsAuthenticationDetailsPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsCredsAuthenticationDetailsPropertiesArgs $;

        public Builder() {
            $ = new AwsCredsAuthenticationDetailsPropertiesArgs();
        }

        public Builder(AwsCredsAuthenticationDetailsPropertiesArgs defaults) {
            $ = new AwsCredsAuthenticationDetailsPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationType Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
         * Expected value is &#39;awsCreds&#39;.
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        /**
         * @param authenticationType Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
         * Expected value is &#39;awsCreds&#39;.
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        /**
         * @param awsAccessKeyId Public key element of the AWS credential object (write only)
         * 
         * @return builder
         * 
         */
        public Builder awsAccessKeyId(Output<String> awsAccessKeyId) {
            $.awsAccessKeyId = awsAccessKeyId;
            return this;
        }

        /**
         * @param awsAccessKeyId Public key element of the AWS credential object (write only)
         * 
         * @return builder
         * 
         */
        public Builder awsAccessKeyId(String awsAccessKeyId) {
            return awsAccessKeyId(Output.of(awsAccessKeyId));
        }

        /**
         * @param awsSecretAccessKey Secret key element of the AWS credential object (write only)
         * 
         * @return builder
         * 
         */
        public Builder awsSecretAccessKey(Output<String> awsSecretAccessKey) {
            $.awsSecretAccessKey = awsSecretAccessKey;
            return this;
        }

        /**
         * @param awsSecretAccessKey Secret key element of the AWS credential object (write only)
         * 
         * @return builder
         * 
         */
        public Builder awsSecretAccessKey(String awsSecretAccessKey) {
            return awsSecretAccessKey(Output.of(awsSecretAccessKey));
        }

        public AwsCredsAuthenticationDetailsPropertiesArgs build() {
            $.authenticationType = Codegen.stringProp("authenticationType").output().arg($.authenticationType).require();
            $.awsAccessKeyId = Objects.requireNonNull($.awsAccessKeyId, "expected parameter 'awsAccessKeyId' to be non-null");
            $.awsSecretAccessKey = Objects.requireNonNull($.awsSecretAccessKey, "expected parameter 'awsSecretAccessKey' to be non-null");
            return $;
        }
    }

}
