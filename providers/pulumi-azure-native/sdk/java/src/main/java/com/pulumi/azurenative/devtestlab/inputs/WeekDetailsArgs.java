// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of a weekly schedule.
 * 
 */
public final class WeekDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WeekDetailsArgs Empty = new WeekDetailsArgs();

    /**
     * The time of the day the schedule will occur.
     * 
     */
    @Import(name="time")
    private @Nullable Output<String> time;

    /**
     * @return The time of the day the schedule will occur.
     * 
     */
    public Optional<Output<String>> time() {
        return Optional.ofNullable(this.time);
    }

    /**
     * The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
     * 
     */
    @Import(name="weekdays")
    private @Nullable Output<List<String>> weekdays;

    /**
     * @return The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
     * 
     */
    public Optional<Output<List<String>>> weekdays() {
        return Optional.ofNullable(this.weekdays);
    }

    private WeekDetailsArgs() {}

    private WeekDetailsArgs(WeekDetailsArgs $) {
        this.time = $.time;
        this.weekdays = $.weekdays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WeekDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WeekDetailsArgs $;

        public Builder() {
            $ = new WeekDetailsArgs();
        }

        public Builder(WeekDetailsArgs defaults) {
            $ = new WeekDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param time The time of the day the schedule will occur.
         * 
         * @return builder
         * 
         */
        public Builder time(@Nullable Output<String> time) {
            $.time = time;
            return this;
        }

        /**
         * @param time The time of the day the schedule will occur.
         * 
         * @return builder
         * 
         */
        public Builder time(String time) {
            return time(Output.of(time));
        }

        /**
         * @param weekdays The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
         * 
         * @return builder
         * 
         */
        public Builder weekdays(@Nullable Output<List<String>> weekdays) {
            $.weekdays = weekdays;
            return this;
        }

        /**
         * @param weekdays The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
         * 
         * @return builder
         * 
         */
        public Builder weekdays(List<String> weekdays) {
            return weekdays(Output.of(weekdays));
        }

        /**
         * @param weekdays The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
         * 
         * @return builder
         * 
         */
        public Builder weekdays(String... weekdays) {
            return weekdays(List.of(weekdays));
        }

        public WeekDetailsArgs build() {
            return $;
        }
    }

}
