// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies the action to post to service when the rule condition is evaluated. The discriminator is always RuleWebhookAction in this case.
 * 
 */
public final class RuleWebhookActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleWebhookActionArgs Empty = new RuleWebhookActionArgs();

    /**
     * specifies the type of the action. There are two types of actions: RuleEmailAction and RuleWebhookAction.
     * Expected value is &#39;Microsoft.Azure.Management.Insights.Models.RuleWebhookAction&#39;.
     * 
     */
    @Import(name="odataType", required=true)
    private Output<String> odataType;

    public Output<String> odataType() {
        return this.odataType;
    }

    /**
     * the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<Map<String,String>> properties;

    public Optional<Output<Map<String,String>>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * the service uri to Post the notification when the alert activates or resolves.
     * 
     */
    @Import(name="serviceUri")
    private @Nullable Output<String> serviceUri;

    public Optional<Output<String>> serviceUri() {
        return Optional.ofNullable(this.serviceUri);
    }

    private RuleWebhookActionArgs() {}

    private RuleWebhookActionArgs(RuleWebhookActionArgs $) {
        this.odataType = $.odataType;
        this.properties = $.properties;
        this.serviceUri = $.serviceUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleWebhookActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleWebhookActionArgs $;

        public Builder() {
            $ = new RuleWebhookActionArgs();
        }

        public Builder(RuleWebhookActionArgs defaults) {
            $ = new RuleWebhookActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder odataType(Output<String> odataType) {
            $.odataType = odataType;
            return this;
        }

        public Builder odataType(String odataType) {
            return odataType(Output.of(odataType));
        }

        public Builder properties(@Nullable Output<Map<String,String>> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(Map<String,String> properties) {
            return properties(Output.of(properties));
        }

        public Builder serviceUri(@Nullable Output<String> serviceUri) {
            $.serviceUri = serviceUri;
            return this;
        }

        public Builder serviceUri(String serviceUri) {
            return serviceUri(Output.of(serviceUri));
        }

        public RuleWebhookActionArgs build() {
            $.odataType = Codegen.stringProp("odataType").output().arg($.odataType).require();
            return $;
        }
    }

}
