// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.CustomDnsConfigPropertiesFormatResponse;
import com.pulumi.azurenative.network.inputs.ExtendedLocationResponse;
import com.pulumi.azurenative.network.inputs.NetworkInterfaceResponse;
import com.pulumi.azurenative.network.inputs.PrivateLinkServiceConnectionResponse;
import com.pulumi.azurenative.network.inputs.SubnetResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Private endpoint resource.
 * 
 */
public final class PrivateEndpointResponse extends com.pulumi.resources.InvokeArgs {

    public static final PrivateEndpointResponse Empty = new PrivateEndpointResponse();

    /**
     * An array of custom dns configurations.
     * 
     */
    @Import(name="customDnsConfigs")
    private @Nullable List<CustomDnsConfigPropertiesFormatResponse> customDnsConfigs;

    public Optional<List<CustomDnsConfigPropertiesFormatResponse>> customDnsConfigs() {
        return Optional.ofNullable(this.customDnsConfigs);
    }

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    public String etag() {
        return this.etag;
    }

    /**
     * The extended location of the load balancer.
     * 
     */
    @Import(name="extendedLocation")
    private @Nullable ExtendedLocationResponse extendedLocation;

    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
     * 
     */
    @Import(name="manualPrivateLinkServiceConnections")
    private @Nullable List<PrivateLinkServiceConnectionResponse> manualPrivateLinkServiceConnections;

    public Optional<List<PrivateLinkServiceConnectionResponse>> manualPrivateLinkServiceConnections() {
        return Optional.ofNullable(this.manualPrivateLinkServiceConnections);
    }

    /**
     * Resource name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * An array of references to the network interfaces created for this private endpoint.
     * 
     */
    @Import(name="networkInterfaces", required=true)
    private List<NetworkInterfaceResponse> networkInterfaces;

    public List<NetworkInterfaceResponse> networkInterfaces() {
        return this.networkInterfaces;
    }

    /**
     * A grouping of information about the connection to the remote resource.
     * 
     */
    @Import(name="privateLinkServiceConnections")
    private @Nullable List<PrivateLinkServiceConnectionResponse> privateLinkServiceConnections;

    public Optional<List<PrivateLinkServiceConnectionResponse>> privateLinkServiceConnections() {
        return Optional.ofNullable(this.privateLinkServiceConnections);
    }

    /**
     * The provisioning state of the private endpoint resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * The ID of the subnet from which the private IP will be allocated.
     * 
     */
    @Import(name="subnet")
    private @Nullable SubnetResponse subnet;

    public Optional<SubnetResponse> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private PrivateEndpointResponse() {}

    private PrivateEndpointResponse(PrivateEndpointResponse $) {
        this.customDnsConfigs = $.customDnsConfigs;
        this.etag = $.etag;
        this.extendedLocation = $.extendedLocation;
        this.id = $.id;
        this.location = $.location;
        this.manualPrivateLinkServiceConnections = $.manualPrivateLinkServiceConnections;
        this.name = $.name;
        this.networkInterfaces = $.networkInterfaces;
        this.privateLinkServiceConnections = $.privateLinkServiceConnections;
        this.provisioningState = $.provisioningState;
        this.subnet = $.subnet;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateEndpointResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateEndpointResponse $;

        public Builder() {
            $ = new PrivateEndpointResponse();
        }

        public Builder(PrivateEndpointResponse defaults) {
            $ = new PrivateEndpointResponse(Objects.requireNonNull(defaults));
        }

        public Builder customDnsConfigs(@Nullable List<CustomDnsConfigPropertiesFormatResponse> customDnsConfigs) {
            $.customDnsConfigs = customDnsConfigs;
            return this;
        }

        public Builder customDnsConfigs(CustomDnsConfigPropertiesFormatResponse... customDnsConfigs) {
            return customDnsConfigs(List.of(customDnsConfigs));
        }

        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            $.extendedLocation = extendedLocation;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        public Builder manualPrivateLinkServiceConnections(@Nullable List<PrivateLinkServiceConnectionResponse> manualPrivateLinkServiceConnections) {
            $.manualPrivateLinkServiceConnections = manualPrivateLinkServiceConnections;
            return this;
        }

        public Builder manualPrivateLinkServiceConnections(PrivateLinkServiceConnectionResponse... manualPrivateLinkServiceConnections) {
            return manualPrivateLinkServiceConnections(List.of(manualPrivateLinkServiceConnections));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder networkInterfaces(List<NetworkInterfaceResponse> networkInterfaces) {
            $.networkInterfaces = networkInterfaces;
            return this;
        }

        public Builder networkInterfaces(NetworkInterfaceResponse... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }

        public Builder privateLinkServiceConnections(@Nullable List<PrivateLinkServiceConnectionResponse> privateLinkServiceConnections) {
            $.privateLinkServiceConnections = privateLinkServiceConnections;
            return this;
        }

        public Builder privateLinkServiceConnections(PrivateLinkServiceConnectionResponse... privateLinkServiceConnections) {
            return privateLinkServiceConnections(List.of(privateLinkServiceConnections));
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder subnet(@Nullable SubnetResponse subnet) {
            $.subnet = subnet;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public PrivateEndpointResponse build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.networkInterfaces = Objects.requireNonNull($.networkInterfaces, "expected parameter 'networkInterfaces' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
