// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessReviewScopeResponse {
    /**
     * The role assignment state eligible/active to review
     * 
     */
    private final String assignmentState;
    /**
     * Flag to indicate whether to expand nested memberships or not.
     * 
     */
    private final @Nullable Boolean expandNestedMemberships;
    /**
     * Duration users are inactive for. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds))
     * 
     */
    private final @Nullable String inactiveDuration;
    /**
     * The identity type user/servicePrincipal to review
     * 
     */
    private final String principalType;
    /**
     * ResourceId in which this review is getting created
     * 
     */
    private final String resourceId;
    /**
     * This is used to indicate the role being reviewed
     * 
     */
    private final String roleDefinitionId;

    @CustomType.Constructor
    private AccessReviewScopeResponse(
        @CustomType.Parameter("assignmentState") String assignmentState,
        @CustomType.Parameter("expandNestedMemberships") @Nullable Boolean expandNestedMemberships,
        @CustomType.Parameter("inactiveDuration") @Nullable String inactiveDuration,
        @CustomType.Parameter("principalType") String principalType,
        @CustomType.Parameter("resourceId") String resourceId,
        @CustomType.Parameter("roleDefinitionId") String roleDefinitionId) {
        this.assignmentState = assignmentState;
        this.expandNestedMemberships = expandNestedMemberships;
        this.inactiveDuration = inactiveDuration;
        this.principalType = principalType;
        this.resourceId = resourceId;
        this.roleDefinitionId = roleDefinitionId;
    }

    /**
     * The role assignment state eligible/active to review
     * 
    */
    public String assignmentState() {
        return this.assignmentState;
    }
    /**
     * Flag to indicate whether to expand nested memberships or not.
     * 
    */
    public Optional<Boolean> expandNestedMemberships() {
        return Optional.ofNullable(this.expandNestedMemberships);
    }
    /**
     * Duration users are inactive for. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds))
     * 
    */
    public Optional<String> inactiveDuration() {
        return Optional.ofNullable(this.inactiveDuration);
    }
    /**
     * The identity type user/servicePrincipal to review
     * 
    */
    public String principalType() {
        return this.principalType;
    }
    /**
     * ResourceId in which this review is getting created
     * 
    */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * This is used to indicate the role being reviewed
     * 
    */
    public String roleDefinitionId() {
        return this.roleDefinitionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessReviewScopeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String assignmentState;
        private @Nullable Boolean expandNestedMemberships;
        private @Nullable String inactiveDuration;
        private String principalType;
        private String resourceId;
        private String roleDefinitionId;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessReviewScopeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignmentState = defaults.assignmentState;
    	      this.expandNestedMemberships = defaults.expandNestedMemberships;
    	      this.inactiveDuration = defaults.inactiveDuration;
    	      this.principalType = defaults.principalType;
    	      this.resourceId = defaults.resourceId;
    	      this.roleDefinitionId = defaults.roleDefinitionId;
        }

        public Builder assignmentState(String assignmentState) {
            this.assignmentState = Objects.requireNonNull(assignmentState);
            return this;
        }
        public Builder expandNestedMemberships(@Nullable Boolean expandNestedMemberships) {
            this.expandNestedMemberships = expandNestedMemberships;
            return this;
        }
        public Builder inactiveDuration(@Nullable String inactiveDuration) {
            this.inactiveDuration = inactiveDuration;
            return this;
        }
        public Builder principalType(String principalType) {
            this.principalType = Objects.requireNonNull(principalType);
            return this;
        }
        public Builder resourceId(String resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }
        public Builder roleDefinitionId(String roleDefinitionId) {
            this.roleDefinitionId = Objects.requireNonNull(roleDefinitionId);
            return this;
        }        public AccessReviewScopeResponse build() {
            return new AccessReviewScopeResponse(assignmentState, expandNestedMemberships, inactiveDuration, principalType, resourceId, roleDefinitionId);
        }
    }
}
