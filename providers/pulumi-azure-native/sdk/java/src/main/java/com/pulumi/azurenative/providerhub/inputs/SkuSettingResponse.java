// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.azurenative.providerhub.inputs.SkuCapabilityResponse;
import com.pulumi.azurenative.providerhub.inputs.SkuCostResponse;
import com.pulumi.azurenative.providerhub.inputs.SkuLocationInfoResponse;
import com.pulumi.azurenative.providerhub.inputs.SkuSettingResponseCapacity;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SkuSettingResponse extends com.pulumi.resources.InvokeArgs {

    public static final SkuSettingResponse Empty = new SkuSettingResponse();

    @Import(name="capabilities")
    private @Nullable List<SkuCapabilityResponse> capabilities;

    public Optional<List<SkuCapabilityResponse>> capabilities() {
        return Optional.ofNullable(this.capabilities);
    }

    @Import(name="capacity")
    private @Nullable SkuSettingResponseCapacity capacity;

    public Optional<SkuSettingResponseCapacity> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    @Import(name="costs")
    private @Nullable List<SkuCostResponse> costs;

    public Optional<List<SkuCostResponse>> costs() {
        return Optional.ofNullable(this.costs);
    }

    @Import(name="family")
    private @Nullable String family;

    public Optional<String> family() {
        return Optional.ofNullable(this.family);
    }

    @Import(name="kind")
    private @Nullable String kind;

    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }

    @Import(name="locationInfo")
    private @Nullable List<SkuLocationInfoResponse> locationInfo;

    public Optional<List<SkuLocationInfoResponse>> locationInfo() {
        return Optional.ofNullable(this.locationInfo);
    }

    @Import(name="locations")
    private @Nullable List<String> locations;

    public Optional<List<String>> locations() {
        return Optional.ofNullable(this.locations);
    }

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    @Import(name="requiredFeatures")
    private @Nullable List<String> requiredFeatures;

    public Optional<List<String>> requiredFeatures() {
        return Optional.ofNullable(this.requiredFeatures);
    }

    @Import(name="requiredQuotaIds")
    private @Nullable List<String> requiredQuotaIds;

    public Optional<List<String>> requiredQuotaIds() {
        return Optional.ofNullable(this.requiredQuotaIds);
    }

    @Import(name="size")
    private @Nullable String size;

    public Optional<String> size() {
        return Optional.ofNullable(this.size);
    }

    @Import(name="tier")
    private @Nullable String tier;

    public Optional<String> tier() {
        return Optional.ofNullable(this.tier);
    }

    private SkuSettingResponse() {}

    private SkuSettingResponse(SkuSettingResponse $) {
        this.capabilities = $.capabilities;
        this.capacity = $.capacity;
        this.costs = $.costs;
        this.family = $.family;
        this.kind = $.kind;
        this.locationInfo = $.locationInfo;
        this.locations = $.locations;
        this.name = $.name;
        this.requiredFeatures = $.requiredFeatures;
        this.requiredQuotaIds = $.requiredQuotaIds;
        this.size = $.size;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SkuSettingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SkuSettingResponse $;

        public Builder() {
            $ = new SkuSettingResponse();
        }

        public Builder(SkuSettingResponse defaults) {
            $ = new SkuSettingResponse(Objects.requireNonNull(defaults));
        }

        public Builder capabilities(@Nullable List<SkuCapabilityResponse> capabilities) {
            $.capabilities = capabilities;
            return this;
        }

        public Builder capabilities(SkuCapabilityResponse... capabilities) {
            return capabilities(List.of(capabilities));
        }

        public Builder capacity(@Nullable SkuSettingResponseCapacity capacity) {
            $.capacity = capacity;
            return this;
        }

        public Builder costs(@Nullable List<SkuCostResponse> costs) {
            $.costs = costs;
            return this;
        }

        public Builder costs(SkuCostResponse... costs) {
            return costs(List.of(costs));
        }

        public Builder family(@Nullable String family) {
            $.family = family;
            return this;
        }

        public Builder kind(@Nullable String kind) {
            $.kind = kind;
            return this;
        }

        public Builder locationInfo(@Nullable List<SkuLocationInfoResponse> locationInfo) {
            $.locationInfo = locationInfo;
            return this;
        }

        public Builder locationInfo(SkuLocationInfoResponse... locationInfo) {
            return locationInfo(List.of(locationInfo));
        }

        public Builder locations(@Nullable List<String> locations) {
            $.locations = locations;
            return this;
        }

        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder requiredFeatures(@Nullable List<String> requiredFeatures) {
            $.requiredFeatures = requiredFeatures;
            return this;
        }

        public Builder requiredFeatures(String... requiredFeatures) {
            return requiredFeatures(List.of(requiredFeatures));
        }

        public Builder requiredQuotaIds(@Nullable List<String> requiredQuotaIds) {
            $.requiredQuotaIds = requiredQuotaIds;
            return this;
        }

        public Builder requiredQuotaIds(String... requiredQuotaIds) {
            return requiredQuotaIds(List.of(requiredQuotaIds));
        }

        public Builder size(@Nullable String size) {
            $.size = size;
            return this;
        }

        public Builder tier(@Nullable String tier) {
            $.tier = tier;
            return this;
        }

        public SkuSettingResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
