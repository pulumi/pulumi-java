// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization;

import com.pulumi.azurenative.desktopvirtualization.enums.HostPoolType;
import com.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetIdentityArgs;
import com.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetPlanArgs;
import com.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetSkuArgs;
import com.pulumi.azurenative.desktopvirtualization.inputs.ScalingHostPoolReferenceArgs;
import com.pulumi.azurenative.desktopvirtualization.inputs.ScalingScheduleArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScalingPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScalingPlanArgs Empty = new ScalingPlanArgs();

    /**
     * Description of scaling plan.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of scaling plan.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Exclusion tag for scaling plan.
     * 
     */
    @Import(name="exclusionTag")
    private @Nullable Output<String> exclusionTag;

    /**
     * @return Exclusion tag for scaling plan.
     * 
     */
    public Optional<Output<String>> exclusionTag() {
        return Optional.ofNullable(this.exclusionTag);
    }

    /**
     * User friendly name of scaling plan.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    /**
     * @return User friendly name of scaling plan.
     * 
     */
    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * List of ScalingHostPoolReference definitions.
     * 
     */
    @Import(name="hostPoolReferences")
    private @Nullable Output<List<ScalingHostPoolReferenceArgs>> hostPoolReferences;

    /**
     * @return List of ScalingHostPoolReference definitions.
     * 
     */
    public Optional<Output<List<ScalingHostPoolReferenceArgs>>> hostPoolReferences() {
        return Optional.ofNullable(this.hostPoolReferences);
    }

    /**
     * HostPool type for desktop.
     * 
     */
    @Import(name="hostPoolType")
    private @Nullable Output<Either<String,HostPoolType>> hostPoolType;

    /**
     * @return HostPool type for desktop.
     * 
     */
    public Optional<Output<Either<String,HostPoolType>>> hostPoolType() {
        return Optional.ofNullable(this.hostPoolType);
    }

    @Import(name="identity")
    private @Nullable Output<ResourceModelWithAllowedPropertySetIdentityArgs> identity;

    public Optional<Output<ResourceModelWithAllowedPropertySetIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
     */
    @Import(name="managedBy")
    private @Nullable Output<String> managedBy;

    /**
     * @return The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
     */
    public Optional<Output<String>> managedBy() {
        return Optional.ofNullable(this.managedBy);
    }

    @Import(name="plan")
    private @Nullable Output<ResourceModelWithAllowedPropertySetPlanArgs> plan;

    public Optional<Output<ResourceModelWithAllowedPropertySetPlanArgs>> plan() {
        return Optional.ofNullable(this.plan);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The ring number of scaling plan.
     * 
     */
    @Import(name="ring")
    private @Nullable Output<Integer> ring;

    /**
     * @return The ring number of scaling plan.
     * 
     */
    public Optional<Output<Integer>> ring() {
        return Optional.ofNullable(this.ring);
    }

    /**
     * The name of the scaling plan.
     * 
     */
    @Import(name="scalingPlanName")
    private @Nullable Output<String> scalingPlanName;

    /**
     * @return The name of the scaling plan.
     * 
     */
    public Optional<Output<String>> scalingPlanName() {
        return Optional.ofNullable(this.scalingPlanName);
    }

    /**
     * List of ScalingSchedule definitions.
     * 
     */
    @Import(name="schedules")
    private @Nullable Output<List<ScalingScheduleArgs>> schedules;

    /**
     * @return List of ScalingSchedule definitions.
     * 
     */
    public Optional<Output<List<ScalingScheduleArgs>>> schedules() {
        return Optional.ofNullable(this.schedules);
    }

    @Import(name="sku")
    private @Nullable Output<ResourceModelWithAllowedPropertySetSkuArgs> sku;

    public Optional<Output<ResourceModelWithAllowedPropertySetSkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Timezone of the scaling plan.
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return Timezone of the scaling plan.
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    private ScalingPlanArgs() {}

    private ScalingPlanArgs(ScalingPlanArgs $) {
        this.description = $.description;
        this.exclusionTag = $.exclusionTag;
        this.friendlyName = $.friendlyName;
        this.hostPoolReferences = $.hostPoolReferences;
        this.hostPoolType = $.hostPoolType;
        this.identity = $.identity;
        this.kind = $.kind;
        this.location = $.location;
        this.managedBy = $.managedBy;
        this.plan = $.plan;
        this.resourceGroupName = $.resourceGroupName;
        this.ring = $.ring;
        this.scalingPlanName = $.scalingPlanName;
        this.schedules = $.schedules;
        this.sku = $.sku;
        this.tags = $.tags;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScalingPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScalingPlanArgs $;

        public Builder() {
            $ = new ScalingPlanArgs();
        }

        public Builder(ScalingPlanArgs defaults) {
            $ = new ScalingPlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param exclusionTag Exclusion tag for scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder exclusionTag(@Nullable Output<String> exclusionTag) {
            $.exclusionTag = exclusionTag;
            return this;
        }

        /**
         * @param exclusionTag Exclusion tag for scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder exclusionTag(String exclusionTag) {
            return exclusionTag(Output.of(exclusionTag));
        }

        /**
         * @param friendlyName User friendly name of scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param friendlyName User friendly name of scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        /**
         * @param hostPoolReferences List of ScalingHostPoolReference definitions.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolReferences(@Nullable Output<List<ScalingHostPoolReferenceArgs>> hostPoolReferences) {
            $.hostPoolReferences = hostPoolReferences;
            return this;
        }

        /**
         * @param hostPoolReferences List of ScalingHostPoolReference definitions.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolReferences(List<ScalingHostPoolReferenceArgs> hostPoolReferences) {
            return hostPoolReferences(Output.of(hostPoolReferences));
        }

        /**
         * @param hostPoolReferences List of ScalingHostPoolReference definitions.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolReferences(ScalingHostPoolReferenceArgs... hostPoolReferences) {
            return hostPoolReferences(List.of(hostPoolReferences));
        }

        /**
         * @param hostPoolType HostPool type for desktop.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolType(@Nullable Output<Either<String,HostPoolType>> hostPoolType) {
            $.hostPoolType = hostPoolType;
            return this;
        }

        /**
         * @param hostPoolType HostPool type for desktop.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolType(Either<String,HostPoolType> hostPoolType) {
            return hostPoolType(Output.of(hostPoolType));
        }

        /**
         * @param hostPoolType HostPool type for desktop.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolType(String hostPoolType) {
            return hostPoolType(Either.ofLeft(hostPoolType));
        }

        /**
         * @param hostPoolType HostPool type for desktop.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolType(HostPoolType hostPoolType) {
            return hostPoolType(Either.ofRight(hostPoolType));
        }

        public Builder identity(@Nullable Output<ResourceModelWithAllowedPropertySetIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(ResourceModelWithAllowedPropertySetIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param kind Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managedBy The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
         * 
         * @return builder
         * 
         */
        public Builder managedBy(@Nullable Output<String> managedBy) {
            $.managedBy = managedBy;
            return this;
        }

        /**
         * @param managedBy The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
         * 
         * @return builder
         * 
         */
        public Builder managedBy(String managedBy) {
            return managedBy(Output.of(managedBy));
        }

        public Builder plan(@Nullable Output<ResourceModelWithAllowedPropertySetPlanArgs> plan) {
            $.plan = plan;
            return this;
        }

        public Builder plan(ResourceModelWithAllowedPropertySetPlanArgs plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param ring The ring number of scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder ring(@Nullable Output<Integer> ring) {
            $.ring = ring;
            return this;
        }

        /**
         * @param ring The ring number of scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder ring(Integer ring) {
            return ring(Output.of(ring));
        }

        /**
         * @param scalingPlanName The name of the scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder scalingPlanName(@Nullable Output<String> scalingPlanName) {
            $.scalingPlanName = scalingPlanName;
            return this;
        }

        /**
         * @param scalingPlanName The name of the scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder scalingPlanName(String scalingPlanName) {
            return scalingPlanName(Output.of(scalingPlanName));
        }

        /**
         * @param schedules List of ScalingSchedule definitions.
         * 
         * @return builder
         * 
         */
        public Builder schedules(@Nullable Output<List<ScalingScheduleArgs>> schedules) {
            $.schedules = schedules;
            return this;
        }

        /**
         * @param schedules List of ScalingSchedule definitions.
         * 
         * @return builder
         * 
         */
        public Builder schedules(List<ScalingScheduleArgs> schedules) {
            return schedules(Output.of(schedules));
        }

        /**
         * @param schedules List of ScalingSchedule definitions.
         * 
         * @return builder
         * 
         */
        public Builder schedules(ScalingScheduleArgs... schedules) {
            return schedules(List.of(schedules));
        }

        public Builder sku(@Nullable Output<ResourceModelWithAllowedPropertySetSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(ResourceModelWithAllowedPropertySetSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param timeZone Timezone of the scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone Timezone of the scaling plan.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public ScalingPlanArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
