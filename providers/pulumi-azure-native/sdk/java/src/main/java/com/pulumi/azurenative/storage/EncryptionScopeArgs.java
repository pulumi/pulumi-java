// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage;

import com.pulumi.azurenative.storage.enums.EncryptionScopeSource;
import com.pulumi.azurenative.storage.enums.EncryptionScopeState;
import com.pulumi.azurenative.storage.inputs.EncryptionScopeKeyVaultPropertiesArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EncryptionScopeArgs extends com.pulumi.resources.ResourceArgs {

    public static final EncryptionScopeArgs Empty = new EncryptionScopeArgs();

    /**
     * The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
     * 
     */
    @Import(name="encryptionScopeName")
    private @Nullable Output<String> encryptionScopeName;

    /**
     * @return The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
     * 
     */
    public Optional<Output<String>> encryptionScopeName() {
        return Optional.ofNullable(this.encryptionScopeName);
    }

    /**
     * The key vault properties for the encryption scope. This is a required field if encryption scope &#39;source&#39; attribute is set to &#39;Microsoft.KeyVault&#39;.
     * 
     */
    @Import(name="keyVaultProperties")
    private @Nullable Output<EncryptionScopeKeyVaultPropertiesArgs> keyVaultProperties;

    /**
     * @return The key vault properties for the encryption scope. This is a required field if encryption scope &#39;source&#39; attribute is set to &#39;Microsoft.KeyVault&#39;.
     * 
     */
    public Optional<Output<EncryptionScopeKeyVaultPropertiesArgs>> keyVaultProperties() {
        return Optional.ofNullable(this.keyVaultProperties);
    }

    /**
     * A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
     * 
     */
    @Import(name="requireInfrastructureEncryption")
    private @Nullable Output<Boolean> requireInfrastructureEncryption;

    /**
     * @return A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
     * 
     */
    public Optional<Output<Boolean>> requireInfrastructureEncryption() {
        return Optional.ofNullable(this.requireInfrastructureEncryption);
    }

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.
     * 
     */
    @Import(name="source")
    private @Nullable Output<Either<String,EncryptionScopeSource>> source;

    /**
     * @return The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.
     * 
     */
    public Optional<Output<Either<String,EncryptionScopeSource>>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.
     * 
     */
    @Import(name="state")
    private @Nullable Output<Either<String,EncryptionScopeState>> state;

    /**
     * @return The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.
     * 
     */
    public Optional<Output<Either<String,EncryptionScopeState>>> state() {
        return Optional.ofNullable(this.state);
    }

    private EncryptionScopeArgs() {}

    private EncryptionScopeArgs(EncryptionScopeArgs $) {
        this.accountName = $.accountName;
        this.encryptionScopeName = $.encryptionScopeName;
        this.keyVaultProperties = $.keyVaultProperties;
        this.requireInfrastructureEncryption = $.requireInfrastructureEncryption;
        this.resourceGroupName = $.resourceGroupName;
        this.source = $.source;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionScopeArgs $;

        public Builder() {
            $ = new EncryptionScopeArgs();
        }

        public Builder(EncryptionScopeArgs defaults) {
            $ = new EncryptionScopeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param encryptionScopeName The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
         * 
         * @return builder
         * 
         */
        public Builder encryptionScopeName(@Nullable Output<String> encryptionScopeName) {
            $.encryptionScopeName = encryptionScopeName;
            return this;
        }

        /**
         * @param encryptionScopeName The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
         * 
         * @return builder
         * 
         */
        public Builder encryptionScopeName(String encryptionScopeName) {
            return encryptionScopeName(Output.of(encryptionScopeName));
        }

        /**
         * @param keyVaultProperties The key vault properties for the encryption scope. This is a required field if encryption scope &#39;source&#39; attribute is set to &#39;Microsoft.KeyVault&#39;.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultProperties(@Nullable Output<EncryptionScopeKeyVaultPropertiesArgs> keyVaultProperties) {
            $.keyVaultProperties = keyVaultProperties;
            return this;
        }

        /**
         * @param keyVaultProperties The key vault properties for the encryption scope. This is a required field if encryption scope &#39;source&#39; attribute is set to &#39;Microsoft.KeyVault&#39;.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultProperties(EncryptionScopeKeyVaultPropertiesArgs keyVaultProperties) {
            return keyVaultProperties(Output.of(keyVaultProperties));
        }

        /**
         * @param requireInfrastructureEncryption A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
         * 
         * @return builder
         * 
         */
        public Builder requireInfrastructureEncryption(@Nullable Output<Boolean> requireInfrastructureEncryption) {
            $.requireInfrastructureEncryption = requireInfrastructureEncryption;
            return this;
        }

        /**
         * @param requireInfrastructureEncryption A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
         * 
         * @return builder
         * 
         */
        public Builder requireInfrastructureEncryption(Boolean requireInfrastructureEncryption) {
            return requireInfrastructureEncryption(Output.of(requireInfrastructureEncryption));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param source The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<Either<String,EncryptionScopeSource>> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.
         * 
         * @return builder
         * 
         */
        public Builder source(Either<String,EncryptionScopeSource> source) {
            return source(Output.of(source));
        }

        /**
         * @param source The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Either.ofLeft(source));
        }

        /**
         * @param source The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.
         * 
         * @return builder
         * 
         */
        public Builder source(EncryptionScopeSource source) {
            return source(Either.ofRight(source));
        }

        /**
         * @param state The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<Either<String,EncryptionScopeState>> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.
         * 
         * @return builder
         * 
         */
        public Builder state(Either<String,EncryptionScopeState> state) {
            return state(Output.of(state));
        }

        /**
         * @param state The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Either.ofLeft(state));
        }

        /**
         * @param state The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.
         * 
         * @return builder
         * 
         */
        public Builder state(EncryptionScopeState state) {
            return state(Either.ofRight(state));
        }

        public EncryptionScopeArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
