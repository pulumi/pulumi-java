// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.chaos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Model that represents a delay action.
 * 
 */
public final class DelayActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DelayActionArgs Empty = new DelayActionArgs();

    /**
     * ISO8601 formatted string that represents a duration.
     * 
     */
    @Import(name="duration", required=true)
    private Output<String> duration;

    public Output<String> duration() {
        return this.duration;
    }

    /**
     * String that represents a Capability URN.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Enum that discriminates between action models.
     * Expected value is &#39;delay&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private DelayActionArgs() {}

    private DelayActionArgs(DelayActionArgs $) {
        this.duration = $.duration;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DelayActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DelayActionArgs $;

        public Builder() {
            $ = new DelayActionArgs();
        }

        public Builder(DelayActionArgs defaults) {
            $ = new DelayActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder duration(Output<String> duration) {
            $.duration = duration;
            return this;
        }

        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DelayActionArgs build() {
            $.duration = Objects.requireNonNull($.duration, "expected parameter 'duration' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
