// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The compression method used on a dataset.
 * 
 */
public final class DatasetCompressionResponse extends com.pulumi.resources.InvokeArgs {

    public static final DatasetCompressionResponse Empty = new DatasetCompressionResponse();

    /**
     * The dataset compression level. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="level")
    private @Nullable Object level;

    public Optional<Object> level() {
        return Optional.ofNullable(this.level);
    }

    /**
     * Type of dataset compression. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="type", required=true)
    private Object type;

    public Object type() {
        return this.type;
    }

    private DatasetCompressionResponse() {}

    private DatasetCompressionResponse(DatasetCompressionResponse $) {
        this.level = $.level;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetCompressionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetCompressionResponse $;

        public Builder() {
            $ = new DatasetCompressionResponse();
        }

        public Builder(DatasetCompressionResponse defaults) {
            $ = new DatasetCompressionResponse(Objects.requireNonNull(defaults));
        }

        public Builder level(@Nullable Object level) {
            $.level = level;
            return this;
        }

        public Builder type(Object type) {
            $.type = type;
            return this;
        }

        public DatasetCompressionResponse build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
