// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.LinkedIntegrationRuntimeKeyAuthorizationArgs;
import com.pulumi.azurenative.datafactory.inputs.LinkedIntegrationRuntimeRbacAuthorizationArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Self-hosted integration runtime.
 * 
 */
public final class SelfHostedIntegrationRuntimeArgs extends com.pulumi.resources.ResourceArgs {

    public static final SelfHostedIntegrationRuntimeArgs Empty = new SelfHostedIntegrationRuntimeArgs();

    /**
     * Integration runtime description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Integration runtime description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The base definition of a linked integration runtime.
     * 
     */
    @Import(name="linkedInfo")
    private @Nullable Output<Either<LinkedIntegrationRuntimeKeyAuthorizationArgs,LinkedIntegrationRuntimeRbacAuthorizationArgs>> linkedInfo;

    /**
     * @return The base definition of a linked integration runtime.
     * 
     */
    public Optional<Output<Either<LinkedIntegrationRuntimeKeyAuthorizationArgs,LinkedIntegrationRuntimeRbacAuthorizationArgs>>> linkedInfo() {
        return Optional.ofNullable(this.linkedInfo);
    }

    /**
     * The type of integration runtime.
     * Expected value is &#39;SelfHosted&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of integration runtime.
     * Expected value is &#39;SelfHosted&#39;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private SelfHostedIntegrationRuntimeArgs() {}

    private SelfHostedIntegrationRuntimeArgs(SelfHostedIntegrationRuntimeArgs $) {
        this.description = $.description;
        this.linkedInfo = $.linkedInfo;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SelfHostedIntegrationRuntimeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SelfHostedIntegrationRuntimeArgs $;

        public Builder() {
            $ = new SelfHostedIntegrationRuntimeArgs();
        }

        public Builder(SelfHostedIntegrationRuntimeArgs defaults) {
            $ = new SelfHostedIntegrationRuntimeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Integration runtime description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Integration runtime description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param linkedInfo The base definition of a linked integration runtime.
         * 
         * @return builder
         * 
         */
        public Builder linkedInfo(@Nullable Output<Either<LinkedIntegrationRuntimeKeyAuthorizationArgs,LinkedIntegrationRuntimeRbacAuthorizationArgs>> linkedInfo) {
            $.linkedInfo = linkedInfo;
            return this;
        }

        /**
         * @param linkedInfo The base definition of a linked integration runtime.
         * 
         * @return builder
         * 
         */
        public Builder linkedInfo(Either<LinkedIntegrationRuntimeKeyAuthorizationArgs,LinkedIntegrationRuntimeRbacAuthorizationArgs> linkedInfo) {
            return linkedInfo(Output.of(linkedInfo));
        }

        /**
         * @param linkedInfo The base definition of a linked integration runtime.
         * 
         * @return builder
         * 
         */
        public Builder linkedInfo(LinkedIntegrationRuntimeKeyAuthorizationArgs linkedInfo) {
            return linkedInfo(Either.ofLeft(linkedInfo));
        }

        /**
         * @param linkedInfo The base definition of a linked integration runtime.
         * 
         * @return builder
         * 
         */
        public Builder linkedInfo(LinkedIntegrationRuntimeRbacAuthorizationArgs linkedInfo) {
            return linkedInfo(Either.ofRight(linkedInfo));
        }

        /**
         * @param type The type of integration runtime.
         * Expected value is &#39;SelfHosted&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of integration runtime.
         * Expected value is &#39;SelfHosted&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SelfHostedIntegrationRuntimeArgs build() {
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
