// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.PrivateLinkServiceConnectionStateResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * PrivateLinkServiceConnection resource.
 * 
 */
public final class PrivateLinkServiceConnectionResponse extends com.pulumi.resources.InvokeArgs {

    public static final PrivateLinkServiceConnectionResponse Empty = new PrivateLinkServiceConnectionResponse();

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }

    /**
     * The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
     * 
     */
    @Import(name="groupIds")
    private @Nullable List<String> groupIds;

    /**
     * @return The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
     * 
     */
    public Optional<List<String>> groupIds() {
        return Optional.ofNullable(this.groupIds);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A collection of read-only information about the state of the connection to the remote resource.
     * 
     */
    @Import(name="privateLinkServiceConnectionState")
    private @Nullable PrivateLinkServiceConnectionStateResponse privateLinkServiceConnectionState;

    /**
     * @return A collection of read-only information about the state of the connection to the remote resource.
     * 
     */
    public Optional<PrivateLinkServiceConnectionStateResponse> privateLinkServiceConnectionState() {
        return Optional.ofNullable(this.privateLinkServiceConnectionState);
    }

    /**
     * The resource id of private link service.
     * 
     */
    @Import(name="privateLinkServiceId")
    private @Nullable String privateLinkServiceId;

    /**
     * @return The resource id of private link service.
     * 
     */
    public Optional<String> privateLinkServiceId() {
        return Optional.ofNullable(this.privateLinkServiceId);
    }

    /**
     * The provisioning state of the private link service connection resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return The provisioning state of the private link service connection resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
     * 
     */
    @Import(name="requestMessage")
    private @Nullable String requestMessage;

    /**
     * @return A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
     * 
     */
    public Optional<String> requestMessage() {
        return Optional.ofNullable(this.requestMessage);
    }

    /**
     * The resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    private PrivateLinkServiceConnectionResponse() {}

    private PrivateLinkServiceConnectionResponse(PrivateLinkServiceConnectionResponse $) {
        this.etag = $.etag;
        this.groupIds = $.groupIds;
        this.id = $.id;
        this.name = $.name;
        this.privateLinkServiceConnectionState = $.privateLinkServiceConnectionState;
        this.privateLinkServiceId = $.privateLinkServiceId;
        this.provisioningState = $.provisioningState;
        this.requestMessage = $.requestMessage;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateLinkServiceConnectionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateLinkServiceConnectionResponse $;

        public Builder() {
            $ = new PrivateLinkServiceConnectionResponse();
        }

        public Builder(PrivateLinkServiceConnectionResponse defaults) {
            $ = new PrivateLinkServiceConnectionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param etag A unique read-only string that changes whenever the resource is updated.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param groupIds The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(@Nullable List<String> groupIds) {
            $.groupIds = groupIds;
            return this;
        }

        /**
         * @param groupIds The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(String... groupIds) {
            return groupIds(List.of(groupIds));
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param name The name of the resource that is unique within a resource group. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param privateLinkServiceConnectionState A collection of read-only information about the state of the connection to the remote resource.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceConnectionState(@Nullable PrivateLinkServiceConnectionStateResponse privateLinkServiceConnectionState) {
            $.privateLinkServiceConnectionState = privateLinkServiceConnectionState;
            return this;
        }

        /**
         * @param privateLinkServiceId The resource id of private link service.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceId(@Nullable String privateLinkServiceId) {
            $.privateLinkServiceId = privateLinkServiceId;
            return this;
        }

        /**
         * @param provisioningState The provisioning state of the private link service connection resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param requestMessage A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
         * 
         * @return builder
         * 
         */
        public Builder requestMessage(@Nullable String requestMessage) {
            $.requestMessage = requestMessage;
            return this;
        }

        /**
         * @param type The resource type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public PrivateLinkServiceConnectionResponse build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
