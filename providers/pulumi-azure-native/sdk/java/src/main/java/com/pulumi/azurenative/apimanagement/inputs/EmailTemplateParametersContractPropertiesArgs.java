// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Email Template Parameter contract.
 * 
 */
public final class EmailTemplateParametersContractPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailTemplateParametersContractPropertiesArgs Empty = new EmailTemplateParametersContractPropertiesArgs();

    /**
     * Template parameter description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Template parameter description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Template parameter name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Template parameter name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Template parameter title.
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    /**
     * @return Template parameter title.
     * 
     */
    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    private EmailTemplateParametersContractPropertiesArgs() {}

    private EmailTemplateParametersContractPropertiesArgs(EmailTemplateParametersContractPropertiesArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailTemplateParametersContractPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailTemplateParametersContractPropertiesArgs $;

        public Builder() {
            $ = new EmailTemplateParametersContractPropertiesArgs();
        }

        public Builder(EmailTemplateParametersContractPropertiesArgs defaults) {
            $ = new EmailTemplateParametersContractPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Template parameter description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Template parameter description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Template parameter name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Template parameter name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param title Template parameter title.
         * 
         * @return builder
         * 
         */
        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title Template parameter title.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        public EmailTemplateParametersContractPropertiesArgs build() {
            return $;
        }
    }

}
