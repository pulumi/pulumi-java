// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.mobilenetwork.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Range of port numbers to use as translated ports on each translated address.
 * If not specified and NAPT is enabled, this range defaults to 1,024 - 65,535. (Ports under 1,024 should not be used because these are special purpose ports reserved by IANA.)
 * 
 */
public final class PortRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final PortRangeArgs Empty = new PortRangeArgs();

    /**
     * The maximum port number
     * 
     */
    @Import(name="maxPort")
    private @Nullable Output<Integer> maxPort;

    /**
     * @return The maximum port number
     * 
     */
    public Optional<Output<Integer>> maxPort() {
        return Optional.ofNullable(this.maxPort);
    }

    /**
     * The minimum port number
     * 
     */
    @Import(name="minPort")
    private @Nullable Output<Integer> minPort;

    /**
     * @return The minimum port number
     * 
     */
    public Optional<Output<Integer>> minPort() {
        return Optional.ofNullable(this.minPort);
    }

    private PortRangeArgs() {}

    private PortRangeArgs(PortRangeArgs $) {
        this.maxPort = $.maxPort;
        this.minPort = $.minPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortRangeArgs $;

        public Builder() {
            $ = new PortRangeArgs();
        }

        public Builder(PortRangeArgs defaults) {
            $ = new PortRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxPort The maximum port number
         * 
         * @return builder
         * 
         */
        public Builder maxPort(@Nullable Output<Integer> maxPort) {
            $.maxPort = maxPort;
            return this;
        }

        /**
         * @param maxPort The maximum port number
         * 
         * @return builder
         * 
         */
        public Builder maxPort(Integer maxPort) {
            return maxPort(Output.of(maxPort));
        }

        /**
         * @param minPort The minimum port number
         * 
         * @return builder
         * 
         */
        public Builder minPort(@Nullable Output<Integer> minPort) {
            $.minPort = minPort;
            return this;
        }

        /**
         * @param minPort The minimum port number
         * 
         * @return builder
         * 
         */
        public Builder minPort(Integer minPort) {
            return minPort(Output.of(minPort));
        }

        public PortRangeArgs build() {
            $.maxPort = Codegen.integerProp("maxPort").output().arg($.maxPort).def(65535).getNullable();
            $.minPort = Codegen.integerProp("minPort").output().arg($.minPort).def(1024).getNullable();
            return $;
        }
    }

}
