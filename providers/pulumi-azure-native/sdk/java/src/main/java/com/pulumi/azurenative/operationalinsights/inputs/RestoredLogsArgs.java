// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Restore parameters.
 * 
 */
public final class RestoredLogsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RestoredLogsArgs Empty = new RestoredLogsArgs();

    /**
     * The timestamp to end the restore by (UTC).
     * 
     */
    @Import(name="endRestoreTime")
    private @Nullable Output<String> endRestoreTime;

    /**
     * @return The timestamp to end the restore by (UTC).
     * 
     */
    public Optional<Output<String>> endRestoreTime() {
        return Optional.ofNullable(this.endRestoreTime);
    }

    /**
     * The table to restore data from.
     * 
     */
    @Import(name="sourceTable")
    private @Nullable Output<String> sourceTable;

    /**
     * @return The table to restore data from.
     * 
     */
    public Optional<Output<String>> sourceTable() {
        return Optional.ofNullable(this.sourceTable);
    }

    /**
     * The timestamp to start the restore from (UTC).
     * 
     */
    @Import(name="startRestoreTime")
    private @Nullable Output<String> startRestoreTime;

    /**
     * @return The timestamp to start the restore from (UTC).
     * 
     */
    public Optional<Output<String>> startRestoreTime() {
        return Optional.ofNullable(this.startRestoreTime);
    }

    private RestoredLogsArgs() {}

    private RestoredLogsArgs(RestoredLogsArgs $) {
        this.endRestoreTime = $.endRestoreTime;
        this.sourceTable = $.sourceTable;
        this.startRestoreTime = $.startRestoreTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RestoredLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RestoredLogsArgs $;

        public Builder() {
            $ = new RestoredLogsArgs();
        }

        public Builder(RestoredLogsArgs defaults) {
            $ = new RestoredLogsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endRestoreTime The timestamp to end the restore by (UTC).
         * 
         * @return builder
         * 
         */
        public Builder endRestoreTime(@Nullable Output<String> endRestoreTime) {
            $.endRestoreTime = endRestoreTime;
            return this;
        }

        /**
         * @param endRestoreTime The timestamp to end the restore by (UTC).
         * 
         * @return builder
         * 
         */
        public Builder endRestoreTime(String endRestoreTime) {
            return endRestoreTime(Output.of(endRestoreTime));
        }

        /**
         * @param sourceTable The table to restore data from.
         * 
         * @return builder
         * 
         */
        public Builder sourceTable(@Nullable Output<String> sourceTable) {
            $.sourceTable = sourceTable;
            return this;
        }

        /**
         * @param sourceTable The table to restore data from.
         * 
         * @return builder
         * 
         */
        public Builder sourceTable(String sourceTable) {
            return sourceTable(Output.of(sourceTable));
        }

        /**
         * @param startRestoreTime The timestamp to start the restore from (UTC).
         * 
         * @return builder
         * 
         */
        public Builder startRestoreTime(@Nullable Output<String> startRestoreTime) {
            $.startRestoreTime = startRestoreTime;
            return this;
        }

        /**
         * @param startRestoreTime The timestamp to start the restore from (UTC).
         * 
         * @return builder
         * 
         */
        public Builder startRestoreTime(String startRestoreTime) {
            return startRestoreTime(Output.of(startRestoreTime));
        }

        public RestoredLogsArgs build() {
            return $;
        }
    }

}
