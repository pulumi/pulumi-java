// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TimerTriggerDescriptorResponse extends com.pulumi.resources.InvokeArgs {

    public static final TimerTriggerDescriptorResponse Empty = new TimerTriggerDescriptorResponse();

    /**
     * The occurrence that triggered the run.
     * 
     */
    @Import(name="scheduleOccurrence")
    private @Nullable String scheduleOccurrence;

    /**
     * @return The occurrence that triggered the run.
     * 
     */
    public Optional<String> scheduleOccurrence() {
        return Optional.ofNullable(this.scheduleOccurrence);
    }

    /**
     * The timer trigger name that caused the run.
     * 
     */
    @Import(name="timerTriggerName")
    private @Nullable String timerTriggerName;

    /**
     * @return The timer trigger name that caused the run.
     * 
     */
    public Optional<String> timerTriggerName() {
        return Optional.ofNullable(this.timerTriggerName);
    }

    private TimerTriggerDescriptorResponse() {}

    private TimerTriggerDescriptorResponse(TimerTriggerDescriptorResponse $) {
        this.scheduleOccurrence = $.scheduleOccurrence;
        this.timerTriggerName = $.timerTriggerName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TimerTriggerDescriptorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TimerTriggerDescriptorResponse $;

        public Builder() {
            $ = new TimerTriggerDescriptorResponse();
        }

        public Builder(TimerTriggerDescriptorResponse defaults) {
            $ = new TimerTriggerDescriptorResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param scheduleOccurrence The occurrence that triggered the run.
         * 
         * @return builder
         * 
         */
        public Builder scheduleOccurrence(@Nullable String scheduleOccurrence) {
            $.scheduleOccurrence = scheduleOccurrence;
            return this;
        }

        /**
         * @param timerTriggerName The timer trigger name that caused the run.
         * 
         * @return builder
         * 
         */
        public Builder timerTriggerName(@Nullable String timerTriggerName) {
            $.timerTriggerName = timerTriggerName;
            return this;
        }

        public TimerTriggerDescriptorResponse build() {
            return $;
        }
    }

}
