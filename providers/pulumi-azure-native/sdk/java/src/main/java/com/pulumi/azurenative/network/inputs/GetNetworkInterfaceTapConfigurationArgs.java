// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetNetworkInterfaceTapConfigurationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkInterfaceTapConfigurationArgs Empty = new GetNetworkInterfaceTapConfigurationArgs();

    /**
     * The name of the network interface.
     * 
     */
    @Import(name="networkInterfaceName", required=true)
    private Output<String> networkInterfaceName;

    /**
     * @return The name of the network interface.
     * 
     */
    public Output<String> networkInterfaceName() {
        return this.networkInterfaceName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the tap configuration.
     * 
     */
    @Import(name="tapConfigurationName", required=true)
    private Output<String> tapConfigurationName;

    /**
     * @return The name of the tap configuration.
     * 
     */
    public Output<String> tapConfigurationName() {
        return this.tapConfigurationName;
    }

    private GetNetworkInterfaceTapConfigurationArgs() {}

    private GetNetworkInterfaceTapConfigurationArgs(GetNetworkInterfaceTapConfigurationArgs $) {
        this.networkInterfaceName = $.networkInterfaceName;
        this.resourceGroupName = $.resourceGroupName;
        this.tapConfigurationName = $.tapConfigurationName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkInterfaceTapConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkInterfaceTapConfigurationArgs $;

        public Builder() {
            $ = new GetNetworkInterfaceTapConfigurationArgs();
        }

        public Builder(GetNetworkInterfaceTapConfigurationArgs defaults) {
            $ = new GetNetworkInterfaceTapConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkInterfaceName The name of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceName(Output<String> networkInterfaceName) {
            $.networkInterfaceName = networkInterfaceName;
            return this;
        }

        /**
         * @param networkInterfaceName The name of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceName(String networkInterfaceName) {
            return networkInterfaceName(Output.of(networkInterfaceName));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tapConfigurationName The name of the tap configuration.
         * 
         * @return builder
         * 
         */
        public Builder tapConfigurationName(Output<String> tapConfigurationName) {
            $.tapConfigurationName = tapConfigurationName;
            return this;
        }

        /**
         * @param tapConfigurationName The name of the tap configuration.
         * 
         * @return builder
         * 
         */
        public Builder tapConfigurationName(String tapConfigurationName) {
            return tapConfigurationName(Output.of(tapConfigurationName));
        }

        public GetNetworkInterfaceTapConfigurationArgs build() {
            $.networkInterfaceName = Objects.requireNonNull($.networkInterfaceName, "expected parameter 'networkInterfaceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.tapConfigurationName = Objects.requireNonNull($.tapConfigurationName, "expected parameter 'tapConfigurationName' to be non-null");
            return $;
        }
    }

}
