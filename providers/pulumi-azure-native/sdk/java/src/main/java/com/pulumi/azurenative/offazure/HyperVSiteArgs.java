// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.offazure;

import com.pulumi.azurenative.offazure.inputs.SitePropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HyperVSiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final HyperVSiteArgs Empty = new HyperVSiteArgs();

    /**
     * eTag for concurrency control.
     * 
     */
    @Import(name="eTag")
    private @Nullable Output<String> eTag;

    /**
     * @return eTag for concurrency control.
     * 
     */
    public Optional<Output<String>> eTag() {
        return Optional.ofNullable(this.eTag);
    }

    /**
     * Azure location in which Sites is created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Azure location in which Sites is created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the Hyper-V site.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Hyper-V site.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Nested properties of Hyper-V site.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<SitePropertiesArgs> properties;

    /**
     * @return Nested properties of Hyper-V site.
     * 
     */
    public Optional<Output<SitePropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Site name.
     * 
     */
    @Import(name="siteName")
    private @Nullable Output<String> siteName;

    /**
     * @return Site name.
     * 
     */
    public Optional<Output<String>> siteName() {
        return Optional.ofNullable(this.siteName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private HyperVSiteArgs() {}

    private HyperVSiteArgs(HyperVSiteArgs $) {
        this.eTag = $.eTag;
        this.location = $.location;
        this.name = $.name;
        this.properties = $.properties;
        this.resourceGroupName = $.resourceGroupName;
        this.siteName = $.siteName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HyperVSiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HyperVSiteArgs $;

        public Builder() {
            $ = new HyperVSiteArgs();
        }

        public Builder(HyperVSiteArgs defaults) {
            $ = new HyperVSiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eTag eTag for concurrency control.
         * 
         * @return builder
         * 
         */
        public Builder eTag(@Nullable Output<String> eTag) {
            $.eTag = eTag;
            return this;
        }

        /**
         * @param eTag eTag for concurrency control.
         * 
         * @return builder
         * 
         */
        public Builder eTag(String eTag) {
            return eTag(Output.of(eTag));
        }

        /**
         * @param location Azure location in which Sites is created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Azure location in which Sites is created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Name of the Hyper-V site.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Hyper-V site.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param properties Nested properties of Hyper-V site.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<SitePropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Nested properties of Hyper-V site.
         * 
         * @return builder
         * 
         */
        public Builder properties(SitePropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param siteName Site name.
         * 
         * @return builder
         * 
         */
        public Builder siteName(@Nullable Output<String> siteName) {
            $.siteName = siteName;
            return this;
        }

        /**
         * @param siteName Site name.
         * 
         * @return builder
         * 
         */
        public Builder siteName(String siteName) {
            return siteName(Output.of(siteName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public HyperVSiteArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
