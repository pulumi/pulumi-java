// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dataprotection.inputs;

import com.pulumi.azurenative.dataprotection.inputs.RetentionTagResponse;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Adhoc backup tagging criteria
 * 
 */
public final class AdhocBasedTaggingCriteriaResponse extends com.pulumi.resources.InvokeArgs {

    public static final AdhocBasedTaggingCriteriaResponse Empty = new AdhocBasedTaggingCriteriaResponse();

    /**
     * Retention tag information
     * 
     */
    @Import(name="tagInfo")
    private @Nullable RetentionTagResponse tagInfo;

    /**
     * @return Retention tag information
     * 
     */
    public Optional<RetentionTagResponse> tagInfo() {
        return Optional.ofNullable(this.tagInfo);
    }

    private AdhocBasedTaggingCriteriaResponse() {}

    private AdhocBasedTaggingCriteriaResponse(AdhocBasedTaggingCriteriaResponse $) {
        this.tagInfo = $.tagInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdhocBasedTaggingCriteriaResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdhocBasedTaggingCriteriaResponse $;

        public Builder() {
            $ = new AdhocBasedTaggingCriteriaResponse();
        }

        public Builder(AdhocBasedTaggingCriteriaResponse defaults) {
            $ = new AdhocBasedTaggingCriteriaResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param tagInfo Retention tag information
         * 
         * @return builder
         * 
         */
        public Builder tagInfo(@Nullable RetentionTagResponse tagInfo) {
            $.tagInfo = tagInfo;
            return this;
        }

        public AdhocBasedTaggingCriteriaResponse build() {
            return $;
        }
    }

}
