// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appconfiguration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class ListConfigurationStoreKeyValueResult {
    /**
     * @return The content type of the key-value&#39;s value.
     * Providing a proper content-type can enable transformations of values when they are retrieved by applications.
     * 
     */
    private final String contentType;
    /**
     * @return An ETag indicating the state of a key-value within a configuration store.
     * 
     */
    private final String eTag;
    /**
     * @return The primary identifier of a key-value.
     * The key is used in unison with the label to uniquely identify a key-value.
     * 
     */
    private final String key;
    /**
     * @return A value used to group key-values.
     * The label is used in unison with the key to uniquely identify a key-value.
     * 
     */
    private final String label;
    /**
     * @return The last time a modifying operation was performed on the given key-value.
     * 
     */
    private final String lastModified;
    /**
     * @return A value indicating whether the key-value is locked.
     * A locked key-value may not be modified until it is unlocked.
     * 
     */
    private final Boolean locked;
    /**
     * @return A dictionary of tags that can help identify what a key-value may be applicable for.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The value of the key-value.
     * 
     */
    private final String value;

    @CustomType.Constructor
    private ListConfigurationStoreKeyValueResult(
        @CustomType.Parameter("contentType") String contentType,
        @CustomType.Parameter("eTag") String eTag,
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("label") String label,
        @CustomType.Parameter("lastModified") String lastModified,
        @CustomType.Parameter("locked") Boolean locked,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("value") String value) {
        this.contentType = contentType;
        this.eTag = eTag;
        this.key = key;
        this.label = label;
        this.lastModified = lastModified;
        this.locked = locked;
        this.tags = tags;
        this.value = value;
    }

    /**
     * @return The content type of the key-value&#39;s value.
     * Providing a proper content-type can enable transformations of values when they are retrieved by applications.
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    /**
     * @return An ETag indicating the state of a key-value within a configuration store.
     * 
     */
    public String eTag() {
        return this.eTag;
    }
    /**
     * @return The primary identifier of a key-value.
     * The key is used in unison with the label to uniquely identify a key-value.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return A value used to group key-values.
     * The label is used in unison with the key to uniquely identify a key-value.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return The last time a modifying operation was performed on the given key-value.
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    /**
     * @return A value indicating whether the key-value is locked.
     * A locked key-value may not be modified until it is unlocked.
     * 
     */
    public Boolean locked() {
        return this.locked;
    }
    /**
     * @return A dictionary of tags that can help identify what a key-value may be applicable for.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The value of the key-value.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListConfigurationStoreKeyValueResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String contentType;
        private String eTag;
        private String key;
        private String label;
        private String lastModified;
        private Boolean locked;
        private Map<String,String> tags;
        private String value;

        public Builder() {
    	      // Empty
        }

        public Builder(ListConfigurationStoreKeyValueResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentType = defaults.contentType;
    	      this.eTag = defaults.eTag;
    	      this.key = defaults.key;
    	      this.label = defaults.label;
    	      this.lastModified = defaults.lastModified;
    	      this.locked = defaults.locked;
    	      this.tags = defaults.tags;
    	      this.value = defaults.value;
        }

        public Builder contentType(String contentType) {
            this.contentType = Objects.requireNonNull(contentType);
            return this;
        }
        public Builder eTag(String eTag) {
            this.eTag = Objects.requireNonNull(eTag);
            return this;
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        public Builder lastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }
        public Builder locked(Boolean locked) {
            this.locked = Objects.requireNonNull(locked);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }        public ListConfigurationStoreKeyValueResult build() {
            return new ListConfigurationStoreKeyValueResult(contentType, eTag, key, label, lastModified, locked, tags, value);
        }
    }
}
