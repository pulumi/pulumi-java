// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement;

import com.pulumi.azurenative.apimanagement.enums.ApiType;
import com.pulumi.azurenative.apimanagement.enums.ContentFormat;
import com.pulumi.azurenative.apimanagement.enums.Protocol;
import com.pulumi.azurenative.apimanagement.enums.SoapApiType;
import com.pulumi.azurenative.apimanagement.inputs.ApiCreateOrUpdatePropertiesWsdlSelectorArgs;
import com.pulumi.azurenative.apimanagement.inputs.ApiVersionSetContractDetailsArgs;
import com.pulumi.azurenative.apimanagement.inputs.AuthenticationSettingsContractArgs;
import com.pulumi.azurenative.apimanagement.inputs.SubscriptionKeyParameterNamesContractArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiArgs Empty = new ApiArgs();

    /**
     * API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * 
     */
    @Import(name="apiId")
    private @Nullable Output<String> apiId;

    public Optional<Output<String>> apiId() {
        return Optional.ofNullable(this.apiId);
    }

    /**
     * Describes the Revision of the Api. If no value is provided, default revision 1 is created
     * 
     */
    @Import(name="apiRevision")
    private @Nullable Output<String> apiRevision;

    public Optional<Output<String>> apiRevision() {
        return Optional.ofNullable(this.apiRevision);
    }

    /**
     * Description of the Api Revision.
     * 
     */
    @Import(name="apiRevisionDescription")
    private @Nullable Output<String> apiRevisionDescription;

    public Optional<Output<String>> apiRevisionDescription() {
        return Optional.ofNullable(this.apiRevisionDescription);
    }

    /**
     * Type of API.
     * 
     */
    @Import(name="apiType")
    private @Nullable Output<Either<String,ApiType>> apiType;

    public Optional<Output<Either<String,ApiType>>> apiType() {
        return Optional.ofNullable(this.apiType);
    }

    /**
     * Indicates the Version identifier of the API if the API is versioned
     * 
     */
    @Import(name="apiVersion")
    private @Nullable Output<String> apiVersion;

    public Optional<Output<String>> apiVersion() {
        return Optional.ofNullable(this.apiVersion);
    }

    /**
     * Description of the Api Version.
     * 
     */
    @Import(name="apiVersionDescription")
    private @Nullable Output<String> apiVersionDescription;

    public Optional<Output<String>> apiVersionDescription() {
        return Optional.ofNullable(this.apiVersionDescription);
    }

    /**
     * Version set details
     * 
     */
    @Import(name="apiVersionSet")
    private @Nullable Output<ApiVersionSetContractDetailsArgs> apiVersionSet;

    public Optional<Output<ApiVersionSetContractDetailsArgs>> apiVersionSet() {
        return Optional.ofNullable(this.apiVersionSet);
    }

    /**
     * A resource identifier for the related ApiVersionSet.
     * 
     */
    @Import(name="apiVersionSetId")
    private @Nullable Output<String> apiVersionSetId;

    public Optional<Output<String>> apiVersionSetId() {
        return Optional.ofNullable(this.apiVersionSetId);
    }

    /**
     * Collection of authentication settings included into this API.
     * 
     */
    @Import(name="authenticationSettings")
    private @Nullable Output<AuthenticationSettingsContractArgs> authenticationSettings;

    public Optional<Output<AuthenticationSettingsContractArgs>> authenticationSettings() {
        return Optional.ofNullable(this.authenticationSettings);
    }

    /**
     * Description of the API. May include HTML formatting tags.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * API name. Must be 1 to 300 characters long.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Format of the Content in which the API is getting imported.
     * 
     */
    @Import(name="format")
    private @Nullable Output<Either<String,ContentFormat>> format;

    public Optional<Output<Either<String,ContentFormat>>> format() {
        return Optional.ofNullable(this.format);
    }

    /**
     * Indicates if API revision is current api revision.
     * 
     */
    @Import(name="isCurrent")
    private @Nullable Output<Boolean> isCurrent;

    public Optional<Output<Boolean>> isCurrent() {
        return Optional.ofNullable(this.isCurrent);
    }

    /**
     * Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
     * 
     */
    @Import(name="path", required=true)
    private Output<String> path;

    public Output<String> path() {
        return this.path;
    }

    /**
     * Describes on which protocols the operations in this API can be invoked.
     * 
     */
    @Import(name="protocols")
    private @Nullable Output<List<Protocol>> protocols;

    public Optional<Output<List<Protocol>>> protocols() {
        return Optional.ofNullable(this.protocols);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
     * 
     */
    @Import(name="serviceUrl")
    private @Nullable Output<String> serviceUrl;

    public Optional<Output<String>> serviceUrl() {
        return Optional.ofNullable(this.serviceUrl);
    }

    /**
     * Type of Api to create.
     *  * `http` creates a SOAP to REST API
     *  * `soap` creates a SOAP pass-through API .
     * 
     */
    @Import(name="soapApiType")
    private @Nullable Output<Either<String,SoapApiType>> soapApiType;

    public Optional<Output<Either<String,SoapApiType>>> soapApiType() {
        return Optional.ofNullable(this.soapApiType);
    }

    /**
     * API identifier of the source API.
     * 
     */
    @Import(name="sourceApiId")
    private @Nullable Output<String> sourceApiId;

    public Optional<Output<String>> sourceApiId() {
        return Optional.ofNullable(this.sourceApiId);
    }

    /**
     * Protocols over which API is made available.
     * 
     */
    @Import(name="subscriptionKeyParameterNames")
    private @Nullable Output<SubscriptionKeyParameterNamesContractArgs> subscriptionKeyParameterNames;

    public Optional<Output<SubscriptionKeyParameterNamesContractArgs>> subscriptionKeyParameterNames() {
        return Optional.ofNullable(this.subscriptionKeyParameterNames);
    }

    /**
     * Specifies whether an API or Product subscription is required for accessing the API.
     * 
     */
    @Import(name="subscriptionRequired")
    private @Nullable Output<Boolean> subscriptionRequired;

    public Optional<Output<Boolean>> subscriptionRequired() {
        return Optional.ofNullable(this.subscriptionRequired);
    }

    /**
     * Content value when Importing an API.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    /**
     * Criteria to limit import of WSDL to a subset of the document.
     * 
     */
    @Import(name="wsdlSelector")
    private @Nullable Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs> wsdlSelector;

    public Optional<Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs>> wsdlSelector() {
        return Optional.ofNullable(this.wsdlSelector);
    }

    private ApiArgs() {}

    private ApiArgs(ApiArgs $) {
        this.apiId = $.apiId;
        this.apiRevision = $.apiRevision;
        this.apiRevisionDescription = $.apiRevisionDescription;
        this.apiType = $.apiType;
        this.apiVersion = $.apiVersion;
        this.apiVersionDescription = $.apiVersionDescription;
        this.apiVersionSet = $.apiVersionSet;
        this.apiVersionSetId = $.apiVersionSetId;
        this.authenticationSettings = $.authenticationSettings;
        this.description = $.description;
        this.displayName = $.displayName;
        this.format = $.format;
        this.isCurrent = $.isCurrent;
        this.path = $.path;
        this.protocols = $.protocols;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceName = $.serviceName;
        this.serviceUrl = $.serviceUrl;
        this.soapApiType = $.soapApiType;
        this.sourceApiId = $.sourceApiId;
        this.subscriptionKeyParameterNames = $.subscriptionKeyParameterNames;
        this.subscriptionRequired = $.subscriptionRequired;
        this.value = $.value;
        this.wsdlSelector = $.wsdlSelector;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiArgs $;

        public Builder() {
            $ = new ApiArgs();
        }

        public Builder(ApiArgs defaults) {
            $ = new ApiArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiId(@Nullable Output<String> apiId) {
            $.apiId = apiId;
            return this;
        }

        public Builder apiId(String apiId) {
            return apiId(Output.of(apiId));
        }

        public Builder apiRevision(@Nullable Output<String> apiRevision) {
            $.apiRevision = apiRevision;
            return this;
        }

        public Builder apiRevision(String apiRevision) {
            return apiRevision(Output.of(apiRevision));
        }

        public Builder apiRevisionDescription(@Nullable Output<String> apiRevisionDescription) {
            $.apiRevisionDescription = apiRevisionDescription;
            return this;
        }

        public Builder apiRevisionDescription(String apiRevisionDescription) {
            return apiRevisionDescription(Output.of(apiRevisionDescription));
        }

        public Builder apiType(@Nullable Output<Either<String,ApiType>> apiType) {
            $.apiType = apiType;
            return this;
        }

        public Builder apiType(Either<String,ApiType> apiType) {
            return apiType(Output.of(apiType));
        }

        public Builder apiVersion(@Nullable Output<String> apiVersion) {
            $.apiVersion = apiVersion;
            return this;
        }

        public Builder apiVersion(String apiVersion) {
            return apiVersion(Output.of(apiVersion));
        }

        public Builder apiVersionDescription(@Nullable Output<String> apiVersionDescription) {
            $.apiVersionDescription = apiVersionDescription;
            return this;
        }

        public Builder apiVersionDescription(String apiVersionDescription) {
            return apiVersionDescription(Output.of(apiVersionDescription));
        }

        public Builder apiVersionSet(@Nullable Output<ApiVersionSetContractDetailsArgs> apiVersionSet) {
            $.apiVersionSet = apiVersionSet;
            return this;
        }

        public Builder apiVersionSet(ApiVersionSetContractDetailsArgs apiVersionSet) {
            return apiVersionSet(Output.of(apiVersionSet));
        }

        public Builder apiVersionSetId(@Nullable Output<String> apiVersionSetId) {
            $.apiVersionSetId = apiVersionSetId;
            return this;
        }

        public Builder apiVersionSetId(String apiVersionSetId) {
            return apiVersionSetId(Output.of(apiVersionSetId));
        }

        public Builder authenticationSettings(@Nullable Output<AuthenticationSettingsContractArgs> authenticationSettings) {
            $.authenticationSettings = authenticationSettings;
            return this;
        }

        public Builder authenticationSettings(AuthenticationSettingsContractArgs authenticationSettings) {
            return authenticationSettings(Output.of(authenticationSettings));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder format(@Nullable Output<Either<String,ContentFormat>> format) {
            $.format = format;
            return this;
        }

        public Builder format(Either<String,ContentFormat> format) {
            return format(Output.of(format));
        }

        public Builder isCurrent(@Nullable Output<Boolean> isCurrent) {
            $.isCurrent = isCurrent;
            return this;
        }

        public Builder isCurrent(Boolean isCurrent) {
            return isCurrent(Output.of(isCurrent));
        }

        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder protocols(@Nullable Output<List<Protocol>> protocols) {
            $.protocols = protocols;
            return this;
        }

        public Builder protocols(List<Protocol> protocols) {
            return protocols(Output.of(protocols));
        }

        public Builder protocols(Protocol... protocols) {
            return protocols(List.of(protocols));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public Builder serviceUrl(@Nullable Output<String> serviceUrl) {
            $.serviceUrl = serviceUrl;
            return this;
        }

        public Builder serviceUrl(String serviceUrl) {
            return serviceUrl(Output.of(serviceUrl));
        }

        public Builder soapApiType(@Nullable Output<Either<String,SoapApiType>> soapApiType) {
            $.soapApiType = soapApiType;
            return this;
        }

        public Builder soapApiType(Either<String,SoapApiType> soapApiType) {
            return soapApiType(Output.of(soapApiType));
        }

        public Builder sourceApiId(@Nullable Output<String> sourceApiId) {
            $.sourceApiId = sourceApiId;
            return this;
        }

        public Builder sourceApiId(String sourceApiId) {
            return sourceApiId(Output.of(sourceApiId));
        }

        public Builder subscriptionKeyParameterNames(@Nullable Output<SubscriptionKeyParameterNamesContractArgs> subscriptionKeyParameterNames) {
            $.subscriptionKeyParameterNames = subscriptionKeyParameterNames;
            return this;
        }

        public Builder subscriptionKeyParameterNames(SubscriptionKeyParameterNamesContractArgs subscriptionKeyParameterNames) {
            return subscriptionKeyParameterNames(Output.of(subscriptionKeyParameterNames));
        }

        public Builder subscriptionRequired(@Nullable Output<Boolean> subscriptionRequired) {
            $.subscriptionRequired = subscriptionRequired;
            return this;
        }

        public Builder subscriptionRequired(Boolean subscriptionRequired) {
            return subscriptionRequired(Output.of(subscriptionRequired));
        }

        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        public Builder value(String value) {
            return value(Output.of(value));
        }

        public Builder wsdlSelector(@Nullable Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs> wsdlSelector) {
            $.wsdlSelector = wsdlSelector;
            return this;
        }

        public Builder wsdlSelector(ApiCreateOrUpdatePropertiesWsdlSelectorArgs wsdlSelector) {
            return wsdlSelector(Output.of(wsdlSelector));
        }

        public ApiArgs build() {
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
