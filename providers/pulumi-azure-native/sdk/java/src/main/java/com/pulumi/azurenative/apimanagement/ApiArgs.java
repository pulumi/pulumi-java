// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement;

import com.pulumi.azurenative.apimanagement.enums.ApiType;
import com.pulumi.azurenative.apimanagement.enums.ContentFormat;
import com.pulumi.azurenative.apimanagement.enums.Protocol;
import com.pulumi.azurenative.apimanagement.enums.SoapApiType;
import com.pulumi.azurenative.apimanagement.inputs.ApiCreateOrUpdatePropertiesWsdlSelectorArgs;
import com.pulumi.azurenative.apimanagement.inputs.ApiVersionSetContractDetailsArgs;
import com.pulumi.azurenative.apimanagement.inputs.AuthenticationSettingsContractArgs;
import com.pulumi.azurenative.apimanagement.inputs.SubscriptionKeyParameterNamesContractArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiArgs Empty = new ApiArgs();

    /**
     * API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * 
     */
    @Import(name="apiId")
    private @Nullable Output<String> apiId;

    /**
     * @return API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * 
     */
    public Optional<Output<String>> apiId() {
        return Optional.ofNullable(this.apiId);
    }

    /**
     * Describes the Revision of the Api. If no value is provided, default revision 1 is created
     * 
     */
    @Import(name="apiRevision")
    private @Nullable Output<String> apiRevision;

    /**
     * @return Describes the Revision of the Api. If no value is provided, default revision 1 is created
     * 
     */
    public Optional<Output<String>> apiRevision() {
        return Optional.ofNullable(this.apiRevision);
    }

    /**
     * Description of the Api Revision.
     * 
     */
    @Import(name="apiRevisionDescription")
    private @Nullable Output<String> apiRevisionDescription;

    /**
     * @return Description of the Api Revision.
     * 
     */
    public Optional<Output<String>> apiRevisionDescription() {
        return Optional.ofNullable(this.apiRevisionDescription);
    }

    /**
     * Type of API.
     * 
     */
    @Import(name="apiType")
    private @Nullable Output<Either<String,ApiType>> apiType;

    /**
     * @return Type of API.
     * 
     */
    public Optional<Output<Either<String,ApiType>>> apiType() {
        return Optional.ofNullable(this.apiType);
    }

    /**
     * Indicates the Version identifier of the API if the API is versioned
     * 
     */
    @Import(name="apiVersion")
    private @Nullable Output<String> apiVersion;

    /**
     * @return Indicates the Version identifier of the API if the API is versioned
     * 
     */
    public Optional<Output<String>> apiVersion() {
        return Optional.ofNullable(this.apiVersion);
    }

    /**
     * Description of the Api Version.
     * 
     */
    @Import(name="apiVersionDescription")
    private @Nullable Output<String> apiVersionDescription;

    /**
     * @return Description of the Api Version.
     * 
     */
    public Optional<Output<String>> apiVersionDescription() {
        return Optional.ofNullable(this.apiVersionDescription);
    }

    /**
     * Version set details
     * 
     */
    @Import(name="apiVersionSet")
    private @Nullable Output<ApiVersionSetContractDetailsArgs> apiVersionSet;

    /**
     * @return Version set details
     * 
     */
    public Optional<Output<ApiVersionSetContractDetailsArgs>> apiVersionSet() {
        return Optional.ofNullable(this.apiVersionSet);
    }

    /**
     * A resource identifier for the related ApiVersionSet.
     * 
     */
    @Import(name="apiVersionSetId")
    private @Nullable Output<String> apiVersionSetId;

    /**
     * @return A resource identifier for the related ApiVersionSet.
     * 
     */
    public Optional<Output<String>> apiVersionSetId() {
        return Optional.ofNullable(this.apiVersionSetId);
    }

    /**
     * Collection of authentication settings included into this API.
     * 
     */
    @Import(name="authenticationSettings")
    private @Nullable Output<AuthenticationSettingsContractArgs> authenticationSettings;

    /**
     * @return Collection of authentication settings included into this API.
     * 
     */
    public Optional<Output<AuthenticationSettingsContractArgs>> authenticationSettings() {
        return Optional.ofNullable(this.authenticationSettings);
    }

    /**
     * Description of the API. May include HTML formatting tags.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the API. May include HTML formatting tags.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * API name. Must be 1 to 300 characters long.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return API name. Must be 1 to 300 characters long.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Format of the Content in which the API is getting imported.
     * 
     */
    @Import(name="format")
    private @Nullable Output<Either<String,ContentFormat>> format;

    /**
     * @return Format of the Content in which the API is getting imported.
     * 
     */
    public Optional<Output<Either<String,ContentFormat>>> format() {
        return Optional.ofNullable(this.format);
    }

    /**
     * Indicates if API revision is current api revision.
     * 
     */
    @Import(name="isCurrent")
    private @Nullable Output<Boolean> isCurrent;

    /**
     * @return Indicates if API revision is current api revision.
     * 
     */
    public Optional<Output<Boolean>> isCurrent() {
        return Optional.ofNullable(this.isCurrent);
    }

    /**
     * Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
     * 
     */
    @Import(name="path", required=true)
    private Output<String> path;

    /**
     * @return Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
     * 
     */
    public Output<String> path() {
        return this.path;
    }

    /**
     * Describes on which protocols the operations in this API can be invoked.
     * 
     */
    @Import(name="protocols")
    private @Nullable Output<List<Protocol>> protocols;

    /**
     * @return Describes on which protocols the operations in this API can be invoked.
     * 
     */
    public Optional<Output<List<Protocol>>> protocols() {
        return Optional.ofNullable(this.protocols);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the API Management service.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
     * 
     */
    @Import(name="serviceUrl")
    private @Nullable Output<String> serviceUrl;

    /**
     * @return Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
     * 
     */
    public Optional<Output<String>> serviceUrl() {
        return Optional.ofNullable(this.serviceUrl);
    }

    /**
     * Type of Api to create.
     *  * `http` creates a SOAP to REST API
     *  * `soap` creates a SOAP pass-through API .
     * 
     */
    @Import(name="soapApiType")
    private @Nullable Output<Either<String,SoapApiType>> soapApiType;

    /**
     * @return Type of Api to create.
     *  * `http` creates a SOAP to REST API
     *  * `soap` creates a SOAP pass-through API .
     * 
     */
    public Optional<Output<Either<String,SoapApiType>>> soapApiType() {
        return Optional.ofNullable(this.soapApiType);
    }

    /**
     * API identifier of the source API.
     * 
     */
    @Import(name="sourceApiId")
    private @Nullable Output<String> sourceApiId;

    /**
     * @return API identifier of the source API.
     * 
     */
    public Optional<Output<String>> sourceApiId() {
        return Optional.ofNullable(this.sourceApiId);
    }

    /**
     * Protocols over which API is made available.
     * 
     */
    @Import(name="subscriptionKeyParameterNames")
    private @Nullable Output<SubscriptionKeyParameterNamesContractArgs> subscriptionKeyParameterNames;

    /**
     * @return Protocols over which API is made available.
     * 
     */
    public Optional<Output<SubscriptionKeyParameterNamesContractArgs>> subscriptionKeyParameterNames() {
        return Optional.ofNullable(this.subscriptionKeyParameterNames);
    }

    /**
     * Specifies whether an API or Product subscription is required for accessing the API.
     * 
     */
    @Import(name="subscriptionRequired")
    private @Nullable Output<Boolean> subscriptionRequired;

    /**
     * @return Specifies whether an API or Product subscription is required for accessing the API.
     * 
     */
    public Optional<Output<Boolean>> subscriptionRequired() {
        return Optional.ofNullable(this.subscriptionRequired);
    }

    /**
     * Content value when Importing an API.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Content value when Importing an API.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    /**
     * Criteria to limit import of WSDL to a subset of the document.
     * 
     */
    @Import(name="wsdlSelector")
    private @Nullable Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs> wsdlSelector;

    /**
     * @return Criteria to limit import of WSDL to a subset of the document.
     * 
     */
    public Optional<Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs>> wsdlSelector() {
        return Optional.ofNullable(this.wsdlSelector);
    }

    private ApiArgs() {}

    private ApiArgs(ApiArgs $) {
        this.apiId = $.apiId;
        this.apiRevision = $.apiRevision;
        this.apiRevisionDescription = $.apiRevisionDescription;
        this.apiType = $.apiType;
        this.apiVersion = $.apiVersion;
        this.apiVersionDescription = $.apiVersionDescription;
        this.apiVersionSet = $.apiVersionSet;
        this.apiVersionSetId = $.apiVersionSetId;
        this.authenticationSettings = $.authenticationSettings;
        this.description = $.description;
        this.displayName = $.displayName;
        this.format = $.format;
        this.isCurrent = $.isCurrent;
        this.path = $.path;
        this.protocols = $.protocols;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceName = $.serviceName;
        this.serviceUrl = $.serviceUrl;
        this.soapApiType = $.soapApiType;
        this.sourceApiId = $.sourceApiId;
        this.subscriptionKeyParameterNames = $.subscriptionKeyParameterNames;
        this.subscriptionRequired = $.subscriptionRequired;
        this.value = $.value;
        this.wsdlSelector = $.wsdlSelector;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiArgs $;

        public Builder() {
            $ = new ApiArgs();
        }

        public Builder(ApiArgs defaults) {
            $ = new ApiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiId API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
         * 
         * @return builder
         * 
         */
        public Builder apiId(@Nullable Output<String> apiId) {
            $.apiId = apiId;
            return this;
        }

        /**
         * @param apiId API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
         * 
         * @return builder
         * 
         */
        public Builder apiId(String apiId) {
            return apiId(Output.of(apiId));
        }

        /**
         * @param apiRevision Describes the Revision of the Api. If no value is provided, default revision 1 is created
         * 
         * @return builder
         * 
         */
        public Builder apiRevision(@Nullable Output<String> apiRevision) {
            $.apiRevision = apiRevision;
            return this;
        }

        /**
         * @param apiRevision Describes the Revision of the Api. If no value is provided, default revision 1 is created
         * 
         * @return builder
         * 
         */
        public Builder apiRevision(String apiRevision) {
            return apiRevision(Output.of(apiRevision));
        }

        /**
         * @param apiRevisionDescription Description of the Api Revision.
         * 
         * @return builder
         * 
         */
        public Builder apiRevisionDescription(@Nullable Output<String> apiRevisionDescription) {
            $.apiRevisionDescription = apiRevisionDescription;
            return this;
        }

        /**
         * @param apiRevisionDescription Description of the Api Revision.
         * 
         * @return builder
         * 
         */
        public Builder apiRevisionDescription(String apiRevisionDescription) {
            return apiRevisionDescription(Output.of(apiRevisionDescription));
        }

        /**
         * @param apiType Type of API.
         * 
         * @return builder
         * 
         */
        public Builder apiType(@Nullable Output<Either<String,ApiType>> apiType) {
            $.apiType = apiType;
            return this;
        }

        /**
         * @param apiType Type of API.
         * 
         * @return builder
         * 
         */
        public Builder apiType(Either<String,ApiType> apiType) {
            return apiType(Output.of(apiType));
        }

        /**
         * @param apiType Type of API.
         * 
         * @return builder
         * 
         */
        public Builder apiType(String apiType) {
            return apiType(Either.ofLeft(apiType));
        }

        /**
         * @param apiType Type of API.
         * 
         * @return builder
         * 
         */
        public Builder apiType(ApiType apiType) {
            return apiType(Either.ofRight(apiType));
        }

        /**
         * @param apiVersion Indicates the Version identifier of the API if the API is versioned
         * 
         * @return builder
         * 
         */
        public Builder apiVersion(@Nullable Output<String> apiVersion) {
            $.apiVersion = apiVersion;
            return this;
        }

        /**
         * @param apiVersion Indicates the Version identifier of the API if the API is versioned
         * 
         * @return builder
         * 
         */
        public Builder apiVersion(String apiVersion) {
            return apiVersion(Output.of(apiVersion));
        }

        /**
         * @param apiVersionDescription Description of the Api Version.
         * 
         * @return builder
         * 
         */
        public Builder apiVersionDescription(@Nullable Output<String> apiVersionDescription) {
            $.apiVersionDescription = apiVersionDescription;
            return this;
        }

        /**
         * @param apiVersionDescription Description of the Api Version.
         * 
         * @return builder
         * 
         */
        public Builder apiVersionDescription(String apiVersionDescription) {
            return apiVersionDescription(Output.of(apiVersionDescription));
        }

        /**
         * @param apiVersionSet Version set details
         * 
         * @return builder
         * 
         */
        public Builder apiVersionSet(@Nullable Output<ApiVersionSetContractDetailsArgs> apiVersionSet) {
            $.apiVersionSet = apiVersionSet;
            return this;
        }

        /**
         * @param apiVersionSet Version set details
         * 
         * @return builder
         * 
         */
        public Builder apiVersionSet(ApiVersionSetContractDetailsArgs apiVersionSet) {
            return apiVersionSet(Output.of(apiVersionSet));
        }

        /**
         * @param apiVersionSetId A resource identifier for the related ApiVersionSet.
         * 
         * @return builder
         * 
         */
        public Builder apiVersionSetId(@Nullable Output<String> apiVersionSetId) {
            $.apiVersionSetId = apiVersionSetId;
            return this;
        }

        /**
         * @param apiVersionSetId A resource identifier for the related ApiVersionSet.
         * 
         * @return builder
         * 
         */
        public Builder apiVersionSetId(String apiVersionSetId) {
            return apiVersionSetId(Output.of(apiVersionSetId));
        }

        /**
         * @param authenticationSettings Collection of authentication settings included into this API.
         * 
         * @return builder
         * 
         */
        public Builder authenticationSettings(@Nullable Output<AuthenticationSettingsContractArgs> authenticationSettings) {
            $.authenticationSettings = authenticationSettings;
            return this;
        }

        /**
         * @param authenticationSettings Collection of authentication settings included into this API.
         * 
         * @return builder
         * 
         */
        public Builder authenticationSettings(AuthenticationSettingsContractArgs authenticationSettings) {
            return authenticationSettings(Output.of(authenticationSettings));
        }

        /**
         * @param description Description of the API. May include HTML formatting tags.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the API. May include HTML formatting tags.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName API name. Must be 1 to 300 characters long.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName API name. Must be 1 to 300 characters long.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param format Format of the Content in which the API is getting imported.
         * 
         * @return builder
         * 
         */
        public Builder format(@Nullable Output<Either<String,ContentFormat>> format) {
            $.format = format;
            return this;
        }

        /**
         * @param format Format of the Content in which the API is getting imported.
         * 
         * @return builder
         * 
         */
        public Builder format(Either<String,ContentFormat> format) {
            return format(Output.of(format));
        }

        /**
         * @param format Format of the Content in which the API is getting imported.
         * 
         * @return builder
         * 
         */
        public Builder format(String format) {
            return format(Either.ofLeft(format));
        }

        /**
         * @param format Format of the Content in which the API is getting imported.
         * 
         * @return builder
         * 
         */
        public Builder format(ContentFormat format) {
            return format(Either.ofRight(format));
        }

        /**
         * @param isCurrent Indicates if API revision is current api revision.
         * 
         * @return builder
         * 
         */
        public Builder isCurrent(@Nullable Output<Boolean> isCurrent) {
            $.isCurrent = isCurrent;
            return this;
        }

        /**
         * @param isCurrent Indicates if API revision is current api revision.
         * 
         * @return builder
         * 
         */
        public Builder isCurrent(Boolean isCurrent) {
            return isCurrent(Output.of(isCurrent));
        }

        /**
         * @param path Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
         * 
         * @return builder
         * 
         */
        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param protocols Describes on which protocols the operations in this API can be invoked.
         * 
         * @return builder
         * 
         */
        public Builder protocols(@Nullable Output<List<Protocol>> protocols) {
            $.protocols = protocols;
            return this;
        }

        /**
         * @param protocols Describes on which protocols the operations in this API can be invoked.
         * 
         * @return builder
         * 
         */
        public Builder protocols(List<Protocol> protocols) {
            return protocols(Output.of(protocols));
        }

        /**
         * @param protocols Describes on which protocols the operations in this API can be invoked.
         * 
         * @return builder
         * 
         */
        public Builder protocols(Protocol... protocols) {
            return protocols(List.of(protocols));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serviceName The name of the API Management service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the API Management service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param serviceUrl Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
         * 
         * @return builder
         * 
         */
        public Builder serviceUrl(@Nullable Output<String> serviceUrl) {
            $.serviceUrl = serviceUrl;
            return this;
        }

        /**
         * @param serviceUrl Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
         * 
         * @return builder
         * 
         */
        public Builder serviceUrl(String serviceUrl) {
            return serviceUrl(Output.of(serviceUrl));
        }

        /**
         * @param soapApiType Type of Api to create.
         *  * `http` creates a SOAP to REST API
         *  * `soap` creates a SOAP pass-through API .
         * 
         * @return builder
         * 
         */
        public Builder soapApiType(@Nullable Output<Either<String,SoapApiType>> soapApiType) {
            $.soapApiType = soapApiType;
            return this;
        }

        /**
         * @param soapApiType Type of Api to create.
         *  * `http` creates a SOAP to REST API
         *  * `soap` creates a SOAP pass-through API .
         * 
         * @return builder
         * 
         */
        public Builder soapApiType(Either<String,SoapApiType> soapApiType) {
            return soapApiType(Output.of(soapApiType));
        }

        /**
         * @param soapApiType Type of Api to create.
         *  * `http` creates a SOAP to REST API
         *  * `soap` creates a SOAP pass-through API .
         * 
         * @return builder
         * 
         */
        public Builder soapApiType(String soapApiType) {
            return soapApiType(Either.ofLeft(soapApiType));
        }

        /**
         * @param soapApiType Type of Api to create.
         *  * `http` creates a SOAP to REST API
         *  * `soap` creates a SOAP pass-through API .
         * 
         * @return builder
         * 
         */
        public Builder soapApiType(SoapApiType soapApiType) {
            return soapApiType(Either.ofRight(soapApiType));
        }

        /**
         * @param sourceApiId API identifier of the source API.
         * 
         * @return builder
         * 
         */
        public Builder sourceApiId(@Nullable Output<String> sourceApiId) {
            $.sourceApiId = sourceApiId;
            return this;
        }

        /**
         * @param sourceApiId API identifier of the source API.
         * 
         * @return builder
         * 
         */
        public Builder sourceApiId(String sourceApiId) {
            return sourceApiId(Output.of(sourceApiId));
        }

        /**
         * @param subscriptionKeyParameterNames Protocols over which API is made available.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionKeyParameterNames(@Nullable Output<SubscriptionKeyParameterNamesContractArgs> subscriptionKeyParameterNames) {
            $.subscriptionKeyParameterNames = subscriptionKeyParameterNames;
            return this;
        }

        /**
         * @param subscriptionKeyParameterNames Protocols over which API is made available.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionKeyParameterNames(SubscriptionKeyParameterNamesContractArgs subscriptionKeyParameterNames) {
            return subscriptionKeyParameterNames(Output.of(subscriptionKeyParameterNames));
        }

        /**
         * @param subscriptionRequired Specifies whether an API or Product subscription is required for accessing the API.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionRequired(@Nullable Output<Boolean> subscriptionRequired) {
            $.subscriptionRequired = subscriptionRequired;
            return this;
        }

        /**
         * @param subscriptionRequired Specifies whether an API or Product subscription is required for accessing the API.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionRequired(Boolean subscriptionRequired) {
            return subscriptionRequired(Output.of(subscriptionRequired));
        }

        /**
         * @param value Content value when Importing an API.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Content value when Importing an API.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        /**
         * @param wsdlSelector Criteria to limit import of WSDL to a subset of the document.
         * 
         * @return builder
         * 
         */
        public Builder wsdlSelector(@Nullable Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs> wsdlSelector) {
            $.wsdlSelector = wsdlSelector;
            return this;
        }

        /**
         * @param wsdlSelector Criteria to limit import of WSDL to a subset of the document.
         * 
         * @return builder
         * 
         */
        public Builder wsdlSelector(ApiCreateOrUpdatePropertiesWsdlSelectorArgs wsdlSelector) {
            return wsdlSelector(Output.of(wsdlSelector));
        }

        public ApiArgs build() {
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
