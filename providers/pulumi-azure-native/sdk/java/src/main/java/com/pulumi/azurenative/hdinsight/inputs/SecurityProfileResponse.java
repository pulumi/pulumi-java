// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hdinsight.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The security profile which contains Ssh public key for the HDInsight cluster.
 * 
 */
public final class SecurityProfileResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecurityProfileResponse Empty = new SecurityProfileResponse();

    /**
     * The resource ID of the user&#39;s Azure Active Directory Domain Service.
     * 
     */
    @Import(name="aaddsResourceId")
    private @Nullable String aaddsResourceId;

    public Optional<String> aaddsResourceId() {
        return Optional.ofNullable(this.aaddsResourceId);
    }

    /**
     * Optional. The Distinguished Names for cluster user groups
     * 
     */
    @Import(name="clusterUsersGroupDNs")
    private @Nullable List<String> clusterUsersGroupDNs;

    public Optional<List<String>> clusterUsersGroupDNs() {
        return Optional.ofNullable(this.clusterUsersGroupDNs);
    }

    /**
     * The directory type.
     * 
     */
    @Import(name="directoryType")
    private @Nullable String directoryType;

    public Optional<String> directoryType() {
        return Optional.ofNullable(this.directoryType);
    }

    /**
     * The organization&#39;s active directory domain.
     * 
     */
    @Import(name="domain")
    private @Nullable String domain;

    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * The domain admin password.
     * 
     */
    @Import(name="domainUserPassword")
    private @Nullable String domainUserPassword;

    public Optional<String> domainUserPassword() {
        return Optional.ofNullable(this.domainUserPassword);
    }

    /**
     * The domain user account that will have admin privileges on the cluster.
     * 
     */
    @Import(name="domainUsername")
    private @Nullable String domainUsername;

    public Optional<String> domainUsername() {
        return Optional.ofNullable(this.domainUsername);
    }

    /**
     * The LDAPS protocol URLs to communicate with the Active Directory.
     * 
     */
    @Import(name="ldapsUrls")
    private @Nullable List<String> ldapsUrls;

    public Optional<List<String>> ldapsUrls() {
        return Optional.ofNullable(this.ldapsUrls);
    }

    /**
     * User assigned identity that has permissions to read and create cluster-related artifacts in the user&#39;s AADDS.
     * 
     */
    @Import(name="msiResourceId")
    private @Nullable String msiResourceId;

    public Optional<String> msiResourceId() {
        return Optional.ofNullable(this.msiResourceId);
    }

    /**
     * The organizational unit within the Active Directory to place the cluster and service accounts.
     * 
     */
    @Import(name="organizationalUnitDN")
    private @Nullable String organizationalUnitDN;

    public Optional<String> organizationalUnitDN() {
        return Optional.ofNullable(this.organizationalUnitDN);
    }

    private SecurityProfileResponse() {}

    private SecurityProfileResponse(SecurityProfileResponse $) {
        this.aaddsResourceId = $.aaddsResourceId;
        this.clusterUsersGroupDNs = $.clusterUsersGroupDNs;
        this.directoryType = $.directoryType;
        this.domain = $.domain;
        this.domainUserPassword = $.domainUserPassword;
        this.domainUsername = $.domainUsername;
        this.ldapsUrls = $.ldapsUrls;
        this.msiResourceId = $.msiResourceId;
        this.organizationalUnitDN = $.organizationalUnitDN;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityProfileResponse $;

        public Builder() {
            $ = new SecurityProfileResponse();
        }

        public Builder(SecurityProfileResponse defaults) {
            $ = new SecurityProfileResponse(Objects.requireNonNull(defaults));
        }

        public Builder aaddsResourceId(@Nullable String aaddsResourceId) {
            $.aaddsResourceId = aaddsResourceId;
            return this;
        }

        public Builder clusterUsersGroupDNs(@Nullable List<String> clusterUsersGroupDNs) {
            $.clusterUsersGroupDNs = clusterUsersGroupDNs;
            return this;
        }

        public Builder clusterUsersGroupDNs(String... clusterUsersGroupDNs) {
            return clusterUsersGroupDNs(List.of(clusterUsersGroupDNs));
        }

        public Builder directoryType(@Nullable String directoryType) {
            $.directoryType = directoryType;
            return this;
        }

        public Builder domain(@Nullable String domain) {
            $.domain = domain;
            return this;
        }

        public Builder domainUserPassword(@Nullable String domainUserPassword) {
            $.domainUserPassword = domainUserPassword;
            return this;
        }

        public Builder domainUsername(@Nullable String domainUsername) {
            $.domainUsername = domainUsername;
            return this;
        }

        public Builder ldapsUrls(@Nullable List<String> ldapsUrls) {
            $.ldapsUrls = ldapsUrls;
            return this;
        }

        public Builder ldapsUrls(String... ldapsUrls) {
            return ldapsUrls(List.of(ldapsUrls));
        }

        public Builder msiResourceId(@Nullable String msiResourceId) {
            $.msiResourceId = msiResourceId;
            return this;
        }

        public Builder organizationalUnitDN(@Nullable String organizationalUnitDN) {
            $.organizationalUnitDN = organizationalUnitDN;
            return this;
        }

        public SecurityProfileResponse build() {
            return $;
        }
    }

}
