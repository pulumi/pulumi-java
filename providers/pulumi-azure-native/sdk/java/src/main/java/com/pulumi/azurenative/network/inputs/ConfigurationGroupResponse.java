// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.inputs.GroupMembersItemResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The network configuration group resource
 * 
 */
public final class ConfigurationGroupResponse extends com.pulumi.resources.InvokeArgs {

    public static final ConfigurationGroupResponse Empty = new ConfigurationGroupResponse();

    /**
     * Network group conditional filter.
     * 
     */
    @Import(name="conditionalMembership")
    private @Nullable String conditionalMembership;

    /**
     * @return Network group conditional filter.
     * 
     */
    public Optional<String> conditionalMembership() {
        return Optional.ofNullable(this.conditionalMembership);
    }

    /**
     * A description of the network group.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return A description of the network group.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A friendly name for the network group.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A friendly name for the network group.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Group members of network group.
     * 
     */
    @Import(name="groupMembers")
    private @Nullable List<GroupMembersItemResponse> groupMembers;

    /**
     * @return Group members of network group.
     * 
     */
    public Optional<List<GroupMembersItemResponse>> groupMembers() {
        return Optional.ofNullable(this.groupMembers);
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Group member type.
     * 
     */
    @Import(name="memberType")
    private @Nullable String memberType;

    /**
     * @return Group member type.
     * 
     */
    public Optional<String> memberType() {
        return Optional.ofNullable(this.memberType);
    }

    /**
     * The provisioning state of the scope assignment resource.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    /**
     * @return The provisioning state of the scope assignment resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    private ConfigurationGroupResponse() {}

    private ConfigurationGroupResponse(ConfigurationGroupResponse $) {
        this.conditionalMembership = $.conditionalMembership;
        this.description = $.description;
        this.displayName = $.displayName;
        this.groupMembers = $.groupMembers;
        this.id = $.id;
        this.memberType = $.memberType;
        this.provisioningState = $.provisioningState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationGroupResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationGroupResponse $;

        public Builder() {
            $ = new ConfigurationGroupResponse();
        }

        public Builder(ConfigurationGroupResponse defaults) {
            $ = new ConfigurationGroupResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditionalMembership Network group conditional filter.
         * 
         * @return builder
         * 
         */
        public Builder conditionalMembership(@Nullable String conditionalMembership) {
            $.conditionalMembership = conditionalMembership;
            return this;
        }

        /**
         * @param description A description of the network group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param displayName A friendly name for the network group.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param groupMembers Group members of network group.
         * 
         * @return builder
         * 
         */
        public Builder groupMembers(@Nullable List<GroupMembersItemResponse> groupMembers) {
            $.groupMembers = groupMembers;
            return this;
        }

        /**
         * @param groupMembers Group members of network group.
         * 
         * @return builder
         * 
         */
        public Builder groupMembers(GroupMembersItemResponse... groupMembers) {
            return groupMembers(List.of(groupMembers));
        }

        /**
         * @param id Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param memberType Group member type.
         * 
         * @return builder
         * 
         */
        public Builder memberType(@Nullable String memberType) {
            $.memberType = memberType;
            return this;
        }

        /**
         * @param provisioningState The provisioning state of the scope assignment resource.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public ConfigurationGroupResponse build() {
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
