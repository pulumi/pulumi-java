// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetManagedInstanceVulnerabilityAssessmentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedInstanceVulnerabilityAssessmentPlainArgs Empty = new GetManagedInstanceVulnerabilityAssessmentPlainArgs();

    /**
     * The name of the managed instance for which the vulnerability assessment is defined.
     * 
     */
    @Import(name="managedInstanceName", required=true)
    private String managedInstanceName;

    /**
     * @return The name of the managed instance for which the vulnerability assessment is defined.
     * 
     */
    public String managedInstanceName() {
        return this.managedInstanceName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the vulnerability assessment.
     * 
     */
    @Import(name="vulnerabilityAssessmentName", required=true)
    private String vulnerabilityAssessmentName;

    /**
     * @return The name of the vulnerability assessment.
     * 
     */
    public String vulnerabilityAssessmentName() {
        return this.vulnerabilityAssessmentName;
    }

    private GetManagedInstanceVulnerabilityAssessmentPlainArgs() {}

    private GetManagedInstanceVulnerabilityAssessmentPlainArgs(GetManagedInstanceVulnerabilityAssessmentPlainArgs $) {
        this.managedInstanceName = $.managedInstanceName;
        this.resourceGroupName = $.resourceGroupName;
        this.vulnerabilityAssessmentName = $.vulnerabilityAssessmentName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedInstanceVulnerabilityAssessmentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedInstanceVulnerabilityAssessmentPlainArgs $;

        public Builder() {
            $ = new GetManagedInstanceVulnerabilityAssessmentPlainArgs();
        }

        public Builder(GetManagedInstanceVulnerabilityAssessmentPlainArgs defaults) {
            $ = new GetManagedInstanceVulnerabilityAssessmentPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managedInstanceName The name of the managed instance for which the vulnerability assessment is defined.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceName(String managedInstanceName) {
            $.managedInstanceName = managedInstanceName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
         * 
         * @return builder
         * 
         */
        public Builder vulnerabilityAssessmentName(String vulnerabilityAssessmentName) {
            $.vulnerabilityAssessmentName = vulnerabilityAssessmentName;
            return this;
        }

        public GetManagedInstanceVulnerabilityAssessmentPlainArgs build() {
            $.managedInstanceName = Objects.requireNonNull($.managedInstanceName, "expected parameter 'managedInstanceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.vulnerabilityAssessmentName = Objects.requireNonNull($.vulnerabilityAssessmentName, "expected parameter 'vulnerabilityAssessmentName' to be non-null");
            return $;
        }
    }

}
