// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Partner server information for the failover group.
 * 
 */
public final class PartnerInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final PartnerInfoResponse Empty = new PartnerInfoResponse();

    /**
     * Resource identifier of the partner server.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return Resource identifier of the partner server.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * Geo location of the partner server.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return Geo location of the partner server.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * Replication role of the partner server.
     * 
     */
    @Import(name="replicationRole", required=true)
    private String replicationRole;

    /**
     * @return Replication role of the partner server.
     * 
     */
    public String replicationRole() {
        return this.replicationRole;
    }

    private PartnerInfoResponse() {}

    private PartnerInfoResponse(PartnerInfoResponse $) {
        this.id = $.id;
        this.location = $.location;
        this.replicationRole = $.replicationRole;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PartnerInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PartnerInfoResponse $;

        public Builder() {
            $ = new PartnerInfoResponse();
        }

        public Builder(PartnerInfoResponse defaults) {
            $ = new PartnerInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Resource identifier of the partner server.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param location Geo location of the partner server.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param replicationRole Replication role of the partner server.
         * 
         * @return builder
         * 
         */
        public Builder replicationRole(String replicationRole) {
            $.replicationRole = replicationRole;
            return this;
        }

        public PartnerInfoResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.replicationRole = Objects.requireNonNull($.replicationRole, "expected parameter 'replicationRole' to be non-null");
            return $;
        }
    }

}
