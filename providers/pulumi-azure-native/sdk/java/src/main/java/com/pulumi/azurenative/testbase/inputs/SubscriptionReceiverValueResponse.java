// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The subscription role receiver value.
 * 
 */
public final class SubscriptionReceiverValueResponse extends com.pulumi.resources.InvokeArgs {

    public static final SubscriptionReceiverValueResponse Empty = new SubscriptionReceiverValueResponse();

    /**
     * The role of the notification receiver.
     * 
     */
    @Import(name="role")
      private final @Nullable String role;

    public Optional<String> role() {
        return this.role == null ? Optional.empty() : Optional.ofNullable(this.role);
    }

    /**
     * The subscription id of the notification receiver.
     * 
     */
    @Import(name="subscriptionId")
      private final @Nullable String subscriptionId;

    public Optional<String> subscriptionId() {
        return this.subscriptionId == null ? Optional.empty() : Optional.ofNullable(this.subscriptionId);
    }

    /**
     * The subscription name of the notification receiver.
     * 
     */
    @Import(name="subscriptionName")
      private final @Nullable String subscriptionName;

    public Optional<String> subscriptionName() {
        return this.subscriptionName == null ? Optional.empty() : Optional.ofNullable(this.subscriptionName);
    }

    public SubscriptionReceiverValueResponse(
        @Nullable String role,
        @Nullable String subscriptionId,
        @Nullable String subscriptionName) {
        this.role = role;
        this.subscriptionId = subscriptionId;
        this.subscriptionName = subscriptionName;
    }

    private SubscriptionReceiverValueResponse() {
        this.role = null;
        this.subscriptionId = null;
        this.subscriptionName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubscriptionReceiverValueResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String role;
        private @Nullable String subscriptionId;
        private @Nullable String subscriptionName;

        public Builder() {
    	      // Empty
        }

        public Builder(SubscriptionReceiverValueResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.role = defaults.role;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.subscriptionName = defaults.subscriptionName;
        }

        public Builder role(@Nullable String role) {
            this.role = role;
            return this;
        }
        public Builder subscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }
        public Builder subscriptionName(@Nullable String subscriptionName) {
            this.subscriptionName = subscriptionName;
            return this;
        }        public SubscriptionReceiverValueResponse build() {
            return new SubscriptionReceiverValueResponse(role, subscriptionId, subscriptionName);
        }
    }
}
