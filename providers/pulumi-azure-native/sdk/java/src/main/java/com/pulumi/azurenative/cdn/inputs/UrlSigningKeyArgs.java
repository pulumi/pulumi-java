// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.inputs.KeyVaultSigningKeyParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Url signing key
 * 
 */
public final class UrlSigningKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final UrlSigningKeyArgs Empty = new UrlSigningKeyArgs();

    /**
     * Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
     * 
     */
    @Import(name="keyId", required=true)
    private Output<String> keyId;

    /**
     * @return Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
     * 
     */
    public Output<String> keyId() {
        return this.keyId;
    }

    /**
     * Defines the parameters for using customer key vault for Url Signing Key.
     * 
     */
    @Import(name="keySourceParameters", required=true)
    private Output<KeyVaultSigningKeyParametersArgs> keySourceParameters;

    /**
     * @return Defines the parameters for using customer key vault for Url Signing Key.
     * 
     */
    public Output<KeyVaultSigningKeyParametersArgs> keySourceParameters() {
        return this.keySourceParameters;
    }

    private UrlSigningKeyArgs() {}

    private UrlSigningKeyArgs(UrlSigningKeyArgs $) {
        this.keyId = $.keyId;
        this.keySourceParameters = $.keySourceParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UrlSigningKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UrlSigningKeyArgs $;

        public Builder() {
            $ = new UrlSigningKeyArgs();
        }

        public Builder(UrlSigningKeyArgs defaults) {
            $ = new UrlSigningKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyId Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
         * 
         * @return builder
         * 
         */
        public Builder keyId(Output<String> keyId) {
            $.keyId = keyId;
            return this;
        }

        /**
         * @param keyId Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
         * 
         * @return builder
         * 
         */
        public Builder keyId(String keyId) {
            return keyId(Output.of(keyId));
        }

        /**
         * @param keySourceParameters Defines the parameters for using customer key vault for Url Signing Key.
         * 
         * @return builder
         * 
         */
        public Builder keySourceParameters(Output<KeyVaultSigningKeyParametersArgs> keySourceParameters) {
            $.keySourceParameters = keySourceParameters;
            return this;
        }

        /**
         * @param keySourceParameters Defines the parameters for using customer key vault for Url Signing Key.
         * 
         * @return builder
         * 
         */
        public Builder keySourceParameters(KeyVaultSigningKeyParametersArgs keySourceParameters) {
            return keySourceParameters(Output.of(keySourceParameters));
        }

        public UrlSigningKeyArgs build() {
            $.keyId = Objects.requireNonNull($.keyId, "expected parameter 'keyId' to be non-null");
            $.keySourceParameters = Objects.requireNonNull($.keySourceParameters, "expected parameter 'keySourceParameters' to be non-null");
            return $;
        }
    }

}
