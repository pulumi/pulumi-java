// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.inputs.KeyVaultSigningKeyParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Url signing key
 * 
 */
public final class UrlSigningKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final UrlSigningKeyArgs Empty = new UrlSigningKeyArgs();

    /**
     * Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
     * 
     */
    @Import(name="keyId", required=true)
      private final Output<String> keyId;

    public Output<String> keyId() {
        return this.keyId;
    }

    /**
     * Defines the parameters for using customer key vault for Url Signing Key.
     * 
     */
    @Import(name="keySourceParameters", required=true)
      private final Output<KeyVaultSigningKeyParametersArgs> keySourceParameters;

    public Output<KeyVaultSigningKeyParametersArgs> keySourceParameters() {
        return this.keySourceParameters;
    }

    public UrlSigningKeyArgs(
        Output<String> keyId,
        Output<KeyVaultSigningKeyParametersArgs> keySourceParameters) {
        this.keyId = Objects.requireNonNull(keyId, "expected parameter 'keyId' to be non-null");
        this.keySourceParameters = Objects.requireNonNull(keySourceParameters, "expected parameter 'keySourceParameters' to be non-null");
    }

    private UrlSigningKeyArgs() {
        this.keyId = Codegen.empty();
        this.keySourceParameters = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UrlSigningKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> keyId;
        private Output<KeyVaultSigningKeyParametersArgs> keySourceParameters;

        public Builder() {
    	      // Empty
        }

        public Builder(UrlSigningKeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyId = defaults.keyId;
    	      this.keySourceParameters = defaults.keySourceParameters;
        }

        public Builder keyId(Output<String> keyId) {
            this.keyId = Objects.requireNonNull(keyId);
            return this;
        }
        public Builder keyId(String keyId) {
            this.keyId = Output.of(Objects.requireNonNull(keyId));
            return this;
        }
        public Builder keySourceParameters(Output<KeyVaultSigningKeyParametersArgs> keySourceParameters) {
            this.keySourceParameters = Objects.requireNonNull(keySourceParameters);
            return this;
        }
        public Builder keySourceParameters(KeyVaultSigningKeyParametersArgs keySourceParameters) {
            this.keySourceParameters = Output.of(Objects.requireNonNull(keySourceParameters));
            return this;
        }        public UrlSigningKeyArgs build() {
            return new UrlSigningKeyArgs(keyId, keySourceParameters);
        }
    }
}
