// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app.inputs;

import com.pulumi.azurenative.app.enums.AppProtocol;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Container App Dapr configuration.
 * 
 */
public final class DaprArgs extends com.pulumi.resources.ResourceArgs {

    public static final DaprArgs Empty = new DaprArgs();

    /**
     * Dapr application identifier
     * 
     */
    @Import(name="appId")
    private @Nullable Output<String> appId;

    /**
     * @return Dapr application identifier
     * 
     */
    public Optional<Output<String>> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * Tells Dapr which port your application is listening on
     * 
     */
    @Import(name="appPort")
    private @Nullable Output<Integer> appPort;

    /**
     * @return Tells Dapr which port your application is listening on
     * 
     */
    public Optional<Output<Integer>> appPort() {
        return Optional.ofNullable(this.appPort);
    }

    /**
     * Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
     * 
     */
    @Import(name="appProtocol")
    private @Nullable Output<Either<String,AppProtocol>> appProtocol;

    /**
     * @return Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
     * 
     */
    public Optional<Output<Either<String,AppProtocol>>> appProtocol() {
        return Optional.ofNullable(this.appProtocol);
    }

    /**
     * Boolean indicating if the Dapr side car is enabled
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Boolean indicating if the Dapr side car is enabled
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    private DaprArgs() {}

    private DaprArgs(DaprArgs $) {
        this.appId = $.appId;
        this.appPort = $.appPort;
        this.appProtocol = $.appProtocol;
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DaprArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DaprArgs $;

        public Builder() {
            $ = new DaprArgs();
        }

        public Builder(DaprArgs defaults) {
            $ = new DaprArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId Dapr application identifier
         * 
         * @return builder
         * 
         */
        public Builder appId(@Nullable Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId Dapr application identifier
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param appPort Tells Dapr which port your application is listening on
         * 
         * @return builder
         * 
         */
        public Builder appPort(@Nullable Output<Integer> appPort) {
            $.appPort = appPort;
            return this;
        }

        /**
         * @param appPort Tells Dapr which port your application is listening on
         * 
         * @return builder
         * 
         */
        public Builder appPort(Integer appPort) {
            return appPort(Output.of(appPort));
        }

        /**
         * @param appProtocol Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
         * 
         * @return builder
         * 
         */
        public Builder appProtocol(@Nullable Output<Either<String,AppProtocol>> appProtocol) {
            $.appProtocol = appProtocol;
            return this;
        }

        /**
         * @param appProtocol Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
         * 
         * @return builder
         * 
         */
        public Builder appProtocol(Either<String,AppProtocol> appProtocol) {
            return appProtocol(Output.of(appProtocol));
        }

        /**
         * @param appProtocol Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
         * 
         * @return builder
         * 
         */
        public Builder appProtocol(String appProtocol) {
            return appProtocol(Either.ofLeft(appProtocol));
        }

        /**
         * @param appProtocol Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
         * 
         * @return builder
         * 
         */
        public Builder appProtocol(AppProtocol appProtocol) {
            return appProtocol(Either.ofRight(appProtocol));
        }

        /**
         * @param enabled Boolean indicating if the Dapr side car is enabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Boolean indicating if the Dapr side car is enabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public DaprArgs build() {
            return $;
        }
    }

}
