// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserArtifactManageResponse extends com.pulumi.resources.InvokeArgs {

    public static final UserArtifactManageResponse Empty = new UserArtifactManageResponse();

    /**
     * Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
     * 
     */
    @Import(name="install", required=true)
    private String install;

    /**
     * @return Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
     * 
     */
    public String install() {
        return this.install;
    }

    /**
     * Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
     * 
     */
    @Import(name="remove", required=true)
    private String remove;

    /**
     * @return Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
     * 
     */
    public String remove() {
        return this.remove;
    }

    /**
     * Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
     * 
     */
    @Import(name="update")
    private @Nullable String update;

    /**
     * @return Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
     * 
     */
    public Optional<String> update() {
        return Optional.ofNullable(this.update);
    }

    private UserArtifactManageResponse() {}

    private UserArtifactManageResponse(UserArtifactManageResponse $) {
        this.install = $.install;
        this.remove = $.remove;
        this.update = $.update;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserArtifactManageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserArtifactManageResponse $;

        public Builder() {
            $ = new UserArtifactManageResponse();
        }

        public Builder(UserArtifactManageResponse defaults) {
            $ = new UserArtifactManageResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param install Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
         * 
         * @return builder
         * 
         */
        public Builder install(String install) {
            $.install = install;
            return this;
        }

        /**
         * @param remove Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
         * 
         * @return builder
         * 
         */
        public Builder remove(String remove) {
            $.remove = remove;
            return this;
        }

        /**
         * @param update Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
         * 
         * @return builder
         * 
         */
        public Builder update(@Nullable String update) {
            $.update = update;
            return this;
        }

        public UserArtifactManageResponse build() {
            $.install = Objects.requireNonNull($.install, "expected parameter 'install' to be non-null");
            $.remove = Objects.requireNonNull($.remove, "expected parameter 'remove' to be non-null");
            return $;
        }
    }

}
