// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.virtualmachineimages.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Runs the specified PowerShell on the VM (Windows). Corresponds to Packer powershell provisioner. Exactly one of &#39;scriptUri&#39; or &#39;inline&#39; can be specified.
 * 
 */
public final class ImageTemplatePowerShellCustomizerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageTemplatePowerShellCustomizerArgs Empty = new ImageTemplatePowerShellCustomizerArgs();

    /**
     * Array of PowerShell commands to execute
     * 
     */
    @Import(name="inline")
      private final @Nullable Output<List<String>> inline;

    public Output<List<String>> inline() {
        return this.inline == null ? Codegen.empty() : this.inline;
    }

    /**
     * Friendly Name to provide context on what this customization step does
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * If specified, the PowerShell script will be run with elevated privileges using the Local System user. Can only be true when the runElevated field above is set to true.
     * 
     */
    @Import(name="runAsSystem")
      private final @Nullable Output<Boolean> runAsSystem;

    public Output<Boolean> runAsSystem() {
        return this.runAsSystem == null ? Codegen.empty() : this.runAsSystem;
    }

    /**
     * If specified, the PowerShell script will be run with elevated privileges
     * 
     */
    @Import(name="runElevated")
      private final @Nullable Output<Boolean> runElevated;

    public Output<Boolean> runElevated() {
        return this.runElevated == null ? Codegen.empty() : this.runElevated;
    }

    /**
     * URI of the PowerShell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc
     * 
     */
    @Import(name="scriptUri")
      private final @Nullable Output<String> scriptUri;

    public Output<String> scriptUri() {
        return this.scriptUri == null ? Codegen.empty() : this.scriptUri;
    }

    /**
     * SHA256 checksum of the power shell script provided in the scriptUri field above
     * 
     */
    @Import(name="sha256Checksum")
      private final @Nullable Output<String> sha256Checksum;

    public Output<String> sha256Checksum() {
        return this.sha256Checksum == null ? Codegen.empty() : this.sha256Checksum;
    }

    /**
     * The type of customization tool you want to use on the Image. For example, &#34;Shell&#34; can be shell customizer
     * Expected value is &#39;PowerShell&#39;.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    /**
     * Valid exit codes for the PowerShell script. [Default: 0]
     * 
     */
    @Import(name="validExitCodes")
      private final @Nullable Output<List<Integer>> validExitCodes;

    public Output<List<Integer>> validExitCodes() {
        return this.validExitCodes == null ? Codegen.empty() : this.validExitCodes;
    }

    public ImageTemplatePowerShellCustomizerArgs(
        @Nullable Output<List<String>> inline,
        @Nullable Output<String> name,
        @Nullable Output<Boolean> runAsSystem,
        @Nullable Output<Boolean> runElevated,
        @Nullable Output<String> scriptUri,
        @Nullable Output<String> sha256Checksum,
        Output<String> type,
        @Nullable Output<List<Integer>> validExitCodes) {
        this.inline = inline;
        this.name = name;
        this.runAsSystem = Codegen.booleanProp("runAsSystem").output().arg(runAsSystem).def(false).getNullable();
        this.runElevated = Codegen.booleanProp("runElevated").output().arg(runElevated).def(false).getNullable();
        this.scriptUri = scriptUri;
        this.sha256Checksum = Codegen.stringProp("sha256Checksum").output().arg(sha256Checksum).def("").getNullable();
        this.type = Codegen.stringProp("type").output().arg(type).require();
        this.validExitCodes = validExitCodes;
    }

    private ImageTemplatePowerShellCustomizerArgs() {
        this.inline = Codegen.empty();
        this.name = Codegen.empty();
        this.runAsSystem = Codegen.empty();
        this.runElevated = Codegen.empty();
        this.scriptUri = Codegen.empty();
        this.sha256Checksum = Codegen.empty();
        this.type = Codegen.empty();
        this.validExitCodes = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageTemplatePowerShellCustomizerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> inline;
        private @Nullable Output<String> name;
        private @Nullable Output<Boolean> runAsSystem;
        private @Nullable Output<Boolean> runElevated;
        private @Nullable Output<String> scriptUri;
        private @Nullable Output<String> sha256Checksum;
        private Output<String> type;
        private @Nullable Output<List<Integer>> validExitCodes;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageTemplatePowerShellCustomizerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inline = defaults.inline;
    	      this.name = defaults.name;
    	      this.runAsSystem = defaults.runAsSystem;
    	      this.runElevated = defaults.runElevated;
    	      this.scriptUri = defaults.scriptUri;
    	      this.sha256Checksum = defaults.sha256Checksum;
    	      this.type = defaults.type;
    	      this.validExitCodes = defaults.validExitCodes;
        }

        public Builder inline(@Nullable Output<List<String>> inline) {
            this.inline = inline;
            return this;
        }
        public Builder inline(@Nullable List<String> inline) {
            this.inline = Codegen.ofNullable(inline);
            return this;
        }
        public Builder inline(String... inline) {
            return inline(List.of(inline));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder runAsSystem(@Nullable Output<Boolean> runAsSystem) {
            this.runAsSystem = runAsSystem;
            return this;
        }
        public Builder runAsSystem(@Nullable Boolean runAsSystem) {
            this.runAsSystem = Codegen.ofNullable(runAsSystem);
            return this;
        }
        public Builder runElevated(@Nullable Output<Boolean> runElevated) {
            this.runElevated = runElevated;
            return this;
        }
        public Builder runElevated(@Nullable Boolean runElevated) {
            this.runElevated = Codegen.ofNullable(runElevated);
            return this;
        }
        public Builder scriptUri(@Nullable Output<String> scriptUri) {
            this.scriptUri = scriptUri;
            return this;
        }
        public Builder scriptUri(@Nullable String scriptUri) {
            this.scriptUri = Codegen.ofNullable(scriptUri);
            return this;
        }
        public Builder sha256Checksum(@Nullable Output<String> sha256Checksum) {
            this.sha256Checksum = sha256Checksum;
            return this;
        }
        public Builder sha256Checksum(@Nullable String sha256Checksum) {
            this.sha256Checksum = Codegen.ofNullable(sha256Checksum);
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }
        public Builder validExitCodes(@Nullable Output<List<Integer>> validExitCodes) {
            this.validExitCodes = validExitCodes;
            return this;
        }
        public Builder validExitCodes(@Nullable List<Integer> validExitCodes) {
            this.validExitCodes = Codegen.ofNullable(validExitCodes);
            return this;
        }
        public Builder validExitCodes(Integer... validExitCodes) {
            return validExitCodes(List.of(validExitCodes));
        }        public ImageTemplatePowerShellCustomizerArgs build() {
            return new ImageTemplatePowerShellCustomizerArgs(inline, name, runAsSystem, runElevated, scriptUri, sha256Checksum, type, validExitCodes);
        }
    }
}
