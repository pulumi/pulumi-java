// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Dynamic delivery attribute mapping details.
 * 
 */
public final class DynamicDeliveryAttributeMappingResponse extends com.pulumi.resources.InvokeArgs {

    public static final DynamicDeliveryAttributeMappingResponse Empty = new DynamicDeliveryAttributeMappingResponse();

    /**
     * Name of the delivery attribute or header.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the delivery attribute or header.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * JSON path in the event which contains attribute value.
     * 
     */
    @Import(name="sourceField")
    private @Nullable String sourceField;

    /**
     * @return JSON path in the event which contains attribute value.
     * 
     */
    public Optional<String> sourceField() {
        return Optional.ofNullable(this.sourceField);
    }

    /**
     * Type of the delivery attribute or header name.
     * Expected value is &#39;Dynamic&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Type of the delivery attribute or header name.
     * Expected value is &#39;Dynamic&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    private DynamicDeliveryAttributeMappingResponse() {}

    private DynamicDeliveryAttributeMappingResponse(DynamicDeliveryAttributeMappingResponse $) {
        this.name = $.name;
        this.sourceField = $.sourceField;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DynamicDeliveryAttributeMappingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DynamicDeliveryAttributeMappingResponse $;

        public Builder() {
            $ = new DynamicDeliveryAttributeMappingResponse();
        }

        public Builder(DynamicDeliveryAttributeMappingResponse defaults) {
            $ = new DynamicDeliveryAttributeMappingResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the delivery attribute or header.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param sourceField JSON path in the event which contains attribute value.
         * 
         * @return builder
         * 
         */
        public Builder sourceField(@Nullable String sourceField) {
            $.sourceField = sourceField;
            return this;
        }

        /**
         * @param type Type of the delivery attribute or header name.
         * Expected value is &#39;Dynamic&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public DynamicDeliveryAttributeMappingResponse build() {
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
