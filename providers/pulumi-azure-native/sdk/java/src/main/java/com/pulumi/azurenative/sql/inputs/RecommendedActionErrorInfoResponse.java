// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Contains error information for an Azure SQL Database, Server or Elastic Pool Recommended Action.
 * 
 */
public final class RecommendedActionErrorInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final RecommendedActionErrorInfoResponse Empty = new RecommendedActionErrorInfoResponse();

    /**
     * Gets the reason why the recommended action was put to error state. e.g., DatabaseHasQdsOff, IndexAlreadyExists
     * 
     */
    @Import(name="errorCode", required=true)
    private String errorCode;

    public String errorCode() {
        return this.errorCode;
    }

    /**
     * Gets whether the error could be ignored and recommended action could be retried. Possible values are: Yes/No
     * 
     */
    @Import(name="isRetryable", required=true)
    private String isRetryable;

    public String isRetryable() {
        return this.isRetryable;
    }

    private RecommendedActionErrorInfoResponse() {}

    private RecommendedActionErrorInfoResponse(RecommendedActionErrorInfoResponse $) {
        this.errorCode = $.errorCode;
        this.isRetryable = $.isRetryable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecommendedActionErrorInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecommendedActionErrorInfoResponse $;

        public Builder() {
            $ = new RecommendedActionErrorInfoResponse();
        }

        public Builder(RecommendedActionErrorInfoResponse defaults) {
            $ = new RecommendedActionErrorInfoResponse(Objects.requireNonNull(defaults));
        }

        public Builder errorCode(String errorCode) {
            $.errorCode = errorCode;
            return this;
        }

        public Builder isRetryable(String isRetryable) {
            $.isRetryable = isRetryable;
            return this;
        }

        public RecommendedActionErrorInfoResponse build() {
            $.errorCode = Objects.requireNonNull($.errorCode, "expected parameter 'errorCode' to be non-null");
            $.isRetryable = Objects.requireNonNull($.isRetryable, "expected parameter 'isRetryable' to be non-null");
            return $;
        }
    }

}
