// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Database migration errors for online migration
 * 
 */
public final class SyncMigrationDatabaseErrorEventResponse extends com.pulumi.resources.InvokeArgs {

    public static final SyncMigrationDatabaseErrorEventResponse Empty = new SyncMigrationDatabaseErrorEventResponse();

    /**
     * Event text.
     * 
     */
    @Import(name="eventText", required=true)
    private String eventText;

    /**
     * @return Event text.
     * 
     */
    public String eventText() {
        return this.eventText;
    }

    /**
     * Event type.
     * 
     */
    @Import(name="eventTypeString", required=true)
    private String eventTypeString;

    /**
     * @return Event type.
     * 
     */
    public String eventTypeString() {
        return this.eventTypeString;
    }

    /**
     * String value of timestamp.
     * 
     */
    @Import(name="timestampString", required=true)
    private String timestampString;

    /**
     * @return String value of timestamp.
     * 
     */
    public String timestampString() {
        return this.timestampString;
    }

    private SyncMigrationDatabaseErrorEventResponse() {}

    private SyncMigrationDatabaseErrorEventResponse(SyncMigrationDatabaseErrorEventResponse $) {
        this.eventText = $.eventText;
        this.eventTypeString = $.eventTypeString;
        this.timestampString = $.timestampString;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyncMigrationDatabaseErrorEventResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyncMigrationDatabaseErrorEventResponse $;

        public Builder() {
            $ = new SyncMigrationDatabaseErrorEventResponse();
        }

        public Builder(SyncMigrationDatabaseErrorEventResponse defaults) {
            $ = new SyncMigrationDatabaseErrorEventResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventText Event text.
         * 
         * @return builder
         * 
         */
        public Builder eventText(String eventText) {
            $.eventText = eventText;
            return this;
        }

        /**
         * @param eventTypeString Event type.
         * 
         * @return builder
         * 
         */
        public Builder eventTypeString(String eventTypeString) {
            $.eventTypeString = eventTypeString;
            return this;
        }

        /**
         * @param timestampString String value of timestamp.
         * 
         * @return builder
         * 
         */
        public Builder timestampString(String timestampString) {
            $.timestampString = timestampString;
            return this;
        }

        public SyncMigrationDatabaseErrorEventResponse build() {
            $.eventText = Objects.requireNonNull($.eventText, "expected parameter 'eventText' to be non-null");
            $.eventTypeString = Objects.requireNonNull($.eventTypeString, "expected parameter 'eventTypeString' to be non-null");
            $.timestampString = Objects.requireNonNull($.timestampString, "expected parameter 'timestampString' to be non-null");
            return $;
        }
    }

}
