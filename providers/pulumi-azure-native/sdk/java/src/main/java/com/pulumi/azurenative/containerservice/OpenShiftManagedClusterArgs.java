// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice;

import com.pulumi.azurenative.containerservice.inputs.NetworkProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.OpenShiftManagedClusterAgentPoolProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.OpenShiftManagedClusterAuthProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.OpenShiftManagedClusterMasterPoolProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.OpenShiftRouterProfileArgs;
import com.pulumi.azurenative.containerservice.inputs.PurchasePlanArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenShiftManagedClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenShiftManagedClusterArgs Empty = new OpenShiftManagedClusterArgs();

    /**
     * Configuration of OpenShift cluster VMs.
     * 
     */
    @Import(name="agentPoolProfiles")
    private @Nullable Output<List<OpenShiftManagedClusterAgentPoolProfileArgs>> agentPoolProfiles;

    public Optional<Output<List<OpenShiftManagedClusterAgentPoolProfileArgs>>> agentPoolProfiles() {
        return Optional.ofNullable(this.agentPoolProfiles);
    }

    /**
     * Configures OpenShift authentication.
     * 
     */
    @Import(name="authProfile")
    private @Nullable Output<OpenShiftManagedClusterAuthProfileArgs> authProfile;

    public Optional<Output<OpenShiftManagedClusterAuthProfileArgs>> authProfile() {
        return Optional.ofNullable(this.authProfile);
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Configuration for OpenShift master VMs.
     * 
     */
    @Import(name="masterPoolProfile")
    private @Nullable Output<OpenShiftManagedClusterMasterPoolProfileArgs> masterPoolProfile;

    public Optional<Output<OpenShiftManagedClusterMasterPoolProfileArgs>> masterPoolProfile() {
        return Optional.ofNullable(this.masterPoolProfile);
    }

    /**
     * Configuration for OpenShift networking.
     * 
     */
    @Import(name="networkProfile")
    private @Nullable Output<NetworkProfileArgs> networkProfile;

    public Optional<Output<NetworkProfileArgs>> networkProfile() {
        return Optional.ofNullable(this.networkProfile);
    }

    /**
     * Version of OpenShift specified when creating the cluster.
     * 
     */
    @Import(name="openShiftVersion", required=true)
    private Output<String> openShiftVersion;

    public Output<String> openShiftVersion() {
        return this.openShiftVersion;
    }

    /**
     * Define the resource plan as required by ARM for billing purposes
     * 
     */
    @Import(name="plan")
    private @Nullable Output<PurchasePlanArgs> plan;

    public Optional<Output<PurchasePlanArgs>> plan() {
        return Optional.ofNullable(this.plan);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the OpenShift managed cluster resource.
     * 
     */
    @Import(name="resourceName")
    private @Nullable Output<String> resourceName;

    public Optional<Output<String>> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }

    /**
     * Configuration for OpenShift router(s).
     * 
     */
    @Import(name="routerProfiles")
    private @Nullable Output<List<OpenShiftRouterProfileArgs>> routerProfiles;

    public Optional<Output<List<OpenShiftRouterProfileArgs>>> routerProfiles() {
        return Optional.ofNullable(this.routerProfiles);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private OpenShiftManagedClusterArgs() {}

    private OpenShiftManagedClusterArgs(OpenShiftManagedClusterArgs $) {
        this.agentPoolProfiles = $.agentPoolProfiles;
        this.authProfile = $.authProfile;
        this.location = $.location;
        this.masterPoolProfile = $.masterPoolProfile;
        this.networkProfile = $.networkProfile;
        this.openShiftVersion = $.openShiftVersion;
        this.plan = $.plan;
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
        this.routerProfiles = $.routerProfiles;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenShiftManagedClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenShiftManagedClusterArgs $;

        public Builder() {
            $ = new OpenShiftManagedClusterArgs();
        }

        public Builder(OpenShiftManagedClusterArgs defaults) {
            $ = new OpenShiftManagedClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder agentPoolProfiles(@Nullable Output<List<OpenShiftManagedClusterAgentPoolProfileArgs>> agentPoolProfiles) {
            $.agentPoolProfiles = agentPoolProfiles;
            return this;
        }

        public Builder agentPoolProfiles(List<OpenShiftManagedClusterAgentPoolProfileArgs> agentPoolProfiles) {
            return agentPoolProfiles(Output.of(agentPoolProfiles));
        }

        public Builder agentPoolProfiles(OpenShiftManagedClusterAgentPoolProfileArgs... agentPoolProfiles) {
            return agentPoolProfiles(List.of(agentPoolProfiles));
        }

        public Builder authProfile(@Nullable Output<OpenShiftManagedClusterAuthProfileArgs> authProfile) {
            $.authProfile = authProfile;
            return this;
        }

        public Builder authProfile(OpenShiftManagedClusterAuthProfileArgs authProfile) {
            return authProfile(Output.of(authProfile));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder masterPoolProfile(@Nullable Output<OpenShiftManagedClusterMasterPoolProfileArgs> masterPoolProfile) {
            $.masterPoolProfile = masterPoolProfile;
            return this;
        }

        public Builder masterPoolProfile(OpenShiftManagedClusterMasterPoolProfileArgs masterPoolProfile) {
            return masterPoolProfile(Output.of(masterPoolProfile));
        }

        public Builder networkProfile(@Nullable Output<NetworkProfileArgs> networkProfile) {
            $.networkProfile = networkProfile;
            return this;
        }

        public Builder networkProfile(NetworkProfileArgs networkProfile) {
            return networkProfile(Output.of(networkProfile));
        }

        public Builder openShiftVersion(Output<String> openShiftVersion) {
            $.openShiftVersion = openShiftVersion;
            return this;
        }

        public Builder openShiftVersion(String openShiftVersion) {
            return openShiftVersion(Output.of(openShiftVersion));
        }

        public Builder plan(@Nullable Output<PurchasePlanArgs> plan) {
            $.plan = plan;
            return this;
        }

        public Builder plan(PurchasePlanArgs plan) {
            return plan(Output.of(plan));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder resourceName(@Nullable Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        public Builder routerProfiles(@Nullable Output<List<OpenShiftRouterProfileArgs>> routerProfiles) {
            $.routerProfiles = routerProfiles;
            return this;
        }

        public Builder routerProfiles(List<OpenShiftRouterProfileArgs> routerProfiles) {
            return routerProfiles(Output.of(routerProfiles));
        }

        public Builder routerProfiles(OpenShiftRouterProfileArgs... routerProfiles) {
            return routerProfiles(List.of(routerProfiles));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public OpenShiftManagedClusterArgs build() {
            $.openShiftVersion = Objects.requireNonNull($.openShiftVersion, "expected parameter 'openShiftVersion' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
