// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice;

import com.pulumi.azurenative.containerservice.enums.AgentPoolMode;
import com.pulumi.azurenative.containerservice.enums.AgentPoolType;
import com.pulumi.azurenative.containerservice.enums.GPUInstanceProfile;
import com.pulumi.azurenative.containerservice.enums.KubeletDiskType;
import com.pulumi.azurenative.containerservice.enums.OSDiskType;
import com.pulumi.azurenative.containerservice.enums.OSSKU;
import com.pulumi.azurenative.containerservice.enums.OSType;
import com.pulumi.azurenative.containerservice.enums.ScaleSetEvictionPolicy;
import com.pulumi.azurenative.containerservice.enums.ScaleSetPriority;
import com.pulumi.azurenative.containerservice.inputs.AgentPoolUpgradeSettingsArgs;
import com.pulumi.azurenative.containerservice.inputs.KubeletConfigArgs;
import com.pulumi.azurenative.containerservice.inputs.LinuxOSConfigArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentPoolArgs Empty = new AgentPoolArgs();

    /**
     * The name of the agent pool.
     * 
     */
    @Import(name="agentPoolName")
    private @Nullable Output<String> agentPoolName;

    public Optional<Output<String>> agentPoolName() {
        return Optional.ofNullable(this.agentPoolName);
    }

    /**
     * Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
     * 
     */
    @Import(name="availabilityZones")
    private @Nullable Output<List<String>> availabilityZones;

    public Optional<Output<List<String>>> availabilityZones() {
        return Optional.ofNullable(this.availabilityZones);
    }

    /**
     * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
     * 
     */
    @Import(name="count")
    private @Nullable Output<Integer> count;

    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    /**
     * Whether to enable auto-scaler
     * 
     */
    @Import(name="enableAutoScaling")
    private @Nullable Output<Boolean> enableAutoScaling;

    public Optional<Output<Boolean>> enableAutoScaling() {
        return Optional.ofNullable(this.enableAutoScaling);
    }

    /**
     * Whether to enable EncryptionAtHost
     * 
     */
    @Import(name="enableEncryptionAtHost")
    private @Nullable Output<Boolean> enableEncryptionAtHost;

    public Optional<Output<Boolean>> enableEncryptionAtHost() {
        return Optional.ofNullable(this.enableEncryptionAtHost);
    }

    /**
     * Whether to use FIPS enabled OS
     * 
     */
    @Import(name="enableFIPS")
    private @Nullable Output<Boolean> enableFIPS;

    public Optional<Output<Boolean>> enableFIPS() {
        return Optional.ofNullable(this.enableFIPS);
    }

    /**
     * Enable public IP for nodes
     * 
     */
    @Import(name="enableNodePublicIP")
    private @Nullable Output<Boolean> enableNodePublicIP;

    public Optional<Output<Boolean>> enableNodePublicIP() {
        return Optional.ofNullable(this.enableNodePublicIP);
    }

    /**
     * GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. Supported values are MIG1g, MIG2g, MIG3g, MIG4g and MIG7g.
     * 
     */
    @Import(name="gpuInstanceProfile")
    private @Nullable Output<Either<String,GPUInstanceProfile>> gpuInstanceProfile;

    public Optional<Output<Either<String,GPUInstanceProfile>>> gpuInstanceProfile() {
        return Optional.ofNullable(this.gpuInstanceProfile);
    }

    /**
     * KubeletConfig specifies the configuration of kubelet on agent nodes.
     * 
     */
    @Import(name="kubeletConfig")
    private @Nullable Output<KubeletConfigArgs> kubeletConfig;

    public Optional<Output<KubeletConfigArgs>> kubeletConfig() {
        return Optional.ofNullable(this.kubeletConfig);
    }

    /**
     * KubeletDiskType determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. Currently allows one value, OS, resulting in Kubelet using the OS disk for data.
     * 
     */
    @Import(name="kubeletDiskType")
    private @Nullable Output<Either<String,KubeletDiskType>> kubeletDiskType;

    public Optional<Output<Either<String,KubeletDiskType>>> kubeletDiskType() {
        return Optional.ofNullable(this.kubeletDiskType);
    }

    /**
     * LinuxOSConfig specifies the OS configuration of linux agent nodes.
     * 
     */
    @Import(name="linuxOSConfig")
    private @Nullable Output<LinuxOSConfigArgs> linuxOSConfig;

    public Optional<Output<LinuxOSConfigArgs>> linuxOSConfig() {
        return Optional.ofNullable(this.linuxOSConfig);
    }

    /**
     * Maximum number of nodes for auto-scaling
     * 
     */
    @Import(name="maxCount")
    private @Nullable Output<Integer> maxCount;

    public Optional<Output<Integer>> maxCount() {
        return Optional.ofNullable(this.maxCount);
    }

    /**
     * Maximum number of pods that can run on a node.
     * 
     */
    @Import(name="maxPods")
    private @Nullable Output<Integer> maxPods;

    public Optional<Output<Integer>> maxPods() {
        return Optional.ofNullable(this.maxPods);
    }

    /**
     * Minimum number of nodes for auto-scaling
     * 
     */
    @Import(name="minCount")
    private @Nullable Output<Integer> minCount;

    public Optional<Output<Integer>> minCount() {
        return Optional.ofNullable(this.minCount);
    }

    /**
     * AgentPoolMode represents mode of an agent pool
     * 
     */
    @Import(name="mode")
    private @Nullable Output<Either<String,AgentPoolMode>> mode;

    public Optional<Output<Either<String,AgentPoolMode>>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Agent pool node labels to be persisted across all nodes in agent pool.
     * 
     */
    @Import(name="nodeLabels")
    private @Nullable Output<Map<String,String>> nodeLabels;

    public Optional<Output<Map<String,String>>> nodeLabels() {
        return Optional.ofNullable(this.nodeLabels);
    }

    /**
     * Public IP Prefix ID. VM nodes use IPs assigned from this Public IP Prefix.
     * 
     */
    @Import(name="nodePublicIPPrefixID")
    private @Nullable Output<String> nodePublicIPPrefixID;

    public Optional<Output<String>> nodePublicIPPrefixID() {
        return Optional.ofNullable(this.nodePublicIPPrefixID);
    }

    /**
     * Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
     * 
     */
    @Import(name="nodeTaints")
    private @Nullable Output<List<String>> nodeTaints;

    public Optional<Output<List<String>>> nodeTaints() {
        return Optional.ofNullable(this.nodeTaints);
    }

    /**
     * Version of orchestrator specified when creating the managed cluster.
     * 
     */
    @Import(name="orchestratorVersion")
    private @Nullable Output<String> orchestratorVersion;

    public Optional<Output<String>> orchestratorVersion() {
        return Optional.ofNullable(this.orchestratorVersion);
    }

    /**
     * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
     * 
     */
    @Import(name="osDiskSizeGB")
    private @Nullable Output<Integer> osDiskSizeGB;

    public Optional<Output<Integer>> osDiskSizeGB() {
        return Optional.ofNullable(this.osDiskSizeGB);
    }

    /**
     * OS disk type to be used for machines in a given agent pool. Allowed values are &#39;Ephemeral&#39; and &#39;Managed&#39;. If unspecified, defaults to &#39;Ephemeral&#39; when the VM supports ephemeral OS and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to &#39;Managed&#39;. May not be changed after creation.
     * 
     */
    @Import(name="osDiskType")
    private @Nullable Output<Either<String,OSDiskType>> osDiskType;

    public Optional<Output<Either<String,OSDiskType>>> osDiskType() {
        return Optional.ofNullable(this.osDiskType);
    }

    /**
     * OsSKU to be used to specify os sku. Choose from Ubuntu(default) and CBLMariner for Linux OSType. Not applicable to Windows OSType.
     * 
     */
    @Import(name="osSKU")
    private @Nullable Output<Either<String,OSSKU>> osSKU;

    public Optional<Output<Either<String,OSSKU>>> osSKU() {
        return Optional.ofNullable(this.osSKU);
    }

    /**
     * OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
     * 
     */
    @Import(name="osType")
    private @Nullable Output<Either<String,OSType>> osType;

    public Optional<Output<Either<String,OSType>>> osType() {
        return Optional.ofNullable(this.osType);
    }

    /**
     * Pod SubnetID specifies the VNet&#39;s subnet identifier for pods.
     * 
     */
    @Import(name="podSubnetID")
    private @Nullable Output<String> podSubnetID;

    public Optional<Output<String>> podSubnetID() {
        return Optional.ofNullable(this.podSubnetID);
    }

    /**
     * The ID for Proximity Placement Group.
     * 
     */
    @Import(name="proximityPlacementGroupID")
    private @Nullable Output<String> proximityPlacementGroupID;

    public Optional<Output<String>> proximityPlacementGroupID() {
        return Optional.ofNullable(this.proximityPlacementGroupID);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the managed cluster resource.
     * 
     */
    @Import(name="resourceName", required=true)
    private Output<String> resourceName;

    public Output<String> resourceName() {
        return this.resourceName;
    }

    /**
     * ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
     * 
     */
    @Import(name="scaleSetEvictionPolicy")
    private @Nullable Output<Either<String,ScaleSetEvictionPolicy>> scaleSetEvictionPolicy;

    public Optional<Output<Either<String,ScaleSetEvictionPolicy>>> scaleSetEvictionPolicy() {
        return Optional.ofNullable(this.scaleSetEvictionPolicy);
    }

    /**
     * ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
     * 
     */
    @Import(name="scaleSetPriority")
    private @Nullable Output<Either<String,ScaleSetPriority>> scaleSetPriority;

    public Optional<Output<Either<String,ScaleSetPriority>>> scaleSetPriority() {
        return Optional.ofNullable(this.scaleSetPriority);
    }

    /**
     * SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
     * 
     */
    @Import(name="spotMaxPrice")
    private @Nullable Output<Double> spotMaxPrice;

    public Optional<Output<Double>> spotMaxPrice() {
        return Optional.ofNullable(this.spotMaxPrice);
    }

    /**
     * Agent pool tags to be persisted on the agent pool virtual machine scale set.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * AgentPoolType represents types of an agent pool
     * 
     */
    @Import(name="type")
    private @Nullable Output<Either<String,AgentPoolType>> type;

    public Optional<Output<Either<String,AgentPoolType>>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Settings for upgrading the agentpool
     * 
     */
    @Import(name="upgradeSettings")
    private @Nullable Output<AgentPoolUpgradeSettingsArgs> upgradeSettings;

    public Optional<Output<AgentPoolUpgradeSettingsArgs>> upgradeSettings() {
        return Optional.ofNullable(this.upgradeSettings);
    }

    /**
     * Size of agent VMs.
     * 
     */
    @Import(name="vmSize")
    private @Nullable Output<String> vmSize;

    public Optional<Output<String>> vmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    /**
     * VNet SubnetID specifies the VNet&#39;s subnet identifier for nodes and maybe pods
     * 
     */
    @Import(name="vnetSubnetID")
    private @Nullable Output<String> vnetSubnetID;

    public Optional<Output<String>> vnetSubnetID() {
        return Optional.ofNullable(this.vnetSubnetID);
    }

    private AgentPoolArgs() {}

    private AgentPoolArgs(AgentPoolArgs $) {
        this.agentPoolName = $.agentPoolName;
        this.availabilityZones = $.availabilityZones;
        this.count = $.count;
        this.enableAutoScaling = $.enableAutoScaling;
        this.enableEncryptionAtHost = $.enableEncryptionAtHost;
        this.enableFIPS = $.enableFIPS;
        this.enableNodePublicIP = $.enableNodePublicIP;
        this.gpuInstanceProfile = $.gpuInstanceProfile;
        this.kubeletConfig = $.kubeletConfig;
        this.kubeletDiskType = $.kubeletDiskType;
        this.linuxOSConfig = $.linuxOSConfig;
        this.maxCount = $.maxCount;
        this.maxPods = $.maxPods;
        this.minCount = $.minCount;
        this.mode = $.mode;
        this.nodeLabels = $.nodeLabels;
        this.nodePublicIPPrefixID = $.nodePublicIPPrefixID;
        this.nodeTaints = $.nodeTaints;
        this.orchestratorVersion = $.orchestratorVersion;
        this.osDiskSizeGB = $.osDiskSizeGB;
        this.osDiskType = $.osDiskType;
        this.osSKU = $.osSKU;
        this.osType = $.osType;
        this.podSubnetID = $.podSubnetID;
        this.proximityPlacementGroupID = $.proximityPlacementGroupID;
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
        this.scaleSetEvictionPolicy = $.scaleSetEvictionPolicy;
        this.scaleSetPriority = $.scaleSetPriority;
        this.spotMaxPrice = $.spotMaxPrice;
        this.tags = $.tags;
        this.type = $.type;
        this.upgradeSettings = $.upgradeSettings;
        this.vmSize = $.vmSize;
        this.vnetSubnetID = $.vnetSubnetID;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentPoolArgs $;

        public Builder() {
            $ = new AgentPoolArgs();
        }

        public Builder(AgentPoolArgs defaults) {
            $ = new AgentPoolArgs(Objects.requireNonNull(defaults));
        }

        public Builder agentPoolName(@Nullable Output<String> agentPoolName) {
            $.agentPoolName = agentPoolName;
            return this;
        }

        public Builder agentPoolName(String agentPoolName) {
            return agentPoolName(Output.of(agentPoolName));
        }

        public Builder availabilityZones(@Nullable Output<List<String>> availabilityZones) {
            $.availabilityZones = availabilityZones;
            return this;
        }

        public Builder availabilityZones(List<String> availabilityZones) {
            return availabilityZones(Output.of(availabilityZones));
        }

        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }

        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        public Builder enableAutoScaling(@Nullable Output<Boolean> enableAutoScaling) {
            $.enableAutoScaling = enableAutoScaling;
            return this;
        }

        public Builder enableAutoScaling(Boolean enableAutoScaling) {
            return enableAutoScaling(Output.of(enableAutoScaling));
        }

        public Builder enableEncryptionAtHost(@Nullable Output<Boolean> enableEncryptionAtHost) {
            $.enableEncryptionAtHost = enableEncryptionAtHost;
            return this;
        }

        public Builder enableEncryptionAtHost(Boolean enableEncryptionAtHost) {
            return enableEncryptionAtHost(Output.of(enableEncryptionAtHost));
        }

        public Builder enableFIPS(@Nullable Output<Boolean> enableFIPS) {
            $.enableFIPS = enableFIPS;
            return this;
        }

        public Builder enableFIPS(Boolean enableFIPS) {
            return enableFIPS(Output.of(enableFIPS));
        }

        public Builder enableNodePublicIP(@Nullable Output<Boolean> enableNodePublicIP) {
            $.enableNodePublicIP = enableNodePublicIP;
            return this;
        }

        public Builder enableNodePublicIP(Boolean enableNodePublicIP) {
            return enableNodePublicIP(Output.of(enableNodePublicIP));
        }

        public Builder gpuInstanceProfile(@Nullable Output<Either<String,GPUInstanceProfile>> gpuInstanceProfile) {
            $.gpuInstanceProfile = gpuInstanceProfile;
            return this;
        }

        public Builder gpuInstanceProfile(Either<String,GPUInstanceProfile> gpuInstanceProfile) {
            return gpuInstanceProfile(Output.of(gpuInstanceProfile));
        }

        public Builder kubeletConfig(@Nullable Output<KubeletConfigArgs> kubeletConfig) {
            $.kubeletConfig = kubeletConfig;
            return this;
        }

        public Builder kubeletConfig(KubeletConfigArgs kubeletConfig) {
            return kubeletConfig(Output.of(kubeletConfig));
        }

        public Builder kubeletDiskType(@Nullable Output<Either<String,KubeletDiskType>> kubeletDiskType) {
            $.kubeletDiskType = kubeletDiskType;
            return this;
        }

        public Builder kubeletDiskType(Either<String,KubeletDiskType> kubeletDiskType) {
            return kubeletDiskType(Output.of(kubeletDiskType));
        }

        public Builder linuxOSConfig(@Nullable Output<LinuxOSConfigArgs> linuxOSConfig) {
            $.linuxOSConfig = linuxOSConfig;
            return this;
        }

        public Builder linuxOSConfig(LinuxOSConfigArgs linuxOSConfig) {
            return linuxOSConfig(Output.of(linuxOSConfig));
        }

        public Builder maxCount(@Nullable Output<Integer> maxCount) {
            $.maxCount = maxCount;
            return this;
        }

        public Builder maxCount(Integer maxCount) {
            return maxCount(Output.of(maxCount));
        }

        public Builder maxPods(@Nullable Output<Integer> maxPods) {
            $.maxPods = maxPods;
            return this;
        }

        public Builder maxPods(Integer maxPods) {
            return maxPods(Output.of(maxPods));
        }

        public Builder minCount(@Nullable Output<Integer> minCount) {
            $.minCount = minCount;
            return this;
        }

        public Builder minCount(Integer minCount) {
            return minCount(Output.of(minCount));
        }

        public Builder mode(@Nullable Output<Either<String,AgentPoolMode>> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(Either<String,AgentPoolMode> mode) {
            return mode(Output.of(mode));
        }

        public Builder nodeLabels(@Nullable Output<Map<String,String>> nodeLabels) {
            $.nodeLabels = nodeLabels;
            return this;
        }

        public Builder nodeLabels(Map<String,String> nodeLabels) {
            return nodeLabels(Output.of(nodeLabels));
        }

        public Builder nodePublicIPPrefixID(@Nullable Output<String> nodePublicIPPrefixID) {
            $.nodePublicIPPrefixID = nodePublicIPPrefixID;
            return this;
        }

        public Builder nodePublicIPPrefixID(String nodePublicIPPrefixID) {
            return nodePublicIPPrefixID(Output.of(nodePublicIPPrefixID));
        }

        public Builder nodeTaints(@Nullable Output<List<String>> nodeTaints) {
            $.nodeTaints = nodeTaints;
            return this;
        }

        public Builder nodeTaints(List<String> nodeTaints) {
            return nodeTaints(Output.of(nodeTaints));
        }

        public Builder nodeTaints(String... nodeTaints) {
            return nodeTaints(List.of(nodeTaints));
        }

        public Builder orchestratorVersion(@Nullable Output<String> orchestratorVersion) {
            $.orchestratorVersion = orchestratorVersion;
            return this;
        }

        public Builder orchestratorVersion(String orchestratorVersion) {
            return orchestratorVersion(Output.of(orchestratorVersion));
        }

        public Builder osDiskSizeGB(@Nullable Output<Integer> osDiskSizeGB) {
            $.osDiskSizeGB = osDiskSizeGB;
            return this;
        }

        public Builder osDiskSizeGB(Integer osDiskSizeGB) {
            return osDiskSizeGB(Output.of(osDiskSizeGB));
        }

        public Builder osDiskType(@Nullable Output<Either<String,OSDiskType>> osDiskType) {
            $.osDiskType = osDiskType;
            return this;
        }

        public Builder osDiskType(Either<String,OSDiskType> osDiskType) {
            return osDiskType(Output.of(osDiskType));
        }

        public Builder osSKU(@Nullable Output<Either<String,OSSKU>> osSKU) {
            $.osSKU = osSKU;
            return this;
        }

        public Builder osSKU(Either<String,OSSKU> osSKU) {
            return osSKU(Output.of(osSKU));
        }

        public Builder osType(@Nullable Output<Either<String,OSType>> osType) {
            $.osType = osType;
            return this;
        }

        public Builder osType(Either<String,OSType> osType) {
            return osType(Output.of(osType));
        }

        public Builder podSubnetID(@Nullable Output<String> podSubnetID) {
            $.podSubnetID = podSubnetID;
            return this;
        }

        public Builder podSubnetID(String podSubnetID) {
            return podSubnetID(Output.of(podSubnetID));
        }

        public Builder proximityPlacementGroupID(@Nullable Output<String> proximityPlacementGroupID) {
            $.proximityPlacementGroupID = proximityPlacementGroupID;
            return this;
        }

        public Builder proximityPlacementGroupID(String proximityPlacementGroupID) {
            return proximityPlacementGroupID(Output.of(proximityPlacementGroupID));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder resourceName(Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        public Builder scaleSetEvictionPolicy(@Nullable Output<Either<String,ScaleSetEvictionPolicy>> scaleSetEvictionPolicy) {
            $.scaleSetEvictionPolicy = scaleSetEvictionPolicy;
            return this;
        }

        public Builder scaleSetEvictionPolicy(Either<String,ScaleSetEvictionPolicy> scaleSetEvictionPolicy) {
            return scaleSetEvictionPolicy(Output.of(scaleSetEvictionPolicy));
        }

        public Builder scaleSetPriority(@Nullable Output<Either<String,ScaleSetPriority>> scaleSetPriority) {
            $.scaleSetPriority = scaleSetPriority;
            return this;
        }

        public Builder scaleSetPriority(Either<String,ScaleSetPriority> scaleSetPriority) {
            return scaleSetPriority(Output.of(scaleSetPriority));
        }

        public Builder spotMaxPrice(@Nullable Output<Double> spotMaxPrice) {
            $.spotMaxPrice = spotMaxPrice;
            return this;
        }

        public Builder spotMaxPrice(Double spotMaxPrice) {
            return spotMaxPrice(Output.of(spotMaxPrice));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder type(@Nullable Output<Either<String,AgentPoolType>> type) {
            $.type = type;
            return this;
        }

        public Builder type(Either<String,AgentPoolType> type) {
            return type(Output.of(type));
        }

        public Builder upgradeSettings(@Nullable Output<AgentPoolUpgradeSettingsArgs> upgradeSettings) {
            $.upgradeSettings = upgradeSettings;
            return this;
        }

        public Builder upgradeSettings(AgentPoolUpgradeSettingsArgs upgradeSettings) {
            return upgradeSettings(Output.of(upgradeSettings));
        }

        public Builder vmSize(@Nullable Output<String> vmSize) {
            $.vmSize = vmSize;
            return this;
        }

        public Builder vmSize(String vmSize) {
            return vmSize(Output.of(vmSize));
        }

        public Builder vnetSubnetID(@Nullable Output<String> vnetSubnetID) {
            $.vnetSubnetID = vnetSubnetID;
            return this;
        }

        public Builder vnetSubnetID(String vnetSubnetID) {
            return vnetSubnetID(Output.of(vnetSubnetID));
        }

        public AgentPoolArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceName = Objects.requireNonNull($.resourceName, "expected parameter 'resourceName' to be non-null");
            return $;
        }
    }

}
