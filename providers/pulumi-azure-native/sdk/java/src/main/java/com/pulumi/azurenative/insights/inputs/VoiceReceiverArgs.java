// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A voice receiver.
 * 
 */
public final class VoiceReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final VoiceReceiverArgs Empty = new VoiceReceiverArgs();

    /**
     * The country code of the voice receiver.
     * 
     */
    @Import(name="countryCode", required=true)
    private Output<String> countryCode;

    /**
     * @return The country code of the voice receiver.
     * 
     */
    public Output<String> countryCode() {
        return this.countryCode;
    }

    /**
     * The name of the voice receiver. Names must be unique across all receivers within an action group.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the voice receiver. Names must be unique across all receivers within an action group.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The phone number of the voice receiver.
     * 
     */
    @Import(name="phoneNumber", required=true)
    private Output<String> phoneNumber;

    /**
     * @return The phone number of the voice receiver.
     * 
     */
    public Output<String> phoneNumber() {
        return this.phoneNumber;
    }

    private VoiceReceiverArgs() {}

    private VoiceReceiverArgs(VoiceReceiverArgs $) {
        this.countryCode = $.countryCode;
        this.name = $.name;
        this.phoneNumber = $.phoneNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VoiceReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VoiceReceiverArgs $;

        public Builder() {
            $ = new VoiceReceiverArgs();
        }

        public Builder(VoiceReceiverArgs defaults) {
            $ = new VoiceReceiverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param countryCode The country code of the voice receiver.
         * 
         * @return builder
         * 
         */
        public Builder countryCode(Output<String> countryCode) {
            $.countryCode = countryCode;
            return this;
        }

        /**
         * @param countryCode The country code of the voice receiver.
         * 
         * @return builder
         * 
         */
        public Builder countryCode(String countryCode) {
            return countryCode(Output.of(countryCode));
        }

        /**
         * @param name The name of the voice receiver. Names must be unique across all receivers within an action group.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the voice receiver. Names must be unique across all receivers within an action group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param phoneNumber The phone number of the voice receiver.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(Output<String> phoneNumber) {
            $.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * @param phoneNumber The phone number of the voice receiver.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(String phoneNumber) {
            return phoneNumber(Output.of(phoneNumber));
        }

        public VoiceReceiverArgs build() {
            $.countryCode = Objects.requireNonNull($.countryCode, "expected parameter 'countryCode' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.phoneNumber = Objects.requireNonNull($.phoneNumber, "expected parameter 'phoneNumber' to be non-null");
            return $;
        }
    }

}
