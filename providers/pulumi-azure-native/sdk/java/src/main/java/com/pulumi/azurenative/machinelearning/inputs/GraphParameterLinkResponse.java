// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearning.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Association link for a graph global parameter to a node in the graph.
 * 
 */
public final class GraphParameterLinkResponse extends com.pulumi.resources.InvokeArgs {

    public static final GraphParameterLinkResponse Empty = new GraphParameterLinkResponse();

    /**
     * The graph node&#39;s identifier
     * 
     */
    @Import(name="nodeId", required=true)
    private String nodeId;

    /**
     * @return The graph node&#39;s identifier
     * 
     */
    public String nodeId() {
        return this.nodeId;
    }

    /**
     * The identifier of the node parameter that the global parameter maps to.
     * 
     */
    @Import(name="parameterKey", required=true)
    private String parameterKey;

    /**
     * @return The identifier of the node parameter that the global parameter maps to.
     * 
     */
    public String parameterKey() {
        return this.parameterKey;
    }

    private GraphParameterLinkResponse() {}

    private GraphParameterLinkResponse(GraphParameterLinkResponse $) {
        this.nodeId = $.nodeId;
        this.parameterKey = $.parameterKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GraphParameterLinkResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GraphParameterLinkResponse $;

        public Builder() {
            $ = new GraphParameterLinkResponse();
        }

        public Builder(GraphParameterLinkResponse defaults) {
            $ = new GraphParameterLinkResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param nodeId The graph node&#39;s identifier
         * 
         * @return builder
         * 
         */
        public Builder nodeId(String nodeId) {
            $.nodeId = nodeId;
            return this;
        }

        /**
         * @param parameterKey The identifier of the node parameter that the global parameter maps to.
         * 
         * @return builder
         * 
         */
        public Builder parameterKey(String parameterKey) {
            $.parameterKey = parameterKey;
            return this;
        }

        public GraphParameterLinkResponse build() {
            $.nodeId = Objects.requireNonNull($.nodeId, "expected parameter 'nodeId' to be non-null");
            $.parameterKey = Objects.requireNonNull($.parameterKey, "expected parameter 'parameterKey' to be non-null");
            return $;
        }
    }

}
