// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetSqlMigrationServiceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSqlMigrationServiceArgs Empty = new GetSqlMigrationServiceArgs();

    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the SQL Migration Service.
     * 
     */
    @Import(name="sqlMigrationServiceName", required=true)
    private Output<String> sqlMigrationServiceName;

    /**
     * @return Name of the SQL Migration Service.
     * 
     */
    public Output<String> sqlMigrationServiceName() {
        return this.sqlMigrationServiceName;
    }

    private GetSqlMigrationServiceArgs() {}

    private GetSqlMigrationServiceArgs(GetSqlMigrationServiceArgs $) {
        this.resourceGroupName = $.resourceGroupName;
        this.sqlMigrationServiceName = $.sqlMigrationServiceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSqlMigrationServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSqlMigrationServiceArgs $;

        public Builder() {
            $ = new GetSqlMigrationServiceArgs();
        }

        public Builder(GetSqlMigrationServiceArgs defaults) {
            $ = new GetSqlMigrationServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sqlMigrationServiceName Name of the SQL Migration Service.
         * 
         * @return builder
         * 
         */
        public Builder sqlMigrationServiceName(Output<String> sqlMigrationServiceName) {
            $.sqlMigrationServiceName = sqlMigrationServiceName;
            return this;
        }

        /**
         * @param sqlMigrationServiceName Name of the SQL Migration Service.
         * 
         * @return builder
         * 
         */
        public Builder sqlMigrationServiceName(String sqlMigrationServiceName) {
            return sqlMigrationServiceName(Output.of(sqlMigrationServiceName));
        }

        public GetSqlMigrationServiceArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sqlMigrationServiceName = Objects.requireNonNull($.sqlMigrationServiceName, "expected parameter 'sqlMigrationServiceName' to be non-null");
            return $;
        }
    }

}
