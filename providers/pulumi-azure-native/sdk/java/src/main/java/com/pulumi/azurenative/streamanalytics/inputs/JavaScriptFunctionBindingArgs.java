// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The binding to a JavaScript function.
 * 
 */
public final class JavaScriptFunctionBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final JavaScriptFunctionBindingArgs Empty = new JavaScriptFunctionBindingArgs();

    /**
     * The JavaScript code containing a single function definition. For example: 'function (x, y) { return x + y; }'
     * 
     */
    @Import(name="script")
      private final @Nullable Output<String> script;

    public Output<String> script() {
        return this.script == null ? Codegen.empty() : this.script;
    }

    /**
     * Indicates the function binding type.
     * Expected value is 'Microsoft.StreamAnalytics/JavascriptUdf'.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    public JavaScriptFunctionBindingArgs(
        @Nullable Output<String> script,
        Output<String> type) {
        this.script = script;
        this.type = Codegen.stringProp("type").output().arg(type).require();
    }

    private JavaScriptFunctionBindingArgs() {
        this.script = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JavaScriptFunctionBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> script;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(JavaScriptFunctionBindingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.script = defaults.script;
    	      this.type = defaults.type;
        }

        public Builder script(@Nullable Output<String> script) {
            this.script = script;
            return this;
        }
        public Builder script(@Nullable String script) {
            this.script = Codegen.ofNullable(script);
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public JavaScriptFunctionBindingArgs build() {
            return new JavaScriptFunctionBindingArgs(script, type);
        }
    }
}
