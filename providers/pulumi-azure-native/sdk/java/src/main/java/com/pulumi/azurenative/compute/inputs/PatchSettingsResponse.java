// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies settings related to VM Guest Patching on Windows.
 * 
 */
public final class PatchSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final PatchSettingsResponse Empty = new PatchSettingsResponse();

    /**
     * Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - You control the timing of patch assessments on a virtual machine.&lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
     * 
     */
    @Import(name="assessmentMode")
    private @Nullable String assessmentMode;

    public Optional<String> assessmentMode() {
        return Optional.ofNullable(this.assessmentMode);
    }

    /**
     * Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the &#39;provisionVMAgent&#39; must be set to true and &#39;patchMode&#39; must be set to &#39;AutomaticByPlatform&#39;.
     * 
     */
    @Import(name="enableHotpatching")
    private @Nullable Boolean enableHotpatching;

    public Optional<Boolean> enableHotpatching() {
        return Optional.ofNullable(this.enableHotpatching);
    }

    /**
     * Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false&lt;br /&gt;&lt;br /&gt; **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true
     * 
     */
    @Import(name="patchMode")
    private @Nullable String patchMode;

    public Optional<String> patchMode() {
        return Optional.ofNullable(this.patchMode);
    }

    private PatchSettingsResponse() {}

    private PatchSettingsResponse(PatchSettingsResponse $) {
        this.assessmentMode = $.assessmentMode;
        this.enableHotpatching = $.enableHotpatching;
        this.patchMode = $.patchMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PatchSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PatchSettingsResponse $;

        public Builder() {
            $ = new PatchSettingsResponse();
        }

        public Builder(PatchSettingsResponse defaults) {
            $ = new PatchSettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder assessmentMode(@Nullable String assessmentMode) {
            $.assessmentMode = assessmentMode;
            return this;
        }

        public Builder enableHotpatching(@Nullable Boolean enableHotpatching) {
            $.enableHotpatching = enableHotpatching;
            return this;
        }

        public Builder patchMode(@Nullable String patchMode) {
            $.patchMode = patchMode;
            return this;
        }

        public PatchSettingsResponse build() {
            return $;
        }
    }

}
