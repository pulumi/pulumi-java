// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation;

import com.pulumi.azurenative.automation.inputs.EncryptionPropertiesArgs;
import com.pulumi.azurenative.automation.inputs.IdentityArgs;
import com.pulumi.azurenative.automation.inputs.SkuArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AutomationAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomationAccountArgs Empty = new AutomationAccountArgs();

    /**
     * The name of the automation account.
     * 
     */
    @Import(name="automationAccountName")
      private final @Nullable Output<String> automationAccountName;

    public Output<String> automationAccountName() {
        return this.automationAccountName == null ? Codegen.empty() : this.automationAccountName;
    }

    /**
     * Indicates whether requests using non-AAD authentication are blocked
     * 
     */
    @Import(name="disableLocalAuth")
      private final @Nullable Output<Boolean> disableLocalAuth;

    public Output<Boolean> disableLocalAuth() {
        return this.disableLocalAuth == null ? Codegen.empty() : this.disableLocalAuth;
    }

    /**
     * Set the encryption properties for the automation account
     * 
     */
    @Import(name="encryption")
      private final @Nullable Output<EncryptionPropertiesArgs> encryption;

    public Output<EncryptionPropertiesArgs> encryption() {
        return this.encryption == null ? Codegen.empty() : this.encryption;
    }

    /**
     * Sets the identity property for automation account
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<IdentityArgs> identity;

    public Output<IdentityArgs> identity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * Gets or sets the location of the resource.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Gets or sets name of the resource.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet
     * 
     */
    @Import(name="publicNetworkAccess")
      private final @Nullable Output<Boolean> publicNetworkAccess;

    public Output<Boolean> publicNetworkAccess() {
        return this.publicNetworkAccess == null ? Codegen.empty() : this.publicNetworkAccess;
    }

    /**
     * Name of an Azure Resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets account SKU.
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<SkuArgs> sku;

    public Output<SkuArgs> sku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    /**
     * Gets or sets the tags attached to the resource.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public AutomationAccountArgs(
        @Nullable Output<String> automationAccountName,
        @Nullable Output<Boolean> disableLocalAuth,
        @Nullable Output<EncryptionPropertiesArgs> encryption,
        @Nullable Output<IdentityArgs> identity,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<Boolean> publicNetworkAccess,
        Output<String> resourceGroupName,
        @Nullable Output<SkuArgs> sku,
        @Nullable Output<Map<String,String>> tags) {
        this.automationAccountName = automationAccountName;
        this.disableLocalAuth = disableLocalAuth;
        this.encryption = encryption;
        this.identity = identity;
        this.location = location;
        this.name = name;
        this.publicNetworkAccess = publicNetworkAccess;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sku = sku;
        this.tags = tags;
    }

    private AutomationAccountArgs() {
        this.automationAccountName = Codegen.empty();
        this.disableLocalAuth = Codegen.empty();
        this.encryption = Codegen.empty();
        this.identity = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.publicNetworkAccess = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.sku = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomationAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> automationAccountName;
        private @Nullable Output<Boolean> disableLocalAuth;
        private @Nullable Output<EncryptionPropertiesArgs> encryption;
        private @Nullable Output<IdentityArgs> identity;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<Boolean> publicNetworkAccess;
        private Output<String> resourceGroupName;
        private @Nullable Output<SkuArgs> sku;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AutomationAccountArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automationAccountName = defaults.automationAccountName;
    	      this.disableLocalAuth = defaults.disableLocalAuth;
    	      this.encryption = defaults.encryption;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
        }

        public Builder automationAccountName(@Nullable Output<String> automationAccountName) {
            this.automationAccountName = automationAccountName;
            return this;
        }
        public Builder automationAccountName(@Nullable String automationAccountName) {
            this.automationAccountName = Codegen.ofNullable(automationAccountName);
            return this;
        }
        public Builder disableLocalAuth(@Nullable Output<Boolean> disableLocalAuth) {
            this.disableLocalAuth = disableLocalAuth;
            return this;
        }
        public Builder disableLocalAuth(@Nullable Boolean disableLocalAuth) {
            this.disableLocalAuth = Codegen.ofNullable(disableLocalAuth);
            return this;
        }
        public Builder encryption(@Nullable Output<EncryptionPropertiesArgs> encryption) {
            this.encryption = encryption;
            return this;
        }
        public Builder encryption(@Nullable EncryptionPropertiesArgs encryption) {
            this.encryption = Codegen.ofNullable(encryption);
            return this;
        }
        public Builder identity(@Nullable Output<IdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable IdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder publicNetworkAccess(@Nullable Output<Boolean> publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        public Builder publicNetworkAccess(@Nullable Boolean publicNetworkAccess) {
            this.publicNetworkAccess = Codegen.ofNullable(publicNetworkAccess);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder sku(@Nullable Output<SkuArgs> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable SkuArgs sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public AutomationAccountArgs build() {
            return new AutomationAccountArgs(automationAccountName, disableLocalAuth, encryption, identity, location, name, publicNetworkAccess, resourceGroupName, sku, tags);
        }
    }
}
