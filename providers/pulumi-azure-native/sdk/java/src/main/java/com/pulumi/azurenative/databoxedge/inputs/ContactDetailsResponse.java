// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Contains all the contact details of the customer.
 * 
 */
public final class ContactDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContactDetailsResponse Empty = new ContactDetailsResponse();

    /**
     * The name of the company.
     * 
     */
    @Import(name="companyName", required=true)
    private String companyName;

    public String companyName() {
        return this.companyName;
    }

    /**
     * The contact person name.
     * 
     */
    @Import(name="contactPerson", required=true)
    private String contactPerson;

    public String contactPerson() {
        return this.contactPerson;
    }

    /**
     * The email list.
     * 
     */
    @Import(name="emailList", required=true)
    private List<String> emailList;

    public List<String> emailList() {
        return this.emailList;
    }

    /**
     * The phone number.
     * 
     */
    @Import(name="phone", required=true)
    private String phone;

    public String phone() {
        return this.phone;
    }

    private ContactDetailsResponse() {}

    private ContactDetailsResponse(ContactDetailsResponse $) {
        this.companyName = $.companyName;
        this.contactPerson = $.contactPerson;
        this.emailList = $.emailList;
        this.phone = $.phone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContactDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContactDetailsResponse $;

        public Builder() {
            $ = new ContactDetailsResponse();
        }

        public Builder(ContactDetailsResponse defaults) {
            $ = new ContactDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder companyName(String companyName) {
            $.companyName = companyName;
            return this;
        }

        public Builder contactPerson(String contactPerson) {
            $.contactPerson = contactPerson;
            return this;
        }

        public Builder emailList(List<String> emailList) {
            $.emailList = emailList;
            return this;
        }

        public Builder emailList(String... emailList) {
            return emailList(List.of(emailList));
        }

        public Builder phone(String phone) {
            $.phone = phone;
            return this;
        }

        public ContactDetailsResponse build() {
            $.companyName = Objects.requireNonNull($.companyName, "expected parameter 'companyName' to be non-null");
            $.contactPerson = Objects.requireNonNull($.contactPerson, "expected parameter 'contactPerson' to be non-null");
            $.emailList = Objects.requireNonNull($.emailList, "expected parameter 'emailList' to be non-null");
            $.phone = Objects.requireNonNull($.phone, "expected parameter 'phone' to be non-null");
            return $;
        }
    }

}
