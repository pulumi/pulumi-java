// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.azurenative.datafactory.inputs.AzureKeyVaultSecretReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.IntegrationRuntimeReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceResponse;
import com.pulumi.azurenative.datafactory.inputs.ParameterSpecificationResponse;
import com.pulumi.azurenative.datafactory.inputs.SecureStringResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * HDInsight linked service.
 * 
 */
public final class HDInsightLinkedServiceResponse extends com.pulumi.resources.InvokeArgs {

    public static final HDInsightLinkedServiceResponse Empty = new HDInsightLinkedServiceResponse();

    /**
     * List of tags that can be used for describing the linked service.
     * 
     */
    @Import(name="annotations")
    private @Nullable List<Object> annotations;

    /**
     * @return List of tags that can be used for describing the linked service.
     * 
     */
    public Optional<List<Object>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * HDInsight cluster URI. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="clusterUri", required=true)
    private Object clusterUri;

    /**
     * @return HDInsight cluster URI. Type: string (or Expression with resultType string).
     * 
     */
    public Object clusterUri() {
        return this.clusterUri;
    }

    /**
     * The integration runtime reference.
     * 
     */
    @Import(name="connectVia")
    private @Nullable IntegrationRuntimeReferenceResponse connectVia;

    /**
     * @return The integration runtime reference.
     * 
     */
    public Optional<IntegrationRuntimeReferenceResponse> connectVia() {
        return Optional.ofNullable(this.connectVia);
    }

    /**
     * Linked service description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Linked service description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="encryptedCredential")
    private @Nullable Object encryptedCredential;

    /**
     * @return The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> encryptedCredential() {
        return Optional.ofNullable(this.encryptedCredential);
    }

    /**
     * Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="fileSystem")
    private @Nullable Object fileSystem;

    /**
     * @return Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> fileSystem() {
        return Optional.ofNullable(this.fileSystem);
    }

    /**
     * A reference to the Azure SQL linked service that points to the HCatalog database.
     * 
     */
    @Import(name="hcatalogLinkedServiceName")
    private @Nullable LinkedServiceReferenceResponse hcatalogLinkedServiceName;

    /**
     * @return A reference to the Azure SQL linked service that points to the HCatalog database.
     * 
     */
    public Optional<LinkedServiceReferenceResponse> hcatalogLinkedServiceName() {
        return Optional.ofNullable(this.hcatalogLinkedServiceName);
    }

    /**
     * Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean.
     * 
     */
    @Import(name="isEspEnabled")
    private @Nullable Object isEspEnabled;

    /**
     * @return Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean.
     * 
     */
    public Optional<Object> isEspEnabled() {
        return Optional.ofNullable(this.isEspEnabled);
    }

    /**
     * The Azure Storage linked service reference.
     * 
     */
    @Import(name="linkedServiceName")
    private @Nullable LinkedServiceReferenceResponse linkedServiceName;

    /**
     * @return The Azure Storage linked service reference.
     * 
     */
    public Optional<LinkedServiceReferenceResponse> linkedServiceName() {
        return Optional.ofNullable(this.linkedServiceName);
    }

    /**
     * Parameters for linked service.
     * 
     */
    @Import(name="parameters")
    private @Nullable Map<String,ParameterSpecificationResponse> parameters;

    /**
     * @return Parameters for linked service.
     * 
     */
    public Optional<Map<String,ParameterSpecificationResponse>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * HDInsight cluster password.
     * 
     */
    @Import(name="password")
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password;

    /**
     * @return HDInsight cluster password.
     * 
     */
    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Type of linked service.
     * Expected value is &#39;HDInsight&#39;.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Type of linked service.
     * Expected value is &#39;HDInsight&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * HDInsight cluster user name. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="userName")
    private @Nullable Object userName;

    /**
     * @return HDInsight cluster user name. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> userName() {
        return Optional.ofNullable(this.userName);
    }

    private HDInsightLinkedServiceResponse() {}

    private HDInsightLinkedServiceResponse(HDInsightLinkedServiceResponse $) {
        this.annotations = $.annotations;
        this.clusterUri = $.clusterUri;
        this.connectVia = $.connectVia;
        this.description = $.description;
        this.encryptedCredential = $.encryptedCredential;
        this.fileSystem = $.fileSystem;
        this.hcatalogLinkedServiceName = $.hcatalogLinkedServiceName;
        this.isEspEnabled = $.isEspEnabled;
        this.linkedServiceName = $.linkedServiceName;
        this.parameters = $.parameters;
        this.password = $.password;
        this.type = $.type;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HDInsightLinkedServiceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HDInsightLinkedServiceResponse $;

        public Builder() {
            $ = new HDInsightLinkedServiceResponse();
        }

        public Builder(HDInsightLinkedServiceResponse defaults) {
            $ = new HDInsightLinkedServiceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations List of tags that can be used for describing the linked service.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable List<Object> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations List of tags that can be used for describing the linked service.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Object... annotations) {
            return annotations(List.of(annotations));
        }

        /**
         * @param clusterUri HDInsight cluster URI. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder clusterUri(Object clusterUri) {
            $.clusterUri = clusterUri;
            return this;
        }

        /**
         * @param connectVia The integration runtime reference.
         * 
         * @return builder
         * 
         */
        public Builder connectVia(@Nullable IntegrationRuntimeReferenceResponse connectVia) {
            $.connectVia = connectVia;
            return this;
        }

        /**
         * @param description Linked service description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param encryptedCredential The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder encryptedCredential(@Nullable Object encryptedCredential) {
            $.encryptedCredential = encryptedCredential;
            return this;
        }

        /**
         * @param fileSystem Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder fileSystem(@Nullable Object fileSystem) {
            $.fileSystem = fileSystem;
            return this;
        }

        /**
         * @param hcatalogLinkedServiceName A reference to the Azure SQL linked service that points to the HCatalog database.
         * 
         * @return builder
         * 
         */
        public Builder hcatalogLinkedServiceName(@Nullable LinkedServiceReferenceResponse hcatalogLinkedServiceName) {
            $.hcatalogLinkedServiceName = hcatalogLinkedServiceName;
            return this;
        }

        /**
         * @param isEspEnabled Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean.
         * 
         * @return builder
         * 
         */
        public Builder isEspEnabled(@Nullable Object isEspEnabled) {
            $.isEspEnabled = isEspEnabled;
            return this;
        }

        /**
         * @param linkedServiceName The Azure Storage linked service reference.
         * 
         * @return builder
         * 
         */
        public Builder linkedServiceName(@Nullable LinkedServiceReferenceResponse linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        /**
         * @param parameters Parameters for linked service.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Map<String,ParameterSpecificationResponse> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param password HDInsight cluster password.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password HDInsight cluster password.
         * 
         * @return builder
         * 
         */
        public Builder password(AzureKeyVaultSecretReferenceResponse password) {
            return password(Either.ofLeft(password));
        }

        /**
         * @param password HDInsight cluster password.
         * 
         * @return builder
         * 
         */
        public Builder password(SecureStringResponse password) {
            return password(Either.ofRight(password));
        }

        /**
         * @param type Type of linked service.
         * Expected value is &#39;HDInsight&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param userName HDInsight cluster user name. Type: string (or Expression with resultType string).
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Object userName) {
            $.userName = userName;
            return this;
        }

        public HDInsightLinkedServiceResponse build() {
            $.clusterUri = Objects.requireNonNull($.clusterUri, "expected parameter 'clusterUri' to be non-null");
            $.type = Codegen.stringProp("type").arg($.type).require();
            return $;
        }
    }

}
