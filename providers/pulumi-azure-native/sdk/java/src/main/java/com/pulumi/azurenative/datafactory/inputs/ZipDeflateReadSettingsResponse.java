// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The ZipDeflate compression read settings.
 * 
 */
public final class ZipDeflateReadSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ZipDeflateReadSettingsResponse Empty = new ZipDeflateReadSettingsResponse();

    /**
     * Preserve the zip file name as folder path. Type: boolean (or Expression with resultType boolean).
     * 
     */
    @Import(name="preserveZipFileNameAsFolder")
      private final @Nullable Object preserveZipFileNameAsFolder;

    public Optional<Object> preserveZipFileNameAsFolder() {
        return this.preserveZipFileNameAsFolder == null ? Optional.empty() : Optional.ofNullable(this.preserveZipFileNameAsFolder);
    }

    /**
     * The Compression setting type.
     * Expected value is 'ZipDeflateReadSettings'.
     * 
     */
    @Import(name="type", required=true)
      private final String type;

    public String type() {
        return this.type;
    }

    public ZipDeflateReadSettingsResponse(
        @Nullable Object preserveZipFileNameAsFolder,
        String type) {
        this.preserveZipFileNameAsFolder = preserveZipFileNameAsFolder;
        this.type = Codegen.stringProp("type").arg(type).require();
    }

    private ZipDeflateReadSettingsResponse() {
        this.preserveZipFileNameAsFolder = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZipDeflateReadSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Object preserveZipFileNameAsFolder;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ZipDeflateReadSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.preserveZipFileNameAsFolder = defaults.preserveZipFileNameAsFolder;
    	      this.type = defaults.type;
        }

        public Builder preserveZipFileNameAsFolder(@Nullable Object preserveZipFileNameAsFolder) {
            this.preserveZipFileNameAsFolder = preserveZipFileNameAsFolder;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public ZipDeflateReadSettingsResponse build() {
            return new ZipDeflateReadSettingsResponse(preserveZipFileNameAsFolder, type);
        }
    }
}
