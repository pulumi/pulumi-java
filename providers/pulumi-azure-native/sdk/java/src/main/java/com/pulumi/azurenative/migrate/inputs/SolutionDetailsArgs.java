// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class representing the details of the solution.
 * 
 */
public final class SolutionDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SolutionDetailsArgs Empty = new SolutionDetailsArgs();

    /**
     * Gets or sets the count of assessments reported by the solution.
     * 
     */
    @Import(name="assessmentCount")
    private @Nullable Output<Integer> assessmentCount;

    /**
     * @return Gets or sets the count of assessments reported by the solution.
     * 
     */
    public Optional<Output<Integer>> assessmentCount() {
        return Optional.ofNullable(this.assessmentCount);
    }

    /**
     * Gets or sets the extended details reported by the solution.
     * 
     */
    @Import(name="extendedDetails")
    private @Nullable Output<Map<String,String>> extendedDetails;

    /**
     * @return Gets or sets the extended details reported by the solution.
     * 
     */
    public Optional<Output<Map<String,String>>> extendedDetails() {
        return Optional.ofNullable(this.extendedDetails);
    }

    /**
     * Gets or sets the count of groups reported by the solution.
     * 
     */
    @Import(name="groupCount")
    private @Nullable Output<Integer> groupCount;

    /**
     * @return Gets or sets the count of groups reported by the solution.
     * 
     */
    public Optional<Output<Integer>> groupCount() {
        return Optional.ofNullable(this.groupCount);
    }

    private SolutionDetailsArgs() {}

    private SolutionDetailsArgs(SolutionDetailsArgs $) {
        this.assessmentCount = $.assessmentCount;
        this.extendedDetails = $.extendedDetails;
        this.groupCount = $.groupCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SolutionDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SolutionDetailsArgs $;

        public Builder() {
            $ = new SolutionDetailsArgs();
        }

        public Builder(SolutionDetailsArgs defaults) {
            $ = new SolutionDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assessmentCount Gets or sets the count of assessments reported by the solution.
         * 
         * @return builder
         * 
         */
        public Builder assessmentCount(@Nullable Output<Integer> assessmentCount) {
            $.assessmentCount = assessmentCount;
            return this;
        }

        /**
         * @param assessmentCount Gets or sets the count of assessments reported by the solution.
         * 
         * @return builder
         * 
         */
        public Builder assessmentCount(Integer assessmentCount) {
            return assessmentCount(Output.of(assessmentCount));
        }

        /**
         * @param extendedDetails Gets or sets the extended details reported by the solution.
         * 
         * @return builder
         * 
         */
        public Builder extendedDetails(@Nullable Output<Map<String,String>> extendedDetails) {
            $.extendedDetails = extendedDetails;
            return this;
        }

        /**
         * @param extendedDetails Gets or sets the extended details reported by the solution.
         * 
         * @return builder
         * 
         */
        public Builder extendedDetails(Map<String,String> extendedDetails) {
            return extendedDetails(Output.of(extendedDetails));
        }

        /**
         * @param groupCount Gets or sets the count of groups reported by the solution.
         * 
         * @return builder
         * 
         */
        public Builder groupCount(@Nullable Output<Integer> groupCount) {
            $.groupCount = groupCount;
            return this;
        }

        /**
         * @param groupCount Gets or sets the count of groups reported by the solution.
         * 
         * @return builder
         * 
         */
        public Builder groupCount(Integer groupCount) {
            return groupCount(Output.of(groupCount));
        }

        public SolutionDetailsArgs build() {
            return $;
        }
    }

}
