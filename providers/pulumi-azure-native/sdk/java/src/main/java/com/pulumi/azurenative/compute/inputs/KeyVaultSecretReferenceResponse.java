// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.inputs;

import com.pulumi.azurenative.compute.inputs.SubResourceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Describes a reference to Key Vault Secret
 * 
 */
public final class KeyVaultSecretReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final KeyVaultSecretReferenceResponse Empty = new KeyVaultSecretReferenceResponse();

    /**
     * The URL referencing a secret in a Key Vault.
     * 
     */
    @Import(name="secretUrl", required=true)
    private String secretUrl;

    public String secretUrl() {
        return this.secretUrl;
    }

    /**
     * The relative URL of the Key Vault containing the secret.
     * 
     */
    @Import(name="sourceVault", required=true)
    private SubResourceResponse sourceVault;

    public SubResourceResponse sourceVault() {
        return this.sourceVault;
    }

    private KeyVaultSecretReferenceResponse() {}

    private KeyVaultSecretReferenceResponse(KeyVaultSecretReferenceResponse $) {
        this.secretUrl = $.secretUrl;
        this.sourceVault = $.sourceVault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyVaultSecretReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVaultSecretReferenceResponse $;

        public Builder() {
            $ = new KeyVaultSecretReferenceResponse();
        }

        public Builder(KeyVaultSecretReferenceResponse defaults) {
            $ = new KeyVaultSecretReferenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder secretUrl(String secretUrl) {
            $.secretUrl = secretUrl;
            return this;
        }

        public Builder sourceVault(SubResourceResponse sourceVault) {
            $.sourceVault = sourceVault;
            return this;
        }

        public KeyVaultSecretReferenceResponse build() {
            $.secretUrl = Objects.requireNonNull($.secretUrl, "expected parameter 'secretUrl' to be non-null");
            $.sourceVault = Objects.requireNonNull($.sourceVault, "expected parameter 'sourceVault' to be non-null");
            return $;
        }
    }

}
