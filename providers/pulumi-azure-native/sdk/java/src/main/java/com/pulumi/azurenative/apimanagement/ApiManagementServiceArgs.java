// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement;

import com.pulumi.azurenative.apimanagement.enums.VirtualNetworkType;
import com.pulumi.azurenative.apimanagement.inputs.AdditionalLocationArgs;
import com.pulumi.azurenative.apimanagement.inputs.ApiManagementServiceIdentityArgs;
import com.pulumi.azurenative.apimanagement.inputs.ApiManagementServiceSkuPropertiesArgs;
import com.pulumi.azurenative.apimanagement.inputs.ApiVersionConstraintArgs;
import com.pulumi.azurenative.apimanagement.inputs.CertificateConfigurationArgs;
import com.pulumi.azurenative.apimanagement.inputs.HostnameConfigurationArgs;
import com.pulumi.azurenative.apimanagement.inputs.VirtualNetworkConfigurationArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiManagementServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiManagementServiceArgs Empty = new ApiManagementServiceArgs();

    /**
     * Additional datacenter locations of the API Management service.
     * 
     */
    @Import(name="additionalLocations")
    private @Nullable Output<List<AdditionalLocationArgs>> additionalLocations;

    public Optional<Output<List<AdditionalLocationArgs>>> additionalLocations() {
        return Optional.ofNullable(this.additionalLocations);
    }

    /**
     * Control Plane Apis version constraint for the API Management service.
     * 
     */
    @Import(name="apiVersionConstraint")
    private @Nullable Output<ApiVersionConstraintArgs> apiVersionConstraint;

    public Optional<Output<ApiVersionConstraintArgs>> apiVersionConstraint() {
        return Optional.ofNullable(this.apiVersionConstraint);
    }

    /**
     * List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
     * 
     */
    @Import(name="certificates")
    private @Nullable Output<List<CertificateConfigurationArgs>> certificates;

    public Optional<Output<List<CertificateConfigurationArgs>>> certificates() {
        return Optional.ofNullable(this.certificates);
    }

    /**
     * Custom properties of the API Management service.&lt;/br&gt;Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).&lt;/br&gt;Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.&lt;/br&gt;Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.&lt;/br&gt;Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.&lt;/br&gt;Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.&lt;/br&gt;Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.&lt;/br&gt;Not specifying any of these properties on PATCH operation will reset omitted properties&#39; values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting&#39;s default value is `False`.&lt;/br&gt;&lt;/br&gt;You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.  Note: next ciphers can&#39;t be disabled since they are required by Azure CloudService internal components: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384
     * 
     */
    @Import(name="customProperties")
    private @Nullable Output<Map<String,String>> customProperties;

    public Optional<Output<Map<String,String>>> customProperties() {
        return Optional.ofNullable(this.customProperties);
    }

    /**
     * Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region.
     * 
     */
    @Import(name="disableGateway")
    private @Nullable Output<Boolean> disableGateway;

    public Optional<Output<Boolean>> disableGateway() {
        return Optional.ofNullable(this.disableGateway);
    }

    /**
     * Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.
     * 
     */
    @Import(name="enableClientCertificate")
    private @Nullable Output<Boolean> enableClientCertificate;

    public Optional<Output<Boolean>> enableClientCertificate() {
        return Optional.ofNullable(this.enableClientCertificate);
    }

    /**
     * Custom hostname configuration of the API Management service.
     * 
     */
    @Import(name="hostnameConfigurations")
    private @Nullable Output<List<HostnameConfigurationArgs>> hostnameConfigurations;

    public Optional<Output<List<HostnameConfigurationArgs>>> hostnameConfigurations() {
        return Optional.ofNullable(this.hostnameConfigurations);
    }

    /**
     * Managed service identity of the Api Management service.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<ApiManagementServiceIdentityArgs> identity;

    public Optional<Output<ApiManagementServiceIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Email address from which the notification will be sent.
     * 
     */
    @Import(name="notificationSenderEmail")
    private @Nullable Output<String> notificationSenderEmail;

    public Optional<Output<String>> notificationSenderEmail() {
        return Optional.ofNullable(this.notificationSenderEmail);
    }

    /**
     * Publisher email.
     * 
     */
    @Import(name="publisherEmail", required=true)
    private Output<String> publisherEmail;

    public Output<String> publisherEmail() {
        return this.publisherEmail;
    }

    /**
     * Publisher name.
     * 
     */
    @Import(name="publisherName", required=true)
    private Output<String> publisherName;

    public Output<String> publisherName() {
        return this.publisherName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Undelete Api Management Service if it was previously soft-deleted. If this flag is specified and set to True all other properties will be ignored.
     * 
     */
    @Import(name="restore")
    private @Nullable Output<Boolean> restore;

    public Optional<Output<Boolean>> restore() {
        return Optional.ofNullable(this.restore);
    }

    /**
     * The name of the API Management service.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * SKU properties of the API Management service.
     * 
     */
    @Import(name="sku", required=true)
    private Output<ApiManagementServiceSkuPropertiesArgs> sku;

    public Output<ApiManagementServiceSkuPropertiesArgs> sku() {
        return this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Virtual network configuration of the API Management service.
     * 
     */
    @Import(name="virtualNetworkConfiguration")
    private @Nullable Output<VirtualNetworkConfigurationArgs> virtualNetworkConfiguration;

    public Optional<Output<VirtualNetworkConfigurationArgs>> virtualNetworkConfiguration() {
        return Optional.ofNullable(this.virtualNetworkConfiguration);
    }

    /**
     * The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
     * 
     */
    @Import(name="virtualNetworkType")
    private @Nullable Output<Either<String,VirtualNetworkType>> virtualNetworkType;

    public Optional<Output<Either<String,VirtualNetworkType>>> virtualNetworkType() {
        return Optional.ofNullable(this.virtualNetworkType);
    }

    /**
     * A list of availability zones denoting where the resource needs to come from.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private ApiManagementServiceArgs() {}

    private ApiManagementServiceArgs(ApiManagementServiceArgs $) {
        this.additionalLocations = $.additionalLocations;
        this.apiVersionConstraint = $.apiVersionConstraint;
        this.certificates = $.certificates;
        this.customProperties = $.customProperties;
        this.disableGateway = $.disableGateway;
        this.enableClientCertificate = $.enableClientCertificate;
        this.hostnameConfigurations = $.hostnameConfigurations;
        this.identity = $.identity;
        this.location = $.location;
        this.notificationSenderEmail = $.notificationSenderEmail;
        this.publisherEmail = $.publisherEmail;
        this.publisherName = $.publisherName;
        this.resourceGroupName = $.resourceGroupName;
        this.restore = $.restore;
        this.serviceName = $.serviceName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.virtualNetworkConfiguration = $.virtualNetworkConfiguration;
        this.virtualNetworkType = $.virtualNetworkType;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiManagementServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiManagementServiceArgs $;

        public Builder() {
            $ = new ApiManagementServiceArgs();
        }

        public Builder(ApiManagementServiceArgs defaults) {
            $ = new ApiManagementServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalLocations(@Nullable Output<List<AdditionalLocationArgs>> additionalLocations) {
            $.additionalLocations = additionalLocations;
            return this;
        }

        public Builder additionalLocations(List<AdditionalLocationArgs> additionalLocations) {
            return additionalLocations(Output.of(additionalLocations));
        }

        public Builder additionalLocations(AdditionalLocationArgs... additionalLocations) {
            return additionalLocations(List.of(additionalLocations));
        }

        public Builder apiVersionConstraint(@Nullable Output<ApiVersionConstraintArgs> apiVersionConstraint) {
            $.apiVersionConstraint = apiVersionConstraint;
            return this;
        }

        public Builder apiVersionConstraint(ApiVersionConstraintArgs apiVersionConstraint) {
            return apiVersionConstraint(Output.of(apiVersionConstraint));
        }

        public Builder certificates(@Nullable Output<List<CertificateConfigurationArgs>> certificates) {
            $.certificates = certificates;
            return this;
        }

        public Builder certificates(List<CertificateConfigurationArgs> certificates) {
            return certificates(Output.of(certificates));
        }

        public Builder certificates(CertificateConfigurationArgs... certificates) {
            return certificates(List.of(certificates));
        }

        public Builder customProperties(@Nullable Output<Map<String,String>> customProperties) {
            $.customProperties = customProperties;
            return this;
        }

        public Builder customProperties(Map<String,String> customProperties) {
            return customProperties(Output.of(customProperties));
        }

        public Builder disableGateway(@Nullable Output<Boolean> disableGateway) {
            $.disableGateway = disableGateway;
            return this;
        }

        public Builder disableGateway(Boolean disableGateway) {
            return disableGateway(Output.of(disableGateway));
        }

        public Builder enableClientCertificate(@Nullable Output<Boolean> enableClientCertificate) {
            $.enableClientCertificate = enableClientCertificate;
            return this;
        }

        public Builder enableClientCertificate(Boolean enableClientCertificate) {
            return enableClientCertificate(Output.of(enableClientCertificate));
        }

        public Builder hostnameConfigurations(@Nullable Output<List<HostnameConfigurationArgs>> hostnameConfigurations) {
            $.hostnameConfigurations = hostnameConfigurations;
            return this;
        }

        public Builder hostnameConfigurations(List<HostnameConfigurationArgs> hostnameConfigurations) {
            return hostnameConfigurations(Output.of(hostnameConfigurations));
        }

        public Builder hostnameConfigurations(HostnameConfigurationArgs... hostnameConfigurations) {
            return hostnameConfigurations(List.of(hostnameConfigurations));
        }

        public Builder identity(@Nullable Output<ApiManagementServiceIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(ApiManagementServiceIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder notificationSenderEmail(@Nullable Output<String> notificationSenderEmail) {
            $.notificationSenderEmail = notificationSenderEmail;
            return this;
        }

        public Builder notificationSenderEmail(String notificationSenderEmail) {
            return notificationSenderEmail(Output.of(notificationSenderEmail));
        }

        public Builder publisherEmail(Output<String> publisherEmail) {
            $.publisherEmail = publisherEmail;
            return this;
        }

        public Builder publisherEmail(String publisherEmail) {
            return publisherEmail(Output.of(publisherEmail));
        }

        public Builder publisherName(Output<String> publisherName) {
            $.publisherName = publisherName;
            return this;
        }

        public Builder publisherName(String publisherName) {
            return publisherName(Output.of(publisherName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder restore(@Nullable Output<Boolean> restore) {
            $.restore = restore;
            return this;
        }

        public Builder restore(Boolean restore) {
            return restore(Output.of(restore));
        }

        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public Builder sku(Output<ApiManagementServiceSkuPropertiesArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(ApiManagementServiceSkuPropertiesArgs sku) {
            return sku(Output.of(sku));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder virtualNetworkConfiguration(@Nullable Output<VirtualNetworkConfigurationArgs> virtualNetworkConfiguration) {
            $.virtualNetworkConfiguration = virtualNetworkConfiguration;
            return this;
        }

        public Builder virtualNetworkConfiguration(VirtualNetworkConfigurationArgs virtualNetworkConfiguration) {
            return virtualNetworkConfiguration(Output.of(virtualNetworkConfiguration));
        }

        public Builder virtualNetworkType(@Nullable Output<Either<String,VirtualNetworkType>> virtualNetworkType) {
            $.virtualNetworkType = virtualNetworkType;
            return this;
        }

        public Builder virtualNetworkType(Either<String,VirtualNetworkType> virtualNetworkType) {
            return virtualNetworkType(Output.of(virtualNetworkType));
        }

        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public ApiManagementServiceArgs build() {
            $.disableGateway = Codegen.booleanProp("disableGateway").output().arg($.disableGateway).def(false).getNullable();
            $.enableClientCertificate = Codegen.booleanProp("enableClientCertificate").output().arg($.enableClientCertificate).def(false).getNullable();
            $.publisherEmail = Objects.requireNonNull($.publisherEmail, "expected parameter 'publisherEmail' to be non-null");
            $.publisherName = Objects.requireNonNull($.publisherName, "expected parameter 'publisherName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.restore = Codegen.booleanProp("restore").output().arg($.restore).def(false).getNullable();
            $.sku = Objects.requireNonNull($.sku, "expected parameter 'sku' to be non-null");
            $.virtualNetworkType = Codegen.stringProp("virtualNetworkType").left(VirtualNetworkType.class).output().arg($.virtualNetworkType).def("None").getNullable();
            return $;
        }
    }

}
