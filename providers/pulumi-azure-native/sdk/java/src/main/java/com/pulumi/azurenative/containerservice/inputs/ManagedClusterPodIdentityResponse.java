// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.inputs;

import com.pulumi.azurenative.containerservice.inputs.ManagedClusterPodIdentityResponseProvisioningInfo;
import com.pulumi.azurenative.containerservice.inputs.UserAssignedIdentityResponse;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedClusterPodIdentityResponse extends com.pulumi.resources.InvokeArgs {

    public static final ManagedClusterPodIdentityResponse Empty = new ManagedClusterPodIdentityResponse();

    /**
     * Binding selector to use for the AzureIdentityBinding resource.
     * 
     */
    @Import(name="bindingSelector")
    private @Nullable String bindingSelector;

    public Optional<String> bindingSelector() {
        return Optional.ofNullable(this.bindingSelector);
    }

    /**
     * Information of the user assigned identity.
     * 
     */
    @Import(name="identity", required=true)
    private UserAssignedIdentityResponse identity;

    public UserAssignedIdentityResponse identity() {
        return this.identity;
    }

    /**
     * Name of the pod identity.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Namespace of the pod identity.
     * 
     */
    @Import(name="namespace", required=true)
    private String namespace;

    public String namespace() {
        return this.namespace;
    }

    @Import(name="provisioningInfo", required=true)
    private ManagedClusterPodIdentityResponseProvisioningInfo provisioningInfo;

    public ManagedClusterPodIdentityResponseProvisioningInfo provisioningInfo() {
        return this.provisioningInfo;
    }

    /**
     * The current provisioning state of the pod identity.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    private ManagedClusterPodIdentityResponse() {}

    private ManagedClusterPodIdentityResponse(ManagedClusterPodIdentityResponse $) {
        this.bindingSelector = $.bindingSelector;
        this.identity = $.identity;
        this.name = $.name;
        this.namespace = $.namespace;
        this.provisioningInfo = $.provisioningInfo;
        this.provisioningState = $.provisioningState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedClusterPodIdentityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedClusterPodIdentityResponse $;

        public Builder() {
            $ = new ManagedClusterPodIdentityResponse();
        }

        public Builder(ManagedClusterPodIdentityResponse defaults) {
            $ = new ManagedClusterPodIdentityResponse(Objects.requireNonNull(defaults));
        }

        public Builder bindingSelector(@Nullable String bindingSelector) {
            $.bindingSelector = bindingSelector;
            return this;
        }

        public Builder identity(UserAssignedIdentityResponse identity) {
            $.identity = identity;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder namespace(String namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder provisioningInfo(ManagedClusterPodIdentityResponseProvisioningInfo provisioningInfo) {
            $.provisioningInfo = provisioningInfo;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public ManagedClusterPodIdentityResponse build() {
            $.identity = Objects.requireNonNull($.identity, "expected parameter 'identity' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            $.provisioningInfo = Objects.requireNonNull($.provisioningInfo, "expected parameter 'provisioningInfo' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
