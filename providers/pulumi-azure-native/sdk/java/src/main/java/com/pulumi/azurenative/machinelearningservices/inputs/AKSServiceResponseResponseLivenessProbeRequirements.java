// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The liveness probe requirements.
 * 
 */
public final class AKSServiceResponseResponseLivenessProbeRequirements extends com.pulumi.resources.InvokeArgs {

    public static final AKSServiceResponseResponseLivenessProbeRequirements Empty = new AKSServiceResponseResponseLivenessProbeRequirements();

    /**
     * The number of failures to allow before returning an unhealthy status.
     * 
     */
    @Import(name="failureThreshold")
    private @Nullable Integer failureThreshold;

    public Optional<Integer> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }

    /**
     * The delay before the first probe in seconds.
     * 
     */
    @Import(name="initialDelaySeconds")
    private @Nullable Integer initialDelaySeconds;

    public Optional<Integer> initialDelaySeconds() {
        return Optional.ofNullable(this.initialDelaySeconds);
    }

    /**
     * The length of time between probes in seconds.
     * 
     */
    @Import(name="periodSeconds")
    private @Nullable Integer periodSeconds;

    public Optional<Integer> periodSeconds() {
        return Optional.ofNullable(this.periodSeconds);
    }

    /**
     * The number of successful probes before returning a healthy status.
     * 
     */
    @Import(name="successThreshold")
    private @Nullable Integer successThreshold;

    public Optional<Integer> successThreshold() {
        return Optional.ofNullable(this.successThreshold);
    }

    /**
     * The probe timeout in seconds.
     * 
     */
    @Import(name="timeoutSeconds")
    private @Nullable Integer timeoutSeconds;

    public Optional<Integer> timeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }

    private AKSServiceResponseResponseLivenessProbeRequirements() {}

    private AKSServiceResponseResponseLivenessProbeRequirements(AKSServiceResponseResponseLivenessProbeRequirements $) {
        this.failureThreshold = $.failureThreshold;
        this.initialDelaySeconds = $.initialDelaySeconds;
        this.periodSeconds = $.periodSeconds;
        this.successThreshold = $.successThreshold;
        this.timeoutSeconds = $.timeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AKSServiceResponseResponseLivenessProbeRequirements defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AKSServiceResponseResponseLivenessProbeRequirements $;

        public Builder() {
            $ = new AKSServiceResponseResponseLivenessProbeRequirements();
        }

        public Builder(AKSServiceResponseResponseLivenessProbeRequirements defaults) {
            $ = new AKSServiceResponseResponseLivenessProbeRequirements(Objects.requireNonNull(defaults));
        }

        public Builder failureThreshold(@Nullable Integer failureThreshold) {
            $.failureThreshold = failureThreshold;
            return this;
        }

        public Builder initialDelaySeconds(@Nullable Integer initialDelaySeconds) {
            $.initialDelaySeconds = initialDelaySeconds;
            return this;
        }

        public Builder periodSeconds(@Nullable Integer periodSeconds) {
            $.periodSeconds = periodSeconds;
            return this;
        }

        public Builder successThreshold(@Nullable Integer successThreshold) {
            $.successThreshold = successThreshold;
            return this;
        }

        public Builder timeoutSeconds(@Nullable Integer timeoutSeconds) {
            $.timeoutSeconds = timeoutSeconds;
            return this;
        }

        public AKSServiceResponseResponseLivenessProbeRequirements build() {
            return $;
        }
    }

}
