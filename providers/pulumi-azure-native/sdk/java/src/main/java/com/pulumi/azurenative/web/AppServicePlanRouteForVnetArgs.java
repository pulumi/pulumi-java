// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web;

import com.pulumi.azurenative.web.enums.RouteType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppServicePlanRouteForVnetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppServicePlanRouteForVnetArgs Empty = new AppServicePlanRouteForVnetArgs();

    /**
     * The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
     * 
     */
    @Import(name="endAddress")
    private @Nullable Output<String> endAddress;

    public Optional<Output<String>> endAddress() {
        return Optional.ofNullable(this.endAddress);
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Name of the App Service plan.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the Virtual Network route.
     * 
     */
    @Import(name="routeName")
    private @Nullable Output<String> routeName;

    public Optional<Output<String>> routeName() {
        return Optional.ofNullable(this.routeName);
    }

    /**
     * The type of route this is:
     * DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
     * INHERITED - Routes inherited from the real Virtual Network routes
     * STATIC - Static route set on the app only
     * 
     * These values will be used for syncing an app&#39;s routes with those from a Virtual Network.
     * 
     */
    @Import(name="routeType")
    private @Nullable Output<Either<String,RouteType>> routeType;

    public Optional<Output<Either<String,RouteType>>> routeType() {
        return Optional.ofNullable(this.routeType);
    }

    /**
     * The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
     * 
     */
    @Import(name="startAddress")
    private @Nullable Output<String> startAddress;

    public Optional<Output<String>> startAddress() {
        return Optional.ofNullable(this.startAddress);
    }

    /**
     * Name of the Virtual Network.
     * 
     */
    @Import(name="vnetName", required=true)
    private Output<String> vnetName;

    public Output<String> vnetName() {
        return this.vnetName;
    }

    private AppServicePlanRouteForVnetArgs() {}

    private AppServicePlanRouteForVnetArgs(AppServicePlanRouteForVnetArgs $) {
        this.endAddress = $.endAddress;
        this.kind = $.kind;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.routeName = $.routeName;
        this.routeType = $.routeType;
        this.startAddress = $.startAddress;
        this.vnetName = $.vnetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppServicePlanRouteForVnetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppServicePlanRouteForVnetArgs $;

        public Builder() {
            $ = new AppServicePlanRouteForVnetArgs();
        }

        public Builder(AppServicePlanRouteForVnetArgs defaults) {
            $ = new AppServicePlanRouteForVnetArgs(Objects.requireNonNull(defaults));
        }

        public Builder endAddress(@Nullable Output<String> endAddress) {
            $.endAddress = endAddress;
            return this;
        }

        public Builder endAddress(String endAddress) {
            return endAddress(Output.of(endAddress));
        }

        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder routeName(@Nullable Output<String> routeName) {
            $.routeName = routeName;
            return this;
        }

        public Builder routeName(String routeName) {
            return routeName(Output.of(routeName));
        }

        public Builder routeType(@Nullable Output<Either<String,RouteType>> routeType) {
            $.routeType = routeType;
            return this;
        }

        public Builder routeType(Either<String,RouteType> routeType) {
            return routeType(Output.of(routeType));
        }

        public Builder routeType(String routeType) {
            return routeType(Either.ofLeft(routeType));
        }

        public Builder routeType(RouteType routeType) {
            return routeType(Either.ofRight(routeType));
        }

        public Builder startAddress(@Nullable Output<String> startAddress) {
            $.startAddress = startAddress;
            return this;
        }

        public Builder startAddress(String startAddress) {
            return startAddress(Output.of(startAddress));
        }

        public Builder vnetName(Output<String> vnetName) {
            $.vnetName = vnetName;
            return this;
        }

        public Builder vnetName(String vnetName) {
            return vnetName(Output.of(vnetName));
        }

        public AppServicePlanRouteForVnetArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.vnetName = Objects.requireNonNull($.vnetName, "expected parameter 'vnetName' to be non-null");
            return $;
        }
    }

}
