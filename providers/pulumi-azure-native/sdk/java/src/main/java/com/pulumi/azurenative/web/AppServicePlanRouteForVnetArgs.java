// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web;

import com.pulumi.azurenative.web.enums.RouteType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppServicePlanRouteForVnetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppServicePlanRouteForVnetArgs Empty = new AppServicePlanRouteForVnetArgs();

    /**
     * The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
     * 
     */
    @Import(name="endAddress")
      private final @Nullable Output<String> endAddress;

    public Output<String> endAddress() {
        return this.endAddress == null ? Codegen.empty() : this.endAddress;
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<String> kind;

    public Output<String> kind() {
        return this.kind == null ? Codegen.empty() : this.kind;
    }

    /**
     * Name of the App Service plan.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the Virtual Network route.
     * 
     */
    @Import(name="routeName")
      private final @Nullable Output<String> routeName;

    public Output<String> routeName() {
        return this.routeName == null ? Codegen.empty() : this.routeName;
    }

    /**
     * The type of route this is:
     * DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
     * INHERITED - Routes inherited from the real Virtual Network routes
     * STATIC - Static route set on the app only
     * 
     * These values will be used for syncing an app's routes with those from a Virtual Network.
     * 
     */
    @Import(name="routeType")
      private final @Nullable Output<Either<String,RouteType>> routeType;

    public Output<Either<String,RouteType>> routeType() {
        return this.routeType == null ? Codegen.empty() : this.routeType;
    }

    /**
     * The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
     * 
     */
    @Import(name="startAddress")
      private final @Nullable Output<String> startAddress;

    public Output<String> startAddress() {
        return this.startAddress == null ? Codegen.empty() : this.startAddress;
    }

    /**
     * Name of the Virtual Network.
     * 
     */
    @Import(name="vnetName", required=true)
      private final Output<String> vnetName;

    public Output<String> vnetName() {
        return this.vnetName;
    }

    public AppServicePlanRouteForVnetArgs(
        @Nullable Output<String> endAddress,
        @Nullable Output<String> kind,
        Output<String> name,
        Output<String> resourceGroupName,
        @Nullable Output<String> routeName,
        @Nullable Output<Either<String,RouteType>> routeType,
        @Nullable Output<String> startAddress,
        Output<String> vnetName) {
        this.endAddress = endAddress;
        this.kind = kind;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.routeName = routeName;
        this.routeType = routeType;
        this.startAddress = startAddress;
        this.vnetName = Objects.requireNonNull(vnetName, "expected parameter 'vnetName' to be non-null");
    }

    private AppServicePlanRouteForVnetArgs() {
        this.endAddress = Codegen.empty();
        this.kind = Codegen.empty();
        this.name = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.routeName = Codegen.empty();
        this.routeType = Codegen.empty();
        this.startAddress = Codegen.empty();
        this.vnetName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppServicePlanRouteForVnetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> endAddress;
        private @Nullable Output<String> kind;
        private Output<String> name;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> routeName;
        private @Nullable Output<Either<String,RouteType>> routeType;
        private @Nullable Output<String> startAddress;
        private Output<String> vnetName;

        public Builder() {
    	      // Empty
        }

        public Builder(AppServicePlanRouteForVnetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endAddress = defaults.endAddress;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.routeName = defaults.routeName;
    	      this.routeType = defaults.routeType;
    	      this.startAddress = defaults.startAddress;
    	      this.vnetName = defaults.vnetName;
        }

        public Builder endAddress(@Nullable Output<String> endAddress) {
            this.endAddress = endAddress;
            return this;
        }
        public Builder endAddress(@Nullable String endAddress) {
            this.endAddress = Codegen.ofNullable(endAddress);
            return this;
        }
        public Builder kind(@Nullable Output<String> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = Codegen.ofNullable(kind);
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder routeName(@Nullable Output<String> routeName) {
            this.routeName = routeName;
            return this;
        }
        public Builder routeName(@Nullable String routeName) {
            this.routeName = Codegen.ofNullable(routeName);
            return this;
        }
        public Builder routeType(@Nullable Output<Either<String,RouteType>> routeType) {
            this.routeType = routeType;
            return this;
        }
        public Builder routeType(@Nullable Either<String,RouteType> routeType) {
            this.routeType = Codegen.ofNullable(routeType);
            return this;
        }
        public Builder startAddress(@Nullable Output<String> startAddress) {
            this.startAddress = startAddress;
            return this;
        }
        public Builder startAddress(@Nullable String startAddress) {
            this.startAddress = Codegen.ofNullable(startAddress);
            return this;
        }
        public Builder vnetName(Output<String> vnetName) {
            this.vnetName = Objects.requireNonNull(vnetName);
            return this;
        }
        public Builder vnetName(String vnetName) {
            this.vnetName = Output.of(Objects.requireNonNull(vnetName));
            return this;
        }        public AppServicePlanRouteForVnetArgs build() {
            return new AppServicePlanRouteForVnetArgs(endAddress, kind, name, resourceGroupName, routeName, routeType, startAddress, vnetName);
        }
    }
}
