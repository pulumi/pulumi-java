// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * On-prem disk details data.
 * 
 */
public final class DiskDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final DiskDetailsResponse Empty = new DiskDetailsResponse();

    /**
     * The hard disk max size in MB.
     * 
     */
    @Import(name="maxSizeMB")
    private @Nullable Double maxSizeMB;

    /**
     * @return The hard disk max size in MB.
     * 
     */
    public Optional<Double> maxSizeMB() {
        return Optional.ofNullable(this.maxSizeMB);
    }

    /**
     * The VHD Id.
     * 
     */
    @Import(name="vhdId")
    private @Nullable String vhdId;

    /**
     * @return The VHD Id.
     * 
     */
    public Optional<String> vhdId() {
        return Optional.ofNullable(this.vhdId);
    }

    /**
     * The VHD name.
     * 
     */
    @Import(name="vhdName")
    private @Nullable String vhdName;

    /**
     * @return The VHD name.
     * 
     */
    public Optional<String> vhdName() {
        return Optional.ofNullable(this.vhdName);
    }

    /**
     * The type of the volume.
     * 
     */
    @Import(name="vhdType")
    private @Nullable String vhdType;

    /**
     * @return The type of the volume.
     * 
     */
    public Optional<String> vhdType() {
        return Optional.ofNullable(this.vhdType);
    }

    private DiskDetailsResponse() {}

    private DiskDetailsResponse(DiskDetailsResponse $) {
        this.maxSizeMB = $.maxSizeMB;
        this.vhdId = $.vhdId;
        this.vhdName = $.vhdName;
        this.vhdType = $.vhdType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskDetailsResponse $;

        public Builder() {
            $ = new DiskDetailsResponse();
        }

        public Builder(DiskDetailsResponse defaults) {
            $ = new DiskDetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxSizeMB The hard disk max size in MB.
         * 
         * @return builder
         * 
         */
        public Builder maxSizeMB(@Nullable Double maxSizeMB) {
            $.maxSizeMB = maxSizeMB;
            return this;
        }

        /**
         * @param vhdId The VHD Id.
         * 
         * @return builder
         * 
         */
        public Builder vhdId(@Nullable String vhdId) {
            $.vhdId = vhdId;
            return this;
        }

        /**
         * @param vhdName The VHD name.
         * 
         * @return builder
         * 
         */
        public Builder vhdName(@Nullable String vhdName) {
            $.vhdName = vhdName;
            return this;
        }

        /**
         * @param vhdType The type of the volume.
         * 
         * @return builder
         * 
         */
        public Builder vhdType(@Nullable String vhdType) {
            $.vhdType = vhdType;
            return this;
        }

        public DiskDetailsResponse build() {
            return $;
        }
    }

}
