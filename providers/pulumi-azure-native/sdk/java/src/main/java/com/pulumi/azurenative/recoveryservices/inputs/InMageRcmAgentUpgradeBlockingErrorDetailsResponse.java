// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * InMageRcm source agent upgrade blocking error details.
 * 
 */
public final class InMageRcmAgentUpgradeBlockingErrorDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final InMageRcmAgentUpgradeBlockingErrorDetailsResponse Empty = new InMageRcmAgentUpgradeBlockingErrorDetailsResponse();

    /**
     * The error code.
     * 
     */
    @Import(name="errorCode", required=true)
    private String errorCode;

    public String errorCode() {
        return this.errorCode;
    }

    /**
     * The error message.
     * 
     */
    @Import(name="errorMessage", required=true)
    private String errorMessage;

    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * The error message parameters.
     * 
     */
    @Import(name="errorMessageParameters", required=true)
    private Map<String,String> errorMessageParameters;

    public Map<String,String> errorMessageParameters() {
        return this.errorMessageParameters;
    }

    /**
     * The error tags.
     * 
     */
    @Import(name="errorTags", required=true)
    private Map<String,String> errorTags;

    public Map<String,String> errorTags() {
        return this.errorTags;
    }

    /**
     * The possible causes.
     * 
     */
    @Import(name="possibleCauses", required=true)
    private String possibleCauses;

    public String possibleCauses() {
        return this.possibleCauses;
    }

    /**
     * The recommended action.
     * 
     */
    @Import(name="recommendedAction", required=true)
    private String recommendedAction;

    public String recommendedAction() {
        return this.recommendedAction;
    }

    private InMageRcmAgentUpgradeBlockingErrorDetailsResponse() {}

    private InMageRcmAgentUpgradeBlockingErrorDetailsResponse(InMageRcmAgentUpgradeBlockingErrorDetailsResponse $) {
        this.errorCode = $.errorCode;
        this.errorMessage = $.errorMessage;
        this.errorMessageParameters = $.errorMessageParameters;
        this.errorTags = $.errorTags;
        this.possibleCauses = $.possibleCauses;
        this.recommendedAction = $.recommendedAction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InMageRcmAgentUpgradeBlockingErrorDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InMageRcmAgentUpgradeBlockingErrorDetailsResponse $;

        public Builder() {
            $ = new InMageRcmAgentUpgradeBlockingErrorDetailsResponse();
        }

        public Builder(InMageRcmAgentUpgradeBlockingErrorDetailsResponse defaults) {
            $ = new InMageRcmAgentUpgradeBlockingErrorDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder errorCode(String errorCode) {
            $.errorCode = errorCode;
            return this;
        }

        public Builder errorMessage(String errorMessage) {
            $.errorMessage = errorMessage;
            return this;
        }

        public Builder errorMessageParameters(Map<String,String> errorMessageParameters) {
            $.errorMessageParameters = errorMessageParameters;
            return this;
        }

        public Builder errorTags(Map<String,String> errorTags) {
            $.errorTags = errorTags;
            return this;
        }

        public Builder possibleCauses(String possibleCauses) {
            $.possibleCauses = possibleCauses;
            return this;
        }

        public Builder recommendedAction(String recommendedAction) {
            $.recommendedAction = recommendedAction;
            return this;
        }

        public InMageRcmAgentUpgradeBlockingErrorDetailsResponse build() {
            $.errorCode = Objects.requireNonNull($.errorCode, "expected parameter 'errorCode' to be non-null");
            $.errorMessage = Objects.requireNonNull($.errorMessage, "expected parameter 'errorMessage' to be non-null");
            $.errorMessageParameters = Objects.requireNonNull($.errorMessageParameters, "expected parameter 'errorMessageParameters' to be non-null");
            $.errorTags = Objects.requireNonNull($.errorTags, "expected parameter 'errorTags' to be non-null");
            $.possibleCauses = Objects.requireNonNull($.possibleCauses, "expected parameter 'possibleCauses' to be non-null");
            $.recommendedAction = Objects.requireNonNull($.recommendedAction, "expected parameter 'recommendedAction' to be non-null");
            return $;
        }
    }

}
