// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Scaling plan reference to hostpool.
 * 
 */
public final class ScalingHostPoolReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScalingHostPoolReferenceArgs Empty = new ScalingHostPoolReferenceArgs();

    /**
     * Arm path of referenced hostpool.
     * 
     */
    @Import(name="hostPoolArmPath")
    private @Nullable Output<String> hostPoolArmPath;

    /**
     * @return Arm path of referenced hostpool.
     * 
     */
    public Optional<Output<String>> hostPoolArmPath() {
        return Optional.ofNullable(this.hostPoolArmPath);
    }

    /**
     * Is the scaling plan enabled for this hostpool.
     * 
     */
    @Import(name="scalingPlanEnabled")
    private @Nullable Output<Boolean> scalingPlanEnabled;

    /**
     * @return Is the scaling plan enabled for this hostpool.
     * 
     */
    public Optional<Output<Boolean>> scalingPlanEnabled() {
        return Optional.ofNullable(this.scalingPlanEnabled);
    }

    private ScalingHostPoolReferenceArgs() {}

    private ScalingHostPoolReferenceArgs(ScalingHostPoolReferenceArgs $) {
        this.hostPoolArmPath = $.hostPoolArmPath;
        this.scalingPlanEnabled = $.scalingPlanEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScalingHostPoolReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScalingHostPoolReferenceArgs $;

        public Builder() {
            $ = new ScalingHostPoolReferenceArgs();
        }

        public Builder(ScalingHostPoolReferenceArgs defaults) {
            $ = new ScalingHostPoolReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostPoolArmPath Arm path of referenced hostpool.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolArmPath(@Nullable Output<String> hostPoolArmPath) {
            $.hostPoolArmPath = hostPoolArmPath;
            return this;
        }

        /**
         * @param hostPoolArmPath Arm path of referenced hostpool.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolArmPath(String hostPoolArmPath) {
            return hostPoolArmPath(Output.of(hostPoolArmPath));
        }

        /**
         * @param scalingPlanEnabled Is the scaling plan enabled for this hostpool.
         * 
         * @return builder
         * 
         */
        public Builder scalingPlanEnabled(@Nullable Output<Boolean> scalingPlanEnabled) {
            $.scalingPlanEnabled = scalingPlanEnabled;
            return this;
        }

        /**
         * @param scalingPlanEnabled Is the scaling plan enabled for this hostpool.
         * 
         * @return builder
         * 
         */
        public Builder scalingPlanEnabled(Boolean scalingPlanEnabled) {
            return scalingPlanEnabled(Output.of(scalingPlanEnabled));
        }

        public ScalingHostPoolReferenceArgs build() {
            return $;
        }
    }

}
