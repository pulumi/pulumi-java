// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.azurenative.web.inputs.ConnectionGatewayReferenceResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionGatewayDefinitionResponseProperties extends com.pulumi.resources.InvokeArgs {

    public static final ConnectionGatewayDefinitionResponseProperties Empty = new ConnectionGatewayDefinitionResponseProperties();

    /**
     * The URI of the backend
     * 
     */
    @Import(name="backendUri")
    private @Nullable String backendUri;

    /**
     * @return The URI of the backend
     * 
     */
    public Optional<String> backendUri() {
        return Optional.ofNullable(this.backendUri);
    }

    /**
     * The gateway installation reference
     * 
     */
    @Import(name="connectionGatewayInstallation")
    private @Nullable ConnectionGatewayReferenceResponse connectionGatewayInstallation;

    /**
     * @return The gateway installation reference
     * 
     */
    public Optional<ConnectionGatewayReferenceResponse> connectionGatewayInstallation() {
        return Optional.ofNullable(this.connectionGatewayInstallation);
    }

    /**
     * The gateway admin
     * 
     */
    @Import(name="contactInformation")
    private @Nullable List<String> contactInformation;

    /**
     * @return The gateway admin
     * 
     */
    public Optional<List<String>> contactInformation() {
        return Optional.ofNullable(this.contactInformation);
    }

    /**
     * The gateway description
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return The gateway description
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The gateway display name
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return The gateway display name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The machine name of the gateway
     * 
     */
    @Import(name="machineName")
    private @Nullable String machineName;

    /**
     * @return The machine name of the gateway
     * 
     */
    public Optional<String> machineName() {
        return Optional.ofNullable(this.machineName);
    }

    /**
     * The gateway status
     * 
     */
    @Import(name="status")
    private @Nullable Object status;

    /**
     * @return The gateway status
     * 
     */
    public Optional<Object> status() {
        return Optional.ofNullable(this.status);
    }

    private ConnectionGatewayDefinitionResponseProperties() {}

    private ConnectionGatewayDefinitionResponseProperties(ConnectionGatewayDefinitionResponseProperties $) {
        this.backendUri = $.backendUri;
        this.connectionGatewayInstallation = $.connectionGatewayInstallation;
        this.contactInformation = $.contactInformation;
        this.description = $.description;
        this.displayName = $.displayName;
        this.machineName = $.machineName;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionGatewayDefinitionResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionGatewayDefinitionResponseProperties $;

        public Builder() {
            $ = new ConnectionGatewayDefinitionResponseProperties();
        }

        public Builder(ConnectionGatewayDefinitionResponseProperties defaults) {
            $ = new ConnectionGatewayDefinitionResponseProperties(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendUri The URI of the backend
         * 
         * @return builder
         * 
         */
        public Builder backendUri(@Nullable String backendUri) {
            $.backendUri = backendUri;
            return this;
        }

        /**
         * @param connectionGatewayInstallation The gateway installation reference
         * 
         * @return builder
         * 
         */
        public Builder connectionGatewayInstallation(@Nullable ConnectionGatewayReferenceResponse connectionGatewayInstallation) {
            $.connectionGatewayInstallation = connectionGatewayInstallation;
            return this;
        }

        /**
         * @param contactInformation The gateway admin
         * 
         * @return builder
         * 
         */
        public Builder contactInformation(@Nullable List<String> contactInformation) {
            $.contactInformation = contactInformation;
            return this;
        }

        /**
         * @param contactInformation The gateway admin
         * 
         * @return builder
         * 
         */
        public Builder contactInformation(String... contactInformation) {
            return contactInformation(List.of(contactInformation));
        }

        /**
         * @param description The gateway description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param displayName The gateway display name
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param machineName The machine name of the gateway
         * 
         * @return builder
         * 
         */
        public Builder machineName(@Nullable String machineName) {
            $.machineName = machineName;
            return this;
        }

        /**
         * @param status The gateway status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Object status) {
            $.status = status;
            return this;
        }

        public ConnectionGatewayDefinitionResponseProperties build() {
            return $;
        }
    }

}
