// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.inputs;

import com.pulumi.azurenative.documentdb.inputs.ConflictResolutionPolicyResponse;
import com.pulumi.azurenative.documentdb.inputs.ContainerPartitionKeyResponse;
import com.pulumi.azurenative.documentdb.inputs.IndexingPolicyResponse;
import com.pulumi.azurenative.documentdb.inputs.UniqueKeyPolicyResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GremlinGraphGetPropertiesResponseResource extends com.pulumi.resources.InvokeArgs {

    public static final GremlinGraphGetPropertiesResponseResource Empty = new GremlinGraphGetPropertiesResponseResource();

    /**
     * The conflict resolution policy for the graph.
     * 
     */
    @Import(name="conflictResolutionPolicy")
    private @Nullable ConflictResolutionPolicyResponse conflictResolutionPolicy;

    /**
     * @return The conflict resolution policy for the graph.
     * 
     */
    public Optional<ConflictResolutionPolicyResponse> conflictResolutionPolicy() {
        return Optional.ofNullable(this.conflictResolutionPolicy);
    }

    /**
     * Default time to live
     * 
     */
    @Import(name="defaultTtl")
    private @Nullable Integer defaultTtl;

    /**
     * @return Default time to live
     * 
     */
    public Optional<Integer> defaultTtl() {
        return Optional.ofNullable(this.defaultTtl);
    }

    /**
     * A system generated property representing the resource etag required for optimistic concurrency control.
     * 
     */
    @Import(name="etag", required=true)
    private String etag;

    /**
     * @return A system generated property representing the resource etag required for optimistic concurrency control.
     * 
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Name of the Cosmos DB Gremlin graph
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return Name of the Cosmos DB Gremlin graph
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
     * 
     */
    @Import(name="indexingPolicy")
    private @Nullable IndexingPolicyResponse indexingPolicy;

    /**
     * @return The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
     * 
     */
    public Optional<IndexingPolicyResponse> indexingPolicy() {
        return Optional.ofNullable(this.indexingPolicy);
    }

    /**
     * The configuration of the partition key to be used for partitioning data into multiple partitions
     * 
     */
    @Import(name="partitionKey")
    private @Nullable ContainerPartitionKeyResponse partitionKey;

    /**
     * @return The configuration of the partition key to be used for partitioning data into multiple partitions
     * 
     */
    public Optional<ContainerPartitionKeyResponse> partitionKey() {
        return Optional.ofNullable(this.partitionKey);
    }

    /**
     * A system generated property. A unique identifier.
     * 
     */
    @Import(name="rid", required=true)
    private String rid;

    /**
     * @return A system generated property. A unique identifier.
     * 
     */
    public String rid() {
        return this.rid;
    }

    /**
     * A system generated property that denotes the last updated timestamp of the resource.
     * 
     */
    @Import(name="ts", required=true)
    private Double ts;

    /**
     * @return A system generated property that denotes the last updated timestamp of the resource.
     * 
     */
    public Double ts() {
        return this.ts;
    }

    /**
     * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
     * 
     */
    @Import(name="uniqueKeyPolicy")
    private @Nullable UniqueKeyPolicyResponse uniqueKeyPolicy;

    /**
     * @return The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
     * 
     */
    public Optional<UniqueKeyPolicyResponse> uniqueKeyPolicy() {
        return Optional.ofNullable(this.uniqueKeyPolicy);
    }

    private GremlinGraphGetPropertiesResponseResource() {}

    private GremlinGraphGetPropertiesResponseResource(GremlinGraphGetPropertiesResponseResource $) {
        this.conflictResolutionPolicy = $.conflictResolutionPolicy;
        this.defaultTtl = $.defaultTtl;
        this.etag = $.etag;
        this.id = $.id;
        this.indexingPolicy = $.indexingPolicy;
        this.partitionKey = $.partitionKey;
        this.rid = $.rid;
        this.ts = $.ts;
        this.uniqueKeyPolicy = $.uniqueKeyPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GremlinGraphGetPropertiesResponseResource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GremlinGraphGetPropertiesResponseResource $;

        public Builder() {
            $ = new GremlinGraphGetPropertiesResponseResource();
        }

        public Builder(GremlinGraphGetPropertiesResponseResource defaults) {
            $ = new GremlinGraphGetPropertiesResponseResource(Objects.requireNonNull(defaults));
        }

        /**
         * @param conflictResolutionPolicy The conflict resolution policy for the graph.
         * 
         * @return builder
         * 
         */
        public Builder conflictResolutionPolicy(@Nullable ConflictResolutionPolicyResponse conflictResolutionPolicy) {
            $.conflictResolutionPolicy = conflictResolutionPolicy;
            return this;
        }

        /**
         * @param defaultTtl Default time to live
         * 
         * @return builder
         * 
         */
        public Builder defaultTtl(@Nullable Integer defaultTtl) {
            $.defaultTtl = defaultTtl;
            return this;
        }

        /**
         * @param etag A system generated property representing the resource etag required for optimistic concurrency control.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param id Name of the Cosmos DB Gremlin graph
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param indexingPolicy The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
         * 
         * @return builder
         * 
         */
        public Builder indexingPolicy(@Nullable IndexingPolicyResponse indexingPolicy) {
            $.indexingPolicy = indexingPolicy;
            return this;
        }

        /**
         * @param partitionKey The configuration of the partition key to be used for partitioning data into multiple partitions
         * 
         * @return builder
         * 
         */
        public Builder partitionKey(@Nullable ContainerPartitionKeyResponse partitionKey) {
            $.partitionKey = partitionKey;
            return this;
        }

        /**
         * @param rid A system generated property. A unique identifier.
         * 
         * @return builder
         * 
         */
        public Builder rid(String rid) {
            $.rid = rid;
            return this;
        }

        /**
         * @param ts A system generated property that denotes the last updated timestamp of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ts(Double ts) {
            $.ts = ts;
            return this;
        }

        /**
         * @param uniqueKeyPolicy The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
         * 
         * @return builder
         * 
         */
        public Builder uniqueKeyPolicy(@Nullable UniqueKeyPolicyResponse uniqueKeyPolicy) {
            $.uniqueKeyPolicy = uniqueKeyPolicy;
            return this;
        }

        public GremlinGraphGetPropertiesResponseResource build() {
            $.etag = Objects.requireNonNull($.etag, "expected parameter 'etag' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.rid = Objects.requireNonNull($.rid, "expected parameter 'rid' to be non-null");
            $.ts = Objects.requireNonNull($.ts, "expected parameter 'ts' to be non-null");
            return $;
        }
    }

}
