// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.vmwarecloudsimple.inputs;

import com.pulumi.azurenative.vmwarecloudsimple.enums.NICType;
import com.pulumi.azurenative.vmwarecloudsimple.inputs.GuestOSNICCustomizationArgs;
import com.pulumi.azurenative.vmwarecloudsimple.inputs.VirtualNetworkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Virtual NIC model
 * 
 */
public final class VirtualNicArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNicArgs Empty = new VirtualNicArgs();

    /**
     * guest OS customization for nic
     * 
     */
    @Import(name="customization")
    private @Nullable Output<GuestOSNICCustomizationArgs> customization;

    public Optional<Output<GuestOSNICCustomizationArgs>> customization() {
        return Optional.ofNullable(this.customization);
    }

    /**
     * NIC ip address
     * 
     */
    @Import(name="ipAddresses")
    private @Nullable Output<List<String>> ipAddresses;

    public Optional<Output<List<String>>> ipAddresses() {
        return Optional.ofNullable(this.ipAddresses);
    }

    /**
     * NIC MAC address
     * 
     */
    @Import(name="macAddress")
    private @Nullable Output<String> macAddress;

    public Optional<Output<String>> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    /**
     * Virtual Network
     * 
     */
    @Import(name="network", required=true)
    private Output<VirtualNetworkArgs> network;

    public Output<VirtualNetworkArgs> network() {
        return this.network;
    }

    /**
     * NIC type
     * 
     */
    @Import(name="nicType", required=true)
    private Output<NICType> nicType;

    public Output<NICType> nicType() {
        return this.nicType;
    }

    /**
     * Is NIC powered on/off on boot
     * 
     */
    @Import(name="powerOnBoot")
    private @Nullable Output<Boolean> powerOnBoot;

    public Optional<Output<Boolean>> powerOnBoot() {
        return Optional.ofNullable(this.powerOnBoot);
    }

    /**
     * NIC id
     * 
     */
    @Import(name="virtualNicId")
    private @Nullable Output<String> virtualNicId;

    public Optional<Output<String>> virtualNicId() {
        return Optional.ofNullable(this.virtualNicId);
    }

    private VirtualNicArgs() {}

    private VirtualNicArgs(VirtualNicArgs $) {
        this.customization = $.customization;
        this.ipAddresses = $.ipAddresses;
        this.macAddress = $.macAddress;
        this.network = $.network;
        this.nicType = $.nicType;
        this.powerOnBoot = $.powerOnBoot;
        this.virtualNicId = $.virtualNicId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNicArgs $;

        public Builder() {
            $ = new VirtualNicArgs();
        }

        public Builder(VirtualNicArgs defaults) {
            $ = new VirtualNicArgs(Objects.requireNonNull(defaults));
        }

        public Builder customization(@Nullable Output<GuestOSNICCustomizationArgs> customization) {
            $.customization = customization;
            return this;
        }

        public Builder customization(GuestOSNICCustomizationArgs customization) {
            return customization(Output.of(customization));
        }

        public Builder ipAddresses(@Nullable Output<List<String>> ipAddresses) {
            $.ipAddresses = ipAddresses;
            return this;
        }

        public Builder ipAddresses(List<String> ipAddresses) {
            return ipAddresses(Output.of(ipAddresses));
        }

        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }

        public Builder macAddress(@Nullable Output<String> macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        public Builder macAddress(String macAddress) {
            return macAddress(Output.of(macAddress));
        }

        public Builder network(Output<VirtualNetworkArgs> network) {
            $.network = network;
            return this;
        }

        public Builder network(VirtualNetworkArgs network) {
            return network(Output.of(network));
        }

        public Builder nicType(Output<NICType> nicType) {
            $.nicType = nicType;
            return this;
        }

        public Builder nicType(NICType nicType) {
            return nicType(Output.of(nicType));
        }

        public Builder powerOnBoot(@Nullable Output<Boolean> powerOnBoot) {
            $.powerOnBoot = powerOnBoot;
            return this;
        }

        public Builder powerOnBoot(Boolean powerOnBoot) {
            return powerOnBoot(Output.of(powerOnBoot));
        }

        public Builder virtualNicId(@Nullable Output<String> virtualNicId) {
            $.virtualNicId = virtualNicId;
            return this;
        }

        public Builder virtualNicId(String virtualNicId) {
            return virtualNicId(Output.of(virtualNicId));
        }

        public VirtualNicArgs build() {
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            $.nicType = Objects.requireNonNull($.nicType, "expected parameter 'nicType' to be non-null");
            return $;
        }
    }

}
