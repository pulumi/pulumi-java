// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azuredata.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetSqlServerRegistrationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSqlServerRegistrationArgs Empty = new GetSqlServerRegistrationArgs();

    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the SQL Server registration.
     * 
     */
    @Import(name="sqlServerRegistrationName", required=true)
    private Output<String> sqlServerRegistrationName;

    /**
     * @return Name of the SQL Server registration.
     * 
     */
    public Output<String> sqlServerRegistrationName() {
        return this.sqlServerRegistrationName;
    }

    private GetSqlServerRegistrationArgs() {}

    private GetSqlServerRegistrationArgs(GetSqlServerRegistrationArgs $) {
        this.resourceGroupName = $.resourceGroupName;
        this.sqlServerRegistrationName = $.sqlServerRegistrationName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSqlServerRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSqlServerRegistrationArgs $;

        public Builder() {
            $ = new GetSqlServerRegistrationArgs();
        }

        public Builder(GetSqlServerRegistrationArgs defaults) {
            $ = new GetSqlServerRegistrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sqlServerRegistrationName Name of the SQL Server registration.
         * 
         * @return builder
         * 
         */
        public Builder sqlServerRegistrationName(Output<String> sqlServerRegistrationName) {
            $.sqlServerRegistrationName = sqlServerRegistrationName;
            return this;
        }

        /**
         * @param sqlServerRegistrationName Name of the SQL Server registration.
         * 
         * @return builder
         * 
         */
        public Builder sqlServerRegistrationName(String sqlServerRegistrationName) {
            return sqlServerRegistrationName(Output.of(sqlServerRegistrationName));
        }

        public GetSqlServerRegistrationArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sqlServerRegistrationName = Objects.requireNonNull($.sqlServerRegistrationName, "expected parameter 'sqlServerRegistrationName' to be non-null");
            return $;
        }
    }

}
