// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.elasticsan.outputs;

import com.pulumi.azurenative.elasticsan.outputs.SkuResponse;
import com.pulumi.azurenative.elasticsan.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetElasticSanResult {
    /**
     * @return Logical zone for Elastic San resource; example: [&#34;1&#34;].
     * 
     */
    private final List<String> availabilityZones;
    /**
     * @return Base size of the Elastic San appliance in TiB.
     * 
     */
    private final Double baseSizeTiB;
    /**
     * @return Extended size of the Elastic San appliance in TiB.
     * 
     */
    private final Double extendedCapacitySizeTiB;
    /**
     * @return Azure resource identifier.
     * 
     */
    private final String id;
    /**
     * @return The geo-location where the resource lives.
     * 
     */
    private final @Nullable String location;
    /**
     * @return Azure resource name.
     * 
     */
    private final String name;
    /**
     * @return Provisioned MBps Elastic San appliance.
     * 
     */
    private final Double provisionedMBps;
    /**
     * @return State of the operation on the resource.
     * 
     */
    private final String provisioningState;
    /**
     * @return resource sku
     * 
     */
    private final @Nullable SkuResponse sku;
    /**
     * @return Resource metadata required by ARM RPC
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * @return Azure resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return Total Provisioned IOPS of the Elastic San appliance.
     * 
     */
    private final Double totalIops;
    /**
     * @return Total Provisioned MBps Elastic San appliance.
     * 
     */
    private final Double totalMBps;
    /**
     * @return Total size of the provisioned Volumes in GiB.
     * 
     */
    private final Double totalVolumeSizeGiB;
    /**
     * @return Azure resource type.
     * 
     */
    private final String type;
    /**
     * @return Total number of volume groups in this Elastic San appliance.
     * 
     */
    private final Double volumeGroupCount;

    @CustomType.Constructor
    private GetElasticSanResult(
        @CustomType.Parameter("availabilityZones") List<String> availabilityZones,
        @CustomType.Parameter("baseSizeTiB") Double baseSizeTiB,
        @CustomType.Parameter("extendedCapacitySizeTiB") Double extendedCapacitySizeTiB,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("provisionedMBps") Double provisionedMBps,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("sku") @Nullable SkuResponse sku,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("totalIops") Double totalIops,
        @CustomType.Parameter("totalMBps") Double totalMBps,
        @CustomType.Parameter("totalVolumeSizeGiB") Double totalVolumeSizeGiB,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("volumeGroupCount") Double volumeGroupCount) {
        this.availabilityZones = availabilityZones;
        this.baseSizeTiB = baseSizeTiB;
        this.extendedCapacitySizeTiB = extendedCapacitySizeTiB;
        this.id = id;
        this.location = location;
        this.name = name;
        this.provisionedMBps = provisionedMBps;
        this.provisioningState = provisioningState;
        this.sku = sku;
        this.systemData = systemData;
        this.tags = tags;
        this.totalIops = totalIops;
        this.totalMBps = totalMBps;
        this.totalVolumeSizeGiB = totalVolumeSizeGiB;
        this.type = type;
        this.volumeGroupCount = volumeGroupCount;
    }

    /**
     * @return Logical zone for Elastic San resource; example: [&#34;1&#34;].
     * 
     */
    public List<String> availabilityZones() {
        return this.availabilityZones;
    }
    /**
     * @return Base size of the Elastic San appliance in TiB.
     * 
     */
    public Double baseSizeTiB() {
        return this.baseSizeTiB;
    }
    /**
     * @return Extended size of the Elastic San appliance in TiB.
     * 
     */
    public Double extendedCapacitySizeTiB() {
        return this.extendedCapacitySizeTiB;
    }
    /**
     * @return Azure resource identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The geo-location where the resource lives.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Azure resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provisioned MBps Elastic San appliance.
     * 
     */
    public Double provisionedMBps() {
        return this.provisionedMBps;
    }
    /**
     * @return State of the operation on the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return resource sku
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Resource metadata required by ARM RPC
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Azure resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Total Provisioned IOPS of the Elastic San appliance.
     * 
     */
    public Double totalIops() {
        return this.totalIops;
    }
    /**
     * @return Total Provisioned MBps Elastic San appliance.
     * 
     */
    public Double totalMBps() {
        return this.totalMBps;
    }
    /**
     * @return Total size of the provisioned Volumes in GiB.
     * 
     */
    public Double totalVolumeSizeGiB() {
        return this.totalVolumeSizeGiB;
    }
    /**
     * @return Azure resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Total number of volume groups in this Elastic San appliance.
     * 
     */
    public Double volumeGroupCount() {
        return this.volumeGroupCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetElasticSanResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> availabilityZones;
        private Double baseSizeTiB;
        private Double extendedCapacitySizeTiB;
        private String id;
        private @Nullable String location;
        private String name;
        private Double provisionedMBps;
        private String provisioningState;
        private @Nullable SkuResponse sku;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private Double totalIops;
        private Double totalMBps;
        private Double totalVolumeSizeGiB;
        private String type;
        private Double volumeGroupCount;

        public Builder() {
    	      // Empty
        }

        public Builder(GetElasticSanResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZones = defaults.availabilityZones;
    	      this.baseSizeTiB = defaults.baseSizeTiB;
    	      this.extendedCapacitySizeTiB = defaults.extendedCapacitySizeTiB;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisionedMBps = defaults.provisionedMBps;
    	      this.provisioningState = defaults.provisioningState;
    	      this.sku = defaults.sku;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.totalIops = defaults.totalIops;
    	      this.totalMBps = defaults.totalMBps;
    	      this.totalVolumeSizeGiB = defaults.totalVolumeSizeGiB;
    	      this.type = defaults.type;
    	      this.volumeGroupCount = defaults.volumeGroupCount;
        }

        public Builder availabilityZones(List<String> availabilityZones) {
            this.availabilityZones = Objects.requireNonNull(availabilityZones);
            return this;
        }
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }
        public Builder baseSizeTiB(Double baseSizeTiB) {
            this.baseSizeTiB = Objects.requireNonNull(baseSizeTiB);
            return this;
        }
        public Builder extendedCapacitySizeTiB(Double extendedCapacitySizeTiB) {
            this.extendedCapacitySizeTiB = Objects.requireNonNull(extendedCapacitySizeTiB);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder provisionedMBps(Double provisionedMBps) {
            this.provisionedMBps = Objects.requireNonNull(provisionedMBps);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder totalIops(Double totalIops) {
            this.totalIops = Objects.requireNonNull(totalIops);
            return this;
        }
        public Builder totalMBps(Double totalMBps) {
            this.totalMBps = Objects.requireNonNull(totalMBps);
            return this;
        }
        public Builder totalVolumeSizeGiB(Double totalVolumeSizeGiB) {
            this.totalVolumeSizeGiB = Objects.requireNonNull(totalVolumeSizeGiB);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder volumeGroupCount(Double volumeGroupCount) {
            this.volumeGroupCount = Objects.requireNonNull(volumeGroupCount);
            return this;
        }        public GetElasticSanResult build() {
            return new GetElasticSanResult(availabilityZones, baseSizeTiB, extendedCapacitySizeTiB, id, location, name, provisionedMBps, provisioningState, sku, systemData, tags, totalIops, totalMBps, totalVolumeSizeGiB, type, volumeGroupCount);
        }
    }
}
