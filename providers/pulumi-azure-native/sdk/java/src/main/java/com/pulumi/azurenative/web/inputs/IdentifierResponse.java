// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A domain specific resource identifier.
 * 
 */
public final class IdentifierResponse extends com.pulumi.resources.InvokeArgs {

    public static final IdentifierResponse Empty = new IdentifierResponse();

    /**
     * Resource Id.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return Resource Id.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
    private @Nullable String kind;

    /**
     * @return Kind of resource.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Resource Name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Resource Name.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * String representation of the identity.
     * 
     */
    @Import(name="value")
    private @Nullable String value;

    /**
     * @return String representation of the identity.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    private IdentifierResponse() {}

    private IdentifierResponse(IdentifierResponse $) {
        this.id = $.id;
        this.kind = $.kind;
        this.name = $.name;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentifierResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentifierResponse $;

        public Builder() {
            $ = new IdentifierResponse();
        }

        public Builder(IdentifierResponse defaults) {
            $ = new IdentifierResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Resource Id.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param kind Kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable String kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param name Resource Name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param type Resource type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param value String representation of the identity.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable String value) {
            $.value = value;
            return this;
        }

        public IdentifierResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
