// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices;

import com.pulumi.azurenative.labservices.inputs.AutoShutdownProfileArgs;
import com.pulumi.azurenative.labservices.inputs.ConnectionProfileArgs;
import com.pulumi.azurenative.labservices.inputs.LabPlanNetworkProfileArgs;
import com.pulumi.azurenative.labservices.inputs.SupportInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LabPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final LabPlanArgs Empty = new LabPlanArgs();

    /**
     * The allowed regions for the lab creator to use when creating labs using this lab plan.
     * 
     */
    @Import(name="allowedRegions")
    private @Nullable Output<List<String>> allowedRegions;

    public Optional<Output<List<String>>> allowedRegions() {
        return Optional.ofNullable(this.allowedRegions);
    }

    /**
     * The default lab shutdown profile. This can be changed on a lab resource and only provides a default profile.
     * 
     */
    @Import(name="defaultAutoShutdownProfile")
    private @Nullable Output<AutoShutdownProfileArgs> defaultAutoShutdownProfile;

    public Optional<Output<AutoShutdownProfileArgs>> defaultAutoShutdownProfile() {
        return Optional.ofNullable(this.defaultAutoShutdownProfile);
    }

    /**
     * The default lab connection profile. This can be changed on a lab resource and only provides a default profile.
     * 
     */
    @Import(name="defaultConnectionProfile")
    private @Nullable Output<ConnectionProfileArgs> defaultConnectionProfile;

    public Optional<Output<ConnectionProfileArgs>> defaultConnectionProfile() {
        return Optional.ofNullable(this.defaultConnectionProfile);
    }

    /**
     * The lab plan network profile. To enforce lab network policies they must be defined here and cannot be changed when there are existing labs associated with this lab plan.
     * 
     */
    @Import(name="defaultNetworkProfile")
    private @Nullable Output<LabPlanNetworkProfileArgs> defaultNetworkProfile;

    public Optional<Output<LabPlanNetworkProfileArgs>> defaultNetworkProfile() {
        return Optional.ofNullable(this.defaultNetworkProfile);
    }

    /**
     * The name of the lab plan that uniquely identifies it within containing resource group. Used in resource URIs and in UI.
     * 
     */
    @Import(name="labPlanName")
    private @Nullable Output<String> labPlanName;

    public Optional<Output<String>> labPlanName() {
        return Optional.ofNullable(this.labPlanName);
    }

    /**
     * Base Url of the lms instance this lab plan can link lab rosters against.
     * 
     */
    @Import(name="linkedLmsInstance")
    private @Nullable Output<String> linkedLmsInstance;

    public Optional<Output<String>> linkedLmsInstance() {
        return Optional.ofNullable(this.linkedLmsInstance);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource ID of the Shared Image Gallery attached to this lab plan. When saving a lab template virtual machine image it will be persisted in this gallery. Shared images from the gallery can be made available to use when creating new labs.
     * 
     */
    @Import(name="sharedGalleryId")
    private @Nullable Output<String> sharedGalleryId;

    public Optional<Output<String>> sharedGalleryId() {
        return Optional.ofNullable(this.sharedGalleryId);
    }

    /**
     * Support contact information and instructions for users of the lab plan. This information is displayed to lab owners and virtual machine users for all labs in the lab plan.
     * 
     */
    @Import(name="supportInfo")
    private @Nullable Output<SupportInfoArgs> supportInfo;

    public Optional<Output<SupportInfoArgs>> supportInfo() {
        return Optional.ofNullable(this.supportInfo);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private LabPlanArgs() {}

    private LabPlanArgs(LabPlanArgs $) {
        this.allowedRegions = $.allowedRegions;
        this.defaultAutoShutdownProfile = $.defaultAutoShutdownProfile;
        this.defaultConnectionProfile = $.defaultConnectionProfile;
        this.defaultNetworkProfile = $.defaultNetworkProfile;
        this.labPlanName = $.labPlanName;
        this.linkedLmsInstance = $.linkedLmsInstance;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.sharedGalleryId = $.sharedGalleryId;
        this.supportInfo = $.supportInfo;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LabPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LabPlanArgs $;

        public Builder() {
            $ = new LabPlanArgs();
        }

        public Builder(LabPlanArgs defaults) {
            $ = new LabPlanArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedRegions(@Nullable Output<List<String>> allowedRegions) {
            $.allowedRegions = allowedRegions;
            return this;
        }

        public Builder allowedRegions(List<String> allowedRegions) {
            return allowedRegions(Output.of(allowedRegions));
        }

        public Builder allowedRegions(String... allowedRegions) {
            return allowedRegions(List.of(allowedRegions));
        }

        public Builder defaultAutoShutdownProfile(@Nullable Output<AutoShutdownProfileArgs> defaultAutoShutdownProfile) {
            $.defaultAutoShutdownProfile = defaultAutoShutdownProfile;
            return this;
        }

        public Builder defaultAutoShutdownProfile(AutoShutdownProfileArgs defaultAutoShutdownProfile) {
            return defaultAutoShutdownProfile(Output.of(defaultAutoShutdownProfile));
        }

        public Builder defaultConnectionProfile(@Nullable Output<ConnectionProfileArgs> defaultConnectionProfile) {
            $.defaultConnectionProfile = defaultConnectionProfile;
            return this;
        }

        public Builder defaultConnectionProfile(ConnectionProfileArgs defaultConnectionProfile) {
            return defaultConnectionProfile(Output.of(defaultConnectionProfile));
        }

        public Builder defaultNetworkProfile(@Nullable Output<LabPlanNetworkProfileArgs> defaultNetworkProfile) {
            $.defaultNetworkProfile = defaultNetworkProfile;
            return this;
        }

        public Builder defaultNetworkProfile(LabPlanNetworkProfileArgs defaultNetworkProfile) {
            return defaultNetworkProfile(Output.of(defaultNetworkProfile));
        }

        public Builder labPlanName(@Nullable Output<String> labPlanName) {
            $.labPlanName = labPlanName;
            return this;
        }

        public Builder labPlanName(String labPlanName) {
            return labPlanName(Output.of(labPlanName));
        }

        public Builder linkedLmsInstance(@Nullable Output<String> linkedLmsInstance) {
            $.linkedLmsInstance = linkedLmsInstance;
            return this;
        }

        public Builder linkedLmsInstance(String linkedLmsInstance) {
            return linkedLmsInstance(Output.of(linkedLmsInstance));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder sharedGalleryId(@Nullable Output<String> sharedGalleryId) {
            $.sharedGalleryId = sharedGalleryId;
            return this;
        }

        public Builder sharedGalleryId(String sharedGalleryId) {
            return sharedGalleryId(Output.of(sharedGalleryId));
        }

        public Builder supportInfo(@Nullable Output<SupportInfoArgs> supportInfo) {
            $.supportInfo = supportInfo;
            return this;
        }

        public Builder supportInfo(SupportInfoArgs supportInfo) {
            return supportInfo(Output.of(supportInfo));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public LabPlanArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
