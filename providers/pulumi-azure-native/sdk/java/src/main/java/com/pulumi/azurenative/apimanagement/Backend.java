// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.apimanagement.BackendArgs;
import com.pulumi.azurenative.apimanagement.outputs.BackendCredentialsContractResponse;
import com.pulumi.azurenative.apimanagement.outputs.BackendPropertiesResponse;
import com.pulumi.azurenative.apimanagement.outputs.BackendProxyContractResponse;
import com.pulumi.azurenative.apimanagement.outputs.BackendTlsPropertiesResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Backend details.
 * API Version: 2020-12-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:apimanagement:Backend sfbackend /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/backends/sfbackend 
 * ```
 * 
 */
@ResourceType(type="azure-native:apimanagement:Backend")
public class Backend extends com.pulumi.resources.CustomResource {
    /**
     * Backend Credentials Contract Properties
     * 
     */
    @Export(name="credentials", type=BackendCredentialsContractResponse.class, parameters={})
    private Output</* @Nullable */ BackendCredentialsContractResponse> credentials;

    /**
     * @return Backend Credentials Contract Properties
     * 
     */
    public Output<Optional<BackendCredentialsContractResponse>> credentials() {
        return Codegen.optional(this.credentials);
    }
    /**
     * Backend Description.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Backend Description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Backend Properties contract
     * 
     */
    @Export(name="properties", type=BackendPropertiesResponse.class, parameters={})
    private Output<BackendPropertiesResponse> properties;

    /**
     * @return Backend Properties contract
     * 
     */
    public Output<BackendPropertiesResponse> properties() {
        return this.properties;
    }
    /**
     * Backend communication protocol.
     * 
     */
    @Export(name="protocol", type=String.class, parameters={})
    private Output<String> protocol;

    /**
     * @return Backend communication protocol.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * Backend Proxy Contract Properties
     * 
     */
    @Export(name="proxy", type=BackendProxyContractResponse.class, parameters={})
    private Output</* @Nullable */ BackendProxyContractResponse> proxy;

    /**
     * @return Backend Proxy Contract Properties
     * 
     */
    public Output<Optional<BackendProxyContractResponse>> proxy() {
        return Codegen.optional(this.proxy);
    }
    /**
     * Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
     * 
     */
    @Export(name="resourceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> resourceId;

    /**
     * @return Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
     * 
     */
    public Output<Optional<String>> resourceId() {
        return Codegen.optional(this.resourceId);
    }
    /**
     * Backend Title.
     * 
     */
    @Export(name="title", type=String.class, parameters={})
    private Output</* @Nullable */ String> title;

    /**
     * @return Backend Title.
     * 
     */
    public Output<Optional<String>> title() {
        return Codegen.optional(this.title);
    }
    /**
     * Backend TLS Properties
     * 
     */
    @Export(name="tls", type=BackendTlsPropertiesResponse.class, parameters={})
    private Output</* @Nullable */ BackendTlsPropertiesResponse> tls;

    /**
     * @return Backend TLS Properties
     * 
     */
    public Output<Optional<BackendTlsPropertiesResponse>> tls() {
        return Codegen.optional(this.tls);
    }
    /**
     * Resource type for API Management resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type for API Management resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Runtime Url of the Backend.
     * 
     */
    @Export(name="url", type=String.class, parameters={})
    private Output<String> url;

    /**
     * @return Runtime Url of the Backend.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Backend(String name) {
        this(name, BackendArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Backend(String name, BackendArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Backend(String name, BackendArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:apimanagement:Backend", name, args == null ? BackendArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Backend(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:apimanagement:Backend", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:apimanagement/v20160707:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20161010:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20170301:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20180101:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20180601preview:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20190101:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20191201:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20191201preview:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20200601preview:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20201201:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20210101preview:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20210401preview:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20210801:Backend").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20211201preview:Backend").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Backend get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Backend(name, id, options);
    }
}
