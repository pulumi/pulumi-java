// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement;

import com.pulumi.azurenative.apimanagement.enums.VersioningScheme;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApiVersionSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiVersionSetArgs Empty = new ApiVersionSetArgs();

    /**
     * Description of API Version Set.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Name of API Version Set
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @Import(name="serviceName", required=true)
      private final Output<String> serviceName;

    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
     * 
     */
    @Import(name="versionHeaderName")
      private final @Nullable Output<String> versionHeaderName;

    public Output<String> versionHeaderName() {
        return this.versionHeaderName == null ? Codegen.empty() : this.versionHeaderName;
    }

    /**
     * Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
     * 
     */
    @Import(name="versionQueryName")
      private final @Nullable Output<String> versionQueryName;

    public Output<String> versionQueryName() {
        return this.versionQueryName == null ? Codegen.empty() : this.versionQueryName;
    }

    /**
     * Api Version Set identifier. Must be unique in the current API Management service instance.
     * 
     */
    @Import(name="versionSetId")
      private final @Nullable Output<String> versionSetId;

    public Output<String> versionSetId() {
        return this.versionSetId == null ? Codegen.empty() : this.versionSetId;
    }

    /**
     * An value that determines where the API Version identifier will be located in a HTTP request.
     * 
     */
    @Import(name="versioningScheme", required=true)
      private final Output<Either<String,VersioningScheme>> versioningScheme;

    public Output<Either<String,VersioningScheme>> versioningScheme() {
        return this.versioningScheme;
    }

    public ApiVersionSetArgs(
        @Nullable Output<String> description,
        Output<String> displayName,
        Output<String> resourceGroupName,
        Output<String> serviceName,
        @Nullable Output<String> versionHeaderName,
        @Nullable Output<String> versionQueryName,
        @Nullable Output<String> versionSetId,
        Output<Either<String,VersioningScheme>> versioningScheme) {
        this.description = description;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
        this.versionHeaderName = versionHeaderName;
        this.versionQueryName = versionQueryName;
        this.versionSetId = versionSetId;
        this.versioningScheme = Objects.requireNonNull(versioningScheme, "expected parameter 'versioningScheme' to be non-null");
    }

    private ApiVersionSetArgs() {
        this.description = Codegen.empty();
        this.displayName = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.serviceName = Codegen.empty();
        this.versionHeaderName = Codegen.empty();
        this.versionQueryName = Codegen.empty();
        this.versionSetId = Codegen.empty();
        this.versioningScheme = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiVersionSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private Output<String> displayName;
        private Output<String> resourceGroupName;
        private Output<String> serviceName;
        private @Nullable Output<String> versionHeaderName;
        private @Nullable Output<String> versionQueryName;
        private @Nullable Output<String> versionSetId;
        private Output<Either<String,VersioningScheme>> versioningScheme;

        public Builder() {
    	      // Empty
        }

        public Builder(ApiVersionSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceName = defaults.serviceName;
    	      this.versionHeaderName = defaults.versionHeaderName;
    	      this.versionQueryName = defaults.versionQueryName;
    	      this.versionSetId = defaults.versionSetId;
    	      this.versioningScheme = defaults.versioningScheme;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder serviceName(Output<String> serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public Builder serviceName(String serviceName) {
            this.serviceName = Output.of(Objects.requireNonNull(serviceName));
            return this;
        }
        public Builder versionHeaderName(@Nullable Output<String> versionHeaderName) {
            this.versionHeaderName = versionHeaderName;
            return this;
        }
        public Builder versionHeaderName(@Nullable String versionHeaderName) {
            this.versionHeaderName = Codegen.ofNullable(versionHeaderName);
            return this;
        }
        public Builder versionQueryName(@Nullable Output<String> versionQueryName) {
            this.versionQueryName = versionQueryName;
            return this;
        }
        public Builder versionQueryName(@Nullable String versionQueryName) {
            this.versionQueryName = Codegen.ofNullable(versionQueryName);
            return this;
        }
        public Builder versionSetId(@Nullable Output<String> versionSetId) {
            this.versionSetId = versionSetId;
            return this;
        }
        public Builder versionSetId(@Nullable String versionSetId) {
            this.versionSetId = Codegen.ofNullable(versionSetId);
            return this;
        }
        public Builder versioningScheme(Output<Either<String,VersioningScheme>> versioningScheme) {
            this.versioningScheme = Objects.requireNonNull(versioningScheme);
            return this;
        }
        public Builder versioningScheme(Either<String,VersioningScheme> versioningScheme) {
            this.versioningScheme = Output.of(Objects.requireNonNull(versioningScheme));
            return this;
        }        public ApiVersionSetArgs build() {
            return new ApiVersionSetArgs(description, displayName, resourceGroupName, serviceName, versionHeaderName, versionQueryName, versionSetId, versioningScheme);
        }
    }
}
