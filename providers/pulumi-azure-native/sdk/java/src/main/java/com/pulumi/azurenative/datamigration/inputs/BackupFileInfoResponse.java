// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Information of the backup file
 * 
 */
public final class BackupFileInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final BackupFileInfoResponse Empty = new BackupFileInfoResponse();

    /**
     * Sequence number of the backup file in the backup set
     * 
     */
    @Import(name="familySequenceNumber")
    private @Nullable Integer familySequenceNumber;

    /**
     * @return Sequence number of the backup file in the backup set
     * 
     */
    public Optional<Integer> familySequenceNumber() {
        return Optional.ofNullable(this.familySequenceNumber);
    }

    /**
     * Location of the backup file in shared folder
     * 
     */
    @Import(name="fileLocation")
    private @Nullable String fileLocation;

    /**
     * @return Location of the backup file in shared folder
     * 
     */
    public Optional<String> fileLocation() {
        return Optional.ofNullable(this.fileLocation);
    }

    /**
     * Status of the backup file during migration
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return Status of the backup file during migration
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private BackupFileInfoResponse() {}

    private BackupFileInfoResponse(BackupFileInfoResponse $) {
        this.familySequenceNumber = $.familySequenceNumber;
        this.fileLocation = $.fileLocation;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupFileInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupFileInfoResponse $;

        public Builder() {
            $ = new BackupFileInfoResponse();
        }

        public Builder(BackupFileInfoResponse defaults) {
            $ = new BackupFileInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param familySequenceNumber Sequence number of the backup file in the backup set
         * 
         * @return builder
         * 
         */
        public Builder familySequenceNumber(@Nullable Integer familySequenceNumber) {
            $.familySequenceNumber = familySequenceNumber;
            return this;
        }

        /**
         * @param fileLocation Location of the backup file in shared folder
         * 
         * @return builder
         * 
         */
        public Builder fileLocation(@Nullable String fileLocation) {
            $.fileLocation = fileLocation;
            return this;
        }

        /**
         * @param status Status of the backup file during migration
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public BackupFileInfoResponse build() {
            return $;
        }
    }

}
