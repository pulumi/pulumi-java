// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.inputs;

import com.pulumi.azurenative.cdn.inputs.ResourceReferenceArgs;
import com.pulumi.azurenative.cdn.inputs.SecurityPolicyWebApplicationFirewallAssociationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The json object containing security policy waf parameters
 * 
 */
public final class SecurityPolicyWebApplicationFirewallParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyWebApplicationFirewallParametersArgs Empty = new SecurityPolicyWebApplicationFirewallParametersArgs();

    /**
     * Waf associations
     * 
     */
    @Import(name="associations")
    private @Nullable Output<List<SecurityPolicyWebApplicationFirewallAssociationArgs>> associations;

    /**
     * @return Waf associations
     * 
     */
    public Optional<Output<List<SecurityPolicyWebApplicationFirewallAssociationArgs>>> associations() {
        return Optional.ofNullable(this.associations);
    }

    /**
     * The type of the Security policy to create.
     * Expected value is &#39;WebApplicationFirewall&#39;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the Security policy to create.
     * Expected value is &#39;WebApplicationFirewall&#39;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="wafPolicy")
    private @Nullable Output<ResourceReferenceArgs> wafPolicy;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<Output<ResourceReferenceArgs>> wafPolicy() {
        return Optional.ofNullable(this.wafPolicy);
    }

    private SecurityPolicyWebApplicationFirewallParametersArgs() {}

    private SecurityPolicyWebApplicationFirewallParametersArgs(SecurityPolicyWebApplicationFirewallParametersArgs $) {
        this.associations = $.associations;
        this.type = $.type;
        this.wafPolicy = $.wafPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyWebApplicationFirewallParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyWebApplicationFirewallParametersArgs $;

        public Builder() {
            $ = new SecurityPolicyWebApplicationFirewallParametersArgs();
        }

        public Builder(SecurityPolicyWebApplicationFirewallParametersArgs defaults) {
            $ = new SecurityPolicyWebApplicationFirewallParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param associations Waf associations
         * 
         * @return builder
         * 
         */
        public Builder associations(@Nullable Output<List<SecurityPolicyWebApplicationFirewallAssociationArgs>> associations) {
            $.associations = associations;
            return this;
        }

        /**
         * @param associations Waf associations
         * 
         * @return builder
         * 
         */
        public Builder associations(List<SecurityPolicyWebApplicationFirewallAssociationArgs> associations) {
            return associations(Output.of(associations));
        }

        /**
         * @param associations Waf associations
         * 
         * @return builder
         * 
         */
        public Builder associations(SecurityPolicyWebApplicationFirewallAssociationArgs... associations) {
            return associations(List.of(associations));
        }

        /**
         * @param type The type of the Security policy to create.
         * Expected value is &#39;WebApplicationFirewall&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the Security policy to create.
         * Expected value is &#39;WebApplicationFirewall&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param wafPolicy Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder wafPolicy(@Nullable Output<ResourceReferenceArgs> wafPolicy) {
            $.wafPolicy = wafPolicy;
            return this;
        }

        /**
         * @param wafPolicy Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder wafPolicy(ResourceReferenceArgs wafPolicy) {
            return wafPolicy(Output.of(wafPolicy));
        }

        public SecurityPolicyWebApplicationFirewallParametersArgs build() {
            $.type = Codegen.stringProp("type").output().arg($.type).require();
            return $;
        }
    }

}
