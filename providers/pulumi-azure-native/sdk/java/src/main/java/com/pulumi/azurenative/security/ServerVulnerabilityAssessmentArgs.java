// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServerVulnerabilityAssessmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerVulnerabilityAssessmentArgs Empty = new ServerVulnerabilityAssessmentArgs();

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the resource.
     * 
     */
    @Import(name="resourceName", required=true)
      private final Output<String> resourceName;

    public Output<String> resourceName() {
        return this.resourceName;
    }

    /**
     * The Namespace of the resource.
     * 
     */
    @Import(name="resourceNamespace", required=true)
      private final Output<String> resourceNamespace;

    public Output<String> resourceNamespace() {
        return this.resourceNamespace;
    }

    /**
     * The type of the resource.
     * 
     */
    @Import(name="resourceType", required=true)
      private final Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * ServerVulnerabilityAssessment status. only a 'default' value is supported.
     * 
     */
    @Import(name="serverVulnerabilityAssessment")
      private final @Nullable Output<String> serverVulnerabilityAssessment;

    public Output<String> serverVulnerabilityAssessment() {
        return this.serverVulnerabilityAssessment == null ? Codegen.empty() : this.serverVulnerabilityAssessment;
    }

    public ServerVulnerabilityAssessmentArgs(
        Output<String> resourceGroupName,
        Output<String> resourceName,
        Output<String> resourceNamespace,
        Output<String> resourceType,
        @Nullable Output<String> serverVulnerabilityAssessment) {
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = Objects.requireNonNull(resourceName, "expected parameter 'resourceName' to be non-null");
        this.resourceNamespace = Objects.requireNonNull(resourceNamespace, "expected parameter 'resourceNamespace' to be non-null");
        this.resourceType = Objects.requireNonNull(resourceType, "expected parameter 'resourceType' to be non-null");
        this.serverVulnerabilityAssessment = serverVulnerabilityAssessment;
    }

    private ServerVulnerabilityAssessmentArgs() {
        this.resourceGroupName = Codegen.empty();
        this.resourceName = Codegen.empty();
        this.resourceNamespace = Codegen.empty();
        this.resourceType = Codegen.empty();
        this.serverVulnerabilityAssessment = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerVulnerabilityAssessmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> resourceGroupName;
        private Output<String> resourceName;
        private Output<String> resourceNamespace;
        private Output<String> resourceType;
        private @Nullable Output<String> serverVulnerabilityAssessment;

        public Builder() {
    	      // Empty
        }

        public Builder(ServerVulnerabilityAssessmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceNamespace = defaults.resourceNamespace;
    	      this.resourceType = defaults.resourceType;
    	      this.serverVulnerabilityAssessment = defaults.serverVulnerabilityAssessment;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder resourceName(Output<String> resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        public Builder resourceName(String resourceName) {
            this.resourceName = Output.of(Objects.requireNonNull(resourceName));
            return this;
        }
        public Builder resourceNamespace(Output<String> resourceNamespace) {
            this.resourceNamespace = Objects.requireNonNull(resourceNamespace);
            return this;
        }
        public Builder resourceNamespace(String resourceNamespace) {
            this.resourceNamespace = Output.of(Objects.requireNonNull(resourceNamespace));
            return this;
        }
        public Builder resourceType(Output<String> resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }
        public Builder resourceType(String resourceType) {
            this.resourceType = Output.of(Objects.requireNonNull(resourceType));
            return this;
        }
        public Builder serverVulnerabilityAssessment(@Nullable Output<String> serverVulnerabilityAssessment) {
            this.serverVulnerabilityAssessment = serverVulnerabilityAssessment;
            return this;
        }
        public Builder serverVulnerabilityAssessment(@Nullable String serverVulnerabilityAssessment) {
            this.serverVulnerabilityAssessment = Codegen.ofNullable(serverVulnerabilityAssessment);
            return this;
        }        public ServerVulnerabilityAssessmentArgs build() {
            return new ServerVulnerabilityAssessmentArgs(resourceGroupName, resourceName, resourceNamespace, resourceType, serverVulnerabilityAssessment);
        }
    }
}
