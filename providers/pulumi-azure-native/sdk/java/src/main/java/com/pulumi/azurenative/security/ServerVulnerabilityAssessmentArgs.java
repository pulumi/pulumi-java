// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerVulnerabilityAssessmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerVulnerabilityAssessmentArgs Empty = new ServerVulnerabilityAssessmentArgs();

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the resource.
     * 
     */
    @Import(name="resourceName", required=true)
    private Output<String> resourceName;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> resourceName() {
        return this.resourceName;
    }

    /**
     * The Namespace of the resource.
     * 
     */
    @Import(name="resourceNamespace", required=true)
    private Output<String> resourceNamespace;

    /**
     * @return The Namespace of the resource.
     * 
     */
    public Output<String> resourceNamespace() {
        return this.resourceNamespace;
    }

    /**
     * The type of the resource.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return The type of the resource.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * ServerVulnerabilityAssessment status. only a &#39;default&#39; value is supported.
     * 
     */
    @Import(name="serverVulnerabilityAssessment")
    private @Nullable Output<String> serverVulnerabilityAssessment;

    /**
     * @return ServerVulnerabilityAssessment status. only a &#39;default&#39; value is supported.
     * 
     */
    public Optional<Output<String>> serverVulnerabilityAssessment() {
        return Optional.ofNullable(this.serverVulnerabilityAssessment);
    }

    private ServerVulnerabilityAssessmentArgs() {}

    private ServerVulnerabilityAssessmentArgs(ServerVulnerabilityAssessmentArgs $) {
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
        this.resourceNamespace = $.resourceNamespace;
        this.resourceType = $.resourceType;
        this.serverVulnerabilityAssessment = $.serverVulnerabilityAssessment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerVulnerabilityAssessmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerVulnerabilityAssessmentArgs $;

        public Builder() {
            $ = new ServerVulnerabilityAssessmentArgs();
        }

        public Builder(ServerVulnerabilityAssessmentArgs defaults) {
            $ = new ServerVulnerabilityAssessmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param resourceName Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param resourceName Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        /**
         * @param resourceNamespace The Namespace of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceNamespace(Output<String> resourceNamespace) {
            $.resourceNamespace = resourceNamespace;
            return this;
        }

        /**
         * @param resourceNamespace The Namespace of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceNamespace(String resourceNamespace) {
            return resourceNamespace(Output.of(resourceNamespace));
        }

        /**
         * @param resourceType The type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param serverVulnerabilityAssessment ServerVulnerabilityAssessment status. only a &#39;default&#39; value is supported.
         * 
         * @return builder
         * 
         */
        public Builder serverVulnerabilityAssessment(@Nullable Output<String> serverVulnerabilityAssessment) {
            $.serverVulnerabilityAssessment = serverVulnerabilityAssessment;
            return this;
        }

        /**
         * @param serverVulnerabilityAssessment ServerVulnerabilityAssessment status. only a &#39;default&#39; value is supported.
         * 
         * @return builder
         * 
         */
        public Builder serverVulnerabilityAssessment(String serverVulnerabilityAssessment) {
            return serverVulnerabilityAssessment(Output.of(serverVulnerabilityAssessment));
        }

        public ServerVulnerabilityAssessmentArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceName = Objects.requireNonNull($.resourceName, "expected parameter 'resourceName' to be non-null");
            $.resourceNamespace = Objects.requireNonNull($.resourceNamespace, "expected parameter 'resourceNamespace' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            return $;
        }
    }

}
