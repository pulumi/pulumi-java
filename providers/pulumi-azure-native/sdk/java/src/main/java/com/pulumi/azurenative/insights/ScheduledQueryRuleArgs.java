// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights;

import com.pulumi.azurenative.insights.enums.Enabled;
import com.pulumi.azurenative.insights.inputs.AlertingActionArgs;
import com.pulumi.azurenative.insights.inputs.LogToMetricActionArgs;
import com.pulumi.azurenative.insights.inputs.ScheduleArgs;
import com.pulumi.azurenative.insights.inputs.SourceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ScheduledQueryRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryRuleArgs Empty = new ScheduledQueryRuleArgs();

    /**
     * Action needs to be taken on rule execution.
     * 
     */
    @Import(name="action", required=true)
      private final Output<Either<AlertingActionArgs,LogToMetricActionArgs>> action;

    public Output<Either<AlertingActionArgs,LogToMetricActionArgs>> action() {
        return this.action;
    }

    /**
     * The flag that indicates whether the alert should be automatically resolved or not. The default is false.
     * 
     */
    @Import(name="autoMitigate")
      private final @Nullable Output<Boolean> autoMitigate;

    public Output<Boolean> autoMitigate() {
        return this.autoMitigate == null ? Codegen.empty() : this.autoMitigate;
    }

    /**
     * The description of the Log Search rule.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The display name of the alert rule
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName == null ? Codegen.empty() : this.displayName;
    }

    /**
     * The flag which indicates whether the Log Search rule is enabled. Value should be true or false
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Either<String,Enabled>> enabled;

    public Output<Either<String,Enabled>> enabled() {
        return this.enabled == null ? Codegen.empty() : this.enabled;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the rule.
     * 
     */
    @Import(name="ruleName")
      private final @Nullable Output<String> ruleName;

    public Output<String> ruleName() {
        return this.ruleName == null ? Codegen.empty() : this.ruleName;
    }

    /**
     * Schedule (Frequency, Time Window) for rule. Required for action type - AlertingAction
     * 
     */
    @Import(name="schedule")
      private final @Nullable Output<ScheduleArgs> schedule;

    public Output<ScheduleArgs> schedule() {
        return this.schedule == null ? Codegen.empty() : this.schedule;
    }

    /**
     * Data Source against which rule will Query Data
     * 
     */
    @Import(name="source", required=true)
      private final Output<SourceArgs> source;

    public Output<SourceArgs> source() {
        return this.source;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public ScheduledQueryRuleArgs(
        Output<Either<AlertingActionArgs,LogToMetricActionArgs>> action,
        @Nullable Output<Boolean> autoMitigate,
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        @Nullable Output<Either<String,Enabled>> enabled,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<String> ruleName,
        @Nullable Output<ScheduleArgs> schedule,
        Output<SourceArgs> source,
        @Nullable Output<Map<String,String>> tags) {
        this.action = Objects.requireNonNull(action, "expected parameter 'action' to be non-null");
        this.autoMitigate = Codegen.booleanProp("autoMitigate").output().arg(autoMitigate).def(false).getNullable();
        this.description = description;
        this.displayName = displayName;
        this.enabled = enabled;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.ruleName = ruleName;
        this.schedule = schedule;
        this.source = Objects.requireNonNull(source, "expected parameter 'source' to be non-null");
        this.tags = tags;
    }

    private ScheduledQueryRuleArgs() {
        this.action = Codegen.empty();
        this.autoMitigate = Codegen.empty();
        this.description = Codegen.empty();
        this.displayName = Codegen.empty();
        this.enabled = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.ruleName = Codegen.empty();
        this.schedule = Codegen.empty();
        this.source = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduledQueryRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Either<AlertingActionArgs,LogToMetricActionArgs>> action;
        private @Nullable Output<Boolean> autoMitigate;
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private @Nullable Output<Either<String,Enabled>> enabled;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> ruleName;
        private @Nullable Output<ScheduleArgs> schedule;
        private Output<SourceArgs> source;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ScheduledQueryRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.autoMitigate = defaults.autoMitigate;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.enabled = defaults.enabled;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.ruleName = defaults.ruleName;
    	      this.schedule = defaults.schedule;
    	      this.source = defaults.source;
    	      this.tags = defaults.tags;
        }

        public Builder action(Output<Either<AlertingActionArgs,LogToMetricActionArgs>> action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        public Builder action(Either<AlertingActionArgs,LogToMetricActionArgs> action) {
            this.action = Output.of(Objects.requireNonNull(action));
            return this;
        }
        public Builder autoMitigate(@Nullable Output<Boolean> autoMitigate) {
            this.autoMitigate = autoMitigate;
            return this;
        }
        public Builder autoMitigate(@Nullable Boolean autoMitigate) {
            this.autoMitigate = Codegen.ofNullable(autoMitigate);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = Codegen.ofNullable(displayName);
            return this;
        }
        public Builder enabled(@Nullable Output<Either<String,Enabled>> enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder enabled(@Nullable Either<String,Enabled> enabled) {
            this.enabled = Codegen.ofNullable(enabled);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder ruleName(@Nullable Output<String> ruleName) {
            this.ruleName = ruleName;
            return this;
        }
        public Builder ruleName(@Nullable String ruleName) {
            this.ruleName = Codegen.ofNullable(ruleName);
            return this;
        }
        public Builder schedule(@Nullable Output<ScheduleArgs> schedule) {
            this.schedule = schedule;
            return this;
        }
        public Builder schedule(@Nullable ScheduleArgs schedule) {
            this.schedule = Codegen.ofNullable(schedule);
            return this;
        }
        public Builder source(Output<SourceArgs> source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        public Builder source(SourceArgs source) {
            this.source = Output.of(Objects.requireNonNull(source));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public ScheduledQueryRuleArgs build() {
            return new ScheduledQueryRuleArgs(action, autoMitigate, description, displayName, enabled, location, resourceGroupName, ruleName, schedule, source, tags);
        }
    }
}
