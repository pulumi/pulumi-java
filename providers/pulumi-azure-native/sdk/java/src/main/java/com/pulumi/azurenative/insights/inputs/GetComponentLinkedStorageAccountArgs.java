// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetComponentLinkedStorageAccountArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetComponentLinkedStorageAccountArgs Empty = new GetComponentLinkedStorageAccountArgs();

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Application Insights component resource.
     * 
     */
    @Import(name="resourceName", required=true)
    private Output<String> resourceName;

    /**
     * @return The name of the Application Insights component resource.
     * 
     */
    public Output<String> resourceName() {
        return this.resourceName;
    }

    /**
     * The type of the Application Insights component data source for the linked storage account.
     * 
     */
    @Import(name="storageType", required=true)
    private Output<String> storageType;

    /**
     * @return The type of the Application Insights component data source for the linked storage account.
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }

    private GetComponentLinkedStorageAccountArgs() {}

    private GetComponentLinkedStorageAccountArgs(GetComponentLinkedStorageAccountArgs $) {
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
        this.storageType = $.storageType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetComponentLinkedStorageAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetComponentLinkedStorageAccountArgs $;

        public Builder() {
            $ = new GetComponentLinkedStorageAccountArgs();
        }

        public Builder(GetComponentLinkedStorageAccountArgs defaults) {
            $ = new GetComponentLinkedStorageAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param resourceName The name of the Application Insights component resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param resourceName The name of the Application Insights component resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        /**
         * @param storageType The type of the Application Insights component data source for the linked storage account.
         * 
         * @return builder
         * 
         */
        public Builder storageType(Output<String> storageType) {
            $.storageType = storageType;
            return this;
        }

        /**
         * @param storageType The type of the Application Insights component data source for the linked storage account.
         * 
         * @return builder
         * 
         */
        public Builder storageType(String storageType) {
            return storageType(Output.of(storageType));
        }

        public GetComponentLinkedStorageAccountArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceName = Objects.requireNonNull($.resourceName, "expected parameter 'resourceName' to be non-null");
            $.storageType = Objects.requireNonNull($.storageType, "expected parameter 'storageType' to be non-null");
            return $;
        }
    }

}
