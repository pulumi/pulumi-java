// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDatabaseMigrationsSqlDbPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabaseMigrationsSqlDbPlainArgs Empty = new GetDatabaseMigrationsSqlDbPlainArgs();

    /**
     * Complete migration details be included in the response.
     * 
     */
    @Import(name="expand")
    private @Nullable String expand;

    /**
     * @return Complete migration details be included in the response.
     * 
     */
    public Optional<String> expand() {
        return Optional.ofNullable(this.expand);
    }

    /**
     * Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.
     * 
     */
    @Import(name="migrationOperationId")
    private @Nullable String migrationOperationId;

    /**
     * @return Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.
     * 
     */
    public Optional<String> migrationOperationId() {
        return Optional.ofNullable(this.migrationOperationId);
    }

    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    @Import(name="sqlDbInstanceName", required=true)
    private String sqlDbInstanceName;

    public String sqlDbInstanceName() {
        return this.sqlDbInstanceName;
    }

    /**
     * The name of the target database.
     * 
     */
    @Import(name="targetDbName", required=true)
    private String targetDbName;

    /**
     * @return The name of the target database.
     * 
     */
    public String targetDbName() {
        return this.targetDbName;
    }

    private GetDatabaseMigrationsSqlDbPlainArgs() {}

    private GetDatabaseMigrationsSqlDbPlainArgs(GetDatabaseMigrationsSqlDbPlainArgs $) {
        this.expand = $.expand;
        this.migrationOperationId = $.migrationOperationId;
        this.resourceGroupName = $.resourceGroupName;
        this.sqlDbInstanceName = $.sqlDbInstanceName;
        this.targetDbName = $.targetDbName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseMigrationsSqlDbPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseMigrationsSqlDbPlainArgs $;

        public Builder() {
            $ = new GetDatabaseMigrationsSqlDbPlainArgs();
        }

        public Builder(GetDatabaseMigrationsSqlDbPlainArgs defaults) {
            $ = new GetDatabaseMigrationsSqlDbPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expand Complete migration details be included in the response.
         * 
         * @return builder
         * 
         */
        public Builder expand(@Nullable String expand) {
            $.expand = expand;
            return this;
        }

        /**
         * @param migrationOperationId Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.
         * 
         * @return builder
         * 
         */
        public Builder migrationOperationId(@Nullable String migrationOperationId) {
            $.migrationOperationId = migrationOperationId;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder sqlDbInstanceName(String sqlDbInstanceName) {
            $.sqlDbInstanceName = sqlDbInstanceName;
            return this;
        }

        /**
         * @param targetDbName The name of the target database.
         * 
         * @return builder
         * 
         */
        public Builder targetDbName(String targetDbName) {
            $.targetDbName = targetDbName;
            return this;
        }

        public GetDatabaseMigrationsSqlDbPlainArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sqlDbInstanceName = Objects.requireNonNull($.sqlDbInstanceName, "expected parameter 'sqlDbInstanceName' to be non-null");
            $.targetDbName = Objects.requireNonNull($.targetDbName, "expected parameter 'targetDbName' to be non-null");
            return $;
        }
    }

}
