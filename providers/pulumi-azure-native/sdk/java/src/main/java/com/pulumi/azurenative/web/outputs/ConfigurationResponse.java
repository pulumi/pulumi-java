// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.outputs;

import com.pulumi.azurenative.web.outputs.IngressResponse;
import com.pulumi.azurenative.web.outputs.RegistryCredentialsResponse;
import com.pulumi.azurenative.web.outputs.SecretResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigurationResponse {
    /**
     * ActiveRevisionsMode controls how active revisions are handled for the Container app:
     * &lt;list&gt;&lt;item&gt;Multiple: multiple revisions can be active. If no value if provided, this is the default&lt;/item&gt;&lt;item&gt;Single: Only one revision can be active at a time. Revision weights can not be used in this mode&lt;/item&gt;&lt;/list&gt;
     * 
     */
    private final @Nullable String activeRevisionsMode;
    /**
     * Ingress configurations.
     * 
     */
    private final @Nullable IngressResponse ingress;
    /**
     * Collection of private container registry credentials for containers used by the Container app
     * 
     */
    private final @Nullable List<RegistryCredentialsResponse> registries;
    /**
     * Collection of secrets used by a Container app
     * 
     */
    private final @Nullable List<SecretResponse> secrets;

    @CustomType.Constructor
    private ConfigurationResponse(
        @CustomType.Parameter("activeRevisionsMode") @Nullable String activeRevisionsMode,
        @CustomType.Parameter("ingress") @Nullable IngressResponse ingress,
        @CustomType.Parameter("registries") @Nullable List<RegistryCredentialsResponse> registries,
        @CustomType.Parameter("secrets") @Nullable List<SecretResponse> secrets) {
        this.activeRevisionsMode = activeRevisionsMode;
        this.ingress = ingress;
        this.registries = registries;
        this.secrets = secrets;
    }

    /**
     * ActiveRevisionsMode controls how active revisions are handled for the Container app:
     * &lt;list&gt;&lt;item&gt;Multiple: multiple revisions can be active. If no value if provided, this is the default&lt;/item&gt;&lt;item&gt;Single: Only one revision can be active at a time. Revision weights can not be used in this mode&lt;/item&gt;&lt;/list&gt;
     * 
    */
    public Optional<String> activeRevisionsMode() {
        return Optional.ofNullable(this.activeRevisionsMode);
    }
    /**
     * Ingress configurations.
     * 
    */
    public Optional<IngressResponse> ingress() {
        return Optional.ofNullable(this.ingress);
    }
    /**
     * Collection of private container registry credentials for containers used by the Container app
     * 
    */
    public List<RegistryCredentialsResponse> registries() {
        return this.registries == null ? List.of() : this.registries;
    }
    /**
     * Collection of secrets used by a Container app
     * 
    */
    public List<SecretResponse> secrets() {
        return this.secrets == null ? List.of() : this.secrets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String activeRevisionsMode;
        private @Nullable IngressResponse ingress;
        private @Nullable List<RegistryCredentialsResponse> registries;
        private @Nullable List<SecretResponse> secrets;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeRevisionsMode = defaults.activeRevisionsMode;
    	      this.ingress = defaults.ingress;
    	      this.registries = defaults.registries;
    	      this.secrets = defaults.secrets;
        }

        public Builder activeRevisionsMode(@Nullable String activeRevisionsMode) {
            this.activeRevisionsMode = activeRevisionsMode;
            return this;
        }
        public Builder ingress(@Nullable IngressResponse ingress) {
            this.ingress = ingress;
            return this;
        }
        public Builder registries(@Nullable List<RegistryCredentialsResponse> registries) {
            this.registries = registries;
            return this;
        }
        public Builder registries(RegistryCredentialsResponse... registries) {
            return registries(List.of(registries));
        }
        public Builder secrets(@Nullable List<SecretResponse> secrets) {
            this.secrets = secrets;
            return this;
        }
        public Builder secrets(SecretResponse... secrets) {
            return secrets(List.of(secrets));
        }        public ConfigurationResponse build() {
            return new ConfigurationResponse(activeRevisionsMode, ingress, registries, secrets);
        }
    }
}
