// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder;

import com.pulumi.azurenative.edgeorder.inputs.AddressDetailsArgs;
import com.pulumi.azurenative.edgeorder.inputs.OrderItemDetailsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrderItemByNameArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrderItemByNameArgs Empty = new OrderItemByNameArgs();

    /**
     * Represents shipping and return address for order item
     * 
     */
    @Import(name="addressDetails", required=true)
    private Output<AddressDetailsArgs> addressDetails;

    /**
     * @return Represents shipping and return address for order item
     * 
     */
    public Output<AddressDetailsArgs> addressDetails() {
        return this.addressDetails;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Id of the order to which order item belongs to
     * 
     */
    @Import(name="orderId", required=true)
    private Output<String> orderId;

    /**
     * @return Id of the order to which order item belongs to
     * 
     */
    public Output<String> orderId() {
        return this.orderId;
    }

    /**
     * Represents order item details.
     * 
     */
    @Import(name="orderItemDetails", required=true)
    private Output<OrderItemDetailsArgs> orderItemDetails;

    /**
     * @return Represents order item details.
     * 
     */
    public Output<OrderItemDetailsArgs> orderItemDetails() {
        return this.orderItemDetails;
    }

    /**
     * The name of the order item
     * 
     */
    @Import(name="orderItemName")
    private @Nullable Output<String> orderItemName;

    /**
     * @return The name of the order item
     * 
     */
    public Optional<Output<String>> orderItemName() {
        return Optional.ofNullable(this.orderItemName);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private OrderItemByNameArgs() {}

    private OrderItemByNameArgs(OrderItemByNameArgs $) {
        this.addressDetails = $.addressDetails;
        this.location = $.location;
        this.orderId = $.orderId;
        this.orderItemDetails = $.orderItemDetails;
        this.orderItemName = $.orderItemName;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrderItemByNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrderItemByNameArgs $;

        public Builder() {
            $ = new OrderItemByNameArgs();
        }

        public Builder(OrderItemByNameArgs defaults) {
            $ = new OrderItemByNameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressDetails Represents shipping and return address for order item
         * 
         * @return builder
         * 
         */
        public Builder addressDetails(Output<AddressDetailsArgs> addressDetails) {
            $.addressDetails = addressDetails;
            return this;
        }

        /**
         * @param addressDetails Represents shipping and return address for order item
         * 
         * @return builder
         * 
         */
        public Builder addressDetails(AddressDetailsArgs addressDetails) {
            return addressDetails(Output.of(addressDetails));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param orderId Id of the order to which order item belongs to
         * 
         * @return builder
         * 
         */
        public Builder orderId(Output<String> orderId) {
            $.orderId = orderId;
            return this;
        }

        /**
         * @param orderId Id of the order to which order item belongs to
         * 
         * @return builder
         * 
         */
        public Builder orderId(String orderId) {
            return orderId(Output.of(orderId));
        }

        /**
         * @param orderItemDetails Represents order item details.
         * 
         * @return builder
         * 
         */
        public Builder orderItemDetails(Output<OrderItemDetailsArgs> orderItemDetails) {
            $.orderItemDetails = orderItemDetails;
            return this;
        }

        /**
         * @param orderItemDetails Represents order item details.
         * 
         * @return builder
         * 
         */
        public Builder orderItemDetails(OrderItemDetailsArgs orderItemDetails) {
            return orderItemDetails(Output.of(orderItemDetails));
        }

        /**
         * @param orderItemName The name of the order item
         * 
         * @return builder
         * 
         */
        public Builder orderItemName(@Nullable Output<String> orderItemName) {
            $.orderItemName = orderItemName;
            return this;
        }

        /**
         * @param orderItemName The name of the order item
         * 
         * @return builder
         * 
         */
        public Builder orderItemName(String orderItemName) {
            return orderItemName(Output.of(orderItemName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public OrderItemByNameArgs build() {
            $.addressDetails = Objects.requireNonNull($.addressDetails, "expected parameter 'addressDetails' to be non-null");
            $.orderId = Objects.requireNonNull($.orderId, "expected parameter 'orderId' to be non-null");
            $.orderItemDetails = Objects.requireNonNull($.orderItemDetails, "expected parameter 'orderItemDetails' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
