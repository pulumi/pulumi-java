// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.azurenative.machinelearningservices.inputs.AutoScaleSettingsArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.CodeConfigurationArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.DataPathAssetReferenceArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.IdAssetReferenceArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.ManualScaleSettingsArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.OnlineRequestSettingsArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.OutputPathAssetReferenceArgs;
import com.pulumi.azurenative.machinelearningservices.inputs.ProbeSettingsArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedOnlineDeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedOnlineDeploymentArgs Empty = new ManagedOnlineDeploymentArgs();

    /**
     * If true, enables Application Insights logging.
     * 
     */
    @Import(name="appInsightsEnabled")
    private @Nullable Output<Boolean> appInsightsEnabled;

    /**
     * @return If true, enables Application Insights logging.
     * 
     */
    public Optional<Output<Boolean>> appInsightsEnabled() {
        return Optional.ofNullable(this.appInsightsEnabled);
    }

    /**
     * Code configuration for the endpoint deployment.
     * 
     */
    @Import(name="codeConfiguration")
    private @Nullable Output<CodeConfigurationArgs> codeConfiguration;

    /**
     * @return Code configuration for the endpoint deployment.
     * 
     */
    public Optional<Output<CodeConfigurationArgs>> codeConfiguration() {
        return Optional.ofNullable(this.codeConfiguration);
    }

    /**
     * Description of the endpoint deployment.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the endpoint deployment.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Enum to determine endpoint compute type.
     * Expected value is &#39;Managed&#39;.
     * 
     */
    @Import(name="endpointComputeType", required=true)
    private Output<String> endpointComputeType;

    /**
     * @return Enum to determine endpoint compute type.
     * Expected value is &#39;Managed&#39;.
     * 
     */
    public Output<String> endpointComputeType() {
        return this.endpointComputeType;
    }

    /**
     * ARM resource ID of the environment specification for the endpoint deployment.
     * 
     */
    @Import(name="environmentId")
    private @Nullable Output<String> environmentId;

    /**
     * @return ARM resource ID of the environment specification for the endpoint deployment.
     * 
     */
    public Optional<Output<String>> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }

    /**
     * Environment variables configuration for the deployment.
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable Output<Map<String,String>> environmentVariables;

    /**
     * @return Environment variables configuration for the deployment.
     * 
     */
    public Optional<Output<Map<String,String>>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * Compute instance type.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return Compute instance type.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * Deployment container liveness/readiness probe configuration.
     * 
     */
    @Import(name="livenessProbe")
    private @Nullable Output<ProbeSettingsArgs> livenessProbe;

    /**
     * @return Deployment container liveness/readiness probe configuration.
     * 
     */
    public Optional<Output<ProbeSettingsArgs>> livenessProbe() {
        return Optional.ofNullable(this.livenessProbe);
    }

    /**
     * Reference to the model asset for the endpoint deployment.
     * 
     */
    @Import(name="model")
    private @Nullable Output<Object> model;

    /**
     * @return Reference to the model asset for the endpoint deployment.
     * 
     */
    public Optional<Output<Object>> model() {
        return Optional.ofNullable(this.model);
    }

    /**
     * Property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<Map<String,String>> properties;

    /**
     * @return Property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    public Optional<Output<Map<String,String>>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Deployment container liveness/readiness probe configuration.
     * 
     */
    @Import(name="readinessProbe")
    private @Nullable Output<ProbeSettingsArgs> readinessProbe;

    /**
     * @return Deployment container liveness/readiness probe configuration.
     * 
     */
    public Optional<Output<ProbeSettingsArgs>> readinessProbe() {
        return Optional.ofNullable(this.readinessProbe);
    }

    /**
     * Online deployment scoring requests configuration.
     * 
     */
    @Import(name="requestSettings")
    private @Nullable Output<OnlineRequestSettingsArgs> requestSettings;

    /**
     * @return Online deployment scoring requests configuration.
     * 
     */
    public Optional<Output<OnlineRequestSettingsArgs>> requestSettings() {
        return Optional.ofNullable(this.requestSettings);
    }

    /**
     * Online deployment scaling configuration.
     * 
     */
    @Import(name="scaleSettings")
    private @Nullable Output<Either<AutoScaleSettingsArgs,ManualScaleSettingsArgs>> scaleSettings;

    /**
     * @return Online deployment scaling configuration.
     * 
     */
    public Optional<Output<Either<AutoScaleSettingsArgs,ManualScaleSettingsArgs>>> scaleSettings() {
        return Optional.ofNullable(this.scaleSettings);
    }

    private ManagedOnlineDeploymentArgs() {}

    private ManagedOnlineDeploymentArgs(ManagedOnlineDeploymentArgs $) {
        this.appInsightsEnabled = $.appInsightsEnabled;
        this.codeConfiguration = $.codeConfiguration;
        this.description = $.description;
        this.endpointComputeType = $.endpointComputeType;
        this.environmentId = $.environmentId;
        this.environmentVariables = $.environmentVariables;
        this.instanceType = $.instanceType;
        this.livenessProbe = $.livenessProbe;
        this.model = $.model;
        this.properties = $.properties;
        this.readinessProbe = $.readinessProbe;
        this.requestSettings = $.requestSettings;
        this.scaleSettings = $.scaleSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedOnlineDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedOnlineDeploymentArgs $;

        public Builder() {
            $ = new ManagedOnlineDeploymentArgs();
        }

        public Builder(ManagedOnlineDeploymentArgs defaults) {
            $ = new ManagedOnlineDeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appInsightsEnabled If true, enables Application Insights logging.
         * 
         * @return builder
         * 
         */
        public Builder appInsightsEnabled(@Nullable Output<Boolean> appInsightsEnabled) {
            $.appInsightsEnabled = appInsightsEnabled;
            return this;
        }

        /**
         * @param appInsightsEnabled If true, enables Application Insights logging.
         * 
         * @return builder
         * 
         */
        public Builder appInsightsEnabled(Boolean appInsightsEnabled) {
            return appInsightsEnabled(Output.of(appInsightsEnabled));
        }

        /**
         * @param codeConfiguration Code configuration for the endpoint deployment.
         * 
         * @return builder
         * 
         */
        public Builder codeConfiguration(@Nullable Output<CodeConfigurationArgs> codeConfiguration) {
            $.codeConfiguration = codeConfiguration;
            return this;
        }

        /**
         * @param codeConfiguration Code configuration for the endpoint deployment.
         * 
         * @return builder
         * 
         */
        public Builder codeConfiguration(CodeConfigurationArgs codeConfiguration) {
            return codeConfiguration(Output.of(codeConfiguration));
        }

        /**
         * @param description Description of the endpoint deployment.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the endpoint deployment.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param endpointComputeType Enum to determine endpoint compute type.
         * Expected value is &#39;Managed&#39;.
         * 
         * @return builder
         * 
         */
        public Builder endpointComputeType(Output<String> endpointComputeType) {
            $.endpointComputeType = endpointComputeType;
            return this;
        }

        /**
         * @param endpointComputeType Enum to determine endpoint compute type.
         * Expected value is &#39;Managed&#39;.
         * 
         * @return builder
         * 
         */
        public Builder endpointComputeType(String endpointComputeType) {
            return endpointComputeType(Output.of(endpointComputeType));
        }

        /**
         * @param environmentId ARM resource ID of the environment specification for the endpoint deployment.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(@Nullable Output<String> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param environmentId ARM resource ID of the environment specification for the endpoint deployment.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(String environmentId) {
            return environmentId(Output.of(environmentId));
        }

        /**
         * @param environmentVariables Environment variables configuration for the deployment.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(@Nullable Output<Map<String,String>> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        /**
         * @param environmentVariables Environment variables configuration for the deployment.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(Map<String,String> environmentVariables) {
            return environmentVariables(Output.of(environmentVariables));
        }

        /**
         * @param instanceType Compute instance type.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType Compute instance type.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param livenessProbe Deployment container liveness/readiness probe configuration.
         * 
         * @return builder
         * 
         */
        public Builder livenessProbe(@Nullable Output<ProbeSettingsArgs> livenessProbe) {
            $.livenessProbe = livenessProbe;
            return this;
        }

        /**
         * @param livenessProbe Deployment container liveness/readiness probe configuration.
         * 
         * @return builder
         * 
         */
        public Builder livenessProbe(ProbeSettingsArgs livenessProbe) {
            return livenessProbe(Output.of(livenessProbe));
        }

        /**
         * @param model Reference to the model asset for the endpoint deployment.
         * 
         * @return builder
         * 
         */
        public Builder model(@Nullable Output<Object> model) {
            $.model = model;
            return this;
        }

        /**
         * @param model Reference to the model asset for the endpoint deployment.
         * 
         * @return builder
         * 
         */
        public Builder model(Object model) {
            return model(Output.of(model));
        }

        /**
         * @param properties Property dictionary. Properties can be added, but not removed or altered.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<Map<String,String>> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Property dictionary. Properties can be added, but not removed or altered.
         * 
         * @return builder
         * 
         */
        public Builder properties(Map<String,String> properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param readinessProbe Deployment container liveness/readiness probe configuration.
         * 
         * @return builder
         * 
         */
        public Builder readinessProbe(@Nullable Output<ProbeSettingsArgs> readinessProbe) {
            $.readinessProbe = readinessProbe;
            return this;
        }

        /**
         * @param readinessProbe Deployment container liveness/readiness probe configuration.
         * 
         * @return builder
         * 
         */
        public Builder readinessProbe(ProbeSettingsArgs readinessProbe) {
            return readinessProbe(Output.of(readinessProbe));
        }

        /**
         * @param requestSettings Online deployment scoring requests configuration.
         * 
         * @return builder
         * 
         */
        public Builder requestSettings(@Nullable Output<OnlineRequestSettingsArgs> requestSettings) {
            $.requestSettings = requestSettings;
            return this;
        }

        /**
         * @param requestSettings Online deployment scoring requests configuration.
         * 
         * @return builder
         * 
         */
        public Builder requestSettings(OnlineRequestSettingsArgs requestSettings) {
            return requestSettings(Output.of(requestSettings));
        }

        /**
         * @param scaleSettings Online deployment scaling configuration.
         * 
         * @return builder
         * 
         */
        public Builder scaleSettings(@Nullable Output<Either<AutoScaleSettingsArgs,ManualScaleSettingsArgs>> scaleSettings) {
            $.scaleSettings = scaleSettings;
            return this;
        }

        /**
         * @param scaleSettings Online deployment scaling configuration.
         * 
         * @return builder
         * 
         */
        public Builder scaleSettings(Either<AutoScaleSettingsArgs,ManualScaleSettingsArgs> scaleSettings) {
            return scaleSettings(Output.of(scaleSettings));
        }

        /**
         * @param scaleSettings Online deployment scaling configuration.
         * 
         * @return builder
         * 
         */
        public Builder scaleSettings(AutoScaleSettingsArgs scaleSettings) {
            return scaleSettings(Either.ofLeft(scaleSettings));
        }

        /**
         * @param scaleSettings Online deployment scaling configuration.
         * 
         * @return builder
         * 
         */
        public Builder scaleSettings(ManualScaleSettingsArgs scaleSettings) {
            return scaleSettings(Either.ofRight(scaleSettings));
        }

        public ManagedOnlineDeploymentArgs build() {
            $.endpointComputeType = Codegen.stringProp("endpointComputeType").output().arg($.endpointComputeType).require();
            return $;
        }
    }

}
