// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
 * 
 */
public final class ObjectReplicationPolicyFilterResponse extends com.pulumi.resources.InvokeArgs {

    public static final ObjectReplicationPolicyFilterResponse Empty = new ObjectReplicationPolicyFilterResponse();

    /**
     * Blobs created after the time will be replicated to the destination. It must be in datetime format &#39;yyyy-MM-ddTHH:mm:ssZ&#39;. Example: 2020-02-19T16:05:00Z
     * 
     */
    @Import(name="minCreationTime")
    private @Nullable String minCreationTime;

    public Optional<String> minCreationTime() {
        return Optional.ofNullable(this.minCreationTime);
    }

    /**
     * Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
     * 
     */
    @Import(name="prefixMatch")
    private @Nullable List<String> prefixMatch;

    public Optional<List<String>> prefixMatch() {
        return Optional.ofNullable(this.prefixMatch);
    }

    private ObjectReplicationPolicyFilterResponse() {}

    private ObjectReplicationPolicyFilterResponse(ObjectReplicationPolicyFilterResponse $) {
        this.minCreationTime = $.minCreationTime;
        this.prefixMatch = $.prefixMatch;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectReplicationPolicyFilterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectReplicationPolicyFilterResponse $;

        public Builder() {
            $ = new ObjectReplicationPolicyFilterResponse();
        }

        public Builder(ObjectReplicationPolicyFilterResponse defaults) {
            $ = new ObjectReplicationPolicyFilterResponse(Objects.requireNonNull(defaults));
        }

        public Builder minCreationTime(@Nullable String minCreationTime) {
            $.minCreationTime = minCreationTime;
            return this;
        }

        public Builder prefixMatch(@Nullable List<String> prefixMatch) {
            $.prefixMatch = prefixMatch;
            return this;
        }

        public Builder prefixMatch(String... prefixMatch) {
            return prefixMatch(List.of(prefixMatch));
        }

        public ObjectReplicationPolicyFilterResponse build() {
            return $;
        }
    }

}
