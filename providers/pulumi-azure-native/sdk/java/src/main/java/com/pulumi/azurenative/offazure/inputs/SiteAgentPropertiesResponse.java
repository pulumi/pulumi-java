// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.offazure.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class for site agent properties.
 * 
 */
public final class SiteAgentPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final SiteAgentPropertiesResponse Empty = new SiteAgentPropertiesResponse();

    /**
     * ID of the agent.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return ID of the agent.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * Key vault ARM Id.
     * 
     */
    @Import(name="keyVaultId")
    private @Nullable String keyVaultId;

    /**
     * @return Key vault ARM Id.
     * 
     */
    public Optional<String> keyVaultId() {
        return Optional.ofNullable(this.keyVaultId);
    }

    /**
     * Key vault URI.
     * 
     */
    @Import(name="keyVaultUri")
    private @Nullable String keyVaultUri;

    /**
     * @return Key vault URI.
     * 
     */
    public Optional<String> keyVaultUri() {
        return Optional.ofNullable(this.keyVaultUri);
    }

    /**
     * Last heartbeat time of the agent in UTC.
     * 
     */
    @Import(name="lastHeartBeatUtc", required=true)
    private String lastHeartBeatUtc;

    /**
     * @return Last heartbeat time of the agent in UTC.
     * 
     */
    public String lastHeartBeatUtc() {
        return this.lastHeartBeatUtc;
    }

    /**
     * Version of the agent.
     * 
     */
    @Import(name="version", required=true)
    private String version;

    /**
     * @return Version of the agent.
     * 
     */
    public String version() {
        return this.version;
    }

    private SiteAgentPropertiesResponse() {}

    private SiteAgentPropertiesResponse(SiteAgentPropertiesResponse $) {
        this.id = $.id;
        this.keyVaultId = $.keyVaultId;
        this.keyVaultUri = $.keyVaultUri;
        this.lastHeartBeatUtc = $.lastHeartBeatUtc;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SiteAgentPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SiteAgentPropertiesResponse $;

        public Builder() {
            $ = new SiteAgentPropertiesResponse();
        }

        public Builder(SiteAgentPropertiesResponse defaults) {
            $ = new SiteAgentPropertiesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param id ID of the agent.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param keyVaultId Key vault ARM Id.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(@Nullable String keyVaultId) {
            $.keyVaultId = keyVaultId;
            return this;
        }

        /**
         * @param keyVaultUri Key vault URI.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultUri(@Nullable String keyVaultUri) {
            $.keyVaultUri = keyVaultUri;
            return this;
        }

        /**
         * @param lastHeartBeatUtc Last heartbeat time of the agent in UTC.
         * 
         * @return builder
         * 
         */
        public Builder lastHeartBeatUtc(String lastHeartBeatUtc) {
            $.lastHeartBeatUtc = lastHeartBeatUtc;
            return this;
        }

        /**
         * @param version Version of the agent.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            $.version = version;
            return this;
        }

        public SiteAgentPropertiesResponse build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.lastHeartBeatUtc = Objects.requireNonNull($.lastHeartBeatUtc, "expected parameter 'lastHeartBeatUtc' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
