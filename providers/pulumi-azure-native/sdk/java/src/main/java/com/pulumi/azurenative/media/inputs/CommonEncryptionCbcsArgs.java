// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.inputs;

import com.pulumi.azurenative.media.inputs.CbcsDrmConfigurationArgs;
import com.pulumi.azurenative.media.inputs.EnabledProtocolsArgs;
import com.pulumi.azurenative.media.inputs.StreamingPolicyContentKeysArgs;
import com.pulumi.azurenative.media.inputs.TrackSelectionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Class for CommonEncryptionCbcs encryption scheme
 * 
 */
public final class CommonEncryptionCbcsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CommonEncryptionCbcsArgs Empty = new CommonEncryptionCbcsArgs();

    /**
     * Representing which tracks should not be encrypted
     * 
     */
    @Import(name="clearTracks")
      private final @Nullable Output<List<TrackSelectionArgs>> clearTracks;

    public Output<List<TrackSelectionArgs>> clearTracks() {
        return this.clearTracks == null ? Codegen.empty() : this.clearTracks;
    }

    /**
     * Representing default content key for each encryption scheme and separate content keys for specific tracks
     * 
     */
    @Import(name="contentKeys")
      private final @Nullable Output<StreamingPolicyContentKeysArgs> contentKeys;

    public Output<StreamingPolicyContentKeysArgs> contentKeys() {
        return this.contentKeys == null ? Codegen.empty() : this.contentKeys;
    }

    /**
     * Configuration of DRMs for current encryption scheme
     * 
     */
    @Import(name="drm")
      private final @Nullable Output<CbcsDrmConfigurationArgs> drm;

    public Output<CbcsDrmConfigurationArgs> drm() {
        return this.drm == null ? Codegen.empty() : this.drm;
    }

    /**
     * Representing supported protocols
     * 
     */
    @Import(name="enabledProtocols")
      private final @Nullable Output<EnabledProtocolsArgs> enabledProtocols;

    public Output<EnabledProtocolsArgs> enabledProtocols() {
        return this.enabledProtocols == null ? Codegen.empty() : this.enabledProtocols;
    }

    public CommonEncryptionCbcsArgs(
        @Nullable Output<List<TrackSelectionArgs>> clearTracks,
        @Nullable Output<StreamingPolicyContentKeysArgs> contentKeys,
        @Nullable Output<CbcsDrmConfigurationArgs> drm,
        @Nullable Output<EnabledProtocolsArgs> enabledProtocols) {
        this.clearTracks = clearTracks;
        this.contentKeys = contentKeys;
        this.drm = drm;
        this.enabledProtocols = enabledProtocols;
    }

    private CommonEncryptionCbcsArgs() {
        this.clearTracks = Codegen.empty();
        this.contentKeys = Codegen.empty();
        this.drm = Codegen.empty();
        this.enabledProtocols = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CommonEncryptionCbcsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<TrackSelectionArgs>> clearTracks;
        private @Nullable Output<StreamingPolicyContentKeysArgs> contentKeys;
        private @Nullable Output<CbcsDrmConfigurationArgs> drm;
        private @Nullable Output<EnabledProtocolsArgs> enabledProtocols;

        public Builder() {
    	      // Empty
        }

        public Builder(CommonEncryptionCbcsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clearTracks = defaults.clearTracks;
    	      this.contentKeys = defaults.contentKeys;
    	      this.drm = defaults.drm;
    	      this.enabledProtocols = defaults.enabledProtocols;
        }

        public Builder clearTracks(@Nullable Output<List<TrackSelectionArgs>> clearTracks) {
            this.clearTracks = clearTracks;
            return this;
        }
        public Builder clearTracks(@Nullable List<TrackSelectionArgs> clearTracks) {
            this.clearTracks = Codegen.ofNullable(clearTracks);
            return this;
        }
        public Builder clearTracks(TrackSelectionArgs... clearTracks) {
            return clearTracks(List.of(clearTracks));
        }
        public Builder contentKeys(@Nullable Output<StreamingPolicyContentKeysArgs> contentKeys) {
            this.contentKeys = contentKeys;
            return this;
        }
        public Builder contentKeys(@Nullable StreamingPolicyContentKeysArgs contentKeys) {
            this.contentKeys = Codegen.ofNullable(contentKeys);
            return this;
        }
        public Builder drm(@Nullable Output<CbcsDrmConfigurationArgs> drm) {
            this.drm = drm;
            return this;
        }
        public Builder drm(@Nullable CbcsDrmConfigurationArgs drm) {
            this.drm = Codegen.ofNullable(drm);
            return this;
        }
        public Builder enabledProtocols(@Nullable Output<EnabledProtocolsArgs> enabledProtocols) {
            this.enabledProtocols = enabledProtocols;
            return this;
        }
        public Builder enabledProtocols(@Nullable EnabledProtocolsArgs enabledProtocols) {
            this.enabledProtocols = Codegen.ofNullable(enabledProtocols);
            return this;
        }        public CommonEncryptionCbcsArgs build() {
            return new CommonEncryptionCbcsArgs(clearTracks, contentKeys, drm, enabledProtocols);
        }
    }
}
