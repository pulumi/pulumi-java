// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.network.FrontDoorArgs;
import com.pulumi.azurenative.network.outputs.BackendPoolResponse;
import com.pulumi.azurenative.network.outputs.BackendPoolsSettingsResponse;
import com.pulumi.azurenative.network.outputs.FrontendEndpointResponse;
import com.pulumi.azurenative.network.outputs.HealthProbeSettingsModelResponse;
import com.pulumi.azurenative.network.outputs.LoadBalancingSettingsModelResponse;
import com.pulumi.azurenative.network.outputs.RoutingRuleResponse;
import com.pulumi.azurenative.network.outputs.RulesEngineResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic is sent there.
 * API Version: 2020-05-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:FrontDoor frontDoor1 /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:FrontDoor")
public class FrontDoor extends com.pulumi.resources.CustomResource {
    /**
     * Backend pools available to routing rules.
     * 
     */
    @Export(name="backendPools", type=List.class, parameters={BackendPoolResponse.class})
    private Output</* @Nullable */ List<BackendPoolResponse>> backendPools;

    /**
     * @return Backend pools available to routing rules.
     * 
     */
    public Output<Optional<List<BackendPoolResponse>>> backendPools() {
        return Codegen.optional(this.backendPools);
    }
    /**
     * Settings for all backendPools
     * 
     */
    @Export(name="backendPoolsSettings", type=BackendPoolsSettingsResponse.class, parameters={})
    private Output</* @Nullable */ BackendPoolsSettingsResponse> backendPoolsSettings;

    /**
     * @return Settings for all backendPools
     * 
     */
    public Output<Optional<BackendPoolsSettingsResponse>> backendPoolsSettings() {
        return Codegen.optional(this.backendPoolsSettings);
    }
    /**
     * The host that each frontendEndpoint must CNAME to.
     * 
     */
    @Export(name="cname", type=String.class, parameters={})
    private Output<String> cname;

    /**
     * @return The host that each frontendEndpoint must CNAME to.
     * 
     */
    public Output<String> cname() {
        return this.cname;
    }
    /**
     * Operational status of the Front Door load balancer. Permitted values are &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
     */
    @Export(name="enabledState", type=String.class, parameters={})
    private Output</* @Nullable */ String> enabledState;

    /**
     * @return Operational status of the Front Door load balancer. Permitted values are &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
     */
    public Output<Optional<String>> enabledState() {
        return Codegen.optional(this.enabledState);
    }
    /**
     * A friendly name for the frontDoor
     * 
     */
    @Export(name="friendlyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> friendlyName;

    /**
     * @return A friendly name for the frontDoor
     * 
     */
    public Output<Optional<String>> friendlyName() {
        return Codegen.optional(this.friendlyName);
    }
    /**
     * The Id of the frontdoor.
     * 
     */
    @Export(name="frontdoorId", type=String.class, parameters={})
    private Output<String> frontdoorId;

    /**
     * @return The Id of the frontdoor.
     * 
     */
    public Output<String> frontdoorId() {
        return this.frontdoorId;
    }
    /**
     * Frontend endpoints available to routing rules.
     * 
     */
    @Export(name="frontendEndpoints", type=List.class, parameters={FrontendEndpointResponse.class})
    private Output</* @Nullable */ List<FrontendEndpointResponse>> frontendEndpoints;

    /**
     * @return Frontend endpoints available to routing rules.
     * 
     */
    public Output<Optional<List<FrontendEndpointResponse>>> frontendEndpoints() {
        return Codegen.optional(this.frontendEndpoints);
    }
    /**
     * Health probe settings associated with this Front Door instance.
     * 
     */
    @Export(name="healthProbeSettings", type=List.class, parameters={HealthProbeSettingsModelResponse.class})
    private Output</* @Nullable */ List<HealthProbeSettingsModelResponse>> healthProbeSettings;

    /**
     * @return Health probe settings associated with this Front Door instance.
     * 
     */
    public Output<Optional<List<HealthProbeSettingsModelResponse>>> healthProbeSettings() {
        return Codegen.optional(this.healthProbeSettings);
    }
    /**
     * Load balancing settings associated with this Front Door instance.
     * 
     */
    @Export(name="loadBalancingSettings", type=List.class, parameters={LoadBalancingSettingsModelResponse.class})
    private Output</* @Nullable */ List<LoadBalancingSettingsModelResponse>> loadBalancingSettings;

    /**
     * @return Load balancing settings associated with this Front Door instance.
     * 
     */
    public Output<Optional<List<LoadBalancingSettingsModelResponse>>> loadBalancingSettings() {
        return Codegen.optional(this.loadBalancingSettings);
    }
    /**
     * Resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Provisioning state of the Front Door.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return Provisioning state of the Front Door.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Resource status of the Front Door.
     * 
     */
    @Export(name="resourceState", type=String.class, parameters={})
    private Output<String> resourceState;

    /**
     * @return Resource status of the Front Door.
     * 
     */
    public Output<String> resourceState() {
        return this.resourceState;
    }
    /**
     * Routing rules associated with this Front Door.
     * 
     */
    @Export(name="routingRules", type=List.class, parameters={RoutingRuleResponse.class})
    private Output</* @Nullable */ List<RoutingRuleResponse>> routingRules;

    /**
     * @return Routing rules associated with this Front Door.
     * 
     */
    public Output<Optional<List<RoutingRuleResponse>>> routingRules() {
        return Codegen.optional(this.routingRules);
    }
    /**
     * Rules Engine Configurations available to routing rules.
     * 
     */
    @Export(name="rulesEngines", type=List.class, parameters={RulesEngineResponse.class})
    private Output<List<RulesEngineResponse>> rulesEngines;

    /**
     * @return Rules Engine Configurations available to routing rules.
     * 
     */
    public Output<List<RulesEngineResponse>> rulesEngines() {
        return this.rulesEngines;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FrontDoor(String name) {
        this(name, FrontDoorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FrontDoor(String name, FrontDoorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FrontDoor(String name, FrontDoorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:FrontDoor", name, args == null ? FrontDoorArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FrontDoor(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:FrontDoor", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:network/v20190401:FrontDoor").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190501:FrontDoor").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200101:FrontDoor").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200401:FrontDoor").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200501:FrontDoor").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FrontDoor get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FrontDoor(name, id, options);
    }
}
