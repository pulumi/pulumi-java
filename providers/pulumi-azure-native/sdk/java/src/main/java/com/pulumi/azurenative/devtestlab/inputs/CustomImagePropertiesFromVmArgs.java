// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.inputs;

import com.pulumi.azurenative.devtestlab.inputs.LinuxOsInfoArgs;
import com.pulumi.azurenative.devtestlab.inputs.WindowsOsInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties for creating a custom image from a virtual machine.
 * 
 */
public final class CustomImagePropertiesFromVmArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomImagePropertiesFromVmArgs Empty = new CustomImagePropertiesFromVmArgs();

    /**
     * The Linux OS information of the VM.
     * 
     */
    @Import(name="linuxOsInfo")
    private @Nullable Output<LinuxOsInfoArgs> linuxOsInfo;

    /**
     * @return The Linux OS information of the VM.
     * 
     */
    public Optional<Output<LinuxOsInfoArgs>> linuxOsInfo() {
        return Optional.ofNullable(this.linuxOsInfo);
    }

    /**
     * The source vm identifier.
     * 
     */
    @Import(name="sourceVmId")
    private @Nullable Output<String> sourceVmId;

    /**
     * @return The source vm identifier.
     * 
     */
    public Optional<Output<String>> sourceVmId() {
        return Optional.ofNullable(this.sourceVmId);
    }

    /**
     * The Windows OS information of the VM.
     * 
     */
    @Import(name="windowsOsInfo")
    private @Nullable Output<WindowsOsInfoArgs> windowsOsInfo;

    /**
     * @return The Windows OS information of the VM.
     * 
     */
    public Optional<Output<WindowsOsInfoArgs>> windowsOsInfo() {
        return Optional.ofNullable(this.windowsOsInfo);
    }

    private CustomImagePropertiesFromVmArgs() {}

    private CustomImagePropertiesFromVmArgs(CustomImagePropertiesFromVmArgs $) {
        this.linuxOsInfo = $.linuxOsInfo;
        this.sourceVmId = $.sourceVmId;
        this.windowsOsInfo = $.windowsOsInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomImagePropertiesFromVmArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomImagePropertiesFromVmArgs $;

        public Builder() {
            $ = new CustomImagePropertiesFromVmArgs();
        }

        public Builder(CustomImagePropertiesFromVmArgs defaults) {
            $ = new CustomImagePropertiesFromVmArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param linuxOsInfo The Linux OS information of the VM.
         * 
         * @return builder
         * 
         */
        public Builder linuxOsInfo(@Nullable Output<LinuxOsInfoArgs> linuxOsInfo) {
            $.linuxOsInfo = linuxOsInfo;
            return this;
        }

        /**
         * @param linuxOsInfo The Linux OS information of the VM.
         * 
         * @return builder
         * 
         */
        public Builder linuxOsInfo(LinuxOsInfoArgs linuxOsInfo) {
            return linuxOsInfo(Output.of(linuxOsInfo));
        }

        /**
         * @param sourceVmId The source vm identifier.
         * 
         * @return builder
         * 
         */
        public Builder sourceVmId(@Nullable Output<String> sourceVmId) {
            $.sourceVmId = sourceVmId;
            return this;
        }

        /**
         * @param sourceVmId The source vm identifier.
         * 
         * @return builder
         * 
         */
        public Builder sourceVmId(String sourceVmId) {
            return sourceVmId(Output.of(sourceVmId));
        }

        /**
         * @param windowsOsInfo The Windows OS information of the VM.
         * 
         * @return builder
         * 
         */
        public Builder windowsOsInfo(@Nullable Output<WindowsOsInfoArgs> windowsOsInfo) {
            $.windowsOsInfo = windowsOsInfo;
            return this;
        }

        /**
         * @param windowsOsInfo The Windows OS information of the VM.
         * 
         * @return builder
         * 
         */
        public Builder windowsOsInfo(WindowsOsInfoArgs windowsOsInfo) {
            return windowsOsInfo(Output.of(windowsOsInfo));
        }

        public CustomImagePropertiesFromVmArgs build() {
            return $;
        }
    }

}
