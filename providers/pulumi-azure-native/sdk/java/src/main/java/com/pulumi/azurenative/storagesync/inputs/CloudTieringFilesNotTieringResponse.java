// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagesync.inputs;

import com.pulumi.azurenative.storagesync.inputs.FilesNotTieringErrorResponse;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Server endpoint cloud tiering status object.
 * 
 */
public final class CloudTieringFilesNotTieringResponse extends com.pulumi.resources.InvokeArgs {

    public static final CloudTieringFilesNotTieringResponse Empty = new CloudTieringFilesNotTieringResponse();

    /**
     * Array of tiering errors
     * 
     */
    @Import(name="errors", required=true)
    private List<FilesNotTieringErrorResponse> errors;

    /**
     * @return Array of tiering errors
     * 
     */
    public List<FilesNotTieringErrorResponse> errors() {
        return this.errors;
    }

    /**
     * Last updated timestamp
     * 
     */
    @Import(name="lastUpdatedTimestamp", required=true)
    private String lastUpdatedTimestamp;

    /**
     * @return Last updated timestamp
     * 
     */
    public String lastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    /**
     * Last cloud tiering result (HResult)
     * 
     */
    @Import(name="totalFileCount", required=true)
    private Double totalFileCount;

    /**
     * @return Last cloud tiering result (HResult)
     * 
     */
    public Double totalFileCount() {
        return this.totalFileCount;
    }

    private CloudTieringFilesNotTieringResponse() {}

    private CloudTieringFilesNotTieringResponse(CloudTieringFilesNotTieringResponse $) {
        this.errors = $.errors;
        this.lastUpdatedTimestamp = $.lastUpdatedTimestamp;
        this.totalFileCount = $.totalFileCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudTieringFilesNotTieringResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudTieringFilesNotTieringResponse $;

        public Builder() {
            $ = new CloudTieringFilesNotTieringResponse();
        }

        public Builder(CloudTieringFilesNotTieringResponse defaults) {
            $ = new CloudTieringFilesNotTieringResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param errors Array of tiering errors
         * 
         * @return builder
         * 
         */
        public Builder errors(List<FilesNotTieringErrorResponse> errors) {
            $.errors = errors;
            return this;
        }

        /**
         * @param errors Array of tiering errors
         * 
         * @return builder
         * 
         */
        public Builder errors(FilesNotTieringErrorResponse... errors) {
            return errors(List.of(errors));
        }

        /**
         * @param lastUpdatedTimestamp Last updated timestamp
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedTimestamp(String lastUpdatedTimestamp) {
            $.lastUpdatedTimestamp = lastUpdatedTimestamp;
            return this;
        }

        /**
         * @param totalFileCount Last cloud tiering result (HResult)
         * 
         * @return builder
         * 
         */
        public Builder totalFileCount(Double totalFileCount) {
            $.totalFileCount = totalFileCount;
            return this;
        }

        public CloudTieringFilesNotTieringResponse build() {
            $.errors = Objects.requireNonNull($.errors, "expected parameter 'errors' to be non-null");
            $.lastUpdatedTimestamp = Objects.requireNonNull($.lastUpdatedTimestamp, "expected parameter 'lastUpdatedTimestamp' to be non-null");
            $.totalFileCount = Objects.requireNonNull($.totalFileCount, "expected parameter 'totalFileCount' to be non-null");
            return $;
        }
    }

}
