// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThrottlingMetricResponse extends com.pulumi.resources.InvokeArgs {

    public static final ThrottlingMetricResponse Empty = new ThrottlingMetricResponse();

    @Import(name="interval")
    private @Nullable String interval;

    public Optional<String> interval() {
        return Optional.ofNullable(this.interval);
    }

    @Import(name="limit", required=true)
    private Double limit;

    public Double limit() {
        return this.limit;
    }

    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private ThrottlingMetricResponse() {}

    private ThrottlingMetricResponse(ThrottlingMetricResponse $) {
        this.interval = $.interval;
        this.limit = $.limit;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThrottlingMetricResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThrottlingMetricResponse $;

        public Builder() {
            $ = new ThrottlingMetricResponse();
        }

        public Builder(ThrottlingMetricResponse defaults) {
            $ = new ThrottlingMetricResponse(Objects.requireNonNull(defaults));
        }

        public Builder interval(@Nullable String interval) {
            $.interval = interval;
            return this;
        }

        public Builder limit(Double limit) {
            $.limit = limit;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public ThrottlingMetricResponse build() {
            $.limit = Objects.requireNonNull($.limit, "expected parameter 'limit' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
