// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetRoleDefinitionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRoleDefinitionPlainArgs Empty = new GetRoleDefinitionPlainArgs();

    /**
     * The ID of the role definition.
     * 
     */
    @Import(name="roleDefinitionId", required=true)
    private String roleDefinitionId;

    /**
     * @return The ID of the role definition.
     * 
     */
    public String roleDefinitionId() {
        return this.roleDefinitionId;
    }

    /**
     * The scope of the role definition.
     * 
     */
    @Import(name="scope", required=true)
    private String scope;

    /**
     * @return The scope of the role definition.
     * 
     */
    public String scope() {
        return this.scope;
    }

    private GetRoleDefinitionPlainArgs() {}

    private GetRoleDefinitionPlainArgs(GetRoleDefinitionPlainArgs $) {
        this.roleDefinitionId = $.roleDefinitionId;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRoleDefinitionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRoleDefinitionPlainArgs $;

        public Builder() {
            $ = new GetRoleDefinitionPlainArgs();
        }

        public Builder(GetRoleDefinitionPlainArgs defaults) {
            $ = new GetRoleDefinitionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param roleDefinitionId The ID of the role definition.
         * 
         * @return builder
         * 
         */
        public Builder roleDefinitionId(String roleDefinitionId) {
            $.roleDefinitionId = roleDefinitionId;
            return this;
        }

        /**
         * @param scope The scope of the role definition.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            $.scope = scope;
            return this;
        }

        public GetRoleDefinitionPlainArgs build() {
            $.roleDefinitionId = Objects.requireNonNull($.roleDefinitionId, "expected parameter 'roleDefinitionId' to be non-null");
            $.scope = Objects.requireNonNull($.scope, "expected parameter 'scope' to be non-null");
            return $;
        }
    }

}
