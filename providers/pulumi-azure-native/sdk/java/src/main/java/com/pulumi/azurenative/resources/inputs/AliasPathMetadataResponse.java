// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.resources.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class AliasPathMetadataResponse extends com.pulumi.resources.InvokeArgs {

    public static final AliasPathMetadataResponse Empty = new AliasPathMetadataResponse();

    /**
     * The attributes of the token that the alias path is referring to.
     * 
     */
    @Import(name="attributes", required=true)
    private String attributes;

    public String attributes() {
        return this.attributes;
    }

    /**
     * The type of the token that the alias path is referring to.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private AliasPathMetadataResponse() {}

    private AliasPathMetadataResponse(AliasPathMetadataResponse $) {
        this.attributes = $.attributes;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AliasPathMetadataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AliasPathMetadataResponse $;

        public Builder() {
            $ = new AliasPathMetadataResponse();
        }

        public Builder(AliasPathMetadataResponse defaults) {
            $ = new AliasPathMetadataResponse(Objects.requireNonNull(defaults));
        }

        public Builder attributes(String attributes) {
            $.attributes = attributes;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public AliasPathMetadataResponse build() {
            $.attributes = Objects.requireNonNull($.attributes, "expected parameter 'attributes' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
