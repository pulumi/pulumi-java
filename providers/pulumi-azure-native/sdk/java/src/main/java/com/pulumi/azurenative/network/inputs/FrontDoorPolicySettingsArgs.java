// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.azurenative.network.enums.PolicyEnabledState;
import com.pulumi.azurenative.network.enums.PolicyMode;
import com.pulumi.azurenative.network.enums.PolicyRequestBodyCheck;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines top-level WebApplicationFirewallPolicy configuration settings.
 * 
 */
public final class FrontDoorPolicySettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontDoorPolicySettingsArgs Empty = new FrontDoorPolicySettingsArgs();

    /**
     * If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
     * 
     */
    @Import(name="customBlockResponseBody")
    private @Nullable Output<String> customBlockResponseBody;

    public Optional<Output<String>> customBlockResponseBody() {
        return Optional.ofNullable(this.customBlockResponseBody);
    }

    /**
     * If the action type is block, customer can override the response status code.
     * 
     */
    @Import(name="customBlockResponseStatusCode")
    private @Nullable Output<Integer> customBlockResponseStatusCode;

    public Optional<Output<Integer>> customBlockResponseStatusCode() {
        return Optional.ofNullable(this.customBlockResponseStatusCode);
    }

    /**
     * Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
     * 
     */
    @Import(name="enabledState")
    private @Nullable Output<Either<String,PolicyEnabledState>> enabledState;

    public Optional<Output<Either<String,PolicyEnabledState>>> enabledState() {
        return Optional.ofNullable(this.enabledState);
    }

    /**
     * Describes if it is in detection mode or prevention mode at policy level.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<Either<String,PolicyMode>> mode;

    public Optional<Output<Either<String,PolicyMode>>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * If action type is redirect, this field represents redirect URL for the client.
     * 
     */
    @Import(name="redirectUrl")
    private @Nullable Output<String> redirectUrl;

    public Optional<Output<String>> redirectUrl() {
        return Optional.ofNullable(this.redirectUrl);
    }

    /**
     * Describes if policy managed rules will inspect the request body content.
     * 
     */
    @Import(name="requestBodyCheck")
    private @Nullable Output<Either<String,PolicyRequestBodyCheck>> requestBodyCheck;

    public Optional<Output<Either<String,PolicyRequestBodyCheck>>> requestBodyCheck() {
        return Optional.ofNullable(this.requestBodyCheck);
    }

    private FrontDoorPolicySettingsArgs() {}

    private FrontDoorPolicySettingsArgs(FrontDoorPolicySettingsArgs $) {
        this.customBlockResponseBody = $.customBlockResponseBody;
        this.customBlockResponseStatusCode = $.customBlockResponseStatusCode;
        this.enabledState = $.enabledState;
        this.mode = $.mode;
        this.redirectUrl = $.redirectUrl;
        this.requestBodyCheck = $.requestBodyCheck;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontDoorPolicySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontDoorPolicySettingsArgs $;

        public Builder() {
            $ = new FrontDoorPolicySettingsArgs();
        }

        public Builder(FrontDoorPolicySettingsArgs defaults) {
            $ = new FrontDoorPolicySettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder customBlockResponseBody(@Nullable Output<String> customBlockResponseBody) {
            $.customBlockResponseBody = customBlockResponseBody;
            return this;
        }

        public Builder customBlockResponseBody(String customBlockResponseBody) {
            return customBlockResponseBody(Output.of(customBlockResponseBody));
        }

        public Builder customBlockResponseStatusCode(@Nullable Output<Integer> customBlockResponseStatusCode) {
            $.customBlockResponseStatusCode = customBlockResponseStatusCode;
            return this;
        }

        public Builder customBlockResponseStatusCode(Integer customBlockResponseStatusCode) {
            return customBlockResponseStatusCode(Output.of(customBlockResponseStatusCode));
        }

        public Builder enabledState(@Nullable Output<Either<String,PolicyEnabledState>> enabledState) {
            $.enabledState = enabledState;
            return this;
        }

        public Builder enabledState(Either<String,PolicyEnabledState> enabledState) {
            return enabledState(Output.of(enabledState));
        }

        public Builder enabledState(String enabledState) {
            return enabledState(Either.ofLeft(enabledState));
        }

        public Builder enabledState(PolicyEnabledState enabledState) {
            return enabledState(Either.ofRight(enabledState));
        }

        public Builder mode(@Nullable Output<Either<String,PolicyMode>> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(Either<String,PolicyMode> mode) {
            return mode(Output.of(mode));
        }

        public Builder mode(String mode) {
            return mode(Either.ofLeft(mode));
        }

        public Builder mode(PolicyMode mode) {
            return mode(Either.ofRight(mode));
        }

        public Builder redirectUrl(@Nullable Output<String> redirectUrl) {
            $.redirectUrl = redirectUrl;
            return this;
        }

        public Builder redirectUrl(String redirectUrl) {
            return redirectUrl(Output.of(redirectUrl));
        }

        public Builder requestBodyCheck(@Nullable Output<Either<String,PolicyRequestBodyCheck>> requestBodyCheck) {
            $.requestBodyCheck = requestBodyCheck;
            return this;
        }

        public Builder requestBodyCheck(Either<String,PolicyRequestBodyCheck> requestBodyCheck) {
            return requestBodyCheck(Output.of(requestBodyCheck));
        }

        public Builder requestBodyCheck(String requestBodyCheck) {
            return requestBodyCheck(Either.ofLeft(requestBodyCheck));
        }

        public Builder requestBodyCheck(PolicyRequestBodyCheck requestBodyCheck) {
            return requestBodyCheck(Either.ofRight(requestBodyCheck));
        }

        public FrontDoorPolicySettingsArgs build() {
            return $;
        }
    }

}
