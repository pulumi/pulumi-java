// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.inputs;

import com.pulumi.azurenative.recoveryservices.inputs.PrivateEndpointConnectionVaultPropertiesResponse;
import com.pulumi.azurenative.recoveryservices.inputs.UpgradeDetailsResponse;
import com.pulumi.azurenative.recoveryservices.inputs.VaultPropertiesResponseEncryption;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of the vault.
 * 
 */
public final class VaultPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final VaultPropertiesResponse Empty = new VaultPropertiesResponse();

    /**
     * Customer Managed Key details of the resource.
     * 
     */
    @Import(name="encryption")
    private @Nullable VaultPropertiesResponseEncryption encryption;

    public Optional<VaultPropertiesResponseEncryption> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * List of private endpoint connection.
     * 
     */
    @Import(name="privateEndpointConnections", required=true)
    private List<PrivateEndpointConnectionVaultPropertiesResponse> privateEndpointConnections;

    public List<PrivateEndpointConnectionVaultPropertiesResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }

    /**
     * Private endpoint state for backup.
     * 
     */
    @Import(name="privateEndpointStateForBackup", required=true)
    private String privateEndpointStateForBackup;

    public String privateEndpointStateForBackup() {
        return this.privateEndpointStateForBackup;
    }

    /**
     * Private endpoint state for site recovery.
     * 
     */
    @Import(name="privateEndpointStateForSiteRecovery", required=true)
    private String privateEndpointStateForSiteRecovery;

    public String privateEndpointStateForSiteRecovery() {
        return this.privateEndpointStateForSiteRecovery;
    }

    /**
     * Provisioning State.
     * 
     */
    @Import(name="provisioningState", required=true)
    private String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Details for upgrading vault.
     * 
     */
    @Import(name="upgradeDetails")
    private @Nullable UpgradeDetailsResponse upgradeDetails;

    public Optional<UpgradeDetailsResponse> upgradeDetails() {
        return Optional.ofNullable(this.upgradeDetails);
    }

    private VaultPropertiesResponse() {}

    private VaultPropertiesResponse(VaultPropertiesResponse $) {
        this.encryption = $.encryption;
        this.privateEndpointConnections = $.privateEndpointConnections;
        this.privateEndpointStateForBackup = $.privateEndpointStateForBackup;
        this.privateEndpointStateForSiteRecovery = $.privateEndpointStateForSiteRecovery;
        this.provisioningState = $.provisioningState;
        this.upgradeDetails = $.upgradeDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VaultPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VaultPropertiesResponse $;

        public Builder() {
            $ = new VaultPropertiesResponse();
        }

        public Builder(VaultPropertiesResponse defaults) {
            $ = new VaultPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder encryption(@Nullable VaultPropertiesResponseEncryption encryption) {
            $.encryption = encryption;
            return this;
        }

        public Builder privateEndpointConnections(List<PrivateEndpointConnectionVaultPropertiesResponse> privateEndpointConnections) {
            $.privateEndpointConnections = privateEndpointConnections;
            return this;
        }

        public Builder privateEndpointConnections(PrivateEndpointConnectionVaultPropertiesResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }

        public Builder privateEndpointStateForBackup(String privateEndpointStateForBackup) {
            $.privateEndpointStateForBackup = privateEndpointStateForBackup;
            return this;
        }

        public Builder privateEndpointStateForSiteRecovery(String privateEndpointStateForSiteRecovery) {
            $.privateEndpointStateForSiteRecovery = privateEndpointStateForSiteRecovery;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        public Builder upgradeDetails(@Nullable UpgradeDetailsResponse upgradeDetails) {
            $.upgradeDetails = upgradeDetails;
            return this;
        }

        public VaultPropertiesResponse build() {
            $.privateEndpointConnections = Objects.requireNonNull($.privateEndpointConnections, "expected parameter 'privateEndpointConnections' to be non-null");
            $.privateEndpointStateForBackup = Objects.requireNonNull($.privateEndpointStateForBackup, "expected parameter 'privateEndpointStateForBackup' to be non-null");
            $.privateEndpointStateForSiteRecovery = Objects.requireNonNull($.privateEndpointStateForSiteRecovery, "expected parameter 'privateEndpointStateForSiteRecovery' to be non-null");
            $.provisioningState = Objects.requireNonNull($.provisioningState, "expected parameter 'provisioningState' to be non-null");
            return $;
        }
    }

}
