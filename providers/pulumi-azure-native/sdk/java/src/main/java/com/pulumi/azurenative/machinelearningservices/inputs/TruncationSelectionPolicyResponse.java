// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
 * 
 */
public final class TruncationSelectionPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final TruncationSelectionPolicyResponse Empty = new TruncationSelectionPolicyResponse();

    /**
     * Number of intervals by which to delay the first evaluation.
     * 
     */
    @Import(name="delayEvaluation")
    private @Nullable Integer delayEvaluation;

    public Optional<Integer> delayEvaluation() {
        return Optional.ofNullable(this.delayEvaluation);
    }

    /**
     * Interval (number of runs) between policy evaluations.
     * 
     */
    @Import(name="evaluationInterval")
    private @Nullable Integer evaluationInterval;

    public Optional<Integer> evaluationInterval() {
        return Optional.ofNullable(this.evaluationInterval);
    }

    /**
     * Expected value is &#39;TruncationSelection&#39;.
     * 
     */
    @Import(name="policyType", required=true)
    private String policyType;

    public String policyType() {
        return this.policyType;
    }

    /**
     * The percentage of runs to cancel at each evaluation interval.
     * 
     */
    @Import(name="truncationPercentage")
    private @Nullable Integer truncationPercentage;

    public Optional<Integer> truncationPercentage() {
        return Optional.ofNullable(this.truncationPercentage);
    }

    private TruncationSelectionPolicyResponse() {}

    private TruncationSelectionPolicyResponse(TruncationSelectionPolicyResponse $) {
        this.delayEvaluation = $.delayEvaluation;
        this.evaluationInterval = $.evaluationInterval;
        this.policyType = $.policyType;
        this.truncationPercentage = $.truncationPercentage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TruncationSelectionPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TruncationSelectionPolicyResponse $;

        public Builder() {
            $ = new TruncationSelectionPolicyResponse();
        }

        public Builder(TruncationSelectionPolicyResponse defaults) {
            $ = new TruncationSelectionPolicyResponse(Objects.requireNonNull(defaults));
        }

        public Builder delayEvaluation(@Nullable Integer delayEvaluation) {
            $.delayEvaluation = delayEvaluation;
            return this;
        }

        public Builder evaluationInterval(@Nullable Integer evaluationInterval) {
            $.evaluationInterval = evaluationInterval;
            return this;
        }

        public Builder policyType(String policyType) {
            $.policyType = policyType;
            return this;
        }

        public Builder truncationPercentage(@Nullable Integer truncationPercentage) {
            $.truncationPercentage = truncationPercentage;
            return this;
        }

        public TruncationSelectionPolicyResponse build() {
            $.policyType = Codegen.stringProp("policyType").arg($.policyType).require();
            return $;
        }
    }

}
