// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
 * 
 */
public final class TruncationSelectionPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final TruncationSelectionPolicyResponse Empty = new TruncationSelectionPolicyResponse();

    /**
     * Number of intervals by which to delay the first evaluation.
     * 
     */
    @Import(name="delayEvaluation")
      private final @Nullable Integer delayEvaluation;

    public Optional<Integer> delayEvaluation() {
        return this.delayEvaluation == null ? Optional.empty() : Optional.ofNullable(this.delayEvaluation);
    }

    /**
     * Interval (number of runs) between policy evaluations.
     * 
     */
    @Import(name="evaluationInterval")
      private final @Nullable Integer evaluationInterval;

    public Optional<Integer> evaluationInterval() {
        return this.evaluationInterval == null ? Optional.empty() : Optional.ofNullable(this.evaluationInterval);
    }

    /**
     * Expected value is 'TruncationSelection'.
     * 
     */
    @Import(name="policyType", required=true)
      private final String policyType;

    public String policyType() {
        return this.policyType;
    }

    /**
     * The percentage of runs to cancel at each evaluation interval.
     * 
     */
    @Import(name="truncationPercentage")
      private final @Nullable Integer truncationPercentage;

    public Optional<Integer> truncationPercentage() {
        return this.truncationPercentage == null ? Optional.empty() : Optional.ofNullable(this.truncationPercentage);
    }

    public TruncationSelectionPolicyResponse(
        @Nullable Integer delayEvaluation,
        @Nullable Integer evaluationInterval,
        String policyType,
        @Nullable Integer truncationPercentage) {
        this.delayEvaluation = delayEvaluation;
        this.evaluationInterval = evaluationInterval;
        this.policyType = Objects.requireNonNull(policyType, "expected parameter 'policyType' to be non-null");
        this.truncationPercentage = truncationPercentage;
    }

    private TruncationSelectionPolicyResponse() {
        this.delayEvaluation = null;
        this.evaluationInterval = null;
        this.policyType = null;
        this.truncationPercentage = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TruncationSelectionPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer delayEvaluation;
        private @Nullable Integer evaluationInterval;
        private String policyType;
        private @Nullable Integer truncationPercentage;

        public Builder() {
    	      // Empty
        }

        public Builder(TruncationSelectionPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.delayEvaluation = defaults.delayEvaluation;
    	      this.evaluationInterval = defaults.evaluationInterval;
    	      this.policyType = defaults.policyType;
    	      this.truncationPercentage = defaults.truncationPercentage;
        }

        public Builder delayEvaluation(@Nullable Integer delayEvaluation) {
            this.delayEvaluation = delayEvaluation;
            return this;
        }
        public Builder evaluationInterval(@Nullable Integer evaluationInterval) {
            this.evaluationInterval = evaluationInterval;
            return this;
        }
        public Builder policyType(String policyType) {
            this.policyType = Objects.requireNonNull(policyType);
            return this;
        }
        public Builder truncationPercentage(@Nullable Integer truncationPercentage) {
            this.truncationPercentage = truncationPercentage;
            return this;
        }        public TruncationSelectionPolicyResponse build() {
            return new TruncationSelectionPolicyResponse(delayEvaluation, evaluationInterval, policyType, truncationPercentage);
        }
    }
}
