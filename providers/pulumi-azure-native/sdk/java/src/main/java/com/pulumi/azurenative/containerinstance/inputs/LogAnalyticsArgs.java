// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.inputs;

import com.pulumi.azurenative.containerinstance.enums.LogAnalyticsLogType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Container group log analytics information.
 * 
 */
public final class LogAnalyticsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogAnalyticsArgs Empty = new LogAnalyticsArgs();

    /**
     * The log type to be used.
     * 
     */
    @Import(name="logType")
    private @Nullable Output<Either<String,LogAnalyticsLogType>> logType;

    public Optional<Output<Either<String,LogAnalyticsLogType>>> logType() {
        return Optional.ofNullable(this.logType);
    }

    /**
     * Metadata for log analytics.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,String>> metadata;

    public Optional<Output<Map<String,String>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The workspace id for log analytics
     * 
     */
    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     * The workspace key for log analytics
     * 
     */
    @Import(name="workspaceKey", required=true)
    private Output<String> workspaceKey;

    public Output<String> workspaceKey() {
        return this.workspaceKey;
    }

    /**
     * The workspace resource id for log analytics
     * 
     */
    @Import(name="workspaceResourceId")
    private @Nullable Output<Map<String,String>> workspaceResourceId;

    public Optional<Output<Map<String,String>>> workspaceResourceId() {
        return Optional.ofNullable(this.workspaceResourceId);
    }

    private LogAnalyticsArgs() {}

    private LogAnalyticsArgs(LogAnalyticsArgs $) {
        this.logType = $.logType;
        this.metadata = $.metadata;
        this.workspaceId = $.workspaceId;
        this.workspaceKey = $.workspaceKey;
        this.workspaceResourceId = $.workspaceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogAnalyticsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogAnalyticsArgs $;

        public Builder() {
            $ = new LogAnalyticsArgs();
        }

        public Builder(LogAnalyticsArgs defaults) {
            $ = new LogAnalyticsArgs(Objects.requireNonNull(defaults));
        }

        public Builder logType(@Nullable Output<Either<String,LogAnalyticsLogType>> logType) {
            $.logType = logType;
            return this;
        }

        public Builder logType(Either<String,LogAnalyticsLogType> logType) {
            return logType(Output.of(logType));
        }

        public Builder logType(String logType) {
            return logType(Either.ofLeft(logType));
        }

        public Builder logType(LogAnalyticsLogType logType) {
            return logType(Either.ofRight(logType));
        }

        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            $.metadata = metadata;
            return this;
        }

        public Builder metadata(Map<String,String> metadata) {
            return metadata(Output.of(metadata));
        }

        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public Builder workspaceKey(Output<String> workspaceKey) {
            $.workspaceKey = workspaceKey;
            return this;
        }

        public Builder workspaceKey(String workspaceKey) {
            return workspaceKey(Output.of(workspaceKey));
        }

        public Builder workspaceResourceId(@Nullable Output<Map<String,String>> workspaceResourceId) {
            $.workspaceResourceId = workspaceResourceId;
            return this;
        }

        public Builder workspaceResourceId(Map<String,String> workspaceResourceId) {
            return workspaceResourceId(Output.of(workspaceResourceId));
        }

        public LogAnalyticsArgs build() {
            $.workspaceId = Objects.requireNonNull($.workspaceId, "expected parameter 'workspaceId' to be non-null");
            $.workspaceKey = Objects.requireNonNull($.workspaceKey, "expected parameter 'workspaceKey' to be non-null");
            return $;
        }
    }

}
