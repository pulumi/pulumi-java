// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.InstanceViewStatusResponse;
import com.pulumi.azurenative.compute.outputs.VirtualMachineExtensionHandlerInstanceViewResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualMachineAgentInstanceViewResponse {
    /**
     * The virtual machine extension handler instance view.
     * 
     */
    private final @Nullable List<VirtualMachineExtensionHandlerInstanceViewResponse> extensionHandlers;
    /**
     * The resource status information.
     * 
     */
    private final @Nullable List<InstanceViewStatusResponse> statuses;
    /**
     * The VM Agent full version.
     * 
     */
    private final @Nullable String vmAgentVersion;

    @CustomType.Constructor
    private VirtualMachineAgentInstanceViewResponse(
        @CustomType.Parameter("extensionHandlers") @Nullable List<VirtualMachineExtensionHandlerInstanceViewResponse> extensionHandlers,
        @CustomType.Parameter("statuses") @Nullable List<InstanceViewStatusResponse> statuses,
        @CustomType.Parameter("vmAgentVersion") @Nullable String vmAgentVersion) {
        this.extensionHandlers = extensionHandlers;
        this.statuses = statuses;
        this.vmAgentVersion = vmAgentVersion;
    }

    /**
     * The virtual machine extension handler instance view.
     * 
    */
    public List<VirtualMachineExtensionHandlerInstanceViewResponse> extensionHandlers() {
        return this.extensionHandlers == null ? List.of() : this.extensionHandlers;
    }
    /**
     * The resource status information.
     * 
    */
    public List<InstanceViewStatusResponse> statuses() {
        return this.statuses == null ? List.of() : this.statuses;
    }
    /**
     * The VM Agent full version.
     * 
    */
    public Optional<String> vmAgentVersion() {
        return Optional.ofNullable(this.vmAgentVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineAgentInstanceViewResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<VirtualMachineExtensionHandlerInstanceViewResponse> extensionHandlers;
        private @Nullable List<InstanceViewStatusResponse> statuses;
        private @Nullable String vmAgentVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineAgentInstanceViewResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extensionHandlers = defaults.extensionHandlers;
    	      this.statuses = defaults.statuses;
    	      this.vmAgentVersion = defaults.vmAgentVersion;
        }

        public Builder extensionHandlers(@Nullable List<VirtualMachineExtensionHandlerInstanceViewResponse> extensionHandlers) {
            this.extensionHandlers = extensionHandlers;
            return this;
        }
        public Builder extensionHandlers(VirtualMachineExtensionHandlerInstanceViewResponse... extensionHandlers) {
            return extensionHandlers(List.of(extensionHandlers));
        }
        public Builder statuses(@Nullable List<InstanceViewStatusResponse> statuses) {
            this.statuses = statuses;
            return this;
        }
        public Builder statuses(InstanceViewStatusResponse... statuses) {
            return statuses(List.of(statuses));
        }
        public Builder vmAgentVersion(@Nullable String vmAgentVersion) {
            this.vmAgentVersion = vmAgentVersion;
            return this;
        }        public VirtualMachineAgentInstanceViewResponse build() {
            return new VirtualMachineAgentInstanceViewResponse(extensionHandlers, statuses, vmAgentVersion);
        }
    }
}
