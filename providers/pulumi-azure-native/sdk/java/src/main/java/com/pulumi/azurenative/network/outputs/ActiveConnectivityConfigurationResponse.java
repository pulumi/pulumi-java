// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.ConfigurationGroupResponse;
import com.pulumi.azurenative.network.outputs.ConnectivityGroupItemResponse;
import com.pulumi.azurenative.network.outputs.HubResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ActiveConnectivityConfigurationResponse {
    /**
     * @return Groups for configuration
     * 
     */
    private final @Nullable List<ConnectivityGroupItemResponse> appliesToGroups;
    /**
     * @return Deployment time string.
     * 
     */
    private final @Nullable String commitTime;
    /**
     * @return Effective configuration groups.
     * 
     */
    private final @Nullable List<ConfigurationGroupResponse> configurationGroups;
    /**
     * @return Connectivity topology type.
     * 
     */
    private final String connectivityTopology;
    /**
     * @return Flag if need to remove current existing peerings.
     * 
     */
    private final @Nullable String deleteExistingPeering;
    /**
     * @return A description of the connectivity configuration.
     * 
     */
    private final @Nullable String description;
    /**
     * @return A friendly name for the resource.
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return List of hubItems
     * 
     */
    private final @Nullable List<HubResponse> hubs;
    /**
     * @return Resource ID.
     * 
     */
    private final @Nullable String id;
    /**
     * @return Flag if global mesh is supported.
     * 
     */
    private final @Nullable String isGlobal;
    /**
     * @return The provisioning state of the connectivity configuration resource.
     * 
     */
    private final String provisioningState;
    /**
     * @return Deployment region.
     * 
     */
    private final @Nullable String region;

    @CustomType.Constructor
    private ActiveConnectivityConfigurationResponse(
        @CustomType.Parameter("appliesToGroups") @Nullable List<ConnectivityGroupItemResponse> appliesToGroups,
        @CustomType.Parameter("commitTime") @Nullable String commitTime,
        @CustomType.Parameter("configurationGroups") @Nullable List<ConfigurationGroupResponse> configurationGroups,
        @CustomType.Parameter("connectivityTopology") String connectivityTopology,
        @CustomType.Parameter("deleteExistingPeering") @Nullable String deleteExistingPeering,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("hubs") @Nullable List<HubResponse> hubs,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("isGlobal") @Nullable String isGlobal,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("region") @Nullable String region) {
        this.appliesToGroups = appliesToGroups;
        this.commitTime = commitTime;
        this.configurationGroups = configurationGroups;
        this.connectivityTopology = connectivityTopology;
        this.deleteExistingPeering = deleteExistingPeering;
        this.description = description;
        this.displayName = displayName;
        this.hubs = hubs;
        this.id = id;
        this.isGlobal = isGlobal;
        this.provisioningState = provisioningState;
        this.region = region;
    }

    /**
     * @return Groups for configuration
     * 
     */
    public List<ConnectivityGroupItemResponse> appliesToGroups() {
        return this.appliesToGroups == null ? List.of() : this.appliesToGroups;
    }
    /**
     * @return Deployment time string.
     * 
     */
    public Optional<String> commitTime() {
        return Optional.ofNullable(this.commitTime);
    }
    /**
     * @return Effective configuration groups.
     * 
     */
    public List<ConfigurationGroupResponse> configurationGroups() {
        return this.configurationGroups == null ? List.of() : this.configurationGroups;
    }
    /**
     * @return Connectivity topology type.
     * 
     */
    public String connectivityTopology() {
        return this.connectivityTopology;
    }
    /**
     * @return Flag if need to remove current existing peerings.
     * 
     */
    public Optional<String> deleteExistingPeering() {
        return Optional.ofNullable(this.deleteExistingPeering);
    }
    /**
     * @return A description of the connectivity configuration.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A friendly name for the resource.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return List of hubItems
     * 
     */
    public List<HubResponse> hubs() {
        return this.hubs == null ? List.of() : this.hubs;
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Flag if global mesh is supported.
     * 
     */
    public Optional<String> isGlobal() {
        return Optional.ofNullable(this.isGlobal);
    }
    /**
     * @return The provisioning state of the connectivity configuration resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Deployment region.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActiveConnectivityConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<ConnectivityGroupItemResponse> appliesToGroups;
        private @Nullable String commitTime;
        private @Nullable List<ConfigurationGroupResponse> configurationGroups;
        private String connectivityTopology;
        private @Nullable String deleteExistingPeering;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable List<HubResponse> hubs;
        private @Nullable String id;
        private @Nullable String isGlobal;
        private String provisioningState;
        private @Nullable String region;

        public Builder() {
    	      // Empty
        }

        public Builder(ActiveConnectivityConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appliesToGroups = defaults.appliesToGroups;
    	      this.commitTime = defaults.commitTime;
    	      this.configurationGroups = defaults.configurationGroups;
    	      this.connectivityTopology = defaults.connectivityTopology;
    	      this.deleteExistingPeering = defaults.deleteExistingPeering;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.hubs = defaults.hubs;
    	      this.id = defaults.id;
    	      this.isGlobal = defaults.isGlobal;
    	      this.provisioningState = defaults.provisioningState;
    	      this.region = defaults.region;
        }

        public Builder appliesToGroups(@Nullable List<ConnectivityGroupItemResponse> appliesToGroups) {
            this.appliesToGroups = appliesToGroups;
            return this;
        }
        public Builder appliesToGroups(ConnectivityGroupItemResponse... appliesToGroups) {
            return appliesToGroups(List.of(appliesToGroups));
        }
        public Builder commitTime(@Nullable String commitTime) {
            this.commitTime = commitTime;
            return this;
        }
        public Builder configurationGroups(@Nullable List<ConfigurationGroupResponse> configurationGroups) {
            this.configurationGroups = configurationGroups;
            return this;
        }
        public Builder configurationGroups(ConfigurationGroupResponse... configurationGroups) {
            return configurationGroups(List.of(configurationGroups));
        }
        public Builder connectivityTopology(String connectivityTopology) {
            this.connectivityTopology = Objects.requireNonNull(connectivityTopology);
            return this;
        }
        public Builder deleteExistingPeering(@Nullable String deleteExistingPeering) {
            this.deleteExistingPeering = deleteExistingPeering;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder hubs(@Nullable List<HubResponse> hubs) {
            this.hubs = hubs;
            return this;
        }
        public Builder hubs(HubResponse... hubs) {
            return hubs(List.of(hubs));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder isGlobal(@Nullable String isGlobal) {
            this.isGlobal = isGlobal;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }        public ActiveConnectivityConfigurationResponse build() {
            return new ActiveConnectivityConfigurationResponse(appliesToGroups, commitTime, configurationGroups, connectivityTopology, deleteExistingPeering, description, displayName, hubs, id, isGlobal, provisioningState, region);
        }
    }
}
