// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Set disk storage settings for SQL Server.
 * 
 */
public final class SQLStorageSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SQLStorageSettingsArgs Empty = new SQLStorageSettingsArgs();

    /**
     * SQL Server default file path
     * 
     */
    @Import(name="defaultFilePath")
    private @Nullable Output<String> defaultFilePath;

    /**
     * @return SQL Server default file path
     * 
     */
    public Optional<Output<String>> defaultFilePath() {
        return Optional.ofNullable(this.defaultFilePath);
    }

    /**
     * Logical Unit Numbers for the disks.
     * 
     */
    @Import(name="luns")
    private @Nullable Output<List<Integer>> luns;

    /**
     * @return Logical Unit Numbers for the disks.
     * 
     */
    public Optional<Output<List<Integer>>> luns() {
        return Optional.ofNullable(this.luns);
    }

    private SQLStorageSettingsArgs() {}

    private SQLStorageSettingsArgs(SQLStorageSettingsArgs $) {
        this.defaultFilePath = $.defaultFilePath;
        this.luns = $.luns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SQLStorageSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SQLStorageSettingsArgs $;

        public Builder() {
            $ = new SQLStorageSettingsArgs();
        }

        public Builder(SQLStorageSettingsArgs defaults) {
            $ = new SQLStorageSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultFilePath SQL Server default file path
         * 
         * @return builder
         * 
         */
        public Builder defaultFilePath(@Nullable Output<String> defaultFilePath) {
            $.defaultFilePath = defaultFilePath;
            return this;
        }

        /**
         * @param defaultFilePath SQL Server default file path
         * 
         * @return builder
         * 
         */
        public Builder defaultFilePath(String defaultFilePath) {
            return defaultFilePath(Output.of(defaultFilePath));
        }

        /**
         * @param luns Logical Unit Numbers for the disks.
         * 
         * @return builder
         * 
         */
        public Builder luns(@Nullable Output<List<Integer>> luns) {
            $.luns = luns;
            return this;
        }

        /**
         * @param luns Logical Unit Numbers for the disks.
         * 
         * @return builder
         * 
         */
        public Builder luns(List<Integer> luns) {
            return luns(Output.of(luns));
        }

        /**
         * @param luns Logical Unit Numbers for the disks.
         * 
         * @return builder
         * 
         */
        public Builder luns(Integer... luns) {
            return luns(List.of(luns));
        }

        public SQLStorageSettingsArgs build() {
            return $;
        }
    }

}
