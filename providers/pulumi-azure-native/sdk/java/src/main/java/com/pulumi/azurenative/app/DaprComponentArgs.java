// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app;

import com.pulumi.azurenative.app.inputs.DaprMetadataArgs;
import com.pulumi.azurenative.app.inputs.SecretArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DaprComponentArgs extends com.pulumi.resources.ResourceArgs {

    public static final DaprComponentArgs Empty = new DaprComponentArgs();

    /**
     * Component type
     * 
     */
    @Import(name="componentType")
    private @Nullable Output<String> componentType;

    /**
     * @return Component type
     * 
     */
    public Optional<Output<String>> componentType() {
        return Optional.ofNullable(this.componentType);
    }

    /**
     * Name of the Managed Environment.
     * 
     */
    @Import(name="environmentName", required=true)
    private Output<String> environmentName;

    /**
     * @return Name of the Managed Environment.
     * 
     */
    public Output<String> environmentName() {
        return this.environmentName;
    }

    /**
     * Boolean describing if the component errors are ignores
     * 
     */
    @Import(name="ignoreErrors")
    private @Nullable Output<Boolean> ignoreErrors;

    /**
     * @return Boolean describing if the component errors are ignores
     * 
     */
    public Optional<Output<Boolean>> ignoreErrors() {
        return Optional.ofNullable(this.ignoreErrors);
    }

    /**
     * Initialization timeout
     * 
     */
    @Import(name="initTimeout")
    private @Nullable Output<String> initTimeout;

    /**
     * @return Initialization timeout
     * 
     */
    public Optional<Output<String>> initTimeout() {
        return Optional.ofNullable(this.initTimeout);
    }

    /**
     * Component metadata
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<List<DaprMetadataArgs>> metadata;

    /**
     * @return Component metadata
     * 
     */
    public Optional<Output<List<DaprMetadataArgs>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * Name of the Dapr Component.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Dapr Component.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Names of container apps that can use this Dapr component
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return Names of container apps that can use this Dapr component
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * Collection of secrets used by a Dapr component
     * 
     */
    @Import(name="secrets")
    private @Nullable Output<List<SecretArgs>> secrets;

    /**
     * @return Collection of secrets used by a Dapr component
     * 
     */
    public Optional<Output<List<SecretArgs>>> secrets() {
        return Optional.ofNullable(this.secrets);
    }

    /**
     * Component version
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Component version
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private DaprComponentArgs() {}

    private DaprComponentArgs(DaprComponentArgs $) {
        this.componentType = $.componentType;
        this.environmentName = $.environmentName;
        this.ignoreErrors = $.ignoreErrors;
        this.initTimeout = $.initTimeout;
        this.metadata = $.metadata;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.scopes = $.scopes;
        this.secrets = $.secrets;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DaprComponentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DaprComponentArgs $;

        public Builder() {
            $ = new DaprComponentArgs();
        }

        public Builder(DaprComponentArgs defaults) {
            $ = new DaprComponentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param componentType Component type
         * 
         * @return builder
         * 
         */
        public Builder componentType(@Nullable Output<String> componentType) {
            $.componentType = componentType;
            return this;
        }

        /**
         * @param componentType Component type
         * 
         * @return builder
         * 
         */
        public Builder componentType(String componentType) {
            return componentType(Output.of(componentType));
        }

        /**
         * @param environmentName Name of the Managed Environment.
         * 
         * @return builder
         * 
         */
        public Builder environmentName(Output<String> environmentName) {
            $.environmentName = environmentName;
            return this;
        }

        /**
         * @param environmentName Name of the Managed Environment.
         * 
         * @return builder
         * 
         */
        public Builder environmentName(String environmentName) {
            return environmentName(Output.of(environmentName));
        }

        /**
         * @param ignoreErrors Boolean describing if the component errors are ignores
         * 
         * @return builder
         * 
         */
        public Builder ignoreErrors(@Nullable Output<Boolean> ignoreErrors) {
            $.ignoreErrors = ignoreErrors;
            return this;
        }

        /**
         * @param ignoreErrors Boolean describing if the component errors are ignores
         * 
         * @return builder
         * 
         */
        public Builder ignoreErrors(Boolean ignoreErrors) {
            return ignoreErrors(Output.of(ignoreErrors));
        }

        /**
         * @param initTimeout Initialization timeout
         * 
         * @return builder
         * 
         */
        public Builder initTimeout(@Nullable Output<String> initTimeout) {
            $.initTimeout = initTimeout;
            return this;
        }

        /**
         * @param initTimeout Initialization timeout
         * 
         * @return builder
         * 
         */
        public Builder initTimeout(String initTimeout) {
            return initTimeout(Output.of(initTimeout));
        }

        /**
         * @param metadata Component metadata
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<List<DaprMetadataArgs>> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata Component metadata
         * 
         * @return builder
         * 
         */
        public Builder metadata(List<DaprMetadataArgs> metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param metadata Component metadata
         * 
         * @return builder
         * 
         */
        public Builder metadata(DaprMetadataArgs... metadata) {
            return metadata(List.of(metadata));
        }

        /**
         * @param name Name of the Dapr Component.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Dapr Component.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param scopes Names of container apps that can use this Dapr component
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Names of container apps that can use this Dapr component
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes Names of container apps that can use this Dapr component
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param secrets Collection of secrets used by a Dapr component
         * 
         * @return builder
         * 
         */
        public Builder secrets(@Nullable Output<List<SecretArgs>> secrets) {
            $.secrets = secrets;
            return this;
        }

        /**
         * @param secrets Collection of secrets used by a Dapr component
         * 
         * @return builder
         * 
         */
        public Builder secrets(List<SecretArgs> secrets) {
            return secrets(Output.of(secrets));
        }

        /**
         * @param secrets Collection of secrets used by a Dapr component
         * 
         * @return builder
         * 
         */
        public Builder secrets(SecretArgs... secrets) {
            return secrets(List.of(secrets));
        }

        /**
         * @param version Component version
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Component version
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public DaprComponentArgs build() {
            $.environmentName = Objects.requireNonNull($.environmentName, "expected parameter 'environmentName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
