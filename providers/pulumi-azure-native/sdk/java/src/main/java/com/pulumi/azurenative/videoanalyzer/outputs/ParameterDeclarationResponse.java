// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ParameterDeclarationResponse {
    /**
     * The default value for the parameter to be used if the pipeline does not specify a value.
     * 
     */
    private final @Nullable String default_;
    /**
     * Description of the parameter.
     * 
     */
    private final @Nullable String description;
    /**
     * Name of the parameter.
     * 
     */
    private final String name;
    /**
     * Type of the parameter.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private ParameterDeclarationResponse(
        @CustomType.Parameter("default") @Nullable String default_,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("type") String type) {
        this.default_ = default_;
        this.description = description;
        this.name = name;
        this.type = type;
    }

    /**
     * The default value for the parameter to be used if the pipeline does not specify a value.
     * 
    */
    public Optional<String> default_() {
        return Optional.ofNullable(this.default_);
    }
    /**
     * Description of the parameter.
     * 
    */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * Name of the parameter.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * Type of the parameter.
     * 
    */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ParameterDeclarationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String default_;
        private @Nullable String description;
        private String name;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ParameterDeclarationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.default_ = defaults.default_;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        public Builder default_(@Nullable String default_) {
            this.default_ = default_;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public ParameterDeclarationResponse build() {
            return new ParameterDeclarationResponse(default_, description, name, type);
        }
    }
}
