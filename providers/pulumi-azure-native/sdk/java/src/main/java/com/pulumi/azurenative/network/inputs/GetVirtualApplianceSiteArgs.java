// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetVirtualApplianceSiteArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVirtualApplianceSiteArgs Empty = new GetVirtualApplianceSiteArgs();

    /**
     * The name of the Network Virtual Appliance.
     * 
     */
    @Import(name="networkVirtualApplianceName", required=true)
    private Output<String> networkVirtualApplianceName;

    /**
     * @return The name of the Network Virtual Appliance.
     * 
     */
    public Output<String> networkVirtualApplianceName() {
        return this.networkVirtualApplianceName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the site.
     * 
     */
    @Import(name="siteName", required=true)
    private Output<String> siteName;

    /**
     * @return The name of the site.
     * 
     */
    public Output<String> siteName() {
        return this.siteName;
    }

    private GetVirtualApplianceSiteArgs() {}

    private GetVirtualApplianceSiteArgs(GetVirtualApplianceSiteArgs $) {
        this.networkVirtualApplianceName = $.networkVirtualApplianceName;
        this.resourceGroupName = $.resourceGroupName;
        this.siteName = $.siteName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVirtualApplianceSiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVirtualApplianceSiteArgs $;

        public Builder() {
            $ = new GetVirtualApplianceSiteArgs();
        }

        public Builder(GetVirtualApplianceSiteArgs defaults) {
            $ = new GetVirtualApplianceSiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkVirtualApplianceName The name of the Network Virtual Appliance.
         * 
         * @return builder
         * 
         */
        public Builder networkVirtualApplianceName(Output<String> networkVirtualApplianceName) {
            $.networkVirtualApplianceName = networkVirtualApplianceName;
            return this;
        }

        /**
         * @param networkVirtualApplianceName The name of the Network Virtual Appliance.
         * 
         * @return builder
         * 
         */
        public Builder networkVirtualApplianceName(String networkVirtualApplianceName) {
            return networkVirtualApplianceName(Output.of(networkVirtualApplianceName));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param siteName The name of the site.
         * 
         * @return builder
         * 
         */
        public Builder siteName(Output<String> siteName) {
            $.siteName = siteName;
            return this;
        }

        /**
         * @param siteName The name of the site.
         * 
         * @return builder
         * 
         */
        public Builder siteName(String siteName) {
            return siteName(Output.of(siteName));
        }

        public GetVirtualApplianceSiteArgs build() {
            $.networkVirtualApplianceName = Objects.requireNonNull($.networkVirtualApplianceName, "expected parameter 'networkVirtualApplianceName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.siteName = Objects.requireNonNull($.siteName, "expected parameter 'siteName' to be non-null");
            return $;
        }
    }

}
