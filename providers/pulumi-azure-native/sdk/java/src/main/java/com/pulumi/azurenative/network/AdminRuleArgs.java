// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.network.enums.AdminRuleKind;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdminRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdminRuleArgs Empty = new AdminRuleArgs();

    /**
     * The name of the network manager security Configuration.
     * 
     */
    @Import(name="configurationName", required=true)
    private Output<String> configurationName;

    public Output<String> configurationName() {
        return this.configurationName;
    }

    /**
     * Whether the rule is custom or default.
     * 
     */
    @Import(name="kind", required=true)
    private Output<Either<String,AdminRuleKind>> kind;

    public Output<Either<String,AdminRuleKind>> kind() {
        return this.kind;
    }

    /**
     * The name of the network manager.
     * 
     */
    @Import(name="networkManagerName", required=true)
    private Output<String> networkManagerName;

    public Output<String> networkManagerName() {
        return this.networkManagerName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the network manager security Configuration rule collection.
     * 
     */
    @Import(name="ruleCollectionName", required=true)
    private Output<String> ruleCollectionName;

    public Output<String> ruleCollectionName() {
        return this.ruleCollectionName;
    }

    /**
     * The name of the rule.
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    private AdminRuleArgs() {}

    private AdminRuleArgs(AdminRuleArgs $) {
        this.configurationName = $.configurationName;
        this.kind = $.kind;
        this.networkManagerName = $.networkManagerName;
        this.resourceGroupName = $.resourceGroupName;
        this.ruleCollectionName = $.ruleCollectionName;
        this.ruleName = $.ruleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdminRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdminRuleArgs $;

        public Builder() {
            $ = new AdminRuleArgs();
        }

        public Builder(AdminRuleArgs defaults) {
            $ = new AdminRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder configurationName(Output<String> configurationName) {
            $.configurationName = configurationName;
            return this;
        }

        public Builder configurationName(String configurationName) {
            return configurationName(Output.of(configurationName));
        }

        public Builder kind(Output<Either<String,AdminRuleKind>> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(Either<String,AdminRuleKind> kind) {
            return kind(Output.of(kind));
        }

        public Builder networkManagerName(Output<String> networkManagerName) {
            $.networkManagerName = networkManagerName;
            return this;
        }

        public Builder networkManagerName(String networkManagerName) {
            return networkManagerName(Output.of(networkManagerName));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder ruleCollectionName(Output<String> ruleCollectionName) {
            $.ruleCollectionName = ruleCollectionName;
            return this;
        }

        public Builder ruleCollectionName(String ruleCollectionName) {
            return ruleCollectionName(Output.of(ruleCollectionName));
        }

        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        public AdminRuleArgs build() {
            $.configurationName = Objects.requireNonNull($.configurationName, "expected parameter 'configurationName' to be non-null");
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            $.networkManagerName = Objects.requireNonNull($.networkManagerName, "expected parameter 'networkManagerName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.ruleCollectionName = Objects.requireNonNull($.ruleCollectionName, "expected parameter 'ruleCollectionName' to be non-null");
            return $;
        }
    }

}
