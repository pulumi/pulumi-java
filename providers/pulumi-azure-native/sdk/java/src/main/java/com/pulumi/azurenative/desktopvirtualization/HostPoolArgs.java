// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization;

import com.pulumi.azurenative.desktopvirtualization.enums.HostPoolType;
import com.pulumi.azurenative.desktopvirtualization.enums.LoadBalancerType;
import com.pulumi.azurenative.desktopvirtualization.enums.PersonalDesktopAssignmentType;
import com.pulumi.azurenative.desktopvirtualization.enums.PreferredAppGroupType;
import com.pulumi.azurenative.desktopvirtualization.enums.SSOSecretType;
import com.pulumi.azurenative.desktopvirtualization.inputs.MigrationRequestPropertiesArgs;
import com.pulumi.azurenative.desktopvirtualization.inputs.RegistrationInfoArgs;
import com.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetIdentityArgs;
import com.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetPlanArgs;
import com.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetSkuArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostPoolArgs Empty = new HostPoolArgs();

    /**
     * Custom rdp property of HostPool.
     * 
     */
    @Import(name="customRdpProperty")
    private @Nullable Output<String> customRdpProperty;

    /**
     * @return Custom rdp property of HostPool.
     * 
     */
    public Optional<Output<String>> customRdpProperty() {
        return Optional.ofNullable(this.customRdpProperty);
    }

    /**
     * Description of HostPool.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of HostPool.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Friendly name of HostPool.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    /**
     * @return Friendly name of HostPool.
     * 
     */
    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * The name of the host pool within the specified resource group
     * 
     */
    @Import(name="hostPoolName")
    private @Nullable Output<String> hostPoolName;

    /**
     * @return The name of the host pool within the specified resource group
     * 
     */
    public Optional<Output<String>> hostPoolName() {
        return Optional.ofNullable(this.hostPoolName);
    }

    /**
     * HostPool type for desktop.
     * 
     */
    @Import(name="hostPoolType", required=true)
    private Output<Either<String,HostPoolType>> hostPoolType;

    /**
     * @return HostPool type for desktop.
     * 
     */
    public Output<Either<String,HostPoolType>> hostPoolType() {
        return this.hostPoolType;
    }

    @Import(name="identity")
    private @Nullable Output<ResourceModelWithAllowedPropertySetIdentityArgs> identity;

    public Optional<Output<ResourceModelWithAllowedPropertySetIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * The type of the load balancer.
     * 
     */
    @Import(name="loadBalancerType", required=true)
    private Output<Either<String,LoadBalancerType>> loadBalancerType;

    /**
     * @return The type of the load balancer.
     * 
     */
    public Output<Either<String,LoadBalancerType>> loadBalancerType() {
        return this.loadBalancerType;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
     */
    @Import(name="managedBy")
    private @Nullable Output<String> managedBy;

    /**
     * @return The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
     */
    public Optional<Output<String>> managedBy() {
        return Optional.ofNullable(this.managedBy);
    }

    /**
     * The max session limit of HostPool.
     * 
     */
    @Import(name="maxSessionLimit")
    private @Nullable Output<Integer> maxSessionLimit;

    /**
     * @return The max session limit of HostPool.
     * 
     */
    public Optional<Output<Integer>> maxSessionLimit() {
        return Optional.ofNullable(this.maxSessionLimit);
    }

    /**
     * The registration info of HostPool.
     * 
     */
    @Import(name="migrationRequest")
    private @Nullable Output<MigrationRequestPropertiesArgs> migrationRequest;

    /**
     * @return The registration info of HostPool.
     * 
     */
    public Optional<Output<MigrationRequestPropertiesArgs>> migrationRequest() {
        return Optional.ofNullable(this.migrationRequest);
    }

    /**
     * PersonalDesktopAssignment type for HostPool.
     * 
     */
    @Import(name="personalDesktopAssignmentType")
    private @Nullable Output<Either<String,PersonalDesktopAssignmentType>> personalDesktopAssignmentType;

    /**
     * @return PersonalDesktopAssignment type for HostPool.
     * 
     */
    public Optional<Output<Either<String,PersonalDesktopAssignmentType>>> personalDesktopAssignmentType() {
        return Optional.ofNullable(this.personalDesktopAssignmentType);
    }

    @Import(name="plan")
    private @Nullable Output<ResourceModelWithAllowedPropertySetPlanArgs> plan;

    public Optional<Output<ResourceModelWithAllowedPropertySetPlanArgs>> plan() {
        return Optional.ofNullable(this.plan);
    }

    /**
     * The type of preferred application group type, default to Desktop Application Group
     * 
     */
    @Import(name="preferredAppGroupType", required=true)
    private Output<Either<String,PreferredAppGroupType>> preferredAppGroupType;

    /**
     * @return The type of preferred application group type, default to Desktop Application Group
     * 
     */
    public Output<Either<String,PreferredAppGroupType>> preferredAppGroupType() {
        return this.preferredAppGroupType;
    }

    /**
     * The registration info of HostPool.
     * 
     */
    @Import(name="registrationInfo")
    private @Nullable Output<RegistrationInfoArgs> registrationInfo;

    /**
     * @return The registration info of HostPool.
     * 
     */
    public Optional<Output<RegistrationInfoArgs>> registrationInfo() {
        return Optional.ofNullable(this.registrationInfo);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The ring number of HostPool.
     * 
     */
    @Import(name="ring")
    private @Nullable Output<Integer> ring;

    /**
     * @return The ring number of HostPool.
     * 
     */
    public Optional<Output<Integer>> ring() {
        return Optional.ofNullable(this.ring);
    }

    @Import(name="sku")
    private @Nullable Output<ResourceModelWithAllowedPropertySetSkuArgs> sku;

    public Optional<Output<ResourceModelWithAllowedPropertySetSkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * ClientId for the registered Relying Party used to issue WVD SSO certificates.
     * 
     */
    @Import(name="ssoClientId")
    private @Nullable Output<String> ssoClientId;

    /**
     * @return ClientId for the registered Relying Party used to issue WVD SSO certificates.
     * 
     */
    public Optional<Output<String>> ssoClientId() {
        return Optional.ofNullable(this.ssoClientId);
    }

    /**
     * Path to Azure KeyVault storing the secret used for communication to ADFS.
     * 
     */
    @Import(name="ssoClientSecretKeyVaultPath")
    private @Nullable Output<String> ssoClientSecretKeyVaultPath;

    /**
     * @return Path to Azure KeyVault storing the secret used for communication to ADFS.
     * 
     */
    public Optional<Output<String>> ssoClientSecretKeyVaultPath() {
        return Optional.ofNullable(this.ssoClientSecretKeyVaultPath);
    }

    /**
     * The type of single sign on Secret Type.
     * 
     */
    @Import(name="ssoSecretType")
    private @Nullable Output<Either<String,SSOSecretType>> ssoSecretType;

    /**
     * @return The type of single sign on Secret Type.
     * 
     */
    public Optional<Output<Either<String,SSOSecretType>>> ssoSecretType() {
        return Optional.ofNullable(this.ssoSecretType);
    }

    /**
     * URL to customer ADFS server for signing WVD SSO certificates.
     * 
     */
    @Import(name="ssoadfsAuthority")
    private @Nullable Output<String> ssoadfsAuthority;

    /**
     * @return URL to customer ADFS server for signing WVD SSO certificates.
     * 
     */
    public Optional<Output<String>> ssoadfsAuthority() {
        return Optional.ofNullable(this.ssoadfsAuthority);
    }

    /**
     * The flag to turn on/off StartVMOnConnect feature.
     * 
     */
    @Import(name="startVMOnConnect")
    private @Nullable Output<Boolean> startVMOnConnect;

    /**
     * @return The flag to turn on/off StartVMOnConnect feature.
     * 
     */
    public Optional<Output<Boolean>> startVMOnConnect() {
        return Optional.ofNullable(this.startVMOnConnect);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Is validation environment.
     * 
     */
    @Import(name="validationEnvironment")
    private @Nullable Output<Boolean> validationEnvironment;

    /**
     * @return Is validation environment.
     * 
     */
    public Optional<Output<Boolean>> validationEnvironment() {
        return Optional.ofNullable(this.validationEnvironment);
    }

    /**
     * VM template for sessionhosts configuration within hostpool.
     * 
     */
    @Import(name="vmTemplate")
    private @Nullable Output<String> vmTemplate;

    /**
     * @return VM template for sessionhosts configuration within hostpool.
     * 
     */
    public Optional<Output<String>> vmTemplate() {
        return Optional.ofNullable(this.vmTemplate);
    }

    private HostPoolArgs() {}

    private HostPoolArgs(HostPoolArgs $) {
        this.customRdpProperty = $.customRdpProperty;
        this.description = $.description;
        this.friendlyName = $.friendlyName;
        this.hostPoolName = $.hostPoolName;
        this.hostPoolType = $.hostPoolType;
        this.identity = $.identity;
        this.kind = $.kind;
        this.loadBalancerType = $.loadBalancerType;
        this.location = $.location;
        this.managedBy = $.managedBy;
        this.maxSessionLimit = $.maxSessionLimit;
        this.migrationRequest = $.migrationRequest;
        this.personalDesktopAssignmentType = $.personalDesktopAssignmentType;
        this.plan = $.plan;
        this.preferredAppGroupType = $.preferredAppGroupType;
        this.registrationInfo = $.registrationInfo;
        this.resourceGroupName = $.resourceGroupName;
        this.ring = $.ring;
        this.sku = $.sku;
        this.ssoClientId = $.ssoClientId;
        this.ssoClientSecretKeyVaultPath = $.ssoClientSecretKeyVaultPath;
        this.ssoSecretType = $.ssoSecretType;
        this.ssoadfsAuthority = $.ssoadfsAuthority;
        this.startVMOnConnect = $.startVMOnConnect;
        this.tags = $.tags;
        this.validationEnvironment = $.validationEnvironment;
        this.vmTemplate = $.vmTemplate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostPoolArgs $;

        public Builder() {
            $ = new HostPoolArgs();
        }

        public Builder(HostPoolArgs defaults) {
            $ = new HostPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customRdpProperty Custom rdp property of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder customRdpProperty(@Nullable Output<String> customRdpProperty) {
            $.customRdpProperty = customRdpProperty;
            return this;
        }

        /**
         * @param customRdpProperty Custom rdp property of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder customRdpProperty(String customRdpProperty) {
            return customRdpProperty(Output.of(customRdpProperty));
        }

        /**
         * @param description Description of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param friendlyName Friendly name of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param friendlyName Friendly name of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        /**
         * @param hostPoolName The name of the host pool within the specified resource group
         * 
         * @return builder
         * 
         */
        public Builder hostPoolName(@Nullable Output<String> hostPoolName) {
            $.hostPoolName = hostPoolName;
            return this;
        }

        /**
         * @param hostPoolName The name of the host pool within the specified resource group
         * 
         * @return builder
         * 
         */
        public Builder hostPoolName(String hostPoolName) {
            return hostPoolName(Output.of(hostPoolName));
        }

        /**
         * @param hostPoolType HostPool type for desktop.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolType(Output<Either<String,HostPoolType>> hostPoolType) {
            $.hostPoolType = hostPoolType;
            return this;
        }

        /**
         * @param hostPoolType HostPool type for desktop.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolType(Either<String,HostPoolType> hostPoolType) {
            return hostPoolType(Output.of(hostPoolType));
        }

        /**
         * @param hostPoolType HostPool type for desktop.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolType(String hostPoolType) {
            return hostPoolType(Either.ofLeft(hostPoolType));
        }

        /**
         * @param hostPoolType HostPool type for desktop.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolType(HostPoolType hostPoolType) {
            return hostPoolType(Either.ofRight(hostPoolType));
        }

        public Builder identity(@Nullable Output<ResourceModelWithAllowedPropertySetIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(ResourceModelWithAllowedPropertySetIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param kind Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param loadBalancerType The type of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerType(Output<Either<String,LoadBalancerType>> loadBalancerType) {
            $.loadBalancerType = loadBalancerType;
            return this;
        }

        /**
         * @param loadBalancerType The type of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerType(Either<String,LoadBalancerType> loadBalancerType) {
            return loadBalancerType(Output.of(loadBalancerType));
        }

        /**
         * @param loadBalancerType The type of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerType(String loadBalancerType) {
            return loadBalancerType(Either.ofLeft(loadBalancerType));
        }

        /**
         * @param loadBalancerType The type of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerType(LoadBalancerType loadBalancerType) {
            return loadBalancerType(Either.ofRight(loadBalancerType));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managedBy The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
         * 
         * @return builder
         * 
         */
        public Builder managedBy(@Nullable Output<String> managedBy) {
            $.managedBy = managedBy;
            return this;
        }

        /**
         * @param managedBy The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
         * 
         * @return builder
         * 
         */
        public Builder managedBy(String managedBy) {
            return managedBy(Output.of(managedBy));
        }

        /**
         * @param maxSessionLimit The max session limit of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder maxSessionLimit(@Nullable Output<Integer> maxSessionLimit) {
            $.maxSessionLimit = maxSessionLimit;
            return this;
        }

        /**
         * @param maxSessionLimit The max session limit of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder maxSessionLimit(Integer maxSessionLimit) {
            return maxSessionLimit(Output.of(maxSessionLimit));
        }

        /**
         * @param migrationRequest The registration info of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder migrationRequest(@Nullable Output<MigrationRequestPropertiesArgs> migrationRequest) {
            $.migrationRequest = migrationRequest;
            return this;
        }

        /**
         * @param migrationRequest The registration info of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder migrationRequest(MigrationRequestPropertiesArgs migrationRequest) {
            return migrationRequest(Output.of(migrationRequest));
        }

        /**
         * @param personalDesktopAssignmentType PersonalDesktopAssignment type for HostPool.
         * 
         * @return builder
         * 
         */
        public Builder personalDesktopAssignmentType(@Nullable Output<Either<String,PersonalDesktopAssignmentType>> personalDesktopAssignmentType) {
            $.personalDesktopAssignmentType = personalDesktopAssignmentType;
            return this;
        }

        /**
         * @param personalDesktopAssignmentType PersonalDesktopAssignment type for HostPool.
         * 
         * @return builder
         * 
         */
        public Builder personalDesktopAssignmentType(Either<String,PersonalDesktopAssignmentType> personalDesktopAssignmentType) {
            return personalDesktopAssignmentType(Output.of(personalDesktopAssignmentType));
        }

        /**
         * @param personalDesktopAssignmentType PersonalDesktopAssignment type for HostPool.
         * 
         * @return builder
         * 
         */
        public Builder personalDesktopAssignmentType(String personalDesktopAssignmentType) {
            return personalDesktopAssignmentType(Either.ofLeft(personalDesktopAssignmentType));
        }

        /**
         * @param personalDesktopAssignmentType PersonalDesktopAssignment type for HostPool.
         * 
         * @return builder
         * 
         */
        public Builder personalDesktopAssignmentType(PersonalDesktopAssignmentType personalDesktopAssignmentType) {
            return personalDesktopAssignmentType(Either.ofRight(personalDesktopAssignmentType));
        }

        public Builder plan(@Nullable Output<ResourceModelWithAllowedPropertySetPlanArgs> plan) {
            $.plan = plan;
            return this;
        }

        public Builder plan(ResourceModelWithAllowedPropertySetPlanArgs plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param preferredAppGroupType The type of preferred application group type, default to Desktop Application Group
         * 
         * @return builder
         * 
         */
        public Builder preferredAppGroupType(Output<Either<String,PreferredAppGroupType>> preferredAppGroupType) {
            $.preferredAppGroupType = preferredAppGroupType;
            return this;
        }

        /**
         * @param preferredAppGroupType The type of preferred application group type, default to Desktop Application Group
         * 
         * @return builder
         * 
         */
        public Builder preferredAppGroupType(Either<String,PreferredAppGroupType> preferredAppGroupType) {
            return preferredAppGroupType(Output.of(preferredAppGroupType));
        }

        /**
         * @param preferredAppGroupType The type of preferred application group type, default to Desktop Application Group
         * 
         * @return builder
         * 
         */
        public Builder preferredAppGroupType(String preferredAppGroupType) {
            return preferredAppGroupType(Either.ofLeft(preferredAppGroupType));
        }

        /**
         * @param preferredAppGroupType The type of preferred application group type, default to Desktop Application Group
         * 
         * @return builder
         * 
         */
        public Builder preferredAppGroupType(PreferredAppGroupType preferredAppGroupType) {
            return preferredAppGroupType(Either.ofRight(preferredAppGroupType));
        }

        /**
         * @param registrationInfo The registration info of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder registrationInfo(@Nullable Output<RegistrationInfoArgs> registrationInfo) {
            $.registrationInfo = registrationInfo;
            return this;
        }

        /**
         * @param registrationInfo The registration info of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder registrationInfo(RegistrationInfoArgs registrationInfo) {
            return registrationInfo(Output.of(registrationInfo));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param ring The ring number of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder ring(@Nullable Output<Integer> ring) {
            $.ring = ring;
            return this;
        }

        /**
         * @param ring The ring number of HostPool.
         * 
         * @return builder
         * 
         */
        public Builder ring(Integer ring) {
            return ring(Output.of(ring));
        }

        public Builder sku(@Nullable Output<ResourceModelWithAllowedPropertySetSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        public Builder sku(ResourceModelWithAllowedPropertySetSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param ssoClientId ClientId for the registered Relying Party used to issue WVD SSO certificates.
         * 
         * @return builder
         * 
         */
        public Builder ssoClientId(@Nullable Output<String> ssoClientId) {
            $.ssoClientId = ssoClientId;
            return this;
        }

        /**
         * @param ssoClientId ClientId for the registered Relying Party used to issue WVD SSO certificates.
         * 
         * @return builder
         * 
         */
        public Builder ssoClientId(String ssoClientId) {
            return ssoClientId(Output.of(ssoClientId));
        }

        /**
         * @param ssoClientSecretKeyVaultPath Path to Azure KeyVault storing the secret used for communication to ADFS.
         * 
         * @return builder
         * 
         */
        public Builder ssoClientSecretKeyVaultPath(@Nullable Output<String> ssoClientSecretKeyVaultPath) {
            $.ssoClientSecretKeyVaultPath = ssoClientSecretKeyVaultPath;
            return this;
        }

        /**
         * @param ssoClientSecretKeyVaultPath Path to Azure KeyVault storing the secret used for communication to ADFS.
         * 
         * @return builder
         * 
         */
        public Builder ssoClientSecretKeyVaultPath(String ssoClientSecretKeyVaultPath) {
            return ssoClientSecretKeyVaultPath(Output.of(ssoClientSecretKeyVaultPath));
        }

        /**
         * @param ssoSecretType The type of single sign on Secret Type.
         * 
         * @return builder
         * 
         */
        public Builder ssoSecretType(@Nullable Output<Either<String,SSOSecretType>> ssoSecretType) {
            $.ssoSecretType = ssoSecretType;
            return this;
        }

        /**
         * @param ssoSecretType The type of single sign on Secret Type.
         * 
         * @return builder
         * 
         */
        public Builder ssoSecretType(Either<String,SSOSecretType> ssoSecretType) {
            return ssoSecretType(Output.of(ssoSecretType));
        }

        /**
         * @param ssoSecretType The type of single sign on Secret Type.
         * 
         * @return builder
         * 
         */
        public Builder ssoSecretType(String ssoSecretType) {
            return ssoSecretType(Either.ofLeft(ssoSecretType));
        }

        /**
         * @param ssoSecretType The type of single sign on Secret Type.
         * 
         * @return builder
         * 
         */
        public Builder ssoSecretType(SSOSecretType ssoSecretType) {
            return ssoSecretType(Either.ofRight(ssoSecretType));
        }

        /**
         * @param ssoadfsAuthority URL to customer ADFS server for signing WVD SSO certificates.
         * 
         * @return builder
         * 
         */
        public Builder ssoadfsAuthority(@Nullable Output<String> ssoadfsAuthority) {
            $.ssoadfsAuthority = ssoadfsAuthority;
            return this;
        }

        /**
         * @param ssoadfsAuthority URL to customer ADFS server for signing WVD SSO certificates.
         * 
         * @return builder
         * 
         */
        public Builder ssoadfsAuthority(String ssoadfsAuthority) {
            return ssoadfsAuthority(Output.of(ssoadfsAuthority));
        }

        /**
         * @param startVMOnConnect The flag to turn on/off StartVMOnConnect feature.
         * 
         * @return builder
         * 
         */
        public Builder startVMOnConnect(@Nullable Output<Boolean> startVMOnConnect) {
            $.startVMOnConnect = startVMOnConnect;
            return this;
        }

        /**
         * @param startVMOnConnect The flag to turn on/off StartVMOnConnect feature.
         * 
         * @return builder
         * 
         */
        public Builder startVMOnConnect(Boolean startVMOnConnect) {
            return startVMOnConnect(Output.of(startVMOnConnect));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param validationEnvironment Is validation environment.
         * 
         * @return builder
         * 
         */
        public Builder validationEnvironment(@Nullable Output<Boolean> validationEnvironment) {
            $.validationEnvironment = validationEnvironment;
            return this;
        }

        /**
         * @param validationEnvironment Is validation environment.
         * 
         * @return builder
         * 
         */
        public Builder validationEnvironment(Boolean validationEnvironment) {
            return validationEnvironment(Output.of(validationEnvironment));
        }

        /**
         * @param vmTemplate VM template for sessionhosts configuration within hostpool.
         * 
         * @return builder
         * 
         */
        public Builder vmTemplate(@Nullable Output<String> vmTemplate) {
            $.vmTemplate = vmTemplate;
            return this;
        }

        /**
         * @param vmTemplate VM template for sessionhosts configuration within hostpool.
         * 
         * @return builder
         * 
         */
        public Builder vmTemplate(String vmTemplate) {
            return vmTemplate(Output.of(vmTemplate));
        }

        public HostPoolArgs build() {
            $.hostPoolType = Objects.requireNonNull($.hostPoolType, "expected parameter 'hostPoolType' to be non-null");
            $.loadBalancerType = Objects.requireNonNull($.loadBalancerType, "expected parameter 'loadBalancerType' to be non-null");
            $.preferredAppGroupType = Objects.requireNonNull($.preferredAppGroupType, "expected parameter 'preferredAppGroupType' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
