// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.sql.inputs.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatabaseVulnerabilityAssessmentRuleBaselineArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatabaseVulnerabilityAssessmentRuleBaselineArgs Empty = new DatabaseVulnerabilityAssessmentRuleBaselineArgs();

    /**
     * The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
     * 
     */
    @InputImport(name="baselineName")
    private final @Nullable Input<String> baselineName;

    public Input<String> getBaselineName() {
        return this.baselineName == null ? Input.empty() : this.baselineName;
    }

    /**
     * The rule baseline result
     * 
     */
    @InputImport(name="baselineResults", required=true)
    private final Input<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults;

    public Input<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> getBaselineResults() {
        return this.baselineResults;
    }

    /**
     * The name of the database for which the vulnerability assessment rule baseline is defined.
     * 
     */
    @InputImport(name="databaseName", required=true)
    private final Input<String> databaseName;

    public Input<String> getDatabaseName() {
        return this.databaseName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The vulnerability assessment rule ID.
     * 
     */
    @InputImport(name="ruleId", required=true)
    private final Input<String> ruleId;

    public Input<String> getRuleId() {
        return this.ruleId;
    }

    /**
     * The name of the server.
     * 
     */
    @InputImport(name="serverName", required=true)
    private final Input<String> serverName;

    public Input<String> getServerName() {
        return this.serverName;
    }

    /**
     * The name of the vulnerability assessment.
     * 
     */
    @InputImport(name="vulnerabilityAssessmentName", required=true)
    private final Input<String> vulnerabilityAssessmentName;

    public Input<String> getVulnerabilityAssessmentName() {
        return this.vulnerabilityAssessmentName;
    }

    public DatabaseVulnerabilityAssessmentRuleBaselineArgs(
        @Nullable Input<String> baselineName,
        Input<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults,
        Input<String> databaseName,
        Input<String> resourceGroupName,
        Input<String> ruleId,
        Input<String> serverName,
        Input<String> vulnerabilityAssessmentName) {
        this.baselineName = baselineName;
        this.baselineResults = Objects.requireNonNull(baselineResults, "expected parameter 'baselineResults' to be non-null");
        this.databaseName = Objects.requireNonNull(databaseName, "expected parameter 'databaseName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.ruleId = Objects.requireNonNull(ruleId, "expected parameter 'ruleId' to be non-null");
        this.serverName = Objects.requireNonNull(serverName, "expected parameter 'serverName' to be non-null");
        this.vulnerabilityAssessmentName = Objects.requireNonNull(vulnerabilityAssessmentName, "expected parameter 'vulnerabilityAssessmentName' to be non-null");
    }

    private DatabaseVulnerabilityAssessmentRuleBaselineArgs() {
        this.baselineName = Input.empty();
        this.baselineResults = Input.empty();
        this.databaseName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.ruleId = Input.empty();
        this.serverName = Input.empty();
        this.vulnerabilityAssessmentName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseVulnerabilityAssessmentRuleBaselineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> baselineName;
        private Input<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults;
        private Input<String> databaseName;
        private Input<String> resourceGroupName;
        private Input<String> ruleId;
        private Input<String> serverName;
        private Input<String> vulnerabilityAssessmentName;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseVulnerabilityAssessmentRuleBaselineArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineName = defaults.baselineName;
    	      this.baselineResults = defaults.baselineResults;
    	      this.databaseName = defaults.databaseName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.ruleId = defaults.ruleId;
    	      this.serverName = defaults.serverName;
    	      this.vulnerabilityAssessmentName = defaults.vulnerabilityAssessmentName;
        }

        public Builder setBaselineName(@Nullable Input<String> baselineName) {
            this.baselineName = baselineName;
            return this;
        }

        public Builder setBaselineName(@Nullable String baselineName) {
            this.baselineName = Input.ofNullable(baselineName);
            return this;
        }

        public Builder setBaselineResults(Input<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults) {
            this.baselineResults = Objects.requireNonNull(baselineResults);
            return this;
        }

        public Builder setBaselineResults(List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs> baselineResults) {
            this.baselineResults = Input.of(Objects.requireNonNull(baselineResults));
            return this;
        }

        public Builder setDatabaseName(Input<String> databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }

        public Builder setDatabaseName(String databaseName) {
            this.databaseName = Input.of(Objects.requireNonNull(databaseName));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRuleId(Input<String> ruleId) {
            this.ruleId = Objects.requireNonNull(ruleId);
            return this;
        }

        public Builder setRuleId(String ruleId) {
            this.ruleId = Input.of(Objects.requireNonNull(ruleId));
            return this;
        }

        public Builder setServerName(Input<String> serverName) {
            this.serverName = Objects.requireNonNull(serverName);
            return this;
        }

        public Builder setServerName(String serverName) {
            this.serverName = Input.of(Objects.requireNonNull(serverName));
            return this;
        }

        public Builder setVulnerabilityAssessmentName(Input<String> vulnerabilityAssessmentName) {
            this.vulnerabilityAssessmentName = Objects.requireNonNull(vulnerabilityAssessmentName);
            return this;
        }

        public Builder setVulnerabilityAssessmentName(String vulnerabilityAssessmentName) {
            this.vulnerabilityAssessmentName = Input.of(Objects.requireNonNull(vulnerabilityAssessmentName));
            return this;
        }

        public DatabaseVulnerabilityAssessmentRuleBaselineArgs build() {
            return new DatabaseVulnerabilityAssessmentRuleBaselineArgs(baselineName, baselineResults, databaseName, resourceGroupName, ruleId, serverName, vulnerabilityAssessmentName);
        }
    }
}
