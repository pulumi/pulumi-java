// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.inputs;

import io.pulumi.azurenative.servicefabric.inputs.SubResourceResponse;
import io.pulumi.azurenative.servicefabric.inputs.VaultCertificateResponse;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;


/**
 * Specifies set of certificates that should be installed onto the virtual machines.
 * 
 */
public final class VaultSecretGroupResponse extends io.pulumi.resources.InvokeArgs {

    public static final VaultSecretGroupResponse Empty = new VaultSecretGroupResponse();

    /**
     * The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
     * 
     */
    @InputImport(name="sourceVault", required=true)
      private final SubResourceResponse sourceVault;

    public SubResourceResponse getSourceVault() {
        return this.sourceVault;
    }

    /**
     * The list of key vault references in SourceVault which contain certificates.
     * 
     */
    @InputImport(name="vaultCertificates", required=true)
      private final List<VaultCertificateResponse> vaultCertificates;

    public List<VaultCertificateResponse> getVaultCertificates() {
        return this.vaultCertificates;
    }

    public VaultSecretGroupResponse(
        SubResourceResponse sourceVault,
        List<VaultCertificateResponse> vaultCertificates) {
        this.sourceVault = Objects.requireNonNull(sourceVault, "expected parameter 'sourceVault' to be non-null");
        this.vaultCertificates = Objects.requireNonNull(vaultCertificates, "expected parameter 'vaultCertificates' to be non-null");
    }

    private VaultSecretGroupResponse() {
        this.sourceVault = null;
        this.vaultCertificates = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VaultSecretGroupResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubResourceResponse sourceVault;
        private List<VaultCertificateResponse> vaultCertificates;

        public Builder() {
    	      // Empty
        }

        public Builder(VaultSecretGroupResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceVault = defaults.sourceVault;
    	      this.vaultCertificates = defaults.vaultCertificates;
        }

        public Builder setSourceVault(SubResourceResponse sourceVault) {
            this.sourceVault = Objects.requireNonNull(sourceVault);
            return this;
        }

        public Builder setVaultCertificates(List<VaultCertificateResponse> vaultCertificates) {
            this.vaultCertificates = Objects.requireNonNull(vaultCertificates);
            return this;
        }
        public VaultSecretGroupResponse build() {
            return new VaultSecretGroupResponse(sourceVault, vaultCertificates);
        }
    }
}
