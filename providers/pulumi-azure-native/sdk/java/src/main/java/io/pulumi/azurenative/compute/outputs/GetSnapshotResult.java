// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.outputs;

import io.pulumi.azurenative.compute.outputs.CreationDataResponse;
import io.pulumi.azurenative.compute.outputs.EncryptionResponse;
import io.pulumi.azurenative.compute.outputs.EncryptionSettingsCollectionResponse;
import io.pulumi.azurenative.compute.outputs.ExtendedLocationResponse;
import io.pulumi.azurenative.compute.outputs.PurchasePlanResponse;
import io.pulumi.azurenative.compute.outputs.SnapshotSkuResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetSnapshotResult {
    private final CreationDataResponse creationData;
    private final @Nullable String diskAccessId;
    private final Double diskSizeBytes;
    private final @Nullable Integer diskSizeGB;
    private final String diskState;
    private final @Nullable EncryptionResponse encryption;
    private final @Nullable EncryptionSettingsCollectionResponse encryptionSettingsCollection;
    private final @Nullable ExtendedLocationResponse extendedLocation;
    private final @Nullable String hyperVGeneration;
    private final String id;
    private final @Nullable Boolean incremental;
    private final String location;
    private final String managedBy;
    private final String name;
    private final @Nullable String networkAccessPolicy;
    private final @Nullable String osType;
    private final String provisioningState;
    private final @Nullable PurchasePlanResponse purchasePlan;
    private final @Nullable SnapshotSkuResponse sku;
    private final @Nullable Boolean supportsHibernation;
    private final @Nullable Map<String,String> tags;
    private final String timeCreated;
    private final String type;
    private final String uniqueId;

    @OutputCustomType.Constructor({"creationData","diskAccessId","diskSizeBytes","diskSizeGB","diskState","encryption","encryptionSettingsCollection","extendedLocation","hyperVGeneration","id","incremental","location","managedBy","name","networkAccessPolicy","osType","provisioningState","purchasePlan","sku","supportsHibernation","tags","timeCreated","type","uniqueId"})
    private GetSnapshotResult(
        CreationDataResponse creationData,
        @Nullable String diskAccessId,
        Double diskSizeBytes,
        @Nullable Integer diskSizeGB,
        String diskState,
        @Nullable EncryptionResponse encryption,
        @Nullable EncryptionSettingsCollectionResponse encryptionSettingsCollection,
        @Nullable ExtendedLocationResponse extendedLocation,
        @Nullable String hyperVGeneration,
        String id,
        @Nullable Boolean incremental,
        String location,
        String managedBy,
        String name,
        @Nullable String networkAccessPolicy,
        @Nullable String osType,
        String provisioningState,
        @Nullable PurchasePlanResponse purchasePlan,
        @Nullable SnapshotSkuResponse sku,
        @Nullable Boolean supportsHibernation,
        @Nullable Map<String,String> tags,
        String timeCreated,
        String type,
        String uniqueId) {
        this.creationData = Objects.requireNonNull(creationData);
        this.diskAccessId = diskAccessId;
        this.diskSizeBytes = Objects.requireNonNull(diskSizeBytes);
        this.diskSizeGB = diskSizeGB;
        this.diskState = Objects.requireNonNull(diskState);
        this.encryption = encryption;
        this.encryptionSettingsCollection = encryptionSettingsCollection;
        this.extendedLocation = extendedLocation;
        this.hyperVGeneration = hyperVGeneration;
        this.id = Objects.requireNonNull(id);
        this.incremental = incremental;
        this.location = Objects.requireNonNull(location);
        this.managedBy = Objects.requireNonNull(managedBy);
        this.name = Objects.requireNonNull(name);
        this.networkAccessPolicy = networkAccessPolicy;
        this.osType = osType;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.purchasePlan = purchasePlan;
        this.sku = sku;
        this.supportsHibernation = supportsHibernation;
        this.tags = tags;
        this.timeCreated = Objects.requireNonNull(timeCreated);
        this.type = Objects.requireNonNull(type);
        this.uniqueId = Objects.requireNonNull(uniqueId);
    }

    public CreationDataResponse getCreationData() {
        return this.creationData;
    }
    public Optional<String> getDiskAccessId() {
        return Optional.ofNullable(this.diskAccessId);
    }
    public Double getDiskSizeBytes() {
        return this.diskSizeBytes;
    }
    public Optional<Integer> getDiskSizeGB() {
        return Optional.ofNullable(this.diskSizeGB);
    }
    public String getDiskState() {
        return this.diskState;
    }
    public Optional<EncryptionResponse> getEncryption() {
        return Optional.ofNullable(this.encryption);
    }
    public Optional<EncryptionSettingsCollectionResponse> getEncryptionSettingsCollection() {
        return Optional.ofNullable(this.encryptionSettingsCollection);
    }
    public Optional<ExtendedLocationResponse> getExtendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    public Optional<String> getHyperVGeneration() {
        return Optional.ofNullable(this.hyperVGeneration);
    }
    public String getId() {
        return this.id;
    }
    public Optional<Boolean> getIncremental() {
        return Optional.ofNullable(this.incremental);
    }
    public String getLocation() {
        return this.location;
    }
    public String getManagedBy() {
        return this.managedBy;
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getNetworkAccessPolicy() {
        return Optional.ofNullable(this.networkAccessPolicy);
    }
    public Optional<String> getOsType() {
        return Optional.ofNullable(this.osType);
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<PurchasePlanResponse> getPurchasePlan() {
        return Optional.ofNullable(this.purchasePlan);
    }
    public Optional<SnapshotSkuResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    public Optional<Boolean> getSupportsHibernation() {
        return Optional.ofNullable(this.supportsHibernation);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getTimeCreated() {
        return this.timeCreated;
    }
    public String getType() {
        return this.type;
    }
    public String getUniqueId() {
        return this.uniqueId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CreationDataResponse creationData;
        private @Nullable String diskAccessId;
        private Double diskSizeBytes;
        private @Nullable Integer diskSizeGB;
        private String diskState;
        private @Nullable EncryptionResponse encryption;
        private @Nullable EncryptionSettingsCollectionResponse encryptionSettingsCollection;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private @Nullable String hyperVGeneration;
        private String id;
        private @Nullable Boolean incremental;
        private String location;
        private String managedBy;
        private String name;
        private @Nullable String networkAccessPolicy;
        private @Nullable String osType;
        private String provisioningState;
        private @Nullable PurchasePlanResponse purchasePlan;
        private @Nullable SnapshotSkuResponse sku;
        private @Nullable Boolean supportsHibernation;
        private @Nullable Map<String,String> tags;
        private String timeCreated;
        private String type;
        private String uniqueId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationData = defaults.creationData;
    	      this.diskAccessId = defaults.diskAccessId;
    	      this.diskSizeBytes = defaults.diskSizeBytes;
    	      this.diskSizeGB = defaults.diskSizeGB;
    	      this.diskState = defaults.diskState;
    	      this.encryption = defaults.encryption;
    	      this.encryptionSettingsCollection = defaults.encryptionSettingsCollection;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.hyperVGeneration = defaults.hyperVGeneration;
    	      this.id = defaults.id;
    	      this.incremental = defaults.incremental;
    	      this.location = defaults.location;
    	      this.managedBy = defaults.managedBy;
    	      this.name = defaults.name;
    	      this.networkAccessPolicy = defaults.networkAccessPolicy;
    	      this.osType = defaults.osType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.purchasePlan = defaults.purchasePlan;
    	      this.sku = defaults.sku;
    	      this.supportsHibernation = defaults.supportsHibernation;
    	      this.tags = defaults.tags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.type = defaults.type;
    	      this.uniqueId = defaults.uniqueId;
        }

        public Builder setCreationData(CreationDataResponse creationData) {
            this.creationData = Objects.requireNonNull(creationData);
            return this;
        }

        public Builder setDiskAccessId(@Nullable String diskAccessId) {
            this.diskAccessId = diskAccessId;
            return this;
        }

        public Builder setDiskSizeBytes(Double diskSizeBytes) {
            this.diskSizeBytes = Objects.requireNonNull(diskSizeBytes);
            return this;
        }

        public Builder setDiskSizeGB(@Nullable Integer diskSizeGB) {
            this.diskSizeGB = diskSizeGB;
            return this;
        }

        public Builder setDiskState(String diskState) {
            this.diskState = Objects.requireNonNull(diskState);
            return this;
        }

        public Builder setEncryption(@Nullable EncryptionResponse encryption) {
            this.encryption = encryption;
            return this;
        }

        public Builder setEncryptionSettingsCollection(@Nullable EncryptionSettingsCollectionResponse encryptionSettingsCollection) {
            this.encryptionSettingsCollection = encryptionSettingsCollection;
            return this;
        }

        public Builder setExtendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }

        public Builder setHyperVGeneration(@Nullable String hyperVGeneration) {
            this.hyperVGeneration = hyperVGeneration;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIncremental(@Nullable Boolean incremental) {
            this.incremental = incremental;
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setManagedBy(String managedBy) {
            this.managedBy = Objects.requireNonNull(managedBy);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetworkAccessPolicy(@Nullable String networkAccessPolicy) {
            this.networkAccessPolicy = networkAccessPolicy;
            return this;
        }

        public Builder setOsType(@Nullable String osType) {
            this.osType = osType;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setPurchasePlan(@Nullable PurchasePlanResponse purchasePlan) {
            this.purchasePlan = purchasePlan;
            return this;
        }

        public Builder setSku(@Nullable SnapshotSkuResponse sku) {
            this.sku = sku;
            return this;
        }

        public Builder setSupportsHibernation(@Nullable Boolean supportsHibernation) {
            this.supportsHibernation = supportsHibernation;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTimeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUniqueId(String uniqueId) {
            this.uniqueId = Objects.requireNonNull(uniqueId);
            return this;
        }

        public GetSnapshotResult build() {
            return new GetSnapshotResult(creationData, diskAccessId, diskSizeBytes, diskSizeGB, diskState, encryption, encryptionSettingsCollection, extendedLocation, hyperVGeneration, id, incremental, location, managedBy, name, networkAccessPolicy, osType, provisioningState, purchasePlan, sku, supportsHibernation, tags, timeCreated, type, uniqueId);
        }
    }
}
