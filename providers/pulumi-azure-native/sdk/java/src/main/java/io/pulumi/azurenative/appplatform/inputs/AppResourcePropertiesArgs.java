// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.appplatform.inputs;

import io.pulumi.azurenative.appplatform.inputs.PersistentDiskArgs;
import io.pulumi.azurenative.appplatform.inputs.TemporaryDiskArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * App resource properties payload
 * 
 */
public final class AppResourcePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final AppResourcePropertiesArgs Empty = new AppResourcePropertiesArgs();

    /**
     * Name of the active deployment of the App
     * 
     */
    @InputImport(name="activeDeploymentName")
    private final @Nullable Input<String> activeDeploymentName;

    public Input<String> getActiveDeploymentName() {
        return this.activeDeploymentName == null ? Input.empty() : this.activeDeploymentName;
    }

    /**
     * Fully qualified dns Name.
     * 
     */
    @InputImport(name="fqdn")
    private final @Nullable Input<String> fqdn;

    public Input<String> getFqdn() {
        return this.fqdn == null ? Input.empty() : this.fqdn;
    }

    /**
     * Indicate if only https is allowed.
     * 
     */
    @InputImport(name="httpsOnly")
    private final @Nullable Input<Boolean> httpsOnly;

    public Input<Boolean> getHttpsOnly() {
        return this.httpsOnly == null ? Input.empty() : this.httpsOnly;
    }

    /**
     * Persistent disk settings
     * 
     */
    @InputImport(name="persistentDisk")
    private final @Nullable Input<PersistentDiskArgs> persistentDisk;

    public Input<PersistentDiskArgs> getPersistentDisk() {
        return this.persistentDisk == null ? Input.empty() : this.persistentDisk;
    }

    /**
     * Indicates whether the App exposes public endpoint
     * 
     */
    @InputImport(name="public")
    private final @Nullable Input<Boolean> $public;

    public Input<Boolean> get$public() {
        return this.$public == null ? Input.empty() : this.$public;
    }

    /**
     * Temporary disk settings
     * 
     */
    @InputImport(name="temporaryDisk")
    private final @Nullable Input<TemporaryDiskArgs> temporaryDisk;

    public Input<TemporaryDiskArgs> getTemporaryDisk() {
        return this.temporaryDisk == null ? Input.empty() : this.temporaryDisk;
    }

    public AppResourcePropertiesArgs(
        @Nullable Input<String> activeDeploymentName,
        @Nullable Input<String> fqdn,
        @Nullable Input<Boolean> httpsOnly,
        @Nullable Input<PersistentDiskArgs> persistentDisk,
        @Nullable Input<Boolean> $public,
        @Nullable Input<TemporaryDiskArgs> temporaryDisk) {
        this.activeDeploymentName = activeDeploymentName;
        this.fqdn = fqdn;
        this.httpsOnly = httpsOnly == null ? Input.ofNullable(false) : httpsOnly;
        this.persistentDisk = persistentDisk;
        this.$public = $public;
        this.temporaryDisk = temporaryDisk;
    }

    private AppResourcePropertiesArgs() {
        this.activeDeploymentName = Input.empty();
        this.fqdn = Input.empty();
        this.httpsOnly = Input.empty();
        this.persistentDisk = Input.empty();
        this.$public = Input.empty();
        this.temporaryDisk = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppResourcePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> activeDeploymentName;
        private @Nullable Input<String> fqdn;
        private @Nullable Input<Boolean> httpsOnly;
        private @Nullable Input<PersistentDiskArgs> persistentDisk;
        private @Nullable Input<Boolean> $public;
        private @Nullable Input<TemporaryDiskArgs> temporaryDisk;

        public Builder() {
    	      // Empty
        }

        public Builder(AppResourcePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDeploymentName = defaults.activeDeploymentName;
    	      this.fqdn = defaults.fqdn;
    	      this.httpsOnly = defaults.httpsOnly;
    	      this.persistentDisk = defaults.persistentDisk;
    	      this.$public = defaults.$public;
    	      this.temporaryDisk = defaults.temporaryDisk;
        }

        public Builder setActiveDeploymentName(@Nullable Input<String> activeDeploymentName) {
            this.activeDeploymentName = activeDeploymentName;
            return this;
        }

        public Builder setActiveDeploymentName(@Nullable String activeDeploymentName) {
            this.activeDeploymentName = Input.ofNullable(activeDeploymentName);
            return this;
        }

        public Builder setFqdn(@Nullable Input<String> fqdn) {
            this.fqdn = fqdn;
            return this;
        }

        public Builder setFqdn(@Nullable String fqdn) {
            this.fqdn = Input.ofNullable(fqdn);
            return this;
        }

        public Builder setHttpsOnly(@Nullable Input<Boolean> httpsOnly) {
            this.httpsOnly = httpsOnly;
            return this;
        }

        public Builder setHttpsOnly(@Nullable Boolean httpsOnly) {
            this.httpsOnly = Input.ofNullable(httpsOnly);
            return this;
        }

        public Builder setPersistentDisk(@Nullable Input<PersistentDiskArgs> persistentDisk) {
            this.persistentDisk = persistentDisk;
            return this;
        }

        public Builder setPersistentDisk(@Nullable PersistentDiskArgs persistentDisk) {
            this.persistentDisk = Input.ofNullable(persistentDisk);
            return this;
        }

        public Builder set$public(@Nullable Input<Boolean> $public) {
            this.$public = $public;
            return this;
        }

        public Builder set$public(@Nullable Boolean $public) {
            this.$public = Input.ofNullable($public);
            return this;
        }

        public Builder setTemporaryDisk(@Nullable Input<TemporaryDiskArgs> temporaryDisk) {
            this.temporaryDisk = temporaryDisk;
            return this;
        }

        public Builder setTemporaryDisk(@Nullable TemporaryDiskArgs temporaryDisk) {
            this.temporaryDisk = Input.ofNullable(temporaryDisk);
            return this;
        }

        public AppResourcePropertiesArgs build() {
            return new AppResourcePropertiesArgs(activeDeploymentName, fqdn, httpsOnly, persistentDisk, $public, temporaryDisk);
        }
    }
}
