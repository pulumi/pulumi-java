// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceFileResponse extends io.pulumi.resources.InvokeArgs {

    public static final ResourceFileResponse Empty = new ResourceFileResponse();

    @InputImport(name="autoStorageContainerName")
    private final @Nullable String autoStorageContainerName;

    public Optional<String> getAutoStorageContainerName() {
        return this.autoStorageContainerName == null ? Optional.empty() : Optional.ofNullable(this.autoStorageContainerName);
    }

    @InputImport(name="blobPrefix")
    private final @Nullable String blobPrefix;

    public Optional<String> getBlobPrefix() {
        return this.blobPrefix == null ? Optional.empty() : Optional.ofNullable(this.blobPrefix);
    }

    @InputImport(name="fileMode")
    private final @Nullable String fileMode;

    public Optional<String> getFileMode() {
        return this.fileMode == null ? Optional.empty() : Optional.ofNullable(this.fileMode);
    }

    @InputImport(name="filePath")
    private final @Nullable String filePath;

    public Optional<String> getFilePath() {
        return this.filePath == null ? Optional.empty() : Optional.ofNullable(this.filePath);
    }

    @InputImport(name="httpUrl")
    private final @Nullable String httpUrl;

    public Optional<String> getHttpUrl() {
        return this.httpUrl == null ? Optional.empty() : Optional.ofNullable(this.httpUrl);
    }

    @InputImport(name="storageContainerUrl")
    private final @Nullable String storageContainerUrl;

    public Optional<String> getStorageContainerUrl() {
        return this.storageContainerUrl == null ? Optional.empty() : Optional.ofNullable(this.storageContainerUrl);
    }

    public ResourceFileResponse(
        @Nullable String autoStorageContainerName,
        @Nullable String blobPrefix,
        @Nullable String fileMode,
        @Nullable String filePath,
        @Nullable String httpUrl,
        @Nullable String storageContainerUrl) {
        this.autoStorageContainerName = autoStorageContainerName;
        this.blobPrefix = blobPrefix;
        this.fileMode = fileMode;
        this.filePath = filePath;
        this.httpUrl = httpUrl;
        this.storageContainerUrl = storageContainerUrl;
    }

    private ResourceFileResponse() {
        this.autoStorageContainerName = null;
        this.blobPrefix = null;
        this.fileMode = null;
        this.filePath = null;
        this.httpUrl = null;
        this.storageContainerUrl = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceFileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String autoStorageContainerName;
        private @Nullable String blobPrefix;
        private @Nullable String fileMode;
        private @Nullable String filePath;
        private @Nullable String httpUrl;
        private @Nullable String storageContainerUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceFileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoStorageContainerName = defaults.autoStorageContainerName;
    	      this.blobPrefix = defaults.blobPrefix;
    	      this.fileMode = defaults.fileMode;
    	      this.filePath = defaults.filePath;
    	      this.httpUrl = defaults.httpUrl;
    	      this.storageContainerUrl = defaults.storageContainerUrl;
        }

        public Builder setAutoStorageContainerName(@Nullable String autoStorageContainerName) {
            this.autoStorageContainerName = autoStorageContainerName;
            return this;
        }

        public Builder setBlobPrefix(@Nullable String blobPrefix) {
            this.blobPrefix = blobPrefix;
            return this;
        }

        public Builder setFileMode(@Nullable String fileMode) {
            this.fileMode = fileMode;
            return this;
        }

        public Builder setFilePath(@Nullable String filePath) {
            this.filePath = filePath;
            return this;
        }

        public Builder setHttpUrl(@Nullable String httpUrl) {
            this.httpUrl = httpUrl;
            return this;
        }

        public Builder setStorageContainerUrl(@Nullable String storageContainerUrl) {
            this.storageContainerUrl = storageContainerUrl;
            return this;
        }

        public ResourceFileResponse build() {
            return new ResourceFileResponse(autoStorageContainerName, blobPrefix, fileMode, filePath, httpUrl, storageContainerUrl);
        }
    }
}
