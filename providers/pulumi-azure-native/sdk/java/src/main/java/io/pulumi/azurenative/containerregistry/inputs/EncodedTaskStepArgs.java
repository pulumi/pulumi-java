// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry.inputs;

import io.pulumi.azurenative.containerregistry.inputs.SetValueArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The properties of a encoded task step.
 * 
 */
public final class EncodedTaskStepArgs extends io.pulumi.resources.ResourceArgs {

    public static final EncodedTaskStepArgs Empty = new EncodedTaskStepArgs();

    /**
     * The token (git PAT or SAS token of storage account blob) associated with the context for a step.
     * 
     */
    @InputImport(name="contextAccessToken")
        private final @Nullable Input<String> contextAccessToken;

    public Input<String> getContextAccessToken() {
        return this.contextAccessToken == null ? Input.empty() : this.contextAccessToken;
    }

    /**
     * The URL(absolute or relative) of the source context for the task step.
     * 
     */
    @InputImport(name="contextPath")
        private final @Nullable Input<String> contextPath;

    public Input<String> getContextPath() {
        return this.contextPath == null ? Input.empty() : this.contextPath;
    }

    /**
     * Base64 encoded value of the template/definition file content.
     * 
     */
    @InputImport(name="encodedTaskContent", required=true)
        private final Input<String> encodedTaskContent;

    public Input<String> getEncodedTaskContent() {
        return this.encodedTaskContent;
    }

    /**
     * Base64 encoded value of the parameters/values file content.
     * 
     */
    @InputImport(name="encodedValuesContent")
        private final @Nullable Input<String> encodedValuesContent;

    public Input<String> getEncodedValuesContent() {
        return this.encodedValuesContent == null ? Input.empty() : this.encodedValuesContent;
    }

    /**
     * The type of the step.
     * Expected value is 'EncodedTask'.
     * 
     */
    @InputImport(name="type", required=true)
        private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    /**
     * The collection of overridable values that can be passed when running a task.
     * 
     */
    @InputImport(name="values")
        private final @Nullable Input<List<SetValueArgs>> values;

    public Input<List<SetValueArgs>> getValues() {
        return this.values == null ? Input.empty() : this.values;
    }

    public EncodedTaskStepArgs(
        @Nullable Input<String> contextAccessToken,
        @Nullable Input<String> contextPath,
        Input<String> encodedTaskContent,
        @Nullable Input<String> encodedValuesContent,
        Input<String> type,
        @Nullable Input<List<SetValueArgs>> values) {
        this.contextAccessToken = contextAccessToken;
        this.contextPath = contextPath;
        this.encodedTaskContent = Objects.requireNonNull(encodedTaskContent, "expected parameter 'encodedTaskContent' to be non-null");
        this.encodedValuesContent = encodedValuesContent;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.values = values;
    }

    private EncodedTaskStepArgs() {
        this.contextAccessToken = Input.empty();
        this.contextPath = Input.empty();
        this.encodedTaskContent = Input.empty();
        this.encodedValuesContent = Input.empty();
        this.type = Input.empty();
        this.values = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncodedTaskStepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> contextAccessToken;
        private @Nullable Input<String> contextPath;
        private Input<String> encodedTaskContent;
        private @Nullable Input<String> encodedValuesContent;
        private Input<String> type;
        private @Nullable Input<List<SetValueArgs>> values;

        public Builder() {
    	      // Empty
        }

        public Builder(EncodedTaskStepArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contextAccessToken = defaults.contextAccessToken;
    	      this.contextPath = defaults.contextPath;
    	      this.encodedTaskContent = defaults.encodedTaskContent;
    	      this.encodedValuesContent = defaults.encodedValuesContent;
    	      this.type = defaults.type;
    	      this.values = defaults.values;
        }

        public Builder setContextAccessToken(@Nullable Input<String> contextAccessToken) {
            this.contextAccessToken = contextAccessToken;
            return this;
        }

        public Builder setContextAccessToken(@Nullable String contextAccessToken) {
            this.contextAccessToken = Input.ofNullable(contextAccessToken);
            return this;
        }

        public Builder setContextPath(@Nullable Input<String> contextPath) {
            this.contextPath = contextPath;
            return this;
        }

        public Builder setContextPath(@Nullable String contextPath) {
            this.contextPath = Input.ofNullable(contextPath);
            return this;
        }

        public Builder setEncodedTaskContent(Input<String> encodedTaskContent) {
            this.encodedTaskContent = Objects.requireNonNull(encodedTaskContent);
            return this;
        }

        public Builder setEncodedTaskContent(String encodedTaskContent) {
            this.encodedTaskContent = Input.of(Objects.requireNonNull(encodedTaskContent));
            return this;
        }

        public Builder setEncodedValuesContent(@Nullable Input<String> encodedValuesContent) {
            this.encodedValuesContent = encodedValuesContent;
            return this;
        }

        public Builder setEncodedValuesContent(@Nullable String encodedValuesContent) {
            this.encodedValuesContent = Input.ofNullable(encodedValuesContent);
            return this;
        }

        public Builder setType(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public Builder setValues(@Nullable Input<List<SetValueArgs>> values) {
            this.values = values;
            return this;
        }

        public Builder setValues(@Nullable List<SetValueArgs> values) {
            this.values = Input.ofNullable(values);
            return this;
        }
        public EncodedTaskStepArgs build() {
            return new EncodedTaskStepArgs(contextAccessToken, contextPath, encodedTaskContent, encodedValuesContent, type, values);
        }
    }
}
