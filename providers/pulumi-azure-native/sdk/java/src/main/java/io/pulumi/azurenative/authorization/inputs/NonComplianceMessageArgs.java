// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.authorization.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A message that describes why a resource is non-compliant with the policy. This is shown in 'deny' error messages and on resource's non-compliant compliance results.
 * 
 */
public final class NonComplianceMessageArgs extends io.pulumi.resources.ResourceArgs {

    public static final NonComplianceMessageArgs Empty = new NonComplianceMessageArgs();

    /**
     * A message that describes why a resource is non-compliant with the policy. This is shown in 'deny' error messages and on resource's non-compliant compliance results.
     * 
     */
    @Import(name="message", required=true)
      private final Output<String> message;

    public Output<String> getMessage() {
        return this.message;
    }

    /**
     * The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If this is not provided the message applies to all policies assigned by this policy assignment.
     * 
     */
    @Import(name="policyDefinitionReferenceId")
      private final @Nullable Output<String> policyDefinitionReferenceId;

    public Output<String> getPolicyDefinitionReferenceId() {
        return this.policyDefinitionReferenceId == null ? Output.empty() : this.policyDefinitionReferenceId;
    }

    public NonComplianceMessageArgs(
        Output<String> message,
        @Nullable Output<String> policyDefinitionReferenceId) {
        this.message = Objects.requireNonNull(message, "expected parameter 'message' to be non-null");
        this.policyDefinitionReferenceId = policyDefinitionReferenceId;
    }

    private NonComplianceMessageArgs() {
        this.message = Output.empty();
        this.policyDefinitionReferenceId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NonComplianceMessageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> message;
        private @Nullable Output<String> policyDefinitionReferenceId;

        public Builder() {
    	      // Empty
        }

        public Builder(NonComplianceMessageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.message = defaults.message;
    	      this.policyDefinitionReferenceId = defaults.policyDefinitionReferenceId;
        }

        public Builder message(Output<String> message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }
        public Builder message(String message) {
            this.message = Output.of(Objects.requireNonNull(message));
            return this;
        }
        public Builder policyDefinitionReferenceId(@Nullable Output<String> policyDefinitionReferenceId) {
            this.policyDefinitionReferenceId = policyDefinitionReferenceId;
            return this;
        }
        public Builder policyDefinitionReferenceId(@Nullable String policyDefinitionReferenceId) {
            this.policyDefinitionReferenceId = Output.ofNullable(policyDefinitionReferenceId);
            return this;
        }        public NonComplianceMessageArgs build() {
            return new NonComplianceMessageArgs(message, policyDefinitionReferenceId);
        }
    }
}
