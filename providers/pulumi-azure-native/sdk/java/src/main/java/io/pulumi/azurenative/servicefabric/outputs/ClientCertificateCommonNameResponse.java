// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ClientCertificateCommonNameResponse {
    /**
     * The common name of the client certificate.
     * 
     */
    private final String certificateCommonName;
    /**
     * The issuer thumbprint of the client certificate.
     * 
     */
    private final String certificateIssuerThumbprint;
    /**
     * Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
     * 
     */
    private final Boolean isAdmin;

    @CustomType.Constructor
    private ClientCertificateCommonNameResponse(
        @CustomType.Parameter("certificateCommonName") String certificateCommonName,
        @CustomType.Parameter("certificateIssuerThumbprint") String certificateIssuerThumbprint,
        @CustomType.Parameter("isAdmin") Boolean isAdmin) {
        this.certificateCommonName = certificateCommonName;
        this.certificateIssuerThumbprint = certificateIssuerThumbprint;
        this.isAdmin = isAdmin;
    }

    /**
     * The common name of the client certificate.
     * 
    */
    public String getCertificateCommonName() {
        return this.certificateCommonName;
    }
    /**
     * The issuer thumbprint of the client certificate.
     * 
    */
    public String getCertificateIssuerThumbprint() {
        return this.certificateIssuerThumbprint;
    }
    /**
     * Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
     * 
    */
    public Boolean getIsAdmin() {
        return this.isAdmin;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClientCertificateCommonNameResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String certificateCommonName;
        private String certificateIssuerThumbprint;
        private Boolean isAdmin;

        public Builder() {
    	      // Empty
        }

        public Builder(ClientCertificateCommonNameResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateCommonName = defaults.certificateCommonName;
    	      this.certificateIssuerThumbprint = defaults.certificateIssuerThumbprint;
    	      this.isAdmin = defaults.isAdmin;
        }

        public Builder certificateCommonName(String certificateCommonName) {
            this.certificateCommonName = Objects.requireNonNull(certificateCommonName);
            return this;
        }
        public Builder certificateIssuerThumbprint(String certificateIssuerThumbprint) {
            this.certificateIssuerThumbprint = Objects.requireNonNull(certificateIssuerThumbprint);
            return this;
        }
        public Builder isAdmin(Boolean isAdmin) {
            this.isAdmin = Objects.requireNonNull(isAdmin);
            return this;
        }        public ClientCertificateCommonNameResponse build() {
            return new ClientCertificateCommonNameResponse(certificateCommonName, certificateIssuerThumbprint, isAdmin);
        }
    }
}
