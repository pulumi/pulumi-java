// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.insights.ManagementGroupDiagnosticSettingArgs;
import io.pulumi.azurenative.insights.outputs.ManagementGroupLogSettingsResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * The management group diagnostic setting resource.
API Version: 2020-01-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Creates or Updates the management group diagnostic setting
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var managementGroupDiagnosticSetting = new AzureNative.Insights.ManagementGroupDiagnosticSetting("managementGroupDiagnosticSetting", new AzureNative.Insights.ManagementGroupDiagnosticSettingArgs
        {
            EventHubAuthorizationRuleId = "/subscriptions/fb9f25f9-5785-4510-a38f-a62f188eb9f8/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule",
            EventHubName = "myeventhub",
            Logs = 
            {
                new AzureNative.Insights.Inputs.ManagementGroupLogSettingsArgs
                {
                    Category = "Administrative",
                    Enabled = true,
                },
                new AzureNative.Insights.Inputs.ManagementGroupLogSettingsArgs
                {
                    Category = "Policy",
                    Enabled = true,
                },
            },
            ManagementGroupId = "testChildMG7",
            Name = "setting1",
            StorageAccountId = "/subscriptions/bfaef57f-297e-4210-bfe5-27c18cc671f7/resourceGroups/FuncAppRunners/providers/Microsoft.Storage/storageAccounts/testpersonalb6a5",
            WorkspaceId = "/subscriptions/9cf7cc0a-0ba1-4624-bc82-97e1ee25dc45/resourceGroups/mgTest/providers/Microsoft.OperationalInsights/workspaces/mgTestWorkspace",
        });
    }

}

```

```go
package main

import (
	insights "github.com/pulumi/pulumi-azure-native/sdk/go/azure/insights"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := insights.NewManagementGroupDiagnosticSetting(ctx, "managementGroupDiagnosticSetting", &insights.ManagementGroupDiagnosticSettingArgs{
			EventHubAuthorizationRuleId: pulumi.String("/subscriptions/fb9f25f9-5785-4510-a38f-a62f188eb9f8/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule"),
			EventHubName:                pulumi.String("myeventhub"),
			Logs: []insights.ManagementGroupLogSettingsArgs{
				&insights.ManagementGroupLogSettingsArgs{
					Category: pulumi.String("Administrative"),
					Enabled:  pulumi.Bool(true),
				},
				&insights.ManagementGroupLogSettingsArgs{
					Category: pulumi.String("Policy"),
					Enabled:  pulumi.Bool(true),
				},
			},
			ManagementGroupId: pulumi.String("testChildMG7"),
			Name:              pulumi.String("setting1"),
			StorageAccountId:  pulumi.String("/subscriptions/bfaef57f-297e-4210-bfe5-27c18cc671f7/resourceGroups/FuncAppRunners/providers/Microsoft.Storage/storageAccounts/testpersonalb6a5"),
			WorkspaceId:       pulumi.String("/subscriptions/9cf7cc0a-0ba1-4624-bc82-97e1ee25dc45/resourceGroups/mgTest/providers/Microsoft.OperationalInsights/workspaces/mgTestWorkspace"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const managementGroupDiagnosticSetting = new azure_native.insights.ManagementGroupDiagnosticSetting("managementGroupDiagnosticSetting", {
    eventHubAuthorizationRuleId: "/subscriptions/fb9f25f9-5785-4510-a38f-a62f188eb9f8/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule",
    eventHubName: "myeventhub",
    logs: [
        {
            category: "Administrative",
            enabled: true,
        },
        {
            category: "Policy",
            enabled: true,
        },
    ],
    managementGroupId: "testChildMG7",
    name: "setting1",
    storageAccountId: "/subscriptions/bfaef57f-297e-4210-bfe5-27c18cc671f7/resourceGroups/FuncAppRunners/providers/Microsoft.Storage/storageAccounts/testpersonalb6a5",
    workspaceId: "/subscriptions/9cf7cc0a-0ba1-4624-bc82-97e1ee25dc45/resourceGroups/mgTest/providers/Microsoft.OperationalInsights/workspaces/mgTestWorkspace",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

management_group_diagnostic_setting = azure_native.insights.ManagementGroupDiagnosticSetting("managementGroupDiagnosticSetting",
    event_hub_authorization_rule_id="/subscriptions/fb9f25f9-5785-4510-a38f-a62f188eb9f8/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule",
    event_hub_name="myeventhub",
    logs=[
        azure_native.insights.ManagementGroupLogSettingsArgs(
            category="Administrative",
            enabled=True,
        ),
        azure_native.insights.ManagementGroupLogSettingsArgs(
            category="Policy",
            enabled=True,
        ),
    ],
    management_group_id="testChildMG7",
    name="setting1",
    storage_account_id="/subscriptions/bfaef57f-297e-4210-bfe5-27c18cc671f7/resourceGroups/FuncAppRunners/providers/Microsoft.Storage/storageAccounts/testpersonalb6a5",
    workspace_id="/subscriptions/9cf7cc0a-0ba1-4624-bc82-97e1ee25dc45/resourceGroups/mgTest/providers/Microsoft.OperationalInsights/workspaces/mgTestWorkspace")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:insights:ManagementGroupDiagnosticSetting setting1 providers/Microsoft.Management/managementGroups/testChildMG7/providers/microsoft.insights/diagnosticSettings/setting1 
```

 */
@ResourceType(type="azure-native:insights:ManagementGroupDiagnosticSetting")
public class ManagementGroupDiagnosticSetting extends io.pulumi.resources.CustomResource {
    /**
     * The resource Id for the event hub authorization rule.
     */
    @OutputExport(name="eventHubAuthorizationRuleId", type=String.class, parameters={})
    private Output</* @Nullable */ String> eventHubAuthorizationRuleId;

    /**
     * @return The resource Id for the event hub authorization rule.
     */
    public Output</* @Nullable */ String> getEventHubAuthorizationRuleId() {
        return this.eventHubAuthorizationRuleId;
    }
    /**
     * The name of the event hub. If none is specified, the default event hub will be selected.
     */
    @OutputExport(name="eventHubName", type=String.class, parameters={})
    private Output</* @Nullable */ String> eventHubName;

    /**
     * @return The name of the event hub. If none is specified, the default event hub will be selected.
     */
    public Output</* @Nullable */ String> getEventHubName() {
        return this.eventHubName;
    }
    /**
     * Location of the resource
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Location of the resource
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * The list of logs settings.
     */
    @OutputExport(name="logs", type=List.class, parameters={ManagementGroupLogSettingsResponse.class})
    private Output</* @Nullable */ List<ManagementGroupLogSettingsResponse>> logs;

    /**
     * @return The list of logs settings.
     */
    public Output</* @Nullable */ List<ManagementGroupLogSettingsResponse>> getLogs() {
        return this.logs;
    }
    /**
     * Azure resource name
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Azure resource name
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
     */
    @OutputExport(name="serviceBusRuleId", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceBusRuleId;

    /**
     * @return The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
     */
    public Output</* @Nullable */ String> getServiceBusRuleId() {
        return this.serviceBusRuleId;
    }
    /**
     * The resource ID of the storage account to which you would like to send Diagnostic Logs.
     */
    @OutputExport(name="storageAccountId", type=String.class, parameters={})
    private Output</* @Nullable */ String> storageAccountId;

    /**
     * @return The resource ID of the storage account to which you would like to send Diagnostic Logs.
     */
    public Output</* @Nullable */ String> getStorageAccountId() {
        return this.storageAccountId;
    }
    /**
     * Azure resource type
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Azure resource type
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
     */
    @OutputExport(name="workspaceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> workspaceId;

    /**
     * @return The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
     */
    public Output</* @Nullable */ String> getWorkspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagementGroupDiagnosticSetting(String name, ManagementGroupDiagnosticSettingArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:insights:ManagementGroupDiagnosticSetting", name, args == null ? ManagementGroupDiagnosticSettingArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ManagementGroupDiagnosticSetting(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:insights:ManagementGroupDiagnosticSetting", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:insights/v20200101preview:ManagementGroupDiagnosticSetting").build()),
                Input.of(Alias.builder().setType("azure-native:insights/v20210501preview:ManagementGroupDiagnosticSetting").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagementGroupDiagnosticSetting get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ManagementGroupDiagnosticSetting(name, id, options);
    }
}
