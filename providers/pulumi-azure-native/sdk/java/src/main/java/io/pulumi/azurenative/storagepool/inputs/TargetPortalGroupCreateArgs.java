// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagepool.inputs;

import io.pulumi.azurenative.storagepool.inputs.AclArgs;
import io.pulumi.azurenative.storagepool.inputs.AttributesArgs;
import io.pulumi.azurenative.storagepool.inputs.IscsiLunArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.util.List;
import java.util.Objects;


/**
 * Target portal group properties for create or update iSCSI target request.
 * 
 */
public final class TargetPortalGroupCreateArgs extends io.pulumi.resources.ResourceArgs {

    public static final TargetPortalGroupCreateArgs Empty = new TargetPortalGroupCreateArgs();

    /**
     * Access Control List (ACL) for an iSCSI target portal group.
     * 
     */
    @Import(name="acls", required=true)
      private final Output<List<AclArgs>> acls;

    public Output<List<AclArgs>> acls() {
        return this.acls;
    }

    /**
     * Attributes of an iSCSI target portal group.
     * 
     */
    @Import(name="attributes", required=true)
      private final Output<AttributesArgs> attributes;

    public Output<AttributesArgs> attributes() {
        return this.attributes;
    }

    /**
     * List of LUNs to be exposed through the iSCSI target portal group.
     * 
     */
    @Import(name="luns", required=true)
      private final Output<List<IscsiLunArgs>> luns;

    public Output<List<IscsiLunArgs>> luns() {
        return this.luns;
    }

    public TargetPortalGroupCreateArgs(
        Output<List<AclArgs>> acls,
        Output<AttributesArgs> attributes,
        Output<List<IscsiLunArgs>> luns) {
        this.acls = Objects.requireNonNull(acls, "expected parameter 'acls' to be non-null");
        this.attributes = Objects.requireNonNull(attributes, "expected parameter 'attributes' to be non-null");
        this.luns = Objects.requireNonNull(luns, "expected parameter 'luns' to be non-null");
    }

    private TargetPortalGroupCreateArgs() {
        this.acls = Codegen.empty();
        this.attributes = Codegen.empty();
        this.luns = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetPortalGroupCreateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<AclArgs>> acls;
        private Output<AttributesArgs> attributes;
        private Output<List<IscsiLunArgs>> luns;

        public Builder() {
    	      // Empty
        }

        public Builder(TargetPortalGroupCreateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acls = defaults.acls;
    	      this.attributes = defaults.attributes;
    	      this.luns = defaults.luns;
        }

        public Builder acls(Output<List<AclArgs>> acls) {
            this.acls = Objects.requireNonNull(acls);
            return this;
        }
        public Builder acls(List<AclArgs> acls) {
            this.acls = Output.of(Objects.requireNonNull(acls));
            return this;
        }
        public Builder acls(AclArgs... acls) {
            return acls(List.of(acls));
        }
        public Builder attributes(Output<AttributesArgs> attributes) {
            this.attributes = Objects.requireNonNull(attributes);
            return this;
        }
        public Builder attributes(AttributesArgs attributes) {
            this.attributes = Output.of(Objects.requireNonNull(attributes));
            return this;
        }
        public Builder luns(Output<List<IscsiLunArgs>> luns) {
            this.luns = Objects.requireNonNull(luns);
            return this;
        }
        public Builder luns(List<IscsiLunArgs> luns) {
            this.luns = Output.of(Objects.requireNonNull(luns));
            return this;
        }
        public Builder luns(IscsiLunArgs... luns) {
            return luns(List.of(luns));
        }        public TargetPortalGroupCreateArgs build() {
            return new TargetPortalGroupCreateArgs(acls, attributes, luns);
        }
    }
}
