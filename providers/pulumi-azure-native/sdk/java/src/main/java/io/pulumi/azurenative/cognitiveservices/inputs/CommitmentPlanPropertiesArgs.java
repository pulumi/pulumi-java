// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cognitiveservices.inputs;

import io.pulumi.azurenative.cognitiveservices.enums.HostingModel;
import io.pulumi.azurenative.cognitiveservices.inputs.CommitmentPeriodArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Properties of Cognitive Services account commitment plan.
 * 
 */
public final class CommitmentPlanPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final CommitmentPlanPropertiesArgs Empty = new CommitmentPlanPropertiesArgs();

    /**
     * AutoRenew commitment plan.
     * 
     */
    @InputImport(name="autoRenew")
      private final @Nullable Output<Boolean> autoRenew;

    public Output<Boolean> getAutoRenew() {
        return this.autoRenew == null ? Output.empty() : this.autoRenew;
    }

    /**
     * Cognitive Services account commitment period.
     * 
     */
    @InputImport(name="current")
      private final @Nullable Output<CommitmentPeriodArgs> current;

    public Output<CommitmentPeriodArgs> getCurrent() {
        return this.current == null ? Output.empty() : this.current;
    }

    /**
     * Account hosting model.
     * 
     */
    @InputImport(name="hostingModel")
      private final @Nullable Output<Either<String,HostingModel>> hostingModel;

    public Output<Either<String,HostingModel>> getHostingModel() {
        return this.hostingModel == null ? Output.empty() : this.hostingModel;
    }

    /**
     * Cognitive Services account commitment period.
     * 
     */
    @InputImport(name="next")
      private final @Nullable Output<CommitmentPeriodArgs> next;

    public Output<CommitmentPeriodArgs> getNext() {
        return this.next == null ? Output.empty() : this.next;
    }

    /**
     * Commitment plan type.
     * 
     */
    @InputImport(name="planType")
      private final @Nullable Output<String> planType;

    public Output<String> getPlanType() {
        return this.planType == null ? Output.empty() : this.planType;
    }

    public CommitmentPlanPropertiesArgs(
        @Nullable Output<Boolean> autoRenew,
        @Nullable Output<CommitmentPeriodArgs> current,
        @Nullable Output<Either<String,HostingModel>> hostingModel,
        @Nullable Output<CommitmentPeriodArgs> next,
        @Nullable Output<String> planType) {
        this.autoRenew = autoRenew;
        this.current = current;
        this.hostingModel = hostingModel;
        this.next = next;
        this.planType = planType;
    }

    private CommitmentPlanPropertiesArgs() {
        this.autoRenew = Output.empty();
        this.current = Output.empty();
        this.hostingModel = Output.empty();
        this.next = Output.empty();
        this.planType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CommitmentPlanPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> autoRenew;
        private @Nullable Output<CommitmentPeriodArgs> current;
        private @Nullable Output<Either<String,HostingModel>> hostingModel;
        private @Nullable Output<CommitmentPeriodArgs> next;
        private @Nullable Output<String> planType;

        public Builder() {
    	      // Empty
        }

        public Builder(CommitmentPlanPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRenew = defaults.autoRenew;
    	      this.current = defaults.current;
    	      this.hostingModel = defaults.hostingModel;
    	      this.next = defaults.next;
    	      this.planType = defaults.planType;
        }

        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            this.autoRenew = autoRenew;
            return this;
        }

        public Builder autoRenew(@Nullable Boolean autoRenew) {
            this.autoRenew = Output.ofNullable(autoRenew);
            return this;
        }

        public Builder current(@Nullable Output<CommitmentPeriodArgs> current) {
            this.current = current;
            return this;
        }

        public Builder current(@Nullable CommitmentPeriodArgs current) {
            this.current = Output.ofNullable(current);
            return this;
        }

        public Builder hostingModel(@Nullable Output<Either<String,HostingModel>> hostingModel) {
            this.hostingModel = hostingModel;
            return this;
        }

        public Builder hostingModel(@Nullable Either<String,HostingModel> hostingModel) {
            this.hostingModel = Output.ofNullable(hostingModel);
            return this;
        }

        public Builder next(@Nullable Output<CommitmentPeriodArgs> next) {
            this.next = next;
            return this;
        }

        public Builder next(@Nullable CommitmentPeriodArgs next) {
            this.next = Output.ofNullable(next);
            return this;
        }

        public Builder planType(@Nullable Output<String> planType) {
            this.planType = planType;
            return this;
        }

        public Builder planType(@Nullable String planType) {
            this.planType = Output.ofNullable(planType);
            return this;
        }
        public CommitmentPlanPropertiesArgs build() {
            return new CommitmentPlanPropertiesArgs(autoRenew, current, hostingModel, next, planType);
        }
    }
}
