// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hdinsight.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class ScriptActionResponse {
    /**
     * The name of the script action.
     * 
     */
    private final String name;
    /**
     * The parameters for the script provided.
     * 
     */
    private final String parameters;
    /**
     * The URI to the script.
     * 
     */
    private final String uri;

    @OutputCustomType.Constructor({"name","parameters","uri"})
    private ScriptActionResponse(
        String name,
        String parameters,
        String uri) {
        this.name = Objects.requireNonNull(name);
        this.parameters = Objects.requireNonNull(parameters);
        this.uri = Objects.requireNonNull(uri);
    }

    /**
     * The name of the script action.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The parameters for the script provided.
     * 
    */
    public String getParameters() {
        return this.parameters;
    }
    /**
     * The URI to the script.
     * 
    */
    public String getUri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScriptActionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private String parameters;
        private String uri;

        public Builder() {
    	      // Empty
        }

        public Builder(ScriptActionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.uri = defaults.uri;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setParameters(String parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }

        public Builder setUri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }
        public ScriptActionResponse build() {
            return new ScriptActionResponse(name, parameters, uri);
        }
    }
}
