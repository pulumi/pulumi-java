// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storsimple.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetVolumeResult {
    /**
     * The IDs of the access control records, associated with the volume.
     * 
     */
    private final List<String> accessControlRecordIds;
    /**
     * The IDs of the backup policies, in which this volume is part of.
     * 
     */
    private final List<String> backupPolicyIds;
    /**
     * The backup status of the volume.
     * 
     */
    private final String backupStatus;
    /**
     * The path ID that uniquely identifies the object.
     * 
     */
    private final String id;
    /**
     * The Kind of the object. Currently only Series8000 is supported
     * 
     */
    private final @Nullable String kind;
    /**
     * The monitoring status of the volume.
     * 
     */
    private final String monitoringStatus;
    /**
     * The name of the object.
     * 
     */
    private final String name;
    /**
     * The operation status on the volume.
     * 
     */
    private final String operationStatus;
    /**
     * The size of the volume in bytes.
     * 
     */
    private final Double sizeInBytes;
    /**
     * The hierarchical type of the object.
     * 
     */
    private final String type;
    /**
     * The ID of the volume container, in which this volume is created.
     * 
     */
    private final String volumeContainerId;
    /**
     * The volume status.
     * 
     */
    private final String volumeStatus;
    /**
     * The type of the volume.
     * 
     */
    private final String volumeType;

    @OutputCustomType.Constructor({"accessControlRecordIds","backupPolicyIds","backupStatus","id","kind","monitoringStatus","name","operationStatus","sizeInBytes","type","volumeContainerId","volumeStatus","volumeType"})
    private GetVolumeResult(
        List<String> accessControlRecordIds,
        List<String> backupPolicyIds,
        String backupStatus,
        String id,
        @Nullable String kind,
        String monitoringStatus,
        String name,
        String operationStatus,
        Double sizeInBytes,
        String type,
        String volumeContainerId,
        String volumeStatus,
        String volumeType) {
        this.accessControlRecordIds = Objects.requireNonNull(accessControlRecordIds);
        this.backupPolicyIds = Objects.requireNonNull(backupPolicyIds);
        this.backupStatus = Objects.requireNonNull(backupStatus);
        this.id = Objects.requireNonNull(id);
        this.kind = kind;
        this.monitoringStatus = Objects.requireNonNull(monitoringStatus);
        this.name = Objects.requireNonNull(name);
        this.operationStatus = Objects.requireNonNull(operationStatus);
        this.sizeInBytes = Objects.requireNonNull(sizeInBytes);
        this.type = Objects.requireNonNull(type);
        this.volumeContainerId = Objects.requireNonNull(volumeContainerId);
        this.volumeStatus = Objects.requireNonNull(volumeStatus);
        this.volumeType = Objects.requireNonNull(volumeType);
    }

    /**
     * The IDs of the access control records, associated with the volume.
     * 
     */
    public List<String> getAccessControlRecordIds() {
        return this.accessControlRecordIds;
    }
    /**
     * The IDs of the backup policies, in which this volume is part of.
     * 
     */
    public List<String> getBackupPolicyIds() {
        return this.backupPolicyIds;
    }
    /**
     * The backup status of the volume.
     * 
     */
    public String getBackupStatus() {
        return this.backupStatus;
    }
    /**
     * The path ID that uniquely identifies the object.
     * 
     */
    public String getId() {
        return this.id;
    }
    /**
     * The Kind of the object. Currently only Series8000 is supported
     * 
     */
    public Optional<String> getKind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * The monitoring status of the volume.
     * 
     */
    public String getMonitoringStatus() {
        return this.monitoringStatus;
    }
    /**
     * The name of the object.
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * The operation status on the volume.
     * 
     */
    public String getOperationStatus() {
        return this.operationStatus;
    }
    /**
     * The size of the volume in bytes.
     * 
     */
    public Double getSizeInBytes() {
        return this.sizeInBytes;
    }
    /**
     * The hierarchical type of the object.
     * 
     */
    public String getType() {
        return this.type;
    }
    /**
     * The ID of the volume container, in which this volume is created.
     * 
     */
    public String getVolumeContainerId() {
        return this.volumeContainerId;
    }
    /**
     * The volume status.
     * 
     */
    public String getVolumeStatus() {
        return this.volumeStatus;
    }
    /**
     * The type of the volume.
     * 
     */
    public String getVolumeType() {
        return this.volumeType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> accessControlRecordIds;
        private List<String> backupPolicyIds;
        private String backupStatus;
        private String id;
        private @Nullable String kind;
        private String monitoringStatus;
        private String name;
        private String operationStatus;
        private Double sizeInBytes;
        private String type;
        private String volumeContainerId;
        private String volumeStatus;
        private String volumeType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVolumeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlRecordIds = defaults.accessControlRecordIds;
    	      this.backupPolicyIds = defaults.backupPolicyIds;
    	      this.backupStatus = defaults.backupStatus;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.monitoringStatus = defaults.monitoringStatus;
    	      this.name = defaults.name;
    	      this.operationStatus = defaults.operationStatus;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.type = defaults.type;
    	      this.volumeContainerId = defaults.volumeContainerId;
    	      this.volumeStatus = defaults.volumeStatus;
    	      this.volumeType = defaults.volumeType;
        }

        public Builder setAccessControlRecordIds(List<String> accessControlRecordIds) {
            this.accessControlRecordIds = Objects.requireNonNull(accessControlRecordIds);
            return this;
        }

        public Builder setBackupPolicyIds(List<String> backupPolicyIds) {
            this.backupPolicyIds = Objects.requireNonNull(backupPolicyIds);
            return this;
        }

        public Builder setBackupStatus(String backupStatus) {
            this.backupStatus = Objects.requireNonNull(backupStatus);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }

        public Builder setMonitoringStatus(String monitoringStatus) {
            this.monitoringStatus = Objects.requireNonNull(monitoringStatus);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOperationStatus(String operationStatus) {
            this.operationStatus = Objects.requireNonNull(operationStatus);
            return this;
        }

        public Builder setSizeInBytes(Double sizeInBytes) {
            this.sizeInBytes = Objects.requireNonNull(sizeInBytes);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVolumeContainerId(String volumeContainerId) {
            this.volumeContainerId = Objects.requireNonNull(volumeContainerId);
            return this;
        }

        public Builder setVolumeStatus(String volumeStatus) {
            this.volumeStatus = Objects.requireNonNull(volumeStatus);
            return this;
        }

        public Builder setVolumeType(String volumeType) {
            this.volumeType = Objects.requireNonNull(volumeType);
            return this;
        }

        public GetVolumeResult build() {
            return new GetVolumeResult(accessControlRecordIds, backupPolicyIds, backupStatus, id, kind, monitoringStatus, name, operationStatus, sizeInBytes, type, volumeContainerId, volumeStatus, volumeType);
        }
    }
}
