// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.peering;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.peering.inputs.GetConnectionMonitorTestArgs;
import io.pulumi.azurenative.peering.inputs.GetPeerAsnArgs;
import io.pulumi.azurenative.peering.inputs.GetPeeringArgs;
import io.pulumi.azurenative.peering.inputs.GetPeeringServiceArgs;
import io.pulumi.azurenative.peering.inputs.GetPrefixArgs;
import io.pulumi.azurenative.peering.inputs.GetRegisteredAsnArgs;
import io.pulumi.azurenative.peering.inputs.GetRegisteredPrefixArgs;
import io.pulumi.azurenative.peering.outputs.GetConnectionMonitorTestResult;
import io.pulumi.azurenative.peering.outputs.GetPeerAsnResult;
import io.pulumi.azurenative.peering.outputs.GetPeeringResult;
import io.pulumi.azurenative.peering.outputs.GetPeeringServiceResult;
import io.pulumi.azurenative.peering.outputs.GetPrefixResult;
import io.pulumi.azurenative.peering.outputs.GetRegisteredAsnResult;
import io.pulumi.azurenative.peering.outputs.GetRegisteredPrefixResult;
import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class PeeringFunctions {
    /**
     * The Connection Monitor Test class.
     * API Version: 2021-06-01.
     * 
     */
    public static CompletableFuture<GetConnectionMonitorTestResult> getConnectionMonitorTest(io.pulumi.azurenative.peering.inputs.GetConnectionMonitorTestArgs args) {
        return getConnectionMonitorTest(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetConnectionMonitorTestResult> getConnectionMonitorTest(io.pulumi.azurenative.peering.inputs.GetConnectionMonitorTestArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure-native:peering:getConnectionMonitorTest", TypeShape.of(GetConnectionMonitorTestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The essential information related to the peer's ASN.
     * API Version: 2021-01-01.
     * 
     */
    public static CompletableFuture<GetPeerAsnResult> getPeerAsn(io.pulumi.azurenative.peering.inputs.GetPeerAsnArgs args) {
        return getPeerAsn(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPeerAsnResult> getPeerAsn(io.pulumi.azurenative.peering.inputs.GetPeerAsnArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure-native:peering:getPeerAsn", TypeShape.of(GetPeerAsnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Peering is a logical representation of a set of connections to the Microsoft Cloud Edge at a location.
     * API Version: 2021-01-01.
     * 
     */
    public static CompletableFuture<GetPeeringResult> getPeering(io.pulumi.azurenative.peering.inputs.GetPeeringArgs args) {
        return getPeering(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPeeringResult> getPeering(io.pulumi.azurenative.peering.inputs.GetPeeringArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure-native:peering:getPeering", TypeShape.of(GetPeeringResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Peering Service
     * API Version: 2021-01-01.
     * 
     */
    public static CompletableFuture<GetPeeringServiceResult> getPeeringService(io.pulumi.azurenative.peering.inputs.GetPeeringServiceArgs args) {
        return getPeeringService(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPeeringServiceResult> getPeeringService(io.pulumi.azurenative.peering.inputs.GetPeeringServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure-native:peering:getPeeringService", TypeShape.of(GetPeeringServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The peering service prefix class.
     * API Version: 2021-01-01.
     * 
     */
    public static CompletableFuture<GetPrefixResult> getPrefix(io.pulumi.azurenative.peering.inputs.GetPrefixArgs args) {
        return getPrefix(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPrefixResult> getPrefix(io.pulumi.azurenative.peering.inputs.GetPrefixArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure-native:peering:getPrefix", TypeShape.of(GetPrefixResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The customer's ASN that is registered by the peering service provider.
     * API Version: 2021-01-01.
     * 
     */
    public static CompletableFuture<GetRegisteredAsnResult> getRegisteredAsn(io.pulumi.azurenative.peering.inputs.GetRegisteredAsnArgs args) {
        return getRegisteredAsn(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegisteredAsnResult> getRegisteredAsn(io.pulumi.azurenative.peering.inputs.GetRegisteredAsnArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure-native:peering:getRegisteredAsn", TypeShape.of(GetRegisteredAsnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The customer's prefix that is registered by the peering service provider.
     * API Version: 2021-01-01.
     * 
     */
    public static CompletableFuture<GetRegisteredPrefixResult> getRegisteredPrefix(io.pulumi.azurenative.peering.inputs.GetRegisteredPrefixArgs args) {
        return getRegisteredPrefix(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegisteredPrefixResult> getRegisteredPrefix(io.pulumi.azurenative.peering.inputs.GetRegisteredPrefixArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure-native:peering:getRegisteredPrefix", TypeShape.of(GetRegisteredPrefixResult.class), args, Utilities.withVersion(options));
    }
}
