// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hdinsight.inputs;

import io.pulumi.azurenative.hdinsight.enums.JsonWebKeyEncryptionAlgorithm;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The disk encryption properties
 * 
 */
public final class DiskEncryptionPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final DiskEncryptionPropertiesArgs Empty = new DiskEncryptionPropertiesArgs();

    /**
     * Algorithm identifier for encryption, default RSA-OAEP.
     * 
     */
    @Import(name="encryptionAlgorithm")
      private final @Nullable Output<Either<String,JsonWebKeyEncryptionAlgorithm>> encryptionAlgorithm;

    public Output<Either<String,JsonWebKeyEncryptionAlgorithm>> getEncryptionAlgorithm() {
        return this.encryptionAlgorithm == null ? Output.empty() : this.encryptionAlgorithm;
    }

    /**
     * Indicates whether or not resource disk encryption is enabled.
     * 
     */
    @Import(name="encryptionAtHost")
      private final @Nullable Output<Boolean> encryptionAtHost;

    public Output<Boolean> getEncryptionAtHost() {
        return this.encryptionAtHost == null ? Output.empty() : this.encryptionAtHost;
    }

    /**
     * Key name that is used for enabling disk encryption.
     * 
     */
    @Import(name="keyName")
      private final @Nullable Output<String> keyName;

    public Output<String> getKeyName() {
        return this.keyName == null ? Output.empty() : this.keyName;
    }

    /**
     * Specific key version that is used for enabling disk encryption.
     * 
     */
    @Import(name="keyVersion")
      private final @Nullable Output<String> keyVersion;

    public Output<String> getKeyVersion() {
        return this.keyVersion == null ? Output.empty() : this.keyVersion;
    }

    /**
     * Resource ID of Managed Identity that is used to access the key vault.
     * 
     */
    @Import(name="msiResourceId")
      private final @Nullable Output<String> msiResourceId;

    public Output<String> getMsiResourceId() {
        return this.msiResourceId == null ? Output.empty() : this.msiResourceId;
    }

    /**
     * Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
     * 
     */
    @Import(name="vaultUri")
      private final @Nullable Output<String> vaultUri;

    public Output<String> getVaultUri() {
        return this.vaultUri == null ? Output.empty() : this.vaultUri;
    }

    public DiskEncryptionPropertiesArgs(
        @Nullable Output<Either<String,JsonWebKeyEncryptionAlgorithm>> encryptionAlgorithm,
        @Nullable Output<Boolean> encryptionAtHost,
        @Nullable Output<String> keyName,
        @Nullable Output<String> keyVersion,
        @Nullable Output<String> msiResourceId,
        @Nullable Output<String> vaultUri) {
        this.encryptionAlgorithm = encryptionAlgorithm;
        this.encryptionAtHost = encryptionAtHost == null ? Output.ofNullable(false) : encryptionAtHost;
        this.keyName = keyName;
        this.keyVersion = keyVersion;
        this.msiResourceId = msiResourceId;
        this.vaultUri = vaultUri;
    }

    private DiskEncryptionPropertiesArgs() {
        this.encryptionAlgorithm = Output.empty();
        this.encryptionAtHost = Output.empty();
        this.keyName = Output.empty();
        this.keyVersion = Output.empty();
        this.msiResourceId = Output.empty();
        this.vaultUri = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskEncryptionPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,JsonWebKeyEncryptionAlgorithm>> encryptionAlgorithm;
        private @Nullable Output<Boolean> encryptionAtHost;
        private @Nullable Output<String> keyName;
        private @Nullable Output<String> keyVersion;
        private @Nullable Output<String> msiResourceId;
        private @Nullable Output<String> vaultUri;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskEncryptionPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionAlgorithm = defaults.encryptionAlgorithm;
    	      this.encryptionAtHost = defaults.encryptionAtHost;
    	      this.keyName = defaults.keyName;
    	      this.keyVersion = defaults.keyVersion;
    	      this.msiResourceId = defaults.msiResourceId;
    	      this.vaultUri = defaults.vaultUri;
        }

        public Builder encryptionAlgorithm(@Nullable Output<Either<String,JsonWebKeyEncryptionAlgorithm>> encryptionAlgorithm) {
            this.encryptionAlgorithm = encryptionAlgorithm;
            return this;
        }
        public Builder encryptionAlgorithm(@Nullable Either<String,JsonWebKeyEncryptionAlgorithm> encryptionAlgorithm) {
            this.encryptionAlgorithm = Output.ofNullable(encryptionAlgorithm);
            return this;
        }
        public Builder encryptionAtHost(@Nullable Output<Boolean> encryptionAtHost) {
            this.encryptionAtHost = encryptionAtHost;
            return this;
        }
        public Builder encryptionAtHost(@Nullable Boolean encryptionAtHost) {
            this.encryptionAtHost = Output.ofNullable(encryptionAtHost);
            return this;
        }
        public Builder keyName(@Nullable Output<String> keyName) {
            this.keyName = keyName;
            return this;
        }
        public Builder keyName(@Nullable String keyName) {
            this.keyName = Output.ofNullable(keyName);
            return this;
        }
        public Builder keyVersion(@Nullable Output<String> keyVersion) {
            this.keyVersion = keyVersion;
            return this;
        }
        public Builder keyVersion(@Nullable String keyVersion) {
            this.keyVersion = Output.ofNullable(keyVersion);
            return this;
        }
        public Builder msiResourceId(@Nullable Output<String> msiResourceId) {
            this.msiResourceId = msiResourceId;
            return this;
        }
        public Builder msiResourceId(@Nullable String msiResourceId) {
            this.msiResourceId = Output.ofNullable(msiResourceId);
            return this;
        }
        public Builder vaultUri(@Nullable Output<String> vaultUri) {
            this.vaultUri = vaultUri;
            return this;
        }
        public Builder vaultUri(@Nullable String vaultUri) {
            this.vaultUri = Output.ofNullable(vaultUri);
            return this;
        }        public DiskEncryptionPropertiesArgs build() {
            return new DiskEncryptionPropertiesArgs(encryptionAlgorithm, encryptionAtHost, keyName, keyVersion, msiResourceId, vaultUri);
        }
    }
}
