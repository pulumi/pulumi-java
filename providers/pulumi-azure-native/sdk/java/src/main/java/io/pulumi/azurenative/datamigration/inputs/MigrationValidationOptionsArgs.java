// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Types of validations to run after the migration
 * 
 */
public final class MigrationValidationOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final MigrationValidationOptionsArgs Empty = new MigrationValidationOptionsArgs();

    /**
     * Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
     * 
     */
    @InputImport(name="enableDataIntegrityValidation")
      private final @Nullable Input<Boolean> enableDataIntegrityValidation;

    public Input<Boolean> getEnableDataIntegrityValidation() {
        return this.enableDataIntegrityValidation == null ? Input.empty() : this.enableDataIntegrityValidation;
    }

    /**
     * Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
     * 
     */
    @InputImport(name="enableQueryAnalysisValidation")
      private final @Nullable Input<Boolean> enableQueryAnalysisValidation;

    public Input<Boolean> getEnableQueryAnalysisValidation() {
        return this.enableQueryAnalysisValidation == null ? Input.empty() : this.enableQueryAnalysisValidation;
    }

    /**
     * Allows to compare the schema information between source and target.
     * 
     */
    @InputImport(name="enableSchemaValidation")
      private final @Nullable Input<Boolean> enableSchemaValidation;

    public Input<Boolean> getEnableSchemaValidation() {
        return this.enableSchemaValidation == null ? Input.empty() : this.enableSchemaValidation;
    }

    public MigrationValidationOptionsArgs(
        @Nullable Input<Boolean> enableDataIntegrityValidation,
        @Nullable Input<Boolean> enableQueryAnalysisValidation,
        @Nullable Input<Boolean> enableSchemaValidation) {
        this.enableDataIntegrityValidation = enableDataIntegrityValidation;
        this.enableQueryAnalysisValidation = enableQueryAnalysisValidation;
        this.enableSchemaValidation = enableSchemaValidation;
    }

    private MigrationValidationOptionsArgs() {
        this.enableDataIntegrityValidation = Input.empty();
        this.enableQueryAnalysisValidation = Input.empty();
        this.enableSchemaValidation = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationValidationOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> enableDataIntegrityValidation;
        private @Nullable Input<Boolean> enableQueryAnalysisValidation;
        private @Nullable Input<Boolean> enableSchemaValidation;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrationValidationOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableDataIntegrityValidation = defaults.enableDataIntegrityValidation;
    	      this.enableQueryAnalysisValidation = defaults.enableQueryAnalysisValidation;
    	      this.enableSchemaValidation = defaults.enableSchemaValidation;
        }

        public Builder enableDataIntegrityValidation(@Nullable Input<Boolean> enableDataIntegrityValidation) {
            this.enableDataIntegrityValidation = enableDataIntegrityValidation;
            return this;
        }

        public Builder enableDataIntegrityValidation(@Nullable Boolean enableDataIntegrityValidation) {
            this.enableDataIntegrityValidation = Input.ofNullable(enableDataIntegrityValidation);
            return this;
        }

        public Builder enableQueryAnalysisValidation(@Nullable Input<Boolean> enableQueryAnalysisValidation) {
            this.enableQueryAnalysisValidation = enableQueryAnalysisValidation;
            return this;
        }

        public Builder enableQueryAnalysisValidation(@Nullable Boolean enableQueryAnalysisValidation) {
            this.enableQueryAnalysisValidation = Input.ofNullable(enableQueryAnalysisValidation);
            return this;
        }

        public Builder enableSchemaValidation(@Nullable Input<Boolean> enableSchemaValidation) {
            this.enableSchemaValidation = enableSchemaValidation;
            return this;
        }

        public Builder enableSchemaValidation(@Nullable Boolean enableSchemaValidation) {
            this.enableSchemaValidation = Input.ofNullable(enableSchemaValidation);
            return this;
        }
        public MigrationValidationOptionsArgs build() {
            return new MigrationValidationOptionsArgs(enableDataIntegrityValidation, enableQueryAnalysisValidation, enableSchemaValidation);
        }
    }
}
