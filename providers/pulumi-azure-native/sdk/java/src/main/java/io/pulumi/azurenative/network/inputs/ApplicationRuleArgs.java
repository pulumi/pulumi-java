// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.inputs.FirewallPolicyRuleApplicationProtocolArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Rule of type application.
 * 
 */
public final class ApplicationRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApplicationRuleArgs Empty = new ApplicationRuleArgs();

    /**
     * Description of the rule.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * List of destination IP addresses or Service Tags.
     * 
     */
    @InputImport(name="destinationAddresses")
      private final @Nullable Output<List<String>> destinationAddresses;

    public Output<List<String>> getDestinationAddresses() {
        return this.destinationAddresses == null ? Output.empty() : this.destinationAddresses;
    }

    /**
     * List of FQDN Tags for this rule.
     * 
     */
    @InputImport(name="fqdnTags")
      private final @Nullable Output<List<String>> fqdnTags;

    public Output<List<String>> getFqdnTags() {
        return this.fqdnTags == null ? Output.empty() : this.fqdnTags;
    }

    /**
     * Name of the rule.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Array of Application Protocols.
     * 
     */
    @InputImport(name="protocols")
      private final @Nullable Output<List<FirewallPolicyRuleApplicationProtocolArgs>> protocols;

    public Output<List<FirewallPolicyRuleApplicationProtocolArgs>> getProtocols() {
        return this.protocols == null ? Output.empty() : this.protocols;
    }

    /**
     * Rule Type.
     * Expected value is 'ApplicationRule'.
     * 
     */
    @InputImport(name="ruleType", required=true)
      private final Output<String> ruleType;

    public Output<String> getRuleType() {
        return this.ruleType;
    }

    /**
     * List of source IP addresses for this rule.
     * 
     */
    @InputImport(name="sourceAddresses")
      private final @Nullable Output<List<String>> sourceAddresses;

    public Output<List<String>> getSourceAddresses() {
        return this.sourceAddresses == null ? Output.empty() : this.sourceAddresses;
    }

    /**
     * List of source IpGroups for this rule.
     * 
     */
    @InputImport(name="sourceIpGroups")
      private final @Nullable Output<List<String>> sourceIpGroups;

    public Output<List<String>> getSourceIpGroups() {
        return this.sourceIpGroups == null ? Output.empty() : this.sourceIpGroups;
    }

    /**
     * List of FQDNs for this rule.
     * 
     */
    @InputImport(name="targetFqdns")
      private final @Nullable Output<List<String>> targetFqdns;

    public Output<List<String>> getTargetFqdns() {
        return this.targetFqdns == null ? Output.empty() : this.targetFqdns;
    }

    /**
     * List of Urls for this rule condition.
     * 
     */
    @InputImport(name="targetUrls")
      private final @Nullable Output<List<String>> targetUrls;

    public Output<List<String>> getTargetUrls() {
        return this.targetUrls == null ? Output.empty() : this.targetUrls;
    }

    /**
     * Terminate TLS connections for this rule.
     * 
     */
    @InputImport(name="terminateTLS")
      private final @Nullable Output<Boolean> terminateTLS;

    public Output<Boolean> getTerminateTLS() {
        return this.terminateTLS == null ? Output.empty() : this.terminateTLS;
    }

    /**
     * List of destination azure web categories.
     * 
     */
    @InputImport(name="webCategories")
      private final @Nullable Output<List<String>> webCategories;

    public Output<List<String>> getWebCategories() {
        return this.webCategories == null ? Output.empty() : this.webCategories;
    }

    public ApplicationRuleArgs(
        @Nullable Output<String> description,
        @Nullable Output<List<String>> destinationAddresses,
        @Nullable Output<List<String>> fqdnTags,
        @Nullable Output<String> name,
        @Nullable Output<List<FirewallPolicyRuleApplicationProtocolArgs>> protocols,
        Output<String> ruleType,
        @Nullable Output<List<String>> sourceAddresses,
        @Nullable Output<List<String>> sourceIpGroups,
        @Nullable Output<List<String>> targetFqdns,
        @Nullable Output<List<String>> targetUrls,
        @Nullable Output<Boolean> terminateTLS,
        @Nullable Output<List<String>> webCategories) {
        this.description = description;
        this.destinationAddresses = destinationAddresses;
        this.fqdnTags = fqdnTags;
        this.name = name;
        this.protocols = protocols;
        this.ruleType = Objects.requireNonNull(ruleType, "expected parameter 'ruleType' to be non-null");
        this.sourceAddresses = sourceAddresses;
        this.sourceIpGroups = sourceIpGroups;
        this.targetFqdns = targetFqdns;
        this.targetUrls = targetUrls;
        this.terminateTLS = terminateTLS;
        this.webCategories = webCategories;
    }

    private ApplicationRuleArgs() {
        this.description = Output.empty();
        this.destinationAddresses = Output.empty();
        this.fqdnTags = Output.empty();
        this.name = Output.empty();
        this.protocols = Output.empty();
        this.ruleType = Output.empty();
        this.sourceAddresses = Output.empty();
        this.sourceIpGroups = Output.empty();
        this.targetFqdns = Output.empty();
        this.targetUrls = Output.empty();
        this.terminateTLS = Output.empty();
        this.webCategories = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<List<String>> destinationAddresses;
        private @Nullable Output<List<String>> fqdnTags;
        private @Nullable Output<String> name;
        private @Nullable Output<List<FirewallPolicyRuleApplicationProtocolArgs>> protocols;
        private Output<String> ruleType;
        private @Nullable Output<List<String>> sourceAddresses;
        private @Nullable Output<List<String>> sourceIpGroups;
        private @Nullable Output<List<String>> targetFqdns;
        private @Nullable Output<List<String>> targetUrls;
        private @Nullable Output<Boolean> terminateTLS;
        private @Nullable Output<List<String>> webCategories;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.destinationAddresses = defaults.destinationAddresses;
    	      this.fqdnTags = defaults.fqdnTags;
    	      this.name = defaults.name;
    	      this.protocols = defaults.protocols;
    	      this.ruleType = defaults.ruleType;
    	      this.sourceAddresses = defaults.sourceAddresses;
    	      this.sourceIpGroups = defaults.sourceIpGroups;
    	      this.targetFqdns = defaults.targetFqdns;
    	      this.targetUrls = defaults.targetUrls;
    	      this.terminateTLS = defaults.terminateTLS;
    	      this.webCategories = defaults.webCategories;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder destinationAddresses(@Nullable Output<List<String>> destinationAddresses) {
            this.destinationAddresses = destinationAddresses;
            return this;
        }

        public Builder destinationAddresses(@Nullable List<String> destinationAddresses) {
            this.destinationAddresses = Output.ofNullable(destinationAddresses);
            return this;
        }

        public Builder fqdnTags(@Nullable Output<List<String>> fqdnTags) {
            this.fqdnTags = fqdnTags;
            return this;
        }

        public Builder fqdnTags(@Nullable List<String> fqdnTags) {
            this.fqdnTags = Output.ofNullable(fqdnTags);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder protocols(@Nullable Output<List<FirewallPolicyRuleApplicationProtocolArgs>> protocols) {
            this.protocols = protocols;
            return this;
        }

        public Builder protocols(@Nullable List<FirewallPolicyRuleApplicationProtocolArgs> protocols) {
            this.protocols = Output.ofNullable(protocols);
            return this;
        }

        public Builder ruleType(Output<String> ruleType) {
            this.ruleType = Objects.requireNonNull(ruleType);
            return this;
        }

        public Builder ruleType(String ruleType) {
            this.ruleType = Output.of(Objects.requireNonNull(ruleType));
            return this;
        }

        public Builder sourceAddresses(@Nullable Output<List<String>> sourceAddresses) {
            this.sourceAddresses = sourceAddresses;
            return this;
        }

        public Builder sourceAddresses(@Nullable List<String> sourceAddresses) {
            this.sourceAddresses = Output.ofNullable(sourceAddresses);
            return this;
        }

        public Builder sourceIpGroups(@Nullable Output<List<String>> sourceIpGroups) {
            this.sourceIpGroups = sourceIpGroups;
            return this;
        }

        public Builder sourceIpGroups(@Nullable List<String> sourceIpGroups) {
            this.sourceIpGroups = Output.ofNullable(sourceIpGroups);
            return this;
        }

        public Builder targetFqdns(@Nullable Output<List<String>> targetFqdns) {
            this.targetFqdns = targetFqdns;
            return this;
        }

        public Builder targetFqdns(@Nullable List<String> targetFqdns) {
            this.targetFqdns = Output.ofNullable(targetFqdns);
            return this;
        }

        public Builder targetUrls(@Nullable Output<List<String>> targetUrls) {
            this.targetUrls = targetUrls;
            return this;
        }

        public Builder targetUrls(@Nullable List<String> targetUrls) {
            this.targetUrls = Output.ofNullable(targetUrls);
            return this;
        }

        public Builder terminateTLS(@Nullable Output<Boolean> terminateTLS) {
            this.terminateTLS = terminateTLS;
            return this;
        }

        public Builder terminateTLS(@Nullable Boolean terminateTLS) {
            this.terminateTLS = Output.ofNullable(terminateTLS);
            return this;
        }

        public Builder webCategories(@Nullable Output<List<String>> webCategories) {
            this.webCategories = webCategories;
            return this;
        }

        public Builder webCategories(@Nullable List<String> webCategories) {
            this.webCategories = Output.ofNullable(webCategories);
            return this;
        }
        public ApplicationRuleArgs build() {
            return new ApplicationRuleArgs(description, destinationAddresses, fqdnTags, name, protocols, ruleType, sourceAddresses, sourceIpGroups, targetFqdns, targetUrls, terminateTLS, webCategories);
        }
    }
}
