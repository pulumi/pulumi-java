// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.outputs;

import io.pulumi.azurenative.compute.outputs.BootDiagnosticsInstanceViewResponse;
import io.pulumi.azurenative.compute.outputs.DiskInstanceViewResponse;
import io.pulumi.azurenative.compute.outputs.InstanceViewStatusResponse;
import io.pulumi.azurenative.compute.outputs.MaintenanceRedeployStatusResponse;
import io.pulumi.azurenative.compute.outputs.VirtualMachineAgentInstanceViewResponse;
import io.pulumi.azurenative.compute.outputs.VirtualMachineExtensionInstanceViewResponse;
import io.pulumi.azurenative.compute.outputs.VirtualMachineHealthStatusResponse;
import io.pulumi.azurenative.compute.outputs.VirtualMachinePatchStatusResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class VirtualMachineInstanceViewResponse {
    private final String assignedHost;
    private final @Nullable BootDiagnosticsInstanceViewResponse bootDiagnostics;
    private final @Nullable String computerName;
    private final @Nullable List<DiskInstanceViewResponse> disks;
    private final @Nullable List<VirtualMachineExtensionInstanceViewResponse> extensions;
    private final @Nullable String hyperVGeneration;
    private final @Nullable MaintenanceRedeployStatusResponse maintenanceRedeployStatus;
    private final @Nullable String osName;
    private final @Nullable String osVersion;
    private final @Nullable VirtualMachinePatchStatusResponse patchStatus;
    private final @Nullable Integer platformFaultDomain;
    private final @Nullable Integer platformUpdateDomain;
    private final @Nullable String rdpThumbPrint;
    private final @Nullable List<InstanceViewStatusResponse> statuses;
    private final @Nullable VirtualMachineAgentInstanceViewResponse vmAgent;
    private final VirtualMachineHealthStatusResponse vmHealth;

    @OutputCustomType.Constructor({"assignedHost","bootDiagnostics","computerName","disks","extensions","hyperVGeneration","maintenanceRedeployStatus","osName","osVersion","patchStatus","platformFaultDomain","platformUpdateDomain","rdpThumbPrint","statuses","vmAgent","vmHealth"})
    private VirtualMachineInstanceViewResponse(
        String assignedHost,
        @Nullable BootDiagnosticsInstanceViewResponse bootDiagnostics,
        @Nullable String computerName,
        @Nullable List<DiskInstanceViewResponse> disks,
        @Nullable List<VirtualMachineExtensionInstanceViewResponse> extensions,
        @Nullable String hyperVGeneration,
        @Nullable MaintenanceRedeployStatusResponse maintenanceRedeployStatus,
        @Nullable String osName,
        @Nullable String osVersion,
        @Nullable VirtualMachinePatchStatusResponse patchStatus,
        @Nullable Integer platformFaultDomain,
        @Nullable Integer platformUpdateDomain,
        @Nullable String rdpThumbPrint,
        @Nullable List<InstanceViewStatusResponse> statuses,
        @Nullable VirtualMachineAgentInstanceViewResponse vmAgent,
        VirtualMachineHealthStatusResponse vmHealth) {
        this.assignedHost = Objects.requireNonNull(assignedHost);
        this.bootDiagnostics = bootDiagnostics;
        this.computerName = computerName;
        this.disks = disks;
        this.extensions = extensions;
        this.hyperVGeneration = hyperVGeneration;
        this.maintenanceRedeployStatus = maintenanceRedeployStatus;
        this.osName = osName;
        this.osVersion = osVersion;
        this.patchStatus = patchStatus;
        this.platformFaultDomain = platformFaultDomain;
        this.platformUpdateDomain = platformUpdateDomain;
        this.rdpThumbPrint = rdpThumbPrint;
        this.statuses = statuses;
        this.vmAgent = vmAgent;
        this.vmHealth = Objects.requireNonNull(vmHealth);
    }

    public String getAssignedHost() {
        return this.assignedHost;
    }
    public Optional<BootDiagnosticsInstanceViewResponse> getBootDiagnostics() {
        return Optional.ofNullable(this.bootDiagnostics);
    }
    public Optional<String> getComputerName() {
        return Optional.ofNullable(this.computerName);
    }
    public List<DiskInstanceViewResponse> getDisks() {
        return this.disks == null ? List.of() : this.disks;
    }
    public List<VirtualMachineExtensionInstanceViewResponse> getExtensions() {
        return this.extensions == null ? List.of() : this.extensions;
    }
    public Optional<String> getHyperVGeneration() {
        return Optional.ofNullable(this.hyperVGeneration);
    }
    public Optional<MaintenanceRedeployStatusResponse> getMaintenanceRedeployStatus() {
        return Optional.ofNullable(this.maintenanceRedeployStatus);
    }
    public Optional<String> getOsName() {
        return Optional.ofNullable(this.osName);
    }
    public Optional<String> getOsVersion() {
        return Optional.ofNullable(this.osVersion);
    }
    public Optional<VirtualMachinePatchStatusResponse> getPatchStatus() {
        return Optional.ofNullable(this.patchStatus);
    }
    public Optional<Integer> getPlatformFaultDomain() {
        return Optional.ofNullable(this.platformFaultDomain);
    }
    public Optional<Integer> getPlatformUpdateDomain() {
        return Optional.ofNullable(this.platformUpdateDomain);
    }
    public Optional<String> getRdpThumbPrint() {
        return Optional.ofNullable(this.rdpThumbPrint);
    }
    public List<InstanceViewStatusResponse> getStatuses() {
        return this.statuses == null ? List.of() : this.statuses;
    }
    public Optional<VirtualMachineAgentInstanceViewResponse> getVmAgent() {
        return Optional.ofNullable(this.vmAgent);
    }
    public VirtualMachineHealthStatusResponse getVmHealth() {
        return this.vmHealth;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineInstanceViewResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String assignedHost;
        private @Nullable BootDiagnosticsInstanceViewResponse bootDiagnostics;
        private @Nullable String computerName;
        private @Nullable List<DiskInstanceViewResponse> disks;
        private @Nullable List<VirtualMachineExtensionInstanceViewResponse> extensions;
        private @Nullable String hyperVGeneration;
        private @Nullable MaintenanceRedeployStatusResponse maintenanceRedeployStatus;
        private @Nullable String osName;
        private @Nullable String osVersion;
        private @Nullable VirtualMachinePatchStatusResponse patchStatus;
        private @Nullable Integer platformFaultDomain;
        private @Nullable Integer platformUpdateDomain;
        private @Nullable String rdpThumbPrint;
        private @Nullable List<InstanceViewStatusResponse> statuses;
        private @Nullable VirtualMachineAgentInstanceViewResponse vmAgent;
        private VirtualMachineHealthStatusResponse vmHealth;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineInstanceViewResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignedHost = defaults.assignedHost;
    	      this.bootDiagnostics = defaults.bootDiagnostics;
    	      this.computerName = defaults.computerName;
    	      this.disks = defaults.disks;
    	      this.extensions = defaults.extensions;
    	      this.hyperVGeneration = defaults.hyperVGeneration;
    	      this.maintenanceRedeployStatus = defaults.maintenanceRedeployStatus;
    	      this.osName = defaults.osName;
    	      this.osVersion = defaults.osVersion;
    	      this.patchStatus = defaults.patchStatus;
    	      this.platformFaultDomain = defaults.platformFaultDomain;
    	      this.platformUpdateDomain = defaults.platformUpdateDomain;
    	      this.rdpThumbPrint = defaults.rdpThumbPrint;
    	      this.statuses = defaults.statuses;
    	      this.vmAgent = defaults.vmAgent;
    	      this.vmHealth = defaults.vmHealth;
        }

        public Builder setAssignedHost(String assignedHost) {
            this.assignedHost = Objects.requireNonNull(assignedHost);
            return this;
        }

        public Builder setBootDiagnostics(@Nullable BootDiagnosticsInstanceViewResponse bootDiagnostics) {
            this.bootDiagnostics = bootDiagnostics;
            return this;
        }

        public Builder setComputerName(@Nullable String computerName) {
            this.computerName = computerName;
            return this;
        }

        public Builder setDisks(@Nullable List<DiskInstanceViewResponse> disks) {
            this.disks = disks;
            return this;
        }

        public Builder setExtensions(@Nullable List<VirtualMachineExtensionInstanceViewResponse> extensions) {
            this.extensions = extensions;
            return this;
        }

        public Builder setHyperVGeneration(@Nullable String hyperVGeneration) {
            this.hyperVGeneration = hyperVGeneration;
            return this;
        }

        public Builder setMaintenanceRedeployStatus(@Nullable MaintenanceRedeployStatusResponse maintenanceRedeployStatus) {
            this.maintenanceRedeployStatus = maintenanceRedeployStatus;
            return this;
        }

        public Builder setOsName(@Nullable String osName) {
            this.osName = osName;
            return this;
        }

        public Builder setOsVersion(@Nullable String osVersion) {
            this.osVersion = osVersion;
            return this;
        }

        public Builder setPatchStatus(@Nullable VirtualMachinePatchStatusResponse patchStatus) {
            this.patchStatus = patchStatus;
            return this;
        }

        public Builder setPlatformFaultDomain(@Nullable Integer platformFaultDomain) {
            this.platformFaultDomain = platformFaultDomain;
            return this;
        }

        public Builder setPlatformUpdateDomain(@Nullable Integer platformUpdateDomain) {
            this.platformUpdateDomain = platformUpdateDomain;
            return this;
        }

        public Builder setRdpThumbPrint(@Nullable String rdpThumbPrint) {
            this.rdpThumbPrint = rdpThumbPrint;
            return this;
        }

        public Builder setStatuses(@Nullable List<InstanceViewStatusResponse> statuses) {
            this.statuses = statuses;
            return this;
        }

        public Builder setVmAgent(@Nullable VirtualMachineAgentInstanceViewResponse vmAgent) {
            this.vmAgent = vmAgent;
            return this;
        }

        public Builder setVmHealth(VirtualMachineHealthStatusResponse vmHealth) {
            this.vmHealth = Objects.requireNonNull(vmHealth);
            return this;
        }

        public VirtualMachineInstanceViewResponse build() {
            return new VirtualMachineInstanceViewResponse(assignedHost, bootDiagnostics, computerName, disks, extensions, hyperVGeneration, maintenanceRedeployStatus, osName, osVersion, patchStatus, platformFaultDomain, platformUpdateDomain, rdpThumbPrint, statuses, vmAgent, vmHealth);
        }
    }
}
