// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.azurenative.datamigration.outputs.NodeMonitoringDataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class ListSqlMigrationServiceMonitoringDataResult {
    private final String name;
    private final List<NodeMonitoringDataResponse> nodes;

    @OutputCustomType.Constructor({"name","nodes"})
    private ListSqlMigrationServiceMonitoringDataResult(
        String name,
        List<NodeMonitoringDataResponse> nodes) {
        this.name = Objects.requireNonNull(name);
        this.nodes = Objects.requireNonNull(nodes);
    }

    public String getName() {
        return this.name;
    }
    public List<NodeMonitoringDataResponse> getNodes() {
        return this.nodes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListSqlMigrationServiceMonitoringDataResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private List<NodeMonitoringDataResponse> nodes;

        public Builder() {
    	      // Empty
        }

        public Builder(ListSqlMigrationServiceMonitoringDataResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.nodes = defaults.nodes;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNodes(List<NodeMonitoringDataResponse> nodes) {
            this.nodes = Objects.requireNonNull(nodes);
            return this;
        }

        public ListSqlMigrationServiceMonitoringDataResult build() {
            return new ListSqlMigrationServiceMonitoringDataResult(name, nodes);
        }
    }
}
