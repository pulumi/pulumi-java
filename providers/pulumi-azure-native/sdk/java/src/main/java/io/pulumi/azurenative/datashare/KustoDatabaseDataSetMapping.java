// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datashare;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.datashare.KustoDatabaseDataSetMappingArgs;
import io.pulumi.azurenative.datashare.outputs.SystemDataResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A Kusto database data set mapping
 * API Version: 2020-09-01.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### DataSetMappings_Create
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var kustoDatabaseDataSetMapping = new AzureNative.DataShare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping", new AzureNative.DataShare.KustoDatabaseDataSetMappingArgs
 *         {
 *             AccountName = "Account1",
 *             DataSetMappingName = "DatasetMapping1",
 *             ResourceGroupName = "SampleResourceGroup",
 *             ShareSubscriptionName = "ShareSubscription1",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	datashare "github.com/pulumi/pulumi-azure-native/sdk/go/azure/datashare"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := datashare.NewKustoDatabaseDataSetMapping(ctx, "kustoDatabaseDataSetMapping", &datashare.KustoDatabaseDataSetMappingArgs{
 * 			AccountName:           pulumi.String("Account1"),
 * 			DataSetMappingName:    pulumi.String("DatasetMapping1"),
 * 			ResourceGroupName:     pulumi.String("SampleResourceGroup"),
 * 			ShareSubscriptionName: pulumi.String("ShareSubscription1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const kustoDatabaseDataSetMapping = new azure_native.datashare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping", {
 *     accountName: "Account1",
 *     dataSetMappingName: "DatasetMapping1",
 *     resourceGroupName: "SampleResourceGroup",
 *     shareSubscriptionName: "ShareSubscription1",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * kusto_database_data_set_mapping = azure_native.datashare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping",
 *     account_name="Account1",
 *     data_set_mapping_name="DatasetMapping1",
 *     resource_group_name="SampleResourceGroup",
 *     share_subscription_name="ShareSubscription1")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### DataSetMappings_SqlDB_Create
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var kustoDatabaseDataSetMapping = new AzureNative.DataShare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping", new AzureNative.DataShare.KustoDatabaseDataSetMappingArgs
 *         {
 *             AccountName = "Account1",
 *             DataSetMappingName = "DatasetMapping1",
 *             ResourceGroupName = "SampleResourceGroup",
 *             ShareSubscriptionName = "ShareSubscription1",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	datashare "github.com/pulumi/pulumi-azure-native/sdk/go/azure/datashare"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := datashare.NewKustoDatabaseDataSetMapping(ctx, "kustoDatabaseDataSetMapping", &datashare.KustoDatabaseDataSetMappingArgs{
 * 			AccountName:           pulumi.String("Account1"),
 * 			DataSetMappingName:    pulumi.String("DatasetMapping1"),
 * 			ResourceGroupName:     pulumi.String("SampleResourceGroup"),
 * 			ShareSubscriptionName: pulumi.String("ShareSubscription1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const kustoDatabaseDataSetMapping = new azure_native.datashare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping", {
 *     accountName: "Account1",
 *     dataSetMappingName: "DatasetMapping1",
 *     resourceGroupName: "SampleResourceGroup",
 *     shareSubscriptionName: "ShareSubscription1",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * kusto_database_data_set_mapping = azure_native.datashare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping",
 *     account_name="Account1",
 *     data_set_mapping_name="DatasetMapping1",
 *     resource_group_name="SampleResourceGroup",
 *     share_subscription_name="ShareSubscription1")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### DataSetMappings_SqlDWDataSetToAdlsGen2File_Create
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var kustoDatabaseDataSetMapping = new AzureNative.DataShare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping", new AzureNative.DataShare.KustoDatabaseDataSetMappingArgs
 *         {
 *             AccountName = "Account1",
 *             DataSetMappingName = "DatasetMapping1",
 *             ResourceGroupName = "SampleResourceGroup",
 *             ShareSubscriptionName = "ShareSubscription1",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	datashare "github.com/pulumi/pulumi-azure-native/sdk/go/azure/datashare"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := datashare.NewKustoDatabaseDataSetMapping(ctx, "kustoDatabaseDataSetMapping", &datashare.KustoDatabaseDataSetMappingArgs{
 * 			AccountName:           pulumi.String("Account1"),
 * 			DataSetMappingName:    pulumi.String("DatasetMapping1"),
 * 			ResourceGroupName:     pulumi.String("SampleResourceGroup"),
 * 			ShareSubscriptionName: pulumi.String("ShareSubscription1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const kustoDatabaseDataSetMapping = new azure_native.datashare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping", {
 *     accountName: "Account1",
 *     dataSetMappingName: "DatasetMapping1",
 *     resourceGroupName: "SampleResourceGroup",
 *     shareSubscriptionName: "ShareSubscription1",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * kusto_database_data_set_mapping = azure_native.datashare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping",
 *     account_name="Account1",
 *     data_set_mapping_name="DatasetMapping1",
 *     resource_group_name="SampleResourceGroup",
 *     share_subscription_name="ShareSubscription1")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### DataSetMappings_SqlDW_Create
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var kustoDatabaseDataSetMapping = new AzureNative.DataShare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping", new AzureNative.DataShare.KustoDatabaseDataSetMappingArgs
 *         {
 *             AccountName = "Account1",
 *             DataSetMappingName = "DatasetMapping1",
 *             ResourceGroupName = "SampleResourceGroup",
 *             ShareSubscriptionName = "ShareSubscription1",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	datashare "github.com/pulumi/pulumi-azure-native/sdk/go/azure/datashare"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := datashare.NewKustoDatabaseDataSetMapping(ctx, "kustoDatabaseDataSetMapping", &datashare.KustoDatabaseDataSetMappingArgs{
 * 			AccountName:           pulumi.String("Account1"),
 * 			DataSetMappingName:    pulumi.String("DatasetMapping1"),
 * 			ResourceGroupName:     pulumi.String("SampleResourceGroup"),
 * 			ShareSubscriptionName: pulumi.String("ShareSubscription1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const kustoDatabaseDataSetMapping = new azure_native.datashare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping", {
 *     accountName: "Account1",
 *     dataSetMappingName: "DatasetMapping1",
 *     resourceGroupName: "SampleResourceGroup",
 *     shareSubscriptionName: "ShareSubscription1",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * kusto_database_data_set_mapping = azure_native.datashare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping",
 *     account_name="Account1",
 *     data_set_mapping_name="DatasetMapping1",
 *     resource_group_name="SampleResourceGroup",
 *     share_subscription_name="ShareSubscription1")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### DataSetMappings_SynapseWorkspaceSqlPoolTable_Create
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var kustoDatabaseDataSetMapping = new AzureNative.DataShare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping", new AzureNative.DataShare.KustoDatabaseDataSetMappingArgs
 *         {
 *             AccountName = "consumerAccount",
 *             DataSetMappingName = "datasetMappingName1",
 *             ResourceGroupName = "SampleResourceGroup",
 *             ShareSubscriptionName = "ShareSubscription1",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	datashare "github.com/pulumi/pulumi-azure-native/sdk/go/azure/datashare"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := datashare.NewKustoDatabaseDataSetMapping(ctx, "kustoDatabaseDataSetMapping", &datashare.KustoDatabaseDataSetMappingArgs{
 * 			AccountName:           pulumi.String("consumerAccount"),
 * 			DataSetMappingName:    pulumi.String("datasetMappingName1"),
 * 			ResourceGroupName:     pulumi.String("SampleResourceGroup"),
 * 			ShareSubscriptionName: pulumi.String("ShareSubscription1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const kustoDatabaseDataSetMapping = new azure_native.datashare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping", {
 *     accountName: "consumerAccount",
 *     dataSetMappingName: "datasetMappingName1",
 *     resourceGroupName: "SampleResourceGroup",
 *     shareSubscriptionName: "ShareSubscription1",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * kusto_database_data_set_mapping = azure_native.datashare.KustoDatabaseDataSetMapping("kustoDatabaseDataSetMapping",
 *     account_name="consumerAccount",
 *     data_set_mapping_name="datasetMappingName1",
 *     resource_group_name="SampleResourceGroup",
 *     share_subscription_name="ShareSubscription1")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:datashare:KustoDatabaseDataSetMapping datasetMappingName1 /subscriptions/0f3dcfc3-18f8-4099-b381-8353e19d43a7/resourceGroups/SampleResourceGroup/providers/Microsoft.DataShare/accounts/consumerAccount/shareSubscriptions/ShareSubscription1/dataSetMappings/datasetMappingName1 
 * ```
 * 
 */
@ResourceType(type="azure-native:datashare:KustoDatabaseDataSetMapping")
public class KustoDatabaseDataSetMapping extends io.pulumi.resources.CustomResource {
    /**
     * The id of the source data set.
     */
    @Export(name="dataSetId", type=String.class, parameters={})
    private Output<String> dataSetId;

    /**
     * @return The id of the source data set.
     */
    public Output<String> getDataSetId() {
        return this.dataSetId;
    }
    /**
     * Gets the status of the data set mapping.
     */
    @Export(name="dataSetMappingStatus", type=String.class, parameters={})
    private Output<String> dataSetMappingStatus;

    /**
     * @return Gets the status of the data set mapping.
     */
    public Output<String> getDataSetMappingStatus() {
        return this.dataSetMappingStatus;
    }
    /**
     * Kind of data set mapping.
     * Expected value is 'KustoDatabase'.
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return Kind of data set mapping.
     * Expected value is 'KustoDatabase'.
     */
    public Output<String> getKind() {
        return this.kind;
    }
    /**
     * Resource id of the sink kusto cluster.
     */
    @Export(name="kustoClusterResourceId", type=String.class, parameters={})
    private Output<String> kustoClusterResourceId;

    /**
     * @return Resource id of the sink kusto cluster.
     */
    public Output<String> getKustoClusterResourceId() {
        return this.kustoClusterResourceId;
    }
    /**
     * Location of the sink kusto cluster.
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Location of the sink kusto cluster.
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * Name of the azure resource
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the azure resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Provisioning state of the data set mapping.
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return Provisioning state of the data set mapping.
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * System Data of the Azure resource.
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return System Data of the Azure resource.
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * Type of the azure resource
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of the azure resource
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public KustoDatabaseDataSetMapping(String name) {
        this(name, KustoDatabaseDataSetMappingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public KustoDatabaseDataSetMapping(String name, KustoDatabaseDataSetMappingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KustoDatabaseDataSetMapping(String name, KustoDatabaseDataSetMappingArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:datashare:KustoDatabaseDataSetMapping", name, makeArgs(args), makeResourceOptions(options, Output.empty()));
    }

    private KustoDatabaseDataSetMapping(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:datashare:KustoDatabaseDataSetMapping", name, null, makeResourceOptions(options, id));
    }

    private static KustoDatabaseDataSetMappingArgs makeArgs(KustoDatabaseDataSetMappingArgs args) {
        var builder = args == null ? KustoDatabaseDataSetMappingArgs.builder() : KustoDatabaseDataSetMappingArgs.builder(args);
        return builder
            .kind("KustoDatabase")
            .build();
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:datashare/v20181101preview:KustoDatabaseDataSetMapping").build()),
                Output.of(Alias.builder().type("azure-native:datashare/v20191101:KustoDatabaseDataSetMapping").build()),
                Output.of(Alias.builder().type("azure-native:datashare/v20200901:KustoDatabaseDataSetMapping").build()),
                Output.of(Alias.builder().type("azure-native:datashare/v20201001preview:KustoDatabaseDataSetMapping").build()),
                Output.of(Alias.builder().type("azure-native:datashare/v20210801:KustoDatabaseDataSetMapping").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KustoDatabaseDataSetMapping get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new KustoDatabaseDataSetMapping(name, id, options);
    }
}
