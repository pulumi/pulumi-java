// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.azurenative.compute.inputs.EncryptionImagesResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the target region information.
 * 
 */
public final class TargetRegionResponse extends io.pulumi.resources.InvokeArgs {

    public static final TargetRegionResponse Empty = new TargetRegionResponse();

    /**
     * Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
     * 
     */
    @InputImport(name="encryption")
        private final @Nullable EncryptionImagesResponse encryption;

    public Optional<EncryptionImagesResponse> getEncryption() {
        return this.encryption == null ? Optional.empty() : Optional.ofNullable(this.encryption);
    }

    /**
     * The name of the region.
     * 
     */
    @InputImport(name="name", required=true)
        private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * The number of replicas of the Image Version to be created per region. This property is updatable.
     * 
     */
    @InputImport(name="regionalReplicaCount")
        private final @Nullable Integer regionalReplicaCount;

    public Optional<Integer> getRegionalReplicaCount() {
        return this.regionalReplicaCount == null ? Optional.empty() : Optional.ofNullable(this.regionalReplicaCount);
    }

    /**
     * Specifies the storage account type to be used to store the image. This property is not updatable.
     * 
     */
    @InputImport(name="storageAccountType")
        private final @Nullable String storageAccountType;

    public Optional<String> getStorageAccountType() {
        return this.storageAccountType == null ? Optional.empty() : Optional.ofNullable(this.storageAccountType);
    }

    public TargetRegionResponse(
        @Nullable EncryptionImagesResponse encryption,
        String name,
        @Nullable Integer regionalReplicaCount,
        @Nullable String storageAccountType) {
        this.encryption = encryption;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.regionalReplicaCount = regionalReplicaCount;
        this.storageAccountType = storageAccountType;
    }

    private TargetRegionResponse() {
        this.encryption = null;
        this.name = null;
        this.regionalReplicaCount = null;
        this.storageAccountType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetRegionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable EncryptionImagesResponse encryption;
        private String name;
        private @Nullable Integer regionalReplicaCount;
        private @Nullable String storageAccountType;

        public Builder() {
    	      // Empty
        }

        public Builder(TargetRegionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryption = defaults.encryption;
    	      this.name = defaults.name;
    	      this.regionalReplicaCount = defaults.regionalReplicaCount;
    	      this.storageAccountType = defaults.storageAccountType;
        }

        public Builder setEncryption(@Nullable EncryptionImagesResponse encryption) {
            this.encryption = encryption;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRegionalReplicaCount(@Nullable Integer regionalReplicaCount) {
            this.regionalReplicaCount = regionalReplicaCount;
            return this;
        }

        public Builder setStorageAccountType(@Nullable String storageAccountType) {
            this.storageAccountType = storageAccountType;
            return this;
        }
        public TargetRegionResponse build() {
            return new TargetRegionResponse(encryption, name, regionalReplicaCount, storageAccountType);
        }
    }
}
