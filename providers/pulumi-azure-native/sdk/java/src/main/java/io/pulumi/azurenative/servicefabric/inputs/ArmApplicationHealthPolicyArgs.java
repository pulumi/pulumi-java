// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.inputs;

import io.pulumi.azurenative.servicefabric.inputs.ArmServiceTypeHealthPolicyArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ArmApplicationHealthPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ArmApplicationHealthPolicyArgs Empty = new ArmApplicationHealthPolicyArgs();

    @InputImport(name="considerWarningAsError")
    private final @Nullable Input<Boolean> considerWarningAsError;

    public Input<Boolean> getConsiderWarningAsError() {
        return this.considerWarningAsError == null ? Input.empty() : this.considerWarningAsError;
    }

    @InputImport(name="defaultServiceTypeHealthPolicy")
    private final @Nullable Input<ArmServiceTypeHealthPolicyArgs> defaultServiceTypeHealthPolicy;

    public Input<ArmServiceTypeHealthPolicyArgs> getDefaultServiceTypeHealthPolicy() {
        return this.defaultServiceTypeHealthPolicy == null ? Input.empty() : this.defaultServiceTypeHealthPolicy;
    }

    @InputImport(name="maxPercentUnhealthyDeployedApplications")
    private final @Nullable Input<Integer> maxPercentUnhealthyDeployedApplications;

    public Input<Integer> getMaxPercentUnhealthyDeployedApplications() {
        return this.maxPercentUnhealthyDeployedApplications == null ? Input.empty() : this.maxPercentUnhealthyDeployedApplications;
    }

    @InputImport(name="serviceTypeHealthPolicyMap")
    private final @Nullable Input<Map<String,ArmServiceTypeHealthPolicyArgs>> serviceTypeHealthPolicyMap;

    public Input<Map<String,ArmServiceTypeHealthPolicyArgs>> getServiceTypeHealthPolicyMap() {
        return this.serviceTypeHealthPolicyMap == null ? Input.empty() : this.serviceTypeHealthPolicyMap;
    }

    public ArmApplicationHealthPolicyArgs(
        @Nullable Input<Boolean> considerWarningAsError,
        @Nullable Input<ArmServiceTypeHealthPolicyArgs> defaultServiceTypeHealthPolicy,
        @Nullable Input<Integer> maxPercentUnhealthyDeployedApplications,
        @Nullable Input<Map<String,ArmServiceTypeHealthPolicyArgs>> serviceTypeHealthPolicyMap) {
        this.considerWarningAsError = considerWarningAsError == null ? Input.ofNullable(false) : considerWarningAsError;
        this.defaultServiceTypeHealthPolicy = defaultServiceTypeHealthPolicy;
        this.maxPercentUnhealthyDeployedApplications = maxPercentUnhealthyDeployedApplications == null ? Input.ofNullable(0) : maxPercentUnhealthyDeployedApplications;
        this.serviceTypeHealthPolicyMap = serviceTypeHealthPolicyMap;
    }

    private ArmApplicationHealthPolicyArgs() {
        this.considerWarningAsError = Input.empty();
        this.defaultServiceTypeHealthPolicy = Input.empty();
        this.maxPercentUnhealthyDeployedApplications = Input.empty();
        this.serviceTypeHealthPolicyMap = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ArmApplicationHealthPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> considerWarningAsError;
        private @Nullable Input<ArmServiceTypeHealthPolicyArgs> defaultServiceTypeHealthPolicy;
        private @Nullable Input<Integer> maxPercentUnhealthyDeployedApplications;
        private @Nullable Input<Map<String,ArmServiceTypeHealthPolicyArgs>> serviceTypeHealthPolicyMap;

        public Builder() {
    	      // Empty
        }

        public Builder(ArmApplicationHealthPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.considerWarningAsError = defaults.considerWarningAsError;
    	      this.defaultServiceTypeHealthPolicy = defaults.defaultServiceTypeHealthPolicy;
    	      this.maxPercentUnhealthyDeployedApplications = defaults.maxPercentUnhealthyDeployedApplications;
    	      this.serviceTypeHealthPolicyMap = defaults.serviceTypeHealthPolicyMap;
        }

        public Builder setConsiderWarningAsError(@Nullable Input<Boolean> considerWarningAsError) {
            this.considerWarningAsError = considerWarningAsError;
            return this;
        }

        public Builder setConsiderWarningAsError(@Nullable Boolean considerWarningAsError) {
            this.considerWarningAsError = Input.ofNullable(considerWarningAsError);
            return this;
        }

        public Builder setDefaultServiceTypeHealthPolicy(@Nullable Input<ArmServiceTypeHealthPolicyArgs> defaultServiceTypeHealthPolicy) {
            this.defaultServiceTypeHealthPolicy = defaultServiceTypeHealthPolicy;
            return this;
        }

        public Builder setDefaultServiceTypeHealthPolicy(@Nullable ArmServiceTypeHealthPolicyArgs defaultServiceTypeHealthPolicy) {
            this.defaultServiceTypeHealthPolicy = Input.ofNullable(defaultServiceTypeHealthPolicy);
            return this;
        }

        public Builder setMaxPercentUnhealthyDeployedApplications(@Nullable Input<Integer> maxPercentUnhealthyDeployedApplications) {
            this.maxPercentUnhealthyDeployedApplications = maxPercentUnhealthyDeployedApplications;
            return this;
        }

        public Builder setMaxPercentUnhealthyDeployedApplications(@Nullable Integer maxPercentUnhealthyDeployedApplications) {
            this.maxPercentUnhealthyDeployedApplications = Input.ofNullable(maxPercentUnhealthyDeployedApplications);
            return this;
        }

        public Builder setServiceTypeHealthPolicyMap(@Nullable Input<Map<String,ArmServiceTypeHealthPolicyArgs>> serviceTypeHealthPolicyMap) {
            this.serviceTypeHealthPolicyMap = serviceTypeHealthPolicyMap;
            return this;
        }

        public Builder setServiceTypeHealthPolicyMap(@Nullable Map<String,ArmServiceTypeHealthPolicyArgs> serviceTypeHealthPolicyMap) {
            this.serviceTypeHealthPolicyMap = Input.ofNullable(serviceTypeHealthPolicyMap);
            return this;
        }

        public ArmApplicationHealthPolicyArgs build() {
            return new ArmApplicationHealthPolicyArgs(considerWarningAsError, defaultServiceTypeHealthPolicy, maxPercentUnhealthyDeployedApplications, serviceTypeHealthPolicyMap);
        }
    }
}
