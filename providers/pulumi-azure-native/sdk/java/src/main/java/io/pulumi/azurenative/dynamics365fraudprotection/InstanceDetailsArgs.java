// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.dynamics365fraudprotection;

import io.pulumi.azurenative.dynamics365fraudprotection.inputs.DFPInstanceAdministratorsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceDetailsArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceDetailsArgs Empty = new InstanceDetailsArgs();

    /**
     * A collection of DFP instance administrators
     * 
     */
    @Import(name="administration")
      private final @Nullable Output<DFPInstanceAdministratorsArgs> administration;

    public Output<DFPInstanceAdministratorsArgs> getAdministration() {
        return this.administration == null ? Codegen.empty() : this.administration;
    }

    /**
     * The name of the DFP instances. It must be a minimum of 3 characters, and a maximum of 63.
     * 
     */
    @Import(name="instanceName")
      private final @Nullable Output<String> instanceName;

    public Output<String> getInstanceName() {
        return this.instanceName == null ? Codegen.empty() : this.instanceName;
    }

    /**
     * Location of the DFP resource.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the Azure Resource group of which a given DFP instance is part. This name must be at least 1 character in length, and no more than 90.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Key-value pairs of additional resource provisioning properties.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public InstanceDetailsArgs(
        @Nullable Output<DFPInstanceAdministratorsArgs> administration,
        @Nullable Output<String> instanceName,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.administration = administration;
        this.instanceName = instanceName;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private InstanceDetailsArgs() {
        this.administration = Codegen.empty();
        this.instanceName = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<DFPInstanceAdministratorsArgs> administration;
        private @Nullable Output<String> instanceName;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administration = defaults.administration;
    	      this.instanceName = defaults.instanceName;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder administration(@Nullable Output<DFPInstanceAdministratorsArgs> administration) {
            this.administration = administration;
            return this;
        }
        public Builder administration(@Nullable DFPInstanceAdministratorsArgs administration) {
            this.administration = Codegen.ofNullable(administration);
            return this;
        }
        public Builder instanceName(@Nullable Output<String> instanceName) {
            this.instanceName = instanceName;
            return this;
        }
        public Builder instanceName(@Nullable String instanceName) {
            this.instanceName = Codegen.ofNullable(instanceName);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public InstanceDetailsArgs build() {
            return new InstanceDetailsArgs(administration, instanceName, location, resourceGroupName, tags);
        }
    }
}
