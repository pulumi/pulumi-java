// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devops.inputs;

import io.pulumi.azurenative.devops.enums.AuthorizationType;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AuthorizationArgs extends io.pulumi.resources.ResourceArgs {

    public static final AuthorizationArgs Empty = new AuthorizationArgs();

    @InputImport(name="authorizationType", required=true)
    private final Input<Either<String,AuthorizationType>> authorizationType;

    public Input<Either<String,AuthorizationType>> getAuthorizationType() {
        return this.authorizationType;
    }

    @InputImport(name="parameters")
    private final @Nullable Input<Map<String,String>> parameters;

    public Input<Map<String,String>> getParameters() {
        return this.parameters == null ? Input.empty() : this.parameters;
    }

    public AuthorizationArgs(
        Input<Either<String,AuthorizationType>> authorizationType,
        @Nullable Input<Map<String,String>> parameters) {
        this.authorizationType = Objects.requireNonNull(authorizationType, "expected parameter 'authorizationType' to be non-null");
        this.parameters = parameters;
    }

    private AuthorizationArgs() {
        this.authorizationType = Input.empty();
        this.parameters = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Either<String,AuthorizationType>> authorizationType;
        private @Nullable Input<Map<String,String>> parameters;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthorizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationType = defaults.authorizationType;
    	      this.parameters = defaults.parameters;
        }

        public Builder setAuthorizationType(Input<Either<String,AuthorizationType>> authorizationType) {
            this.authorizationType = Objects.requireNonNull(authorizationType);
            return this;
        }

        public Builder setAuthorizationType(Either<String,AuthorizationType> authorizationType) {
            this.authorizationType = Input.of(Objects.requireNonNull(authorizationType));
            return this;
        }

        public Builder setParameters(@Nullable Input<Map<String,String>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setParameters(@Nullable Map<String,String> parameters) {
            this.parameters = Input.ofNullable(parameters);
            return this;
        }

        public AuthorizationArgs build() {
            return new AuthorizationArgs(authorizationType, parameters);
        }
    }
}
