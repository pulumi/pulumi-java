// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.azurenative.web.outputs.ForwardProxyResponse;
import io.pulumi.azurenative.web.outputs.HttpSettingsRoutesResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class HttpSettingsResponse {
    private final @Nullable ForwardProxyResponse forwardProxy;
    private final @Nullable Boolean requireHttps;
    private final @Nullable HttpSettingsRoutesResponse routes;

    @OutputCustomType.Constructor({"forwardProxy","requireHttps","routes"})
    private HttpSettingsResponse(
        @Nullable ForwardProxyResponse forwardProxy,
        @Nullable Boolean requireHttps,
        @Nullable HttpSettingsRoutesResponse routes) {
        this.forwardProxy = forwardProxy;
        this.requireHttps = requireHttps;
        this.routes = routes;
    }

    public Optional<ForwardProxyResponse> getForwardProxy() {
        return Optional.ofNullable(this.forwardProxy);
    }
    public Optional<Boolean> getRequireHttps() {
        return Optional.ofNullable(this.requireHttps);
    }
    public Optional<HttpSettingsRoutesResponse> getRoutes() {
        return Optional.ofNullable(this.routes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ForwardProxyResponse forwardProxy;
        private @Nullable Boolean requireHttps;
        private @Nullable HttpSettingsRoutesResponse routes;

        public Builder() {
    	      // Empty
        }

        public Builder(HttpSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.forwardProxy = defaults.forwardProxy;
    	      this.requireHttps = defaults.requireHttps;
    	      this.routes = defaults.routes;
        }

        public Builder setForwardProxy(@Nullable ForwardProxyResponse forwardProxy) {
            this.forwardProxy = forwardProxy;
            return this;
        }

        public Builder setRequireHttps(@Nullable Boolean requireHttps) {
            this.requireHttps = requireHttps;
            return this;
        }

        public Builder setRoutes(@Nullable HttpSettingsRoutesResponse routes) {
            this.routes = routes;
            return this;
        }

        public HttpSettingsResponse build() {
            return new HttpSettingsResponse(forwardProxy, requireHttps, routes);
        }
    }
}
