// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.authorization;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.authorization.AccessReviewHistoryDefinitionByIdArgs;
import io.pulumi.azurenative.authorization.outputs.AccessReviewHistoryInstanceResponse;
import io.pulumi.azurenative.authorization.outputs.AccessReviewScopeResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Access Review History Definition.
 * API Version: 2021-11-16-preview.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:authorization:AccessReviewHistoryDefinitionById 44724910-d7a5-4c29-b28f-db73e717165a /subscriptions/129a304b-4aea-4b86-a9f7-ba7e2b23737a/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/44724910-d7a5-4c29-b28f-db73e717165a 
 * ```
 * 
 */
@ResourceType(type="azure-native:authorization:AccessReviewHistoryDefinitionById")
public class AccessReviewHistoryDefinitionById extends io.pulumi.resources.CustomResource {
    /**
     * Date time when history definition was created
     * 
     */
    @OutputExport(name="createdDateTime", type=String.class, parameters={})
    private Output<String> createdDateTime;

    /**
     * @return Date time when history definition was created
     * 
     */
    public Output<String> getCreatedDateTime() {
        return this.createdDateTime;
    }
    /**
     * Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied the data will only contain review results in which the decision maker approved or denied a review request.
     * 
     */
    @OutputExport(name="decisions", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> decisions;

    /**
     * @return Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied the data will only contain review results in which the decision maker approved or denied a review request.
     * 
     */
    public Output</* @Nullable */ List<String>> getDecisions() {
        return this.decisions;
    }
    /**
     * The display name for the history definition.
     * 
     */
    @OutputExport(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return The display name for the history definition.
     * 
     */
    public Output</* @Nullable */ String> getDisplayName() {
        return this.displayName;
    }
    /**
     * The DateTime when the review is scheduled to end. Required if type is endDate
     * 
     */
    @OutputExport(name="endDate", type=String.class, parameters={})
    private Output</* @Nullable */ String> endDate;

    /**
     * @return The DateTime when the review is scheduled to end. Required if type is endDate
     * 
     */
    public Output</* @Nullable */ String> getEndDate() {
        return this.endDate;
    }
    /**
     * Set of access review history instances for this history definition.
     * 
     */
    @OutputExport(name="instances", type=List.class, parameters={AccessReviewHistoryInstanceResponse.class})
    private Output</* @Nullable */ List<AccessReviewHistoryInstanceResponse>> instances;

    /**
     * @return Set of access review history instances for this history definition.
     * 
     */
    public Output</* @Nullable */ List<AccessReviewHistoryInstanceResponse>> getInstances() {
        return this.instances;
    }
    /**
     * The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
     * 
     */
    @OutputExport(name="interval", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> interval;

    /**
     * @return The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
     * 
     */
    public Output</* @Nullable */ Integer> getInterval() {
        return this.interval;
    }
    /**
     * The access review history definition unique id.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The access review history definition unique id.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The number of times to repeat the access review. Required and must be positive if type is numbered.
     * 
     */
    @OutputExport(name="numberOfOccurrences", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> numberOfOccurrences;

    /**
     * @return The number of times to repeat the access review. Required and must be positive if type is numbered.
     * 
     */
    public Output</* @Nullable */ Integer> getNumberOfOccurrences() {
        return this.numberOfOccurrences;
    }
    /**
     * The identity id
     * 
     */
    @OutputExport(name="principalId", type=String.class, parameters={})
    private Output<String> principalId;

    /**
     * @return The identity id
     * 
     */
    public Output<String> getPrincipalId() {
        return this.principalId;
    }
    /**
     * The identity display name
     * 
     */
    @OutputExport(name="principalName", type=String.class, parameters={})
    private Output<String> principalName;

    /**
     * @return The identity display name
     * 
     */
    public Output<String> getPrincipalName() {
        return this.principalName;
    }
    /**
     * The identity type : user/servicePrincipal
     * 
     */
    @OutputExport(name="principalType", type=String.class, parameters={})
    private Output<String> principalType;

    /**
     * @return The identity type : user/servicePrincipal
     * 
     */
    public Output<String> getPrincipalType() {
        return this.principalType;
    }
    /**
     * Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.
     * 
     */
    @OutputExport(name="reviewHistoryPeriodEndDateTime", type=String.class, parameters={})
    private Output<String> reviewHistoryPeriodEndDateTime;

    /**
     * @return Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.
     * 
     */
    public Output<String> getReviewHistoryPeriodEndDateTime() {
        return this.reviewHistoryPeriodEndDateTime;
    }
    /**
     * Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.
     * 
     */
    @OutputExport(name="reviewHistoryPeriodStartDateTime", type=String.class, parameters={})
    private Output<String> reviewHistoryPeriodStartDateTime;

    /**
     * @return Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.
     * 
     */
    public Output<String> getReviewHistoryPeriodStartDateTime() {
        return this.reviewHistoryPeriodStartDateTime;
    }
    /**
     * A collection of scopes used when selecting review history data
     * 
     */
    @OutputExport(name="scopes", type=List.class, parameters={AccessReviewScopeResponse.class})
    private Output</* @Nullable */ List<AccessReviewScopeResponse>> scopes;

    /**
     * @return A collection of scopes used when selecting review history data
     * 
     */
    public Output</* @Nullable */ List<AccessReviewScopeResponse>> getScopes() {
        return this.scopes;
    }
    /**
     * The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
     * 
     */
    @OutputExport(name="startDate", type=String.class, parameters={})
    private Output</* @Nullable */ String> startDate;

    /**
     * @return The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
     * 
     */
    public Output</* @Nullable */ String> getStartDate() {
        return this.startDate;
    }
    /**
     * This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or error.
     * 
     */
    @OutputExport(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or error.
     * 
     */
    public Output<String> getStatus() {
        return this.status;
    }
    /**
     * The resource type.
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The resource type.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The user principal name(if valid)
     * 
     */
    @OutputExport(name="userPrincipalName", type=String.class, parameters={})
    private Output<String> userPrincipalName;

    /**
     * @return The user principal name(if valid)
     * 
     */
    public Output<String> getUserPrincipalName() {
        return this.userPrincipalName;
    }

    public interface BuilderApplicator {
        public void apply(@Nullable AccessReviewHistoryDefinitionByIdArgs.Builder a);
    }
    private static io.pulumi.azurenative.authorization.AccessReviewHistoryDefinitionByIdArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.azurenative.authorization.AccessReviewHistoryDefinitionByIdArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public AccessReviewHistoryDefinitionById(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccessReviewHistoryDefinitionById(String name) {
        this(name, AccessReviewHistoryDefinitionByIdArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccessReviewHistoryDefinitionById(String name, @Nullable AccessReviewHistoryDefinitionByIdArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccessReviewHistoryDefinitionById(String name, @Nullable AccessReviewHistoryDefinitionByIdArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:authorization:AccessReviewHistoryDefinitionById", name, args == null ? AccessReviewHistoryDefinitionByIdArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private AccessReviewHistoryDefinitionById(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:authorization:AccessReviewHistoryDefinitionById", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Output.of(Alias.builder().setType("azure-native:authorization/v20211116preview:AccessReviewHistoryDefinitionById").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccessReviewHistoryDefinitionById get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new AccessReviewHistoryDefinitionById(name, id, options);
    }
}
