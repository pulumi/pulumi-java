// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.outputs;

import io.pulumi.azurenative.compute.outputs.InstanceViewStatusResponse;
import io.pulumi.azurenative.compute.outputs.SubResourceWithColocationStatusResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetProximityPlacementGroupResult {
    private final List<SubResourceWithColocationStatusResponse> availabilitySets;
    private final @Nullable InstanceViewStatusResponse colocationStatus;
    private final String id;
    private final String location;
    private final String name;
    private final @Nullable String proximityPlacementGroupType;
    private final @Nullable Map<String,String> tags;
    private final String type;
    private final List<SubResourceWithColocationStatusResponse> virtualMachineScaleSets;
    private final List<SubResourceWithColocationStatusResponse> virtualMachines;

    @OutputCustomType.Constructor({"availabilitySets","colocationStatus","id","location","name","proximityPlacementGroupType","tags","type","virtualMachineScaleSets","virtualMachines"})
    private GetProximityPlacementGroupResult(
        List<SubResourceWithColocationStatusResponse> availabilitySets,
        @Nullable InstanceViewStatusResponse colocationStatus,
        String id,
        String location,
        String name,
        @Nullable String proximityPlacementGroupType,
        @Nullable Map<String,String> tags,
        String type,
        List<SubResourceWithColocationStatusResponse> virtualMachineScaleSets,
        List<SubResourceWithColocationStatusResponse> virtualMachines) {
        this.availabilitySets = Objects.requireNonNull(availabilitySets);
        this.colocationStatus = colocationStatus;
        this.id = Objects.requireNonNull(id);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.proximityPlacementGroupType = proximityPlacementGroupType;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.virtualMachineScaleSets = Objects.requireNonNull(virtualMachineScaleSets);
        this.virtualMachines = Objects.requireNonNull(virtualMachines);
    }

    public List<SubResourceWithColocationStatusResponse> getAvailabilitySets() {
        return this.availabilitySets;
    }
    public Optional<InstanceViewStatusResponse> getColocationStatus() {
        return Optional.ofNullable(this.colocationStatus);
    }
    public String getId() {
        return this.id;
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getProximityPlacementGroupType() {
        return Optional.ofNullable(this.proximityPlacementGroupType);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }
    public List<SubResourceWithColocationStatusResponse> getVirtualMachineScaleSets() {
        return this.virtualMachineScaleSets;
    }
    public List<SubResourceWithColocationStatusResponse> getVirtualMachines() {
        return this.virtualMachines;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProximityPlacementGroupResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<SubResourceWithColocationStatusResponse> availabilitySets;
        private @Nullable InstanceViewStatusResponse colocationStatus;
        private String id;
        private String location;
        private String name;
        private @Nullable String proximityPlacementGroupType;
        private @Nullable Map<String,String> tags;
        private String type;
        private List<SubResourceWithColocationStatusResponse> virtualMachineScaleSets;
        private List<SubResourceWithColocationStatusResponse> virtualMachines;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProximityPlacementGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilitySets = defaults.availabilitySets;
    	      this.colocationStatus = defaults.colocationStatus;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.proximityPlacementGroupType = defaults.proximityPlacementGroupType;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.virtualMachineScaleSets = defaults.virtualMachineScaleSets;
    	      this.virtualMachines = defaults.virtualMachines;
        }

        public Builder setAvailabilitySets(List<SubResourceWithColocationStatusResponse> availabilitySets) {
            this.availabilitySets = Objects.requireNonNull(availabilitySets);
            return this;
        }

        public Builder setColocationStatus(@Nullable InstanceViewStatusResponse colocationStatus) {
            this.colocationStatus = colocationStatus;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProximityPlacementGroupType(@Nullable String proximityPlacementGroupType) {
            this.proximityPlacementGroupType = proximityPlacementGroupType;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVirtualMachineScaleSets(List<SubResourceWithColocationStatusResponse> virtualMachineScaleSets) {
            this.virtualMachineScaleSets = Objects.requireNonNull(virtualMachineScaleSets);
            return this;
        }

        public Builder setVirtualMachines(List<SubResourceWithColocationStatusResponse> virtualMachines) {
            this.virtualMachines = Objects.requireNonNull(virtualMachines);
            return this;
        }

        public GetProximityPlacementGroupResult build() {
            return new GetProximityPlacementGroupResult(availabilitySets, colocationStatus, id, location, name, proximityPlacementGroupType, tags, type, virtualMachineScaleSets, virtualMachines);
        }
    }
}
