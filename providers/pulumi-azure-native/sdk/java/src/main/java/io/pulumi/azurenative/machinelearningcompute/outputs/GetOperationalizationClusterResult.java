// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningcompute.outputs;

import io.pulumi.azurenative.machinelearningcompute.outputs.AcsClusterPropertiesResponse;
import io.pulumi.azurenative.machinelearningcompute.outputs.AppInsightsPropertiesResponse;
import io.pulumi.azurenative.machinelearningcompute.outputs.ContainerRegistryPropertiesResponse;
import io.pulumi.azurenative.machinelearningcompute.outputs.ErrorResponseWrapperResponse;
import io.pulumi.azurenative.machinelearningcompute.outputs.GlobalServiceConfigurationResponse;
import io.pulumi.azurenative.machinelearningcompute.outputs.StorageAccountPropertiesResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetOperationalizationClusterResult {
    private final @Nullable AppInsightsPropertiesResponse appInsights;
    private final String clusterType;
    private final @Nullable ContainerRegistryPropertiesResponse containerRegistry;
    private final @Nullable AcsClusterPropertiesResponse containerService;
    private final String createdOn;
    private final @Nullable String description;
    private final @Nullable GlobalServiceConfigurationResponse globalServiceConfiguration;
    private final String id;
    private final String location;
    private final String modifiedOn;
    private final String name;
    private final List<ErrorResponseWrapperResponse> provisioningErrors;
    private final String provisioningState;
    private final @Nullable StorageAccountPropertiesResponse storageAccount;
    private final @Nullable Map<String,String> tags;
    private final String type;

    @OutputCustomType.Constructor({"appInsights","clusterType","containerRegistry","containerService","createdOn","description","globalServiceConfiguration","id","location","modifiedOn","name","provisioningErrors","provisioningState","storageAccount","tags","type"})
    private GetOperationalizationClusterResult(
        @Nullable AppInsightsPropertiesResponse appInsights,
        String clusterType,
        @Nullable ContainerRegistryPropertiesResponse containerRegistry,
        @Nullable AcsClusterPropertiesResponse containerService,
        String createdOn,
        @Nullable String description,
        @Nullable GlobalServiceConfigurationResponse globalServiceConfiguration,
        String id,
        String location,
        String modifiedOn,
        String name,
        List<ErrorResponseWrapperResponse> provisioningErrors,
        String provisioningState,
        @Nullable StorageAccountPropertiesResponse storageAccount,
        @Nullable Map<String,String> tags,
        String type) {
        this.appInsights = appInsights;
        this.clusterType = Objects.requireNonNull(clusterType);
        this.containerRegistry = containerRegistry;
        this.containerService = containerService;
        this.createdOn = Objects.requireNonNull(createdOn);
        this.description = description;
        this.globalServiceConfiguration = globalServiceConfiguration;
        this.id = Objects.requireNonNull(id);
        this.location = Objects.requireNonNull(location);
        this.modifiedOn = Objects.requireNonNull(modifiedOn);
        this.name = Objects.requireNonNull(name);
        this.provisioningErrors = Objects.requireNonNull(provisioningErrors);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.storageAccount = storageAccount;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<AppInsightsPropertiesResponse> getAppInsights() {
        return Optional.ofNullable(this.appInsights);
    }
    public String getClusterType() {
        return this.clusterType;
    }
    public Optional<ContainerRegistryPropertiesResponse> getContainerRegistry() {
        return Optional.ofNullable(this.containerRegistry);
    }
    public Optional<AcsClusterPropertiesResponse> getContainerService() {
        return Optional.ofNullable(this.containerService);
    }
    public String getCreatedOn() {
        return this.createdOn;
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public Optional<GlobalServiceConfigurationResponse> getGlobalServiceConfiguration() {
        return Optional.ofNullable(this.globalServiceConfiguration);
    }
    public String getId() {
        return this.id;
    }
    public String getLocation() {
        return this.location;
    }
    public String getModifiedOn() {
        return this.modifiedOn;
    }
    public String getName() {
        return this.name;
    }
    public List<ErrorResponseWrapperResponse> getProvisioningErrors() {
        return this.provisioningErrors;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<StorageAccountPropertiesResponse> getStorageAccount() {
        return Optional.ofNullable(this.storageAccount);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOperationalizationClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AppInsightsPropertiesResponse appInsights;
        private String clusterType;
        private @Nullable ContainerRegistryPropertiesResponse containerRegistry;
        private @Nullable AcsClusterPropertiesResponse containerService;
        private String createdOn;
        private @Nullable String description;
        private @Nullable GlobalServiceConfigurationResponse globalServiceConfiguration;
        private String id;
        private String location;
        private String modifiedOn;
        private String name;
        private List<ErrorResponseWrapperResponse> provisioningErrors;
        private String provisioningState;
        private @Nullable StorageAccountPropertiesResponse storageAccount;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOperationalizationClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appInsights = defaults.appInsights;
    	      this.clusterType = defaults.clusterType;
    	      this.containerRegistry = defaults.containerRegistry;
    	      this.containerService = defaults.containerService;
    	      this.createdOn = defaults.createdOn;
    	      this.description = defaults.description;
    	      this.globalServiceConfiguration = defaults.globalServiceConfiguration;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.name = defaults.name;
    	      this.provisioningErrors = defaults.provisioningErrors;
    	      this.provisioningState = defaults.provisioningState;
    	      this.storageAccount = defaults.storageAccount;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setAppInsights(@Nullable AppInsightsPropertiesResponse appInsights) {
            this.appInsights = appInsights;
            return this;
        }

        public Builder setClusterType(String clusterType) {
            this.clusterType = Objects.requireNonNull(clusterType);
            return this;
        }

        public Builder setContainerRegistry(@Nullable ContainerRegistryPropertiesResponse containerRegistry) {
            this.containerRegistry = containerRegistry;
            return this;
        }

        public Builder setContainerService(@Nullable AcsClusterPropertiesResponse containerService) {
            this.containerService = containerService;
            return this;
        }

        public Builder setCreatedOn(String createdOn) {
            this.createdOn = Objects.requireNonNull(createdOn);
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setGlobalServiceConfiguration(@Nullable GlobalServiceConfigurationResponse globalServiceConfiguration) {
            this.globalServiceConfiguration = globalServiceConfiguration;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setModifiedOn(String modifiedOn) {
            this.modifiedOn = Objects.requireNonNull(modifiedOn);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProvisioningErrors(List<ErrorResponseWrapperResponse> provisioningErrors) {
            this.provisioningErrors = Objects.requireNonNull(provisioningErrors);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setStorageAccount(@Nullable StorageAccountPropertiesResponse storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetOperationalizationClusterResult build() {
            return new GetOperationalizationClusterResult(appInsights, clusterType, containerRegistry, containerService, createdOn, description, globalServiceConfiguration, id, location, modifiedOn, name, provisioningErrors, provisioningState, storageAccount, tags, type);
        }
    }
}
