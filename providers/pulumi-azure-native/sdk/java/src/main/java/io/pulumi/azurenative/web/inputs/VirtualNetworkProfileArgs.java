// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specification for using a Virtual Network.
 * 
 */
public final class VirtualNetworkProfileArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualNetworkProfileArgs Empty = new VirtualNetworkProfileArgs();

    /**
     * Resource id of the Virtual Network.
     * 
     */
    @Import(name="id", required=true)
      private final Output<String> id;

    public Output<String> getId() {
        return this.id;
    }

    /**
     * Subnet within the Virtual Network.
     * 
     */
    @Import(name="subnet")
      private final @Nullable Output<String> subnet;

    public Output<String> getSubnet() {
        return this.subnet == null ? Output.empty() : this.subnet;
    }

    public VirtualNetworkProfileArgs(
        Output<String> id,
        @Nullable Output<String> subnet) {
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.subnet = subnet;
    }

    private VirtualNetworkProfileArgs() {
        this.id = Output.empty();
        this.subnet = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualNetworkProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> id;
        private @Nullable Output<String> subnet;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualNetworkProfileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.subnet = defaults.subnet;
        }

        public Builder id(Output<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder id(String id) {
            this.id = Output.of(Objects.requireNonNull(id));
            return this;
        }

        public Builder subnet(@Nullable Output<String> subnet) {
            this.subnet = subnet;
            return this;
        }

        public Builder subnet(@Nullable String subnet) {
            this.subnet = Output.ofNullable(subnet);
            return this;
        }
        public VirtualNetworkProfileArgs build() {
            return new VirtualNetworkProfileArgs(id, subnet);
        }
    }
}
