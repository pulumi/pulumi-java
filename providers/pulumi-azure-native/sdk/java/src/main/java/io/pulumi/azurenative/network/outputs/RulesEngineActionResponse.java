// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.ForwardingConfigurationResponse;
import io.pulumi.azurenative.network.outputs.HeaderActionResponse;
import io.pulumi.azurenative.network.outputs.RedirectConfigurationResponse;
import io.pulumi.core.Either;
import io.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RulesEngineActionResponse {
    /**
     * A list of header actions to apply from the request from AFD to the origin.
     * 
     */
    private final @Nullable List<HeaderActionResponse> requestHeaderActions;
    /**
     * A list of header actions to apply from the response from AFD to the client.
     * 
     */
    private final @Nullable List<HeaderActionResponse> responseHeaderActions;
    /**
     * Override the route configuration.
     * 
     */
    private final @Nullable Either<ForwardingConfigurationResponse,RedirectConfigurationResponse> routeConfigurationOverride;

    @CustomType.Constructor
    private RulesEngineActionResponse(
        @CustomType.Parameter("requestHeaderActions") @Nullable List<HeaderActionResponse> requestHeaderActions,
        @CustomType.Parameter("responseHeaderActions") @Nullable List<HeaderActionResponse> responseHeaderActions,
        @CustomType.Parameter("routeConfigurationOverride") @Nullable Either<ForwardingConfigurationResponse,RedirectConfigurationResponse> routeConfigurationOverride) {
        this.requestHeaderActions = requestHeaderActions;
        this.responseHeaderActions = responseHeaderActions;
        this.routeConfigurationOverride = routeConfigurationOverride;
    }

    /**
     * A list of header actions to apply from the request from AFD to the origin.
     * 
    */
    public List<HeaderActionResponse> getRequestHeaderActions() {
        return this.requestHeaderActions == null ? List.of() : this.requestHeaderActions;
    }
    /**
     * A list of header actions to apply from the response from AFD to the client.
     * 
    */
    public List<HeaderActionResponse> getResponseHeaderActions() {
        return this.responseHeaderActions == null ? List.of() : this.responseHeaderActions;
    }
    /**
     * Override the route configuration.
     * 
    */
    public Optional<Either<ForwardingConfigurationResponse,RedirectConfigurationResponse>> getRouteConfigurationOverride() {
        return Optional.ofNullable(this.routeConfigurationOverride);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulesEngineActionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<HeaderActionResponse> requestHeaderActions;
        private @Nullable List<HeaderActionResponse> responseHeaderActions;
        private @Nullable Either<ForwardingConfigurationResponse,RedirectConfigurationResponse> routeConfigurationOverride;

        public Builder() {
    	      // Empty
        }

        public Builder(RulesEngineActionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.requestHeaderActions = defaults.requestHeaderActions;
    	      this.responseHeaderActions = defaults.responseHeaderActions;
    	      this.routeConfigurationOverride = defaults.routeConfigurationOverride;
        }

        public Builder requestHeaderActions(@Nullable List<HeaderActionResponse> requestHeaderActions) {
            this.requestHeaderActions = requestHeaderActions;
            return this;
        }
        public Builder requestHeaderActions(HeaderActionResponse... requestHeaderActions) {
            return requestHeaderActions(List.of(requestHeaderActions));
        }
        public Builder responseHeaderActions(@Nullable List<HeaderActionResponse> responseHeaderActions) {
            this.responseHeaderActions = responseHeaderActions;
            return this;
        }
        public Builder responseHeaderActions(HeaderActionResponse... responseHeaderActions) {
            return responseHeaderActions(List.of(responseHeaderActions));
        }
        public Builder routeConfigurationOverride(@Nullable Either<ForwardingConfigurationResponse,RedirectConfigurationResponse> routeConfigurationOverride) {
            this.routeConfigurationOverride = routeConfigurationOverride;
            return this;
        }        public RulesEngineActionResponse build() {
            return new RulesEngineActionResponse(requestHeaderActions, responseHeaderActions, routeConfigurationOverride);
        }
    }
}
