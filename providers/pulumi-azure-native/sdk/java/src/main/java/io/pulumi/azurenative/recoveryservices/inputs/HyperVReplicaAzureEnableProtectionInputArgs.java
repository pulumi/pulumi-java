// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HyperVReplicaAzureEnableProtectionInputArgs extends io.pulumi.resources.ResourceArgs {

    public static final HyperVReplicaAzureEnableProtectionInputArgs Empty = new HyperVReplicaAzureEnableProtectionInputArgs();

    @InputImport(name="disksToInclude")
    private final @Nullable Input<List<String>> disksToInclude;

    public Input<List<String>> getDisksToInclude() {
        return this.disksToInclude == null ? Input.empty() : this.disksToInclude;
    }

    @InputImport(name="enableRdpOnTargetOption")
    private final @Nullable Input<String> enableRdpOnTargetOption;

    public Input<String> getEnableRdpOnTargetOption() {
        return this.enableRdpOnTargetOption == null ? Input.empty() : this.enableRdpOnTargetOption;
    }

    @InputImport(name="hvHostVmId")
    private final @Nullable Input<String> hvHostVmId;

    public Input<String> getHvHostVmId() {
        return this.hvHostVmId == null ? Input.empty() : this.hvHostVmId;
    }

    @InputImport(name="instanceType")
    private final @Nullable Input<String> instanceType;

    public Input<String> getInstanceType() {
        return this.instanceType == null ? Input.empty() : this.instanceType;
    }

    @InputImport(name="logStorageAccountId")
    private final @Nullable Input<String> logStorageAccountId;

    public Input<String> getLogStorageAccountId() {
        return this.logStorageAccountId == null ? Input.empty() : this.logStorageAccountId;
    }

    @InputImport(name="osType")
    private final @Nullable Input<String> osType;

    public Input<String> getOsType() {
        return this.osType == null ? Input.empty() : this.osType;
    }

    @InputImport(name="targetAvailabilitySetId")
    private final @Nullable Input<String> targetAvailabilitySetId;

    public Input<String> getTargetAvailabilitySetId() {
        return this.targetAvailabilitySetId == null ? Input.empty() : this.targetAvailabilitySetId;
    }

    @InputImport(name="targetAvailabilityZone")
    private final @Nullable Input<String> targetAvailabilityZone;

    public Input<String> getTargetAvailabilityZone() {
        return this.targetAvailabilityZone == null ? Input.empty() : this.targetAvailabilityZone;
    }

    @InputImport(name="targetAzureNetworkId")
    private final @Nullable Input<String> targetAzureNetworkId;

    public Input<String> getTargetAzureNetworkId() {
        return this.targetAzureNetworkId == null ? Input.empty() : this.targetAzureNetworkId;
    }

    @InputImport(name="targetAzureSubnetId")
    private final @Nullable Input<String> targetAzureSubnetId;

    public Input<String> getTargetAzureSubnetId() {
        return this.targetAzureSubnetId == null ? Input.empty() : this.targetAzureSubnetId;
    }

    @InputImport(name="targetAzureV1ResourceGroupId")
    private final @Nullable Input<String> targetAzureV1ResourceGroupId;

    public Input<String> getTargetAzureV1ResourceGroupId() {
        return this.targetAzureV1ResourceGroupId == null ? Input.empty() : this.targetAzureV1ResourceGroupId;
    }

    @InputImport(name="targetAzureV2ResourceGroupId")
    private final @Nullable Input<String> targetAzureV2ResourceGroupId;

    public Input<String> getTargetAzureV2ResourceGroupId() {
        return this.targetAzureV2ResourceGroupId == null ? Input.empty() : this.targetAzureV2ResourceGroupId;
    }

    @InputImport(name="targetAzureVmName")
    private final @Nullable Input<String> targetAzureVmName;

    public Input<String> getTargetAzureVmName() {
        return this.targetAzureVmName == null ? Input.empty() : this.targetAzureVmName;
    }

    @InputImport(name="targetProximityPlacementGroupId")
    private final @Nullable Input<String> targetProximityPlacementGroupId;

    public Input<String> getTargetProximityPlacementGroupId() {
        return this.targetProximityPlacementGroupId == null ? Input.empty() : this.targetProximityPlacementGroupId;
    }

    @InputImport(name="targetStorageAccountId")
    private final @Nullable Input<String> targetStorageAccountId;

    public Input<String> getTargetStorageAccountId() {
        return this.targetStorageAccountId == null ? Input.empty() : this.targetStorageAccountId;
    }

    @InputImport(name="targetVmSize")
    private final @Nullable Input<String> targetVmSize;

    public Input<String> getTargetVmSize() {
        return this.targetVmSize == null ? Input.empty() : this.targetVmSize;
    }

    @InputImport(name="useManagedDisks")
    private final @Nullable Input<String> useManagedDisks;

    public Input<String> getUseManagedDisks() {
        return this.useManagedDisks == null ? Input.empty() : this.useManagedDisks;
    }

    @InputImport(name="vhdId")
    private final @Nullable Input<String> vhdId;

    public Input<String> getVhdId() {
        return this.vhdId == null ? Input.empty() : this.vhdId;
    }

    @InputImport(name="vmName")
    private final @Nullable Input<String> vmName;

    public Input<String> getVmName() {
        return this.vmName == null ? Input.empty() : this.vmName;
    }

    public HyperVReplicaAzureEnableProtectionInputArgs(
        @Nullable Input<List<String>> disksToInclude,
        @Nullable Input<String> enableRdpOnTargetOption,
        @Nullable Input<String> hvHostVmId,
        @Nullable Input<String> instanceType,
        @Nullable Input<String> logStorageAccountId,
        @Nullable Input<String> osType,
        @Nullable Input<String> targetAvailabilitySetId,
        @Nullable Input<String> targetAvailabilityZone,
        @Nullable Input<String> targetAzureNetworkId,
        @Nullable Input<String> targetAzureSubnetId,
        @Nullable Input<String> targetAzureV1ResourceGroupId,
        @Nullable Input<String> targetAzureV2ResourceGroupId,
        @Nullable Input<String> targetAzureVmName,
        @Nullable Input<String> targetProximityPlacementGroupId,
        @Nullable Input<String> targetStorageAccountId,
        @Nullable Input<String> targetVmSize,
        @Nullable Input<String> useManagedDisks,
        @Nullable Input<String> vhdId,
        @Nullable Input<String> vmName) {
        this.disksToInclude = disksToInclude;
        this.enableRdpOnTargetOption = enableRdpOnTargetOption;
        this.hvHostVmId = hvHostVmId;
        this.instanceType = instanceType;
        this.logStorageAccountId = logStorageAccountId;
        this.osType = osType;
        this.targetAvailabilitySetId = targetAvailabilitySetId;
        this.targetAvailabilityZone = targetAvailabilityZone;
        this.targetAzureNetworkId = targetAzureNetworkId;
        this.targetAzureSubnetId = targetAzureSubnetId;
        this.targetAzureV1ResourceGroupId = targetAzureV1ResourceGroupId;
        this.targetAzureV2ResourceGroupId = targetAzureV2ResourceGroupId;
        this.targetAzureVmName = targetAzureVmName;
        this.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
        this.targetStorageAccountId = targetStorageAccountId;
        this.targetVmSize = targetVmSize;
        this.useManagedDisks = useManagedDisks;
        this.vhdId = vhdId;
        this.vmName = vmName;
    }

    private HyperVReplicaAzureEnableProtectionInputArgs() {
        this.disksToInclude = Input.empty();
        this.enableRdpOnTargetOption = Input.empty();
        this.hvHostVmId = Input.empty();
        this.instanceType = Input.empty();
        this.logStorageAccountId = Input.empty();
        this.osType = Input.empty();
        this.targetAvailabilitySetId = Input.empty();
        this.targetAvailabilityZone = Input.empty();
        this.targetAzureNetworkId = Input.empty();
        this.targetAzureSubnetId = Input.empty();
        this.targetAzureV1ResourceGroupId = Input.empty();
        this.targetAzureV2ResourceGroupId = Input.empty();
        this.targetAzureVmName = Input.empty();
        this.targetProximityPlacementGroupId = Input.empty();
        this.targetStorageAccountId = Input.empty();
        this.targetVmSize = Input.empty();
        this.useManagedDisks = Input.empty();
        this.vhdId = Input.empty();
        this.vmName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HyperVReplicaAzureEnableProtectionInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> disksToInclude;
        private @Nullable Input<String> enableRdpOnTargetOption;
        private @Nullable Input<String> hvHostVmId;
        private @Nullable Input<String> instanceType;
        private @Nullable Input<String> logStorageAccountId;
        private @Nullable Input<String> osType;
        private @Nullable Input<String> targetAvailabilitySetId;
        private @Nullable Input<String> targetAvailabilityZone;
        private @Nullable Input<String> targetAzureNetworkId;
        private @Nullable Input<String> targetAzureSubnetId;
        private @Nullable Input<String> targetAzureV1ResourceGroupId;
        private @Nullable Input<String> targetAzureV2ResourceGroupId;
        private @Nullable Input<String> targetAzureVmName;
        private @Nullable Input<String> targetProximityPlacementGroupId;
        private @Nullable Input<String> targetStorageAccountId;
        private @Nullable Input<String> targetVmSize;
        private @Nullable Input<String> useManagedDisks;
        private @Nullable Input<String> vhdId;
        private @Nullable Input<String> vmName;

        public Builder() {
    	      // Empty
        }

        public Builder(HyperVReplicaAzureEnableProtectionInputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disksToInclude = defaults.disksToInclude;
    	      this.enableRdpOnTargetOption = defaults.enableRdpOnTargetOption;
    	      this.hvHostVmId = defaults.hvHostVmId;
    	      this.instanceType = defaults.instanceType;
    	      this.logStorageAccountId = defaults.logStorageAccountId;
    	      this.osType = defaults.osType;
    	      this.targetAvailabilitySetId = defaults.targetAvailabilitySetId;
    	      this.targetAvailabilityZone = defaults.targetAvailabilityZone;
    	      this.targetAzureNetworkId = defaults.targetAzureNetworkId;
    	      this.targetAzureSubnetId = defaults.targetAzureSubnetId;
    	      this.targetAzureV1ResourceGroupId = defaults.targetAzureV1ResourceGroupId;
    	      this.targetAzureV2ResourceGroupId = defaults.targetAzureV2ResourceGroupId;
    	      this.targetAzureVmName = defaults.targetAzureVmName;
    	      this.targetProximityPlacementGroupId = defaults.targetProximityPlacementGroupId;
    	      this.targetStorageAccountId = defaults.targetStorageAccountId;
    	      this.targetVmSize = defaults.targetVmSize;
    	      this.useManagedDisks = defaults.useManagedDisks;
    	      this.vhdId = defaults.vhdId;
    	      this.vmName = defaults.vmName;
        }

        public Builder setDisksToInclude(@Nullable Input<List<String>> disksToInclude) {
            this.disksToInclude = disksToInclude;
            return this;
        }

        public Builder setDisksToInclude(@Nullable List<String> disksToInclude) {
            this.disksToInclude = Input.ofNullable(disksToInclude);
            return this;
        }

        public Builder setEnableRdpOnTargetOption(@Nullable Input<String> enableRdpOnTargetOption) {
            this.enableRdpOnTargetOption = enableRdpOnTargetOption;
            return this;
        }

        public Builder setEnableRdpOnTargetOption(@Nullable String enableRdpOnTargetOption) {
            this.enableRdpOnTargetOption = Input.ofNullable(enableRdpOnTargetOption);
            return this;
        }

        public Builder setHvHostVmId(@Nullable Input<String> hvHostVmId) {
            this.hvHostVmId = hvHostVmId;
            return this;
        }

        public Builder setHvHostVmId(@Nullable String hvHostVmId) {
            this.hvHostVmId = Input.ofNullable(hvHostVmId);
            return this;
        }

        public Builder setInstanceType(@Nullable Input<String> instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        public Builder setInstanceType(@Nullable String instanceType) {
            this.instanceType = Input.ofNullable(instanceType);
            return this;
        }

        public Builder setLogStorageAccountId(@Nullable Input<String> logStorageAccountId) {
            this.logStorageAccountId = logStorageAccountId;
            return this;
        }

        public Builder setLogStorageAccountId(@Nullable String logStorageAccountId) {
            this.logStorageAccountId = Input.ofNullable(logStorageAccountId);
            return this;
        }

        public Builder setOsType(@Nullable Input<String> osType) {
            this.osType = osType;
            return this;
        }

        public Builder setOsType(@Nullable String osType) {
            this.osType = Input.ofNullable(osType);
            return this;
        }

        public Builder setTargetAvailabilitySetId(@Nullable Input<String> targetAvailabilitySetId) {
            this.targetAvailabilitySetId = targetAvailabilitySetId;
            return this;
        }

        public Builder setTargetAvailabilitySetId(@Nullable String targetAvailabilitySetId) {
            this.targetAvailabilitySetId = Input.ofNullable(targetAvailabilitySetId);
            return this;
        }

        public Builder setTargetAvailabilityZone(@Nullable Input<String> targetAvailabilityZone) {
            this.targetAvailabilityZone = targetAvailabilityZone;
            return this;
        }

        public Builder setTargetAvailabilityZone(@Nullable String targetAvailabilityZone) {
            this.targetAvailabilityZone = Input.ofNullable(targetAvailabilityZone);
            return this;
        }

        public Builder setTargetAzureNetworkId(@Nullable Input<String> targetAzureNetworkId) {
            this.targetAzureNetworkId = targetAzureNetworkId;
            return this;
        }

        public Builder setTargetAzureNetworkId(@Nullable String targetAzureNetworkId) {
            this.targetAzureNetworkId = Input.ofNullable(targetAzureNetworkId);
            return this;
        }

        public Builder setTargetAzureSubnetId(@Nullable Input<String> targetAzureSubnetId) {
            this.targetAzureSubnetId = targetAzureSubnetId;
            return this;
        }

        public Builder setTargetAzureSubnetId(@Nullable String targetAzureSubnetId) {
            this.targetAzureSubnetId = Input.ofNullable(targetAzureSubnetId);
            return this;
        }

        public Builder setTargetAzureV1ResourceGroupId(@Nullable Input<String> targetAzureV1ResourceGroupId) {
            this.targetAzureV1ResourceGroupId = targetAzureV1ResourceGroupId;
            return this;
        }

        public Builder setTargetAzureV1ResourceGroupId(@Nullable String targetAzureV1ResourceGroupId) {
            this.targetAzureV1ResourceGroupId = Input.ofNullable(targetAzureV1ResourceGroupId);
            return this;
        }

        public Builder setTargetAzureV2ResourceGroupId(@Nullable Input<String> targetAzureV2ResourceGroupId) {
            this.targetAzureV2ResourceGroupId = targetAzureV2ResourceGroupId;
            return this;
        }

        public Builder setTargetAzureV2ResourceGroupId(@Nullable String targetAzureV2ResourceGroupId) {
            this.targetAzureV2ResourceGroupId = Input.ofNullable(targetAzureV2ResourceGroupId);
            return this;
        }

        public Builder setTargetAzureVmName(@Nullable Input<String> targetAzureVmName) {
            this.targetAzureVmName = targetAzureVmName;
            return this;
        }

        public Builder setTargetAzureVmName(@Nullable String targetAzureVmName) {
            this.targetAzureVmName = Input.ofNullable(targetAzureVmName);
            return this;
        }

        public Builder setTargetProximityPlacementGroupId(@Nullable Input<String> targetProximityPlacementGroupId) {
            this.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
            return this;
        }

        public Builder setTargetProximityPlacementGroupId(@Nullable String targetProximityPlacementGroupId) {
            this.targetProximityPlacementGroupId = Input.ofNullable(targetProximityPlacementGroupId);
            return this;
        }

        public Builder setTargetStorageAccountId(@Nullable Input<String> targetStorageAccountId) {
            this.targetStorageAccountId = targetStorageAccountId;
            return this;
        }

        public Builder setTargetStorageAccountId(@Nullable String targetStorageAccountId) {
            this.targetStorageAccountId = Input.ofNullable(targetStorageAccountId);
            return this;
        }

        public Builder setTargetVmSize(@Nullable Input<String> targetVmSize) {
            this.targetVmSize = targetVmSize;
            return this;
        }

        public Builder setTargetVmSize(@Nullable String targetVmSize) {
            this.targetVmSize = Input.ofNullable(targetVmSize);
            return this;
        }

        public Builder setUseManagedDisks(@Nullable Input<String> useManagedDisks) {
            this.useManagedDisks = useManagedDisks;
            return this;
        }

        public Builder setUseManagedDisks(@Nullable String useManagedDisks) {
            this.useManagedDisks = Input.ofNullable(useManagedDisks);
            return this;
        }

        public Builder setVhdId(@Nullable Input<String> vhdId) {
            this.vhdId = vhdId;
            return this;
        }

        public Builder setVhdId(@Nullable String vhdId) {
            this.vhdId = Input.ofNullable(vhdId);
            return this;
        }

        public Builder setVmName(@Nullable Input<String> vmName) {
            this.vmName = vmName;
            return this;
        }

        public Builder setVmName(@Nullable String vmName) {
            this.vmName = Input.ofNullable(vmName);
            return this;
        }

        public HyperVReplicaAzureEnableProtectionInputArgs build() {
            return new HyperVReplicaAzureEnableProtectionInputArgs(disksToInclude, enableRdpOnTargetOption, hvHostVmId, instanceType, logStorageAccountId, osType, targetAvailabilitySetId, targetAvailabilityZone, targetAzureNetworkId, targetAzureSubnetId, targetAzureV1ResourceGroupId, targetAzureV2ResourceGroupId, targetAzureVmName, targetProximityPlacementGroupId, targetStorageAccountId, targetVmSize, useManagedDisks, vhdId, vmName);
        }
    }
}
