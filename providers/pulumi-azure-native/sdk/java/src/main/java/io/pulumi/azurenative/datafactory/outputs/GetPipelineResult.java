// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.outputs;

import io.pulumi.azurenative.datafactory.outputs.AppendVariableActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.AzureDataExplorerCommandActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.AzureFunctionActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.AzureMLBatchExecutionActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.AzureMLExecutePipelineActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.AzureMLUpdateResourceActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.ControlActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.CopyActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.CustomActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.DataLakeAnalyticsUSQLActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.DatabricksNotebookActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.DatabricksSparkJarActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.DatabricksSparkPythonActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.DeleteActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.ExecuteDataFlowActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.ExecutePipelineActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.ExecuteSSISPackageActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.ExecuteWranglingDataflowActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.ExecutionActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.FailActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.FilterActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.ForEachActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.GetMetadataActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.HDInsightHiveActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.HDInsightMapReduceActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.HDInsightPigActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.HDInsightSparkActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.HDInsightStreamingActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.IfConditionActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.LookupActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.ParameterSpecificationResponse;
import io.pulumi.azurenative.datafactory.outputs.PipelinePolicyResponse;
import io.pulumi.azurenative.datafactory.outputs.PipelineResponseFolder;
import io.pulumi.azurenative.datafactory.outputs.SetVariableActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.SqlServerStoredProcedureActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.SwitchActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.UntilActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.ValidationActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.VariableSpecificationResponse;
import io.pulumi.azurenative.datafactory.outputs.WaitActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.WebActivityResponse;
import io.pulumi.azurenative.datafactory.outputs.WebHookActivityResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetPipelineResult {
    private final @Nullable List<Object> activities;
    private final @Nullable List<Object> annotations;
    private final @Nullable Integer concurrency;
    private final @Nullable String description;
    private final String etag;
    private final @Nullable PipelineResponseFolder folder;
    private final String id;
    private final String name;
    private final @Nullable Map<String,ParameterSpecificationResponse> parameters;
    private final @Nullable PipelinePolicyResponse policy;
    private final @Nullable Map<String,Object> runDimensions;
    private final String type;
    private final @Nullable Map<String,VariableSpecificationResponse> variables;

    @OutputCustomType.Constructor({"activities","annotations","concurrency","description","etag","folder","id","name","parameters","policy","runDimensions","type","variables"})
    private GetPipelineResult(
        @Nullable List<Object> activities,
        @Nullable List<Object> annotations,
        @Nullable Integer concurrency,
        @Nullable String description,
        String etag,
        @Nullable PipelineResponseFolder folder,
        String id,
        String name,
        @Nullable Map<String,ParameterSpecificationResponse> parameters,
        @Nullable PipelinePolicyResponse policy,
        @Nullable Map<String,Object> runDimensions,
        String type,
        @Nullable Map<String,VariableSpecificationResponse> variables) {
        this.activities = activities;
        this.annotations = annotations;
        this.concurrency = concurrency;
        this.description = description;
        this.etag = Objects.requireNonNull(etag);
        this.folder = folder;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.parameters = parameters;
        this.policy = policy;
        this.runDimensions = runDimensions;
        this.type = Objects.requireNonNull(type);
        this.variables = variables;
    }

    public List<Object> getActivities() {
        return this.activities == null ? List.of() : this.activities;
    }
    public List<Object> getAnnotations() {
        return this.annotations == null ? List.of() : this.annotations;
    }
    public Optional<Integer> getConcurrency() {
        return Optional.ofNullable(this.concurrency);
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public String getEtag() {
        return this.etag;
    }
    public Optional<PipelineResponseFolder> getFolder() {
        return Optional.ofNullable(this.folder);
    }
    public String getId() {
        return this.id;
    }
    public String getName() {
        return this.name;
    }
    public Map<String,ParameterSpecificationResponse> getParameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }
    public Optional<PipelinePolicyResponse> getPolicy() {
        return Optional.ofNullable(this.policy);
    }
    public Map<String,Object> getRunDimensions() {
        return this.runDimensions == null ? Map.of() : this.runDimensions;
    }
    public String getType() {
        return this.type;
    }
    public Map<String,VariableSpecificationResponse> getVariables() {
        return this.variables == null ? Map.of() : this.variables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelineResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<Object> activities;
        private @Nullable List<Object> annotations;
        private @Nullable Integer concurrency;
        private @Nullable String description;
        private String etag;
        private @Nullable PipelineResponseFolder folder;
        private String id;
        private String name;
        private @Nullable Map<String,ParameterSpecificationResponse> parameters;
        private @Nullable PipelinePolicyResponse policy;
        private @Nullable Map<String,Object> runDimensions;
        private String type;
        private @Nullable Map<String,VariableSpecificationResponse> variables;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPipelineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activities = defaults.activities;
    	      this.annotations = defaults.annotations;
    	      this.concurrency = defaults.concurrency;
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.folder = defaults.folder;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.policy = defaults.policy;
    	      this.runDimensions = defaults.runDimensions;
    	      this.type = defaults.type;
    	      this.variables = defaults.variables;
        }

        public Builder setActivities(@Nullable List<Object> activities) {
            this.activities = activities;
            return this;
        }

        public Builder setAnnotations(@Nullable List<Object> annotations) {
            this.annotations = annotations;
            return this;
        }

        public Builder setConcurrency(@Nullable Integer concurrency) {
            this.concurrency = concurrency;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setFolder(@Nullable PipelineResponseFolder folder) {
            this.folder = folder;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setParameters(@Nullable Map<String,ParameterSpecificationResponse> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setPolicy(@Nullable PipelinePolicyResponse policy) {
            this.policy = policy;
            return this;
        }

        public Builder setRunDimensions(@Nullable Map<String,Object> runDimensions) {
            this.runDimensions = runDimensions;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVariables(@Nullable Map<String,VariableSpecificationResponse> variables) {
            this.variables = variables;
            return this;
        }

        public GetPipelineResult build() {
            return new GetPipelineResult(activities, annotations, concurrency, description, etag, folder, id, name, parameters, policy, runDimensions, type, variables);
        }
    }
}
