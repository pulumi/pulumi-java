// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.ApplicationGatewayProbeHealthResponseMatchResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ApplicationGatewayProbeResponse {
    private final String etag;
    private final @Nullable String host;
    private final @Nullable String id;
    private final @Nullable Integer interval;
    private final @Nullable ApplicationGatewayProbeHealthResponseMatchResponse match;
    private final @Nullable Integer minServers;
    private final @Nullable String name;
    private final @Nullable String path;
    private final @Nullable Boolean pickHostNameFromBackendHttpSettings;
    private final @Nullable Integer port;
    private final @Nullable String protocol;
    private final String provisioningState;
    private final @Nullable Integer timeout;
    private final String type;
    private final @Nullable Integer unhealthyThreshold;

    @OutputCustomType.Constructor({"etag","host","id","interval","match","minServers","name","path","pickHostNameFromBackendHttpSettings","port","protocol","provisioningState","timeout","type","unhealthyThreshold"})
    private ApplicationGatewayProbeResponse(
        String etag,
        @Nullable String host,
        @Nullable String id,
        @Nullable Integer interval,
        @Nullable ApplicationGatewayProbeHealthResponseMatchResponse match,
        @Nullable Integer minServers,
        @Nullable String name,
        @Nullable String path,
        @Nullable Boolean pickHostNameFromBackendHttpSettings,
        @Nullable Integer port,
        @Nullable String protocol,
        String provisioningState,
        @Nullable Integer timeout,
        String type,
        @Nullable Integer unhealthyThreshold) {
        this.etag = Objects.requireNonNull(etag);
        this.host = host;
        this.id = id;
        this.interval = interval;
        this.match = match;
        this.minServers = minServers;
        this.name = name;
        this.path = path;
        this.pickHostNameFromBackendHttpSettings = pickHostNameFromBackendHttpSettings;
        this.port = port;
        this.protocol = protocol;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.timeout = timeout;
        this.type = Objects.requireNonNull(type);
        this.unhealthyThreshold = unhealthyThreshold;
    }

    public String getEtag() {
        return this.etag;
    }
    public Optional<String> getHost() {
        return Optional.ofNullable(this.host);
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Integer> getInterval() {
        return Optional.ofNullable(this.interval);
    }
    public Optional<ApplicationGatewayProbeHealthResponseMatchResponse> getMatch() {
        return Optional.ofNullable(this.match);
    }
    public Optional<Integer> getMinServers() {
        return Optional.ofNullable(this.minServers);
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> getPath() {
        return Optional.ofNullable(this.path);
    }
    public Optional<Boolean> getPickHostNameFromBackendHttpSettings() {
        return Optional.ofNullable(this.pickHostNameFromBackendHttpSettings);
    }
    public Optional<Integer> getPort() {
        return Optional.ofNullable(this.port);
    }
    public Optional<String> getProtocol() {
        return Optional.ofNullable(this.protocol);
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<Integer> getTimeout() {
        return Optional.ofNullable(this.timeout);
    }
    public String getType() {
        return this.type;
    }
    public Optional<Integer> getUnhealthyThreshold() {
        return Optional.ofNullable(this.unhealthyThreshold);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewayProbeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String etag;
        private @Nullable String host;
        private @Nullable String id;
        private @Nullable Integer interval;
        private @Nullable ApplicationGatewayProbeHealthResponseMatchResponse match;
        private @Nullable Integer minServers;
        private @Nullable String name;
        private @Nullable String path;
        private @Nullable Boolean pickHostNameFromBackendHttpSettings;
        private @Nullable Integer port;
        private @Nullable String protocol;
        private String provisioningState;
        private @Nullable Integer timeout;
        private String type;
        private @Nullable Integer unhealthyThreshold;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationGatewayProbeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.etag = defaults.etag;
    	      this.host = defaults.host;
    	      this.id = defaults.id;
    	      this.interval = defaults.interval;
    	      this.match = defaults.match;
    	      this.minServers = defaults.minServers;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.pickHostNameFromBackendHttpSettings = defaults.pickHostNameFromBackendHttpSettings;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.provisioningState = defaults.provisioningState;
    	      this.timeout = defaults.timeout;
    	      this.type = defaults.type;
    	      this.unhealthyThreshold = defaults.unhealthyThreshold;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setHost(@Nullable String host) {
            this.host = host;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setInterval(@Nullable Integer interval) {
            this.interval = interval;
            return this;
        }

        public Builder setMatch(@Nullable ApplicationGatewayProbeHealthResponseMatchResponse match) {
            this.match = match;
            return this;
        }

        public Builder setMinServers(@Nullable Integer minServers) {
            this.minServers = minServers;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setPath(@Nullable String path) {
            this.path = path;
            return this;
        }

        public Builder setPickHostNameFromBackendHttpSettings(@Nullable Boolean pickHostNameFromBackendHttpSettings) {
            this.pickHostNameFromBackendHttpSettings = pickHostNameFromBackendHttpSettings;
            return this;
        }

        public Builder setPort(@Nullable Integer port) {
            this.port = port;
            return this;
        }

        public Builder setProtocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setTimeout(@Nullable Integer timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUnhealthyThreshold(@Nullable Integer unhealthyThreshold) {
            this.unhealthyThreshold = unhealthyThreshold;
            return this;
        }

        public ApplicationGatewayProbeResponse build() {
            return new ApplicationGatewayProbeResponse(etag, host, id, interval, match, minServers, name, path, pickHostNameFromBackendHttpSettings, port, protocol, provisioningState, timeout, type, unhealthyThreshold);
        }
    }
}
