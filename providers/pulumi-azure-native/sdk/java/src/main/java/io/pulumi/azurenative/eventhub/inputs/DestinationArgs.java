// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.eventhub.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Capture storage details for capture description
 * 
 */
public final class DestinationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DestinationArgs Empty = new DestinationArgs();

    /**
     * Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
     * 
     */
    @InputImport(name="archiveNameFormat")
    private final @Nullable Input<String> archiveNameFormat;

    public Input<String> getArchiveNameFormat() {
        return this.archiveNameFormat == null ? Input.empty() : this.archiveNameFormat;
    }

    /**
     * Blob container Name
     * 
     */
    @InputImport(name="blobContainer")
    private final @Nullable Input<String> blobContainer;

    public Input<String> getBlobContainer() {
        return this.blobContainer == null ? Input.empty() : this.blobContainer;
    }

    /**
     * Name for capture destination
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Resource id of the storage account to be used to create the blobs
     * 
     */
    @InputImport(name="storageAccountResourceId")
    private final @Nullable Input<String> storageAccountResourceId;

    public Input<String> getStorageAccountResourceId() {
        return this.storageAccountResourceId == null ? Input.empty() : this.storageAccountResourceId;
    }

    public DestinationArgs(
        @Nullable Input<String> archiveNameFormat,
        @Nullable Input<String> blobContainer,
        @Nullable Input<String> name,
        @Nullable Input<String> storageAccountResourceId) {
        this.archiveNameFormat = archiveNameFormat;
        this.blobContainer = blobContainer;
        this.name = name;
        this.storageAccountResourceId = storageAccountResourceId;
    }

    private DestinationArgs() {
        this.archiveNameFormat = Input.empty();
        this.blobContainer = Input.empty();
        this.name = Input.empty();
        this.storageAccountResourceId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> archiveNameFormat;
        private @Nullable Input<String> blobContainer;
        private @Nullable Input<String> name;
        private @Nullable Input<String> storageAccountResourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(DestinationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archiveNameFormat = defaults.archiveNameFormat;
    	      this.blobContainer = defaults.blobContainer;
    	      this.name = defaults.name;
    	      this.storageAccountResourceId = defaults.storageAccountResourceId;
        }

        public Builder setArchiveNameFormat(@Nullable Input<String> archiveNameFormat) {
            this.archiveNameFormat = archiveNameFormat;
            return this;
        }

        public Builder setArchiveNameFormat(@Nullable String archiveNameFormat) {
            this.archiveNameFormat = Input.ofNullable(archiveNameFormat);
            return this;
        }

        public Builder setBlobContainer(@Nullable Input<String> blobContainer) {
            this.blobContainer = blobContainer;
            return this;
        }

        public Builder setBlobContainer(@Nullable String blobContainer) {
            this.blobContainer = Input.ofNullable(blobContainer);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setStorageAccountResourceId(@Nullable Input<String> storageAccountResourceId) {
            this.storageAccountResourceId = storageAccountResourceId;
            return this;
        }

        public Builder setStorageAccountResourceId(@Nullable String storageAccountResourceId) {
            this.storageAccountResourceId = Input.ofNullable(storageAccountResourceId);
            return this;
        }

        public DestinationArgs build() {
            return new DestinationArgs(archiveNameFormat, blobContainer, name, storageAccountResourceId);
        }
    }
}
