// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The KPI extract.
 * 
 */
public final class KpiExtractArgs extends io.pulumi.resources.ResourceArgs {

    public static final KpiExtractArgs Empty = new KpiExtractArgs();

    /**
     * The expression.
     * 
     */
    @Import(name="expression", required=true)
      private final Output<String> expression;

    public Output<String> getExpression() {
        return this.expression;
    }

    /**
     * KPI extract name.
     * 
     */
    @Import(name="extractName", required=true)
      private final Output<String> extractName;

    public Output<String> getExtractName() {
        return this.extractName;
    }

    public KpiExtractArgs(
        Output<String> expression,
        Output<String> extractName) {
        this.expression = Objects.requireNonNull(expression, "expected parameter 'expression' to be non-null");
        this.extractName = Objects.requireNonNull(extractName, "expected parameter 'extractName' to be non-null");
    }

    private KpiExtractArgs() {
        this.expression = Output.empty();
        this.extractName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KpiExtractArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> expression;
        private Output<String> extractName;

        public Builder() {
    	      // Empty
        }

        public Builder(KpiExtractArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expression = defaults.expression;
    	      this.extractName = defaults.extractName;
        }

        public Builder expression(Output<String> expression) {
            this.expression = Objects.requireNonNull(expression);
            return this;
        }

        public Builder expression(String expression) {
            this.expression = Output.of(Objects.requireNonNull(expression));
            return this;
        }

        public Builder extractName(Output<String> extractName) {
            this.extractName = Objects.requireNonNull(extractName);
            return this;
        }

        public Builder extractName(String extractName) {
            this.extractName = Output.of(Objects.requireNonNull(extractName));
            return this;
        }
        public KpiExtractArgs build() {
            return new KpiExtractArgs(expression, extractName);
        }
    }
}
