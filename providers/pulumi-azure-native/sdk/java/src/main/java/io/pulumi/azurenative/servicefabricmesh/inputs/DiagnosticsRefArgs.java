// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Reference to sinks in DiagnosticsDescription.
 * 
 */
public final class DiagnosticsRefArgs extends io.pulumi.resources.ResourceArgs {

    public static final DiagnosticsRefArgs Empty = new DiagnosticsRefArgs();

    /**
     * Status of whether or not sinks are enabled.
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled == null ? Codegen.empty() : this.enabled;
    }

    /**
     * List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
     * 
     */
    @Import(name="sinkRefs")
      private final @Nullable Output<List<String>> sinkRefs;

    public Output<List<String>> sinkRefs() {
        return this.sinkRefs == null ? Codegen.empty() : this.sinkRefs;
    }

    public DiagnosticsRefArgs(
        @Nullable Output<Boolean> enabled,
        @Nullable Output<List<String>> sinkRefs) {
        this.enabled = enabled;
        this.sinkRefs = sinkRefs;
    }

    private DiagnosticsRefArgs() {
        this.enabled = Codegen.empty();
        this.sinkRefs = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiagnosticsRefArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> enabled;
        private @Nullable Output<List<String>> sinkRefs;

        public Builder() {
    	      // Empty
        }

        public Builder(DiagnosticsRefArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.sinkRefs = defaults.sinkRefs;
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Codegen.ofNullable(enabled);
            return this;
        }
        public Builder sinkRefs(@Nullable Output<List<String>> sinkRefs) {
            this.sinkRefs = sinkRefs;
            return this;
        }
        public Builder sinkRefs(@Nullable List<String> sinkRefs) {
            this.sinkRefs = Codegen.ofNullable(sinkRefs);
            return this;
        }
        public Builder sinkRefs(String... sinkRefs) {
            return sinkRefs(List.of(sinkRefs));
        }        public DiagnosticsRefArgs build() {
            return new DiagnosticsRefArgs(enabled, sinkRefs);
        }
    }
}
