// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Base class for file properties.
 * 
 */
public final class ProjectFilePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProjectFilePropertiesArgs Empty = new ProjectFilePropertiesArgs();

    /**
     * Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.
     * 
     */
    @InputImport(name="extension")
        private final @Nullable Input<String> extension;

    public Input<String> getExtension() {
        return this.extension == null ? Input.empty() : this.extension;
    }

    /**
     * Relative path of this file resource. This property can be set when creating or updating the file resource.
     * 
     */
    @InputImport(name="filePath")
        private final @Nullable Input<String> filePath;

    public Input<String> getFilePath() {
        return this.filePath == null ? Input.empty() : this.filePath;
    }

    /**
     * File content type. This property can be modified to reflect the file content type.
     * 
     */
    @InputImport(name="mediaType")
        private final @Nullable Input<String> mediaType;

    public Input<String> getMediaType() {
        return this.mediaType == null ? Input.empty() : this.mediaType;
    }

    public ProjectFilePropertiesArgs(
        @Nullable Input<String> extension,
        @Nullable Input<String> filePath,
        @Nullable Input<String> mediaType) {
        this.extension = extension;
        this.filePath = filePath;
        this.mediaType = mediaType;
    }

    private ProjectFilePropertiesArgs() {
        this.extension = Input.empty();
        this.filePath = Input.empty();
        this.mediaType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectFilePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> extension;
        private @Nullable Input<String> filePath;
        private @Nullable Input<String> mediaType;

        public Builder() {
    	      // Empty
        }

        public Builder(ProjectFilePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extension = defaults.extension;
    	      this.filePath = defaults.filePath;
    	      this.mediaType = defaults.mediaType;
        }

        public Builder setExtension(@Nullable Input<String> extension) {
            this.extension = extension;
            return this;
        }

        public Builder setExtension(@Nullable String extension) {
            this.extension = Input.ofNullable(extension);
            return this;
        }

        public Builder setFilePath(@Nullable Input<String> filePath) {
            this.filePath = filePath;
            return this;
        }

        public Builder setFilePath(@Nullable String filePath) {
            this.filePath = Input.ofNullable(filePath);
            return this;
        }

        public Builder setMediaType(@Nullable Input<String> mediaType) {
            this.mediaType = mediaType;
            return this;
        }

        public Builder setMediaType(@Nullable String mediaType) {
            this.mediaType = Input.ofNullable(mediaType);
            return this;
        }
        public ProjectFilePropertiesArgs build() {
            return new ProjectFilePropertiesArgs(extension, filePath, mediaType);
        }
    }
}
