// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute;

import io.pulumi.azurenative.compute.enums.ProximityPlacementGroupType;
import io.pulumi.azurenative.compute.inputs.InstanceViewStatusArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProximityPlacementGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProximityPlacementGroupArgs Empty = new ProximityPlacementGroupArgs();

    /**
     * Describes colocation status of the Proximity Placement Group.
     * 
     */
    @Import(name="colocationStatus")
      private final @Nullable Output<InstanceViewStatusArgs> colocationStatus;

    public Output<InstanceViewStatusArgs> colocationStatus() {
        return this.colocationStatus == null ? Codegen.empty() : this.colocationStatus;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the proximity placement group.
     * 
     */
    @Import(name="proximityPlacementGroupName")
      private final @Nullable Output<String> proximityPlacementGroupName;

    public Output<String> proximityPlacementGroupName() {
        return this.proximityPlacementGroupName == null ? Codegen.empty() : this.proximityPlacementGroupName;
    }

    /**
     * Specifies the type of the proximity placement group. <br><br> Possible values are: <br><br> **Standard** : Co-locate resources within an Azure region or Availability Zone. <br><br> **Ultra** : For future use.
     * 
     */
    @Import(name="proximityPlacementGroupType")
      private final @Nullable Output<Either<String,ProximityPlacementGroupType>> proximityPlacementGroupType;

    public Output<Either<String,ProximityPlacementGroupType>> proximityPlacementGroupType() {
        return this.proximityPlacementGroupType == null ? Codegen.empty() : this.proximityPlacementGroupType;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public ProximityPlacementGroupArgs(
        @Nullable Output<InstanceViewStatusArgs> colocationStatus,
        @Nullable Output<String> location,
        @Nullable Output<String> proximityPlacementGroupName,
        @Nullable Output<Either<String,ProximityPlacementGroupType>> proximityPlacementGroupType,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.colocationStatus = colocationStatus;
        this.location = location;
        this.proximityPlacementGroupName = proximityPlacementGroupName;
        this.proximityPlacementGroupType = proximityPlacementGroupType;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private ProximityPlacementGroupArgs() {
        this.colocationStatus = Codegen.empty();
        this.location = Codegen.empty();
        this.proximityPlacementGroupName = Codegen.empty();
        this.proximityPlacementGroupType = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProximityPlacementGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<InstanceViewStatusArgs> colocationStatus;
        private @Nullable Output<String> location;
        private @Nullable Output<String> proximityPlacementGroupName;
        private @Nullable Output<Either<String,ProximityPlacementGroupType>> proximityPlacementGroupType;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ProximityPlacementGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.colocationStatus = defaults.colocationStatus;
    	      this.location = defaults.location;
    	      this.proximityPlacementGroupName = defaults.proximityPlacementGroupName;
    	      this.proximityPlacementGroupType = defaults.proximityPlacementGroupType;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder colocationStatus(@Nullable Output<InstanceViewStatusArgs> colocationStatus) {
            this.colocationStatus = colocationStatus;
            return this;
        }
        public Builder colocationStatus(@Nullable InstanceViewStatusArgs colocationStatus) {
            this.colocationStatus = Codegen.ofNullable(colocationStatus);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder proximityPlacementGroupName(@Nullable Output<String> proximityPlacementGroupName) {
            this.proximityPlacementGroupName = proximityPlacementGroupName;
            return this;
        }
        public Builder proximityPlacementGroupName(@Nullable String proximityPlacementGroupName) {
            this.proximityPlacementGroupName = Codegen.ofNullable(proximityPlacementGroupName);
            return this;
        }
        public Builder proximityPlacementGroupType(@Nullable Output<Either<String,ProximityPlacementGroupType>> proximityPlacementGroupType) {
            this.proximityPlacementGroupType = proximityPlacementGroupType;
            return this;
        }
        public Builder proximityPlacementGroupType(@Nullable Either<String,ProximityPlacementGroupType> proximityPlacementGroupType) {
            this.proximityPlacementGroupType = Codegen.ofNullable(proximityPlacementGroupType);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public ProximityPlacementGroupArgs build() {
            return new ProximityPlacementGroupArgs(colocationStatus, location, proximityPlacementGroupName, proximityPlacementGroupType, resourceGroupName, tags);
        }
    }
}
