// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.migrate.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class representing the servers solution summary.
 * 
 */
public final class ServersSolutionSummaryResponse extends io.pulumi.resources.InvokeArgs {

    public static final ServersSolutionSummaryResponse Empty = new ServersSolutionSummaryResponse();

    /**
     * Gets or sets the count of servers assessed.
     * 
     */
    @InputImport(name="assessedCount")
    private final @Nullable Integer assessedCount;

    public Optional<Integer> getAssessedCount() {
        return this.assessedCount == null ? Optional.empty() : Optional.ofNullable(this.assessedCount);
    }

    /**
     * Gets or sets the count of servers discovered.
     * 
     */
    @InputImport(name="discoveredCount")
    private final @Nullable Integer discoveredCount;

    public Optional<Integer> getDiscoveredCount() {
        return this.discoveredCount == null ? Optional.empty() : Optional.ofNullable(this.discoveredCount);
    }

    /**
     * Gets the Instance type.
     * Expected value is 'Servers'.
     * 
     */
    @InputImport(name="instanceType", required=true)
    private final String instanceType;

    public String getInstanceType() {
        return this.instanceType;
    }

    /**
     * Gets or sets the count of servers migrated.
     * 
     */
    @InputImport(name="migratedCount")
    private final @Nullable Integer migratedCount;

    public Optional<Integer> getMigratedCount() {
        return this.migratedCount == null ? Optional.empty() : Optional.ofNullable(this.migratedCount);
    }

    /**
     * Gets or sets the count of servers being replicated.
     * 
     */
    @InputImport(name="replicatingCount")
    private final @Nullable Integer replicatingCount;

    public Optional<Integer> getReplicatingCount() {
        return this.replicatingCount == null ? Optional.empty() : Optional.ofNullable(this.replicatingCount);
    }

    /**
     * Gets or sets the count of servers test migrated.
     * 
     */
    @InputImport(name="testMigratedCount")
    private final @Nullable Integer testMigratedCount;

    public Optional<Integer> getTestMigratedCount() {
        return this.testMigratedCount == null ? Optional.empty() : Optional.ofNullable(this.testMigratedCount);
    }

    public ServersSolutionSummaryResponse(
        @Nullable Integer assessedCount,
        @Nullable Integer discoveredCount,
        String instanceType,
        @Nullable Integer migratedCount,
        @Nullable Integer replicatingCount,
        @Nullable Integer testMigratedCount) {
        this.assessedCount = assessedCount;
        this.discoveredCount = discoveredCount;
        this.instanceType = Objects.requireNonNull(instanceType, "expected parameter 'instanceType' to be non-null");
        this.migratedCount = migratedCount;
        this.replicatingCount = replicatingCount;
        this.testMigratedCount = testMigratedCount;
    }

    private ServersSolutionSummaryResponse() {
        this.assessedCount = null;
        this.discoveredCount = null;
        this.instanceType = null;
        this.migratedCount = null;
        this.replicatingCount = null;
        this.testMigratedCount = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServersSolutionSummaryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer assessedCount;
        private @Nullable Integer discoveredCount;
        private String instanceType;
        private @Nullable Integer migratedCount;
        private @Nullable Integer replicatingCount;
        private @Nullable Integer testMigratedCount;

        public Builder() {
    	      // Empty
        }

        public Builder(ServersSolutionSummaryResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assessedCount = defaults.assessedCount;
    	      this.discoveredCount = defaults.discoveredCount;
    	      this.instanceType = defaults.instanceType;
    	      this.migratedCount = defaults.migratedCount;
    	      this.replicatingCount = defaults.replicatingCount;
    	      this.testMigratedCount = defaults.testMigratedCount;
        }

        public Builder setAssessedCount(@Nullable Integer assessedCount) {
            this.assessedCount = assessedCount;
            return this;
        }

        public Builder setDiscoveredCount(@Nullable Integer discoveredCount) {
            this.discoveredCount = discoveredCount;
            return this;
        }

        public Builder setInstanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }

        public Builder setMigratedCount(@Nullable Integer migratedCount) {
            this.migratedCount = migratedCount;
            return this;
        }

        public Builder setReplicatingCount(@Nullable Integer replicatingCount) {
            this.replicatingCount = replicatingCount;
            return this;
        }

        public Builder setTestMigratedCount(@Nullable Integer testMigratedCount) {
            this.testMigratedCount = testMigratedCount;
            return this;
        }

        public ServersSolutionSummaryResponse build() {
            return new ServersSolutionSummaryResponse(assessedCount, discoveredCount, instanceType, migratedCount, replicatingCount, testMigratedCount);
        }
    }
}
