// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.azurenative.datafactory.inputs.ActivityDependencyArgs;
import io.pulumi.azurenative.datafactory.inputs.ActivityPolicyArgs;
import io.pulumi.azurenative.datafactory.inputs.CustomActivityReferenceObjectArgs;
import io.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceArgs;
import io.pulumi.azurenative.datafactory.inputs.UserPropertyArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CustomActivityArgs extends io.pulumi.resources.ResourceArgs {

    public static final CustomActivityArgs Empty = new CustomActivityArgs();

    @InputImport(name="autoUserSpecification")
    private final @Nullable Input<Object> autoUserSpecification;

    public Input<Object> getAutoUserSpecification() {
        return this.autoUserSpecification == null ? Input.empty() : this.autoUserSpecification;
    }

    @InputImport(name="command", required=true)
    private final Input<Object> command;

    public Input<Object> getCommand() {
        return this.command;
    }

    @InputImport(name="dependsOn")
    private final @Nullable Input<List<ActivityDependencyArgs>> dependsOn;

    public Input<List<ActivityDependencyArgs>> getDependsOn() {
        return this.dependsOn == null ? Input.empty() : this.dependsOn;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="extendedProperties")
    private final @Nullable Input<Map<String,Object>> extendedProperties;

    public Input<Map<String,Object>> getExtendedProperties() {
        return this.extendedProperties == null ? Input.empty() : this.extendedProperties;
    }

    @InputImport(name="folderPath")
    private final @Nullable Input<Object> folderPath;

    public Input<Object> getFolderPath() {
        return this.folderPath == null ? Input.empty() : this.folderPath;
    }

    @InputImport(name="linkedServiceName")
    private final @Nullable Input<LinkedServiceReferenceArgs> linkedServiceName;

    public Input<LinkedServiceReferenceArgs> getLinkedServiceName() {
        return this.linkedServiceName == null ? Input.empty() : this.linkedServiceName;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="policy")
    private final @Nullable Input<ActivityPolicyArgs> policy;

    public Input<ActivityPolicyArgs> getPolicy() {
        return this.policy == null ? Input.empty() : this.policy;
    }

    @InputImport(name="referenceObjects")
    private final @Nullable Input<CustomActivityReferenceObjectArgs> referenceObjects;

    public Input<CustomActivityReferenceObjectArgs> getReferenceObjects() {
        return this.referenceObjects == null ? Input.empty() : this.referenceObjects;
    }

    @InputImport(name="resourceLinkedService")
    private final @Nullable Input<LinkedServiceReferenceArgs> resourceLinkedService;

    public Input<LinkedServiceReferenceArgs> getResourceLinkedService() {
        return this.resourceLinkedService == null ? Input.empty() : this.resourceLinkedService;
    }

    @InputImport(name="retentionTimeInDays")
    private final @Nullable Input<Object> retentionTimeInDays;

    public Input<Object> getRetentionTimeInDays() {
        return this.retentionTimeInDays == null ? Input.empty() : this.retentionTimeInDays;
    }

    @InputImport(name="type", required=true)
    private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    @InputImport(name="userProperties")
    private final @Nullable Input<List<UserPropertyArgs>> userProperties;

    public Input<List<UserPropertyArgs>> getUserProperties() {
        return this.userProperties == null ? Input.empty() : this.userProperties;
    }

    public CustomActivityArgs(
        @Nullable Input<Object> autoUserSpecification,
        Input<Object> command,
        @Nullable Input<List<ActivityDependencyArgs>> dependsOn,
        @Nullable Input<String> description,
        @Nullable Input<Map<String,Object>> extendedProperties,
        @Nullable Input<Object> folderPath,
        @Nullable Input<LinkedServiceReferenceArgs> linkedServiceName,
        Input<String> name,
        @Nullable Input<ActivityPolicyArgs> policy,
        @Nullable Input<CustomActivityReferenceObjectArgs> referenceObjects,
        @Nullable Input<LinkedServiceReferenceArgs> resourceLinkedService,
        @Nullable Input<Object> retentionTimeInDays,
        Input<String> type,
        @Nullable Input<List<UserPropertyArgs>> userProperties) {
        this.autoUserSpecification = autoUserSpecification;
        this.command = Objects.requireNonNull(command, "expected parameter 'command' to be non-null");
        this.dependsOn = dependsOn;
        this.description = description;
        this.extendedProperties = extendedProperties;
        this.folderPath = folderPath;
        this.linkedServiceName = linkedServiceName;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.policy = policy;
        this.referenceObjects = referenceObjects;
        this.resourceLinkedService = resourceLinkedService;
        this.retentionTimeInDays = retentionTimeInDays;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.userProperties = userProperties;
    }

    private CustomActivityArgs() {
        this.autoUserSpecification = Input.empty();
        this.command = Input.empty();
        this.dependsOn = Input.empty();
        this.description = Input.empty();
        this.extendedProperties = Input.empty();
        this.folderPath = Input.empty();
        this.linkedServiceName = Input.empty();
        this.name = Input.empty();
        this.policy = Input.empty();
        this.referenceObjects = Input.empty();
        this.resourceLinkedService = Input.empty();
        this.retentionTimeInDays = Input.empty();
        this.type = Input.empty();
        this.userProperties = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomActivityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Object> autoUserSpecification;
        private Input<Object> command;
        private @Nullable Input<List<ActivityDependencyArgs>> dependsOn;
        private @Nullable Input<String> description;
        private @Nullable Input<Map<String,Object>> extendedProperties;
        private @Nullable Input<Object> folderPath;
        private @Nullable Input<LinkedServiceReferenceArgs> linkedServiceName;
        private Input<String> name;
        private @Nullable Input<ActivityPolicyArgs> policy;
        private @Nullable Input<CustomActivityReferenceObjectArgs> referenceObjects;
        private @Nullable Input<LinkedServiceReferenceArgs> resourceLinkedService;
        private @Nullable Input<Object> retentionTimeInDays;
        private Input<String> type;
        private @Nullable Input<List<UserPropertyArgs>> userProperties;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomActivityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoUserSpecification = defaults.autoUserSpecification;
    	      this.command = defaults.command;
    	      this.dependsOn = defaults.dependsOn;
    	      this.description = defaults.description;
    	      this.extendedProperties = defaults.extendedProperties;
    	      this.folderPath = defaults.folderPath;
    	      this.linkedServiceName = defaults.linkedServiceName;
    	      this.name = defaults.name;
    	      this.policy = defaults.policy;
    	      this.referenceObjects = defaults.referenceObjects;
    	      this.resourceLinkedService = defaults.resourceLinkedService;
    	      this.retentionTimeInDays = defaults.retentionTimeInDays;
    	      this.type = defaults.type;
    	      this.userProperties = defaults.userProperties;
        }

        public Builder setAutoUserSpecification(@Nullable Input<Object> autoUserSpecification) {
            this.autoUserSpecification = autoUserSpecification;
            return this;
        }

        public Builder setAutoUserSpecification(@Nullable Object autoUserSpecification) {
            this.autoUserSpecification = Input.ofNullable(autoUserSpecification);
            return this;
        }

        public Builder setCommand(Input<Object> command) {
            this.command = Objects.requireNonNull(command);
            return this;
        }

        public Builder setCommand(Object command) {
            this.command = Input.of(Objects.requireNonNull(command));
            return this;
        }

        public Builder setDependsOn(@Nullable Input<List<ActivityDependencyArgs>> dependsOn) {
            this.dependsOn = dependsOn;
            return this;
        }

        public Builder setDependsOn(@Nullable List<ActivityDependencyArgs> dependsOn) {
            this.dependsOn = Input.ofNullable(dependsOn);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setExtendedProperties(@Nullable Input<Map<String,Object>> extendedProperties) {
            this.extendedProperties = extendedProperties;
            return this;
        }

        public Builder setExtendedProperties(@Nullable Map<String,Object> extendedProperties) {
            this.extendedProperties = Input.ofNullable(extendedProperties);
            return this;
        }

        public Builder setFolderPath(@Nullable Input<Object> folderPath) {
            this.folderPath = folderPath;
            return this;
        }

        public Builder setFolderPath(@Nullable Object folderPath) {
            this.folderPath = Input.ofNullable(folderPath);
            return this;
        }

        public Builder setLinkedServiceName(@Nullable Input<LinkedServiceReferenceArgs> linkedServiceName) {
            this.linkedServiceName = linkedServiceName;
            return this;
        }

        public Builder setLinkedServiceName(@Nullable LinkedServiceReferenceArgs linkedServiceName) {
            this.linkedServiceName = Input.ofNullable(linkedServiceName);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setPolicy(@Nullable Input<ActivityPolicyArgs> policy) {
            this.policy = policy;
            return this;
        }

        public Builder setPolicy(@Nullable ActivityPolicyArgs policy) {
            this.policy = Input.ofNullable(policy);
            return this;
        }

        public Builder setReferenceObjects(@Nullable Input<CustomActivityReferenceObjectArgs> referenceObjects) {
            this.referenceObjects = referenceObjects;
            return this;
        }

        public Builder setReferenceObjects(@Nullable CustomActivityReferenceObjectArgs referenceObjects) {
            this.referenceObjects = Input.ofNullable(referenceObjects);
            return this;
        }

        public Builder setResourceLinkedService(@Nullable Input<LinkedServiceReferenceArgs> resourceLinkedService) {
            this.resourceLinkedService = resourceLinkedService;
            return this;
        }

        public Builder setResourceLinkedService(@Nullable LinkedServiceReferenceArgs resourceLinkedService) {
            this.resourceLinkedService = Input.ofNullable(resourceLinkedService);
            return this;
        }

        public Builder setRetentionTimeInDays(@Nullable Input<Object> retentionTimeInDays) {
            this.retentionTimeInDays = retentionTimeInDays;
            return this;
        }

        public Builder setRetentionTimeInDays(@Nullable Object retentionTimeInDays) {
            this.retentionTimeInDays = Input.ofNullable(retentionTimeInDays);
            return this;
        }

        public Builder setType(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public Builder setUserProperties(@Nullable Input<List<UserPropertyArgs>> userProperties) {
            this.userProperties = userProperties;
            return this;
        }

        public Builder setUserProperties(@Nullable List<UserPropertyArgs> userProperties) {
            this.userProperties = Input.ofNullable(userProperties);
            return this;
        }

        public CustomActivityArgs build() {
            return new CustomActivityArgs(autoUserSpecification, command, dependsOn, description, extendedProperties, folderPath, linkedServiceName, name, policy, referenceObjects, resourceLinkedService, retentionTimeInDays, type, userProperties);
        }
    }
}
