// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.outputs;

import io.pulumi.azurenative.machinelearningservices.outputs.EncryptionPropertyResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.IdentityResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.NotebookResourceInfoResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.PrivateEndpointConnectionResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.ServiceManagedResourcesSettingsResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.SharedPrivateLinkResourceResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.SkuResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.SystemDataResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetWorkspaceResult {
    /**
     * The flag to indicate whether to allow public access when behind VNet.
     * 
     */
    private final @Nullable Boolean allowPublicAccessWhenBehindVnet;
    /**
     * ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    private final @Nullable String applicationInsights;
    /**
     * ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    private final @Nullable String containerRegistry;
    /**
     * The description of this workspace.
     * 
     */
    private final @Nullable String description;
    /**
     * Url for the discovery service to identify regional endpoints for machine learning experimentation services
     * 
     */
    private final @Nullable String discoveryUrl;
    /**
     * The encryption settings of Azure ML workspace.
     * 
     */
    private final @Nullable EncryptionPropertyResponse encryption;
    /**
     * The friendly name for this workspace. This name in mutable
     * 
     */
    private final @Nullable String friendlyName;
    /**
     * The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
     * 
     */
    private final @Nullable Boolean hbiWorkspace;
    /**
     * Specifies the resource ID.
     * 
     */
    private final String id;
    /**
     * The identity of the resource.
     * 
     */
    private final @Nullable IdentityResponse identity;
    /**
     * The compute name for image build
     * 
     */
    private final @Nullable String imageBuildCompute;
    /**
     * ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    private final @Nullable String keyVault;
    /**
     * Specifies the location of the resource.
     * 
     */
    private final @Nullable String location;
    /**
     * Specifies the name of the resource.
     * 
     */
    private final String name;
    /**
     * The notebook info of Azure ML workspace.
     * 
     */
    private final NotebookResourceInfoResponse notebookInfo;
    /**
     * The user assigned identity resource id that represents the workspace identity.
     * 
     */
    private final @Nullable String primaryUserAssignedIdentity;
    /**
     * The list of private endpoint connections in the workspace.
     * 
     */
    private final List<PrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * Count of private connections in the workspace
     * 
     */
    private final Integer privateLinkCount;
    /**
     * The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.
     * 
     */
    private final String provisioningState;
    /**
     * The service managed resource settings.
     * 
     */
    private final @Nullable ServiceManagedResourcesSettingsResponse serviceManagedResourcesSettings;
    /**
     * The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace
     * 
     */
    private final String serviceProvisionedResourceGroup;
    /**
     * The list of shared private link resources in this workspace.
     * 
     */
    private final @Nullable List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources;
    /**
     * The sku of the workspace.
     * 
     */
    private final @Nullable SkuResponse sku;
    /**
     * ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    private final @Nullable String storageAccount;
    /**
     * Read only system data
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * Contains resource tags defined as key/value pairs.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Specifies the type of the resource.
     * 
     */
    private final String type;
    /**
     * The immutable id associated with this workspace.
     * 
     */
    private final String workspaceId;

    @OutputCustomType.Constructor({"allowPublicAccessWhenBehindVnet","applicationInsights","containerRegistry","description","discoveryUrl","encryption","friendlyName","hbiWorkspace","id","identity","imageBuildCompute","keyVault","location","name","notebookInfo","primaryUserAssignedIdentity","privateEndpointConnections","privateLinkCount","provisioningState","serviceManagedResourcesSettings","serviceProvisionedResourceGroup","sharedPrivateLinkResources","sku","storageAccount","systemData","tags","type","workspaceId"})
    private GetWorkspaceResult(
        @Nullable Boolean allowPublicAccessWhenBehindVnet,
        @Nullable String applicationInsights,
        @Nullable String containerRegistry,
        @Nullable String description,
        @Nullable String discoveryUrl,
        @Nullable EncryptionPropertyResponse encryption,
        @Nullable String friendlyName,
        @Nullable Boolean hbiWorkspace,
        String id,
        @Nullable IdentityResponse identity,
        @Nullable String imageBuildCompute,
        @Nullable String keyVault,
        @Nullable String location,
        String name,
        NotebookResourceInfoResponse notebookInfo,
        @Nullable String primaryUserAssignedIdentity,
        List<PrivateEndpointConnectionResponse> privateEndpointConnections,
        Integer privateLinkCount,
        String provisioningState,
        @Nullable ServiceManagedResourcesSettingsResponse serviceManagedResourcesSettings,
        String serviceProvisionedResourceGroup,
        @Nullable List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources,
        @Nullable SkuResponse sku,
        @Nullable String storageAccount,
        SystemDataResponse systemData,
        @Nullable Map<String,String> tags,
        String type,
        String workspaceId) {
        this.allowPublicAccessWhenBehindVnet = allowPublicAccessWhenBehindVnet;
        this.applicationInsights = applicationInsights;
        this.containerRegistry = containerRegistry;
        this.description = description;
        this.discoveryUrl = discoveryUrl;
        this.encryption = encryption;
        this.friendlyName = friendlyName;
        this.hbiWorkspace = hbiWorkspace;
        this.id = Objects.requireNonNull(id);
        this.identity = identity;
        this.imageBuildCompute = imageBuildCompute;
        this.keyVault = keyVault;
        this.location = location;
        this.name = Objects.requireNonNull(name);
        this.notebookInfo = Objects.requireNonNull(notebookInfo);
        this.primaryUserAssignedIdentity = primaryUserAssignedIdentity;
        this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
        this.privateLinkCount = Objects.requireNonNull(privateLinkCount);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.serviceManagedResourcesSettings = serviceManagedResourcesSettings;
        this.serviceProvisionedResourceGroup = Objects.requireNonNull(serviceProvisionedResourceGroup);
        this.sharedPrivateLinkResources = sharedPrivateLinkResources;
        this.sku = sku;
        this.storageAccount = storageAccount;
        this.systemData = Objects.requireNonNull(systemData);
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.workspaceId = Objects.requireNonNull(workspaceId);
    }

    /**
     * The flag to indicate whether to allow public access when behind VNet.
     * 
    */
    public Optional<Boolean> getAllowPublicAccessWhenBehindVnet() {
        return Optional.ofNullable(this.allowPublicAccessWhenBehindVnet);
    }
    /**
     * ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created
     * 
    */
    public Optional<String> getApplicationInsights() {
        return Optional.ofNullable(this.applicationInsights);
    }
    /**
     * ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created
     * 
    */
    public Optional<String> getContainerRegistry() {
        return Optional.ofNullable(this.containerRegistry);
    }
    /**
     * The description of this workspace.
     * 
    */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * Url for the discovery service to identify regional endpoints for machine learning experimentation services
     * 
    */
    public Optional<String> getDiscoveryUrl() {
        return Optional.ofNullable(this.discoveryUrl);
    }
    /**
     * The encryption settings of Azure ML workspace.
     * 
    */
    public Optional<EncryptionPropertyResponse> getEncryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * The friendly name for this workspace. This name in mutable
     * 
    */
    public Optional<String> getFriendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }
    /**
     * The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
     * 
    */
    public Optional<Boolean> getHbiWorkspace() {
        return Optional.ofNullable(this.hbiWorkspace);
    }
    /**
     * Specifies the resource ID.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * The identity of the resource.
     * 
    */
    public Optional<IdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * The compute name for image build
     * 
    */
    public Optional<String> getImageBuildCompute() {
        return Optional.ofNullable(this.imageBuildCompute);
    }
    /**
     * ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
     * 
    */
    public Optional<String> getKeyVault() {
        return Optional.ofNullable(this.keyVault);
    }
    /**
     * Specifies the location of the resource.
     * 
    */
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    /**
     * Specifies the name of the resource.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The notebook info of Azure ML workspace.
     * 
    */
    public NotebookResourceInfoResponse getNotebookInfo() {
        return this.notebookInfo;
    }
    /**
     * The user assigned identity resource id that represents the workspace identity.
     * 
    */
    public Optional<String> getPrimaryUserAssignedIdentity() {
        return Optional.ofNullable(this.primaryUserAssignedIdentity);
    }
    /**
     * The list of private endpoint connections in the workspace.
     * 
    */
    public List<PrivateEndpointConnectionResponse> getPrivateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * Count of private connections in the workspace
     * 
    */
    public Integer getPrivateLinkCount() {
        return this.privateLinkCount;
    }
    /**
     * The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The service managed resource settings.
     * 
    */
    public Optional<ServiceManagedResourcesSettingsResponse> getServiceManagedResourcesSettings() {
        return Optional.ofNullable(this.serviceManagedResourcesSettings);
    }
    /**
     * The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace
     * 
    */
    public String getServiceProvisionedResourceGroup() {
        return this.serviceProvisionedResourceGroup;
    }
    /**
     * The list of shared private link resources in this workspace.
     * 
    */
    public List<SharedPrivateLinkResourceResponse> getSharedPrivateLinkResources() {
        return this.sharedPrivateLinkResources == null ? List.of() : this.sharedPrivateLinkResources;
    }
    /**
     * The sku of the workspace.
     * 
    */
    public Optional<SkuResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
     * 
    */
    public Optional<String> getStorageAccount() {
        return Optional.ofNullable(this.storageAccount);
    }
    /**
     * Read only system data
     * 
    */
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    /**
     * Contains resource tags defined as key/value pairs.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Specifies the type of the resource.
     * 
    */
    public String getType() {
        return this.type;
    }
    /**
     * The immutable id associated with this workspace.
     * 
    */
    public String getWorkspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allowPublicAccessWhenBehindVnet;
        private @Nullable String applicationInsights;
        private @Nullable String containerRegistry;
        private @Nullable String description;
        private @Nullable String discoveryUrl;
        private @Nullable EncryptionPropertyResponse encryption;
        private @Nullable String friendlyName;
        private @Nullable Boolean hbiWorkspace;
        private String id;
        private @Nullable IdentityResponse identity;
        private @Nullable String imageBuildCompute;
        private @Nullable String keyVault;
        private @Nullable String location;
        private String name;
        private NotebookResourceInfoResponse notebookInfo;
        private @Nullable String primaryUserAssignedIdentity;
        private List<PrivateEndpointConnectionResponse> privateEndpointConnections;
        private Integer privateLinkCount;
        private String provisioningState;
        private @Nullable ServiceManagedResourcesSettingsResponse serviceManagedResourcesSettings;
        private String serviceProvisionedResourceGroup;
        private @Nullable List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources;
        private @Nullable SkuResponse sku;
        private @Nullable String storageAccount;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private String workspaceId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowPublicAccessWhenBehindVnet = defaults.allowPublicAccessWhenBehindVnet;
    	      this.applicationInsights = defaults.applicationInsights;
    	      this.containerRegistry = defaults.containerRegistry;
    	      this.description = defaults.description;
    	      this.discoveryUrl = defaults.discoveryUrl;
    	      this.encryption = defaults.encryption;
    	      this.friendlyName = defaults.friendlyName;
    	      this.hbiWorkspace = defaults.hbiWorkspace;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.imageBuildCompute = defaults.imageBuildCompute;
    	      this.keyVault = defaults.keyVault;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.notebookInfo = defaults.notebookInfo;
    	      this.primaryUserAssignedIdentity = defaults.primaryUserAssignedIdentity;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.privateLinkCount = defaults.privateLinkCount;
    	      this.provisioningState = defaults.provisioningState;
    	      this.serviceManagedResourcesSettings = defaults.serviceManagedResourcesSettings;
    	      this.serviceProvisionedResourceGroup = defaults.serviceProvisionedResourceGroup;
    	      this.sharedPrivateLinkResources = defaults.sharedPrivateLinkResources;
    	      this.sku = defaults.sku;
    	      this.storageAccount = defaults.storageAccount;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.workspaceId = defaults.workspaceId;
        }

        public Builder setAllowPublicAccessWhenBehindVnet(@Nullable Boolean allowPublicAccessWhenBehindVnet) {
            this.allowPublicAccessWhenBehindVnet = allowPublicAccessWhenBehindVnet;
            return this;
        }

        public Builder setApplicationInsights(@Nullable String applicationInsights) {
            this.applicationInsights = applicationInsights;
            return this;
        }

        public Builder setContainerRegistry(@Nullable String containerRegistry) {
            this.containerRegistry = containerRegistry;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setDiscoveryUrl(@Nullable String discoveryUrl) {
            this.discoveryUrl = discoveryUrl;
            return this;
        }

        public Builder setEncryption(@Nullable EncryptionPropertyResponse encryption) {
            this.encryption = encryption;
            return this;
        }

        public Builder setFriendlyName(@Nullable String friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }

        public Builder setHbiWorkspace(@Nullable Boolean hbiWorkspace) {
            this.hbiWorkspace = hbiWorkspace;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable IdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setImageBuildCompute(@Nullable String imageBuildCompute) {
            this.imageBuildCompute = imageBuildCompute;
            return this;
        }

        public Builder setKeyVault(@Nullable String keyVault) {
            this.keyVault = keyVault;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNotebookInfo(NotebookResourceInfoResponse notebookInfo) {
            this.notebookInfo = Objects.requireNonNull(notebookInfo);
            return this;
        }

        public Builder setPrimaryUserAssignedIdentity(@Nullable String primaryUserAssignedIdentity) {
            this.primaryUserAssignedIdentity = primaryUserAssignedIdentity;
            return this;
        }

        public Builder setPrivateEndpointConnections(List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }

        public Builder setPrivateLinkCount(Integer privateLinkCount) {
            this.privateLinkCount = Objects.requireNonNull(privateLinkCount);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setServiceManagedResourcesSettings(@Nullable ServiceManagedResourcesSettingsResponse serviceManagedResourcesSettings) {
            this.serviceManagedResourcesSettings = serviceManagedResourcesSettings;
            return this;
        }

        public Builder setServiceProvisionedResourceGroup(String serviceProvisionedResourceGroup) {
            this.serviceProvisionedResourceGroup = Objects.requireNonNull(serviceProvisionedResourceGroup);
            return this;
        }

        public Builder setSharedPrivateLinkResources(@Nullable List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources) {
            this.sharedPrivateLinkResources = sharedPrivateLinkResources;
            return this;
        }

        public Builder setSku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }

        public Builder setStorageAccount(@Nullable String storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setWorkspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }
        public GetWorkspaceResult build() {
            return new GetWorkspaceResult(allowPublicAccessWhenBehindVnet, applicationInsights, containerRegistry, description, discoveryUrl, encryption, friendlyName, hbiWorkspace, id, identity, imageBuildCompute, keyVault, location, name, notebookInfo, primaryUserAssignedIdentity, privateEndpointConnections, privateLinkCount, provisioningState, serviceManagedResourcesSettings, serviceProvisionedResourceGroup, sharedPrivateLinkResources, sku, storageAccount, systemData, tags, type, workspaceId);
        }
    }
}
