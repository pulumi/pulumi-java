// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hdinsight.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class DiskEncryptionPropertiesResponse {
    private final @Nullable String encryptionAlgorithm;
    private final @Nullable Boolean encryptionAtHost;
    private final @Nullable String keyName;
    private final @Nullable String keyVersion;
    private final @Nullable String msiResourceId;
    private final @Nullable String vaultUri;

    @OutputCustomType.Constructor({"encryptionAlgorithm","encryptionAtHost","keyName","keyVersion","msiResourceId","vaultUri"})
    private DiskEncryptionPropertiesResponse(
        @Nullable String encryptionAlgorithm,
        @Nullable Boolean encryptionAtHost,
        @Nullable String keyName,
        @Nullable String keyVersion,
        @Nullable String msiResourceId,
        @Nullable String vaultUri) {
        this.encryptionAlgorithm = encryptionAlgorithm;
        this.encryptionAtHost = encryptionAtHost;
        this.keyName = keyName;
        this.keyVersion = keyVersion;
        this.msiResourceId = msiResourceId;
        this.vaultUri = vaultUri;
    }

    public Optional<String> getEncryptionAlgorithm() {
        return Optional.ofNullable(this.encryptionAlgorithm);
    }
    public Optional<Boolean> getEncryptionAtHost() {
        return Optional.ofNullable(this.encryptionAtHost);
    }
    public Optional<String> getKeyName() {
        return Optional.ofNullable(this.keyName);
    }
    public Optional<String> getKeyVersion() {
        return Optional.ofNullable(this.keyVersion);
    }
    public Optional<String> getMsiResourceId() {
        return Optional.ofNullable(this.msiResourceId);
    }
    public Optional<String> getVaultUri() {
        return Optional.ofNullable(this.vaultUri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskEncryptionPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String encryptionAlgorithm;
        private @Nullable Boolean encryptionAtHost;
        private @Nullable String keyName;
        private @Nullable String keyVersion;
        private @Nullable String msiResourceId;
        private @Nullable String vaultUri;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskEncryptionPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionAlgorithm = defaults.encryptionAlgorithm;
    	      this.encryptionAtHost = defaults.encryptionAtHost;
    	      this.keyName = defaults.keyName;
    	      this.keyVersion = defaults.keyVersion;
    	      this.msiResourceId = defaults.msiResourceId;
    	      this.vaultUri = defaults.vaultUri;
        }

        public Builder setEncryptionAlgorithm(@Nullable String encryptionAlgorithm) {
            this.encryptionAlgorithm = encryptionAlgorithm;
            return this;
        }

        public Builder setEncryptionAtHost(@Nullable Boolean encryptionAtHost) {
            this.encryptionAtHost = encryptionAtHost;
            return this;
        }

        public Builder setKeyName(@Nullable String keyName) {
            this.keyName = keyName;
            return this;
        }

        public Builder setKeyVersion(@Nullable String keyVersion) {
            this.keyVersion = keyVersion;
            return this;
        }

        public Builder setMsiResourceId(@Nullable String msiResourceId) {
            this.msiResourceId = msiResourceId;
            return this;
        }

        public Builder setVaultUri(@Nullable String vaultUri) {
            this.vaultUri = vaultUri;
            return this;
        }

        public DiskEncryptionPropertiesResponse build() {
            return new DiskEncryptionPropertiesResponse(encryptionAlgorithm, encryptionAtHost, keyName, keyVersion, msiResourceId, vaultUri);
        }
    }
}
