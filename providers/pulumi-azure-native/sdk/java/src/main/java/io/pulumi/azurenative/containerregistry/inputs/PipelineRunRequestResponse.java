// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry.inputs;

import io.pulumi.azurenative.containerregistry.inputs.PipelineRunSourcePropertiesResponse;
import io.pulumi.azurenative.containerregistry.inputs.PipelineRunTargetPropertiesResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineRunRequestResponse extends io.pulumi.resources.InvokeArgs {

    public static final PipelineRunRequestResponse Empty = new PipelineRunRequestResponse();

    @InputImport(name="artifacts")
    private final @Nullable List<String> artifacts;

    public List<String> getArtifacts() {
        return this.artifacts == null ? List.of() : this.artifacts;
    }

    @InputImport(name="catalogDigest")
    private final @Nullable String catalogDigest;

    public Optional<String> getCatalogDigest() {
        return this.catalogDigest == null ? Optional.empty() : Optional.ofNullable(this.catalogDigest);
    }

    @InputImport(name="pipelineResourceId")
    private final @Nullable String pipelineResourceId;

    public Optional<String> getPipelineResourceId() {
        return this.pipelineResourceId == null ? Optional.empty() : Optional.ofNullable(this.pipelineResourceId);
    }

    @InputImport(name="source")
    private final @Nullable PipelineRunSourcePropertiesResponse source;

    public Optional<PipelineRunSourcePropertiesResponse> getSource() {
        return this.source == null ? Optional.empty() : Optional.ofNullable(this.source);
    }

    @InputImport(name="target")
    private final @Nullable PipelineRunTargetPropertiesResponse target;

    public Optional<PipelineRunTargetPropertiesResponse> getTarget() {
        return this.target == null ? Optional.empty() : Optional.ofNullable(this.target);
    }

    public PipelineRunRequestResponse(
        @Nullable List<String> artifacts,
        @Nullable String catalogDigest,
        @Nullable String pipelineResourceId,
        @Nullable PipelineRunSourcePropertiesResponse source,
        @Nullable PipelineRunTargetPropertiesResponse target) {
        this.artifacts = artifacts;
        this.catalogDigest = catalogDigest;
        this.pipelineResourceId = pipelineResourceId;
        this.source = source;
        this.target = target;
    }

    private PipelineRunRequestResponse() {
        this.artifacts = List.of();
        this.catalogDigest = null;
        this.pipelineResourceId = null;
        this.source = null;
        this.target = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineRunRequestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> artifacts;
        private @Nullable String catalogDigest;
        private @Nullable String pipelineResourceId;
        private @Nullable PipelineRunSourcePropertiesResponse source;
        private @Nullable PipelineRunTargetPropertiesResponse target;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineRunRequestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifacts = defaults.artifacts;
    	      this.catalogDigest = defaults.catalogDigest;
    	      this.pipelineResourceId = defaults.pipelineResourceId;
    	      this.source = defaults.source;
    	      this.target = defaults.target;
        }

        public Builder setArtifacts(@Nullable List<String> artifacts) {
            this.artifacts = artifacts;
            return this;
        }

        public Builder setCatalogDigest(@Nullable String catalogDigest) {
            this.catalogDigest = catalogDigest;
            return this;
        }

        public Builder setPipelineResourceId(@Nullable String pipelineResourceId) {
            this.pipelineResourceId = pipelineResourceId;
            return this;
        }

        public Builder setSource(@Nullable PipelineRunSourcePropertiesResponse source) {
            this.source = source;
            return this;
        }

        public Builder setTarget(@Nullable PipelineRunTargetPropertiesResponse target) {
            this.target = target;
            return this;
        }

        public PipelineRunRequestResponse build() {
            return new PipelineRunRequestResponse(artifacts, catalogDigest, pipelineResourceId, source, target);
        }
    }
}
