// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.edgeorder.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Management RP details
 * 
 */
public final class ResourceProviderDetailsResponse extends io.pulumi.resources.InvokeArgs {

    public static final ResourceProviderDetailsResponse Empty = new ResourceProviderDetailsResponse();

    /**
     * Resource provider namespace
     * 
     */
    @Import(name="resourceProviderNamespace", required=true)
      private final String resourceProviderNamespace;

    public String getResourceProviderNamespace() {
        return this.resourceProviderNamespace;
    }

    public ResourceProviderDetailsResponse(String resourceProviderNamespace) {
        this.resourceProviderNamespace = Objects.requireNonNull(resourceProviderNamespace, "expected parameter 'resourceProviderNamespace' to be non-null");
    }

    private ResourceProviderDetailsResponse() {
        this.resourceProviderNamespace = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceProviderDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String resourceProviderNamespace;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceProviderDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceProviderNamespace = defaults.resourceProviderNamespace;
        }

        public Builder resourceProviderNamespace(String resourceProviderNamespace) {
            this.resourceProviderNamespace = Objects.requireNonNull(resourceProviderNamespace);
            return this;
        }        public ResourceProviderDetailsResponse build() {
            return new ResourceProviderDetailsResponse(resourceProviderNamespace);
        }
    }
}
