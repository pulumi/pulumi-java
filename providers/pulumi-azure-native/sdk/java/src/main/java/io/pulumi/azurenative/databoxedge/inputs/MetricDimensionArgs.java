// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * The metric dimension
 * 
 */
public final class MetricDimensionArgs extends io.pulumi.resources.ResourceArgs {

    public static final MetricDimensionArgs Empty = new MetricDimensionArgs();

    /**
     * The dimension value.
     * 
     */
    @Import(name="sourceName", required=true)
      private final Output<String> sourceName;

    public Output<String> sourceName() {
        return this.sourceName;
    }

    /**
     * The dimension type.
     * 
     */
    @Import(name="sourceType", required=true)
      private final Output<String> sourceType;

    public Output<String> sourceType() {
        return this.sourceType;
    }

    public MetricDimensionArgs(
        Output<String> sourceName,
        Output<String> sourceType) {
        this.sourceName = Objects.requireNonNull(sourceName, "expected parameter 'sourceName' to be non-null");
        this.sourceType = Objects.requireNonNull(sourceType, "expected parameter 'sourceType' to be non-null");
    }

    private MetricDimensionArgs() {
        this.sourceName = Codegen.empty();
        this.sourceType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricDimensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> sourceName;
        private Output<String> sourceType;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricDimensionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceName = defaults.sourceName;
    	      this.sourceType = defaults.sourceType;
        }

        public Builder sourceName(Output<String> sourceName) {
            this.sourceName = Objects.requireNonNull(sourceName);
            return this;
        }
        public Builder sourceName(String sourceName) {
            this.sourceName = Output.of(Objects.requireNonNull(sourceName));
            return this;
        }
        public Builder sourceType(Output<String> sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public Builder sourceType(String sourceType) {
            this.sourceType = Output.of(Objects.requireNonNull(sourceType));
            return this;
        }        public MetricDimensionArgs build() {
            return new MetricDimensionArgs(sourceName, sourceType);
        }
    }
}
