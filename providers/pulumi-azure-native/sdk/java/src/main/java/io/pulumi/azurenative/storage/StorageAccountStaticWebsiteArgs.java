// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StorageAccountStaticWebsiteArgs extends io.pulumi.resources.ResourceArgs {

    public static final StorageAccountStaticWebsiteArgs Empty = new StorageAccountStaticWebsiteArgs();

    /**
     * The name of the storage account within the specified resource group.
     * 
     */
    @InputImport(name="accountName", required=true)
    private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    /**
     * The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
     * 
     */
    @InputImport(name="error404Document")
    private final @Nullable Input<String> error404Document;

    public Input<String> getError404Document() {
        return this.error404Document == null ? Input.empty() : this.error404Document;
    }

    /**
     * The webpage that Azure Storage serves for requests to the root of a website or any sub-folder. For example, 'index.html'. The value is case-sensitive.
     * 
     */
    @InputImport(name="indexDocument")
    private final @Nullable Input<String> indexDocument;

    public Input<String> getIndexDocument() {
        return this.indexDocument == null ? Input.empty() : this.indexDocument;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public StorageAccountStaticWebsiteArgs(
        Input<String> accountName,
        @Nullable Input<String> error404Document,
        @Nullable Input<String> indexDocument,
        Input<String> resourceGroupName) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.error404Document = error404Document;
        this.indexDocument = indexDocument;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private StorageAccountStaticWebsiteArgs() {
        this.accountName = Input.empty();
        this.error404Document = Input.empty();
        this.indexDocument = Input.empty();
        this.resourceGroupName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageAccountStaticWebsiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<String> error404Document;
        private @Nullable Input<String> indexDocument;
        private Input<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(StorageAccountStaticWebsiteArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.error404Document = defaults.error404Document;
    	      this.indexDocument = defaults.indexDocument;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setError404Document(@Nullable Input<String> error404Document) {
            this.error404Document = error404Document;
            return this;
        }

        public Builder setError404Document(@Nullable String error404Document) {
            this.error404Document = Input.ofNullable(error404Document);
            return this;
        }

        public Builder setIndexDocument(@Nullable Input<String> indexDocument) {
            this.indexDocument = indexDocument;
            return this;
        }

        public Builder setIndexDocument(@Nullable String indexDocument) {
            this.indexDocument = Input.ofNullable(indexDocument);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public StorageAccountStaticWebsiteArgs build() {
            return new StorageAccountStaticWebsiteArgs(accountName, error404Document, indexDocument, resourceGroupName);
        }
    }
}
