// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.providerhub.outputs;

import io.pulumi.azurenative.providerhub.outputs.NotificationEndpointResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class NotificationRegistrationResponseProperties {
    private final @Nullable List<String> includedEvents;
    private final @Nullable String messageScope;
    private final @Nullable List<NotificationEndpointResponse> notificationEndpoints;
    private final @Nullable String notificationMode;
    private final @Nullable String provisioningState;

    @OutputCustomType.Constructor({"includedEvents","messageScope","notificationEndpoints","notificationMode","provisioningState"})
    private NotificationRegistrationResponseProperties(
        @Nullable List<String> includedEvents,
        @Nullable String messageScope,
        @Nullable List<NotificationEndpointResponse> notificationEndpoints,
        @Nullable String notificationMode,
        @Nullable String provisioningState) {
        this.includedEvents = includedEvents;
        this.messageScope = messageScope;
        this.notificationEndpoints = notificationEndpoints;
        this.notificationMode = notificationMode;
        this.provisioningState = provisioningState;
    }

    public List<String> getIncludedEvents() {
        return this.includedEvents == null ? List.of() : this.includedEvents;
    }
    public Optional<String> getMessageScope() {
        return Optional.ofNullable(this.messageScope);
    }
    public List<NotificationEndpointResponse> getNotificationEndpoints() {
        return this.notificationEndpoints == null ? List.of() : this.notificationEndpoints;
    }
    public Optional<String> getNotificationMode() {
        return Optional.ofNullable(this.notificationMode);
    }
    public Optional<String> getProvisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationRegistrationResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> includedEvents;
        private @Nullable String messageScope;
        private @Nullable List<NotificationEndpointResponse> notificationEndpoints;
        private @Nullable String notificationMode;
        private @Nullable String provisioningState;

        public Builder() {
    	      // Empty
        }

        public Builder(NotificationRegistrationResponseProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.includedEvents = defaults.includedEvents;
    	      this.messageScope = defaults.messageScope;
    	      this.notificationEndpoints = defaults.notificationEndpoints;
    	      this.notificationMode = defaults.notificationMode;
    	      this.provisioningState = defaults.provisioningState;
        }

        public Builder setIncludedEvents(@Nullable List<String> includedEvents) {
            this.includedEvents = includedEvents;
            return this;
        }

        public Builder setMessageScope(@Nullable String messageScope) {
            this.messageScope = messageScope;
            return this;
        }

        public Builder setNotificationEndpoints(@Nullable List<NotificationEndpointResponse> notificationEndpoints) {
            this.notificationEndpoints = notificationEndpoints;
            return this;
        }

        public Builder setNotificationMode(@Nullable String notificationMode) {
            this.notificationMode = notificationMode;
            return this;
        }

        public Builder setProvisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        public NotificationRegistrationResponseProperties build() {
            return new NotificationRegistrationResponseProperties(includedEvents, messageScope, notificationEndpoints, notificationMode, provisioningState);
        }
    }
}
