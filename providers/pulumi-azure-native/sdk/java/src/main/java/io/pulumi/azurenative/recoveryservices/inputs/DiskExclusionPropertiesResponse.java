// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DiskExclusionPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final DiskExclusionPropertiesResponse Empty = new DiskExclusionPropertiesResponse();

    /**
     * List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
     * 
     */
    @InputImport(name="diskLunList")
      private final @Nullable List<Integer> diskLunList;

    public List<Integer> getDiskLunList() {
        return this.diskLunList == null ? List.of() : this.diskLunList;
    }

    /**
     * Flag to indicate whether DiskLunList is to be included/ excluded from backup.
     * 
     */
    @InputImport(name="isInclusionList")
      private final @Nullable Boolean isInclusionList;

    public Optional<Boolean> getIsInclusionList() {
        return this.isInclusionList == null ? Optional.empty() : Optional.ofNullable(this.isInclusionList);
    }

    public DiskExclusionPropertiesResponse(
        @Nullable List<Integer> diskLunList,
        @Nullable Boolean isInclusionList) {
        this.diskLunList = diskLunList;
        this.isInclusionList = isInclusionList;
    }

    private DiskExclusionPropertiesResponse() {
        this.diskLunList = List.of();
        this.isInclusionList = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskExclusionPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<Integer> diskLunList;
        private @Nullable Boolean isInclusionList;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskExclusionPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskLunList = defaults.diskLunList;
    	      this.isInclusionList = defaults.isInclusionList;
        }

        public Builder setDiskLunList(@Nullable List<Integer> diskLunList) {
            this.diskLunList = diskLunList;
            return this;
        }

        public Builder setIsInclusionList(@Nullable Boolean isInclusionList) {
            this.isInclusionList = isInclusionList;
            return this;
        }
        public DiskExclusionPropertiesResponse build() {
            return new DiskExclusionPropertiesResponse(diskLunList, isInclusionList);
        }
    }
}
