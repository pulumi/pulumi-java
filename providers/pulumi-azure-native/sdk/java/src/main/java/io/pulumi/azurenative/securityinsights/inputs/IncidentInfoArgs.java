// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights.inputs;

import io.pulumi.azurenative.securityinsights.enums.IncidentSeverity;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Describes related incident information for the bookmark
 * 
 */
public final class IncidentInfoArgs extends io.pulumi.resources.ResourceArgs {

    public static final IncidentInfoArgs Empty = new IncidentInfoArgs();

    /**
     * Incident Id
     * 
     */
    @InputImport(name="incidentId")
      private final @Nullable Input<String> incidentId;

    public Input<String> getIncidentId() {
        return this.incidentId == null ? Input.empty() : this.incidentId;
    }

    /**
     * Relation Name
     * 
     */
    @InputImport(name="relationName")
      private final @Nullable Input<String> relationName;

    public Input<String> getRelationName() {
        return this.relationName == null ? Input.empty() : this.relationName;
    }

    /**
     * The severity of the incident
     * 
     */
    @InputImport(name="severity")
      private final @Nullable Input<Either<String,IncidentSeverity>> severity;

    public Input<Either<String,IncidentSeverity>> getSeverity() {
        return this.severity == null ? Input.empty() : this.severity;
    }

    /**
     * The title of the incident
     * 
     */
    @InputImport(name="title")
      private final @Nullable Input<String> title;

    public Input<String> getTitle() {
        return this.title == null ? Input.empty() : this.title;
    }

    public IncidentInfoArgs(
        @Nullable Input<String> incidentId,
        @Nullable Input<String> relationName,
        @Nullable Input<Either<String,IncidentSeverity>> severity,
        @Nullable Input<String> title) {
        this.incidentId = incidentId;
        this.relationName = relationName;
        this.severity = severity;
        this.title = title;
    }

    private IncidentInfoArgs() {
        this.incidentId = Input.empty();
        this.relationName = Input.empty();
        this.severity = Input.empty();
        this.title = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IncidentInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> incidentId;
        private @Nullable Input<String> relationName;
        private @Nullable Input<Either<String,IncidentSeverity>> severity;
        private @Nullable Input<String> title;

        public Builder() {
    	      // Empty
        }

        public Builder(IncidentInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.incidentId = defaults.incidentId;
    	      this.relationName = defaults.relationName;
    	      this.severity = defaults.severity;
    	      this.title = defaults.title;
        }

        public Builder incidentId(@Nullable Input<String> incidentId) {
            this.incidentId = incidentId;
            return this;
        }

        public Builder incidentId(@Nullable String incidentId) {
            this.incidentId = Input.ofNullable(incidentId);
            return this;
        }

        public Builder relationName(@Nullable Input<String> relationName) {
            this.relationName = relationName;
            return this;
        }

        public Builder relationName(@Nullable String relationName) {
            this.relationName = Input.ofNullable(relationName);
            return this;
        }

        public Builder severity(@Nullable Input<Either<String,IncidentSeverity>> severity) {
            this.severity = severity;
            return this;
        }

        public Builder severity(@Nullable Either<String,IncidentSeverity> severity) {
            this.severity = Input.ofNullable(severity);
            return this;
        }

        public Builder title(@Nullable Input<String> title) {
            this.title = title;
            return this;
        }

        public Builder title(@Nullable String title) {
            this.title = Input.ofNullable(title);
            return this;
        }
        public IncidentInfoArgs build() {
            return new IncidentInfoArgs(incidentId, relationName, severity, title);
        }
    }
}
