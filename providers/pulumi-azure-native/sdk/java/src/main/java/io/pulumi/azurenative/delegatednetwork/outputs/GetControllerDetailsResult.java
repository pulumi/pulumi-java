// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.delegatednetwork.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetControllerDetailsResult {
    /**
     * dnc application id should be used by customer to authenticate with dnc gateway.
     * 
     */
    private final String dncAppId;
    /**
     * dnc endpoint url that customers can use to connect to
     * 
     */
    private final String dncEndpoint;
    /**
     * tenant id of dnc application id
     * 
     */
    private final String dncTenantId;
    /**
     * An identifier that represents the resource.
     * 
     */
    private final String id;
    /**
     * Location of the resource.
     * 
     */
    private final @Nullable String location;
    /**
     * The name of the resource.
     * 
     */
    private final String name;
    /**
     * The current state of dnc controller resource.
     * 
     */
    private final String provisioningState;
    /**
     * Resource guid.
     * 
     */
    private final String resourceGuid;
    /**
     * The resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * The type of resource.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"dncAppId","dncEndpoint","dncTenantId","id","location","name","provisioningState","resourceGuid","tags","type"})
    private GetControllerDetailsResult(
        String dncAppId,
        String dncEndpoint,
        String dncTenantId,
        String id,
        @Nullable String location,
        String name,
        String provisioningState,
        String resourceGuid,
        @Nullable Map<String,String> tags,
        String type) {
        this.dncAppId = Objects.requireNonNull(dncAppId);
        this.dncEndpoint = Objects.requireNonNull(dncEndpoint);
        this.dncTenantId = Objects.requireNonNull(dncTenantId);
        this.id = Objects.requireNonNull(id);
        this.location = location;
        this.name = Objects.requireNonNull(name);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.resourceGuid = Objects.requireNonNull(resourceGuid);
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    /**
     * dnc application id should be used by customer to authenticate with dnc gateway.
     * 
    */
    public String getDncAppId() {
        return this.dncAppId;
    }
    /**
     * dnc endpoint url that customers can use to connect to
     * 
    */
    public String getDncEndpoint() {
        return this.dncEndpoint;
    }
    /**
     * tenant id of dnc application id
     * 
    */
    public String getDncTenantId() {
        return this.dncTenantId;
    }
    /**
     * An identifier that represents the resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Location of the resource.
     * 
    */
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    /**
     * The name of the resource.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The current state of dnc controller resource.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Resource guid.
     * 
    */
    public String getResourceGuid() {
        return this.resourceGuid;
    }
    /**
     * The resource tags.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * The type of resource.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControllerDetailsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dncAppId;
        private String dncEndpoint;
        private String dncTenantId;
        private String id;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private String resourceGuid;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetControllerDetailsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dncAppId = defaults.dncAppId;
    	      this.dncEndpoint = defaults.dncEndpoint;
    	      this.dncTenantId = defaults.dncTenantId;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setDncAppId(String dncAppId) {
            this.dncAppId = Objects.requireNonNull(dncAppId);
            return this;
        }

        public Builder setDncEndpoint(String dncEndpoint) {
            this.dncEndpoint = Objects.requireNonNull(dncEndpoint);
            return this;
        }

        public Builder setDncTenantId(String dncTenantId) {
            this.dncTenantId = Objects.requireNonNull(dncTenantId);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setResourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetControllerDetailsResult build() {
            return new GetControllerDetailsResult(dncAppId, dncEndpoint, dncTenantId, id, location, name, provisioningState, resourceGuid, tags, type);
        }
    }
}
