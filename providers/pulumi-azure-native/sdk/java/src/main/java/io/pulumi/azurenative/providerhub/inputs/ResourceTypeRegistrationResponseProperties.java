// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.providerhub.inputs;

import io.pulumi.azurenative.providerhub.inputs.AuthorizationActionMappingResponse;
import io.pulumi.azurenative.providerhub.inputs.ExtendedLocationOptionsResponse;
import io.pulumi.azurenative.providerhub.inputs.LinkedAccessCheckResponse;
import io.pulumi.azurenative.providerhub.inputs.LoggingRuleResponse;
import io.pulumi.azurenative.providerhub.inputs.ResourceTypeEndpointResponse;
import io.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseCheckNameAvailabilitySpecifications;
import io.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseExtensionOptions;
import io.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseFeaturesRule;
import io.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseIdentityManagement;
import io.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseRequestHeaderOptions;
import io.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseResourceMovePolicy;
import io.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications;
import io.pulumi.azurenative.providerhub.inputs.ResourceTypeRegistrationPropertiesResponseTemplateDeploymentOptions;
import io.pulumi.azurenative.providerhub.inputs.ServiceTreeInfoResponse;
import io.pulumi.azurenative.providerhub.inputs.SubscriptionStateRuleResponse;
import io.pulumi.azurenative.providerhub.inputs.SwaggerSpecificationResponse;
import io.pulumi.azurenative.providerhub.inputs.ThrottlingRuleResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceTypeRegistrationResponseProperties extends io.pulumi.resources.InvokeArgs {

    public static final ResourceTypeRegistrationResponseProperties Empty = new ResourceTypeRegistrationResponseProperties();

    @InputImport(name="allowedUnauthorizedActions")
    private final @Nullable List<String> allowedUnauthorizedActions;

    public List<String> getAllowedUnauthorizedActions() {
        return this.allowedUnauthorizedActions == null ? List.of() : this.allowedUnauthorizedActions;
    }

    @InputImport(name="authorizationActionMappings")
    private final @Nullable List<AuthorizationActionMappingResponse> authorizationActionMappings;

    public List<AuthorizationActionMappingResponse> getAuthorizationActionMappings() {
        return this.authorizationActionMappings == null ? List.of() : this.authorizationActionMappings;
    }

    @InputImport(name="checkNameAvailabilitySpecifications")
    private final @Nullable ResourceTypeRegistrationPropertiesResponseCheckNameAvailabilitySpecifications checkNameAvailabilitySpecifications;

    public Optional<ResourceTypeRegistrationPropertiesResponseCheckNameAvailabilitySpecifications> getCheckNameAvailabilitySpecifications() {
        return this.checkNameAvailabilitySpecifications == null ? Optional.empty() : Optional.ofNullable(this.checkNameAvailabilitySpecifications);
    }

    @InputImport(name="defaultApiVersion")
    private final @Nullable String defaultApiVersion;

    public Optional<String> getDefaultApiVersion() {
        return this.defaultApiVersion == null ? Optional.empty() : Optional.ofNullable(this.defaultApiVersion);
    }

    @InputImport(name="disallowedActionVerbs")
    private final @Nullable List<String> disallowedActionVerbs;

    public List<String> getDisallowedActionVerbs() {
        return this.disallowedActionVerbs == null ? List.of() : this.disallowedActionVerbs;
    }

    @InputImport(name="enableAsyncOperation")
    private final @Nullable Boolean enableAsyncOperation;

    public Optional<Boolean> getEnableAsyncOperation() {
        return this.enableAsyncOperation == null ? Optional.empty() : Optional.ofNullable(this.enableAsyncOperation);
    }

    @InputImport(name="enableThirdPartyS2S")
    private final @Nullable Boolean enableThirdPartyS2S;

    public Optional<Boolean> getEnableThirdPartyS2S() {
        return this.enableThirdPartyS2S == null ? Optional.empty() : Optional.ofNullable(this.enableThirdPartyS2S);
    }

    @InputImport(name="endpoints")
    private final @Nullable List<ResourceTypeEndpointResponse> endpoints;

    public List<ResourceTypeEndpointResponse> getEndpoints() {
        return this.endpoints == null ? List.of() : this.endpoints;
    }

    @InputImport(name="extendedLocations")
    private final @Nullable List<ExtendedLocationOptionsResponse> extendedLocations;

    public List<ExtendedLocationOptionsResponse> getExtendedLocations() {
        return this.extendedLocations == null ? List.of() : this.extendedLocations;
    }

    @InputImport(name="extensionOptions")
    private final @Nullable ResourceTypeRegistrationPropertiesResponseExtensionOptions extensionOptions;

    public Optional<ResourceTypeRegistrationPropertiesResponseExtensionOptions> getExtensionOptions() {
        return this.extensionOptions == null ? Optional.empty() : Optional.ofNullable(this.extensionOptions);
    }

    @InputImport(name="featuresRule")
    private final @Nullable ResourceTypeRegistrationPropertiesResponseFeaturesRule featuresRule;

    public Optional<ResourceTypeRegistrationPropertiesResponseFeaturesRule> getFeaturesRule() {
        return this.featuresRule == null ? Optional.empty() : Optional.ofNullable(this.featuresRule);
    }

    @InputImport(name="identityManagement")
    private final @Nullable ResourceTypeRegistrationPropertiesResponseIdentityManagement identityManagement;

    public Optional<ResourceTypeRegistrationPropertiesResponseIdentityManagement> getIdentityManagement() {
        return this.identityManagement == null ? Optional.empty() : Optional.ofNullable(this.identityManagement);
    }

    @InputImport(name="isPureProxy")
    private final @Nullable Boolean isPureProxy;

    public Optional<Boolean> getIsPureProxy() {
        return this.isPureProxy == null ? Optional.empty() : Optional.ofNullable(this.isPureProxy);
    }

    @InputImport(name="linkedAccessChecks")
    private final @Nullable List<LinkedAccessCheckResponse> linkedAccessChecks;

    public List<LinkedAccessCheckResponse> getLinkedAccessChecks() {
        return this.linkedAccessChecks == null ? List.of() : this.linkedAccessChecks;
    }

    @InputImport(name="loggingRules")
    private final @Nullable List<LoggingRuleResponse> loggingRules;

    public List<LoggingRuleResponse> getLoggingRules() {
        return this.loggingRules == null ? List.of() : this.loggingRules;
    }

    @InputImport(name="marketplaceType")
    private final @Nullable String marketplaceType;

    public Optional<String> getMarketplaceType() {
        return this.marketplaceType == null ? Optional.empty() : Optional.ofNullable(this.marketplaceType);
    }

    @InputImport(name="provisioningState")
    private final @Nullable String provisioningState;

    public Optional<String> getProvisioningState() {
        return this.provisioningState == null ? Optional.empty() : Optional.ofNullable(this.provisioningState);
    }

    @InputImport(name="regionality")
    private final @Nullable String regionality;

    public Optional<String> getRegionality() {
        return this.regionality == null ? Optional.empty() : Optional.ofNullable(this.regionality);
    }

    @InputImport(name="requestHeaderOptions")
    private final @Nullable ResourceTypeRegistrationPropertiesResponseRequestHeaderOptions requestHeaderOptions;

    public Optional<ResourceTypeRegistrationPropertiesResponseRequestHeaderOptions> getRequestHeaderOptions() {
        return this.requestHeaderOptions == null ? Optional.empty() : Optional.ofNullable(this.requestHeaderOptions);
    }

    @InputImport(name="requiredFeatures")
    private final @Nullable List<String> requiredFeatures;

    public List<String> getRequiredFeatures() {
        return this.requiredFeatures == null ? List.of() : this.requiredFeatures;
    }

    @InputImport(name="resourceDeletionPolicy")
    private final @Nullable String resourceDeletionPolicy;

    public Optional<String> getResourceDeletionPolicy() {
        return this.resourceDeletionPolicy == null ? Optional.empty() : Optional.ofNullable(this.resourceDeletionPolicy);
    }

    @InputImport(name="resourceMovePolicy")
    private final @Nullable ResourceTypeRegistrationPropertiesResponseResourceMovePolicy resourceMovePolicy;

    public Optional<ResourceTypeRegistrationPropertiesResponseResourceMovePolicy> getResourceMovePolicy() {
        return this.resourceMovePolicy == null ? Optional.empty() : Optional.ofNullable(this.resourceMovePolicy);
    }

    @InputImport(name="routingType")
    private final @Nullable String routingType;

    public Optional<String> getRoutingType() {
        return this.routingType == null ? Optional.empty() : Optional.ofNullable(this.routingType);
    }

    @InputImport(name="serviceTreeInfos")
    private final @Nullable List<ServiceTreeInfoResponse> serviceTreeInfos;

    public List<ServiceTreeInfoResponse> getServiceTreeInfos() {
        return this.serviceTreeInfos == null ? List.of() : this.serviceTreeInfos;
    }

    @InputImport(name="subscriptionLifecycleNotificationSpecifications")
    private final @Nullable ResourceTypeRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications;

    public Optional<ResourceTypeRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications> getSubscriptionLifecycleNotificationSpecifications() {
        return this.subscriptionLifecycleNotificationSpecifications == null ? Optional.empty() : Optional.ofNullable(this.subscriptionLifecycleNotificationSpecifications);
    }

    @InputImport(name="subscriptionStateRules")
    private final @Nullable List<SubscriptionStateRuleResponse> subscriptionStateRules;

    public List<SubscriptionStateRuleResponse> getSubscriptionStateRules() {
        return this.subscriptionStateRules == null ? List.of() : this.subscriptionStateRules;
    }

    @InputImport(name="swaggerSpecifications")
    private final @Nullable List<SwaggerSpecificationResponse> swaggerSpecifications;

    public List<SwaggerSpecificationResponse> getSwaggerSpecifications() {
        return this.swaggerSpecifications == null ? List.of() : this.swaggerSpecifications;
    }

    @InputImport(name="templateDeploymentOptions")
    private final @Nullable ResourceTypeRegistrationPropertiesResponseTemplateDeploymentOptions templateDeploymentOptions;

    public Optional<ResourceTypeRegistrationPropertiesResponseTemplateDeploymentOptions> getTemplateDeploymentOptions() {
        return this.templateDeploymentOptions == null ? Optional.empty() : Optional.ofNullable(this.templateDeploymentOptions);
    }

    @InputImport(name="throttlingRules")
    private final @Nullable List<ThrottlingRuleResponse> throttlingRules;

    public List<ThrottlingRuleResponse> getThrottlingRules() {
        return this.throttlingRules == null ? List.of() : this.throttlingRules;
    }

    public ResourceTypeRegistrationResponseProperties(
        @Nullable List<String> allowedUnauthorizedActions,
        @Nullable List<AuthorizationActionMappingResponse> authorizationActionMappings,
        @Nullable ResourceTypeRegistrationPropertiesResponseCheckNameAvailabilitySpecifications checkNameAvailabilitySpecifications,
        @Nullable String defaultApiVersion,
        @Nullable List<String> disallowedActionVerbs,
        @Nullable Boolean enableAsyncOperation,
        @Nullable Boolean enableThirdPartyS2S,
        @Nullable List<ResourceTypeEndpointResponse> endpoints,
        @Nullable List<ExtendedLocationOptionsResponse> extendedLocations,
        @Nullable ResourceTypeRegistrationPropertiesResponseExtensionOptions extensionOptions,
        @Nullable ResourceTypeRegistrationPropertiesResponseFeaturesRule featuresRule,
        @Nullable ResourceTypeRegistrationPropertiesResponseIdentityManagement identityManagement,
        @Nullable Boolean isPureProxy,
        @Nullable List<LinkedAccessCheckResponse> linkedAccessChecks,
        @Nullable List<LoggingRuleResponse> loggingRules,
        @Nullable String marketplaceType,
        @Nullable String provisioningState,
        @Nullable String regionality,
        @Nullable ResourceTypeRegistrationPropertiesResponseRequestHeaderOptions requestHeaderOptions,
        @Nullable List<String> requiredFeatures,
        @Nullable String resourceDeletionPolicy,
        @Nullable ResourceTypeRegistrationPropertiesResponseResourceMovePolicy resourceMovePolicy,
        @Nullable String routingType,
        @Nullable List<ServiceTreeInfoResponse> serviceTreeInfos,
        @Nullable ResourceTypeRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications,
        @Nullable List<SubscriptionStateRuleResponse> subscriptionStateRules,
        @Nullable List<SwaggerSpecificationResponse> swaggerSpecifications,
        @Nullable ResourceTypeRegistrationPropertiesResponseTemplateDeploymentOptions templateDeploymentOptions,
        @Nullable List<ThrottlingRuleResponse> throttlingRules) {
        this.allowedUnauthorizedActions = allowedUnauthorizedActions;
        this.authorizationActionMappings = authorizationActionMappings;
        this.checkNameAvailabilitySpecifications = checkNameAvailabilitySpecifications;
        this.defaultApiVersion = defaultApiVersion;
        this.disallowedActionVerbs = disallowedActionVerbs;
        this.enableAsyncOperation = enableAsyncOperation;
        this.enableThirdPartyS2S = enableThirdPartyS2S;
        this.endpoints = endpoints;
        this.extendedLocations = extendedLocations;
        this.extensionOptions = extensionOptions;
        this.featuresRule = featuresRule;
        this.identityManagement = identityManagement;
        this.isPureProxy = isPureProxy;
        this.linkedAccessChecks = linkedAccessChecks;
        this.loggingRules = loggingRules;
        this.marketplaceType = marketplaceType;
        this.provisioningState = provisioningState;
        this.regionality = regionality;
        this.requestHeaderOptions = requestHeaderOptions;
        this.requiredFeatures = requiredFeatures;
        this.resourceDeletionPolicy = resourceDeletionPolicy;
        this.resourceMovePolicy = resourceMovePolicy;
        this.routingType = routingType;
        this.serviceTreeInfos = serviceTreeInfos;
        this.subscriptionLifecycleNotificationSpecifications = subscriptionLifecycleNotificationSpecifications;
        this.subscriptionStateRules = subscriptionStateRules;
        this.swaggerSpecifications = swaggerSpecifications;
        this.templateDeploymentOptions = templateDeploymentOptions;
        this.throttlingRules = throttlingRules;
    }

    private ResourceTypeRegistrationResponseProperties() {
        this.allowedUnauthorizedActions = List.of();
        this.authorizationActionMappings = List.of();
        this.checkNameAvailabilitySpecifications = null;
        this.defaultApiVersion = null;
        this.disallowedActionVerbs = List.of();
        this.enableAsyncOperation = null;
        this.enableThirdPartyS2S = null;
        this.endpoints = List.of();
        this.extendedLocations = List.of();
        this.extensionOptions = null;
        this.featuresRule = null;
        this.identityManagement = null;
        this.isPureProxy = null;
        this.linkedAccessChecks = List.of();
        this.loggingRules = List.of();
        this.marketplaceType = null;
        this.provisioningState = null;
        this.regionality = null;
        this.requestHeaderOptions = null;
        this.requiredFeatures = List.of();
        this.resourceDeletionPolicy = null;
        this.resourceMovePolicy = null;
        this.routingType = null;
        this.serviceTreeInfos = List.of();
        this.subscriptionLifecycleNotificationSpecifications = null;
        this.subscriptionStateRules = List.of();
        this.swaggerSpecifications = List.of();
        this.templateDeploymentOptions = null;
        this.throttlingRules = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceTypeRegistrationResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> allowedUnauthorizedActions;
        private @Nullable List<AuthorizationActionMappingResponse> authorizationActionMappings;
        private @Nullable ResourceTypeRegistrationPropertiesResponseCheckNameAvailabilitySpecifications checkNameAvailabilitySpecifications;
        private @Nullable String defaultApiVersion;
        private @Nullable List<String> disallowedActionVerbs;
        private @Nullable Boolean enableAsyncOperation;
        private @Nullable Boolean enableThirdPartyS2S;
        private @Nullable List<ResourceTypeEndpointResponse> endpoints;
        private @Nullable List<ExtendedLocationOptionsResponse> extendedLocations;
        private @Nullable ResourceTypeRegistrationPropertiesResponseExtensionOptions extensionOptions;
        private @Nullable ResourceTypeRegistrationPropertiesResponseFeaturesRule featuresRule;
        private @Nullable ResourceTypeRegistrationPropertiesResponseIdentityManagement identityManagement;
        private @Nullable Boolean isPureProxy;
        private @Nullable List<LinkedAccessCheckResponse> linkedAccessChecks;
        private @Nullable List<LoggingRuleResponse> loggingRules;
        private @Nullable String marketplaceType;
        private @Nullable String provisioningState;
        private @Nullable String regionality;
        private @Nullable ResourceTypeRegistrationPropertiesResponseRequestHeaderOptions requestHeaderOptions;
        private @Nullable List<String> requiredFeatures;
        private @Nullable String resourceDeletionPolicy;
        private @Nullable ResourceTypeRegistrationPropertiesResponseResourceMovePolicy resourceMovePolicy;
        private @Nullable String routingType;
        private @Nullable List<ServiceTreeInfoResponse> serviceTreeInfos;
        private @Nullable ResourceTypeRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications;
        private @Nullable List<SubscriptionStateRuleResponse> subscriptionStateRules;
        private @Nullable List<SwaggerSpecificationResponse> swaggerSpecifications;
        private @Nullable ResourceTypeRegistrationPropertiesResponseTemplateDeploymentOptions templateDeploymentOptions;
        private @Nullable List<ThrottlingRuleResponse> throttlingRules;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceTypeRegistrationResponseProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedUnauthorizedActions = defaults.allowedUnauthorizedActions;
    	      this.authorizationActionMappings = defaults.authorizationActionMappings;
    	      this.checkNameAvailabilitySpecifications = defaults.checkNameAvailabilitySpecifications;
    	      this.defaultApiVersion = defaults.defaultApiVersion;
    	      this.disallowedActionVerbs = defaults.disallowedActionVerbs;
    	      this.enableAsyncOperation = defaults.enableAsyncOperation;
    	      this.enableThirdPartyS2S = defaults.enableThirdPartyS2S;
    	      this.endpoints = defaults.endpoints;
    	      this.extendedLocations = defaults.extendedLocations;
    	      this.extensionOptions = defaults.extensionOptions;
    	      this.featuresRule = defaults.featuresRule;
    	      this.identityManagement = defaults.identityManagement;
    	      this.isPureProxy = defaults.isPureProxy;
    	      this.linkedAccessChecks = defaults.linkedAccessChecks;
    	      this.loggingRules = defaults.loggingRules;
    	      this.marketplaceType = defaults.marketplaceType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.regionality = defaults.regionality;
    	      this.requestHeaderOptions = defaults.requestHeaderOptions;
    	      this.requiredFeatures = defaults.requiredFeatures;
    	      this.resourceDeletionPolicy = defaults.resourceDeletionPolicy;
    	      this.resourceMovePolicy = defaults.resourceMovePolicy;
    	      this.routingType = defaults.routingType;
    	      this.serviceTreeInfos = defaults.serviceTreeInfos;
    	      this.subscriptionLifecycleNotificationSpecifications = defaults.subscriptionLifecycleNotificationSpecifications;
    	      this.subscriptionStateRules = defaults.subscriptionStateRules;
    	      this.swaggerSpecifications = defaults.swaggerSpecifications;
    	      this.templateDeploymentOptions = defaults.templateDeploymentOptions;
    	      this.throttlingRules = defaults.throttlingRules;
        }

        public Builder setAllowedUnauthorizedActions(@Nullable List<String> allowedUnauthorizedActions) {
            this.allowedUnauthorizedActions = allowedUnauthorizedActions;
            return this;
        }

        public Builder setAuthorizationActionMappings(@Nullable List<AuthorizationActionMappingResponse> authorizationActionMappings) {
            this.authorizationActionMappings = authorizationActionMappings;
            return this;
        }

        public Builder setCheckNameAvailabilitySpecifications(@Nullable ResourceTypeRegistrationPropertiesResponseCheckNameAvailabilitySpecifications checkNameAvailabilitySpecifications) {
            this.checkNameAvailabilitySpecifications = checkNameAvailabilitySpecifications;
            return this;
        }

        public Builder setDefaultApiVersion(@Nullable String defaultApiVersion) {
            this.defaultApiVersion = defaultApiVersion;
            return this;
        }

        public Builder setDisallowedActionVerbs(@Nullable List<String> disallowedActionVerbs) {
            this.disallowedActionVerbs = disallowedActionVerbs;
            return this;
        }

        public Builder setEnableAsyncOperation(@Nullable Boolean enableAsyncOperation) {
            this.enableAsyncOperation = enableAsyncOperation;
            return this;
        }

        public Builder setEnableThirdPartyS2S(@Nullable Boolean enableThirdPartyS2S) {
            this.enableThirdPartyS2S = enableThirdPartyS2S;
            return this;
        }

        public Builder setEndpoints(@Nullable List<ResourceTypeEndpointResponse> endpoints) {
            this.endpoints = endpoints;
            return this;
        }

        public Builder setExtendedLocations(@Nullable List<ExtendedLocationOptionsResponse> extendedLocations) {
            this.extendedLocations = extendedLocations;
            return this;
        }

        public Builder setExtensionOptions(@Nullable ResourceTypeRegistrationPropertiesResponseExtensionOptions extensionOptions) {
            this.extensionOptions = extensionOptions;
            return this;
        }

        public Builder setFeaturesRule(@Nullable ResourceTypeRegistrationPropertiesResponseFeaturesRule featuresRule) {
            this.featuresRule = featuresRule;
            return this;
        }

        public Builder setIdentityManagement(@Nullable ResourceTypeRegistrationPropertiesResponseIdentityManagement identityManagement) {
            this.identityManagement = identityManagement;
            return this;
        }

        public Builder setIsPureProxy(@Nullable Boolean isPureProxy) {
            this.isPureProxy = isPureProxy;
            return this;
        }

        public Builder setLinkedAccessChecks(@Nullable List<LinkedAccessCheckResponse> linkedAccessChecks) {
            this.linkedAccessChecks = linkedAccessChecks;
            return this;
        }

        public Builder setLoggingRules(@Nullable List<LoggingRuleResponse> loggingRules) {
            this.loggingRules = loggingRules;
            return this;
        }

        public Builder setMarketplaceType(@Nullable String marketplaceType) {
            this.marketplaceType = marketplaceType;
            return this;
        }

        public Builder setProvisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }

        public Builder setRegionality(@Nullable String regionality) {
            this.regionality = regionality;
            return this;
        }

        public Builder setRequestHeaderOptions(@Nullable ResourceTypeRegistrationPropertiesResponseRequestHeaderOptions requestHeaderOptions) {
            this.requestHeaderOptions = requestHeaderOptions;
            return this;
        }

        public Builder setRequiredFeatures(@Nullable List<String> requiredFeatures) {
            this.requiredFeatures = requiredFeatures;
            return this;
        }

        public Builder setResourceDeletionPolicy(@Nullable String resourceDeletionPolicy) {
            this.resourceDeletionPolicy = resourceDeletionPolicy;
            return this;
        }

        public Builder setResourceMovePolicy(@Nullable ResourceTypeRegistrationPropertiesResponseResourceMovePolicy resourceMovePolicy) {
            this.resourceMovePolicy = resourceMovePolicy;
            return this;
        }

        public Builder setRoutingType(@Nullable String routingType) {
            this.routingType = routingType;
            return this;
        }

        public Builder setServiceTreeInfos(@Nullable List<ServiceTreeInfoResponse> serviceTreeInfos) {
            this.serviceTreeInfos = serviceTreeInfos;
            return this;
        }

        public Builder setSubscriptionLifecycleNotificationSpecifications(@Nullable ResourceTypeRegistrationPropertiesResponseSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications) {
            this.subscriptionLifecycleNotificationSpecifications = subscriptionLifecycleNotificationSpecifications;
            return this;
        }

        public Builder setSubscriptionStateRules(@Nullable List<SubscriptionStateRuleResponse> subscriptionStateRules) {
            this.subscriptionStateRules = subscriptionStateRules;
            return this;
        }

        public Builder setSwaggerSpecifications(@Nullable List<SwaggerSpecificationResponse> swaggerSpecifications) {
            this.swaggerSpecifications = swaggerSpecifications;
            return this;
        }

        public Builder setTemplateDeploymentOptions(@Nullable ResourceTypeRegistrationPropertiesResponseTemplateDeploymentOptions templateDeploymentOptions) {
            this.templateDeploymentOptions = templateDeploymentOptions;
            return this;
        }

        public Builder setThrottlingRules(@Nullable List<ThrottlingRuleResponse> throttlingRules) {
            this.throttlingRules = throttlingRules;
            return this;
        }

        public ResourceTypeRegistrationResponseProperties build() {
            return new ResourceTypeRegistrationResponseProperties(allowedUnauthorizedActions, authorizationActionMappings, checkNameAvailabilitySpecifications, defaultApiVersion, disallowedActionVerbs, enableAsyncOperation, enableThirdPartyS2S, endpoints, extendedLocations, extensionOptions, featuresRule, identityManagement, isPureProxy, linkedAccessChecks, loggingRules, marketplaceType, provisioningState, regionality, requestHeaderOptions, requiredFeatures, resourceDeletionPolicy, resourceMovePolicy, routingType, serviceTreeInfos, subscriptionLifecycleNotificationSpecifications, subscriptionStateRules, swaggerSpecifications, templateDeploymentOptions, throttlingRules);
        }
    }
}
