// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.edgeorder.inputs;

import io.pulumi.azurenative.edgeorder.enums.OrderItemType;
import io.pulumi.azurenative.edgeorder.inputs.PreferencesArgs;
import io.pulumi.azurenative.edgeorder.inputs.ProductDetailsArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Order item details
 * 
 */
public final class OrderItemDetailsArgs extends io.pulumi.resources.ResourceArgs {

    public static final OrderItemDetailsArgs Empty = new OrderItemDetailsArgs();

    /**
     * Additional notification email list
     * 
     */
    @InputImport(name="notificationEmailList")
      private final @Nullable Output<List<String>> notificationEmailList;

    public Output<List<String>> getNotificationEmailList() {
        return this.notificationEmailList == null ? Output.empty() : this.notificationEmailList;
    }

    /**
     * Order item type.
     * 
     */
    @InputImport(name="orderItemType", required=true)
      private final Output<Either<String,OrderItemType>> orderItemType;

    public Output<Either<String,OrderItemType>> getOrderItemType() {
        return this.orderItemType;
    }

    /**
     * Customer notification Preferences
     * 
     */
    @InputImport(name="preferences")
      private final @Nullable Output<PreferencesArgs> preferences;

    public Output<PreferencesArgs> getPreferences() {
        return this.preferences == null ? Output.empty() : this.preferences;
    }

    /**
     * Unique identifier for configuration.
     * 
     */
    @InputImport(name="productDetails", required=true)
      private final Output<ProductDetailsArgs> productDetails;

    public Output<ProductDetailsArgs> getProductDetails() {
        return this.productDetails;
    }

    public OrderItemDetailsArgs(
        @Nullable Output<List<String>> notificationEmailList,
        Output<Either<String,OrderItemType>> orderItemType,
        @Nullable Output<PreferencesArgs> preferences,
        Output<ProductDetailsArgs> productDetails) {
        this.notificationEmailList = notificationEmailList;
        this.orderItemType = Objects.requireNonNull(orderItemType, "expected parameter 'orderItemType' to be non-null");
        this.preferences = preferences;
        this.productDetails = Objects.requireNonNull(productDetails, "expected parameter 'productDetails' to be non-null");
    }

    private OrderItemDetailsArgs() {
        this.notificationEmailList = Output.empty();
        this.orderItemType = Output.empty();
        this.preferences = Output.empty();
        this.productDetails = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrderItemDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> notificationEmailList;
        private Output<Either<String,OrderItemType>> orderItemType;
        private @Nullable Output<PreferencesArgs> preferences;
        private Output<ProductDetailsArgs> productDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(OrderItemDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.notificationEmailList = defaults.notificationEmailList;
    	      this.orderItemType = defaults.orderItemType;
    	      this.preferences = defaults.preferences;
    	      this.productDetails = defaults.productDetails;
        }

        public Builder notificationEmailList(@Nullable Output<List<String>> notificationEmailList) {
            this.notificationEmailList = notificationEmailList;
            return this;
        }

        public Builder notificationEmailList(@Nullable List<String> notificationEmailList) {
            this.notificationEmailList = Output.ofNullable(notificationEmailList);
            return this;
        }

        public Builder orderItemType(Output<Either<String,OrderItemType>> orderItemType) {
            this.orderItemType = Objects.requireNonNull(orderItemType);
            return this;
        }

        public Builder orderItemType(Either<String,OrderItemType> orderItemType) {
            this.orderItemType = Output.of(Objects.requireNonNull(orderItemType));
            return this;
        }

        public Builder preferences(@Nullable Output<PreferencesArgs> preferences) {
            this.preferences = preferences;
            return this;
        }

        public Builder preferences(@Nullable PreferencesArgs preferences) {
            this.preferences = Output.ofNullable(preferences);
            return this;
        }

        public Builder productDetails(Output<ProductDetailsArgs> productDetails) {
            this.productDetails = Objects.requireNonNull(productDetails);
            return this;
        }

        public Builder productDetails(ProductDetailsArgs productDetails) {
            this.productDetails = Output.of(Objects.requireNonNull(productDetails));
            return this;
        }
        public OrderItemDetailsArgs build() {
            return new OrderItemDetailsArgs(notificationEmailList, orderItemType, preferences, productDetails);
        }
    }
}
