// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cognitiveservices.inputs;

import io.pulumi.azurenative.cognitiveservices.inputs.CommitmentPeriodResponse;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of Cognitive Services account commitment plan.
 * 
 */
public final class CommitmentPlanPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final CommitmentPlanPropertiesResponse Empty = new CommitmentPlanPropertiesResponse();

    /**
     * AutoRenew commitment plan.
     * 
     */
    @Import(name="autoRenew")
      private final @Nullable Boolean autoRenew;

    public Optional<Boolean> getAutoRenew() {
        return this.autoRenew == null ? Optional.empty() : Optional.ofNullable(this.autoRenew);
    }

    /**
     * Cognitive Services account commitment period.
     * 
     */
    @Import(name="current")
      private final @Nullable CommitmentPeriodResponse current;

    public Optional<CommitmentPeriodResponse> getCurrent() {
        return this.current == null ? Optional.empty() : Optional.ofNullable(this.current);
    }

    /**
     * Account hosting model.
     * 
     */
    @Import(name="hostingModel")
      private final @Nullable String hostingModel;

    public Optional<String> getHostingModel() {
        return this.hostingModel == null ? Optional.empty() : Optional.ofNullable(this.hostingModel);
    }

    /**
     * Cognitive Services account commitment period.
     * 
     */
    @Import(name="last", required=true)
      private final CommitmentPeriodResponse last;

    public CommitmentPeriodResponse getLast() {
        return this.last;
    }

    /**
     * Cognitive Services account commitment period.
     * 
     */
    @Import(name="next")
      private final @Nullable CommitmentPeriodResponse next;

    public Optional<CommitmentPeriodResponse> getNext() {
        return this.next == null ? Optional.empty() : Optional.ofNullable(this.next);
    }

    /**
     * Commitment plan type.
     * 
     */
    @Import(name="planType")
      private final @Nullable String planType;

    public Optional<String> getPlanType() {
        return this.planType == null ? Optional.empty() : Optional.ofNullable(this.planType);
    }

    public CommitmentPlanPropertiesResponse(
        @Nullable Boolean autoRenew,
        @Nullable CommitmentPeriodResponse current,
        @Nullable String hostingModel,
        CommitmentPeriodResponse last,
        @Nullable CommitmentPeriodResponse next,
        @Nullable String planType) {
        this.autoRenew = autoRenew;
        this.current = current;
        this.hostingModel = hostingModel;
        this.last = Objects.requireNonNull(last, "expected parameter 'last' to be non-null");
        this.next = next;
        this.planType = planType;
    }

    private CommitmentPlanPropertiesResponse() {
        this.autoRenew = null;
        this.current = null;
        this.hostingModel = null;
        this.last = null;
        this.next = null;
        this.planType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CommitmentPlanPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean autoRenew;
        private @Nullable CommitmentPeriodResponse current;
        private @Nullable String hostingModel;
        private CommitmentPeriodResponse last;
        private @Nullable CommitmentPeriodResponse next;
        private @Nullable String planType;

        public Builder() {
    	      // Empty
        }

        public Builder(CommitmentPlanPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRenew = defaults.autoRenew;
    	      this.current = defaults.current;
    	      this.hostingModel = defaults.hostingModel;
    	      this.last = defaults.last;
    	      this.next = defaults.next;
    	      this.planType = defaults.planType;
        }

        public Builder autoRenew(@Nullable Boolean autoRenew) {
            this.autoRenew = autoRenew;
            return this;
        }
        public Builder current(@Nullable CommitmentPeriodResponse current) {
            this.current = current;
            return this;
        }
        public Builder hostingModel(@Nullable String hostingModel) {
            this.hostingModel = hostingModel;
            return this;
        }
        public Builder last(CommitmentPeriodResponse last) {
            this.last = Objects.requireNonNull(last);
            return this;
        }
        public Builder next(@Nullable CommitmentPeriodResponse next) {
            this.next = next;
            return this;
        }
        public Builder planType(@Nullable String planType) {
            this.planType = planType;
            return this;
        }        public CommitmentPlanPropertiesResponse build() {
            return new CommitmentPlanPropertiesResponse(autoRenew, current, hostingModel, last, next, planType);
        }
    }
}
