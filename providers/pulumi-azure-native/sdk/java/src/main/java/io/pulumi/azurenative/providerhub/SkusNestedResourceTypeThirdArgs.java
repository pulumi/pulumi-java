// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.providerhub;

import io.pulumi.azurenative.providerhub.inputs.SkuResourcePropertiesArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SkusNestedResourceTypeThirdArgs extends io.pulumi.resources.ResourceArgs {

    public static final SkusNestedResourceTypeThirdArgs Empty = new SkusNestedResourceTypeThirdArgs();

    /**
     * The first child resource type.
     * 
     */
    @InputImport(name="nestedResourceTypeFirst", required=true)
      private final Output<String> nestedResourceTypeFirst;

    public Output<String> getNestedResourceTypeFirst() {
        return this.nestedResourceTypeFirst;
    }

    /**
     * The second child resource type.
     * 
     */
    @InputImport(name="nestedResourceTypeSecond", required=true)
      private final Output<String> nestedResourceTypeSecond;

    public Output<String> getNestedResourceTypeSecond() {
        return this.nestedResourceTypeSecond;
    }

    /**
     * The third child resource type.
     * 
     */
    @InputImport(name="nestedResourceTypeThird", required=true)
      private final Output<String> nestedResourceTypeThird;

    public Output<String> getNestedResourceTypeThird() {
        return this.nestedResourceTypeThird;
    }

    @InputImport(name="properties")
      private final @Nullable Output<SkuResourcePropertiesArgs> properties;

    public Output<SkuResourcePropertiesArgs> getProperties() {
        return this.properties == null ? Output.empty() : this.properties;
    }

    /**
     * The name of the resource provider hosted within ProviderHub.
     * 
     */
    @InputImport(name="providerNamespace", required=true)
      private final Output<String> providerNamespace;

    public Output<String> getProviderNamespace() {
        return this.providerNamespace;
    }

    /**
     * The resource type.
     * 
     */
    @InputImport(name="resourceType", required=true)
      private final Output<String> resourceType;

    public Output<String> getPropResourceType() {
        return this.resourceType;
    }

    /**
     * The SKU.
     * 
     */
    @InputImport(name="sku")
      private final @Nullable Output<String> sku;

    public Output<String> getSku() {
        return this.sku == null ? Output.empty() : this.sku;
    }

    public SkusNestedResourceTypeThirdArgs(
        Output<String> nestedResourceTypeFirst,
        Output<String> nestedResourceTypeSecond,
        Output<String> nestedResourceTypeThird,
        @Nullable Output<SkuResourcePropertiesArgs> properties,
        Output<String> providerNamespace,
        Output<String> resourceType,
        @Nullable Output<String> sku) {
        this.nestedResourceTypeFirst = Objects.requireNonNull(nestedResourceTypeFirst, "expected parameter 'nestedResourceTypeFirst' to be non-null");
        this.nestedResourceTypeSecond = Objects.requireNonNull(nestedResourceTypeSecond, "expected parameter 'nestedResourceTypeSecond' to be non-null");
        this.nestedResourceTypeThird = Objects.requireNonNull(nestedResourceTypeThird, "expected parameter 'nestedResourceTypeThird' to be non-null");
        this.properties = properties;
        this.providerNamespace = Objects.requireNonNull(providerNamespace, "expected parameter 'providerNamespace' to be non-null");
        this.resourceType = Objects.requireNonNull(resourceType, "expected parameter 'resourceType' to be non-null");
        this.sku = sku;
    }

    private SkusNestedResourceTypeThirdArgs() {
        this.nestedResourceTypeFirst = Output.empty();
        this.nestedResourceTypeSecond = Output.empty();
        this.nestedResourceTypeThird = Output.empty();
        this.properties = Output.empty();
        this.providerNamespace = Output.empty();
        this.resourceType = Output.empty();
        this.sku = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SkusNestedResourceTypeThirdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> nestedResourceTypeFirst;
        private Output<String> nestedResourceTypeSecond;
        private Output<String> nestedResourceTypeThird;
        private @Nullable Output<SkuResourcePropertiesArgs> properties;
        private Output<String> providerNamespace;
        private Output<String> resourceType;
        private @Nullable Output<String> sku;

        public Builder() {
    	      // Empty
        }

        public Builder(SkusNestedResourceTypeThirdArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nestedResourceTypeFirst = defaults.nestedResourceTypeFirst;
    	      this.nestedResourceTypeSecond = defaults.nestedResourceTypeSecond;
    	      this.nestedResourceTypeThird = defaults.nestedResourceTypeThird;
    	      this.properties = defaults.properties;
    	      this.providerNamespace = defaults.providerNamespace;
    	      this.resourceType = defaults.resourceType;
    	      this.sku = defaults.sku;
        }

        public Builder nestedResourceTypeFirst(Output<String> nestedResourceTypeFirst) {
            this.nestedResourceTypeFirst = Objects.requireNonNull(nestedResourceTypeFirst);
            return this;
        }

        public Builder nestedResourceTypeFirst(String nestedResourceTypeFirst) {
            this.nestedResourceTypeFirst = Output.of(Objects.requireNonNull(nestedResourceTypeFirst));
            return this;
        }

        public Builder nestedResourceTypeSecond(Output<String> nestedResourceTypeSecond) {
            this.nestedResourceTypeSecond = Objects.requireNonNull(nestedResourceTypeSecond);
            return this;
        }

        public Builder nestedResourceTypeSecond(String nestedResourceTypeSecond) {
            this.nestedResourceTypeSecond = Output.of(Objects.requireNonNull(nestedResourceTypeSecond));
            return this;
        }

        public Builder nestedResourceTypeThird(Output<String> nestedResourceTypeThird) {
            this.nestedResourceTypeThird = Objects.requireNonNull(nestedResourceTypeThird);
            return this;
        }

        public Builder nestedResourceTypeThird(String nestedResourceTypeThird) {
            this.nestedResourceTypeThird = Output.of(Objects.requireNonNull(nestedResourceTypeThird));
            return this;
        }

        public Builder properties(@Nullable Output<SkuResourcePropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }

        public Builder properties(@Nullable SkuResourcePropertiesArgs properties) {
            this.properties = Output.ofNullable(properties);
            return this;
        }

        public Builder providerNamespace(Output<String> providerNamespace) {
            this.providerNamespace = Objects.requireNonNull(providerNamespace);
            return this;
        }

        public Builder providerNamespace(String providerNamespace) {
            this.providerNamespace = Output.of(Objects.requireNonNull(providerNamespace));
            return this;
        }

        public Builder resourceType(Output<String> resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }

        public Builder resourceType(String resourceType) {
            this.resourceType = Output.of(Objects.requireNonNull(resourceType));
            return this;
        }

        public Builder sku(@Nullable Output<String> sku) {
            this.sku = sku;
            return this;
        }

        public Builder sku(@Nullable String sku) {
            this.sku = Output.ofNullable(sku);
            return this;
        }
        public SkusNestedResourceTypeThirdArgs build() {
            return new SkusNestedResourceTypeThirdArgs(nestedResourceTypeFirst, nestedResourceTypeSecond, nestedResourceTypeThird, properties, providerNamespace, resourceType, sku);
        }
    }
}
