// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.ApplicationGatewayResponse;
import io.pulumi.azurenative.network.outputs.ManagedRulesDefinitionResponse;
import io.pulumi.azurenative.network.outputs.PolicySettingsResponse;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.azurenative.network.outputs.WebApplicationFirewallCustomRuleResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetWebApplicationFirewallPolicyResult {
    /**
     * A collection of references to application gateways.
     * 
     */
    private final List<ApplicationGatewayResponse> applicationGateways;
    /**
     * The custom rules inside the policy.
     * 
     */
    private final @Nullable List<WebApplicationFirewallCustomRuleResponse> customRules;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private final String etag;
    /**
     * A collection of references to application gateway http listeners.
     * 
     */
    private final List<SubResourceResponse> httpListeners;
    /**
     * Resource ID.
     * 
     */
    private final @Nullable String id;
    /**
     * Resource location.
     * 
     */
    private final @Nullable String location;
    /**
     * Describes the managedRules structure.
     * 
     */
    private final ManagedRulesDefinitionResponse managedRules;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * A collection of references to application gateway path rules.
     * 
     */
    private final List<SubResourceResponse> pathBasedRules;
    /**
     * The PolicySettings for policy.
     * 
     */
    private final @Nullable PolicySettingsResponse policySettings;
    /**
     * The provisioning state of the web application firewall policy resource.
     * 
     */
    private final String provisioningState;
    /**
     * Resource status of the policy.
     * 
     */
    private final String resourceState;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Resource type.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor
    private GetWebApplicationFirewallPolicyResult(
        @OutputCustomType.Parameter("applicationGateways") List<ApplicationGatewayResponse> applicationGateways,
        @OutputCustomType.Parameter("customRules") @Nullable List<WebApplicationFirewallCustomRuleResponse> customRules,
        @OutputCustomType.Parameter("etag") String etag,
        @OutputCustomType.Parameter("httpListeners") List<SubResourceResponse> httpListeners,
        @OutputCustomType.Parameter("id") @Nullable String id,
        @OutputCustomType.Parameter("location") @Nullable String location,
        @OutputCustomType.Parameter("managedRules") ManagedRulesDefinitionResponse managedRules,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("pathBasedRules") List<SubResourceResponse> pathBasedRules,
        @OutputCustomType.Parameter("policySettings") @Nullable PolicySettingsResponse policySettings,
        @OutputCustomType.Parameter("provisioningState") String provisioningState,
        @OutputCustomType.Parameter("resourceState") String resourceState,
        @OutputCustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @OutputCustomType.Parameter("type") String type) {
        this.applicationGateways = applicationGateways;
        this.customRules = customRules;
        this.etag = etag;
        this.httpListeners = httpListeners;
        this.id = id;
        this.location = location;
        this.managedRules = managedRules;
        this.name = name;
        this.pathBasedRules = pathBasedRules;
        this.policySettings = policySettings;
        this.provisioningState = provisioningState;
        this.resourceState = resourceState;
        this.tags = tags;
        this.type = type;
    }

    /**
     * A collection of references to application gateways.
     * 
    */
    public List<ApplicationGatewayResponse> getApplicationGateways() {
        return this.applicationGateways;
    }
    /**
     * The custom rules inside the policy.
     * 
    */
    public List<WebApplicationFirewallCustomRuleResponse> getCustomRules() {
        return this.customRules == null ? List.of() : this.customRules;
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
    */
    public String getEtag() {
        return this.etag;
    }
    /**
     * A collection of references to application gateway http listeners.
     * 
    */
    public List<SubResourceResponse> getHttpListeners() {
        return this.httpListeners;
    }
    /**
     * Resource ID.
     * 
    */
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    /**
     * Resource location.
     * 
    */
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    /**
     * Describes the managedRules structure.
     * 
    */
    public ManagedRulesDefinitionResponse getManagedRules() {
        return this.managedRules;
    }
    /**
     * Resource name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * A collection of references to application gateway path rules.
     * 
    */
    public List<SubResourceResponse> getPathBasedRules() {
        return this.pathBasedRules;
    }
    /**
     * The PolicySettings for policy.
     * 
    */
    public Optional<PolicySettingsResponse> getPolicySettings() {
        return Optional.ofNullable(this.policySettings);
    }
    /**
     * The provisioning state of the web application firewall policy resource.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Resource status of the policy.
     * 
    */
    public String getResourceState() {
        return this.resourceState;
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Resource type.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebApplicationFirewallPolicyResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ApplicationGatewayResponse> applicationGateways;
        private @Nullable List<WebApplicationFirewallCustomRuleResponse> customRules;
        private String etag;
        private List<SubResourceResponse> httpListeners;
        private @Nullable String id;
        private @Nullable String location;
        private ManagedRulesDefinitionResponse managedRules;
        private String name;
        private List<SubResourceResponse> pathBasedRules;
        private @Nullable PolicySettingsResponse policySettings;
        private String provisioningState;
        private String resourceState;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWebApplicationFirewallPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationGateways = defaults.applicationGateways;
    	      this.customRules = defaults.customRules;
    	      this.etag = defaults.etag;
    	      this.httpListeners = defaults.httpListeners;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.managedRules = defaults.managedRules;
    	      this.name = defaults.name;
    	      this.pathBasedRules = defaults.pathBasedRules;
    	      this.policySettings = defaults.policySettings;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceState = defaults.resourceState;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setApplicationGateways(List<ApplicationGatewayResponse> applicationGateways) {
            this.applicationGateways = Objects.requireNonNull(applicationGateways);
            return this;
        }

        public Builder setCustomRules(@Nullable List<WebApplicationFirewallCustomRuleResponse> customRules) {
            this.customRules = customRules;
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setHttpListeners(List<SubResourceResponse> httpListeners) {
            this.httpListeners = Objects.requireNonNull(httpListeners);
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setManagedRules(ManagedRulesDefinitionResponse managedRules) {
            this.managedRules = Objects.requireNonNull(managedRules);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPathBasedRules(List<SubResourceResponse> pathBasedRules) {
            this.pathBasedRules = Objects.requireNonNull(pathBasedRules);
            return this;
        }

        public Builder setPolicySettings(@Nullable PolicySettingsResponse policySettings) {
            this.policySettings = policySettings;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setResourceState(String resourceState) {
            this.resourceState = Objects.requireNonNull(resourceState);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetWebApplicationFirewallPolicyResult build() {
            return new GetWebApplicationFirewallPolicyResult(applicationGateways, customRules, etag, httpListeners, id, location, managedRules, name, pathBasedRules, policySettings, provisioningState, resourceState, tags, type);
        }
    }
}
