// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hybriddata.outputs;

import io.pulumi.azurenative.hybriddata.outputs.CustomerSecretResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetDataStoreResult {
    private final @Nullable List<CustomerSecretResponse> customerSecrets;
    private final String dataStoreTypeId;
    private final @Nullable Object extendedProperties;
    private final String id;
    private final String name;
    private final @Nullable String repositoryId;
    private final String state;
    private final String type;

    @OutputCustomType.Constructor({"customerSecrets","dataStoreTypeId","extendedProperties","id","name","repositoryId","state","type"})
    private GetDataStoreResult(
        @Nullable List<CustomerSecretResponse> customerSecrets,
        String dataStoreTypeId,
        @Nullable Object extendedProperties,
        String id,
        String name,
        @Nullable String repositoryId,
        String state,
        String type) {
        this.customerSecrets = customerSecrets;
        this.dataStoreTypeId = Objects.requireNonNull(dataStoreTypeId);
        this.extendedProperties = extendedProperties;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.repositoryId = repositoryId;
        this.state = Objects.requireNonNull(state);
        this.type = Objects.requireNonNull(type);
    }

    public List<CustomerSecretResponse> getCustomerSecrets() {
        return this.customerSecrets == null ? List.of() : this.customerSecrets;
    }
    public String getDataStoreTypeId() {
        return this.dataStoreTypeId;
    }
    public Optional<Object> getExtendedProperties() {
        return Optional.ofNullable(this.extendedProperties);
    }
    public String getId() {
        return this.id;
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getRepositoryId() {
        return Optional.ofNullable(this.repositoryId);
    }
    public String getState() {
        return this.state;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataStoreResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<CustomerSecretResponse> customerSecrets;
        private String dataStoreTypeId;
        private @Nullable Object extendedProperties;
        private String id;
        private String name;
        private @Nullable String repositoryId;
        private String state;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDataStoreResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customerSecrets = defaults.customerSecrets;
    	      this.dataStoreTypeId = defaults.dataStoreTypeId;
    	      this.extendedProperties = defaults.extendedProperties;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.repositoryId = defaults.repositoryId;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
        }

        public Builder setCustomerSecrets(@Nullable List<CustomerSecretResponse> customerSecrets) {
            this.customerSecrets = customerSecrets;
            return this;
        }

        public Builder setDataStoreTypeId(String dataStoreTypeId) {
            this.dataStoreTypeId = Objects.requireNonNull(dataStoreTypeId);
            return this;
        }

        public Builder setExtendedProperties(@Nullable Object extendedProperties) {
            this.extendedProperties = extendedProperties;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRepositoryId(@Nullable String repositoryId) {
            this.repositoryId = repositoryId;
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetDataStoreResult build() {
            return new GetDataStoreResult(customerSecrets, dataStoreTypeId, extendedProperties, id, name, repositoryId, state, type);
        }
    }
}
