// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.outputs;

import io.pulumi.azurenative.datafactory.outputs.EncryptionConfigurationResponse;
import io.pulumi.azurenative.datafactory.outputs.FactoryGitHubConfigurationResponse;
import io.pulumi.azurenative.datafactory.outputs.FactoryIdentityResponse;
import io.pulumi.azurenative.datafactory.outputs.FactoryVSTSConfigurationResponse;
import io.pulumi.azurenative.datafactory.outputs.GlobalParameterSpecificationResponse;
import io.pulumi.core.Either;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetFactoryResult {
    /**
     * Time the factory was created in ISO8601 format.
     * 
     */
    private final String createTime;
    /**
     * Etag identifies change in the resource.
     * 
     */
    private final String eTag;
    /**
     * Properties to enable Customer Managed Key for the factory.
     * 
     */
    private final @Nullable EncryptionConfigurationResponse encryption;
    /**
     * List of parameters for factory.
     * 
     */
    private final @Nullable Map<String,GlobalParameterSpecificationResponse> globalParameters;
    /**
     * The resource identifier.
     * 
     */
    private final String id;
    /**
     * Managed service identity of the factory.
     * 
     */
    private final @Nullable FactoryIdentityResponse identity;
    /**
     * The resource location.
     * 
     */
    private final @Nullable String location;
    /**
     * The resource name.
     * 
     */
    private final String name;
    /**
     * Factory provisioning state, example Succeeded.
     * 
     */
    private final String provisioningState;
    /**
     * Whether or not public network access is allowed for the data factory.
     * 
     */
    private final @Nullable String publicNetworkAccess;
    /**
     * Git repo information of the factory.
     * 
     */
    private final @Nullable Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse> repoConfiguration;
    /**
     * The resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * The resource type.
     * 
     */
    private final String type;
    /**
     * Version of the factory.
     * 
     */
    private final String version;

    @OutputCustomType.Constructor
    private GetFactoryResult(
        @OutputCustomType.Parameter("createTime") String createTime,
        @OutputCustomType.Parameter("eTag") String eTag,
        @OutputCustomType.Parameter("encryption") @Nullable EncryptionConfigurationResponse encryption,
        @OutputCustomType.Parameter("globalParameters") @Nullable Map<String,GlobalParameterSpecificationResponse> globalParameters,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("identity") @Nullable FactoryIdentityResponse identity,
        @OutputCustomType.Parameter("location") @Nullable String location,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("provisioningState") String provisioningState,
        @OutputCustomType.Parameter("publicNetworkAccess") @Nullable String publicNetworkAccess,
        @OutputCustomType.Parameter("repoConfiguration") @Nullable Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse> repoConfiguration,
        @OutputCustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @OutputCustomType.Parameter("type") String type,
        @OutputCustomType.Parameter("version") String version) {
        this.createTime = createTime;
        this.eTag = eTag;
        this.encryption = encryption;
        this.globalParameters = globalParameters;
        this.id = id;
        this.identity = identity;
        this.location = location;
        this.name = name;
        this.provisioningState = provisioningState;
        this.publicNetworkAccess = publicNetworkAccess;
        this.repoConfiguration = repoConfiguration;
        this.tags = tags;
        this.type = type;
        this.version = version;
    }

    /**
     * Time the factory was created in ISO8601 format.
     * 
    */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * Etag identifies change in the resource.
     * 
    */
    public String getETag() {
        return this.eTag;
    }
    /**
     * Properties to enable Customer Managed Key for the factory.
     * 
    */
    public Optional<EncryptionConfigurationResponse> getEncryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * List of parameters for factory.
     * 
    */
    public Map<String,GlobalParameterSpecificationResponse> getGlobalParameters() {
        return this.globalParameters == null ? Map.of() : this.globalParameters;
    }
    /**
     * The resource identifier.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Managed service identity of the factory.
     * 
    */
    public Optional<FactoryIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * The resource location.
     * 
    */
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    /**
     * The resource name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Factory provisioning state, example Succeeded.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Whether or not public network access is allowed for the data factory.
     * 
    */
    public Optional<String> getPublicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    /**
     * Git repo information of the factory.
     * 
    */
    public Optional<Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse>> getRepoConfiguration() {
        return Optional.ofNullable(this.repoConfiguration);
    }
    /**
     * The resource tags.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * The resource type.
     * 
    */
    public String getType() {
        return this.type;
    }
    /**
     * Version of the factory.
     * 
    */
    public String getVersion() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFactoryResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String eTag;
        private @Nullable EncryptionConfigurationResponse encryption;
        private @Nullable Map<String,GlobalParameterSpecificationResponse> globalParameters;
        private String id;
        private @Nullable FactoryIdentityResponse identity;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private @Nullable String publicNetworkAccess;
        private @Nullable Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse> repoConfiguration;
        private @Nullable Map<String,String> tags;
        private String type;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFactoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.eTag = defaults.eTag;
    	      this.encryption = defaults.encryption;
    	      this.globalParameters = defaults.globalParameters;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.repoConfiguration = defaults.repoConfiguration;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setETag(String eTag) {
            this.eTag = Objects.requireNonNull(eTag);
            return this;
        }

        public Builder setEncryption(@Nullable EncryptionConfigurationResponse encryption) {
            this.encryption = encryption;
            return this;
        }

        public Builder setGlobalParameters(@Nullable Map<String,GlobalParameterSpecificationResponse> globalParameters) {
            this.globalParameters = globalParameters;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable FactoryIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setPublicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        public Builder setRepoConfiguration(@Nullable Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse> repoConfiguration) {
            this.repoConfiguration = repoConfiguration;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetFactoryResult build() {
            return new GetFactoryResult(createTime, eTag, encryption, globalParameters, id, identity, location, name, provisioningState, publicNetworkAccess, repoConfiguration, tags, type, version);
        }
    }
}
