// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class NamedPartitionSchemeDescriptionResponse {
    private final Integer count;
    private final List<String> names;
    private final String partitionScheme;

    @OutputCustomType.Constructor({"count","names","partitionScheme"})
    private NamedPartitionSchemeDescriptionResponse(
        Integer count,
        List<String> names,
        String partitionScheme) {
        this.count = Objects.requireNonNull(count);
        this.names = Objects.requireNonNull(names);
        this.partitionScheme = Objects.requireNonNull(partitionScheme);
    }

    public Integer getCount() {
        return this.count;
    }
    public List<String> getNames() {
        return this.names;
    }
    public String getPartitionScheme() {
        return this.partitionScheme;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NamedPartitionSchemeDescriptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer count;
        private List<String> names;
        private String partitionScheme;

        public Builder() {
    	      // Empty
        }

        public Builder(NamedPartitionSchemeDescriptionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.names = defaults.names;
    	      this.partitionScheme = defaults.partitionScheme;
        }

        public Builder setCount(Integer count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }

        public Builder setNames(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }

        public Builder setPartitionScheme(String partitionScheme) {
            this.partitionScheme = Objects.requireNonNull(partitionScheme);
            return this;
        }

        public NamedPartitionSchemeDescriptionResponse build() {
            return new NamedPartitionSchemeDescriptionResponse(count, names, partitionScheme);
        }
    }
}
