// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge.outputs;

import io.pulumi.azurenative.databoxedge.outputs.KubernetesClusterInfoResponse;
import io.pulumi.azurenative.databoxedge.outputs.KubernetesRoleResourcesResponse;
import io.pulumi.azurenative.databoxedge.outputs.SystemDataResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKubernetesRoleResult {
    /**
     * Host OS supported by the Kubernetes role.
     * 
     */
    private final String hostPlatform;
    /**
     * Platform where the runtime is hosted.
     * 
     */
    private final String hostPlatformType;
    /**
     * The path ID that uniquely identifies the object.
     * 
     */
    private final String id;
    /**
     * Role type.
     * Expected value is 'Kubernetes'.
     * 
     */
    private final String kind;
    /**
     * Kubernetes cluster configuration
     * 
     */
    private final KubernetesClusterInfoResponse kubernetesClusterInfo;
    /**
     * Kubernetes role resources
     * 
     */
    private final KubernetesRoleResourcesResponse kubernetesRoleResources;
    /**
     * The object name.
     * 
     */
    private final String name;
    /**
     * State of Kubernetes deployment
     * 
     */
    private final String provisioningState;
    /**
     * Role status.
     * 
     */
    private final String roleStatus;
    /**
     * Role configured on ASE resource
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * The hierarchical type of the object.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetKubernetesRoleResult(
        @CustomType.Parameter("hostPlatform") String hostPlatform,
        @CustomType.Parameter("hostPlatformType") String hostPlatformType,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("kind") String kind,
        @CustomType.Parameter("kubernetesClusterInfo") KubernetesClusterInfoResponse kubernetesClusterInfo,
        @CustomType.Parameter("kubernetesRoleResources") KubernetesRoleResourcesResponse kubernetesRoleResources,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("roleStatus") String roleStatus,
        @CustomType.Parameter("systemData") SystemDataResponse systemData,
        @CustomType.Parameter("type") String type) {
        this.hostPlatform = hostPlatform;
        this.hostPlatformType = hostPlatformType;
        this.id = id;
        this.kind = kind;
        this.kubernetesClusterInfo = kubernetesClusterInfo;
        this.kubernetesRoleResources = kubernetesRoleResources;
        this.name = name;
        this.provisioningState = provisioningState;
        this.roleStatus = roleStatus;
        this.systemData = systemData;
        this.type = type;
    }

    /**
     * Host OS supported by the Kubernetes role.
     * 
    */
    public String hostPlatform() {
        return this.hostPlatform;
    }
    /**
     * Platform where the runtime is hosted.
     * 
    */
    public String hostPlatformType() {
        return this.hostPlatformType;
    }
    /**
     * The path ID that uniquely identifies the object.
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * Role type.
     * Expected value is 'Kubernetes'.
     * 
    */
    public String kind() {
        return this.kind;
    }
    /**
     * Kubernetes cluster configuration
     * 
    */
    public KubernetesClusterInfoResponse kubernetesClusterInfo() {
        return this.kubernetesClusterInfo;
    }
    /**
     * Kubernetes role resources
     * 
    */
    public KubernetesRoleResourcesResponse kubernetesRoleResources() {
        return this.kubernetesRoleResources;
    }
    /**
     * The object name.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * State of Kubernetes deployment
     * 
    */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * Role status.
     * 
    */
    public String roleStatus() {
        return this.roleStatus;
    }
    /**
     * Role configured on ASE resource
     * 
    */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * The hierarchical type of the object.
     * 
    */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesRoleResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String hostPlatform;
        private String hostPlatformType;
        private String id;
        private String kind;
        private KubernetesClusterInfoResponse kubernetesClusterInfo;
        private KubernetesRoleResourcesResponse kubernetesRoleResources;
        private String name;
        private String provisioningState;
        private String roleStatus;
        private SystemDataResponse systemData;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetKubernetesRoleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostPlatform = defaults.hostPlatform;
    	      this.hostPlatformType = defaults.hostPlatformType;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.kubernetesClusterInfo = defaults.kubernetesClusterInfo;
    	      this.kubernetesRoleResources = defaults.kubernetesRoleResources;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.roleStatus = defaults.roleStatus;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        public Builder hostPlatform(String hostPlatform) {
            this.hostPlatform = Objects.requireNonNull(hostPlatform);
            return this;
        }
        public Builder hostPlatformType(String hostPlatformType) {
            this.hostPlatformType = Objects.requireNonNull(hostPlatformType);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder kubernetesClusterInfo(KubernetesClusterInfoResponse kubernetesClusterInfo) {
            this.kubernetesClusterInfo = Objects.requireNonNull(kubernetesClusterInfo);
            return this;
        }
        public Builder kubernetesRoleResources(KubernetesRoleResourcesResponse kubernetesRoleResources) {
            this.kubernetesRoleResources = Objects.requireNonNull(kubernetesRoleResources);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder roleStatus(String roleStatus) {
            this.roleStatus = Objects.requireNonNull(roleStatus);
            return this;
        }
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetKubernetesRoleResult build() {
            return new GetKubernetesRoleResult(hostPlatform, hostPlatformType, id, kind, kubernetesClusterInfo, kubernetesRoleResources, name, provisioningState, roleStatus, systemData, type);
        }
    }
}
