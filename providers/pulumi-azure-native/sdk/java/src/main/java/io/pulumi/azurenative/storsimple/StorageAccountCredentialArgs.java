// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storsimple;

import io.pulumi.azurenative.storsimple.enums.Kind;
import io.pulumi.azurenative.storsimple.enums.SslStatus;
import io.pulumi.azurenative.storsimple.inputs.AsymmetricEncryptedSecretArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StorageAccountCredentialArgs extends io.pulumi.resources.ResourceArgs {

    public static final StorageAccountCredentialArgs Empty = new StorageAccountCredentialArgs();

    /**
     * The details of the storage account password.
     * 
     */
    @InputImport(name="accessKey")
      private final @Nullable Output<AsymmetricEncryptedSecretArgs> accessKey;

    public Output<AsymmetricEncryptedSecretArgs> getAccessKey() {
        return this.accessKey == null ? Output.empty() : this.accessKey;
    }

    /**
     * The storage endpoint
     * 
     */
    @InputImport(name="endPoint", required=true)
      private final Output<String> endPoint;

    public Output<String> getEndPoint() {
        return this.endPoint;
    }

    /**
     * The Kind of the object. Currently only Series8000 is supported
     * 
     */
    @InputImport(name="kind")
      private final @Nullable Output<Kind> kind;

    public Output<Kind> getKind() {
        return this.kind == null ? Output.empty() : this.kind;
    }

    /**
     * The manager name
     * 
     */
    @InputImport(name="managerName", required=true)
      private final Output<String> managerName;

    public Output<String> getManagerName() {
        return this.managerName;
    }

    /**
     * The resource group name
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Signifies whether SSL needs to be enabled or not.
     * 
     */
    @InputImport(name="sslStatus", required=true)
      private final Output<SslStatus> sslStatus;

    public Output<SslStatus> getSslStatus() {
        return this.sslStatus;
    }

    /**
     * The storage account credential name.
     * 
     */
    @InputImport(name="storageAccountCredentialName")
      private final @Nullable Output<String> storageAccountCredentialName;

    public Output<String> getStorageAccountCredentialName() {
        return this.storageAccountCredentialName == null ? Output.empty() : this.storageAccountCredentialName;
    }

    public StorageAccountCredentialArgs(
        @Nullable Output<AsymmetricEncryptedSecretArgs> accessKey,
        Output<String> endPoint,
        @Nullable Output<Kind> kind,
        Output<String> managerName,
        Output<String> resourceGroupName,
        Output<SslStatus> sslStatus,
        @Nullable Output<String> storageAccountCredentialName) {
        this.accessKey = accessKey;
        this.endPoint = Objects.requireNonNull(endPoint, "expected parameter 'endPoint' to be non-null");
        this.kind = kind;
        this.managerName = Objects.requireNonNull(managerName, "expected parameter 'managerName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sslStatus = Objects.requireNonNull(sslStatus, "expected parameter 'sslStatus' to be non-null");
        this.storageAccountCredentialName = storageAccountCredentialName;
    }

    private StorageAccountCredentialArgs() {
        this.accessKey = Output.empty();
        this.endPoint = Output.empty();
        this.kind = Output.empty();
        this.managerName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.sslStatus = Output.empty();
        this.storageAccountCredentialName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageAccountCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AsymmetricEncryptedSecretArgs> accessKey;
        private Output<String> endPoint;
        private @Nullable Output<Kind> kind;
        private Output<String> managerName;
        private Output<String> resourceGroupName;
        private Output<SslStatus> sslStatus;
        private @Nullable Output<String> storageAccountCredentialName;

        public Builder() {
    	      // Empty
        }

        public Builder(StorageAccountCredentialArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.endPoint = defaults.endPoint;
    	      this.kind = defaults.kind;
    	      this.managerName = defaults.managerName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sslStatus = defaults.sslStatus;
    	      this.storageAccountCredentialName = defaults.storageAccountCredentialName;
        }

        public Builder accessKey(@Nullable Output<AsymmetricEncryptedSecretArgs> accessKey) {
            this.accessKey = accessKey;
            return this;
        }

        public Builder accessKey(@Nullable AsymmetricEncryptedSecretArgs accessKey) {
            this.accessKey = Output.ofNullable(accessKey);
            return this;
        }

        public Builder endPoint(Output<String> endPoint) {
            this.endPoint = Objects.requireNonNull(endPoint);
            return this;
        }

        public Builder endPoint(String endPoint) {
            this.endPoint = Output.of(Objects.requireNonNull(endPoint));
            return this;
        }

        public Builder kind(@Nullable Output<Kind> kind) {
            this.kind = kind;
            return this;
        }

        public Builder kind(@Nullable Kind kind) {
            this.kind = Output.ofNullable(kind);
            return this;
        }

        public Builder managerName(Output<String> managerName) {
            this.managerName = Objects.requireNonNull(managerName);
            return this;
        }

        public Builder managerName(String managerName) {
            this.managerName = Output.of(Objects.requireNonNull(managerName));
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder sslStatus(Output<SslStatus> sslStatus) {
            this.sslStatus = Objects.requireNonNull(sslStatus);
            return this;
        }

        public Builder sslStatus(SslStatus sslStatus) {
            this.sslStatus = Output.of(Objects.requireNonNull(sslStatus));
            return this;
        }

        public Builder storageAccountCredentialName(@Nullable Output<String> storageAccountCredentialName) {
            this.storageAccountCredentialName = storageAccountCredentialName;
            return this;
        }

        public Builder storageAccountCredentialName(@Nullable String storageAccountCredentialName) {
            this.storageAccountCredentialName = Output.ofNullable(storageAccountCredentialName);
            return this;
        }
        public StorageAccountCredentialArgs build() {
            return new StorageAccountCredentialArgs(accessKey, endPoint, kind, managerName, resourceGroupName, sslStatus, storageAccountCredentialName);
        }
    }
}
