// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.aad.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Health Alert Description
 * 
 */
public final class HealthAlertResponse extends io.pulumi.resources.InvokeArgs {

    public static final HealthAlertResponse Empty = new HealthAlertResponse();

    /**
     * Health Alert Id
     * 
     */
    @Import(name="id", required=true)
      private final String id;

    public String getId() {
        return this.id;
    }

    /**
     * Health Alert Issue
     * 
     */
    @Import(name="issue", required=true)
      private final String issue;

    public String getIssue() {
        return this.issue;
    }

    /**
     * Health Alert Last Detected DateTime
     * 
     */
    @Import(name="lastDetected", required=true)
      private final String lastDetected;

    public String getLastDetected() {
        return this.lastDetected;
    }

    /**
     * Health Alert Name
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * Health Alert Raised DateTime
     * 
     */
    @Import(name="raised", required=true)
      private final String raised;

    public String getRaised() {
        return this.raised;
    }

    /**
     * Health Alert TSG Link
     * 
     */
    @Import(name="resolutionUri", required=true)
      private final String resolutionUri;

    public String getResolutionUri() {
        return this.resolutionUri;
    }

    /**
     * Health Alert Severity
     * 
     */
    @Import(name="severity", required=true)
      private final String severity;

    public String getSeverity() {
        return this.severity;
    }

    public HealthAlertResponse(
        String id,
        String issue,
        String lastDetected,
        String name,
        String raised,
        String resolutionUri,
        String severity) {
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.issue = Objects.requireNonNull(issue, "expected parameter 'issue' to be non-null");
        this.lastDetected = Objects.requireNonNull(lastDetected, "expected parameter 'lastDetected' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.raised = Objects.requireNonNull(raised, "expected parameter 'raised' to be non-null");
        this.resolutionUri = Objects.requireNonNull(resolutionUri, "expected parameter 'resolutionUri' to be non-null");
        this.severity = Objects.requireNonNull(severity, "expected parameter 'severity' to be non-null");
    }

    private HealthAlertResponse() {
        this.id = null;
        this.issue = null;
        this.lastDetected = null;
        this.name = null;
        this.raised = null;
        this.resolutionUri = null;
        this.severity = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HealthAlertResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private String issue;
        private String lastDetected;
        private String name;
        private String raised;
        private String resolutionUri;
        private String severity;

        public Builder() {
    	      // Empty
        }

        public Builder(HealthAlertResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.issue = defaults.issue;
    	      this.lastDetected = defaults.lastDetected;
    	      this.name = defaults.name;
    	      this.raised = defaults.raised;
    	      this.resolutionUri = defaults.resolutionUri;
    	      this.severity = defaults.severity;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder issue(String issue) {
            this.issue = Objects.requireNonNull(issue);
            return this;
        }

        public Builder lastDetected(String lastDetected) {
            this.lastDetected = Objects.requireNonNull(lastDetected);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder raised(String raised) {
            this.raised = Objects.requireNonNull(raised);
            return this;
        }

        public Builder resolutionUri(String resolutionUri) {
            this.resolutionUri = Objects.requireNonNull(resolutionUri);
            return this;
        }

        public Builder severity(String severity) {
            this.severity = Objects.requireNonNull(severity);
            return this;
        }
        public HealthAlertResponse build() {
            return new HealthAlertResponse(id, issue, lastDetected, name, raised, resolutionUri, severity);
        }
    }
}
