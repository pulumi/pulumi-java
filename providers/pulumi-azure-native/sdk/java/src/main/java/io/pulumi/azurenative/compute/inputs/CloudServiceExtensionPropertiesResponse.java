// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.azurenative.compute.inputs.CloudServiceVaultAndSecretReferenceResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudServiceExtensionPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final CloudServiceExtensionPropertiesResponse Empty = new CloudServiceExtensionPropertiesResponse();

    @InputImport(name="autoUpgradeMinorVersion")
    private final @Nullable Boolean autoUpgradeMinorVersion;

    public Optional<Boolean> getAutoUpgradeMinorVersion() {
        return this.autoUpgradeMinorVersion == null ? Optional.empty() : Optional.ofNullable(this.autoUpgradeMinorVersion);
    }

    @InputImport(name="forceUpdateTag")
    private final @Nullable String forceUpdateTag;

    public Optional<String> getForceUpdateTag() {
        return this.forceUpdateTag == null ? Optional.empty() : Optional.ofNullable(this.forceUpdateTag);
    }

    @InputImport(name="protectedSettings")
    private final @Nullable String protectedSettings;

    public Optional<String> getProtectedSettings() {
        return this.protectedSettings == null ? Optional.empty() : Optional.ofNullable(this.protectedSettings);
    }

    @InputImport(name="protectedSettingsFromKeyVault")
    private final @Nullable CloudServiceVaultAndSecretReferenceResponse protectedSettingsFromKeyVault;

    public Optional<CloudServiceVaultAndSecretReferenceResponse> getProtectedSettingsFromKeyVault() {
        return this.protectedSettingsFromKeyVault == null ? Optional.empty() : Optional.ofNullable(this.protectedSettingsFromKeyVault);
    }

    @InputImport(name="provisioningState", required=true)
    private final String provisioningState;

    public String getProvisioningState() {
        return this.provisioningState;
    }

    @InputImport(name="publisher")
    private final @Nullable String publisher;

    public Optional<String> getPublisher() {
        return this.publisher == null ? Optional.empty() : Optional.ofNullable(this.publisher);
    }

    @InputImport(name="rolesAppliedTo")
    private final @Nullable List<String> rolesAppliedTo;

    public List<String> getRolesAppliedTo() {
        return this.rolesAppliedTo == null ? List.of() : this.rolesAppliedTo;
    }

    @InputImport(name="settings")
    private final @Nullable String settings;

    public Optional<String> getSettings() {
        return this.settings == null ? Optional.empty() : Optional.ofNullable(this.settings);
    }

    @InputImport(name="type")
    private final @Nullable String type;

    public Optional<String> getType() {
        return this.type == null ? Optional.empty() : Optional.ofNullable(this.type);
    }

    @InputImport(name="typeHandlerVersion")
    private final @Nullable String typeHandlerVersion;

    public Optional<String> getTypeHandlerVersion() {
        return this.typeHandlerVersion == null ? Optional.empty() : Optional.ofNullable(this.typeHandlerVersion);
    }

    public CloudServiceExtensionPropertiesResponse(
        @Nullable Boolean autoUpgradeMinorVersion,
        @Nullable String forceUpdateTag,
        @Nullable String protectedSettings,
        @Nullable CloudServiceVaultAndSecretReferenceResponse protectedSettingsFromKeyVault,
        String provisioningState,
        @Nullable String publisher,
        @Nullable List<String> rolesAppliedTo,
        @Nullable String settings,
        @Nullable String type,
        @Nullable String typeHandlerVersion) {
        this.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
        this.forceUpdateTag = forceUpdateTag;
        this.protectedSettings = protectedSettings;
        this.protectedSettingsFromKeyVault = protectedSettingsFromKeyVault;
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.publisher = publisher;
        this.rolesAppliedTo = rolesAppliedTo;
        this.settings = settings;
        this.type = type;
        this.typeHandlerVersion = typeHandlerVersion;
    }

    private CloudServiceExtensionPropertiesResponse() {
        this.autoUpgradeMinorVersion = null;
        this.forceUpdateTag = null;
        this.protectedSettings = null;
        this.protectedSettingsFromKeyVault = null;
        this.provisioningState = null;
        this.publisher = null;
        this.rolesAppliedTo = List.of();
        this.settings = null;
        this.type = null;
        this.typeHandlerVersion = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudServiceExtensionPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean autoUpgradeMinorVersion;
        private @Nullable String forceUpdateTag;
        private @Nullable String protectedSettings;
        private @Nullable CloudServiceVaultAndSecretReferenceResponse protectedSettingsFromKeyVault;
        private String provisioningState;
        private @Nullable String publisher;
        private @Nullable List<String> rolesAppliedTo;
        private @Nullable String settings;
        private @Nullable String type;
        private @Nullable String typeHandlerVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudServiceExtensionPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoUpgradeMinorVersion = defaults.autoUpgradeMinorVersion;
    	      this.forceUpdateTag = defaults.forceUpdateTag;
    	      this.protectedSettings = defaults.protectedSettings;
    	      this.protectedSettingsFromKeyVault = defaults.protectedSettingsFromKeyVault;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publisher = defaults.publisher;
    	      this.rolesAppliedTo = defaults.rolesAppliedTo;
    	      this.settings = defaults.settings;
    	      this.type = defaults.type;
    	      this.typeHandlerVersion = defaults.typeHandlerVersion;
        }

        public Builder setAutoUpgradeMinorVersion(@Nullable Boolean autoUpgradeMinorVersion) {
            this.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
            return this;
        }

        public Builder setForceUpdateTag(@Nullable String forceUpdateTag) {
            this.forceUpdateTag = forceUpdateTag;
            return this;
        }

        public Builder setProtectedSettings(@Nullable String protectedSettings) {
            this.protectedSettings = protectedSettings;
            return this;
        }

        public Builder setProtectedSettingsFromKeyVault(@Nullable CloudServiceVaultAndSecretReferenceResponse protectedSettingsFromKeyVault) {
            this.protectedSettingsFromKeyVault = protectedSettingsFromKeyVault;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setPublisher(@Nullable String publisher) {
            this.publisher = publisher;
            return this;
        }

        public Builder setRolesAppliedTo(@Nullable List<String> rolesAppliedTo) {
            this.rolesAppliedTo = rolesAppliedTo;
            return this;
        }

        public Builder setSettings(@Nullable String settings) {
            this.settings = settings;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = type;
            return this;
        }

        public Builder setTypeHandlerVersion(@Nullable String typeHandlerVersion) {
            this.typeHandlerVersion = typeHandlerVersion;
            return this;
        }

        public CloudServiceExtensionPropertiesResponse build() {
            return new CloudServiceExtensionPropertiesResponse(autoUpgradeMinorVersion, forceUpdateTag, protectedSettings, protectedSettingsFromKeyVault, provisioningState, publisher, rolesAppliedTo, settings, type, typeHandlerVersion);
        }
    }
}
