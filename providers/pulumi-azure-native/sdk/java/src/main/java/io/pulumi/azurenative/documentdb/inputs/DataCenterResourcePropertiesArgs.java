// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb.inputs;

import io.pulumi.azurenative.documentdb.enums.ManagedCassandraProvisioningState;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DataCenterResourcePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataCenterResourcePropertiesArgs Empty = new DataCenterResourcePropertiesArgs();

    @InputImport(name="base64EncodedCassandraYamlFragment")
    private final @Nullable Input<String> base64EncodedCassandraYamlFragment;

    public Input<String> getBase64EncodedCassandraYamlFragment() {
        return this.base64EncodedCassandraYamlFragment == null ? Input.empty() : this.base64EncodedCassandraYamlFragment;
    }

    @InputImport(name="dataCenterLocation")
    private final @Nullable Input<String> dataCenterLocation;

    public Input<String> getDataCenterLocation() {
        return this.dataCenterLocation == null ? Input.empty() : this.dataCenterLocation;
    }

    @InputImport(name="delegatedSubnetId")
    private final @Nullable Input<String> delegatedSubnetId;

    public Input<String> getDelegatedSubnetId() {
        return this.delegatedSubnetId == null ? Input.empty() : this.delegatedSubnetId;
    }

    @InputImport(name="nodeCount")
    private final @Nullable Input<Integer> nodeCount;

    public Input<Integer> getNodeCount() {
        return this.nodeCount == null ? Input.empty() : this.nodeCount;
    }

    @InputImport(name="provisioningState")
    private final @Nullable Input<Either<String,ManagedCassandraProvisioningState>> provisioningState;

    public Input<Either<String,ManagedCassandraProvisioningState>> getProvisioningState() {
        return this.provisioningState == null ? Input.empty() : this.provisioningState;
    }

    public DataCenterResourcePropertiesArgs(
        @Nullable Input<String> base64EncodedCassandraYamlFragment,
        @Nullable Input<String> dataCenterLocation,
        @Nullable Input<String> delegatedSubnetId,
        @Nullable Input<Integer> nodeCount,
        @Nullable Input<Either<String,ManagedCassandraProvisioningState>> provisioningState) {
        this.base64EncodedCassandraYamlFragment = base64EncodedCassandraYamlFragment;
        this.dataCenterLocation = dataCenterLocation;
        this.delegatedSubnetId = delegatedSubnetId;
        this.nodeCount = nodeCount;
        this.provisioningState = provisioningState;
    }

    private DataCenterResourcePropertiesArgs() {
        this.base64EncodedCassandraYamlFragment = Input.empty();
        this.dataCenterLocation = Input.empty();
        this.delegatedSubnetId = Input.empty();
        this.nodeCount = Input.empty();
        this.provisioningState = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataCenterResourcePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> base64EncodedCassandraYamlFragment;
        private @Nullable Input<String> dataCenterLocation;
        private @Nullable Input<String> delegatedSubnetId;
        private @Nullable Input<Integer> nodeCount;
        private @Nullable Input<Either<String,ManagedCassandraProvisioningState>> provisioningState;

        public Builder() {
    	      // Empty
        }

        public Builder(DataCenterResourcePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.base64EncodedCassandraYamlFragment = defaults.base64EncodedCassandraYamlFragment;
    	      this.dataCenterLocation = defaults.dataCenterLocation;
    	      this.delegatedSubnetId = defaults.delegatedSubnetId;
    	      this.nodeCount = defaults.nodeCount;
    	      this.provisioningState = defaults.provisioningState;
        }

        public Builder setBase64EncodedCassandraYamlFragment(@Nullable Input<String> base64EncodedCassandraYamlFragment) {
            this.base64EncodedCassandraYamlFragment = base64EncodedCassandraYamlFragment;
            return this;
        }

        public Builder setBase64EncodedCassandraYamlFragment(@Nullable String base64EncodedCassandraYamlFragment) {
            this.base64EncodedCassandraYamlFragment = Input.ofNullable(base64EncodedCassandraYamlFragment);
            return this;
        }

        public Builder setDataCenterLocation(@Nullable Input<String> dataCenterLocation) {
            this.dataCenterLocation = dataCenterLocation;
            return this;
        }

        public Builder setDataCenterLocation(@Nullable String dataCenterLocation) {
            this.dataCenterLocation = Input.ofNullable(dataCenterLocation);
            return this;
        }

        public Builder setDelegatedSubnetId(@Nullable Input<String> delegatedSubnetId) {
            this.delegatedSubnetId = delegatedSubnetId;
            return this;
        }

        public Builder setDelegatedSubnetId(@Nullable String delegatedSubnetId) {
            this.delegatedSubnetId = Input.ofNullable(delegatedSubnetId);
            return this;
        }

        public Builder setNodeCount(@Nullable Input<Integer> nodeCount) {
            this.nodeCount = nodeCount;
            return this;
        }

        public Builder setNodeCount(@Nullable Integer nodeCount) {
            this.nodeCount = Input.ofNullable(nodeCount);
            return this;
        }

        public Builder setProvisioningState(@Nullable Input<Either<String,ManagedCassandraProvisioningState>> provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }

        public Builder setProvisioningState(@Nullable Either<String,ManagedCassandraProvisioningState> provisioningState) {
            this.provisioningState = Input.ofNullable(provisioningState);
            return this;
        }

        public DataCenterResourcePropertiesArgs build() {
            return new DataCenterResourcePropertiesArgs(base64EncodedCassandraYamlFragment, dataCenterLocation, delegatedSubnetId, nodeCount, provisioningState);
        }
    }
}
