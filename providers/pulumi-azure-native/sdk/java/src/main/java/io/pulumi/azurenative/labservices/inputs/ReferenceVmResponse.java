// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.labservices.inputs;

import io.pulumi.azurenative.labservices.inputs.VmStateDetailsResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details of a Reference Vm
 * 
 */
public final class ReferenceVmResponse extends io.pulumi.resources.InvokeArgs {

    public static final ReferenceVmResponse Empty = new ReferenceVmResponse();

    /**
     * The password of the virtual machine. This will be set to null in GET resource API
     * 
     */
    @InputImport(name="password")
    private final @Nullable String password;

    public Optional<String> getPassword() {
        return this.password == null ? Optional.empty() : Optional.ofNullable(this.password);
    }

    /**
     * The username of the virtual machine
     * 
     */
    @InputImport(name="userName", required=true)
    private final String userName;

    public String getUserName() {
        return this.userName;
    }

    /**
     * VM resource Id for the environment
     * 
     */
    @InputImport(name="vmResourceId", required=true)
    private final String vmResourceId;

    public String getVmResourceId() {
        return this.vmResourceId;
    }

    /**
     * The state details for the reference virtual machine.
     * 
     */
    @InputImport(name="vmStateDetails", required=true)
    private final VmStateDetailsResponse vmStateDetails;

    public VmStateDetailsResponse getVmStateDetails() {
        return this.vmStateDetails;
    }

    public ReferenceVmResponse(
        @Nullable String password,
        String userName,
        String vmResourceId,
        VmStateDetailsResponse vmStateDetails) {
        this.password = password;
        this.userName = Objects.requireNonNull(userName, "expected parameter 'userName' to be non-null");
        this.vmResourceId = Objects.requireNonNull(vmResourceId, "expected parameter 'vmResourceId' to be non-null");
        this.vmStateDetails = Objects.requireNonNull(vmStateDetails, "expected parameter 'vmStateDetails' to be non-null");
    }

    private ReferenceVmResponse() {
        this.password = null;
        this.userName = null;
        this.vmResourceId = null;
        this.vmStateDetails = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReferenceVmResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String password;
        private String userName;
        private String vmResourceId;
        private VmStateDetailsResponse vmStateDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(ReferenceVmResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.userName = defaults.userName;
    	      this.vmResourceId = defaults.vmResourceId;
    	      this.vmStateDetails = defaults.vmStateDetails;
        }

        public Builder setPassword(@Nullable String password) {
            this.password = password;
            return this;
        }

        public Builder setUserName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }

        public Builder setVmResourceId(String vmResourceId) {
            this.vmResourceId = Objects.requireNonNull(vmResourceId);
            return this;
        }

        public Builder setVmStateDetails(VmStateDetailsResponse vmStateDetails) {
            this.vmStateDetails = Objects.requireNonNull(vmStateDetails);
            return this;
        }

        public ReferenceVmResponse build() {
            return new ReferenceVmResponse(password, userName, vmResourceId, vmStateDetails);
        }
    }
}
