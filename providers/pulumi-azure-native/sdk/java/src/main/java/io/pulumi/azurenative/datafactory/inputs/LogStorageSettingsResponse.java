// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * (Deprecated. Please use LogSettings) Log storage settings.
 * 
 */
public final class LogStorageSettingsResponse extends io.pulumi.resources.InvokeArgs {

    public static final LogStorageSettingsResponse Empty = new LogStorageSettingsResponse();

    /**
     * Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).
     * 
     */
    @InputImport(name="enableReliableLogging")
    private final @Nullable Object enableReliableLogging;

    public Optional<Object> getEnableReliableLogging() {
        return this.enableReliableLogging == null ? Optional.empty() : Optional.ofNullable(this.enableReliableLogging);
    }

    /**
     * Log storage linked service reference.
     * 
     */
    @InputImport(name="linkedServiceName", required=true)
    private final LinkedServiceReferenceResponse linkedServiceName;

    public LinkedServiceReferenceResponse getLinkedServiceName() {
        return this.linkedServiceName;
    }

    /**
     * Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).
     * 
     */
    @InputImport(name="logLevel")
    private final @Nullable Object logLevel;

    public Optional<Object> getLogLevel() {
        return this.logLevel == null ? Optional.empty() : Optional.ofNullable(this.logLevel);
    }

    /**
     * The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).
     * 
     */
    @InputImport(name="path")
    private final @Nullable Object path;

    public Optional<Object> getPath() {
        return this.path == null ? Optional.empty() : Optional.ofNullable(this.path);
    }

    public LogStorageSettingsResponse(
        @Nullable Object enableReliableLogging,
        LinkedServiceReferenceResponse linkedServiceName,
        @Nullable Object logLevel,
        @Nullable Object path) {
        this.enableReliableLogging = enableReliableLogging;
        this.linkedServiceName = Objects.requireNonNull(linkedServiceName, "expected parameter 'linkedServiceName' to be non-null");
        this.logLevel = logLevel;
        this.path = path;
    }

    private LogStorageSettingsResponse() {
        this.enableReliableLogging = null;
        this.linkedServiceName = null;
        this.logLevel = null;
        this.path = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogStorageSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Object enableReliableLogging;
        private LinkedServiceReferenceResponse linkedServiceName;
        private @Nullable Object logLevel;
        private @Nullable Object path;

        public Builder() {
    	      // Empty
        }

        public Builder(LogStorageSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableReliableLogging = defaults.enableReliableLogging;
    	      this.linkedServiceName = defaults.linkedServiceName;
    	      this.logLevel = defaults.logLevel;
    	      this.path = defaults.path;
        }

        public Builder setEnableReliableLogging(@Nullable Object enableReliableLogging) {
            this.enableReliableLogging = enableReliableLogging;
            return this;
        }

        public Builder setLinkedServiceName(LinkedServiceReferenceResponse linkedServiceName) {
            this.linkedServiceName = Objects.requireNonNull(linkedServiceName);
            return this;
        }

        public Builder setLogLevel(@Nullable Object logLevel) {
            this.logLevel = logLevel;
            return this;
        }

        public Builder setPath(@Nullable Object path) {
            this.path = path;
            return this;
        }

        public LogStorageSettingsResponse build() {
            return new LogStorageSettingsResponse(enableReliableLogging, linkedServiceName, logLevel, path);
        }
    }
}
