// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.enums.IPAllocationMethod;
import io.pulumi.azurenative.network.inputs.SubResourceArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * IP configuration of an Bastion Host.
 * 
 */
public final class BastionHostIPConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final BastionHostIPConfigurationArgs Empty = new BastionHostIPConfigurationArgs();

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * Name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Private IP allocation method.
     * 
     */
    @Import(name="privateIPAllocationMethod")
      private final @Nullable Output<Either<String,IPAllocationMethod>> privateIPAllocationMethod;

    public Output<Either<String,IPAllocationMethod>> privateIPAllocationMethod() {
        return this.privateIPAllocationMethod == null ? Codegen.empty() : this.privateIPAllocationMethod;
    }

    /**
     * Reference of the PublicIP resource.
     * 
     */
    @Import(name="publicIPAddress", required=true)
      private final Output<SubResourceArgs> publicIPAddress;

    public Output<SubResourceArgs> publicIPAddress() {
        return this.publicIPAddress;
    }

    /**
     * Reference of the subnet resource.
     * 
     */
    @Import(name="subnet", required=true)
      private final Output<SubResourceArgs> subnet;

    public Output<SubResourceArgs> subnet() {
        return this.subnet;
    }

    public BastionHostIPConfigurationArgs(
        @Nullable Output<String> id,
        @Nullable Output<String> name,
        @Nullable Output<Either<String,IPAllocationMethod>> privateIPAllocationMethod,
        Output<SubResourceArgs> publicIPAddress,
        Output<SubResourceArgs> subnet) {
        this.id = id;
        this.name = name;
        this.privateIPAllocationMethod = privateIPAllocationMethod;
        this.publicIPAddress = Objects.requireNonNull(publicIPAddress, "expected parameter 'publicIPAddress' to be non-null");
        this.subnet = Objects.requireNonNull(subnet, "expected parameter 'subnet' to be non-null");
    }

    private BastionHostIPConfigurationArgs() {
        this.id = Codegen.empty();
        this.name = Codegen.empty();
        this.privateIPAllocationMethod = Codegen.empty();
        this.publicIPAddress = Codegen.empty();
        this.subnet = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BastionHostIPConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> id;
        private @Nullable Output<String> name;
        private @Nullable Output<Either<String,IPAllocationMethod>> privateIPAllocationMethod;
        private Output<SubResourceArgs> publicIPAddress;
        private Output<SubResourceArgs> subnet;

        public Builder() {
    	      // Empty
        }

        public Builder(BastionHostIPConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.privateIPAllocationMethod = defaults.privateIPAllocationMethod;
    	      this.publicIPAddress = defaults.publicIPAddress;
    	      this.subnet = defaults.subnet;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder privateIPAllocationMethod(@Nullable Output<Either<String,IPAllocationMethod>> privateIPAllocationMethod) {
            this.privateIPAllocationMethod = privateIPAllocationMethod;
            return this;
        }
        public Builder privateIPAllocationMethod(@Nullable Either<String,IPAllocationMethod> privateIPAllocationMethod) {
            this.privateIPAllocationMethod = Codegen.ofNullable(privateIPAllocationMethod);
            return this;
        }
        public Builder publicIPAddress(Output<SubResourceArgs> publicIPAddress) {
            this.publicIPAddress = Objects.requireNonNull(publicIPAddress);
            return this;
        }
        public Builder publicIPAddress(SubResourceArgs publicIPAddress) {
            this.publicIPAddress = Output.of(Objects.requireNonNull(publicIPAddress));
            return this;
        }
        public Builder subnet(Output<SubResourceArgs> subnet) {
            this.subnet = Objects.requireNonNull(subnet);
            return this;
        }
        public Builder subnet(SubResourceArgs subnet) {
            this.subnet = Output.of(Objects.requireNonNull(subnet));
            return this;
        }        public BastionHostIPConfigurationArgs build() {
            return new BastionHostIPConfigurationArgs(id, name, privateIPAllocationMethod, publicIPAddress, subnet);
        }
    }
}
