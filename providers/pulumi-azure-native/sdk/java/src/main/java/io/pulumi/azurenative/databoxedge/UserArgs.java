// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge;

import io.pulumi.azurenative.databoxedge.enums.UserType;
import io.pulumi.azurenative.databoxedge.inputs.AsymmetricEncryptedSecretArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserArgs extends io.pulumi.resources.ResourceArgs {

    public static final UserArgs Empty = new UserArgs();

    /**
     * The device name.
     * 
     */
    @InputImport(name="deviceName", required=true)
      private final Output<String> deviceName;

    public Output<String> getDeviceName() {
        return this.deviceName;
    }

    /**
     * The password details.
     * 
     */
    @InputImport(name="encryptedPassword")
      private final @Nullable Output<AsymmetricEncryptedSecretArgs> encryptedPassword;

    public Output<AsymmetricEncryptedSecretArgs> getEncryptedPassword() {
        return this.encryptedPassword == null ? Output.empty() : this.encryptedPassword;
    }

    /**
     * The user name.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The resource group name.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Type of the user.
     * 
     */
    @InputImport(name="userType", required=true)
      private final Output<Either<String,UserType>> userType;

    public Output<Either<String,UserType>> getUserType() {
        return this.userType;
    }

    public UserArgs(
        Output<String> deviceName,
        @Nullable Output<AsymmetricEncryptedSecretArgs> encryptedPassword,
        @Nullable Output<String> name,
        Output<String> resourceGroupName,
        Output<Either<String,UserType>> userType) {
        this.deviceName = Objects.requireNonNull(deviceName, "expected parameter 'deviceName' to be non-null");
        this.encryptedPassword = encryptedPassword;
        this.name = name;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.userType = Objects.requireNonNull(userType, "expected parameter 'userType' to be non-null");
    }

    private UserArgs() {
        this.deviceName = Output.empty();
        this.encryptedPassword = Output.empty();
        this.name = Output.empty();
        this.resourceGroupName = Output.empty();
        this.userType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> deviceName;
        private @Nullable Output<AsymmetricEncryptedSecretArgs> encryptedPassword;
        private @Nullable Output<String> name;
        private Output<String> resourceGroupName;
        private Output<Either<String,UserType>> userType;

        public Builder() {
    	      // Empty
        }

        public Builder(UserArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceName = defaults.deviceName;
    	      this.encryptedPassword = defaults.encryptedPassword;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.userType = defaults.userType;
        }

        public Builder deviceName(Output<String> deviceName) {
            this.deviceName = Objects.requireNonNull(deviceName);
            return this;
        }

        public Builder deviceName(String deviceName) {
            this.deviceName = Output.of(Objects.requireNonNull(deviceName));
            return this;
        }

        public Builder encryptedPassword(@Nullable Output<AsymmetricEncryptedSecretArgs> encryptedPassword) {
            this.encryptedPassword = encryptedPassword;
            return this;
        }

        public Builder encryptedPassword(@Nullable AsymmetricEncryptedSecretArgs encryptedPassword) {
            this.encryptedPassword = Output.ofNullable(encryptedPassword);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder userType(Output<Either<String,UserType>> userType) {
            this.userType = Objects.requireNonNull(userType);
            return this;
        }

        public Builder userType(Either<String,UserType> userType) {
            this.userType = Output.of(Objects.requireNonNull(userType));
            return this;
        }
        public UserArgs build() {
            return new UserArgs(deviceName, encryptedPassword, name, resourceGroupName, userType);
        }
    }
}
