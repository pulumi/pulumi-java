// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A rule metric data source. The discriminator value is always RuleMetricDataSource in this case.
 * 
 */
public final class RuleMetricDataSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final RuleMetricDataSourceArgs Empty = new RuleMetricDataSourceArgs();

    /**
     * the legacy resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.
     * 
     */
    @InputImport(name="legacyResourceId")
    private final @Nullable Input<String> legacyResourceId;

    public Input<String> getLegacyResourceId() {
        return this.legacyResourceId == null ? Input.empty() : this.legacyResourceId;
    }

    /**
     * the name of the metric that defines what the rule monitors.
     * 
     */
    @InputImport(name="metricName")
    private final @Nullable Input<String> metricName;

    public Input<String> getMetricName() {
        return this.metricName == null ? Input.empty() : this.metricName;
    }

    /**
     * the namespace of the metric.
     * 
     */
    @InputImport(name="metricNamespace")
    private final @Nullable Input<String> metricNamespace;

    public Input<String> getMetricNamespace() {
        return this.metricNamespace == null ? Input.empty() : this.metricNamespace;
    }

    /**
     * specifies the type of data source. There are two types of rule data sources: RuleMetricDataSource and RuleManagementEventDataSource
     * Expected value is 'Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource'.
     * 
     */
    @InputImport(name="odataType", required=true)
    private final Input<String> odataType;

    public Input<String> getOdataType() {
        return this.odataType;
    }

    /**
     * the location of the resource.
     * 
     */
    @InputImport(name="resourceLocation")
    private final @Nullable Input<String> resourceLocation;

    public Input<String> getResourceLocation() {
        return this.resourceLocation == null ? Input.empty() : this.resourceLocation;
    }

    /**
     * the resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.
     * 
     */
    @InputImport(name="resourceUri")
    private final @Nullable Input<String> resourceUri;

    public Input<String> getResourceUri() {
        return this.resourceUri == null ? Input.empty() : this.resourceUri;
    }

    public RuleMetricDataSourceArgs(
        @Nullable Input<String> legacyResourceId,
        @Nullable Input<String> metricName,
        @Nullable Input<String> metricNamespace,
        Input<String> odataType,
        @Nullable Input<String> resourceLocation,
        @Nullable Input<String> resourceUri) {
        this.legacyResourceId = legacyResourceId;
        this.metricName = metricName;
        this.metricNamespace = metricNamespace;
        this.odataType = Objects.requireNonNull(odataType, "expected parameter 'odataType' to be non-null");
        this.resourceLocation = resourceLocation;
        this.resourceUri = resourceUri;
    }

    private RuleMetricDataSourceArgs() {
        this.legacyResourceId = Input.empty();
        this.metricName = Input.empty();
        this.metricNamespace = Input.empty();
        this.odataType = Input.empty();
        this.resourceLocation = Input.empty();
        this.resourceUri = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleMetricDataSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> legacyResourceId;
        private @Nullable Input<String> metricName;
        private @Nullable Input<String> metricNamespace;
        private Input<String> odataType;
        private @Nullable Input<String> resourceLocation;
        private @Nullable Input<String> resourceUri;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleMetricDataSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.legacyResourceId = defaults.legacyResourceId;
    	      this.metricName = defaults.metricName;
    	      this.metricNamespace = defaults.metricNamespace;
    	      this.odataType = defaults.odataType;
    	      this.resourceLocation = defaults.resourceLocation;
    	      this.resourceUri = defaults.resourceUri;
        }

        public Builder setLegacyResourceId(@Nullable Input<String> legacyResourceId) {
            this.legacyResourceId = legacyResourceId;
            return this;
        }

        public Builder setLegacyResourceId(@Nullable String legacyResourceId) {
            this.legacyResourceId = Input.ofNullable(legacyResourceId);
            return this;
        }

        public Builder setMetricName(@Nullable Input<String> metricName) {
            this.metricName = metricName;
            return this;
        }

        public Builder setMetricName(@Nullable String metricName) {
            this.metricName = Input.ofNullable(metricName);
            return this;
        }

        public Builder setMetricNamespace(@Nullable Input<String> metricNamespace) {
            this.metricNamespace = metricNamespace;
            return this;
        }

        public Builder setMetricNamespace(@Nullable String metricNamespace) {
            this.metricNamespace = Input.ofNullable(metricNamespace);
            return this;
        }

        public Builder setOdataType(Input<String> odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }

        public Builder setOdataType(String odataType) {
            this.odataType = Input.of(Objects.requireNonNull(odataType));
            return this;
        }

        public Builder setResourceLocation(@Nullable Input<String> resourceLocation) {
            this.resourceLocation = resourceLocation;
            return this;
        }

        public Builder setResourceLocation(@Nullable String resourceLocation) {
            this.resourceLocation = Input.ofNullable(resourceLocation);
            return this;
        }

        public Builder setResourceUri(@Nullable Input<String> resourceUri) {
            this.resourceUri = resourceUri;
            return this;
        }

        public Builder setResourceUri(@Nullable String resourceUri) {
            this.resourceUri = Input.ofNullable(resourceUri);
            return this;
        }

        public RuleMetricDataSourceArgs build() {
            return new RuleMetricDataSourceArgs(legacyResourceId, metricName, metricNamespace, odataType, resourceLocation, resourceUri);
        }
    }
}
