// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.eventgrid;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainTopicArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainTopicArgs Empty = new DomainTopicArgs();

    /**
     * Name of the domain.
     * 
     */
    @InputImport(name="domainName", required=true)
    private final Input<String> domainName;

    public Input<String> getDomainName() {
        return this.domainName;
    }

    /**
     * Name of the domain topic.
     * 
     */
    @InputImport(name="domainTopicName")
    private final @Nullable Input<String> domainTopicName;

    public Input<String> getDomainTopicName() {
        return this.domainTopicName == null ? Input.empty() : this.domainTopicName;
    }

    /**
     * The name of the resource group within the user's subscription.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public DomainTopicArgs(
        Input<String> domainName,
        @Nullable Input<String> domainTopicName,
        Input<String> resourceGroupName) {
        this.domainName = Objects.requireNonNull(domainName, "expected parameter 'domainName' to be non-null");
        this.domainTopicName = domainTopicName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private DomainTopicArgs() {
        this.domainName = Input.empty();
        this.domainTopicName = Input.empty();
        this.resourceGroupName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> domainName;
        private @Nullable Input<String> domainTopicName;
        private Input<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainTopicArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.domainTopicName = defaults.domainTopicName;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder setDomainName(Input<String> domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }

        public Builder setDomainName(String domainName) {
            this.domainName = Input.of(Objects.requireNonNull(domainName));
            return this;
        }

        public Builder setDomainTopicName(@Nullable Input<String> domainTopicName) {
            this.domainTopicName = domainTopicName;
            return this;
        }

        public Builder setDomainTopicName(@Nullable String domainTopicName) {
            this.domainTopicName = Input.ofNullable(domainTopicName);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public DomainTopicArgs build() {
            return new DomainTopicArgs(domainName, domainTopicName, resourceGroupName);
        }
    }
}
