// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.recoveryservices.outputs.AzureFileShareProtectionPolicyResponse;
import io.pulumi.azurenative.recoveryservices.outputs.AzureIaaSVMProtectionPolicyResponse;
import io.pulumi.azurenative.recoveryservices.outputs.AzureSqlProtectionPolicyResponse;
import io.pulumi.azurenative.recoveryservices.outputs.AzureVmWorkloadProtectionPolicyResponse;
import io.pulumi.azurenative.recoveryservices.outputs.GenericProtectionPolicyResponse;
import io.pulumi.azurenative.recoveryservices.outputs.MabProtectionPolicyResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Base class for backup policy. Workload-specific backup policies are derived from this class.
API Version: 2021-02-01.

{{% examples %}}
## Example Usage
{{% example %}}
### Create or Update Full Azure Vm Protection Policy
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var protectionPolicy = new AzureNative.RecoveryServices.ProtectionPolicy("protectionPolicy", new AzureNative.RecoveryServices.ProtectionPolicyArgs
        {
            PolicyName = "testPolicy1",
            Properties = new AzureNative.RecoveryServices.Inputs.AzureIaaSVMProtectionPolicyArgs
            {
                BackupManagementType = "AzureIaasVM",
                RetentionPolicy = new AzureNative.RecoveryServices.Inputs.LongTermRetentionPolicyArgs
                {
                    MonthlySchedule = new AzureNative.RecoveryServices.Inputs.MonthlyRetentionScheduleArgs
                    {
                        RetentionDuration = new AzureNative.RecoveryServices.Inputs.RetentionDurationArgs
                        {
                            Count = 2,
                            DurationType = "Months",
                        },
                        RetentionScheduleFormatType = "Weekly",
                        RetentionScheduleWeekly = new AzureNative.RecoveryServices.Inputs.WeeklyRetentionFormatArgs
                        {
                            DaysOfTheWeek = 
                            {
                                "Wednesday",
                                "Thursday",
                            },
                            WeeksOfTheMonth = 
                            {
                                "First",
                                "Third",
                            },
                        },
                        RetentionTimes = 
                        {
                            "2018-01-24T10:00:00Z",
                        },
                    },
                    RetentionPolicyType = "LongTermRetentionPolicy",
                    WeeklySchedule = new AzureNative.RecoveryServices.Inputs.WeeklyRetentionScheduleArgs
                    {
                        DaysOfTheWeek = 
                        {
                            "Monday",
                            "Wednesday",
                            "Thursday",
                        },
                        RetentionDuration = new AzureNative.RecoveryServices.Inputs.RetentionDurationArgs
                        {
                            Count = 1,
                            DurationType = "Weeks",
                        },
                        RetentionTimes = 
                        {
                            "2018-01-24T10:00:00Z",
                        },
                    },
                    YearlySchedule = new AzureNative.RecoveryServices.Inputs.YearlyRetentionScheduleArgs
                    {
                        MonthsOfYear = 
                        {
                            "February",
                            "November",
                        },
                        RetentionDuration = new AzureNative.RecoveryServices.Inputs.RetentionDurationArgs
                        {
                            Count = 4,
                            DurationType = "Years",
                        },
                        RetentionScheduleFormatType = "Weekly",
                        RetentionScheduleWeekly = new AzureNative.RecoveryServices.Inputs.WeeklyRetentionFormatArgs
                        {
                            DaysOfTheWeek = 
                            {
                                "Monday",
                                "Thursday",
                            },
                            WeeksOfTheMonth = 
                            {
                                "Fourth",
                            },
                        },
                        RetentionTimes = 
                        {
                            "2018-01-24T10:00:00Z",
                        },
                    },
                },
                SchedulePolicy = new AzureNative.RecoveryServices.Inputs.SimpleSchedulePolicyArgs
                {
                    SchedulePolicyType = "SimpleSchedulePolicy",
                    ScheduleRunDays = 
                    {
                        "Monday",
                        "Wednesday",
                        "Thursday",
                    },
                    ScheduleRunFrequency = "Weekly",
                    ScheduleRunTimes = 
                    {
                        "2018-01-24T10:00:00Z",
                    },
                },
                TimeZone = "Pacific Standard Time",
            },
            ResourceGroupName = "SwaggerTestRg",
            VaultName = "NetSDKTestRsVault",
        });
    }

}

```

```go
package main

import (
	recoveryservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/recoveryservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := recoveryservices.NewProtectionPolicy(ctx, "protectionPolicy", &recoveryservices.ProtectionPolicyArgs{
			PolicyName: pulumi.String("testPolicy1"),
			Properties: recoveryservices.AzureIaaSVMProtectionPolicy{
				BackupManagementType: "AzureIaasVM",
				RetentionPolicy: recoveryservices.LongTermRetentionPolicy{
					MonthlySchedule: recoveryservices.MonthlyRetentionSchedule{
						RetentionDuration: recoveryservices.RetentionDuration{
							Count:        2,
							DurationType: "Months",
						},
						RetentionScheduleFormatType: "Weekly",
						RetentionScheduleWeekly: recoveryservices.WeeklyRetentionFormat{
							DaysOfTheWeek: []string{
								"Wednesday",
								"Thursday",
							},
							WeeksOfTheMonth: []string{
								"First",
								"Third",
							},
						},
						RetentionTimes: []string{
							"2018-01-24T10:00:00Z",
						},
					},
					RetentionPolicyType: "LongTermRetentionPolicy",
					WeeklySchedule: recoveryservices.WeeklyRetentionSchedule{
						DaysOfTheWeek: []string{
							"Monday",
							"Wednesday",
							"Thursday",
						},
						RetentionDuration: recoveryservices.RetentionDuration{
							Count:        1,
							DurationType: "Weeks",
						},
						RetentionTimes: []string{
							"2018-01-24T10:00:00Z",
						},
					},
					YearlySchedule: recoveryservices.YearlyRetentionSchedule{
						MonthsOfYear: []string{
							"February",
							"November",
						},
						RetentionDuration: recoveryservices.RetentionDuration{
							Count:        4,
							DurationType: "Years",
						},
						RetentionScheduleFormatType: "Weekly",
						RetentionScheduleWeekly: recoveryservices.WeeklyRetentionFormat{
							DaysOfTheWeek: []string{
								"Monday",
								"Thursday",
							},
							WeeksOfTheMonth: []string{
								"Fourth",
							},
						},
						RetentionTimes: []string{
							"2018-01-24T10:00:00Z",
						},
					},
				},
				SchedulePolicy: recoveryservices.SimpleSchedulePolicy{
					SchedulePolicyType: "SimpleSchedulePolicy",
					ScheduleRunDays: []string{
						"Monday",
						"Wednesday",
						"Thursday",
					},
					ScheduleRunFrequency: "Weekly",
					ScheduleRunTimes: []string{
						"2018-01-24T10:00:00Z",
					},
				},
				TimeZone: "Pacific Standard Time",
			},
			ResourceGroupName: pulumi.String("SwaggerTestRg"),
			VaultName:         pulumi.String("NetSDKTestRsVault"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const protectionPolicy = new azure_native.recoveryservices.ProtectionPolicy("protectionPolicy", {
    policyName: "testPolicy1",
    properties: {
        backupManagementType: "AzureIaasVM",
        retentionPolicy: {
            monthlySchedule: {
                retentionDuration: {
                    count: 2,
                    durationType: "Months",
                },
                retentionScheduleFormatType: "Weekly",
                retentionScheduleWeekly: {
                    daysOfTheWeek: [
                        "Wednesday",
                        "Thursday",
                    ],
                    weeksOfTheMonth: [
                        "First",
                        "Third",
                    ],
                },
                retentionTimes: ["2018-01-24T10:00:00Z"],
            },
            retentionPolicyType: "LongTermRetentionPolicy",
            weeklySchedule: {
                daysOfTheWeek: [
                    "Monday",
                    "Wednesday",
                    "Thursday",
                ],
                retentionDuration: {
                    count: 1,
                    durationType: "Weeks",
                },
                retentionTimes: ["2018-01-24T10:00:00Z"],
            },
            yearlySchedule: {
                monthsOfYear: [
                    "February",
                    "November",
                ],
                retentionDuration: {
                    count: 4,
                    durationType: "Years",
                },
                retentionScheduleFormatType: "Weekly",
                retentionScheduleWeekly: {
                    daysOfTheWeek: [
                        "Monday",
                        "Thursday",
                    ],
                    weeksOfTheMonth: ["Fourth"],
                },
                retentionTimes: ["2018-01-24T10:00:00Z"],
            },
        },
        schedulePolicy: {
            schedulePolicyType: "SimpleSchedulePolicy",
            scheduleRunDays: [
                "Monday",
                "Wednesday",
                "Thursday",
            ],
            scheduleRunFrequency: "Weekly",
            scheduleRunTimes: ["2018-01-24T10:00:00Z"],
        },
        timeZone: "Pacific Standard Time",
    },
    resourceGroupName: "SwaggerTestRg",
    vaultName: "NetSDKTestRsVault",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

protection_policy = azure_native.recoveryservices.ProtectionPolicy("protectionPolicy",
    policy_name="testPolicy1",
    properties=azure_native.recoveryservices.AzureIaaSVMProtectionPolicyArgs(
        backup_management_type="AzureIaasVM",
        retention_policy=azure_native.recoveryservices.LongTermRetentionPolicyArgs(
            monthly_schedule=azure_native.recoveryservices.MonthlyRetentionScheduleArgs(
                retention_duration=azure_native.recoveryservices.RetentionDurationArgs(
                    count=2,
                    duration_type="Months",
                ),
                retention_schedule_format_type="Weekly",
                retention_schedule_weekly=azure_native.recoveryservices.WeeklyRetentionFormatArgs(
                    days_of_the_week=[
                        "Wednesday",
                        "Thursday",
                    ],
                    weeks_of_the_month=[
                        "First",
                        "Third",
                    ],
                ),
                retention_times=["2018-01-24T10:00:00Z"],
            ),
            retention_policy_type="LongTermRetentionPolicy",
            weekly_schedule=azure_native.recoveryservices.WeeklyRetentionScheduleArgs(
                days_of_the_week=[
                    "Monday",
                    "Wednesday",
                    "Thursday",
                ],
                retention_duration=azure_native.recoveryservices.RetentionDurationArgs(
                    count=1,
                    duration_type="Weeks",
                ),
                retention_times=["2018-01-24T10:00:00Z"],
            ),
            yearly_schedule=azure_native.recoveryservices.YearlyRetentionScheduleArgs(
                months_of_year=[
                    "February",
                    "November",
                ],
                retention_duration=azure_native.recoveryservices.RetentionDurationArgs(
                    count=4,
                    duration_type="Years",
                ),
                retention_schedule_format_type="Weekly",
                retention_schedule_weekly=azure_native.recoveryservices.WeeklyRetentionFormatArgs(
                    days_of_the_week=[
                        "Monday",
                        "Thursday",
                    ],
                    weeks_of_the_month=["Fourth"],
                ),
                retention_times=["2018-01-24T10:00:00Z"],
            ),
        ),
        schedule_policy=azure_native.recoveryservices.SimpleSchedulePolicyArgs(
            schedule_policy_type="SimpleSchedulePolicy",
            schedule_run_days=[
                "Monday",
                "Wednesday",
                "Thursday",
            ],
            schedule_run_frequency="Weekly",
            schedule_run_times=["2018-01-24T10:00:00Z"],
        ),
        time_zone="Pacific Standard Time",
    ),
    resource_group_name="SwaggerTestRg",
    vault_name="NetSDKTestRsVault")

```

{{% /example %}}
{{% example %}}
### Create or Update Full Azure Workload Protection Policy
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var protectionPolicy = new AzureNative.RecoveryServices.ProtectionPolicy("protectionPolicy", new AzureNative.RecoveryServices.ProtectionPolicyArgs
        {
            PolicyName = "testPolicy1",
            Properties = new AzureNative.RecoveryServices.Inputs.AzureVmWorkloadProtectionPolicyArgs
            {
                BackupManagementType = "AzureWorkload",
                Settings = new AzureNative.RecoveryServices.Inputs.SettingsArgs
                {
                    Issqlcompression = false,
                    TimeZone = "Pacific Standard Time",
                },
                SubProtectionPolicy = 
                {
                    new AzureNative.RecoveryServices.Inputs.SubProtectionPolicyArgs
                    {
                        PolicyType = "Full",
                        RetentionPolicy = new AzureNative.RecoveryServices.Inputs.LongTermRetentionPolicyArgs
                        {
                            MonthlySchedule = new AzureNative.RecoveryServices.Inputs.MonthlyRetentionScheduleArgs
                            {
                                RetentionDuration = new AzureNative.RecoveryServices.Inputs.RetentionDurationArgs
                                {
                                    Count = 1,
                                    DurationType = "Months",
                                },
                                RetentionScheduleFormatType = "Weekly",
                                RetentionScheduleWeekly = new AzureNative.RecoveryServices.Inputs.WeeklyRetentionFormatArgs
                                {
                                    DaysOfTheWeek = 
                                    {
                                        "Sunday",
                                    },
                                    WeeksOfTheMonth = 
                                    {
                                        "Second",
                                    },
                                },
                                RetentionTimes = 
                                {
                                    "2018-01-24T10:00:00Z",
                                },
                            },
                            RetentionPolicyType = "LongTermRetentionPolicy",
                            WeeklySchedule = new AzureNative.RecoveryServices.Inputs.WeeklyRetentionScheduleArgs
                            {
                                DaysOfTheWeek = 
                                {
                                    "Sunday",
                                    "Tuesday",
                                },
                                RetentionDuration = new AzureNative.RecoveryServices.Inputs.RetentionDurationArgs
                                {
                                    Count = 2,
                                    DurationType = "Weeks",
                                },
                                RetentionTimes = 
                                {
                                    "2018-01-24T10:00:00Z",
                                },
                            },
                            YearlySchedule = new AzureNative.RecoveryServices.Inputs.YearlyRetentionScheduleArgs
                            {
                                MonthsOfYear = 
                                {
                                    "January",
                                    "June",
                                    "December",
                                },
                                RetentionDuration = new AzureNative.RecoveryServices.Inputs.RetentionDurationArgs
                                {
                                    Count = 1,
                                    DurationType = "Years",
                                },
                                RetentionScheduleFormatType = "Weekly",
                                RetentionScheduleWeekly = new AzureNative.RecoveryServices.Inputs.WeeklyRetentionFormatArgs
                                {
                                    DaysOfTheWeek = 
                                    {
                                        "Sunday",
                                    },
                                    WeeksOfTheMonth = 
                                    {
                                        "Last",
                                    },
                                },
                                RetentionTimes = 
                                {
                                    "2018-01-24T10:00:00Z",
                                },
                            },
                        },
                        SchedulePolicy = new AzureNative.RecoveryServices.Inputs.SimpleSchedulePolicyArgs
                        {
                            SchedulePolicyType = "SimpleSchedulePolicy",
                            ScheduleRunDays = 
                            {
                                "Sunday",
                                "Tuesday",
                            },
                            ScheduleRunFrequency = "Weekly",
                            ScheduleRunTimes = 
                            {
                                "2018-01-24T10:00:00Z",
                            },
                        },
                    },
                    new AzureNative.RecoveryServices.Inputs.SubProtectionPolicyArgs
                    {
                        PolicyType = "Differential",
                        RetentionPolicy = new AzureNative.RecoveryServices.Inputs.SimpleRetentionPolicyArgs
                        {
                            RetentionDuration = new AzureNative.RecoveryServices.Inputs.RetentionDurationArgs
                            {
                                Count = 8,
                                DurationType = "Days",
                            },
                            RetentionPolicyType = "SimpleRetentionPolicy",
                        },
                        SchedulePolicy = new AzureNative.RecoveryServices.Inputs.SimpleSchedulePolicyArgs
                        {
                            SchedulePolicyType = "SimpleSchedulePolicy",
                            ScheduleRunDays = 
                            {
                                "Friday",
                            },
                            ScheduleRunFrequency = "Weekly",
                            ScheduleRunTimes = 
                            {
                                "2018-01-24T10:00:00Z",
                            },
                        },
                    },
                    new AzureNative.RecoveryServices.Inputs.SubProtectionPolicyArgs
                    {
                        PolicyType = "Log",
                        RetentionPolicy = new AzureNative.RecoveryServices.Inputs.SimpleRetentionPolicyArgs
                        {
                            RetentionDuration = new AzureNative.RecoveryServices.Inputs.RetentionDurationArgs
                            {
                                Count = 7,
                                DurationType = "Days",
                            },
                            RetentionPolicyType = "SimpleRetentionPolicy",
                        },
                        SchedulePolicy = new AzureNative.RecoveryServices.Inputs.LogSchedulePolicyArgs
                        {
                            ScheduleFrequencyInMins = 60,
                            SchedulePolicyType = "LogSchedulePolicy",
                        },
                    },
                },
                WorkLoadType = "SQLDataBase",
            },
            ResourceGroupName = "SwaggerTestRg",
            VaultName = "NetSDKTestRsVault",
        });
    }

}

```

```go
package main

import (
	recoveryservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/recoveryservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := recoveryservices.NewProtectionPolicy(ctx, "protectionPolicy", &recoveryservices.ProtectionPolicyArgs{
			PolicyName: pulumi.String("testPolicy1"),
			Properties: recoveryservices.AzureVmWorkloadProtectionPolicy{
				BackupManagementType: "AzureWorkload",
				Settings: recoveryservices.Settings{
					Issqlcompression: false,
					TimeZone:         "Pacific Standard Time",
				},
				SubProtectionPolicy: []recoveryservices.SubProtectionPolicy{
					recoveryservices.SubProtectionPolicy{
						PolicyType: "Full",
						RetentionPolicy: recoveryservices.LongTermRetentionPolicy{
							MonthlySchedule: recoveryservices.MonthlyRetentionSchedule{
								RetentionDuration: recoveryservices.RetentionDuration{
									Count:        1,
									DurationType: "Months",
								},
								RetentionScheduleFormatType: "Weekly",
								RetentionScheduleWeekly: recoveryservices.WeeklyRetentionFormat{
									DaysOfTheWeek: []string{
										"Sunday",
									},
									WeeksOfTheMonth: []string{
										"Second",
									},
								},
								RetentionTimes: []string{
									"2018-01-24T10:00:00Z",
								},
							},
							RetentionPolicyType: "LongTermRetentionPolicy",
							WeeklySchedule: recoveryservices.WeeklyRetentionSchedule{
								DaysOfTheWeek: []string{
									"Sunday",
									"Tuesday",
								},
								RetentionDuration: recoveryservices.RetentionDuration{
									Count:        2,
									DurationType: "Weeks",
								},
								RetentionTimes: []string{
									"2018-01-24T10:00:00Z",
								},
							},
							YearlySchedule: recoveryservices.YearlyRetentionSchedule{
								MonthsOfYear: []string{
									"January",
									"June",
									"December",
								},
								RetentionDuration: recoveryservices.RetentionDuration{
									Count:        1,
									DurationType: "Years",
								},
								RetentionScheduleFormatType: "Weekly",
								RetentionScheduleWeekly: recoveryservices.WeeklyRetentionFormat{
									DaysOfTheWeek: []string{
										"Sunday",
									},
									WeeksOfTheMonth: []string{
										"Last",
									},
								},
								RetentionTimes: []string{
									"2018-01-24T10:00:00Z",
								},
							},
						},
						SchedulePolicy: recoveryservices.SimpleSchedulePolicy{
							SchedulePolicyType: "SimpleSchedulePolicy",
							ScheduleRunDays: []string{
								"Sunday",
								"Tuesday",
							},
							ScheduleRunFrequency: "Weekly",
							ScheduleRunTimes: []string{
								"2018-01-24T10:00:00Z",
							},
						},
					},
					recoveryservices.SubProtectionPolicy{
						PolicyType: "Differential",
						RetentionPolicy: recoveryservices.SimpleRetentionPolicy{
							RetentionDuration: recoveryservices.RetentionDuration{
								Count:        8,
								DurationType: "Days",
							},
							RetentionPolicyType: "SimpleRetentionPolicy",
						},
						SchedulePolicy: recoveryservices.SimpleSchedulePolicy{
							SchedulePolicyType: "SimpleSchedulePolicy",
							ScheduleRunDays: []string{
								"Friday",
							},
							ScheduleRunFrequency: "Weekly",
							ScheduleRunTimes: []string{
								"2018-01-24T10:00:00Z",
							},
						},
					},
					recoveryservices.SubProtectionPolicy{
						PolicyType: "Log",
						RetentionPolicy: recoveryservices.SimpleRetentionPolicy{
							RetentionDuration: recoveryservices.RetentionDuration{
								Count:        7,
								DurationType: "Days",
							},
							RetentionPolicyType: "SimpleRetentionPolicy",
						},
						SchedulePolicy: recoveryservices.LogSchedulePolicy{
							ScheduleFrequencyInMins: 60,
							SchedulePolicyType:      "LogSchedulePolicy",
						},
					},
				},
				WorkLoadType: "SQLDataBase",
			},
			ResourceGroupName: pulumi.String("SwaggerTestRg"),
			VaultName:         pulumi.String("NetSDKTestRsVault"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const protectionPolicy = new azure_native.recoveryservices.ProtectionPolicy("protectionPolicy", {
    policyName: "testPolicy1",
    properties: {
        backupManagementType: "AzureWorkload",
        settings: {
            issqlcompression: false,
            timeZone: "Pacific Standard Time",
        },
        subProtectionPolicy: [
            {
                policyType: "Full",
                retentionPolicy: {
                    monthlySchedule: {
                        retentionDuration: {
                            count: 1,
                            durationType: "Months",
                        },
                        retentionScheduleFormatType: "Weekly",
                        retentionScheduleWeekly: {
                            daysOfTheWeek: ["Sunday"],
                            weeksOfTheMonth: ["Second"],
                        },
                        retentionTimes: ["2018-01-24T10:00:00Z"],
                    },
                    retentionPolicyType: "LongTermRetentionPolicy",
                    weeklySchedule: {
                        daysOfTheWeek: [
                            "Sunday",
                            "Tuesday",
                        ],
                        retentionDuration: {
                            count: 2,
                            durationType: "Weeks",
                        },
                        retentionTimes: ["2018-01-24T10:00:00Z"],
                    },
                    yearlySchedule: {
                        monthsOfYear: [
                            "January",
                            "June",
                            "December",
                        ],
                        retentionDuration: {
                            count: 1,
                            durationType: "Years",
                        },
                        retentionScheduleFormatType: "Weekly",
                        retentionScheduleWeekly: {
                            daysOfTheWeek: ["Sunday"],
                            weeksOfTheMonth: ["Last"],
                        },
                        retentionTimes: ["2018-01-24T10:00:00Z"],
                    },
                },
                schedulePolicy: {
                    schedulePolicyType: "SimpleSchedulePolicy",
                    scheduleRunDays: [
                        "Sunday",
                        "Tuesday",
                    ],
                    scheduleRunFrequency: "Weekly",
                    scheduleRunTimes: ["2018-01-24T10:00:00Z"],
                },
            },
            {
                policyType: "Differential",
                retentionPolicy: {
                    retentionDuration: {
                        count: 8,
                        durationType: "Days",
                    },
                    retentionPolicyType: "SimpleRetentionPolicy",
                },
                schedulePolicy: {
                    schedulePolicyType: "SimpleSchedulePolicy",
                    scheduleRunDays: ["Friday"],
                    scheduleRunFrequency: "Weekly",
                    scheduleRunTimes: ["2018-01-24T10:00:00Z"],
                },
            },
            {
                policyType: "Log",
                retentionPolicy: {
                    retentionDuration: {
                        count: 7,
                        durationType: "Days",
                    },
                    retentionPolicyType: "SimpleRetentionPolicy",
                },
                schedulePolicy: {
                    scheduleFrequencyInMins: 60,
                    schedulePolicyType: "LogSchedulePolicy",
                },
            },
        ],
        workLoadType: "SQLDataBase",
    },
    resourceGroupName: "SwaggerTestRg",
    vaultName: "NetSDKTestRsVault",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

protection_policy = azure_native.recoveryservices.ProtectionPolicy("protectionPolicy",
    policy_name="testPolicy1",
    properties=azure_native.recoveryservices.AzureVmWorkloadProtectionPolicyArgs(
        backup_management_type="AzureWorkload",
        settings=azure_native.recoveryservices.SettingsArgs(
            issqlcompression=False,
            time_zone="Pacific Standard Time",
        ),
        sub_protection_policy=[
            azure_native.recoveryservices.SubProtectionPolicyArgs(
                policy_type="Full",
                retention_policy=azure_native.recoveryservices.LongTermRetentionPolicyArgs(
                    monthly_schedule=azure_native.recoveryservices.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.RetentionDurationArgs(
                            count=1,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.WeeklyRetentionFormatArgs(
                            days_of_the_week=["Sunday"],
                            weeks_of_the_month=["Second"],
                        ),
                        retention_times=["2018-01-24T10:00:00Z"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[
                            "Sunday",
                            "Tuesday",
                        ],
                        retention_duration=azure_native.recoveryservices.RetentionDurationArgs(
                            count=2,
                            duration_type="Weeks",
                        ),
                        retention_times=["2018-01-24T10:00:00Z"],
                    ),
                    yearly_schedule=azure_native.recoveryservices.YearlyRetentionScheduleArgs(
                        months_of_year=[
                            "January",
                            "June",
                            "December",
                        ],
                        retention_duration=azure_native.recoveryservices.RetentionDurationArgs(
                            count=1,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.WeeklyRetentionFormatArgs(
                            days_of_the_week=["Sunday"],
                            weeks_of_the_month=["Last"],
                        ),
                        retention_times=["2018-01-24T10:00:00Z"],
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.SimpleSchedulePolicyArgs(
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_days=[
                        "Sunday",
                        "Tuesday",
                    ],
                    schedule_run_frequency="Weekly",
                    schedule_run_times=["2018-01-24T10:00:00Z"],
                ),
            ),
            azure_native.recoveryservices.SubProtectionPolicyArgs(
                policy_type="Differential",
                retention_policy=azure_native.recoveryservices.SimpleRetentionPolicyArgs(
                    retention_duration=azure_native.recoveryservices.RetentionDurationArgs(
                        count=8,
                        duration_type="Days",
                    ),
                    retention_policy_type="SimpleRetentionPolicy",
                ),
                schedule_policy=azure_native.recoveryservices.SimpleSchedulePolicyArgs(
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_days=["Friday"],
                    schedule_run_frequency="Weekly",
                    schedule_run_times=["2018-01-24T10:00:00Z"],
                ),
            ),
            azure_native.recoveryservices.SubProtectionPolicyArgs(
                policy_type="Log",
                retention_policy=azure_native.recoveryservices.SimpleRetentionPolicyArgs(
                    retention_duration=azure_native.recoveryservices.RetentionDurationArgs(
                        count=7,
                        duration_type="Days",
                    ),
                    retention_policy_type="SimpleRetentionPolicy",
                ),
                schedule_policy=azure_native.recoveryservices.LogSchedulePolicyArgs(
                    schedule_frequency_in_mins=60,
                    schedule_policy_type="LogSchedulePolicy",
                ),
            ),
        ],
        work_load_type="SQLDataBase",
    ),
    resource_group_name="SwaggerTestRg",
    vault_name="NetSDKTestRsVault")

```

{{% /example %}}
{{% example %}}
### Create or Update Simple Azure Vm Protection Policy
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var protectionPolicy = new AzureNative.RecoveryServices.ProtectionPolicy("protectionPolicy", new AzureNative.RecoveryServices.ProtectionPolicyArgs
        {
            PolicyName = "testPolicy1",
            Properties = new AzureNative.RecoveryServices.Inputs.AzureIaaSVMProtectionPolicyArgs
            {
                BackupManagementType = "AzureIaasVM",
                RetentionPolicy = new AzureNative.RecoveryServices.Inputs.LongTermRetentionPolicyArgs
                {
                    DailySchedule = new AzureNative.RecoveryServices.Inputs.DailyRetentionScheduleArgs
                    {
                        RetentionDuration = new AzureNative.RecoveryServices.Inputs.RetentionDurationArgs
                        {
                            Count = 1,
                            DurationType = "Days",
                        },
                        RetentionTimes = 
                        {
                            "2018-01-24T02:00:00Z",
                        },
                    },
                    RetentionPolicyType = "LongTermRetentionPolicy",
                },
                SchedulePolicy = new AzureNative.RecoveryServices.Inputs.SimpleSchedulePolicyArgs
                {
                    SchedulePolicyType = "SimpleSchedulePolicy",
                    ScheduleRunFrequency = "Daily",
                    ScheduleRunTimes = 
                    {
                        "2018-01-24T02:00:00Z",
                    },
                },
                TimeZone = "Pacific Standard Time",
            },
            ResourceGroupName = "SwaggerTestRg",
            VaultName = "NetSDKTestRsVault",
        });
    }

}

```

```go
package main

import (
	recoveryservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/recoveryservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := recoveryservices.NewProtectionPolicy(ctx, "protectionPolicy", &recoveryservices.ProtectionPolicyArgs{
			PolicyName: pulumi.String("testPolicy1"),
			Properties: recoveryservices.AzureIaaSVMProtectionPolicy{
				BackupManagementType: "AzureIaasVM",
				RetentionPolicy: recoveryservices.LongTermRetentionPolicy{
					DailySchedule: recoveryservices.DailyRetentionSchedule{
						RetentionDuration: recoveryservices.RetentionDuration{
							Count:        1,
							DurationType: "Days",
						},
						RetentionTimes: []string{
							"2018-01-24T02:00:00Z",
						},
					},
					RetentionPolicyType: "LongTermRetentionPolicy",
				},
				SchedulePolicy: recoveryservices.SimpleSchedulePolicy{
					SchedulePolicyType:   "SimpleSchedulePolicy",
					ScheduleRunFrequency: "Daily",
					ScheduleRunTimes: []string{
						"2018-01-24T02:00:00Z",
					},
				},
				TimeZone: "Pacific Standard Time",
			},
			ResourceGroupName: pulumi.String("SwaggerTestRg"),
			VaultName:         pulumi.String("NetSDKTestRsVault"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const protectionPolicy = new azure_native.recoveryservices.ProtectionPolicy("protectionPolicy", {
    policyName: "testPolicy1",
    properties: {
        backupManagementType: "AzureIaasVM",
        retentionPolicy: {
            dailySchedule: {
                retentionDuration: {
                    count: 1,
                    durationType: "Days",
                },
                retentionTimes: ["2018-01-24T02:00:00Z"],
            },
            retentionPolicyType: "LongTermRetentionPolicy",
        },
        schedulePolicy: {
            schedulePolicyType: "SimpleSchedulePolicy",
            scheduleRunFrequency: "Daily",
            scheduleRunTimes: ["2018-01-24T02:00:00Z"],
        },
        timeZone: "Pacific Standard Time",
    },
    resourceGroupName: "SwaggerTestRg",
    vaultName: "NetSDKTestRsVault",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

protection_policy = azure_native.recoveryservices.ProtectionPolicy("protectionPolicy",
    policy_name="testPolicy1",
    properties=azure_native.recoveryservices.AzureIaaSVMProtectionPolicyArgs(
        backup_management_type="AzureIaasVM",
        retention_policy=azure_native.recoveryservices.LongTermRetentionPolicyArgs(
            daily_schedule=azure_native.recoveryservices.DailyRetentionScheduleArgs(
                retention_duration=azure_native.recoveryservices.RetentionDurationArgs(
                    count=1,
                    duration_type="Days",
                ),
                retention_times=["2018-01-24T02:00:00Z"],
            ),
            retention_policy_type="LongTermRetentionPolicy",
        ),
        schedule_policy=azure_native.recoveryservices.SimpleSchedulePolicyArgs(
            schedule_policy_type="SimpleSchedulePolicy",
            schedule_run_frequency="Daily",
            schedule_run_times=["2018-01-24T02:00:00Z"],
        ),
        time_zone="Pacific Standard Time",
    ),
    resource_group_name="SwaggerTestRg",
    vault_name="NetSDKTestRsVault")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:recoveryservices:ProtectionPolicy testPolicy1 /Subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/SwaggerTestRg/providers/Microsoft.RecoveryServices/vaults/NetSDKTestRsVault/backupPolicies/testPolicy1 
```

 */
@ResourceType(type="azure-native:recoveryservices:ProtectionPolicy")
public class ProtectionPolicy extends io.pulumi.resources.CustomResource {
    /**
     * Optional ETag.
     */
    @OutputExport(name="eTag", type=String.class, parameters={})
    private Output</* @Nullable */ String> eTag;

    /**
     * @return Optional ETag.
     */
    public Output</* @Nullable */ String> getETag() {
        return this.eTag;
    }
    /**
     * Resource location.
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * Resource name associated with the resource.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name associated with the resource.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * ProtectionPolicyResource properties
     */
    @OutputExport(name="properties", type=Object.class, parameters={})
    private Output<Object> properties;

    /**
     * @return ProtectionPolicyResource properties
     */
    public Output<Object> getProperties() {
        return this.properties;
    }
    /**
     * Resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProtectionPolicy(String name, ProtectionPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:recoveryservices:ProtectionPolicy", name, args == null ? ProtectionPolicyArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ProtectionPolicy(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:recoveryservices:ProtectionPolicy", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20160601:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20201001:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20201201:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20210101:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20210201:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20210201preview:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20210210:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20210301:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20210401:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20210601:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20210701:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20210801:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20211001:ProtectionPolicy").build()),
                Input.of(Alias.builder().setType("azure-native:recoveryservices/v20211201:ProtectionPolicy").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProtectionPolicy get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ProtectionPolicy(name, id, options);
    }
}
