// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.network.enums.AuthorizationUseStatus;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ExpressRouteCircuitAuthorizationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ExpressRouteCircuitAuthorizationArgs Empty = new ExpressRouteCircuitAuthorizationArgs();

    /**
     * The authorization key.
     * 
     */
    @Import(name="authorizationKey")
      private final @Nullable Output<String> authorizationKey;

    public Output<String> authorizationKey() {
        return this.authorizationKey == null ? Codegen.empty() : this.authorizationKey;
    }

    /**
     * The name of the authorization.
     * 
     */
    @Import(name="authorizationName")
      private final @Nullable Output<String> authorizationName;

    public Output<String> authorizationName() {
        return this.authorizationName == null ? Codegen.empty() : this.authorizationName;
    }

    /**
     * The authorization use status.
     * 
     */
    @Import(name="authorizationUseStatus")
      private final @Nullable Output<Either<String,AuthorizationUseStatus>> authorizationUseStatus;

    public Output<Either<String,AuthorizationUseStatus>> authorizationUseStatus() {
        return this.authorizationUseStatus == null ? Codegen.empty() : this.authorizationUseStatus;
    }

    /**
     * The name of the express route circuit.
     * 
     */
    @Import(name="circuitName", required=true)
      private final Output<String> circuitName;

    public Output<String> circuitName() {
        return this.circuitName;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    public ExpressRouteCircuitAuthorizationArgs(
        @Nullable Output<String> authorizationKey,
        @Nullable Output<String> authorizationName,
        @Nullable Output<Either<String,AuthorizationUseStatus>> authorizationUseStatus,
        Output<String> circuitName,
        @Nullable Output<String> id,
        @Nullable Output<String> name,
        Output<String> resourceGroupName) {
        this.authorizationKey = authorizationKey;
        this.authorizationName = authorizationName;
        this.authorizationUseStatus = authorizationUseStatus;
        this.circuitName = Objects.requireNonNull(circuitName, "expected parameter 'circuitName' to be non-null");
        this.id = id;
        this.name = name;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private ExpressRouteCircuitAuthorizationArgs() {
        this.authorizationKey = Codegen.empty();
        this.authorizationName = Codegen.empty();
        this.authorizationUseStatus = Codegen.empty();
        this.circuitName = Codegen.empty();
        this.id = Codegen.empty();
        this.name = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExpressRouteCircuitAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> authorizationKey;
        private @Nullable Output<String> authorizationName;
        private @Nullable Output<Either<String,AuthorizationUseStatus>> authorizationUseStatus;
        private Output<String> circuitName;
        private @Nullable Output<String> id;
        private @Nullable Output<String> name;
        private Output<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(ExpressRouteCircuitAuthorizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationKey = defaults.authorizationKey;
    	      this.authorizationName = defaults.authorizationName;
    	      this.authorizationUseStatus = defaults.authorizationUseStatus;
    	      this.circuitName = defaults.circuitName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder authorizationKey(@Nullable Output<String> authorizationKey) {
            this.authorizationKey = authorizationKey;
            return this;
        }
        public Builder authorizationKey(@Nullable String authorizationKey) {
            this.authorizationKey = Codegen.ofNullable(authorizationKey);
            return this;
        }
        public Builder authorizationName(@Nullable Output<String> authorizationName) {
            this.authorizationName = authorizationName;
            return this;
        }
        public Builder authorizationName(@Nullable String authorizationName) {
            this.authorizationName = Codegen.ofNullable(authorizationName);
            return this;
        }
        public Builder authorizationUseStatus(@Nullable Output<Either<String,AuthorizationUseStatus>> authorizationUseStatus) {
            this.authorizationUseStatus = authorizationUseStatus;
            return this;
        }
        public Builder authorizationUseStatus(@Nullable Either<String,AuthorizationUseStatus> authorizationUseStatus) {
            this.authorizationUseStatus = Codegen.ofNullable(authorizationUseStatus);
            return this;
        }
        public Builder circuitName(Output<String> circuitName) {
            this.circuitName = Objects.requireNonNull(circuitName);
            return this;
        }
        public Builder circuitName(String circuitName) {
            this.circuitName = Output.of(Objects.requireNonNull(circuitName));
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }        public ExpressRouteCircuitAuthorizationArgs build() {
            return new ExpressRouteCircuitAuthorizationArgs(authorizationKey, authorizationName, authorizationUseStatus, circuitName, id, name, resourceGroupName);
        }
    }
}
