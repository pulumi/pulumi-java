// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.outputs;

import io.pulumi.azurenative.datafactory.outputs.TarGZipReadSettingsResponse;
import io.pulumi.azurenative.datafactory.outputs.TarReadSettingsResponse;
import io.pulumi.azurenative.datafactory.outputs.ZipDeflateReadSettingsResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class XmlReadSettingsResponse {
    private final @Nullable Object compressionProperties;
    private final @Nullable Object detectDataType;
    private final @Nullable Object namespacePrefixes;
    private final @Nullable Object namespaces;
    private final String type;
    private final @Nullable Object validationMode;

    @OutputCustomType.Constructor({"compressionProperties","detectDataType","namespacePrefixes","namespaces","type","validationMode"})
    private XmlReadSettingsResponse(
        @Nullable Object compressionProperties,
        @Nullable Object detectDataType,
        @Nullable Object namespacePrefixes,
        @Nullable Object namespaces,
        String type,
        @Nullable Object validationMode) {
        this.compressionProperties = compressionProperties;
        this.detectDataType = detectDataType;
        this.namespacePrefixes = namespacePrefixes;
        this.namespaces = namespaces;
        this.type = Objects.requireNonNull(type);
        this.validationMode = validationMode;
    }

    public Optional<Object> getCompressionProperties() {
        return Optional.ofNullable(this.compressionProperties);
    }
    public Optional<Object> getDetectDataType() {
        return Optional.ofNullable(this.detectDataType);
    }
    public Optional<Object> getNamespacePrefixes() {
        return Optional.ofNullable(this.namespacePrefixes);
    }
    public Optional<Object> getNamespaces() {
        return Optional.ofNullable(this.namespaces);
    }
    public String getType() {
        return this.type;
    }
    public Optional<Object> getValidationMode() {
        return Optional.ofNullable(this.validationMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(XmlReadSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Object compressionProperties;
        private @Nullable Object detectDataType;
        private @Nullable Object namespacePrefixes;
        private @Nullable Object namespaces;
        private String type;
        private @Nullable Object validationMode;

        public Builder() {
    	      // Empty
        }

        public Builder(XmlReadSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compressionProperties = defaults.compressionProperties;
    	      this.detectDataType = defaults.detectDataType;
    	      this.namespacePrefixes = defaults.namespacePrefixes;
    	      this.namespaces = defaults.namespaces;
    	      this.type = defaults.type;
    	      this.validationMode = defaults.validationMode;
        }

        public Builder setCompressionProperties(@Nullable Object compressionProperties) {
            this.compressionProperties = compressionProperties;
            return this;
        }

        public Builder setDetectDataType(@Nullable Object detectDataType) {
            this.detectDataType = detectDataType;
            return this;
        }

        public Builder setNamespacePrefixes(@Nullable Object namespacePrefixes) {
            this.namespacePrefixes = namespacePrefixes;
            return this;
        }

        public Builder setNamespaces(@Nullable Object namespaces) {
            this.namespaces = namespaces;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setValidationMode(@Nullable Object validationMode) {
            this.validationMode = validationMode;
            return this;
        }

        public XmlReadSettingsResponse build() {
            return new XmlReadSettingsResponse(compressionProperties, detectDataType, namespacePrefixes, namespaces, type, validationMode);
        }
    }
}
