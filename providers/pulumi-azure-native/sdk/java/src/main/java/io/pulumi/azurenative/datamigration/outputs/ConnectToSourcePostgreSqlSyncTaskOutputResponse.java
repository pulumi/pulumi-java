// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.azurenative.datamigration.outputs.ReportableExceptionResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ConnectToSourcePostgreSqlSyncTaskOutputResponse {
    /**
     * List of databases on source server
     * 
     */
    private final List<String> databases;
    /**
     * Result identifier
     * 
     */
    private final String id;
    /**
     * Source server brand version
     * 
     */
    private final String sourceServerBrandVersion;
    /**
     * Version of the source server
     * 
     */
    private final String sourceServerVersion;
    /**
     * Validation errors associated with the task
     * 
     */
    private final List<ReportableExceptionResponse> validationErrors;

    @CustomType.Constructor
    private ConnectToSourcePostgreSqlSyncTaskOutputResponse(
        @CustomType.Parameter("databases") List<String> databases,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("sourceServerBrandVersion") String sourceServerBrandVersion,
        @CustomType.Parameter("sourceServerVersion") String sourceServerVersion,
        @CustomType.Parameter("validationErrors") List<ReportableExceptionResponse> validationErrors) {
        this.databases = databases;
        this.id = id;
        this.sourceServerBrandVersion = sourceServerBrandVersion;
        this.sourceServerVersion = sourceServerVersion;
        this.validationErrors = validationErrors;
    }

    /**
     * List of databases on source server
     * 
    */
    public List<String> getDatabases() {
        return this.databases;
    }
    /**
     * Result identifier
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Source server brand version
     * 
    */
    public String getSourceServerBrandVersion() {
        return this.sourceServerBrandVersion;
    }
    /**
     * Version of the source server
     * 
    */
    public String getSourceServerVersion() {
        return this.sourceServerVersion;
    }
    /**
     * Validation errors associated with the task
     * 
    */
    public List<ReportableExceptionResponse> getValidationErrors() {
        return this.validationErrors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectToSourcePostgreSqlSyncTaskOutputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> databases;
        private String id;
        private String sourceServerBrandVersion;
        private String sourceServerVersion;
        private List<ReportableExceptionResponse> validationErrors;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectToSourcePostgreSqlSyncTaskOutputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databases = defaults.databases;
    	      this.id = defaults.id;
    	      this.sourceServerBrandVersion = defaults.sourceServerBrandVersion;
    	      this.sourceServerVersion = defaults.sourceServerVersion;
    	      this.validationErrors = defaults.validationErrors;
        }

        public Builder databases(List<String> databases) {
            this.databases = Objects.requireNonNull(databases);
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder sourceServerBrandVersion(String sourceServerBrandVersion) {
            this.sourceServerBrandVersion = Objects.requireNonNull(sourceServerBrandVersion);
            return this;
        }

        public Builder sourceServerVersion(String sourceServerVersion) {
            this.sourceServerVersion = Objects.requireNonNull(sourceServerVersion);
            return this;
        }

        public Builder validationErrors(List<ReportableExceptionResponse> validationErrors) {
            this.validationErrors = Objects.requireNonNull(validationErrors);
            return this;
        }
        public ConnectToSourcePostgreSqlSyncTaskOutputResponse build() {
            return new ConnectToSourcePostgreSqlSyncTaskOutputResponse(databases, id, sourceServerBrandVersion, sourceServerVersion, validationErrors);
        }
    }
}
