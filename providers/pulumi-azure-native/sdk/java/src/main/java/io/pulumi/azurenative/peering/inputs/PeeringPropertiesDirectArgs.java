// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.peering.inputs;

import io.pulumi.azurenative.peering.enums.DirectPeeringType;
import io.pulumi.azurenative.peering.inputs.DirectConnectionArgs;
import io.pulumi.azurenative.peering.inputs.SubResourceArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PeeringPropertiesDirectArgs extends io.pulumi.resources.ResourceArgs {

    public static final PeeringPropertiesDirectArgs Empty = new PeeringPropertiesDirectArgs();

    @InputImport(name="connections")
    private final @Nullable Input<List<DirectConnectionArgs>> connections;

    public Input<List<DirectConnectionArgs>> getConnections() {
        return this.connections == null ? Input.empty() : this.connections;
    }

    @InputImport(name="directPeeringType")
    private final @Nullable Input<Either<String,DirectPeeringType>> directPeeringType;

    public Input<Either<String,DirectPeeringType>> getDirectPeeringType() {
        return this.directPeeringType == null ? Input.empty() : this.directPeeringType;
    }

    @InputImport(name="peerAsn")
    private final @Nullable Input<SubResourceArgs> peerAsn;

    public Input<SubResourceArgs> getPeerAsn() {
        return this.peerAsn == null ? Input.empty() : this.peerAsn;
    }

    public PeeringPropertiesDirectArgs(
        @Nullable Input<List<DirectConnectionArgs>> connections,
        @Nullable Input<Either<String,DirectPeeringType>> directPeeringType,
        @Nullable Input<SubResourceArgs> peerAsn) {
        this.connections = connections;
        this.directPeeringType = directPeeringType;
        this.peerAsn = peerAsn;
    }

    private PeeringPropertiesDirectArgs() {
        this.connections = Input.empty();
        this.directPeeringType = Input.empty();
        this.peerAsn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PeeringPropertiesDirectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<DirectConnectionArgs>> connections;
        private @Nullable Input<Either<String,DirectPeeringType>> directPeeringType;
        private @Nullable Input<SubResourceArgs> peerAsn;

        public Builder() {
    	      // Empty
        }

        public Builder(PeeringPropertiesDirectArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connections = defaults.connections;
    	      this.directPeeringType = defaults.directPeeringType;
    	      this.peerAsn = defaults.peerAsn;
        }

        public Builder setConnections(@Nullable Input<List<DirectConnectionArgs>> connections) {
            this.connections = connections;
            return this;
        }

        public Builder setConnections(@Nullable List<DirectConnectionArgs> connections) {
            this.connections = Input.ofNullable(connections);
            return this;
        }

        public Builder setDirectPeeringType(@Nullable Input<Either<String,DirectPeeringType>> directPeeringType) {
            this.directPeeringType = directPeeringType;
            return this;
        }

        public Builder setDirectPeeringType(@Nullable Either<String,DirectPeeringType> directPeeringType) {
            this.directPeeringType = Input.ofNullable(directPeeringType);
            return this;
        }

        public Builder setPeerAsn(@Nullable Input<SubResourceArgs> peerAsn) {
            this.peerAsn = peerAsn;
            return this;
        }

        public Builder setPeerAsn(@Nullable SubResourceArgs peerAsn) {
            this.peerAsn = Input.ofNullable(peerAsn);
            return this;
        }

        public PeeringPropertiesDirectArgs build() {
            return new PeeringPropertiesDirectArgs(connections, directPeeringType, peerAsn);
        }
    }
}
