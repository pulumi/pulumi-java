// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry.inputs;

import io.pulumi.azurenative.containerregistry.inputs.PipelineRunSourcePropertiesArgs;
import io.pulumi.azurenative.containerregistry.inputs.PipelineRunTargetPropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PipelineRunRequestArgs extends io.pulumi.resources.ResourceArgs {

    public static final PipelineRunRequestArgs Empty = new PipelineRunRequestArgs();

    @InputImport(name="artifacts")
    private final @Nullable Input<List<String>> artifacts;

    public Input<List<String>> getArtifacts() {
        return this.artifacts == null ? Input.empty() : this.artifacts;
    }

    @InputImport(name="catalogDigest")
    private final @Nullable Input<String> catalogDigest;

    public Input<String> getCatalogDigest() {
        return this.catalogDigest == null ? Input.empty() : this.catalogDigest;
    }

    @InputImport(name="pipelineResourceId")
    private final @Nullable Input<String> pipelineResourceId;

    public Input<String> getPipelineResourceId() {
        return this.pipelineResourceId == null ? Input.empty() : this.pipelineResourceId;
    }

    @InputImport(name="source")
    private final @Nullable Input<PipelineRunSourcePropertiesArgs> source;

    public Input<PipelineRunSourcePropertiesArgs> getSource() {
        return this.source == null ? Input.empty() : this.source;
    }

    @InputImport(name="target")
    private final @Nullable Input<PipelineRunTargetPropertiesArgs> target;

    public Input<PipelineRunTargetPropertiesArgs> getTarget() {
        return this.target == null ? Input.empty() : this.target;
    }

    public PipelineRunRequestArgs(
        @Nullable Input<List<String>> artifacts,
        @Nullable Input<String> catalogDigest,
        @Nullable Input<String> pipelineResourceId,
        @Nullable Input<PipelineRunSourcePropertiesArgs> source,
        @Nullable Input<PipelineRunTargetPropertiesArgs> target) {
        this.artifacts = artifacts;
        this.catalogDigest = catalogDigest;
        this.pipelineResourceId = pipelineResourceId;
        this.source = source;
        this.target = target;
    }

    private PipelineRunRequestArgs() {
        this.artifacts = Input.empty();
        this.catalogDigest = Input.empty();
        this.pipelineResourceId = Input.empty();
        this.source = Input.empty();
        this.target = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineRunRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> artifacts;
        private @Nullable Input<String> catalogDigest;
        private @Nullable Input<String> pipelineResourceId;
        private @Nullable Input<PipelineRunSourcePropertiesArgs> source;
        private @Nullable Input<PipelineRunTargetPropertiesArgs> target;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineRunRequestArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifacts = defaults.artifacts;
    	      this.catalogDigest = defaults.catalogDigest;
    	      this.pipelineResourceId = defaults.pipelineResourceId;
    	      this.source = defaults.source;
    	      this.target = defaults.target;
        }

        public Builder setArtifacts(@Nullable Input<List<String>> artifacts) {
            this.artifacts = artifacts;
            return this;
        }

        public Builder setArtifacts(@Nullable List<String> artifacts) {
            this.artifacts = Input.ofNullable(artifacts);
            return this;
        }

        public Builder setCatalogDigest(@Nullable Input<String> catalogDigest) {
            this.catalogDigest = catalogDigest;
            return this;
        }

        public Builder setCatalogDigest(@Nullable String catalogDigest) {
            this.catalogDigest = Input.ofNullable(catalogDigest);
            return this;
        }

        public Builder setPipelineResourceId(@Nullable Input<String> pipelineResourceId) {
            this.pipelineResourceId = pipelineResourceId;
            return this;
        }

        public Builder setPipelineResourceId(@Nullable String pipelineResourceId) {
            this.pipelineResourceId = Input.ofNullable(pipelineResourceId);
            return this;
        }

        public Builder setSource(@Nullable Input<PipelineRunSourcePropertiesArgs> source) {
            this.source = source;
            return this;
        }

        public Builder setSource(@Nullable PipelineRunSourcePropertiesArgs source) {
            this.source = Input.ofNullable(source);
            return this;
        }

        public Builder setTarget(@Nullable Input<PipelineRunTargetPropertiesArgs> target) {
            this.target = target;
            return this;
        }

        public Builder setTarget(@Nullable PipelineRunTargetPropertiesArgs target) {
            this.target = Input.ofNullable(target);
            return this;
        }

        public PipelineRunRequestArgs build() {
            return new PipelineRunRequestArgs(artifacts, catalogDigest, pipelineResourceId, source, target);
        }
    }
}
