// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ContainerRegistryArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContainerRegistryArgs Empty = new ContainerRegistryArgs();

    @Import(name="password", required=true)
      private final Output<String> password;

    public Output<String> getPassword() {
        return this.password;
    }

    /**
     * If omitted, the default is "docker.io".
     * 
     */
    @Import(name="registryServer")
      private final @Nullable Output<String> registryServer;

    public Output<String> getRegistryServer() {
        return this.registryServer == null ? Output.empty() : this.registryServer;
    }

    @Import(name="userName", required=true)
      private final Output<String> userName;

    public Output<String> getUserName() {
        return this.userName;
    }

    public ContainerRegistryArgs(
        Output<String> password,
        @Nullable Output<String> registryServer,
        Output<String> userName) {
        this.password = Objects.requireNonNull(password, "expected parameter 'password' to be non-null");
        this.registryServer = registryServer;
        this.userName = Objects.requireNonNull(userName, "expected parameter 'userName' to be non-null");
    }

    private ContainerRegistryArgs() {
        this.password = Output.empty();
        this.registryServer = Output.empty();
        this.userName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerRegistryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> password;
        private @Nullable Output<String> registryServer;
        private Output<String> userName;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerRegistryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.registryServer = defaults.registryServer;
    	      this.userName = defaults.userName;
        }

        public Builder password(Output<String> password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }

        public Builder password(String password) {
            this.password = Output.of(Objects.requireNonNull(password));
            return this;
        }

        public Builder registryServer(@Nullable Output<String> registryServer) {
            this.registryServer = registryServer;
            return this;
        }

        public Builder registryServer(@Nullable String registryServer) {
            this.registryServer = Output.ofNullable(registryServer);
            return this;
        }

        public Builder userName(Output<String> userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }

        public Builder userName(String userName) {
            this.userName = Output.of(Objects.requireNonNull(userName));
            return this;
        }
        public ContainerRegistryArgs build() {
            return new ContainerRegistryArgs(password, registryServer, userName);
        }
    }
}
