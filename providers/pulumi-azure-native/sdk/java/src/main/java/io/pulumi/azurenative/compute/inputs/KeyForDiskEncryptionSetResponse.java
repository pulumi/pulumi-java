// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.azurenative.compute.inputs.SourceVaultResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyForDiskEncryptionSetResponse extends io.pulumi.resources.InvokeArgs {

    public static final KeyForDiskEncryptionSetResponse Empty = new KeyForDiskEncryptionSetResponse();

    @InputImport(name="keyUrl", required=true)
    private final String keyUrl;

    public String getKeyUrl() {
        return this.keyUrl;
    }

    @InputImport(name="sourceVault")
    private final @Nullable SourceVaultResponse sourceVault;

    public Optional<SourceVaultResponse> getSourceVault() {
        return this.sourceVault == null ? Optional.empty() : Optional.ofNullable(this.sourceVault);
    }

    public KeyForDiskEncryptionSetResponse(
        String keyUrl,
        @Nullable SourceVaultResponse sourceVault) {
        this.keyUrl = Objects.requireNonNull(keyUrl, "expected parameter 'keyUrl' to be non-null");
        this.sourceVault = sourceVault;
    }

    private KeyForDiskEncryptionSetResponse() {
        this.keyUrl = null;
        this.sourceVault = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyForDiskEncryptionSetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String keyUrl;
        private @Nullable SourceVaultResponse sourceVault;

        public Builder() {
    	      // Empty
        }

        public Builder(KeyForDiskEncryptionSetResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyUrl = defaults.keyUrl;
    	      this.sourceVault = defaults.sourceVault;
        }

        public Builder setKeyUrl(String keyUrl) {
            this.keyUrl = Objects.requireNonNull(keyUrl);
            return this;
        }

        public Builder setSourceVault(@Nullable SourceVaultResponse sourceVault) {
            this.sourceVault = sourceVault;
            return this;
        }

        public KeyForDiskEncryptionSetResponse build() {
            return new KeyForDiskEncryptionSetResponse(keyUrl, sourceVault);
        }
    }
}
