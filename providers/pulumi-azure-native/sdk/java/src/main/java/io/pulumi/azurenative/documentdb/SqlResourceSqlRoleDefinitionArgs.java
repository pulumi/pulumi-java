// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb;

import io.pulumi.azurenative.documentdb.enums.RoleDefinitionType;
import io.pulumi.azurenative.documentdb.inputs.PermissionArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SqlResourceSqlRoleDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final SqlResourceSqlRoleDefinitionArgs Empty = new SqlResourceSqlRoleDefinitionArgs();

    @InputImport(name="accountName", required=true)
    private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    @InputImport(name="assignableScopes")
    private final @Nullable Input<List<String>> assignableScopes;

    public Input<List<String>> getAssignableScopes() {
        return this.assignableScopes == null ? Input.empty() : this.assignableScopes;
    }

    @InputImport(name="permissions")
    private final @Nullable Input<List<PermissionArgs>> permissions;

    public Input<List<PermissionArgs>> getPermissions() {
        return this.permissions == null ? Input.empty() : this.permissions;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="roleDefinitionId")
    private final @Nullable Input<String> roleDefinitionId;

    public Input<String> getRoleDefinitionId() {
        return this.roleDefinitionId == null ? Input.empty() : this.roleDefinitionId;
    }

    @InputImport(name="roleName")
    private final @Nullable Input<String> roleName;

    public Input<String> getRoleName() {
        return this.roleName == null ? Input.empty() : this.roleName;
    }

    @InputImport(name="type")
    private final @Nullable Input<RoleDefinitionType> type;

    public Input<RoleDefinitionType> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public SqlResourceSqlRoleDefinitionArgs(
        Input<String> accountName,
        @Nullable Input<List<String>> assignableScopes,
        @Nullable Input<List<PermissionArgs>> permissions,
        Input<String> resourceGroupName,
        @Nullable Input<String> roleDefinitionId,
        @Nullable Input<String> roleName,
        @Nullable Input<RoleDefinitionType> type) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.assignableScopes = assignableScopes;
        this.permissions = permissions;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.roleDefinitionId = roleDefinitionId;
        this.roleName = roleName;
        this.type = type;
    }

    private SqlResourceSqlRoleDefinitionArgs() {
        this.accountName = Input.empty();
        this.assignableScopes = Input.empty();
        this.permissions = Input.empty();
        this.resourceGroupName = Input.empty();
        this.roleDefinitionId = Input.empty();
        this.roleName = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlResourceSqlRoleDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<List<String>> assignableScopes;
        private @Nullable Input<List<PermissionArgs>> permissions;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> roleDefinitionId;
        private @Nullable Input<String> roleName;
        private @Nullable Input<RoleDefinitionType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlResourceSqlRoleDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.assignableScopes = defaults.assignableScopes;
    	      this.permissions = defaults.permissions;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.roleDefinitionId = defaults.roleDefinitionId;
    	      this.roleName = defaults.roleName;
    	      this.type = defaults.type;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setAssignableScopes(@Nullable Input<List<String>> assignableScopes) {
            this.assignableScopes = assignableScopes;
            return this;
        }

        public Builder setAssignableScopes(@Nullable List<String> assignableScopes) {
            this.assignableScopes = Input.ofNullable(assignableScopes);
            return this;
        }

        public Builder setPermissions(@Nullable Input<List<PermissionArgs>> permissions) {
            this.permissions = permissions;
            return this;
        }

        public Builder setPermissions(@Nullable List<PermissionArgs> permissions) {
            this.permissions = Input.ofNullable(permissions);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRoleDefinitionId(@Nullable Input<String> roleDefinitionId) {
            this.roleDefinitionId = roleDefinitionId;
            return this;
        }

        public Builder setRoleDefinitionId(@Nullable String roleDefinitionId) {
            this.roleDefinitionId = Input.ofNullable(roleDefinitionId);
            return this;
        }

        public Builder setRoleName(@Nullable Input<String> roleName) {
            this.roleName = roleName;
            return this;
        }

        public Builder setRoleName(@Nullable String roleName) {
            this.roleName = Input.ofNullable(roleName);
            return this;
        }

        public Builder setType(@Nullable Input<RoleDefinitionType> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable RoleDefinitionType type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public SqlResourceSqlRoleDefinitionArgs build() {
            return new SqlResourceSqlRoleDefinitionArgs(accountName, assignableScopes, permissions, resourceGroupName, roleDefinitionId, roleName, type);
        }
    }
}
