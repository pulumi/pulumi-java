// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry;

import io.pulumi.azurenative.containerregistry.inputs.PipelineRunRequestArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PipelineRunArgs extends io.pulumi.resources.ResourceArgs {

    public static final PipelineRunArgs Empty = new PipelineRunArgs();

    /**
     * How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed.
     * 
     */
    @InputImport(name="forceUpdateTag")
      private final @Nullable Input<String> forceUpdateTag;

    public Input<String> getForceUpdateTag() {
        return this.forceUpdateTag == null ? Input.empty() : this.forceUpdateTag;
    }

    /**
     * The name of the pipeline run.
     * 
     */
    @InputImport(name="pipelineRunName")
      private final @Nullable Input<String> pipelineRunName;

    public Input<String> getPipelineRunName() {
        return this.pipelineRunName == null ? Input.empty() : this.pipelineRunName;
    }

    /**
     * The name of the container registry.
     * 
     */
    @InputImport(name="registryName", required=true)
      private final Input<String> registryName;

    public Input<String> getRegistryName() {
        return this.registryName;
    }

    /**
     * The request parameters for a pipeline run.
     * 
     */
    @InputImport(name="request")
      private final @Nullable Input<PipelineRunRequestArgs> request;

    public Input<PipelineRunRequestArgs> getRequest() {
        return this.request == null ? Input.empty() : this.request;
    }

    /**
     * The name of the resource group to which the container registry belongs.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public PipelineRunArgs(
        @Nullable Input<String> forceUpdateTag,
        @Nullable Input<String> pipelineRunName,
        Input<String> registryName,
        @Nullable Input<PipelineRunRequestArgs> request,
        Input<String> resourceGroupName) {
        this.forceUpdateTag = forceUpdateTag;
        this.pipelineRunName = pipelineRunName;
        this.registryName = Objects.requireNonNull(registryName, "expected parameter 'registryName' to be non-null");
        this.request = request;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private PipelineRunArgs() {
        this.forceUpdateTag = Input.empty();
        this.pipelineRunName = Input.empty();
        this.registryName = Input.empty();
        this.request = Input.empty();
        this.resourceGroupName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineRunArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> forceUpdateTag;
        private @Nullable Input<String> pipelineRunName;
        private Input<String> registryName;
        private @Nullable Input<PipelineRunRequestArgs> request;
        private Input<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineRunArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.forceUpdateTag = defaults.forceUpdateTag;
    	      this.pipelineRunName = defaults.pipelineRunName;
    	      this.registryName = defaults.registryName;
    	      this.request = defaults.request;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder setForceUpdateTag(@Nullable Input<String> forceUpdateTag) {
            this.forceUpdateTag = forceUpdateTag;
            return this;
        }

        public Builder setForceUpdateTag(@Nullable String forceUpdateTag) {
            this.forceUpdateTag = Input.ofNullable(forceUpdateTag);
            return this;
        }

        public Builder setPipelineRunName(@Nullable Input<String> pipelineRunName) {
            this.pipelineRunName = pipelineRunName;
            return this;
        }

        public Builder setPipelineRunName(@Nullable String pipelineRunName) {
            this.pipelineRunName = Input.ofNullable(pipelineRunName);
            return this;
        }

        public Builder setRegistryName(Input<String> registryName) {
            this.registryName = Objects.requireNonNull(registryName);
            return this;
        }

        public Builder setRegistryName(String registryName) {
            this.registryName = Input.of(Objects.requireNonNull(registryName));
            return this;
        }

        public Builder setRequest(@Nullable Input<PipelineRunRequestArgs> request) {
            this.request = request;
            return this;
        }

        public Builder setRequest(@Nullable PipelineRunRequestArgs request) {
            this.request = Input.ofNullable(request);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public PipelineRunArgs build() {
            return new PipelineRunArgs(forceUpdateTag, pipelineRunName, registryName, request, resourceGroupName);
        }
    }
}
