// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DPMProtectedItemExtendedInfoResponse {
    /**
     * Used Disk storage in bytes.
     * 
     */
    private final @Nullable String diskStorageUsedInBytes;
    /**
     * To check if backup item is collocated.
     * 
     */
    private final @Nullable Boolean isCollocated;
    /**
     * To check if backup item is cloud protected.
     * 
     */
    private final @Nullable Boolean isPresentOnCloud;
    /**
     * Last backup status information on backup item.
     * 
     */
    private final @Nullable String lastBackupStatus;
    /**
     * Last refresh time on backup item.
     * 
     */
    private final @Nullable String lastRefreshedAt;
    /**
     * Oldest cloud recovery point time.
     * 
     */
    private final @Nullable String oldestRecoveryPoint;
    /**
     * latest disk recovery point time.
     * 
     */
    private final @Nullable String onPremiseLatestRecoveryPoint;
    /**
     * Oldest disk recovery point time.
     * 
     */
    private final @Nullable String onPremiseOldestRecoveryPoint;
    /**
     * disk recovery point count.
     * 
     */
    private final @Nullable Integer onPremiseRecoveryPointCount;
    /**
     * Attribute to provide information on various DBs.
     * 
     */
    private final @Nullable Map<String,String> protectableObjectLoadPath;
    /**
     * To check if backup item is disk protected.
     * 
     */
    private final @Nullable Boolean protected_;
    /**
     * Protection group name of the backup item.
     * 
     */
    private final @Nullable String protectionGroupName;
    /**
     * cloud recovery point count.
     * 
     */
    private final @Nullable Integer recoveryPointCount;
    /**
     * total Disk storage in bytes.
     * 
     */
    private final @Nullable String totalDiskStorageSizeInBytes;

    @CustomType.Constructor
    private DPMProtectedItemExtendedInfoResponse(
        @CustomType.Parameter("diskStorageUsedInBytes") @Nullable String diskStorageUsedInBytes,
        @CustomType.Parameter("isCollocated") @Nullable Boolean isCollocated,
        @CustomType.Parameter("isPresentOnCloud") @Nullable Boolean isPresentOnCloud,
        @CustomType.Parameter("lastBackupStatus") @Nullable String lastBackupStatus,
        @CustomType.Parameter("lastRefreshedAt") @Nullable String lastRefreshedAt,
        @CustomType.Parameter("oldestRecoveryPoint") @Nullable String oldestRecoveryPoint,
        @CustomType.Parameter("onPremiseLatestRecoveryPoint") @Nullable String onPremiseLatestRecoveryPoint,
        @CustomType.Parameter("onPremiseOldestRecoveryPoint") @Nullable String onPremiseOldestRecoveryPoint,
        @CustomType.Parameter("onPremiseRecoveryPointCount") @Nullable Integer onPremiseRecoveryPointCount,
        @CustomType.Parameter("protectableObjectLoadPath") @Nullable Map<String,String> protectableObjectLoadPath,
        @CustomType.Parameter("protected") @Nullable Boolean protected_,
        @CustomType.Parameter("protectionGroupName") @Nullable String protectionGroupName,
        @CustomType.Parameter("recoveryPointCount") @Nullable Integer recoveryPointCount,
        @CustomType.Parameter("totalDiskStorageSizeInBytes") @Nullable String totalDiskStorageSizeInBytes) {
        this.diskStorageUsedInBytes = diskStorageUsedInBytes;
        this.isCollocated = isCollocated;
        this.isPresentOnCloud = isPresentOnCloud;
        this.lastBackupStatus = lastBackupStatus;
        this.lastRefreshedAt = lastRefreshedAt;
        this.oldestRecoveryPoint = oldestRecoveryPoint;
        this.onPremiseLatestRecoveryPoint = onPremiseLatestRecoveryPoint;
        this.onPremiseOldestRecoveryPoint = onPremiseOldestRecoveryPoint;
        this.onPremiseRecoveryPointCount = onPremiseRecoveryPointCount;
        this.protectableObjectLoadPath = protectableObjectLoadPath;
        this.protected_ = protected_;
        this.protectionGroupName = protectionGroupName;
        this.recoveryPointCount = recoveryPointCount;
        this.totalDiskStorageSizeInBytes = totalDiskStorageSizeInBytes;
    }

    /**
     * Used Disk storage in bytes.
     * 
    */
    public Optional<String> getDiskStorageUsedInBytes() {
        return Optional.ofNullable(this.diskStorageUsedInBytes);
    }
    /**
     * To check if backup item is collocated.
     * 
    */
    public Optional<Boolean> getIsCollocated() {
        return Optional.ofNullable(this.isCollocated);
    }
    /**
     * To check if backup item is cloud protected.
     * 
    */
    public Optional<Boolean> getIsPresentOnCloud() {
        return Optional.ofNullable(this.isPresentOnCloud);
    }
    /**
     * Last backup status information on backup item.
     * 
    */
    public Optional<String> getLastBackupStatus() {
        return Optional.ofNullable(this.lastBackupStatus);
    }
    /**
     * Last refresh time on backup item.
     * 
    */
    public Optional<String> getLastRefreshedAt() {
        return Optional.ofNullable(this.lastRefreshedAt);
    }
    /**
     * Oldest cloud recovery point time.
     * 
    */
    public Optional<String> getOldestRecoveryPoint() {
        return Optional.ofNullable(this.oldestRecoveryPoint);
    }
    /**
     * latest disk recovery point time.
     * 
    */
    public Optional<String> getOnPremiseLatestRecoveryPoint() {
        return Optional.ofNullable(this.onPremiseLatestRecoveryPoint);
    }
    /**
     * Oldest disk recovery point time.
     * 
    */
    public Optional<String> getOnPremiseOldestRecoveryPoint() {
        return Optional.ofNullable(this.onPremiseOldestRecoveryPoint);
    }
    /**
     * disk recovery point count.
     * 
    */
    public Optional<Integer> getOnPremiseRecoveryPointCount() {
        return Optional.ofNullable(this.onPremiseRecoveryPointCount);
    }
    /**
     * Attribute to provide information on various DBs.
     * 
    */
    public Map<String,String> getProtectableObjectLoadPath() {
        return this.protectableObjectLoadPath == null ? Map.of() : this.protectableObjectLoadPath;
    }
    /**
     * To check if backup item is disk protected.
     * 
    */
    public Optional<Boolean> getProtected_() {
        return Optional.ofNullable(this.protected_);
    }
    /**
     * Protection group name of the backup item.
     * 
    */
    public Optional<String> getProtectionGroupName() {
        return Optional.ofNullable(this.protectionGroupName);
    }
    /**
     * cloud recovery point count.
     * 
    */
    public Optional<Integer> getRecoveryPointCount() {
        return Optional.ofNullable(this.recoveryPointCount);
    }
    /**
     * total Disk storage in bytes.
     * 
    */
    public Optional<String> getTotalDiskStorageSizeInBytes() {
        return Optional.ofNullable(this.totalDiskStorageSizeInBytes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DPMProtectedItemExtendedInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String diskStorageUsedInBytes;
        private @Nullable Boolean isCollocated;
        private @Nullable Boolean isPresentOnCloud;
        private @Nullable String lastBackupStatus;
        private @Nullable String lastRefreshedAt;
        private @Nullable String oldestRecoveryPoint;
        private @Nullable String onPremiseLatestRecoveryPoint;
        private @Nullable String onPremiseOldestRecoveryPoint;
        private @Nullable Integer onPremiseRecoveryPointCount;
        private @Nullable Map<String,String> protectableObjectLoadPath;
        private @Nullable Boolean protected_;
        private @Nullable String protectionGroupName;
        private @Nullable Integer recoveryPointCount;
        private @Nullable String totalDiskStorageSizeInBytes;

        public Builder() {
    	      // Empty
        }

        public Builder(DPMProtectedItemExtendedInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskStorageUsedInBytes = defaults.diskStorageUsedInBytes;
    	      this.isCollocated = defaults.isCollocated;
    	      this.isPresentOnCloud = defaults.isPresentOnCloud;
    	      this.lastBackupStatus = defaults.lastBackupStatus;
    	      this.lastRefreshedAt = defaults.lastRefreshedAt;
    	      this.oldestRecoveryPoint = defaults.oldestRecoveryPoint;
    	      this.onPremiseLatestRecoveryPoint = defaults.onPremiseLatestRecoveryPoint;
    	      this.onPremiseOldestRecoveryPoint = defaults.onPremiseOldestRecoveryPoint;
    	      this.onPremiseRecoveryPointCount = defaults.onPremiseRecoveryPointCount;
    	      this.protectableObjectLoadPath = defaults.protectableObjectLoadPath;
    	      this.protected_ = defaults.protected_;
    	      this.protectionGroupName = defaults.protectionGroupName;
    	      this.recoveryPointCount = defaults.recoveryPointCount;
    	      this.totalDiskStorageSizeInBytes = defaults.totalDiskStorageSizeInBytes;
        }

        public Builder diskStorageUsedInBytes(@Nullable String diskStorageUsedInBytes) {
            this.diskStorageUsedInBytes = diskStorageUsedInBytes;
            return this;
        }
        public Builder isCollocated(@Nullable Boolean isCollocated) {
            this.isCollocated = isCollocated;
            return this;
        }
        public Builder isPresentOnCloud(@Nullable Boolean isPresentOnCloud) {
            this.isPresentOnCloud = isPresentOnCloud;
            return this;
        }
        public Builder lastBackupStatus(@Nullable String lastBackupStatus) {
            this.lastBackupStatus = lastBackupStatus;
            return this;
        }
        public Builder lastRefreshedAt(@Nullable String lastRefreshedAt) {
            this.lastRefreshedAt = lastRefreshedAt;
            return this;
        }
        public Builder oldestRecoveryPoint(@Nullable String oldestRecoveryPoint) {
            this.oldestRecoveryPoint = oldestRecoveryPoint;
            return this;
        }
        public Builder onPremiseLatestRecoveryPoint(@Nullable String onPremiseLatestRecoveryPoint) {
            this.onPremiseLatestRecoveryPoint = onPremiseLatestRecoveryPoint;
            return this;
        }
        public Builder onPremiseOldestRecoveryPoint(@Nullable String onPremiseOldestRecoveryPoint) {
            this.onPremiseOldestRecoveryPoint = onPremiseOldestRecoveryPoint;
            return this;
        }
        public Builder onPremiseRecoveryPointCount(@Nullable Integer onPremiseRecoveryPointCount) {
            this.onPremiseRecoveryPointCount = onPremiseRecoveryPointCount;
            return this;
        }
        public Builder protectableObjectLoadPath(@Nullable Map<String,String> protectableObjectLoadPath) {
            this.protectableObjectLoadPath = protectableObjectLoadPath;
            return this;
        }
        public Builder protected_(@Nullable Boolean protected_) {
            this.protected_ = protected_;
            return this;
        }
        public Builder protectionGroupName(@Nullable String protectionGroupName) {
            this.protectionGroupName = protectionGroupName;
            return this;
        }
        public Builder recoveryPointCount(@Nullable Integer recoveryPointCount) {
            this.recoveryPointCount = recoveryPointCount;
            return this;
        }
        public Builder totalDiskStorageSizeInBytes(@Nullable String totalDiskStorageSizeInBytes) {
            this.totalDiskStorageSizeInBytes = totalDiskStorageSizeInBytes;
            return this;
        }        public DPMProtectedItemExtendedInfoResponse build() {
            return new DPMProtectedItemExtendedInfoResponse(diskStorageUsedInBytes, isCollocated, isPresentOnCloud, lastBackupStatus, lastRefreshedAt, oldestRecoveryPoint, onPremiseLatestRecoveryPoint, onPremiseOldestRecoveryPoint, onPremiseRecoveryPointCount, protectableObjectLoadPath, protected_, protectionGroupName, recoveryPointCount, totalDiskStorageSizeInBytes);
        }
    }
}
