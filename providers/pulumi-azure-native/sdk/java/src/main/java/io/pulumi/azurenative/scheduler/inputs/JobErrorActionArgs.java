// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.scheduler.inputs;

import io.pulumi.azurenative.scheduler.enums.JobActionType;
import io.pulumi.azurenative.scheduler.inputs.HttpRequestArgs;
import io.pulumi.azurenative.scheduler.inputs.RetryPolicyArgs;
import io.pulumi.azurenative.scheduler.inputs.ServiceBusQueueMessageArgs;
import io.pulumi.azurenative.scheduler.inputs.ServiceBusTopicMessageArgs;
import io.pulumi.azurenative.scheduler.inputs.StorageQueueMessageArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobErrorActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobErrorActionArgs Empty = new JobErrorActionArgs();

    /**
     * Gets or sets the storage queue message.
     * 
     */
    @InputImport(name="queueMessage")
    private final @Nullable Input<StorageQueueMessageArgs> queueMessage;

    public Input<StorageQueueMessageArgs> getQueueMessage() {
        return this.queueMessage == null ? Input.empty() : this.queueMessage;
    }

    /**
     * Gets or sets the http requests.
     * 
     */
    @InputImport(name="request")
    private final @Nullable Input<HttpRequestArgs> request;

    public Input<HttpRequestArgs> getRequest() {
        return this.request == null ? Input.empty() : this.request;
    }

    /**
     * Gets or sets the retry policy.
     * 
     */
    @InputImport(name="retryPolicy")
    private final @Nullable Input<RetryPolicyArgs> retryPolicy;

    public Input<RetryPolicyArgs> getRetryPolicy() {
        return this.retryPolicy == null ? Input.empty() : this.retryPolicy;
    }

    /**
     * Gets or sets the service bus queue message.
     * 
     */
    @InputImport(name="serviceBusQueueMessage")
    private final @Nullable Input<ServiceBusQueueMessageArgs> serviceBusQueueMessage;

    public Input<ServiceBusQueueMessageArgs> getServiceBusQueueMessage() {
        return this.serviceBusQueueMessage == null ? Input.empty() : this.serviceBusQueueMessage;
    }

    /**
     * Gets or sets the service bus topic message.
     * 
     */
    @InputImport(name="serviceBusTopicMessage")
    private final @Nullable Input<ServiceBusTopicMessageArgs> serviceBusTopicMessage;

    public Input<ServiceBusTopicMessageArgs> getServiceBusTopicMessage() {
        return this.serviceBusTopicMessage == null ? Input.empty() : this.serviceBusTopicMessage;
    }

    /**
     * Gets or sets the job error action type.
     * 
     */
    @InputImport(name="type")
    private final @Nullable Input<JobActionType> type;

    public Input<JobActionType> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public JobErrorActionArgs(
        @Nullable Input<StorageQueueMessageArgs> queueMessage,
        @Nullable Input<HttpRequestArgs> request,
        @Nullable Input<RetryPolicyArgs> retryPolicy,
        @Nullable Input<ServiceBusQueueMessageArgs> serviceBusQueueMessage,
        @Nullable Input<ServiceBusTopicMessageArgs> serviceBusTopicMessage,
        @Nullable Input<JobActionType> type) {
        this.queueMessage = queueMessage;
        this.request = request;
        this.retryPolicy = retryPolicy;
        this.serviceBusQueueMessage = serviceBusQueueMessage;
        this.serviceBusTopicMessage = serviceBusTopicMessage;
        this.type = type;
    }

    private JobErrorActionArgs() {
        this.queueMessage = Input.empty();
        this.request = Input.empty();
        this.retryPolicy = Input.empty();
        this.serviceBusQueueMessage = Input.empty();
        this.serviceBusTopicMessage = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobErrorActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<StorageQueueMessageArgs> queueMessage;
        private @Nullable Input<HttpRequestArgs> request;
        private @Nullable Input<RetryPolicyArgs> retryPolicy;
        private @Nullable Input<ServiceBusQueueMessageArgs> serviceBusQueueMessage;
        private @Nullable Input<ServiceBusTopicMessageArgs> serviceBusTopicMessage;
        private @Nullable Input<JobActionType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(JobErrorActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.queueMessage = defaults.queueMessage;
    	      this.request = defaults.request;
    	      this.retryPolicy = defaults.retryPolicy;
    	      this.serviceBusQueueMessage = defaults.serviceBusQueueMessage;
    	      this.serviceBusTopicMessage = defaults.serviceBusTopicMessage;
    	      this.type = defaults.type;
        }

        public Builder setQueueMessage(@Nullable Input<StorageQueueMessageArgs> queueMessage) {
            this.queueMessage = queueMessage;
            return this;
        }

        public Builder setQueueMessage(@Nullable StorageQueueMessageArgs queueMessage) {
            this.queueMessage = Input.ofNullable(queueMessage);
            return this;
        }

        public Builder setRequest(@Nullable Input<HttpRequestArgs> request) {
            this.request = request;
            return this;
        }

        public Builder setRequest(@Nullable HttpRequestArgs request) {
            this.request = Input.ofNullable(request);
            return this;
        }

        public Builder setRetryPolicy(@Nullable Input<RetryPolicyArgs> retryPolicy) {
            this.retryPolicy = retryPolicy;
            return this;
        }

        public Builder setRetryPolicy(@Nullable RetryPolicyArgs retryPolicy) {
            this.retryPolicy = Input.ofNullable(retryPolicy);
            return this;
        }

        public Builder setServiceBusQueueMessage(@Nullable Input<ServiceBusQueueMessageArgs> serviceBusQueueMessage) {
            this.serviceBusQueueMessage = serviceBusQueueMessage;
            return this;
        }

        public Builder setServiceBusQueueMessage(@Nullable ServiceBusQueueMessageArgs serviceBusQueueMessage) {
            this.serviceBusQueueMessage = Input.ofNullable(serviceBusQueueMessage);
            return this;
        }

        public Builder setServiceBusTopicMessage(@Nullable Input<ServiceBusTopicMessageArgs> serviceBusTopicMessage) {
            this.serviceBusTopicMessage = serviceBusTopicMessage;
            return this;
        }

        public Builder setServiceBusTopicMessage(@Nullable ServiceBusTopicMessageArgs serviceBusTopicMessage) {
            this.serviceBusTopicMessage = Input.ofNullable(serviceBusTopicMessage);
            return this;
        }

        public Builder setType(@Nullable Input<JobActionType> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable JobActionType type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public JobErrorActionArgs build() {
            return new JobErrorActionArgs(queueMessage, request, retryPolicy, serviceBusQueueMessage, serviceBusTopicMessage, type);
        }
    }
}
