// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement;

import io.pulumi.azurenative.apimanagement.enums.VirtualNetworkType;
import io.pulumi.azurenative.apimanagement.inputs.AdditionalLocationArgs;
import io.pulumi.azurenative.apimanagement.inputs.ApiManagementServiceIdentityArgs;
import io.pulumi.azurenative.apimanagement.inputs.ApiManagementServiceSkuPropertiesArgs;
import io.pulumi.azurenative.apimanagement.inputs.ApiVersionConstraintArgs;
import io.pulumi.azurenative.apimanagement.inputs.CertificateConfigurationArgs;
import io.pulumi.azurenative.apimanagement.inputs.HostnameConfigurationArgs;
import io.pulumi.azurenative.apimanagement.inputs.VirtualNetworkConfigurationArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApiManagementServiceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApiManagementServiceArgs Empty = new ApiManagementServiceArgs();

    /**
     * Additional datacenter locations of the API Management service.
     * 
     */
    @InputImport(name="additionalLocations")
      private final @Nullable Input<List<AdditionalLocationArgs>> additionalLocations;

    public Input<List<AdditionalLocationArgs>> getAdditionalLocations() {
        return this.additionalLocations == null ? Input.empty() : this.additionalLocations;
    }

    /**
     * Control Plane Apis version constraint for the API Management service.
     * 
     */
    @InputImport(name="apiVersionConstraint")
      private final @Nullable Input<ApiVersionConstraintArgs> apiVersionConstraint;

    public Input<ApiVersionConstraintArgs> getApiVersionConstraint() {
        return this.apiVersionConstraint == null ? Input.empty() : this.apiVersionConstraint;
    }

    /**
     * List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
     * 
     */
    @InputImport(name="certificates")
      private final @Nullable Input<List<CertificateConfigurationArgs>> certificates;

    public Input<List<CertificateConfigurationArgs>> getCertificates() {
        return this.certificates == null ? Input.empty() : this.certificates;
    }

    /**
     * Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.  Note: next ciphers can't be disabled since they are required by Azure CloudService internal components: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384
     * 
     */
    @InputImport(name="customProperties")
      private final @Nullable Input<Map<String,String>> customProperties;

    public Input<Map<String,String>> getCustomProperties() {
        return this.customProperties == null ? Input.empty() : this.customProperties;
    }

    /**
     * Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region.
     * 
     */
    @InputImport(name="disableGateway")
      private final @Nullable Input<Boolean> disableGateway;

    public Input<Boolean> getDisableGateway() {
        return this.disableGateway == null ? Input.empty() : this.disableGateway;
    }

    /**
     * Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.
     * 
     */
    @InputImport(name="enableClientCertificate")
      private final @Nullable Input<Boolean> enableClientCertificate;

    public Input<Boolean> getEnableClientCertificate() {
        return this.enableClientCertificate == null ? Input.empty() : this.enableClientCertificate;
    }

    /**
     * Custom hostname configuration of the API Management service.
     * 
     */
    @InputImport(name="hostnameConfigurations")
      private final @Nullable Input<List<HostnameConfigurationArgs>> hostnameConfigurations;

    public Input<List<HostnameConfigurationArgs>> getHostnameConfigurations() {
        return this.hostnameConfigurations == null ? Input.empty() : this.hostnameConfigurations;
    }

    /**
     * Managed service identity of the Api Management service.
     * 
     */
    @InputImport(name="identity")
      private final @Nullable Input<ApiManagementServiceIdentityArgs> identity;

    public Input<ApiManagementServiceIdentityArgs> getIdentity() {
        return this.identity == null ? Input.empty() : this.identity;
    }

    /**
     * Resource location.
     * 
     */
    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Email address from which the notification will be sent.
     * 
     */
    @InputImport(name="notificationSenderEmail")
      private final @Nullable Input<String> notificationSenderEmail;

    public Input<String> getNotificationSenderEmail() {
        return this.notificationSenderEmail == null ? Input.empty() : this.notificationSenderEmail;
    }

    /**
     * Publisher email.
     * 
     */
    @InputImport(name="publisherEmail", required=true)
      private final Input<String> publisherEmail;

    public Input<String> getPublisherEmail() {
        return this.publisherEmail;
    }

    /**
     * Publisher name.
     * 
     */
    @InputImport(name="publisherName", required=true)
      private final Input<String> publisherName;

    public Input<String> getPublisherName() {
        return this.publisherName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Undelete Api Management Service if it was previously soft-deleted. If this flag is specified and set to True all other properties will be ignored.
     * 
     */
    @InputImport(name="restore")
      private final @Nullable Input<Boolean> restore;

    public Input<Boolean> getRestore() {
        return this.restore == null ? Input.empty() : this.restore;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @InputImport(name="serviceName")
      private final @Nullable Input<String> serviceName;

    public Input<String> getServiceName() {
        return this.serviceName == null ? Input.empty() : this.serviceName;
    }

    /**
     * SKU properties of the API Management service.
     * 
     */
    @InputImport(name="sku", required=true)
      private final Input<ApiManagementServiceSkuPropertiesArgs> sku;

    public Input<ApiManagementServiceSkuPropertiesArgs> getSku() {
        return this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Virtual network configuration of the API Management service.
     * 
     */
    @InputImport(name="virtualNetworkConfiguration")
      private final @Nullable Input<VirtualNetworkConfigurationArgs> virtualNetworkConfiguration;

    public Input<VirtualNetworkConfigurationArgs> getVirtualNetworkConfiguration() {
        return this.virtualNetworkConfiguration == null ? Input.empty() : this.virtualNetworkConfiguration;
    }

    /**
     * The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
     * 
     */
    @InputImport(name="virtualNetworkType")
      private final @Nullable Input<Either<String,VirtualNetworkType>> virtualNetworkType;

    public Input<Either<String,VirtualNetworkType>> getVirtualNetworkType() {
        return this.virtualNetworkType == null ? Input.empty() : this.virtualNetworkType;
    }

    /**
     * A list of availability zones denoting where the resource needs to come from.
     * 
     */
    @InputImport(name="zones")
      private final @Nullable Input<List<String>> zones;

    public Input<List<String>> getZones() {
        return this.zones == null ? Input.empty() : this.zones;
    }

    public ApiManagementServiceArgs(
        @Nullable Input<List<AdditionalLocationArgs>> additionalLocations,
        @Nullable Input<ApiVersionConstraintArgs> apiVersionConstraint,
        @Nullable Input<List<CertificateConfigurationArgs>> certificates,
        @Nullable Input<Map<String,String>> customProperties,
        @Nullable Input<Boolean> disableGateway,
        @Nullable Input<Boolean> enableClientCertificate,
        @Nullable Input<List<HostnameConfigurationArgs>> hostnameConfigurations,
        @Nullable Input<ApiManagementServiceIdentityArgs> identity,
        @Nullable Input<String> location,
        @Nullable Input<String> notificationSenderEmail,
        Input<String> publisherEmail,
        Input<String> publisherName,
        Input<String> resourceGroupName,
        @Nullable Input<Boolean> restore,
        @Nullable Input<String> serviceName,
        Input<ApiManagementServiceSkuPropertiesArgs> sku,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<VirtualNetworkConfigurationArgs> virtualNetworkConfiguration,
        @Nullable Input<Either<String,VirtualNetworkType>> virtualNetworkType,
        @Nullable Input<List<String>> zones) {
        this.additionalLocations = additionalLocations;
        this.apiVersionConstraint = apiVersionConstraint;
        this.certificates = certificates;
        this.customProperties = customProperties;
        this.disableGateway = disableGateway == null ? Input.ofNullable(false) : disableGateway;
        this.enableClientCertificate = enableClientCertificate == null ? Input.ofNullable(false) : enableClientCertificate;
        this.hostnameConfigurations = hostnameConfigurations;
        this.identity = identity;
        this.location = location;
        this.notificationSenderEmail = notificationSenderEmail;
        this.publisherEmail = Objects.requireNonNull(publisherEmail, "expected parameter 'publisherEmail' to be non-null");
        this.publisherName = Objects.requireNonNull(publisherName, "expected parameter 'publisherName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.restore = restore == null ? Input.ofNullable(false) : restore;
        this.serviceName = serviceName;
        this.sku = Objects.requireNonNull(sku, "expected parameter 'sku' to be non-null");
        this.tags = tags;
        this.virtualNetworkConfiguration = virtualNetworkConfiguration;
        this.virtualNetworkType = virtualNetworkType == null ? Input.ofLeft("None") : virtualNetworkType;
        this.zones = zones;
    }

    private ApiManagementServiceArgs() {
        this.additionalLocations = Input.empty();
        this.apiVersionConstraint = Input.empty();
        this.certificates = Input.empty();
        this.customProperties = Input.empty();
        this.disableGateway = Input.empty();
        this.enableClientCertificate = Input.empty();
        this.hostnameConfigurations = Input.empty();
        this.identity = Input.empty();
        this.location = Input.empty();
        this.notificationSenderEmail = Input.empty();
        this.publisherEmail = Input.empty();
        this.publisherName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.restore = Input.empty();
        this.serviceName = Input.empty();
        this.sku = Input.empty();
        this.tags = Input.empty();
        this.virtualNetworkConfiguration = Input.empty();
        this.virtualNetworkType = Input.empty();
        this.zones = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiManagementServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<AdditionalLocationArgs>> additionalLocations;
        private @Nullable Input<ApiVersionConstraintArgs> apiVersionConstraint;
        private @Nullable Input<List<CertificateConfigurationArgs>> certificates;
        private @Nullable Input<Map<String,String>> customProperties;
        private @Nullable Input<Boolean> disableGateway;
        private @Nullable Input<Boolean> enableClientCertificate;
        private @Nullable Input<List<HostnameConfigurationArgs>> hostnameConfigurations;
        private @Nullable Input<ApiManagementServiceIdentityArgs> identity;
        private @Nullable Input<String> location;
        private @Nullable Input<String> notificationSenderEmail;
        private Input<String> publisherEmail;
        private Input<String> publisherName;
        private Input<String> resourceGroupName;
        private @Nullable Input<Boolean> restore;
        private @Nullable Input<String> serviceName;
        private Input<ApiManagementServiceSkuPropertiesArgs> sku;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<VirtualNetworkConfigurationArgs> virtualNetworkConfiguration;
        private @Nullable Input<Either<String,VirtualNetworkType>> virtualNetworkType;
        private @Nullable Input<List<String>> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(ApiManagementServiceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalLocations = defaults.additionalLocations;
    	      this.apiVersionConstraint = defaults.apiVersionConstraint;
    	      this.certificates = defaults.certificates;
    	      this.customProperties = defaults.customProperties;
    	      this.disableGateway = defaults.disableGateway;
    	      this.enableClientCertificate = defaults.enableClientCertificate;
    	      this.hostnameConfigurations = defaults.hostnameConfigurations;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.notificationSenderEmail = defaults.notificationSenderEmail;
    	      this.publisherEmail = defaults.publisherEmail;
    	      this.publisherName = defaults.publisherName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.restore = defaults.restore;
    	      this.serviceName = defaults.serviceName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.virtualNetworkConfiguration = defaults.virtualNetworkConfiguration;
    	      this.virtualNetworkType = defaults.virtualNetworkType;
    	      this.zones = defaults.zones;
        }

        public Builder additionalLocations(@Nullable Input<List<AdditionalLocationArgs>> additionalLocations) {
            this.additionalLocations = additionalLocations;
            return this;
        }

        public Builder additionalLocations(@Nullable List<AdditionalLocationArgs> additionalLocations) {
            this.additionalLocations = Input.ofNullable(additionalLocations);
            return this;
        }

        public Builder apiVersionConstraint(@Nullable Input<ApiVersionConstraintArgs> apiVersionConstraint) {
            this.apiVersionConstraint = apiVersionConstraint;
            return this;
        }

        public Builder apiVersionConstraint(@Nullable ApiVersionConstraintArgs apiVersionConstraint) {
            this.apiVersionConstraint = Input.ofNullable(apiVersionConstraint);
            return this;
        }

        public Builder certificates(@Nullable Input<List<CertificateConfigurationArgs>> certificates) {
            this.certificates = certificates;
            return this;
        }

        public Builder certificates(@Nullable List<CertificateConfigurationArgs> certificates) {
            this.certificates = Input.ofNullable(certificates);
            return this;
        }

        public Builder customProperties(@Nullable Input<Map<String,String>> customProperties) {
            this.customProperties = customProperties;
            return this;
        }

        public Builder customProperties(@Nullable Map<String,String> customProperties) {
            this.customProperties = Input.ofNullable(customProperties);
            return this;
        }

        public Builder disableGateway(@Nullable Input<Boolean> disableGateway) {
            this.disableGateway = disableGateway;
            return this;
        }

        public Builder disableGateway(@Nullable Boolean disableGateway) {
            this.disableGateway = Input.ofNullable(disableGateway);
            return this;
        }

        public Builder enableClientCertificate(@Nullable Input<Boolean> enableClientCertificate) {
            this.enableClientCertificate = enableClientCertificate;
            return this;
        }

        public Builder enableClientCertificate(@Nullable Boolean enableClientCertificate) {
            this.enableClientCertificate = Input.ofNullable(enableClientCertificate);
            return this;
        }

        public Builder hostnameConfigurations(@Nullable Input<List<HostnameConfigurationArgs>> hostnameConfigurations) {
            this.hostnameConfigurations = hostnameConfigurations;
            return this;
        }

        public Builder hostnameConfigurations(@Nullable List<HostnameConfigurationArgs> hostnameConfigurations) {
            this.hostnameConfigurations = Input.ofNullable(hostnameConfigurations);
            return this;
        }

        public Builder identity(@Nullable Input<ApiManagementServiceIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }

        public Builder identity(@Nullable ApiManagementServiceIdentityArgs identity) {
            this.identity = Input.ofNullable(identity);
            return this;
        }

        public Builder location(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder notificationSenderEmail(@Nullable Input<String> notificationSenderEmail) {
            this.notificationSenderEmail = notificationSenderEmail;
            return this;
        }

        public Builder notificationSenderEmail(@Nullable String notificationSenderEmail) {
            this.notificationSenderEmail = Input.ofNullable(notificationSenderEmail);
            return this;
        }

        public Builder publisherEmail(Input<String> publisherEmail) {
            this.publisherEmail = Objects.requireNonNull(publisherEmail);
            return this;
        }

        public Builder publisherEmail(String publisherEmail) {
            this.publisherEmail = Input.of(Objects.requireNonNull(publisherEmail));
            return this;
        }

        public Builder publisherName(Input<String> publisherName) {
            this.publisherName = Objects.requireNonNull(publisherName);
            return this;
        }

        public Builder publisherName(String publisherName) {
            this.publisherName = Input.of(Objects.requireNonNull(publisherName));
            return this;
        }

        public Builder resourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder restore(@Nullable Input<Boolean> restore) {
            this.restore = restore;
            return this;
        }

        public Builder restore(@Nullable Boolean restore) {
            this.restore = Input.ofNullable(restore);
            return this;
        }

        public Builder serviceName(@Nullable Input<String> serviceName) {
            this.serviceName = serviceName;
            return this;
        }

        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = Input.ofNullable(serviceName);
            return this;
        }

        public Builder sku(Input<ApiManagementServiceSkuPropertiesArgs> sku) {
            this.sku = Objects.requireNonNull(sku);
            return this;
        }

        public Builder sku(ApiManagementServiceSkuPropertiesArgs sku) {
            this.sku = Input.of(Objects.requireNonNull(sku));
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder virtualNetworkConfiguration(@Nullable Input<VirtualNetworkConfigurationArgs> virtualNetworkConfiguration) {
            this.virtualNetworkConfiguration = virtualNetworkConfiguration;
            return this;
        }

        public Builder virtualNetworkConfiguration(@Nullable VirtualNetworkConfigurationArgs virtualNetworkConfiguration) {
            this.virtualNetworkConfiguration = Input.ofNullable(virtualNetworkConfiguration);
            return this;
        }

        public Builder virtualNetworkType(@Nullable Input<Either<String,VirtualNetworkType>> virtualNetworkType) {
            this.virtualNetworkType = virtualNetworkType;
            return this;
        }

        public Builder virtualNetworkType(@Nullable Either<String,VirtualNetworkType> virtualNetworkType) {
            this.virtualNetworkType = Input.ofNullable(virtualNetworkType);
            return this;
        }

        public Builder zones(@Nullable Input<List<String>> zones) {
            this.zones = zones;
            return this;
        }

        public Builder zones(@Nullable List<String> zones) {
            this.zones = Input.ofNullable(zones);
            return this;
        }
        public ApiManagementServiceArgs build() {
            return new ApiManagementServiceArgs(additionalLocations, apiVersionConstraint, certificates, customProperties, disableGateway, enableClientCertificate, hostnameConfigurations, identity, location, notificationSenderEmail, publisherEmail, publisherName, resourceGroupName, restore, serviceName, sku, tags, virtualNetworkConfiguration, virtualNetworkType, zones);
        }
    }
}
