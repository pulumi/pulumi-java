// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.outputs;

import io.pulumi.azurenative.batch.outputs.ApplicationPackageReferenceResponse;
import io.pulumi.azurenative.batch.outputs.AutoScaleRunResponse;
import io.pulumi.azurenative.batch.outputs.BatchPoolIdentityResponse;
import io.pulumi.azurenative.batch.outputs.CertificateReferenceResponse;
import io.pulumi.azurenative.batch.outputs.DeploymentConfigurationResponse;
import io.pulumi.azurenative.batch.outputs.MetadataItemResponse;
import io.pulumi.azurenative.batch.outputs.MountConfigurationResponse;
import io.pulumi.azurenative.batch.outputs.NetworkConfigurationResponse;
import io.pulumi.azurenative.batch.outputs.ResizeOperationStatusResponse;
import io.pulumi.azurenative.batch.outputs.ScaleSettingsResponse;
import io.pulumi.azurenative.batch.outputs.StartTaskResponse;
import io.pulumi.azurenative.batch.outputs.TaskSchedulingPolicyResponse;
import io.pulumi.azurenative.batch.outputs.UserAccountResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetPoolResult {
    private final String allocationState;
    private final String allocationStateTransitionTime;
    private final @Nullable List<String> applicationLicenses;
    private final @Nullable List<ApplicationPackageReferenceResponse> applicationPackages;
    private final AutoScaleRunResponse autoScaleRun;
    private final @Nullable List<CertificateReferenceResponse> certificates;
    private final String creationTime;
    private final Integer currentDedicatedNodes;
    private final Integer currentLowPriorityNodes;
    private final @Nullable DeploymentConfigurationResponse deploymentConfiguration;
    private final @Nullable String displayName;
    private final String etag;
    private final String id;
    private final @Nullable BatchPoolIdentityResponse identity;
    private final @Nullable String interNodeCommunication;
    private final String lastModified;
    private final @Nullable List<MetadataItemResponse> metadata;
    private final @Nullable List<MountConfigurationResponse> mountConfiguration;
    private final String name;
    private final @Nullable NetworkConfigurationResponse networkConfiguration;
    private final String provisioningState;
    private final String provisioningStateTransitionTime;
    private final ResizeOperationStatusResponse resizeOperationStatus;
    private final @Nullable ScaleSettingsResponse scaleSettings;
    private final @Nullable StartTaskResponse startTask;
    private final @Nullable TaskSchedulingPolicyResponse taskSchedulingPolicy;
    private final @Nullable Integer taskSlotsPerNode;
    private final String type;
    private final @Nullable List<UserAccountResponse> userAccounts;
    private final @Nullable String vmSize;

    @OutputCustomType.Constructor({"allocationState","allocationStateTransitionTime","applicationLicenses","applicationPackages","autoScaleRun","certificates","creationTime","currentDedicatedNodes","currentLowPriorityNodes","deploymentConfiguration","displayName","etag","id","identity","interNodeCommunication","lastModified","metadata","mountConfiguration","name","networkConfiguration","provisioningState","provisioningStateTransitionTime","resizeOperationStatus","scaleSettings","startTask","taskSchedulingPolicy","taskSlotsPerNode","type","userAccounts","vmSize"})
    private GetPoolResult(
        String allocationState,
        String allocationStateTransitionTime,
        @Nullable List<String> applicationLicenses,
        @Nullable List<ApplicationPackageReferenceResponse> applicationPackages,
        AutoScaleRunResponse autoScaleRun,
        @Nullable List<CertificateReferenceResponse> certificates,
        String creationTime,
        Integer currentDedicatedNodes,
        Integer currentLowPriorityNodes,
        @Nullable DeploymentConfigurationResponse deploymentConfiguration,
        @Nullable String displayName,
        String etag,
        String id,
        @Nullable BatchPoolIdentityResponse identity,
        @Nullable String interNodeCommunication,
        String lastModified,
        @Nullable List<MetadataItemResponse> metadata,
        @Nullable List<MountConfigurationResponse> mountConfiguration,
        String name,
        @Nullable NetworkConfigurationResponse networkConfiguration,
        String provisioningState,
        String provisioningStateTransitionTime,
        ResizeOperationStatusResponse resizeOperationStatus,
        @Nullable ScaleSettingsResponse scaleSettings,
        @Nullable StartTaskResponse startTask,
        @Nullable TaskSchedulingPolicyResponse taskSchedulingPolicy,
        @Nullable Integer taskSlotsPerNode,
        String type,
        @Nullable List<UserAccountResponse> userAccounts,
        @Nullable String vmSize) {
        this.allocationState = Objects.requireNonNull(allocationState);
        this.allocationStateTransitionTime = Objects.requireNonNull(allocationStateTransitionTime);
        this.applicationLicenses = applicationLicenses;
        this.applicationPackages = applicationPackages;
        this.autoScaleRun = Objects.requireNonNull(autoScaleRun);
        this.certificates = certificates;
        this.creationTime = Objects.requireNonNull(creationTime);
        this.currentDedicatedNodes = Objects.requireNonNull(currentDedicatedNodes);
        this.currentLowPriorityNodes = Objects.requireNonNull(currentLowPriorityNodes);
        this.deploymentConfiguration = deploymentConfiguration;
        this.displayName = displayName;
        this.etag = Objects.requireNonNull(etag);
        this.id = Objects.requireNonNull(id);
        this.identity = identity;
        this.interNodeCommunication = interNodeCommunication;
        this.lastModified = Objects.requireNonNull(lastModified);
        this.metadata = metadata;
        this.mountConfiguration = mountConfiguration;
        this.name = Objects.requireNonNull(name);
        this.networkConfiguration = networkConfiguration;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.provisioningStateTransitionTime = Objects.requireNonNull(provisioningStateTransitionTime);
        this.resizeOperationStatus = Objects.requireNonNull(resizeOperationStatus);
        this.scaleSettings = scaleSettings;
        this.startTask = startTask;
        this.taskSchedulingPolicy = taskSchedulingPolicy;
        this.taskSlotsPerNode = taskSlotsPerNode;
        this.type = Objects.requireNonNull(type);
        this.userAccounts = userAccounts;
        this.vmSize = vmSize;
    }

    public String getAllocationState() {
        return this.allocationState;
    }
    public String getAllocationStateTransitionTime() {
        return this.allocationStateTransitionTime;
    }
    public List<String> getApplicationLicenses() {
        return this.applicationLicenses == null ? List.of() : this.applicationLicenses;
    }
    public List<ApplicationPackageReferenceResponse> getApplicationPackages() {
        return this.applicationPackages == null ? List.of() : this.applicationPackages;
    }
    public AutoScaleRunResponse getAutoScaleRun() {
        return this.autoScaleRun;
    }
    public List<CertificateReferenceResponse> getCertificates() {
        return this.certificates == null ? List.of() : this.certificates;
    }
    public String getCreationTime() {
        return this.creationTime;
    }
    public Integer getCurrentDedicatedNodes() {
        return this.currentDedicatedNodes;
    }
    public Integer getCurrentLowPriorityNodes() {
        return this.currentLowPriorityNodes;
    }
    public Optional<DeploymentConfigurationResponse> getDeploymentConfiguration() {
        return Optional.ofNullable(this.deploymentConfiguration);
    }
    public Optional<String> getDisplayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String getEtag() {
        return this.etag;
    }
    public String getId() {
        return this.id;
    }
    public Optional<BatchPoolIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    public Optional<String> getInterNodeCommunication() {
        return Optional.ofNullable(this.interNodeCommunication);
    }
    public String getLastModified() {
        return this.lastModified;
    }
    public List<MetadataItemResponse> getMetadata() {
        return this.metadata == null ? List.of() : this.metadata;
    }
    public List<MountConfigurationResponse> getMountConfiguration() {
        return this.mountConfiguration == null ? List.of() : this.mountConfiguration;
    }
    public String getName() {
        return this.name;
    }
    public Optional<NetworkConfigurationResponse> getNetworkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public String getProvisioningStateTransitionTime() {
        return this.provisioningStateTransitionTime;
    }
    public ResizeOperationStatusResponse getResizeOperationStatus() {
        return this.resizeOperationStatus;
    }
    public Optional<ScaleSettingsResponse> getScaleSettings() {
        return Optional.ofNullable(this.scaleSettings);
    }
    public Optional<StartTaskResponse> getStartTask() {
        return Optional.ofNullable(this.startTask);
    }
    public Optional<TaskSchedulingPolicyResponse> getTaskSchedulingPolicy() {
        return Optional.ofNullable(this.taskSchedulingPolicy);
    }
    public Optional<Integer> getTaskSlotsPerNode() {
        return Optional.ofNullable(this.taskSlotsPerNode);
    }
    public String getType() {
        return this.type;
    }
    public List<UserAccountResponse> getUserAccounts() {
        return this.userAccounts == null ? List.of() : this.userAccounts;
    }
    public Optional<String> getVmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPoolResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String allocationState;
        private String allocationStateTransitionTime;
        private @Nullable List<String> applicationLicenses;
        private @Nullable List<ApplicationPackageReferenceResponse> applicationPackages;
        private AutoScaleRunResponse autoScaleRun;
        private @Nullable List<CertificateReferenceResponse> certificates;
        private String creationTime;
        private Integer currentDedicatedNodes;
        private Integer currentLowPriorityNodes;
        private @Nullable DeploymentConfigurationResponse deploymentConfiguration;
        private @Nullable String displayName;
        private String etag;
        private String id;
        private @Nullable BatchPoolIdentityResponse identity;
        private @Nullable String interNodeCommunication;
        private String lastModified;
        private @Nullable List<MetadataItemResponse> metadata;
        private @Nullable List<MountConfigurationResponse> mountConfiguration;
        private String name;
        private @Nullable NetworkConfigurationResponse networkConfiguration;
        private String provisioningState;
        private String provisioningStateTransitionTime;
        private ResizeOperationStatusResponse resizeOperationStatus;
        private @Nullable ScaleSettingsResponse scaleSettings;
        private @Nullable StartTaskResponse startTask;
        private @Nullable TaskSchedulingPolicyResponse taskSchedulingPolicy;
        private @Nullable Integer taskSlotsPerNode;
        private String type;
        private @Nullable List<UserAccountResponse> userAccounts;
        private @Nullable String vmSize;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationState = defaults.allocationState;
    	      this.allocationStateTransitionTime = defaults.allocationStateTransitionTime;
    	      this.applicationLicenses = defaults.applicationLicenses;
    	      this.applicationPackages = defaults.applicationPackages;
    	      this.autoScaleRun = defaults.autoScaleRun;
    	      this.certificates = defaults.certificates;
    	      this.creationTime = defaults.creationTime;
    	      this.currentDedicatedNodes = defaults.currentDedicatedNodes;
    	      this.currentLowPriorityNodes = defaults.currentLowPriorityNodes;
    	      this.deploymentConfiguration = defaults.deploymentConfiguration;
    	      this.displayName = defaults.displayName;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.interNodeCommunication = defaults.interNodeCommunication;
    	      this.lastModified = defaults.lastModified;
    	      this.metadata = defaults.metadata;
    	      this.mountConfiguration = defaults.mountConfiguration;
    	      this.name = defaults.name;
    	      this.networkConfiguration = defaults.networkConfiguration;
    	      this.provisioningState = defaults.provisioningState;
    	      this.provisioningStateTransitionTime = defaults.provisioningStateTransitionTime;
    	      this.resizeOperationStatus = defaults.resizeOperationStatus;
    	      this.scaleSettings = defaults.scaleSettings;
    	      this.startTask = defaults.startTask;
    	      this.taskSchedulingPolicy = defaults.taskSchedulingPolicy;
    	      this.taskSlotsPerNode = defaults.taskSlotsPerNode;
    	      this.type = defaults.type;
    	      this.userAccounts = defaults.userAccounts;
    	      this.vmSize = defaults.vmSize;
        }

        public Builder setAllocationState(String allocationState) {
            this.allocationState = Objects.requireNonNull(allocationState);
            return this;
        }

        public Builder setAllocationStateTransitionTime(String allocationStateTransitionTime) {
            this.allocationStateTransitionTime = Objects.requireNonNull(allocationStateTransitionTime);
            return this;
        }

        public Builder setApplicationLicenses(@Nullable List<String> applicationLicenses) {
            this.applicationLicenses = applicationLicenses;
            return this;
        }

        public Builder setApplicationPackages(@Nullable List<ApplicationPackageReferenceResponse> applicationPackages) {
            this.applicationPackages = applicationPackages;
            return this;
        }

        public Builder setAutoScaleRun(AutoScaleRunResponse autoScaleRun) {
            this.autoScaleRun = Objects.requireNonNull(autoScaleRun);
            return this;
        }

        public Builder setCertificates(@Nullable List<CertificateReferenceResponse> certificates) {
            this.certificates = certificates;
            return this;
        }

        public Builder setCreationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }

        public Builder setCurrentDedicatedNodes(Integer currentDedicatedNodes) {
            this.currentDedicatedNodes = Objects.requireNonNull(currentDedicatedNodes);
            return this;
        }

        public Builder setCurrentLowPriorityNodes(Integer currentLowPriorityNodes) {
            this.currentLowPriorityNodes = Objects.requireNonNull(currentLowPriorityNodes);
            return this;
        }

        public Builder setDeploymentConfiguration(@Nullable DeploymentConfigurationResponse deploymentConfiguration) {
            this.deploymentConfiguration = deploymentConfiguration;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable BatchPoolIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setInterNodeCommunication(@Nullable String interNodeCommunication) {
            this.interNodeCommunication = interNodeCommunication;
            return this;
        }

        public Builder setLastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }

        public Builder setMetadata(@Nullable List<MetadataItemResponse> metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder setMountConfiguration(@Nullable List<MountConfigurationResponse> mountConfiguration) {
            this.mountConfiguration = mountConfiguration;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetworkConfiguration(@Nullable NetworkConfigurationResponse networkConfiguration) {
            this.networkConfiguration = networkConfiguration;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setProvisioningStateTransitionTime(String provisioningStateTransitionTime) {
            this.provisioningStateTransitionTime = Objects.requireNonNull(provisioningStateTransitionTime);
            return this;
        }

        public Builder setResizeOperationStatus(ResizeOperationStatusResponse resizeOperationStatus) {
            this.resizeOperationStatus = Objects.requireNonNull(resizeOperationStatus);
            return this;
        }

        public Builder setScaleSettings(@Nullable ScaleSettingsResponse scaleSettings) {
            this.scaleSettings = scaleSettings;
            return this;
        }

        public Builder setStartTask(@Nullable StartTaskResponse startTask) {
            this.startTask = startTask;
            return this;
        }

        public Builder setTaskSchedulingPolicy(@Nullable TaskSchedulingPolicyResponse taskSchedulingPolicy) {
            this.taskSchedulingPolicy = taskSchedulingPolicy;
            return this;
        }

        public Builder setTaskSlotsPerNode(@Nullable Integer taskSlotsPerNode) {
            this.taskSlotsPerNode = taskSlotsPerNode;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUserAccounts(@Nullable List<UserAccountResponse> userAccounts) {
            this.userAccounts = userAccounts;
            return this;
        }

        public Builder setVmSize(@Nullable String vmSize) {
            this.vmSize = vmSize;
            return this;
        }

        public GetPoolResult build() {
            return new GetPoolResult(allocationState, allocationStateTransitionTime, applicationLicenses, applicationPackages, autoScaleRun, certificates, creationTime, currentDedicatedNodes, currentLowPriorityNodes, deploymentConfiguration, displayName, etag, id, identity, interNodeCommunication, lastModified, metadata, mountConfiguration, name, networkConfiguration, provisioningState, provisioningStateTransitionTime, resizeOperationStatus, scaleSettings, startTask, taskSchedulingPolicy, taskSlotsPerNode, type, userAccounts, vmSize);
        }
    }
}
