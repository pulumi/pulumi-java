// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datashare.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ShareSynchronizationResponse {
    private final @Nullable String consumerEmail;
    private final @Nullable String consumerName;
    private final @Nullable String consumerTenantName;
    private final @Nullable Integer durationMs;
    private final @Nullable String endTime;
    private final @Nullable String message;
    private final @Nullable String startTime;
    private final @Nullable String status;
    private final @Nullable String synchronizationId;
    private final String synchronizationMode;

    @OutputCustomType.Constructor({"consumerEmail","consumerName","consumerTenantName","durationMs","endTime","message","startTime","status","synchronizationId","synchronizationMode"})
    private ShareSynchronizationResponse(
        @Nullable String consumerEmail,
        @Nullable String consumerName,
        @Nullable String consumerTenantName,
        @Nullable Integer durationMs,
        @Nullable String endTime,
        @Nullable String message,
        @Nullable String startTime,
        @Nullable String status,
        @Nullable String synchronizationId,
        String synchronizationMode) {
        this.consumerEmail = consumerEmail;
        this.consumerName = consumerName;
        this.consumerTenantName = consumerTenantName;
        this.durationMs = durationMs;
        this.endTime = endTime;
        this.message = message;
        this.startTime = startTime;
        this.status = status;
        this.synchronizationId = synchronizationId;
        this.synchronizationMode = Objects.requireNonNull(synchronizationMode);
    }

    public Optional<String> getConsumerEmail() {
        return Optional.ofNullable(this.consumerEmail);
    }
    public Optional<String> getConsumerName() {
        return Optional.ofNullable(this.consumerName);
    }
    public Optional<String> getConsumerTenantName() {
        return Optional.ofNullable(this.consumerTenantName);
    }
    public Optional<Integer> getDurationMs() {
        return Optional.ofNullable(this.durationMs);
    }
    public Optional<String> getEndTime() {
        return Optional.ofNullable(this.endTime);
    }
    public Optional<String> getMessage() {
        return Optional.ofNullable(this.message);
    }
    public Optional<String> getStartTime() {
        return Optional.ofNullable(this.startTime);
    }
    public Optional<String> getStatus() {
        return Optional.ofNullable(this.status);
    }
    public Optional<String> getSynchronizationId() {
        return Optional.ofNullable(this.synchronizationId);
    }
    public String getSynchronizationMode() {
        return this.synchronizationMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ShareSynchronizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String consumerEmail;
        private @Nullable String consumerName;
        private @Nullable String consumerTenantName;
        private @Nullable Integer durationMs;
        private @Nullable String endTime;
        private @Nullable String message;
        private @Nullable String startTime;
        private @Nullable String status;
        private @Nullable String synchronizationId;
        private String synchronizationMode;

        public Builder() {
    	      // Empty
        }

        public Builder(ShareSynchronizationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerEmail = defaults.consumerEmail;
    	      this.consumerName = defaults.consumerName;
    	      this.consumerTenantName = defaults.consumerTenantName;
    	      this.durationMs = defaults.durationMs;
    	      this.endTime = defaults.endTime;
    	      this.message = defaults.message;
    	      this.startTime = defaults.startTime;
    	      this.status = defaults.status;
    	      this.synchronizationId = defaults.synchronizationId;
    	      this.synchronizationMode = defaults.synchronizationMode;
        }

        public Builder setConsumerEmail(@Nullable String consumerEmail) {
            this.consumerEmail = consumerEmail;
            return this;
        }

        public Builder setConsumerName(@Nullable String consumerName) {
            this.consumerName = consumerName;
            return this;
        }

        public Builder setConsumerTenantName(@Nullable String consumerTenantName) {
            this.consumerTenantName = consumerTenantName;
            return this;
        }

        public Builder setDurationMs(@Nullable Integer durationMs) {
            this.durationMs = durationMs;
            return this;
        }

        public Builder setEndTime(@Nullable String endTime) {
            this.endTime = endTime;
            return this;
        }

        public Builder setMessage(@Nullable String message) {
            this.message = message;
            return this;
        }

        public Builder setStartTime(@Nullable String startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = status;
            return this;
        }

        public Builder setSynchronizationId(@Nullable String synchronizationId) {
            this.synchronizationId = synchronizationId;
            return this;
        }

        public Builder setSynchronizationMode(String synchronizationMode) {
            this.synchronizationMode = Objects.requireNonNull(synchronizationMode);
            return this;
        }

        public ShareSynchronizationResponse build() {
            return new ShareSynchronizationResponse(consumerEmail, consumerName, consumerTenantName, durationMs, endTime, message, startTime, status, synchronizationId, synchronizationMode);
        }
    }
}
