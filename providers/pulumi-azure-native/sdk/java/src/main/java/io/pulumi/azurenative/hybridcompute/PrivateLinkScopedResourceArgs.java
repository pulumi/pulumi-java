// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hybridcompute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PrivateLinkScopedResourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final PrivateLinkScopedResourceArgs Empty = new PrivateLinkScopedResourceArgs();

    /**
     * The resource id of the scoped Azure monitor resource.
     * 
     */
    @Import(name="linkedResourceId")
      private final @Nullable Output<String> linkedResourceId;

    public Output<String> getLinkedResourceId() {
        return this.linkedResourceId == null ? Output.empty() : this.linkedResourceId;
    }

    /**
     * The name of the scoped resource object.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Azure Arc PrivateLinkScope resource.
     * 
     */
    @Import(name="scopeName", required=true)
      private final Output<String> scopeName;

    public Output<String> getScopeName() {
        return this.scopeName;
    }

    public PrivateLinkScopedResourceArgs(
        @Nullable Output<String> linkedResourceId,
        @Nullable Output<String> name,
        Output<String> resourceGroupName,
        Output<String> scopeName) {
        this.linkedResourceId = linkedResourceId;
        this.name = name;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.scopeName = Objects.requireNonNull(scopeName, "expected parameter 'scopeName' to be non-null");
    }

    private PrivateLinkScopedResourceArgs() {
        this.linkedResourceId = Output.empty();
        this.name = Output.empty();
        this.resourceGroupName = Output.empty();
        this.scopeName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateLinkScopedResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> linkedResourceId;
        private @Nullable Output<String> name;
        private Output<String> resourceGroupName;
        private Output<String> scopeName;

        public Builder() {
    	      // Empty
        }

        public Builder(PrivateLinkScopedResourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.linkedResourceId = defaults.linkedResourceId;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.scopeName = defaults.scopeName;
        }

        public Builder linkedResourceId(@Nullable Output<String> linkedResourceId) {
            this.linkedResourceId = linkedResourceId;
            return this;
        }

        public Builder linkedResourceId(@Nullable String linkedResourceId) {
            this.linkedResourceId = Output.ofNullable(linkedResourceId);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder scopeName(Output<String> scopeName) {
            this.scopeName = Objects.requireNonNull(scopeName);
            return this;
        }

        public Builder scopeName(String scopeName) {
            this.scopeName = Output.of(Objects.requireNonNull(scopeName));
            return this;
        }
        public PrivateLinkScopedResourceArgs build() {
            return new PrivateLinkScopedResourceArgs(linkedResourceId, name, resourceGroupName, scopeName);
        }
    }
}
