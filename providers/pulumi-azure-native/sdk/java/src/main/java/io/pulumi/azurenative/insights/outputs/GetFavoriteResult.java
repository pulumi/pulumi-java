// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetFavoriteResult {
    private final @Nullable String category;
    private final @Nullable String config;
    private final String favoriteId;
    private final @Nullable String favoriteType;
    private final @Nullable Boolean isGeneratedFromTemplate;
    private final @Nullable String name;
    private final @Nullable String sourceType;
    private final @Nullable List<String> tags;
    private final String timeModified;
    private final String userId;
    private final @Nullable String version;

    @OutputCustomType.Constructor({"category","config","favoriteId","favoriteType","isGeneratedFromTemplate","name","sourceType","tags","timeModified","userId","version"})
    private GetFavoriteResult(
        @Nullable String category,
        @Nullable String config,
        String favoriteId,
        @Nullable String favoriteType,
        @Nullable Boolean isGeneratedFromTemplate,
        @Nullable String name,
        @Nullable String sourceType,
        @Nullable List<String> tags,
        String timeModified,
        String userId,
        @Nullable String version) {
        this.category = category;
        this.config = config;
        this.favoriteId = Objects.requireNonNull(favoriteId);
        this.favoriteType = favoriteType;
        this.isGeneratedFromTemplate = isGeneratedFromTemplate;
        this.name = name;
        this.sourceType = sourceType;
        this.tags = tags;
        this.timeModified = Objects.requireNonNull(timeModified);
        this.userId = Objects.requireNonNull(userId);
        this.version = version;
    }

    public Optional<String> getCategory() {
        return Optional.ofNullable(this.category);
    }
    public Optional<String> getConfig() {
        return Optional.ofNullable(this.config);
    }
    public String getFavoriteId() {
        return this.favoriteId;
    }
    public Optional<String> getFavoriteType() {
        return Optional.ofNullable(this.favoriteType);
    }
    public Optional<Boolean> getIsGeneratedFromTemplate() {
        return Optional.ofNullable(this.isGeneratedFromTemplate);
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> getSourceType() {
        return Optional.ofNullable(this.sourceType);
    }
    public List<String> getTags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public String getTimeModified() {
        return this.timeModified;
    }
    public String getUserId() {
        return this.userId;
    }
    public Optional<String> getVersion() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFavoriteResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String category;
        private @Nullable String config;
        private String favoriteId;
        private @Nullable String favoriteType;
        private @Nullable Boolean isGeneratedFromTemplate;
        private @Nullable String name;
        private @Nullable String sourceType;
        private @Nullable List<String> tags;
        private String timeModified;
        private String userId;
        private @Nullable String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFavoriteResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.config = defaults.config;
    	      this.favoriteId = defaults.favoriteId;
    	      this.favoriteType = defaults.favoriteType;
    	      this.isGeneratedFromTemplate = defaults.isGeneratedFromTemplate;
    	      this.name = defaults.name;
    	      this.sourceType = defaults.sourceType;
    	      this.tags = defaults.tags;
    	      this.timeModified = defaults.timeModified;
    	      this.userId = defaults.userId;
    	      this.version = defaults.version;
        }

        public Builder setCategory(@Nullable String category) {
            this.category = category;
            return this;
        }

        public Builder setConfig(@Nullable String config) {
            this.config = config;
            return this;
        }

        public Builder setFavoriteId(String favoriteId) {
            this.favoriteId = Objects.requireNonNull(favoriteId);
            return this;
        }

        public Builder setFavoriteType(@Nullable String favoriteType) {
            this.favoriteType = favoriteType;
            return this;
        }

        public Builder setIsGeneratedFromTemplate(@Nullable Boolean isGeneratedFromTemplate) {
            this.isGeneratedFromTemplate = isGeneratedFromTemplate;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setSourceType(@Nullable String sourceType) {
            this.sourceType = sourceType;
            return this;
        }

        public Builder setTags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTimeModified(String timeModified) {
            this.timeModified = Objects.requireNonNull(timeModified);
            return this;
        }

        public Builder setUserId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }

        public Builder setVersion(@Nullable String version) {
            this.version = version;
            return this;
        }

        public GetFavoriteResult build() {
            return new GetFavoriteResult(category, config, favoriteId, favoriteType, isGeneratedFromTemplate, name, sourceType, tags, timeModified, userId, version);
        }
    }
}
