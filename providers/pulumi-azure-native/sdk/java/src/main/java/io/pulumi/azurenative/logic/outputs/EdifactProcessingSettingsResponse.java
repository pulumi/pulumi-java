// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.util.Objects;

@OutputCustomType
public final class EdifactProcessingSettingsResponse {
    private final Boolean createEmptyXmlTagsForTrailingSeparators;
    private final Boolean maskSecurityInfo;
    private final Boolean preserveInterchange;
    private final Boolean suspendInterchangeOnError;
    private final Boolean useDotAsDecimalSeparator;

    @OutputCustomType.Constructor({"createEmptyXmlTagsForTrailingSeparators","maskSecurityInfo","preserveInterchange","suspendInterchangeOnError","useDotAsDecimalSeparator"})
    private EdifactProcessingSettingsResponse(
        Boolean createEmptyXmlTagsForTrailingSeparators,
        Boolean maskSecurityInfo,
        Boolean preserveInterchange,
        Boolean suspendInterchangeOnError,
        Boolean useDotAsDecimalSeparator) {
        this.createEmptyXmlTagsForTrailingSeparators = Objects.requireNonNull(createEmptyXmlTagsForTrailingSeparators);
        this.maskSecurityInfo = Objects.requireNonNull(maskSecurityInfo);
        this.preserveInterchange = Objects.requireNonNull(preserveInterchange);
        this.suspendInterchangeOnError = Objects.requireNonNull(suspendInterchangeOnError);
        this.useDotAsDecimalSeparator = Objects.requireNonNull(useDotAsDecimalSeparator);
    }

    public Boolean getCreateEmptyXmlTagsForTrailingSeparators() {
        return this.createEmptyXmlTagsForTrailingSeparators;
    }
    public Boolean getMaskSecurityInfo() {
        return this.maskSecurityInfo;
    }
    public Boolean getPreserveInterchange() {
        return this.preserveInterchange;
    }
    public Boolean getSuspendInterchangeOnError() {
        return this.suspendInterchangeOnError;
    }
    public Boolean getUseDotAsDecimalSeparator() {
        return this.useDotAsDecimalSeparator;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdifactProcessingSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean createEmptyXmlTagsForTrailingSeparators;
        private Boolean maskSecurityInfo;
        private Boolean preserveInterchange;
        private Boolean suspendInterchangeOnError;
        private Boolean useDotAsDecimalSeparator;

        public Builder() {
    	      // Empty
        }

        public Builder(EdifactProcessingSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createEmptyXmlTagsForTrailingSeparators = defaults.createEmptyXmlTagsForTrailingSeparators;
    	      this.maskSecurityInfo = defaults.maskSecurityInfo;
    	      this.preserveInterchange = defaults.preserveInterchange;
    	      this.suspendInterchangeOnError = defaults.suspendInterchangeOnError;
    	      this.useDotAsDecimalSeparator = defaults.useDotAsDecimalSeparator;
        }

        public Builder setCreateEmptyXmlTagsForTrailingSeparators(Boolean createEmptyXmlTagsForTrailingSeparators) {
            this.createEmptyXmlTagsForTrailingSeparators = Objects.requireNonNull(createEmptyXmlTagsForTrailingSeparators);
            return this;
        }

        public Builder setMaskSecurityInfo(Boolean maskSecurityInfo) {
            this.maskSecurityInfo = Objects.requireNonNull(maskSecurityInfo);
            return this;
        }

        public Builder setPreserveInterchange(Boolean preserveInterchange) {
            this.preserveInterchange = Objects.requireNonNull(preserveInterchange);
            return this;
        }

        public Builder setSuspendInterchangeOnError(Boolean suspendInterchangeOnError) {
            this.suspendInterchangeOnError = Objects.requireNonNull(suspendInterchangeOnError);
            return this;
        }

        public Builder setUseDotAsDecimalSeparator(Boolean useDotAsDecimalSeparator) {
            this.useDotAsDecimalSeparator = Objects.requireNonNull(useDotAsDecimalSeparator);
            return this;
        }

        public EdifactProcessingSettingsResponse build() {
            return new EdifactProcessingSettingsResponse(createEmptyXmlTagsForTrailingSeparators, maskSecurityInfo, preserveInterchange, suspendInterchangeOnError, useDotAsDecimalSeparator);
        }
    }
}
