// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CustomEntityStoreAssignmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final CustomEntityStoreAssignmentArgs Empty = new CustomEntityStoreAssignmentArgs();

    /**
     * Name of the custom entity store assignment. Generated name is GUID.
     * 
     */
    @InputImport(name="customEntityStoreAssignmentName")
      private final @Nullable Input<String> customEntityStoreAssignmentName;

    public Input<String> getCustomEntityStoreAssignmentName() {
        return this.customEntityStoreAssignmentName == null ? Input.empty() : this.customEntityStoreAssignmentName;
    }

    /**
     * The principal assigned with entity store. If not provided, will use caller principal. Format of principal is: [AAD type]=[PrincipalObjectId];[TenantId]
     * 
     */
    @InputImport(name="principal")
      private final @Nullable Input<String> principal;

    public Input<String> getPrincipal() {
        return this.principal == null ? Input.empty() : this.principal;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public CustomEntityStoreAssignmentArgs(
        @Nullable Input<String> customEntityStoreAssignmentName,
        @Nullable Input<String> principal,
        Input<String> resourceGroupName) {
        this.customEntityStoreAssignmentName = customEntityStoreAssignmentName;
        this.principal = principal;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private CustomEntityStoreAssignmentArgs() {
        this.customEntityStoreAssignmentName = Input.empty();
        this.principal = Input.empty();
        this.resourceGroupName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomEntityStoreAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> customEntityStoreAssignmentName;
        private @Nullable Input<String> principal;
        private Input<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomEntityStoreAssignmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customEntityStoreAssignmentName = defaults.customEntityStoreAssignmentName;
    	      this.principal = defaults.principal;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder setCustomEntityStoreAssignmentName(@Nullable Input<String> customEntityStoreAssignmentName) {
            this.customEntityStoreAssignmentName = customEntityStoreAssignmentName;
            return this;
        }

        public Builder setCustomEntityStoreAssignmentName(@Nullable String customEntityStoreAssignmentName) {
            this.customEntityStoreAssignmentName = Input.ofNullable(customEntityStoreAssignmentName);
            return this;
        }

        public Builder setPrincipal(@Nullable Input<String> principal) {
            this.principal = principal;
            return this;
        }

        public Builder setPrincipal(@Nullable String principal) {
            this.principal = Input.ofNullable(principal);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public CustomEntityStoreAssignmentArgs build() {
            return new CustomEntityStoreAssignmentArgs(customEntityStoreAssignmentName, principal, resourceGroupName);
        }
    }
}
