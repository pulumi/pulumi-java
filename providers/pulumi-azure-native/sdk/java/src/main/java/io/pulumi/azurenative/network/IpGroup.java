// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.network.IpGroupArgs;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * The IpGroups resource information.
API Version: 2020-11-01.

{{% examples %}}
## Example Usage
{{% example %}}
### CreateOrUpdate_IpGroups
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var ipGroup = new AzureNative.Network.IpGroup("ipGroup", new AzureNative.Network.IpGroupArgs
        {
            IpAddresses = 
            {
                "13.64.39.16/32",
                "40.74.146.80/31",
                "40.74.147.32/28",
            },
            IpGroupsName = "ipGroups1",
            Location = "West US",
            ResourceGroupName = "myResourceGroup",
            Tags = 
            {
                { "key1", "value1" },
            },
        });
    }

}

```

```go
package main

import (
	network "github.com/pulumi/pulumi-azure-native/sdk/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := network.NewIpGroup(ctx, "ipGroup", &network.IpGroupArgs{
			IpAddresses: pulumi.StringArray{
				pulumi.String("13.64.39.16/32"),
				pulumi.String("40.74.146.80/31"),
				pulumi.String("40.74.147.32/28"),
			},
			IpGroupsName:      pulumi.String("ipGroups1"),
			Location:          pulumi.String("West US"),
			ResourceGroupName: pulumi.String("myResourceGroup"),
			Tags: pulumi.StringMap{
				"key1": pulumi.String("value1"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const ipGroup = new azure_native.network.IpGroup("ipGroup", {
    ipAddresses: [
        "13.64.39.16/32",
        "40.74.146.80/31",
        "40.74.147.32/28",
    ],
    ipGroupsName: "ipGroups1",
    location: "West US",
    resourceGroupName: "myResourceGroup",
    tags: {
        key1: "value1",
    },
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

ip_group = azure_native.network.IpGroup("ipGroup",
    ip_addresses=[
        "13.64.39.16/32",
        "40.74.146.80/31",
        "40.74.147.32/28",
    ],
    ip_groups_name="ipGroups1",
    location="West US",
    resource_group_name="myResourceGroup",
    tags={
        "key1": "value1",
    })

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:network:IpGroup ipGroups1 /subscriptions/subId/providers/Microsoft.Network/resourceGroup/myResourceGroup/ipGroups/ipGroups1 
```

 */
@ResourceType(type="azure-native:network:IpGroup")
public class IpGroup extends io.pulumi.resources.CustomResource {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     */
    public Output<String> getEtag() {
        return this.etag;
    }
    /**
     * List of references to Firewall Policies resources that this IpGroups is associated with.
     */
    @OutputExport(name="firewallPolicies", type=List.class, parameters={SubResourceResponse.class})
    private Output<List<SubResourceResponse>> firewallPolicies;

    /**
     * @return List of references to Firewall Policies resources that this IpGroups is associated with.
     */
    public Output<List<SubResourceResponse>> getFirewallPolicies() {
        return this.firewallPolicies;
    }
    /**
     * List of references to Firewall resources that this IpGroups is associated with.
     */
    @OutputExport(name="firewalls", type=List.class, parameters={SubResourceResponse.class})
    private Output<List<SubResourceResponse>> firewalls;

    /**
     * @return List of references to Firewall resources that this IpGroups is associated with.
     */
    public Output<List<SubResourceResponse>> getFirewalls() {
        return this.firewalls;
    }
    /**
     * IpAddresses/IpAddressPrefixes in the IpGroups resource.
     */
    @OutputExport(name="ipAddresses", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> ipAddresses;

    /**
     * @return IpAddresses/IpAddressPrefixes in the IpGroups resource.
     */
    public Output</* @Nullable */ List<String>> getIpAddresses() {
        return this.ipAddresses;
    }
    /**
     * Resource location.
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * Resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The provisioning state of the IpGroups resource.
     */
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the IpGroups resource.
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Resource type.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IpGroup(String name, IpGroupArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:IpGroup", name, args == null ? IpGroupArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private IpGroup(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:IpGroup", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:network/v20190901:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20191101:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20191201:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200301:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200401:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200501:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200601:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200701:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200801:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20201101:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210201:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210301:IpGroup").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210501:IpGroup").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IpGroup get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new IpGroup(name, id, options);
    }
}
