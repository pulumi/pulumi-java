// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.videoanalyzer.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Options for controlling the validation of TLS endpoints.
 * 
 */
public final class TlsValidationOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final TlsValidationOptionsArgs Empty = new TlsValidationOptionsArgs();

    /**
     * When set to 'true' causes the certificate subject name validation to be skipped. Default is 'false'.
     * 
     */
    @Import(name="ignoreHostname")
      private final @Nullable Output<String> ignoreHostname;

    public Output<String> getIgnoreHostname() {
        return this.ignoreHostname == null ? Codegen.empty() : this.ignoreHostname;
    }

    /**
     * When set to 'true' causes the certificate chain trust validation to be skipped. Default is 'false'.
     * 
     */
    @Import(name="ignoreSignature")
      private final @Nullable Output<String> ignoreSignature;

    public Output<String> getIgnoreSignature() {
        return this.ignoreSignature == null ? Codegen.empty() : this.ignoreSignature;
    }

    public TlsValidationOptionsArgs(
        @Nullable Output<String> ignoreHostname,
        @Nullable Output<String> ignoreSignature) {
        this.ignoreHostname = ignoreHostname;
        this.ignoreSignature = ignoreSignature;
    }

    private TlsValidationOptionsArgs() {
        this.ignoreHostname = Codegen.empty();
        this.ignoreSignature = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TlsValidationOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> ignoreHostname;
        private @Nullable Output<String> ignoreSignature;

        public Builder() {
    	      // Empty
        }

        public Builder(TlsValidationOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ignoreHostname = defaults.ignoreHostname;
    	      this.ignoreSignature = defaults.ignoreSignature;
        }

        public Builder ignoreHostname(@Nullable Output<String> ignoreHostname) {
            this.ignoreHostname = ignoreHostname;
            return this;
        }
        public Builder ignoreHostname(@Nullable String ignoreHostname) {
            this.ignoreHostname = Codegen.ofNullable(ignoreHostname);
            return this;
        }
        public Builder ignoreSignature(@Nullable Output<String> ignoreSignature) {
            this.ignoreSignature = ignoreSignature;
            return this;
        }
        public Builder ignoreSignature(@Nullable String ignoreSignature) {
            this.ignoreSignature = Codegen.ofNullable(ignoreSignature);
            return this;
        }        public TlsValidationOptionsArgs build() {
            return new TlsValidationOptionsArgs(ignoreHostname, ignoreSignature);
        }
    }
}
