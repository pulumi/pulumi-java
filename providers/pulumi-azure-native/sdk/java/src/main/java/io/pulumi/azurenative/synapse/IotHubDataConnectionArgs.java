// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.synapse;

import io.pulumi.azurenative.synapse.enums.IotHubDataFormat;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IotHubDataConnectionArgs extends io.pulumi.resources.ResourceArgs {

    public static final IotHubDataConnectionArgs Empty = new IotHubDataConnectionArgs();

    @InputImport(name="consumerGroup", required=true)
    private final Input<String> consumerGroup;

    public Input<String> getConsumerGroup() {
        return this.consumerGroup;
    }

    @InputImport(name="dataConnectionName")
    private final @Nullable Input<String> dataConnectionName;

    public Input<String> getDataConnectionName() {
        return this.dataConnectionName == null ? Input.empty() : this.dataConnectionName;
    }

    @InputImport(name="dataFormat")
    private final @Nullable Input<Either<String,IotHubDataFormat>> dataFormat;

    public Input<Either<String,IotHubDataFormat>> getDataFormat() {
        return this.dataFormat == null ? Input.empty() : this.dataFormat;
    }

    @InputImport(name="databaseName", required=true)
    private final Input<String> databaseName;

    public Input<String> getDatabaseName() {
        return this.databaseName;
    }

    @InputImport(name="eventSystemProperties")
    private final @Nullable Input<List<String>> eventSystemProperties;

    public Input<List<String>> getEventSystemProperties() {
        return this.eventSystemProperties == null ? Input.empty() : this.eventSystemProperties;
    }

    @InputImport(name="iotHubResourceId", required=true)
    private final Input<String> iotHubResourceId;

    public Input<String> getIotHubResourceId() {
        return this.iotHubResourceId;
    }

    @InputImport(name="kind", required=true)
    private final Input<String> kind;

    public Input<String> getKind() {
        return this.kind;
    }

    @InputImport(name="kustoPoolName", required=true)
    private final Input<String> kustoPoolName;

    public Input<String> getKustoPoolName() {
        return this.kustoPoolName;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="mappingRuleName")
    private final @Nullable Input<String> mappingRuleName;

    public Input<String> getMappingRuleName() {
        return this.mappingRuleName == null ? Input.empty() : this.mappingRuleName;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="sharedAccessPolicyName", required=true)
    private final Input<String> sharedAccessPolicyName;

    public Input<String> getSharedAccessPolicyName() {
        return this.sharedAccessPolicyName;
    }

    @InputImport(name="tableName")
    private final @Nullable Input<String> tableName;

    public Input<String> getTableName() {
        return this.tableName == null ? Input.empty() : this.tableName;
    }

    @InputImport(name="workspaceName", required=true)
    private final Input<String> workspaceName;

    public Input<String> getWorkspaceName() {
        return this.workspaceName;
    }

    public IotHubDataConnectionArgs(
        Input<String> consumerGroup,
        @Nullable Input<String> dataConnectionName,
        @Nullable Input<Either<String,IotHubDataFormat>> dataFormat,
        Input<String> databaseName,
        @Nullable Input<List<String>> eventSystemProperties,
        Input<String> iotHubResourceId,
        Input<String> kind,
        Input<String> kustoPoolName,
        @Nullable Input<String> location,
        @Nullable Input<String> mappingRuleName,
        Input<String> resourceGroupName,
        Input<String> sharedAccessPolicyName,
        @Nullable Input<String> tableName,
        Input<String> workspaceName) {
        this.consumerGroup = Objects.requireNonNull(consumerGroup, "expected parameter 'consumerGroup' to be non-null");
        this.dataConnectionName = dataConnectionName;
        this.dataFormat = dataFormat;
        this.databaseName = Objects.requireNonNull(databaseName, "expected parameter 'databaseName' to be non-null");
        this.eventSystemProperties = eventSystemProperties;
        this.iotHubResourceId = Objects.requireNonNull(iotHubResourceId, "expected parameter 'iotHubResourceId' to be non-null");
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
        this.kustoPoolName = Objects.requireNonNull(kustoPoolName, "expected parameter 'kustoPoolName' to be non-null");
        this.location = location;
        this.mappingRuleName = mappingRuleName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sharedAccessPolicyName = Objects.requireNonNull(sharedAccessPolicyName, "expected parameter 'sharedAccessPolicyName' to be non-null");
        this.tableName = tableName;
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private IotHubDataConnectionArgs() {
        this.consumerGroup = Input.empty();
        this.dataConnectionName = Input.empty();
        this.dataFormat = Input.empty();
        this.databaseName = Input.empty();
        this.eventSystemProperties = Input.empty();
        this.iotHubResourceId = Input.empty();
        this.kind = Input.empty();
        this.kustoPoolName = Input.empty();
        this.location = Input.empty();
        this.mappingRuleName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.sharedAccessPolicyName = Input.empty();
        this.tableName = Input.empty();
        this.workspaceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IotHubDataConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> consumerGroup;
        private @Nullable Input<String> dataConnectionName;
        private @Nullable Input<Either<String,IotHubDataFormat>> dataFormat;
        private Input<String> databaseName;
        private @Nullable Input<List<String>> eventSystemProperties;
        private Input<String> iotHubResourceId;
        private Input<String> kind;
        private Input<String> kustoPoolName;
        private @Nullable Input<String> location;
        private @Nullable Input<String> mappingRuleName;
        private Input<String> resourceGroupName;
        private Input<String> sharedAccessPolicyName;
        private @Nullable Input<String> tableName;
        private Input<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(IotHubDataConnectionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerGroup = defaults.consumerGroup;
    	      this.dataConnectionName = defaults.dataConnectionName;
    	      this.dataFormat = defaults.dataFormat;
    	      this.databaseName = defaults.databaseName;
    	      this.eventSystemProperties = defaults.eventSystemProperties;
    	      this.iotHubResourceId = defaults.iotHubResourceId;
    	      this.kind = defaults.kind;
    	      this.kustoPoolName = defaults.kustoPoolName;
    	      this.location = defaults.location;
    	      this.mappingRuleName = defaults.mappingRuleName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sharedAccessPolicyName = defaults.sharedAccessPolicyName;
    	      this.tableName = defaults.tableName;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder setConsumerGroup(Input<String> consumerGroup) {
            this.consumerGroup = Objects.requireNonNull(consumerGroup);
            return this;
        }

        public Builder setConsumerGroup(String consumerGroup) {
            this.consumerGroup = Input.of(Objects.requireNonNull(consumerGroup));
            return this;
        }

        public Builder setDataConnectionName(@Nullable Input<String> dataConnectionName) {
            this.dataConnectionName = dataConnectionName;
            return this;
        }

        public Builder setDataConnectionName(@Nullable String dataConnectionName) {
            this.dataConnectionName = Input.ofNullable(dataConnectionName);
            return this;
        }

        public Builder setDataFormat(@Nullable Input<Either<String,IotHubDataFormat>> dataFormat) {
            this.dataFormat = dataFormat;
            return this;
        }

        public Builder setDataFormat(@Nullable Either<String,IotHubDataFormat> dataFormat) {
            this.dataFormat = Input.ofNullable(dataFormat);
            return this;
        }

        public Builder setDatabaseName(Input<String> databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }

        public Builder setDatabaseName(String databaseName) {
            this.databaseName = Input.of(Objects.requireNonNull(databaseName));
            return this;
        }

        public Builder setEventSystemProperties(@Nullable Input<List<String>> eventSystemProperties) {
            this.eventSystemProperties = eventSystemProperties;
            return this;
        }

        public Builder setEventSystemProperties(@Nullable List<String> eventSystemProperties) {
            this.eventSystemProperties = Input.ofNullable(eventSystemProperties);
            return this;
        }

        public Builder setIotHubResourceId(Input<String> iotHubResourceId) {
            this.iotHubResourceId = Objects.requireNonNull(iotHubResourceId);
            return this;
        }

        public Builder setIotHubResourceId(String iotHubResourceId) {
            this.iotHubResourceId = Input.of(Objects.requireNonNull(iotHubResourceId));
            return this;
        }

        public Builder setKind(Input<String> kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Input.of(Objects.requireNonNull(kind));
            return this;
        }

        public Builder setKustoPoolName(Input<String> kustoPoolName) {
            this.kustoPoolName = Objects.requireNonNull(kustoPoolName);
            return this;
        }

        public Builder setKustoPoolName(String kustoPoolName) {
            this.kustoPoolName = Input.of(Objects.requireNonNull(kustoPoolName));
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setMappingRuleName(@Nullable Input<String> mappingRuleName) {
            this.mappingRuleName = mappingRuleName;
            return this;
        }

        public Builder setMappingRuleName(@Nullable String mappingRuleName) {
            this.mappingRuleName = Input.ofNullable(mappingRuleName);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setSharedAccessPolicyName(Input<String> sharedAccessPolicyName) {
            this.sharedAccessPolicyName = Objects.requireNonNull(sharedAccessPolicyName);
            return this;
        }

        public Builder setSharedAccessPolicyName(String sharedAccessPolicyName) {
            this.sharedAccessPolicyName = Input.of(Objects.requireNonNull(sharedAccessPolicyName));
            return this;
        }

        public Builder setTableName(@Nullable Input<String> tableName) {
            this.tableName = tableName;
            return this;
        }

        public Builder setTableName(@Nullable String tableName) {
            this.tableName = Input.ofNullable(tableName);
            return this;
        }

        public Builder setWorkspaceName(Input<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }

        public Builder setWorkspaceName(String workspaceName) {
            this.workspaceName = Input.of(Objects.requireNonNull(workspaceName));
            return this;
        }

        public IotHubDataConnectionArgs build() {
            return new IotHubDataConnectionArgs(consumerGroup, dataConnectionName, dataFormat, databaseName, eventSystemProperties, iotHubResourceId, kind, kustoPoolName, location, mappingRuleName, resourceGroupName, sharedAccessPolicyName, tableName, workspaceName);
        }
    }
}
