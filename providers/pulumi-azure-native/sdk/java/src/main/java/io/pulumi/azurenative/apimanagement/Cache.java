// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement;

import io.pulumi.azurenative.Utilities;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Cache details.
API Version: 2020-12-01.

{{% examples %}}
## Example Usage
{{% example %}}
### ApiManagementCreateCache
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var cache = new AzureNative.ApiManagement.Cache("cache", new AzureNative.ApiManagement.CacheArgs
        {
            CacheId = "c1",
            ConnectionString = "apim.redis.cache.windows.net:6380,password=xc,ssl=True,abortConnect=False",
            Description = "Redis cache instances in West India",
            ResourceGroupName = "rg1",
            ResourceId = "https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redis/apimservice1",
            ServiceName = "apimService1",
            UseFromLocation = "default",
        });
    }

}

```

```go
package main

import (
	apimanagement "github.com/pulumi/pulumi-azure-native/sdk/go/azure/apimanagement"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := apimanagement.NewCache(ctx, "cache", &apimanagement.CacheArgs{
			CacheId:           pulumi.String("c1"),
			ConnectionString:  pulumi.String("apim.redis.cache.windows.net:6380,password=xc,ssl=True,abortConnect=False"),
			Description:       pulumi.String("Redis cache instances in West India"),
			ResourceGroupName: pulumi.String("rg1"),
			ResourceId:        pulumi.String("https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redis/apimservice1"),
			ServiceName:       pulumi.String("apimService1"),
			UseFromLocation:   pulumi.String("default"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const cache = new azure_native.apimanagement.Cache("cache", {
    cacheId: "c1",
    connectionString: "apim.redis.cache.windows.net:6380,password=xc,ssl=True,abortConnect=False",
    description: "Redis cache instances in West India",
    resourceGroupName: "rg1",
    resourceId: "https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redis/apimservice1",
    serviceName: "apimService1",
    useFromLocation: "default",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

cache = azure_native.apimanagement.Cache("cache",
    cache_id="c1",
    connection_string="apim.redis.cache.windows.net:6380,password=xc,ssl=True,abortConnect=False",
    description="Redis cache instances in West India",
    resource_group_name="rg1",
    resource_id="https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redis/apimservice1",
    service_name="apimService1",
    use_from_location="default")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:apimanagement:Cache c1 /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/caches/c1 
```

 */
@ResourceType(type="azure-native:apimanagement:Cache")
public class Cache extends io.pulumi.resources.CustomResource {
    /**
     * Runtime connection string to cache
     */
    @OutputExport(name="connectionString", type=String.class, parameters={})
    private Output<String> connectionString;

    /**
     * @return Runtime connection string to cache
     */
    public Output<String> getConnectionString() {
        return this.connectionString;
    }
    /**
     * Cache description
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Cache description
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * Resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Original uri of entity in external system cache points to
     */
    @OutputExport(name="resourceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> resourceId;

    /**
     * @return Original uri of entity in external system cache points to
     */
    public Output</* @Nullable */ String> getResourceId() {
        return this.resourceId;
    }
    /**
     * Resource type for API Management resource.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type for API Management resource.
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * Location identifier to use cache from (should be either 'default' or valid Azure region identifier)
     */
    @OutputExport(name="useFromLocation", type=String.class, parameters={})
    private Output<String> useFromLocation;

    /**
     * @return Location identifier to use cache from (should be either 'default' or valid Azure region identifier)
     */
    public Output<String> getUseFromLocation() {
        return this.useFromLocation;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Cache(String name, CacheArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:apimanagement:Cache", name, args == null ? CacheArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Cache(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:apimanagement:Cache", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:apimanagement/v20180601preview:Cache").build()),
                Input.of(Alias.builder().setType("azure-native:apimanagement/v20190101:Cache").build()),
                Input.of(Alias.builder().setType("azure-native:apimanagement/v20191201:Cache").build()),
                Input.of(Alias.builder().setType("azure-native:apimanagement/v20191201preview:Cache").build()),
                Input.of(Alias.builder().setType("azure-native:apimanagement/v20200601preview:Cache").build()),
                Input.of(Alias.builder().setType("azure-native:apimanagement/v20201201:Cache").build()),
                Input.of(Alias.builder().setType("azure-native:apimanagement/v20210101preview:Cache").build()),
                Input.of(Alias.builder().setType("azure-native:apimanagement/v20210401preview:Cache").build()),
                Input.of(Alias.builder().setType("azure-native:apimanagement/v20210801:Cache").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Cache get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Cache(name, id, options);
    }
}
