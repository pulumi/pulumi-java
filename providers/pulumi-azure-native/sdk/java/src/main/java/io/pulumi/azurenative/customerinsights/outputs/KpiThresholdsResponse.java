// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;

@OutputCustomType
public final class KpiThresholdsResponse {
    /**
     * Whether or not the KPI is an increasing KPI.
     * 
     */
    private final Boolean increasingKpi;
    /**
     * The lower threshold limit.
     * 
     */
    private final Double lowerLimit;
    /**
     * The upper threshold limit.
     * 
     */
    private final Double upperLimit;

    @OutputCustomType.Constructor({"increasingKpi","lowerLimit","upperLimit"})
    private KpiThresholdsResponse(
        Boolean increasingKpi,
        Double lowerLimit,
        Double upperLimit) {
        this.increasingKpi = Objects.requireNonNull(increasingKpi);
        this.lowerLimit = Objects.requireNonNull(lowerLimit);
        this.upperLimit = Objects.requireNonNull(upperLimit);
    }

    /**
     * Whether or not the KPI is an increasing KPI.
     * 
     */
    public Boolean getIncreasingKpi() {
        return this.increasingKpi;
    }
    /**
     * The lower threshold limit.
     * 
     */
    public Double getLowerLimit() {
        return this.lowerLimit;
    }
    /**
     * The upper threshold limit.
     * 
     */
    public Double getUpperLimit() {
        return this.upperLimit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KpiThresholdsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean increasingKpi;
        private Double lowerLimit;
        private Double upperLimit;

        public Builder() {
    	      // Empty
        }

        public Builder(KpiThresholdsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.increasingKpi = defaults.increasingKpi;
    	      this.lowerLimit = defaults.lowerLimit;
    	      this.upperLimit = defaults.upperLimit;
        }

        public Builder setIncreasingKpi(Boolean increasingKpi) {
            this.increasingKpi = Objects.requireNonNull(increasingKpi);
            return this;
        }

        public Builder setLowerLimit(Double lowerLimit) {
            this.lowerLimit = Objects.requireNonNull(lowerLimit);
            return this;
        }

        public Builder setUpperLimit(Double upperLimit) {
            this.upperLimit = Objects.requireNonNull(upperLimit);
            return this;
        }

        public KpiThresholdsResponse build() {
            return new KpiThresholdsResponse(increasingKpi, lowerLimit, upperLimit);
        }
    }
}
