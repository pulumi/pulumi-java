// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.softwareplan;

import io.pulumi.azurenative.softwareplan.inputs.SkuArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HybridUseBenefitArgs extends io.pulumi.resources.ResourceArgs {

    public static final HybridUseBenefitArgs Empty = new HybridUseBenefitArgs();

    /**
     * This is a unique identifier for a plan. Should be a guid.
     * 
     */
    @Import(name="planId")
      private final @Nullable Output<String> planId;

    public Output<String> planId() {
        return this.planId == null ? Codegen.empty() : this.planId;
    }

    /**
     * The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now
     * 
     */
    @Import(name="scope", required=true)
      private final Output<String> scope;

    public Output<String> scope() {
        return this.scope;
    }

    /**
     * Hybrid use benefit SKU
     * 
     */
    @Import(name="sku", required=true)
      private final Output<SkuArgs> sku;

    public Output<SkuArgs> sku() {
        return this.sku;
    }

    public HybridUseBenefitArgs(
        @Nullable Output<String> planId,
        Output<String> scope,
        Output<SkuArgs> sku) {
        this.planId = planId;
        this.scope = Objects.requireNonNull(scope, "expected parameter 'scope' to be non-null");
        this.sku = Objects.requireNonNull(sku, "expected parameter 'sku' to be non-null");
    }

    private HybridUseBenefitArgs() {
        this.planId = Codegen.empty();
        this.scope = Codegen.empty();
        this.sku = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HybridUseBenefitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> planId;
        private Output<String> scope;
        private Output<SkuArgs> sku;

        public Builder() {
    	      // Empty
        }

        public Builder(HybridUseBenefitArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.planId = defaults.planId;
    	      this.scope = defaults.scope;
    	      this.sku = defaults.sku;
        }

        public Builder planId(@Nullable Output<String> planId) {
            this.planId = planId;
            return this;
        }
        public Builder planId(@Nullable String planId) {
            this.planId = Codegen.ofNullable(planId);
            return this;
        }
        public Builder scope(Output<String> scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        public Builder scope(String scope) {
            this.scope = Output.of(Objects.requireNonNull(scope));
            return this;
        }
        public Builder sku(Output<SkuArgs> sku) {
            this.sku = Objects.requireNonNull(sku);
            return this;
        }
        public Builder sku(SkuArgs sku) {
            this.sku = Output.of(Objects.requireNonNull(sku));
            return this;
        }        public HybridUseBenefitArgs build() {
            return new HybridUseBenefitArgs(planId, scope, sku);
        }
    }
}
