// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn.inputs;

import io.pulumi.azurenative.cdn.inputs.ResourceReferenceArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Customer Certificate used for https
 * 
 */
public final class CustomerCertificateParametersArgs extends io.pulumi.resources.ResourceArgs {

    public static final CustomerCertificateParametersArgs Empty = new CustomerCertificateParametersArgs();

    /**
     * Certificate issuing authority.
     * 
     */
    @InputImport(name="certificateAuthority")
      private final @Nullable Input<String> certificateAuthority;

    public Input<String> getCertificateAuthority() {
        return this.certificateAuthority == null ? Input.empty() : this.certificateAuthority;
    }

    /**
     * Resource reference to the KV secret
     * 
     */
    @InputImport(name="secretSource", required=true)
      private final Input<ResourceReferenceArgs> secretSource;

    public Input<ResourceReferenceArgs> getSecretSource() {
        return this.secretSource;
    }

    /**
     * Version of the secret to be used
     * 
     */
    @InputImport(name="secretVersion")
      private final @Nullable Input<String> secretVersion;

    public Input<String> getSecretVersion() {
        return this.secretVersion == null ? Input.empty() : this.secretVersion;
    }

    /**
     * The list of SANs.
     * 
     */
    @InputImport(name="subjectAlternativeNames")
      private final @Nullable Input<List<String>> subjectAlternativeNames;

    public Input<List<String>> getSubjectAlternativeNames() {
        return this.subjectAlternativeNames == null ? Input.empty() : this.subjectAlternativeNames;
    }

    /**
     * The type of the Secret to create.
     * Expected value is 'CustomerCertificate'.
     * 
     */
    @InputImport(name="type", required=true)
      private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    /**
     * Whether to use the latest version for the certificate
     * 
     */
    @InputImport(name="useLatestVersion")
      private final @Nullable Input<Boolean> useLatestVersion;

    public Input<Boolean> getUseLatestVersion() {
        return this.useLatestVersion == null ? Input.empty() : this.useLatestVersion;
    }

    public CustomerCertificateParametersArgs(
        @Nullable Input<String> certificateAuthority,
        Input<ResourceReferenceArgs> secretSource,
        @Nullable Input<String> secretVersion,
        @Nullable Input<List<String>> subjectAlternativeNames,
        Input<String> type,
        @Nullable Input<Boolean> useLatestVersion) {
        this.certificateAuthority = certificateAuthority;
        this.secretSource = Objects.requireNonNull(secretSource, "expected parameter 'secretSource' to be non-null");
        this.secretVersion = secretVersion;
        this.subjectAlternativeNames = subjectAlternativeNames;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.useLatestVersion = useLatestVersion;
    }

    private CustomerCertificateParametersArgs() {
        this.certificateAuthority = Input.empty();
        this.secretSource = Input.empty();
        this.secretVersion = Input.empty();
        this.subjectAlternativeNames = Input.empty();
        this.type = Input.empty();
        this.useLatestVersion = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomerCertificateParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> certificateAuthority;
        private Input<ResourceReferenceArgs> secretSource;
        private @Nullable Input<String> secretVersion;
        private @Nullable Input<List<String>> subjectAlternativeNames;
        private Input<String> type;
        private @Nullable Input<Boolean> useLatestVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomerCertificateParametersArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthority = defaults.certificateAuthority;
    	      this.secretSource = defaults.secretSource;
    	      this.secretVersion = defaults.secretVersion;
    	      this.subjectAlternativeNames = defaults.subjectAlternativeNames;
    	      this.type = defaults.type;
    	      this.useLatestVersion = defaults.useLatestVersion;
        }

        public Builder setCertificateAuthority(@Nullable Input<String> certificateAuthority) {
            this.certificateAuthority = certificateAuthority;
            return this;
        }

        public Builder setCertificateAuthority(@Nullable String certificateAuthority) {
            this.certificateAuthority = Input.ofNullable(certificateAuthority);
            return this;
        }

        public Builder setSecretSource(Input<ResourceReferenceArgs> secretSource) {
            this.secretSource = Objects.requireNonNull(secretSource);
            return this;
        }

        public Builder setSecretSource(ResourceReferenceArgs secretSource) {
            this.secretSource = Input.of(Objects.requireNonNull(secretSource));
            return this;
        }

        public Builder setSecretVersion(@Nullable Input<String> secretVersion) {
            this.secretVersion = secretVersion;
            return this;
        }

        public Builder setSecretVersion(@Nullable String secretVersion) {
            this.secretVersion = Input.ofNullable(secretVersion);
            return this;
        }

        public Builder setSubjectAlternativeNames(@Nullable Input<List<String>> subjectAlternativeNames) {
            this.subjectAlternativeNames = subjectAlternativeNames;
            return this;
        }

        public Builder setSubjectAlternativeNames(@Nullable List<String> subjectAlternativeNames) {
            this.subjectAlternativeNames = Input.ofNullable(subjectAlternativeNames);
            return this;
        }

        public Builder setType(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public Builder setUseLatestVersion(@Nullable Input<Boolean> useLatestVersion) {
            this.useLatestVersion = useLatestVersion;
            return this;
        }

        public Builder setUseLatestVersion(@Nullable Boolean useLatestVersion) {
            this.useLatestVersion = Input.ofNullable(useLatestVersion);
            return this;
        }
        public CustomerCertificateParametersArgs build() {
            return new CustomerCertificateParametersArgs(certificateAuthority, secretSource, secretVersion, subjectAlternativeNames, type, useLatestVersion);
        }
    }
}
