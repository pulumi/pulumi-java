// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * The participant profile property reference.
 * 
 */
public final class ParticipantProfilePropertyReferenceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ParticipantProfilePropertyReferenceArgs Empty = new ParticipantProfilePropertyReferenceArgs();

    /**
     * The source interaction property that maps to the target profile property.
     * 
     */
    @Import(name="interactionPropertyName", required=true)
      private final Output<String> interactionPropertyName;

    public Output<String> interactionPropertyName() {
        return this.interactionPropertyName;
    }

    /**
     * The target profile property that maps to the source interaction property.
     * 
     */
    @Import(name="profilePropertyName", required=true)
      private final Output<String> profilePropertyName;

    public Output<String> profilePropertyName() {
        return this.profilePropertyName;
    }

    public ParticipantProfilePropertyReferenceArgs(
        Output<String> interactionPropertyName,
        Output<String> profilePropertyName) {
        this.interactionPropertyName = Objects.requireNonNull(interactionPropertyName, "expected parameter 'interactionPropertyName' to be non-null");
        this.profilePropertyName = Objects.requireNonNull(profilePropertyName, "expected parameter 'profilePropertyName' to be non-null");
    }

    private ParticipantProfilePropertyReferenceArgs() {
        this.interactionPropertyName = Codegen.empty();
        this.profilePropertyName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ParticipantProfilePropertyReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> interactionPropertyName;
        private Output<String> profilePropertyName;

        public Builder() {
    	      // Empty
        }

        public Builder(ParticipantProfilePropertyReferenceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interactionPropertyName = defaults.interactionPropertyName;
    	      this.profilePropertyName = defaults.profilePropertyName;
        }

        public Builder interactionPropertyName(Output<String> interactionPropertyName) {
            this.interactionPropertyName = Objects.requireNonNull(interactionPropertyName);
            return this;
        }
        public Builder interactionPropertyName(String interactionPropertyName) {
            this.interactionPropertyName = Output.of(Objects.requireNonNull(interactionPropertyName));
            return this;
        }
        public Builder profilePropertyName(Output<String> profilePropertyName) {
            this.profilePropertyName = Objects.requireNonNull(profilePropertyName);
            return this;
        }
        public Builder profilePropertyName(String profilePropertyName) {
            this.profilePropertyName = Output.of(Objects.requireNonNull(profilePropertyName));
            return this;
        }        public ParticipantProfilePropertyReferenceArgs build() {
            return new ParticipantProfilePropertyReferenceArgs(interactionPropertyName, profilePropertyName);
        }
    }
}
