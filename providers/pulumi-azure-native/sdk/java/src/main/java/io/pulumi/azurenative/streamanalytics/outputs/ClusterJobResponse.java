// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.streamanalytics.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class ClusterJobResponse {
    private final String id;
    private final String jobState;
    private final Integer streamingUnits;

    @OutputCustomType.Constructor({"id","jobState","streamingUnits"})
    private ClusterJobResponse(
        String id,
        String jobState,
        Integer streamingUnits) {
        this.id = Objects.requireNonNull(id);
        this.jobState = Objects.requireNonNull(jobState);
        this.streamingUnits = Objects.requireNonNull(streamingUnits);
    }

    public String getId() {
        return this.id;
    }
    public String getJobState() {
        return this.jobState;
    }
    public Integer getStreamingUnits() {
        return this.streamingUnits;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterJobResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private String jobState;
        private Integer streamingUnits;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterJobResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.jobState = defaults.jobState;
    	      this.streamingUnits = defaults.streamingUnits;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setJobState(String jobState) {
            this.jobState = Objects.requireNonNull(jobState);
            return this;
        }

        public Builder setStreamingUnits(Integer streamingUnits) {
            this.streamingUnits = Objects.requireNonNull(streamingUnits);
            return this;
        }

        public ClusterJobResponse build() {
            return new ClusterJobResponse(id, jobState, streamingUnits);
        }
    }
}
