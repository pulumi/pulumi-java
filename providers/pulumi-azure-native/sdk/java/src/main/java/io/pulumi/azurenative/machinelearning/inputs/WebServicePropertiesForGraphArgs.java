// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearning.inputs;

import io.pulumi.azurenative.machinelearning.inputs.AssetItemArgs;
import io.pulumi.azurenative.machinelearning.inputs.BlobLocationArgs;
import io.pulumi.azurenative.machinelearning.inputs.CommitmentPlanArgs;
import io.pulumi.azurenative.machinelearning.inputs.DiagnosticsConfigurationArgs;
import io.pulumi.azurenative.machinelearning.inputs.ExampleRequestArgs;
import io.pulumi.azurenative.machinelearning.inputs.GraphPackageArgs;
import io.pulumi.azurenative.machinelearning.inputs.MachineLearningWorkspaceArgs;
import io.pulumi.azurenative.machinelearning.inputs.RealtimeConfigurationArgs;
import io.pulumi.azurenative.machinelearning.inputs.ServiceInputOutputSpecificationArgs;
import io.pulumi.azurenative.machinelearning.inputs.StorageAccountArgs;
import io.pulumi.azurenative.machinelearning.inputs.WebServiceKeysArgs;
import io.pulumi.azurenative.machinelearning.inputs.WebServiceParameterArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebServicePropertiesForGraphArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebServicePropertiesForGraphArgs Empty = new WebServicePropertiesForGraphArgs();

    @InputImport(name="assets")
    private final @Nullable Input<Map<String,AssetItemArgs>> assets;

    public Input<Map<String,AssetItemArgs>> getAssets() {
        return this.assets == null ? Input.empty() : this.assets;
    }

    @InputImport(name="commitmentPlan")
    private final @Nullable Input<CommitmentPlanArgs> commitmentPlan;

    public Input<CommitmentPlanArgs> getCommitmentPlan() {
        return this.commitmentPlan == null ? Input.empty() : this.commitmentPlan;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="diagnostics")
    private final @Nullable Input<DiagnosticsConfigurationArgs> diagnostics;

    public Input<DiagnosticsConfigurationArgs> getDiagnostics() {
        return this.diagnostics == null ? Input.empty() : this.diagnostics;
    }

    @InputImport(name="exampleRequest")
    private final @Nullable Input<ExampleRequestArgs> exampleRequest;

    public Input<ExampleRequestArgs> getExampleRequest() {
        return this.exampleRequest == null ? Input.empty() : this.exampleRequest;
    }

    @InputImport(name="exposeSampleData")
    private final @Nullable Input<Boolean> exposeSampleData;

    public Input<Boolean> getExposeSampleData() {
        return this.exposeSampleData == null ? Input.empty() : this.exposeSampleData;
    }

    @InputImport(name="input")
    private final @Nullable Input<ServiceInputOutputSpecificationArgs> input;

    public Input<ServiceInputOutputSpecificationArgs> getInput() {
        return this.input == null ? Input.empty() : this.input;
    }

    @InputImport(name="keys")
    private final @Nullable Input<WebServiceKeysArgs> keys;

    public Input<WebServiceKeysArgs> getKeys() {
        return this.keys == null ? Input.empty() : this.keys;
    }

    @InputImport(name="machineLearningWorkspace")
    private final @Nullable Input<MachineLearningWorkspaceArgs> machineLearningWorkspace;

    public Input<MachineLearningWorkspaceArgs> getMachineLearningWorkspace() {
        return this.machineLearningWorkspace == null ? Input.empty() : this.machineLearningWorkspace;
    }

    @InputImport(name="output")
    private final @Nullable Input<ServiceInputOutputSpecificationArgs> output;

    public Input<ServiceInputOutputSpecificationArgs> getOutput() {
        return this.output == null ? Input.empty() : this.output;
    }

    @InputImport(name="package")
    private final @Nullable Input<GraphPackageArgs> $package;

    public Input<GraphPackageArgs> get$package() {
        return this.$package == null ? Input.empty() : this.$package;
    }

    @InputImport(name="packageType", required=true)
    private final Input<String> packageType;

    public Input<String> getPackageType() {
        return this.packageType;
    }

    @InputImport(name="parameters")
    private final @Nullable Input<Map<String,WebServiceParameterArgs>> parameters;

    public Input<Map<String,WebServiceParameterArgs>> getParameters() {
        return this.parameters == null ? Input.empty() : this.parameters;
    }

    @InputImport(name="payloadsInBlobStorage")
    private final @Nullable Input<Boolean> payloadsInBlobStorage;

    public Input<Boolean> getPayloadsInBlobStorage() {
        return this.payloadsInBlobStorage == null ? Input.empty() : this.payloadsInBlobStorage;
    }

    @InputImport(name="payloadsLocation")
    private final @Nullable Input<BlobLocationArgs> payloadsLocation;

    public Input<BlobLocationArgs> getPayloadsLocation() {
        return this.payloadsLocation == null ? Input.empty() : this.payloadsLocation;
    }

    @InputImport(name="readOnly")
    private final @Nullable Input<Boolean> readOnly;

    public Input<Boolean> getReadOnly() {
        return this.readOnly == null ? Input.empty() : this.readOnly;
    }

    @InputImport(name="realtimeConfiguration")
    private final @Nullable Input<RealtimeConfigurationArgs> realtimeConfiguration;

    public Input<RealtimeConfigurationArgs> getRealtimeConfiguration() {
        return this.realtimeConfiguration == null ? Input.empty() : this.realtimeConfiguration;
    }

    @InputImport(name="storageAccount")
    private final @Nullable Input<StorageAccountArgs> storageAccount;

    public Input<StorageAccountArgs> getStorageAccount() {
        return this.storageAccount == null ? Input.empty() : this.storageAccount;
    }

    @InputImport(name="title")
    private final @Nullable Input<String> title;

    public Input<String> getTitle() {
        return this.title == null ? Input.empty() : this.title;
    }

    public WebServicePropertiesForGraphArgs(
        @Nullable Input<Map<String,AssetItemArgs>> assets,
        @Nullable Input<CommitmentPlanArgs> commitmentPlan,
        @Nullable Input<String> description,
        @Nullable Input<DiagnosticsConfigurationArgs> diagnostics,
        @Nullable Input<ExampleRequestArgs> exampleRequest,
        @Nullable Input<Boolean> exposeSampleData,
        @Nullable Input<ServiceInputOutputSpecificationArgs> input,
        @Nullable Input<WebServiceKeysArgs> keys,
        @Nullable Input<MachineLearningWorkspaceArgs> machineLearningWorkspace,
        @Nullable Input<ServiceInputOutputSpecificationArgs> output,
        @Nullable Input<GraphPackageArgs> $package,
        Input<String> packageType,
        @Nullable Input<Map<String,WebServiceParameterArgs>> parameters,
        @Nullable Input<Boolean> payloadsInBlobStorage,
        @Nullable Input<BlobLocationArgs> payloadsLocation,
        @Nullable Input<Boolean> readOnly,
        @Nullable Input<RealtimeConfigurationArgs> realtimeConfiguration,
        @Nullable Input<StorageAccountArgs> storageAccount,
        @Nullable Input<String> title) {
        this.assets = assets;
        this.commitmentPlan = commitmentPlan;
        this.description = description;
        this.diagnostics = diagnostics;
        this.exampleRequest = exampleRequest;
        this.exposeSampleData = exposeSampleData;
        this.input = input;
        this.keys = keys;
        this.machineLearningWorkspace = machineLearningWorkspace;
        this.output = output;
        this.$package = $package;
        this.packageType = Objects.requireNonNull(packageType, "expected parameter 'packageType' to be non-null");
        this.parameters = parameters;
        this.payloadsInBlobStorage = payloadsInBlobStorage;
        this.payloadsLocation = payloadsLocation;
        this.readOnly = readOnly;
        this.realtimeConfiguration = realtimeConfiguration;
        this.storageAccount = storageAccount;
        this.title = title;
    }

    private WebServicePropertiesForGraphArgs() {
        this.assets = Input.empty();
        this.commitmentPlan = Input.empty();
        this.description = Input.empty();
        this.diagnostics = Input.empty();
        this.exampleRequest = Input.empty();
        this.exposeSampleData = Input.empty();
        this.input = Input.empty();
        this.keys = Input.empty();
        this.machineLearningWorkspace = Input.empty();
        this.output = Input.empty();
        this.$package = Input.empty();
        this.packageType = Input.empty();
        this.parameters = Input.empty();
        this.payloadsInBlobStorage = Input.empty();
        this.payloadsLocation = Input.empty();
        this.readOnly = Input.empty();
        this.realtimeConfiguration = Input.empty();
        this.storageAccount = Input.empty();
        this.title = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebServicePropertiesForGraphArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,AssetItemArgs>> assets;
        private @Nullable Input<CommitmentPlanArgs> commitmentPlan;
        private @Nullable Input<String> description;
        private @Nullable Input<DiagnosticsConfigurationArgs> diagnostics;
        private @Nullable Input<ExampleRequestArgs> exampleRequest;
        private @Nullable Input<Boolean> exposeSampleData;
        private @Nullable Input<ServiceInputOutputSpecificationArgs> input;
        private @Nullable Input<WebServiceKeysArgs> keys;
        private @Nullable Input<MachineLearningWorkspaceArgs> machineLearningWorkspace;
        private @Nullable Input<ServiceInputOutputSpecificationArgs> output;
        private @Nullable Input<GraphPackageArgs> $package;
        private Input<String> packageType;
        private @Nullable Input<Map<String,WebServiceParameterArgs>> parameters;
        private @Nullable Input<Boolean> payloadsInBlobStorage;
        private @Nullable Input<BlobLocationArgs> payloadsLocation;
        private @Nullable Input<Boolean> readOnly;
        private @Nullable Input<RealtimeConfigurationArgs> realtimeConfiguration;
        private @Nullable Input<StorageAccountArgs> storageAccount;
        private @Nullable Input<String> title;

        public Builder() {
    	      // Empty
        }

        public Builder(WebServicePropertiesForGraphArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assets = defaults.assets;
    	      this.commitmentPlan = defaults.commitmentPlan;
    	      this.description = defaults.description;
    	      this.diagnostics = defaults.diagnostics;
    	      this.exampleRequest = defaults.exampleRequest;
    	      this.exposeSampleData = defaults.exposeSampleData;
    	      this.input = defaults.input;
    	      this.keys = defaults.keys;
    	      this.machineLearningWorkspace = defaults.machineLearningWorkspace;
    	      this.output = defaults.output;
    	      this.$package = defaults.$package;
    	      this.packageType = defaults.packageType;
    	      this.parameters = defaults.parameters;
    	      this.payloadsInBlobStorage = defaults.payloadsInBlobStorage;
    	      this.payloadsLocation = defaults.payloadsLocation;
    	      this.readOnly = defaults.readOnly;
    	      this.realtimeConfiguration = defaults.realtimeConfiguration;
    	      this.storageAccount = defaults.storageAccount;
    	      this.title = defaults.title;
        }

        public Builder setAssets(@Nullable Input<Map<String,AssetItemArgs>> assets) {
            this.assets = assets;
            return this;
        }

        public Builder setAssets(@Nullable Map<String,AssetItemArgs> assets) {
            this.assets = Input.ofNullable(assets);
            return this;
        }

        public Builder setCommitmentPlan(@Nullable Input<CommitmentPlanArgs> commitmentPlan) {
            this.commitmentPlan = commitmentPlan;
            return this;
        }

        public Builder setCommitmentPlan(@Nullable CommitmentPlanArgs commitmentPlan) {
            this.commitmentPlan = Input.ofNullable(commitmentPlan);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDiagnostics(@Nullable Input<DiagnosticsConfigurationArgs> diagnostics) {
            this.diagnostics = diagnostics;
            return this;
        }

        public Builder setDiagnostics(@Nullable DiagnosticsConfigurationArgs diagnostics) {
            this.diagnostics = Input.ofNullable(diagnostics);
            return this;
        }

        public Builder setExampleRequest(@Nullable Input<ExampleRequestArgs> exampleRequest) {
            this.exampleRequest = exampleRequest;
            return this;
        }

        public Builder setExampleRequest(@Nullable ExampleRequestArgs exampleRequest) {
            this.exampleRequest = Input.ofNullable(exampleRequest);
            return this;
        }

        public Builder setExposeSampleData(@Nullable Input<Boolean> exposeSampleData) {
            this.exposeSampleData = exposeSampleData;
            return this;
        }

        public Builder setExposeSampleData(@Nullable Boolean exposeSampleData) {
            this.exposeSampleData = Input.ofNullable(exposeSampleData);
            return this;
        }

        public Builder setInput(@Nullable Input<ServiceInputOutputSpecificationArgs> input) {
            this.input = input;
            return this;
        }

        public Builder setInput(@Nullable ServiceInputOutputSpecificationArgs input) {
            this.input = Input.ofNullable(input);
            return this;
        }

        public Builder setKeys(@Nullable Input<WebServiceKeysArgs> keys) {
            this.keys = keys;
            return this;
        }

        public Builder setKeys(@Nullable WebServiceKeysArgs keys) {
            this.keys = Input.ofNullable(keys);
            return this;
        }

        public Builder setMachineLearningWorkspace(@Nullable Input<MachineLearningWorkspaceArgs> machineLearningWorkspace) {
            this.machineLearningWorkspace = machineLearningWorkspace;
            return this;
        }

        public Builder setMachineLearningWorkspace(@Nullable MachineLearningWorkspaceArgs machineLearningWorkspace) {
            this.machineLearningWorkspace = Input.ofNullable(machineLearningWorkspace);
            return this;
        }

        public Builder setOutput(@Nullable Input<ServiceInputOutputSpecificationArgs> output) {
            this.output = output;
            return this;
        }

        public Builder setOutput(@Nullable ServiceInputOutputSpecificationArgs output) {
            this.output = Input.ofNullable(output);
            return this;
        }

        public Builder set$package(@Nullable Input<GraphPackageArgs> $package) {
            this.$package = $package;
            return this;
        }

        public Builder set$package(@Nullable GraphPackageArgs $package) {
            this.$package = Input.ofNullable($package);
            return this;
        }

        public Builder setPackageType(Input<String> packageType) {
            this.packageType = Objects.requireNonNull(packageType);
            return this;
        }

        public Builder setPackageType(String packageType) {
            this.packageType = Input.of(Objects.requireNonNull(packageType));
            return this;
        }

        public Builder setParameters(@Nullable Input<Map<String,WebServiceParameterArgs>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setParameters(@Nullable Map<String,WebServiceParameterArgs> parameters) {
            this.parameters = Input.ofNullable(parameters);
            return this;
        }

        public Builder setPayloadsInBlobStorage(@Nullable Input<Boolean> payloadsInBlobStorage) {
            this.payloadsInBlobStorage = payloadsInBlobStorage;
            return this;
        }

        public Builder setPayloadsInBlobStorage(@Nullable Boolean payloadsInBlobStorage) {
            this.payloadsInBlobStorage = Input.ofNullable(payloadsInBlobStorage);
            return this;
        }

        public Builder setPayloadsLocation(@Nullable Input<BlobLocationArgs> payloadsLocation) {
            this.payloadsLocation = payloadsLocation;
            return this;
        }

        public Builder setPayloadsLocation(@Nullable BlobLocationArgs payloadsLocation) {
            this.payloadsLocation = Input.ofNullable(payloadsLocation);
            return this;
        }

        public Builder setReadOnly(@Nullable Input<Boolean> readOnly) {
            this.readOnly = readOnly;
            return this;
        }

        public Builder setReadOnly(@Nullable Boolean readOnly) {
            this.readOnly = Input.ofNullable(readOnly);
            return this;
        }

        public Builder setRealtimeConfiguration(@Nullable Input<RealtimeConfigurationArgs> realtimeConfiguration) {
            this.realtimeConfiguration = realtimeConfiguration;
            return this;
        }

        public Builder setRealtimeConfiguration(@Nullable RealtimeConfigurationArgs realtimeConfiguration) {
            this.realtimeConfiguration = Input.ofNullable(realtimeConfiguration);
            return this;
        }

        public Builder setStorageAccount(@Nullable Input<StorageAccountArgs> storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }

        public Builder setStorageAccount(@Nullable StorageAccountArgs storageAccount) {
            this.storageAccount = Input.ofNullable(storageAccount);
            return this;
        }

        public Builder setTitle(@Nullable Input<String> title) {
            this.title = title;
            return this;
        }

        public Builder setTitle(@Nullable String title) {
            this.title = Input.ofNullable(title);
            return this;
        }

        public WebServicePropertiesForGraphArgs build() {
            return new WebServicePropertiesForGraphArgs(assets, commitmentPlan, description, diagnostics, exampleRequest, exposeSampleData, input, keys, machineLearningWorkspace, output, $package, packageType, parameters, payloadsInBlobStorage, payloadsLocation, readOnly, realtimeConfiguration, storageAccount, title);
        }
    }
}
