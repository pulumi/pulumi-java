// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.inputs.FilterItems;
import io.pulumi.azurenative.network.inputs.OrderBy;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListFirewallPolicyIdpsSignatureArgs extends io.pulumi.resources.InvokeArgs {

    public static final ListFirewallPolicyIdpsSignatureArgs Empty = new ListFirewallPolicyIdpsSignatureArgs();

    /**
     * Contain all filters names and values
     * 
     */
    @InputImport(name="filters")
    private final @Nullable List<FilterItems> filters;

    public List<FilterItems> getFilters() {
        return this.filters == null ? List.of() : this.filters;
    }

    /**
     * The name of the Firewall Policy.
     * 
     */
    @InputImport(name="firewallPolicyName", required=true)
    private final String firewallPolicyName;

    public String getFirewallPolicyName() {
        return this.firewallPolicyName;
    }

    /**
     * Column to sort response by
     * 
     */
    @InputImport(name="orderBy")
    private final @Nullable OrderBy orderBy;

    public Optional<OrderBy> getOrderBy() {
        return this.orderBy == null ? Optional.empty() : Optional.ofNullable(this.orderBy);
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final String resourceGroupName;

    public String getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The number of the results to return in each page
     * 
     */
    @InputImport(name="resultsPerPage")
    private final @Nullable Integer resultsPerPage;

    public Optional<Integer> getResultsPerPage() {
        return this.resultsPerPage == null ? Optional.empty() : Optional.ofNullable(this.resultsPerPage);
    }

    /**
     * Search term in all columns
     * 
     */
    @InputImport(name="search")
    private final @Nullable String search;

    public Optional<String> getSearch() {
        return this.search == null ? Optional.empty() : Optional.ofNullable(this.search);
    }

    /**
     * The number of records matching the filter to skip
     * 
     */
    @InputImport(name="skip")
    private final @Nullable Integer skip;

    public Optional<Integer> getSkip() {
        return this.skip == null ? Optional.empty() : Optional.ofNullable(this.skip);
    }

    public ListFirewallPolicyIdpsSignatureArgs(
        @Nullable List<FilterItems> filters,
        String firewallPolicyName,
        @Nullable OrderBy orderBy,
        String resourceGroupName,
        @Nullable Integer resultsPerPage,
        @Nullable String search,
        @Nullable Integer skip) {
        this.filters = filters;
        this.firewallPolicyName = Objects.requireNonNull(firewallPolicyName, "expected parameter 'firewallPolicyName' to be non-null");
        this.orderBy = orderBy;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resultsPerPage = resultsPerPage;
        this.search = search;
        this.skip = skip;
    }

    private ListFirewallPolicyIdpsSignatureArgs() {
        this.filters = List.of();
        this.firewallPolicyName = null;
        this.orderBy = null;
        this.resourceGroupName = null;
        this.resultsPerPage = null;
        this.search = null;
        this.skip = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListFirewallPolicyIdpsSignatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<FilterItems> filters;
        private String firewallPolicyName;
        private @Nullable OrderBy orderBy;
        private String resourceGroupName;
        private @Nullable Integer resultsPerPage;
        private @Nullable String search;
        private @Nullable Integer skip;

        public Builder() {
    	      // Empty
        }

        public Builder(ListFirewallPolicyIdpsSignatureArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.firewallPolicyName = defaults.firewallPolicyName;
    	      this.orderBy = defaults.orderBy;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resultsPerPage = defaults.resultsPerPage;
    	      this.search = defaults.search;
    	      this.skip = defaults.skip;
        }

        public Builder setFilters(@Nullable List<FilterItems> filters) {
            this.filters = filters;
            return this;
        }

        public Builder setFirewallPolicyName(String firewallPolicyName) {
            this.firewallPolicyName = Objects.requireNonNull(firewallPolicyName);
            return this;
        }

        public Builder setOrderBy(@Nullable OrderBy orderBy) {
            this.orderBy = orderBy;
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResultsPerPage(@Nullable Integer resultsPerPage) {
            this.resultsPerPage = resultsPerPage;
            return this;
        }

        public Builder setSearch(@Nullable String search) {
            this.search = search;
            return this;
        }

        public Builder setSkip(@Nullable Integer skip) {
            this.skip = skip;
            return this;
        }

        public ListFirewallPolicyIdpsSignatureArgs build() {
            return new ListFirewallPolicyIdpsSignatureArgs(filters, firewallPolicyName, orderBy, resourceGroupName, resultsPerPage, search, skip);
        }
    }
}
