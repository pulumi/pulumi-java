// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storsimple;

import io.pulumi.azurenative.storsimple.enums.Kind;
import io.pulumi.azurenative.storsimple.inputs.AsymmetricEncryptedSecretArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VolumeContainerArgs extends io.pulumi.resources.ResourceArgs {

    public static final VolumeContainerArgs Empty = new VolumeContainerArgs();

    /**
     * The bandwidth-rate set on the volume container.
     * 
     */
    @InputImport(name="bandWidthRateInMbps")
      private final @Nullable Output<Integer> bandWidthRateInMbps;

    public Output<Integer> getBandWidthRateInMbps() {
        return this.bandWidthRateInMbps == null ? Output.empty() : this.bandWidthRateInMbps;
    }

    /**
     * The ID of the bandwidth setting associated with the volume container.
     * 
     */
    @InputImport(name="bandwidthSettingId")
      private final @Nullable Output<String> bandwidthSettingId;

    public Output<String> getBandwidthSettingId() {
        return this.bandwidthSettingId == null ? Output.empty() : this.bandwidthSettingId;
    }

    /**
     * The device name
     * 
     */
    @InputImport(name="deviceName", required=true)
      private final Output<String> deviceName;

    public Output<String> getDeviceName() {
        return this.deviceName;
    }

    /**
     * The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
     * 
     */
    @InputImport(name="encryptionKey")
      private final @Nullable Output<AsymmetricEncryptedSecretArgs> encryptionKey;

    public Output<AsymmetricEncryptedSecretArgs> getEncryptionKey() {
        return this.encryptionKey == null ? Output.empty() : this.encryptionKey;
    }

    /**
     * The Kind of the object. Currently only Series8000 is supported
     * 
     */
    @InputImport(name="kind")
      private final @Nullable Output<Kind> kind;

    public Output<Kind> getKind() {
        return this.kind == null ? Output.empty() : this.kind;
    }

    /**
     * The manager name
     * 
     */
    @InputImport(name="managerName", required=true)
      private final Output<String> managerName;

    public Output<String> getManagerName() {
        return this.managerName;
    }

    /**
     * The resource group name
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The path ID of storage account associated with the volume container.
     * 
     */
    @InputImport(name="storageAccountCredentialId", required=true)
      private final Output<String> storageAccountCredentialId;

    public Output<String> getStorageAccountCredentialId() {
        return this.storageAccountCredentialId;
    }

    /**
     * The name of the volume container.
     * 
     */
    @InputImport(name="volumeContainerName")
      private final @Nullable Output<String> volumeContainerName;

    public Output<String> getVolumeContainerName() {
        return this.volumeContainerName == null ? Output.empty() : this.volumeContainerName;
    }

    public VolumeContainerArgs(
        @Nullable Output<Integer> bandWidthRateInMbps,
        @Nullable Output<String> bandwidthSettingId,
        Output<String> deviceName,
        @Nullable Output<AsymmetricEncryptedSecretArgs> encryptionKey,
        @Nullable Output<Kind> kind,
        Output<String> managerName,
        Output<String> resourceGroupName,
        Output<String> storageAccountCredentialId,
        @Nullable Output<String> volumeContainerName) {
        this.bandWidthRateInMbps = bandWidthRateInMbps;
        this.bandwidthSettingId = bandwidthSettingId;
        this.deviceName = Objects.requireNonNull(deviceName, "expected parameter 'deviceName' to be non-null");
        this.encryptionKey = encryptionKey;
        this.kind = kind;
        this.managerName = Objects.requireNonNull(managerName, "expected parameter 'managerName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.storageAccountCredentialId = Objects.requireNonNull(storageAccountCredentialId, "expected parameter 'storageAccountCredentialId' to be non-null");
        this.volumeContainerName = volumeContainerName;
    }

    private VolumeContainerArgs() {
        this.bandWidthRateInMbps = Output.empty();
        this.bandwidthSettingId = Output.empty();
        this.deviceName = Output.empty();
        this.encryptionKey = Output.empty();
        this.kind = Output.empty();
        this.managerName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.storageAccountCredentialId = Output.empty();
        this.volumeContainerName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeContainerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> bandWidthRateInMbps;
        private @Nullable Output<String> bandwidthSettingId;
        private Output<String> deviceName;
        private @Nullable Output<AsymmetricEncryptedSecretArgs> encryptionKey;
        private @Nullable Output<Kind> kind;
        private Output<String> managerName;
        private Output<String> resourceGroupName;
        private Output<String> storageAccountCredentialId;
        private @Nullable Output<String> volumeContainerName;

        public Builder() {
    	      // Empty
        }

        public Builder(VolumeContainerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandWidthRateInMbps = defaults.bandWidthRateInMbps;
    	      this.bandwidthSettingId = defaults.bandwidthSettingId;
    	      this.deviceName = defaults.deviceName;
    	      this.encryptionKey = defaults.encryptionKey;
    	      this.kind = defaults.kind;
    	      this.managerName = defaults.managerName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.storageAccountCredentialId = defaults.storageAccountCredentialId;
    	      this.volumeContainerName = defaults.volumeContainerName;
        }

        public Builder bandWidthRateInMbps(@Nullable Output<Integer> bandWidthRateInMbps) {
            this.bandWidthRateInMbps = bandWidthRateInMbps;
            return this;
        }

        public Builder bandWidthRateInMbps(@Nullable Integer bandWidthRateInMbps) {
            this.bandWidthRateInMbps = Output.ofNullable(bandWidthRateInMbps);
            return this;
        }

        public Builder bandwidthSettingId(@Nullable Output<String> bandwidthSettingId) {
            this.bandwidthSettingId = bandwidthSettingId;
            return this;
        }

        public Builder bandwidthSettingId(@Nullable String bandwidthSettingId) {
            this.bandwidthSettingId = Output.ofNullable(bandwidthSettingId);
            return this;
        }

        public Builder deviceName(Output<String> deviceName) {
            this.deviceName = Objects.requireNonNull(deviceName);
            return this;
        }

        public Builder deviceName(String deviceName) {
            this.deviceName = Output.of(Objects.requireNonNull(deviceName));
            return this;
        }

        public Builder encryptionKey(@Nullable Output<AsymmetricEncryptedSecretArgs> encryptionKey) {
            this.encryptionKey = encryptionKey;
            return this;
        }

        public Builder encryptionKey(@Nullable AsymmetricEncryptedSecretArgs encryptionKey) {
            this.encryptionKey = Output.ofNullable(encryptionKey);
            return this;
        }

        public Builder kind(@Nullable Output<Kind> kind) {
            this.kind = kind;
            return this;
        }

        public Builder kind(@Nullable Kind kind) {
            this.kind = Output.ofNullable(kind);
            return this;
        }

        public Builder managerName(Output<String> managerName) {
            this.managerName = Objects.requireNonNull(managerName);
            return this;
        }

        public Builder managerName(String managerName) {
            this.managerName = Output.of(Objects.requireNonNull(managerName));
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder storageAccountCredentialId(Output<String> storageAccountCredentialId) {
            this.storageAccountCredentialId = Objects.requireNonNull(storageAccountCredentialId);
            return this;
        }

        public Builder storageAccountCredentialId(String storageAccountCredentialId) {
            this.storageAccountCredentialId = Output.of(Objects.requireNonNull(storageAccountCredentialId));
            return this;
        }

        public Builder volumeContainerName(@Nullable Output<String> volumeContainerName) {
            this.volumeContainerName = volumeContainerName;
            return this;
        }

        public Builder volumeContainerName(@Nullable String volumeContainerName) {
            this.volumeContainerName = Output.ofNullable(volumeContainerName);
            return this;
        }
        public VolumeContainerArgs build() {
            return new VolumeContainerArgs(bandWidthRateInMbps, bandwidthSettingId, deviceName, encryptionKey, kind, managerName, resourceGroupName, storageAccountCredentialId, volumeContainerName);
        }
    }
}
