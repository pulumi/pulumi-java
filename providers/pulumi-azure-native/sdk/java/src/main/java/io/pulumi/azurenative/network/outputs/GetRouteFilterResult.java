// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.ExpressRouteCircuitPeeringResponse;
import io.pulumi.azurenative.network.outputs.RouteFilterRuleResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetRouteFilterResult {
    private final String etag;
    private final @Nullable String id;
    private final List<ExpressRouteCircuitPeeringResponse> ipv6Peerings;
    private final String location;
    private final String name;
    private final List<ExpressRouteCircuitPeeringResponse> peerings;
    private final String provisioningState;
    private final @Nullable List<RouteFilterRuleResponse> rules;
    private final @Nullable Map<String,String> tags;
    private final String type;

    @OutputCustomType.Constructor({"etag","id","ipv6Peerings","location","name","peerings","provisioningState","rules","tags","type"})
    private GetRouteFilterResult(
        String etag,
        @Nullable String id,
        List<ExpressRouteCircuitPeeringResponse> ipv6Peerings,
        String location,
        String name,
        List<ExpressRouteCircuitPeeringResponse> peerings,
        String provisioningState,
        @Nullable List<RouteFilterRuleResponse> rules,
        @Nullable Map<String,String> tags,
        String type) {
        this.etag = Objects.requireNonNull(etag);
        this.id = id;
        this.ipv6Peerings = Objects.requireNonNull(ipv6Peerings);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.peerings = Objects.requireNonNull(peerings);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.rules = rules;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    public String getEtag() {
        return this.etag;
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public List<ExpressRouteCircuitPeeringResponse> getIpv6Peerings() {
        return this.ipv6Peerings;
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public List<ExpressRouteCircuitPeeringResponse> getPeerings() {
        return this.peerings;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public List<RouteFilterRuleResponse> getRules() {
        return this.rules == null ? List.of() : this.rules;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteFilterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String etag;
        private @Nullable String id;
        private List<ExpressRouteCircuitPeeringResponse> ipv6Peerings;
        private String location;
        private String name;
        private List<ExpressRouteCircuitPeeringResponse> peerings;
        private String provisioningState;
        private @Nullable List<RouteFilterRuleResponse> rules;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRouteFilterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.ipv6Peerings = defaults.ipv6Peerings;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.peerings = defaults.peerings;
    	      this.provisioningState = defaults.provisioningState;
    	      this.rules = defaults.rules;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setIpv6Peerings(List<ExpressRouteCircuitPeeringResponse> ipv6Peerings) {
            this.ipv6Peerings = Objects.requireNonNull(ipv6Peerings);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPeerings(List<ExpressRouteCircuitPeeringResponse> peerings) {
            this.peerings = Objects.requireNonNull(peerings);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRules(@Nullable List<RouteFilterRuleResponse> rules) {
            this.rules = rules;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetRouteFilterResult build() {
            return new GetRouteFilterResult(etag, id, ipv6Peerings, location, name, peerings, provisioningState, rules, tags, type);
        }
    }
}
