// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.azurenative.datamigration.outputs.BackupSetInfoResponse;
import io.pulumi.azurenative.datamigration.outputs.ReportableExceptionResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse {
    private final List<BackupSetInfoResponse> activeBackupSets;
    private final String containerName;
    private final String endedOn;
    private final String errorPrefix;
    private final List<ReportableExceptionResponse> exceptionsAndWarnings;
    private final BackupSetInfoResponse fullBackupSetInfo;
    private final String id;
    private final Boolean isFullBackupRestored;
    private final BackupSetInfoResponse lastRestoredBackupSetInfo;
    private final String migrationState;
    private final String resultType;
    private final String sourceDatabaseName;
    private final String startedOn;

    @OutputCustomType.Constructor({"activeBackupSets","containerName","endedOn","errorPrefix","exceptionsAndWarnings","fullBackupSetInfo","id","isFullBackupRestored","lastRestoredBackupSetInfo","migrationState","resultType","sourceDatabaseName","startedOn"})
    private MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse(
        List<BackupSetInfoResponse> activeBackupSets,
        String containerName,
        String endedOn,
        String errorPrefix,
        List<ReportableExceptionResponse> exceptionsAndWarnings,
        BackupSetInfoResponse fullBackupSetInfo,
        String id,
        Boolean isFullBackupRestored,
        BackupSetInfoResponse lastRestoredBackupSetInfo,
        String migrationState,
        String resultType,
        String sourceDatabaseName,
        String startedOn) {
        this.activeBackupSets = Objects.requireNonNull(activeBackupSets);
        this.containerName = Objects.requireNonNull(containerName);
        this.endedOn = Objects.requireNonNull(endedOn);
        this.errorPrefix = Objects.requireNonNull(errorPrefix);
        this.exceptionsAndWarnings = Objects.requireNonNull(exceptionsAndWarnings);
        this.fullBackupSetInfo = Objects.requireNonNull(fullBackupSetInfo);
        this.id = Objects.requireNonNull(id);
        this.isFullBackupRestored = Objects.requireNonNull(isFullBackupRestored);
        this.lastRestoredBackupSetInfo = Objects.requireNonNull(lastRestoredBackupSetInfo);
        this.migrationState = Objects.requireNonNull(migrationState);
        this.resultType = Objects.requireNonNull(resultType);
        this.sourceDatabaseName = Objects.requireNonNull(sourceDatabaseName);
        this.startedOn = Objects.requireNonNull(startedOn);
    }

    public List<BackupSetInfoResponse> getActiveBackupSets() {
        return this.activeBackupSets;
    }
    public String getContainerName() {
        return this.containerName;
    }
    public String getEndedOn() {
        return this.endedOn;
    }
    public String getErrorPrefix() {
        return this.errorPrefix;
    }
    public List<ReportableExceptionResponse> getExceptionsAndWarnings() {
        return this.exceptionsAndWarnings;
    }
    public BackupSetInfoResponse getFullBackupSetInfo() {
        return this.fullBackupSetInfo;
    }
    public String getId() {
        return this.id;
    }
    public Boolean getIsFullBackupRestored() {
        return this.isFullBackupRestored;
    }
    public BackupSetInfoResponse getLastRestoredBackupSetInfo() {
        return this.lastRestoredBackupSetInfo;
    }
    public String getMigrationState() {
        return this.migrationState;
    }
    public String getResultType() {
        return this.resultType;
    }
    public String getSourceDatabaseName() {
        return this.sourceDatabaseName;
    }
    public String getStartedOn() {
        return this.startedOn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<BackupSetInfoResponse> activeBackupSets;
        private String containerName;
        private String endedOn;
        private String errorPrefix;
        private List<ReportableExceptionResponse> exceptionsAndWarnings;
        private BackupSetInfoResponse fullBackupSetInfo;
        private String id;
        private Boolean isFullBackupRestored;
        private BackupSetInfoResponse lastRestoredBackupSetInfo;
        private String migrationState;
        private String resultType;
        private String sourceDatabaseName;
        private String startedOn;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeBackupSets = defaults.activeBackupSets;
    	      this.containerName = defaults.containerName;
    	      this.endedOn = defaults.endedOn;
    	      this.errorPrefix = defaults.errorPrefix;
    	      this.exceptionsAndWarnings = defaults.exceptionsAndWarnings;
    	      this.fullBackupSetInfo = defaults.fullBackupSetInfo;
    	      this.id = defaults.id;
    	      this.isFullBackupRestored = defaults.isFullBackupRestored;
    	      this.lastRestoredBackupSetInfo = defaults.lastRestoredBackupSetInfo;
    	      this.migrationState = defaults.migrationState;
    	      this.resultType = defaults.resultType;
    	      this.sourceDatabaseName = defaults.sourceDatabaseName;
    	      this.startedOn = defaults.startedOn;
        }

        public Builder setActiveBackupSets(List<BackupSetInfoResponse> activeBackupSets) {
            this.activeBackupSets = Objects.requireNonNull(activeBackupSets);
            return this;
        }

        public Builder setContainerName(String containerName) {
            this.containerName = Objects.requireNonNull(containerName);
            return this;
        }

        public Builder setEndedOn(String endedOn) {
            this.endedOn = Objects.requireNonNull(endedOn);
            return this;
        }

        public Builder setErrorPrefix(String errorPrefix) {
            this.errorPrefix = Objects.requireNonNull(errorPrefix);
            return this;
        }

        public Builder setExceptionsAndWarnings(List<ReportableExceptionResponse> exceptionsAndWarnings) {
            this.exceptionsAndWarnings = Objects.requireNonNull(exceptionsAndWarnings);
            return this;
        }

        public Builder setFullBackupSetInfo(BackupSetInfoResponse fullBackupSetInfo) {
            this.fullBackupSetInfo = Objects.requireNonNull(fullBackupSetInfo);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIsFullBackupRestored(Boolean isFullBackupRestored) {
            this.isFullBackupRestored = Objects.requireNonNull(isFullBackupRestored);
            return this;
        }

        public Builder setLastRestoredBackupSetInfo(BackupSetInfoResponse lastRestoredBackupSetInfo) {
            this.lastRestoredBackupSetInfo = Objects.requireNonNull(lastRestoredBackupSetInfo);
            return this;
        }

        public Builder setMigrationState(String migrationState) {
            this.migrationState = Objects.requireNonNull(migrationState);
            return this;
        }

        public Builder setResultType(String resultType) {
            this.resultType = Objects.requireNonNull(resultType);
            return this;
        }

        public Builder setSourceDatabaseName(String sourceDatabaseName) {
            this.sourceDatabaseName = Objects.requireNonNull(sourceDatabaseName);
            return this;
        }

        public Builder setStartedOn(String startedOn) {
            this.startedOn = Objects.requireNonNull(startedOn);
            return this;
        }

        public MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse build() {
            return new MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse(activeBackupSets, containerName, endedOn, errorPrefix, exceptionsAndWarnings, fullBackupSetInfo, id, isFullBackupRestored, lastRestoredBackupSetInfo, migrationState, resultType, sourceDatabaseName, startedOn);
        }
    }
}
