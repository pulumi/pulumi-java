// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SecretValueArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecretValueArgs Empty = new SecretValueArgs();

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * Azure resource group name
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the secret resource.
     * 
     */
    @Import(name="secretResourceName", required=true)
      private final Output<String> secretResourceName;

    public Output<String> getSecretResourceName() {
        return this.secretResourceName;
    }

    /**
     * The name of the secret resource value which is typically the version identifier for the value.
     * 
     */
    @Import(name="secretValueResourceName")
      private final @Nullable Output<String> secretValueResourceName;

    public Output<String> getSecretValueResourceName() {
        return this.secretValueResourceName == null ? Output.empty() : this.secretValueResourceName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * The actual value of the secret.
     * 
     */
    @Import(name="value")
      private final @Nullable Output<String> value;

    public Output<String> getValue() {
        return this.value == null ? Output.empty() : this.value;
    }

    public SecretValueArgs(
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        Output<String> secretResourceName,
        @Nullable Output<String> secretValueResourceName,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> value) {
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.secretResourceName = Objects.requireNonNull(secretResourceName, "expected parameter 'secretResourceName' to be non-null");
        this.secretValueResourceName = secretValueResourceName;
        this.tags = tags;
        this.value = value;
    }

    private SecretValueArgs() {
        this.location = Output.empty();
        this.resourceGroupName = Output.empty();
        this.secretResourceName = Output.empty();
        this.secretValueResourceName = Output.empty();
        this.tags = Output.empty();
        this.value = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private Output<String> secretResourceName;
        private @Nullable Output<String> secretValueResourceName;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(SecretValueArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.secretResourceName = defaults.secretResourceName;
    	      this.secretValueResourceName = defaults.secretValueResourceName;
    	      this.tags = defaults.tags;
    	      this.value = defaults.value;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder secretResourceName(Output<String> secretResourceName) {
            this.secretResourceName = Objects.requireNonNull(secretResourceName);
            return this;
        }

        public Builder secretResourceName(String secretResourceName) {
            this.secretResourceName = Output.of(Objects.requireNonNull(secretResourceName));
            return this;
        }

        public Builder secretValueResourceName(@Nullable Output<String> secretValueResourceName) {
            this.secretValueResourceName = secretValueResourceName;
            return this;
        }

        public Builder secretValueResourceName(@Nullable String secretValueResourceName) {
            this.secretValueResourceName = Output.ofNullable(secretValueResourceName);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder value(@Nullable Output<String> value) {
            this.value = value;
            return this;
        }

        public Builder value(@Nullable String value) {
            this.value = Output.ofNullable(value);
            return this;
        }
        public SecretValueArgs build() {
            return new SecretValueArgs(location, resourceGroupName, secretResourceName, secretValueResourceName, tags, value);
        }
    }
}
