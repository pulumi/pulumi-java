// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn;

import io.pulumi.azurenative.cdn.enums.EnabledState;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AFDEndpointArgs extends io.pulumi.resources.ResourceArgs {

    public static final AFDEndpointArgs Empty = new AFDEndpointArgs();

    /**
     * Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
     * 
     */
    @Import(name="enabledState")
      private final @Nullable Output<Either<String,EnabledState>> enabledState;

    public Output<Either<String,EnabledState>> getEnabledState() {
        return this.enabledState == null ? Output.empty() : this.enabledState;
    }

    /**
     * Name of the endpoint under the profile which is unique globally.
     * 
     */
    @Import(name="endpointName")
      private final @Nullable Output<String> endpointName;

    public Output<String> getEndpointName() {
        return this.endpointName == null ? Output.empty() : this.endpointName;
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.
     * 
     */
    @Import(name="originResponseTimeoutSeconds")
      private final @Nullable Output<Integer> originResponseTimeoutSeconds;

    public Output<Integer> getOriginResponseTimeoutSeconds() {
        return this.originResponseTimeoutSeconds == null ? Output.empty() : this.originResponseTimeoutSeconds;
    }

    /**
     * Name of the CDN profile which is unique within the resource group.
     * 
     */
    @Import(name="profileName", required=true)
      private final Output<String> profileName;

    public Output<String> getProfileName() {
        return this.profileName;
    }

    /**
     * Name of the Resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public AFDEndpointArgs(
        @Nullable Output<Either<String,EnabledState>> enabledState,
        @Nullable Output<String> endpointName,
        @Nullable Output<String> location,
        @Nullable Output<Integer> originResponseTimeoutSeconds,
        Output<String> profileName,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.enabledState = enabledState;
        this.endpointName = endpointName;
        this.location = location;
        this.originResponseTimeoutSeconds = originResponseTimeoutSeconds;
        this.profileName = Objects.requireNonNull(profileName, "expected parameter 'profileName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private AFDEndpointArgs() {
        this.enabledState = Output.empty();
        this.endpointName = Output.empty();
        this.location = Output.empty();
        this.originResponseTimeoutSeconds = Output.empty();
        this.profileName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AFDEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,EnabledState>> enabledState;
        private @Nullable Output<String> endpointName;
        private @Nullable Output<String> location;
        private @Nullable Output<Integer> originResponseTimeoutSeconds;
        private Output<String> profileName;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AFDEndpointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabledState = defaults.enabledState;
    	      this.endpointName = defaults.endpointName;
    	      this.location = defaults.location;
    	      this.originResponseTimeoutSeconds = defaults.originResponseTimeoutSeconds;
    	      this.profileName = defaults.profileName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder enabledState(@Nullable Output<Either<String,EnabledState>> enabledState) {
            this.enabledState = enabledState;
            return this;
        }
        public Builder enabledState(@Nullable Either<String,EnabledState> enabledState) {
            this.enabledState = Output.ofNullable(enabledState);
            return this;
        }
        public Builder endpointName(@Nullable Output<String> endpointName) {
            this.endpointName = endpointName;
            return this;
        }
        public Builder endpointName(@Nullable String endpointName) {
            this.endpointName = Output.ofNullable(endpointName);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }
        public Builder originResponseTimeoutSeconds(@Nullable Output<Integer> originResponseTimeoutSeconds) {
            this.originResponseTimeoutSeconds = originResponseTimeoutSeconds;
            return this;
        }
        public Builder originResponseTimeoutSeconds(@Nullable Integer originResponseTimeoutSeconds) {
            this.originResponseTimeoutSeconds = Output.ofNullable(originResponseTimeoutSeconds);
            return this;
        }
        public Builder profileName(Output<String> profileName) {
            this.profileName = Objects.requireNonNull(profileName);
            return this;
        }
        public Builder profileName(String profileName) {
            this.profileName = Output.of(Objects.requireNonNull(profileName));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }        public AFDEndpointArgs build() {
            return new AFDEndpointArgs(enabledState, endpointName, location, originResponseTimeoutSeconds, profileName, resourceGroupName, tags);
        }
    }
}
