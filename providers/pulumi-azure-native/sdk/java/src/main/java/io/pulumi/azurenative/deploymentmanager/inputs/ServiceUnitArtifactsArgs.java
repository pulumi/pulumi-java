// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.deploymentmanager.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines the artifacts of a service unit.
 * 
 */
public final class ServiceUnitArtifactsArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceUnitArtifactsArgs Empty = new ServiceUnitArtifactsArgs();

    /**
     * The path to the ARM parameters file relative to the artifact source.
     * 
     */
    @InputImport(name="parametersArtifactSourceRelativePath")
    private final @Nullable Input<String> parametersArtifactSourceRelativePath;

    public Input<String> getParametersArtifactSourceRelativePath() {
        return this.parametersArtifactSourceRelativePath == null ? Input.empty() : this.parametersArtifactSourceRelativePath;
    }

    /**
     * The full URI of the ARM parameters file with the SAS token.
     * 
     */
    @InputImport(name="parametersUri")
    private final @Nullable Input<String> parametersUri;

    public Input<String> getParametersUri() {
        return this.parametersUri == null ? Input.empty() : this.parametersUri;
    }

    /**
     * The path to the ARM template file relative to the artifact source.
     * 
     */
    @InputImport(name="templateArtifactSourceRelativePath")
    private final @Nullable Input<String> templateArtifactSourceRelativePath;

    public Input<String> getTemplateArtifactSourceRelativePath() {
        return this.templateArtifactSourceRelativePath == null ? Input.empty() : this.templateArtifactSourceRelativePath;
    }

    /**
     * The full URI of the ARM template file with the SAS token.
     * 
     */
    @InputImport(name="templateUri")
    private final @Nullable Input<String> templateUri;

    public Input<String> getTemplateUri() {
        return this.templateUri == null ? Input.empty() : this.templateUri;
    }

    public ServiceUnitArtifactsArgs(
        @Nullable Input<String> parametersArtifactSourceRelativePath,
        @Nullable Input<String> parametersUri,
        @Nullable Input<String> templateArtifactSourceRelativePath,
        @Nullable Input<String> templateUri) {
        this.parametersArtifactSourceRelativePath = parametersArtifactSourceRelativePath;
        this.parametersUri = parametersUri;
        this.templateArtifactSourceRelativePath = templateArtifactSourceRelativePath;
        this.templateUri = templateUri;
    }

    private ServiceUnitArtifactsArgs() {
        this.parametersArtifactSourceRelativePath = Input.empty();
        this.parametersUri = Input.empty();
        this.templateArtifactSourceRelativePath = Input.empty();
        this.templateUri = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceUnitArtifactsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> parametersArtifactSourceRelativePath;
        private @Nullable Input<String> parametersUri;
        private @Nullable Input<String> templateArtifactSourceRelativePath;
        private @Nullable Input<String> templateUri;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceUnitArtifactsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.parametersArtifactSourceRelativePath = defaults.parametersArtifactSourceRelativePath;
    	      this.parametersUri = defaults.parametersUri;
    	      this.templateArtifactSourceRelativePath = defaults.templateArtifactSourceRelativePath;
    	      this.templateUri = defaults.templateUri;
        }

        public Builder setParametersArtifactSourceRelativePath(@Nullable Input<String> parametersArtifactSourceRelativePath) {
            this.parametersArtifactSourceRelativePath = parametersArtifactSourceRelativePath;
            return this;
        }

        public Builder setParametersArtifactSourceRelativePath(@Nullable String parametersArtifactSourceRelativePath) {
            this.parametersArtifactSourceRelativePath = Input.ofNullable(parametersArtifactSourceRelativePath);
            return this;
        }

        public Builder setParametersUri(@Nullable Input<String> parametersUri) {
            this.parametersUri = parametersUri;
            return this;
        }

        public Builder setParametersUri(@Nullable String parametersUri) {
            this.parametersUri = Input.ofNullable(parametersUri);
            return this;
        }

        public Builder setTemplateArtifactSourceRelativePath(@Nullable Input<String> templateArtifactSourceRelativePath) {
            this.templateArtifactSourceRelativePath = templateArtifactSourceRelativePath;
            return this;
        }

        public Builder setTemplateArtifactSourceRelativePath(@Nullable String templateArtifactSourceRelativePath) {
            this.templateArtifactSourceRelativePath = Input.ofNullable(templateArtifactSourceRelativePath);
            return this;
        }

        public Builder setTemplateUri(@Nullable Input<String> templateUri) {
            this.templateUri = templateUri;
            return this;
        }

        public Builder setTemplateUri(@Nullable String templateUri) {
            this.templateUri = Input.ofNullable(templateUri);
            return this;
        }

        public ServiceUnitArtifactsArgs build() {
            return new ServiceUnitArtifactsArgs(parametersArtifactSourceRelativePath, parametersUri, templateArtifactSourceRelativePath, templateUri);
        }
    }
}
