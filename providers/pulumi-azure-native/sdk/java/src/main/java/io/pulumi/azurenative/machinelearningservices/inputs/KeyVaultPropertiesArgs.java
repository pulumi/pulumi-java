// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class KeyVaultPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final KeyVaultPropertiesArgs Empty = new KeyVaultPropertiesArgs();

    /**
     * For future use - The client id of the identity which will be used to access key vault.
     * 
     */
    @Import(name="identityClientId")
      private final @Nullable Output<String> identityClientId;

    public Output<String> getIdentityClientId() {
        return this.identityClientId == null ? Output.empty() : this.identityClientId;
    }

    /**
     * Key vault uri to access the encryption key.
     * 
     */
    @Import(name="keyIdentifier", required=true)
      private final Output<String> keyIdentifier;

    public Output<String> getKeyIdentifier() {
        return this.keyIdentifier;
    }

    /**
     * The ArmId of the keyVault where the customer owned encryption key is present.
     * 
     */
    @Import(name="keyVaultArmId", required=true)
      private final Output<String> keyVaultArmId;

    public Output<String> getKeyVaultArmId() {
        return this.keyVaultArmId;
    }

    public KeyVaultPropertiesArgs(
        @Nullable Output<String> identityClientId,
        Output<String> keyIdentifier,
        Output<String> keyVaultArmId) {
        this.identityClientId = identityClientId;
        this.keyIdentifier = Objects.requireNonNull(keyIdentifier, "expected parameter 'keyIdentifier' to be non-null");
        this.keyVaultArmId = Objects.requireNonNull(keyVaultArmId, "expected parameter 'keyVaultArmId' to be non-null");
    }

    private KeyVaultPropertiesArgs() {
        this.identityClientId = Output.empty();
        this.keyIdentifier = Output.empty();
        this.keyVaultArmId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyVaultPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> identityClientId;
        private Output<String> keyIdentifier;
        private Output<String> keyVaultArmId;

        public Builder() {
    	      // Empty
        }

        public Builder(KeyVaultPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identityClientId = defaults.identityClientId;
    	      this.keyIdentifier = defaults.keyIdentifier;
    	      this.keyVaultArmId = defaults.keyVaultArmId;
        }

        public Builder identityClientId(@Nullable Output<String> identityClientId) {
            this.identityClientId = identityClientId;
            return this;
        }

        public Builder identityClientId(@Nullable String identityClientId) {
            this.identityClientId = Output.ofNullable(identityClientId);
            return this;
        }

        public Builder keyIdentifier(Output<String> keyIdentifier) {
            this.keyIdentifier = Objects.requireNonNull(keyIdentifier);
            return this;
        }

        public Builder keyIdentifier(String keyIdentifier) {
            this.keyIdentifier = Output.of(Objects.requireNonNull(keyIdentifier));
            return this;
        }

        public Builder keyVaultArmId(Output<String> keyVaultArmId) {
            this.keyVaultArmId = Objects.requireNonNull(keyVaultArmId);
            return this;
        }

        public Builder keyVaultArmId(String keyVaultArmId) {
            this.keyVaultArmId = Output.of(Objects.requireNonNull(keyVaultArmId));
            return this;
        }
        public KeyVaultPropertiesArgs build() {
            return new KeyVaultPropertiesArgs(identityClientId, keyIdentifier, keyVaultArmId);
        }
    }
}
