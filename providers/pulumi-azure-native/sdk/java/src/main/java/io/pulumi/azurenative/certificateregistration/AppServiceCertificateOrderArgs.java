// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.certificateregistration;

import io.pulumi.azurenative.certificateregistration.enums.CertificateProductType;
import io.pulumi.azurenative.certificateregistration.inputs.AppServiceCertificateArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppServiceCertificateOrderArgs extends io.pulumi.resources.ResourceArgs {

    public static final AppServiceCertificateOrderArgs Empty = new AppServiceCertificateOrderArgs();

    @InputImport(name="autoRenew")
    private final @Nullable Input<Boolean> autoRenew;

    public Input<Boolean> getAutoRenew() {
        return this.autoRenew == null ? Input.empty() : this.autoRenew;
    }

    @InputImport(name="certificateOrderName")
    private final @Nullable Input<String> certificateOrderName;

    public Input<String> getCertificateOrderName() {
        return this.certificateOrderName == null ? Input.empty() : this.certificateOrderName;
    }

    @InputImport(name="certificates")
    private final @Nullable Input<Map<String,AppServiceCertificateArgs>> certificates;

    public Input<Map<String,AppServiceCertificateArgs>> getCertificates() {
        return this.certificates == null ? Input.empty() : this.certificates;
    }

    @InputImport(name="csr")
    private final @Nullable Input<String> csr;

    public Input<String> getCsr() {
        return this.csr == null ? Input.empty() : this.csr;
    }

    @InputImport(name="distinguishedName")
    private final @Nullable Input<String> distinguishedName;

    public Input<String> getDistinguishedName() {
        return this.distinguishedName == null ? Input.empty() : this.distinguishedName;
    }

    @InputImport(name="keySize")
    private final @Nullable Input<Integer> keySize;

    public Input<Integer> getKeySize() {
        return this.keySize == null ? Input.empty() : this.keySize;
    }

    @InputImport(name="kind")
    private final @Nullable Input<String> kind;

    public Input<String> getKind() {
        return this.kind == null ? Input.empty() : this.kind;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="productType", required=true)
    private final Input<CertificateProductType> productType;

    public Input<CertificateProductType> getProductType() {
        return this.productType;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="validityInYears")
    private final @Nullable Input<Integer> validityInYears;

    public Input<Integer> getValidityInYears() {
        return this.validityInYears == null ? Input.empty() : this.validityInYears;
    }

    public AppServiceCertificateOrderArgs(
        @Nullable Input<Boolean> autoRenew,
        @Nullable Input<String> certificateOrderName,
        @Nullable Input<Map<String,AppServiceCertificateArgs>> certificates,
        @Nullable Input<String> csr,
        @Nullable Input<String> distinguishedName,
        @Nullable Input<Integer> keySize,
        @Nullable Input<String> kind,
        @Nullable Input<String> location,
        Input<CertificateProductType> productType,
        Input<String> resourceGroupName,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Integer> validityInYears) {
        this.autoRenew = autoRenew == null ? Input.ofNullable(true) : autoRenew;
        this.certificateOrderName = certificateOrderName;
        this.certificates = certificates;
        this.csr = csr;
        this.distinguishedName = distinguishedName;
        this.keySize = keySize == null ? Input.ofNullable(2048) : keySize;
        this.kind = kind;
        this.location = location;
        this.productType = Objects.requireNonNull(productType, "expected parameter 'productType' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.validityInYears = validityInYears == null ? Input.ofNullable(1) : validityInYears;
    }

    private AppServiceCertificateOrderArgs() {
        this.autoRenew = Input.empty();
        this.certificateOrderName = Input.empty();
        this.certificates = Input.empty();
        this.csr = Input.empty();
        this.distinguishedName = Input.empty();
        this.keySize = Input.empty();
        this.kind = Input.empty();
        this.location = Input.empty();
        this.productType = Input.empty();
        this.resourceGroupName = Input.empty();
        this.tags = Input.empty();
        this.validityInYears = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppServiceCertificateOrderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> autoRenew;
        private @Nullable Input<String> certificateOrderName;
        private @Nullable Input<Map<String,AppServiceCertificateArgs>> certificates;
        private @Nullable Input<String> csr;
        private @Nullable Input<String> distinguishedName;
        private @Nullable Input<Integer> keySize;
        private @Nullable Input<String> kind;
        private @Nullable Input<String> location;
        private Input<CertificateProductType> productType;
        private Input<String> resourceGroupName;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Integer> validityInYears;

        public Builder() {
    	      // Empty
        }

        public Builder(AppServiceCertificateOrderArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRenew = defaults.autoRenew;
    	      this.certificateOrderName = defaults.certificateOrderName;
    	      this.certificates = defaults.certificates;
    	      this.csr = defaults.csr;
    	      this.distinguishedName = defaults.distinguishedName;
    	      this.keySize = defaults.keySize;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.productType = defaults.productType;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.validityInYears = defaults.validityInYears;
        }

        public Builder setAutoRenew(@Nullable Input<Boolean> autoRenew) {
            this.autoRenew = autoRenew;
            return this;
        }

        public Builder setAutoRenew(@Nullable Boolean autoRenew) {
            this.autoRenew = Input.ofNullable(autoRenew);
            return this;
        }

        public Builder setCertificateOrderName(@Nullable Input<String> certificateOrderName) {
            this.certificateOrderName = certificateOrderName;
            return this;
        }

        public Builder setCertificateOrderName(@Nullable String certificateOrderName) {
            this.certificateOrderName = Input.ofNullable(certificateOrderName);
            return this;
        }

        public Builder setCertificates(@Nullable Input<Map<String,AppServiceCertificateArgs>> certificates) {
            this.certificates = certificates;
            return this;
        }

        public Builder setCertificates(@Nullable Map<String,AppServiceCertificateArgs> certificates) {
            this.certificates = Input.ofNullable(certificates);
            return this;
        }

        public Builder setCsr(@Nullable Input<String> csr) {
            this.csr = csr;
            return this;
        }

        public Builder setCsr(@Nullable String csr) {
            this.csr = Input.ofNullable(csr);
            return this;
        }

        public Builder setDistinguishedName(@Nullable Input<String> distinguishedName) {
            this.distinguishedName = distinguishedName;
            return this;
        }

        public Builder setDistinguishedName(@Nullable String distinguishedName) {
            this.distinguishedName = Input.ofNullable(distinguishedName);
            return this;
        }

        public Builder setKeySize(@Nullable Input<Integer> keySize) {
            this.keySize = keySize;
            return this;
        }

        public Builder setKeySize(@Nullable Integer keySize) {
            this.keySize = Input.ofNullable(keySize);
            return this;
        }

        public Builder setKind(@Nullable Input<String> kind) {
            this.kind = kind;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = Input.ofNullable(kind);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setProductType(Input<CertificateProductType> productType) {
            this.productType = Objects.requireNonNull(productType);
            return this;
        }

        public Builder setProductType(CertificateProductType productType) {
            this.productType = Input.of(Objects.requireNonNull(productType));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setValidityInYears(@Nullable Input<Integer> validityInYears) {
            this.validityInYears = validityInYears;
            return this;
        }

        public Builder setValidityInYears(@Nullable Integer validityInYears) {
            this.validityInYears = Input.ofNullable(validityInYears);
            return this;
        }

        public AppServiceCertificateOrderArgs build() {
            return new AppServiceCertificateOrderArgs(autoRenew, certificateOrderName, certificates, csr, distinguishedName, keySize, kind, location, productType, resourceGroupName, tags, validityInYears);
        }
    }
}
