// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.quantum.outputs;

import io.pulumi.azurenative.quantum.outputs.ProviderResponse;
import io.pulumi.azurenative.quantum.outputs.QuantumWorkspaceResponseIdentity;
import io.pulumi.azurenative.quantum.outputs.SystemDataResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetWorkspaceResult {
    /**
     * The URI of the workspace endpoint.
     * 
     */
    private final String endpointUri;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    /**
     * Managed Identity information.
     * 
     */
    private final @Nullable QuantumWorkspaceResponseIdentity identity;
    /**
     * The geo-location where the resource lives
     * 
     */
    private final String location;
    /**
     * The name of the resource
     * 
     */
    private final String name;
    /**
     * List of Providers selected for this Workspace
     * 
     */
    private final @Nullable List<ProviderResponse> providers;
    /**
     * Provisioning status field
     * 
     */
    private final String provisioningState;
    /**
     * ARM Resource Id of the storage account associated with this workspace.
     * 
     */
    private final @Nullable String storageAccount;
    /**
     * System metadata
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
     */
    private final String type;
    /**
     * Whether the current workspace is ready to accept Jobs.
     * 
     */
    private final String usable;

    @OutputCustomType.Constructor({"endpointUri","id","identity","location","name","providers","provisioningState","storageAccount","systemData","tags","type","usable"})
    private GetWorkspaceResult(
        String endpointUri,
        String id,
        @Nullable QuantumWorkspaceResponseIdentity identity,
        String location,
        String name,
        @Nullable List<ProviderResponse> providers,
        String provisioningState,
        @Nullable String storageAccount,
        SystemDataResponse systemData,
        @Nullable Map<String,String> tags,
        String type,
        String usable) {
        this.endpointUri = endpointUri;
        this.id = id;
        this.identity = identity;
        this.location = location;
        this.name = name;
        this.providers = providers;
        this.provisioningState = provisioningState;
        this.storageAccount = storageAccount;
        this.systemData = systemData;
        this.tags = tags;
        this.type = type;
        this.usable = usable;
    }

    /**
     * The URI of the workspace endpoint.
     * 
    */
    public String getEndpointUri() {
        return this.endpointUri;
    }
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Managed Identity information.
     * 
    */
    public Optional<QuantumWorkspaceResponseIdentity> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * The geo-location where the resource lives
     * 
    */
    public String getLocation() {
        return this.location;
    }
    /**
     * The name of the resource
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * List of Providers selected for this Workspace
     * 
    */
    public List<ProviderResponse> getProviders() {
        return this.providers == null ? List.of() : this.providers;
    }
    /**
     * Provisioning status field
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * ARM Resource Id of the storage account associated with this workspace.
     * 
    */
    public Optional<String> getStorageAccount() {
        return Optional.ofNullable(this.storageAccount);
    }
    /**
     * System metadata
     * 
    */
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
    */
    public String getType() {
        return this.type;
    }
    /**
     * Whether the current workspace is ready to accept Jobs.
     * 
    */
    public String getUsable() {
        return this.usable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String endpointUri;
        private String id;
        private @Nullable QuantumWorkspaceResponseIdentity identity;
        private String location;
        private String name;
        private @Nullable List<ProviderResponse> providers;
        private String provisioningState;
        private @Nullable String storageAccount;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private String usable;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointUri = defaults.endpointUri;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.providers = defaults.providers;
    	      this.provisioningState = defaults.provisioningState;
    	      this.storageAccount = defaults.storageAccount;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.usable = defaults.usable;
        }

        public Builder setEndpointUri(String endpointUri) {
            this.endpointUri = Objects.requireNonNull(endpointUri);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable QuantumWorkspaceResponseIdentity identity) {
            this.identity = identity;
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProviders(@Nullable List<ProviderResponse> providers) {
            this.providers = providers;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setStorageAccount(@Nullable String storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUsable(String usable) {
            this.usable = Objects.requireNonNull(usable);
            return this;
        }
        public GetWorkspaceResult build() {
            return new GetWorkspaceResult(endpointUri, id, identity, location, name, providers, provisioningState, storageAccount, systemData, tags, type, usable);
        }
    }
}
