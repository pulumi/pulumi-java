// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class TunnelConnectionHealthResponse {
    /**
     * Virtual Network Gateway connection status.
     * 
     */
    private final String connectionStatus;
    /**
     * The Egress Bytes Transferred in this connection.
     * 
     */
    private final Double egressBytesTransferred;
    /**
     * The Ingress Bytes Transferred in this connection.
     * 
     */
    private final Double ingressBytesTransferred;
    /**
     * The time at which connection was established in Utc format.
     * 
     */
    private final String lastConnectionEstablishedUtcTime;
    /**
     * Tunnel name.
     * 
     */
    private final String tunnel;

    @CustomType.Constructor
    private TunnelConnectionHealthResponse(
        @CustomType.Parameter("connectionStatus") String connectionStatus,
        @CustomType.Parameter("egressBytesTransferred") Double egressBytesTransferred,
        @CustomType.Parameter("ingressBytesTransferred") Double ingressBytesTransferred,
        @CustomType.Parameter("lastConnectionEstablishedUtcTime") String lastConnectionEstablishedUtcTime,
        @CustomType.Parameter("tunnel") String tunnel) {
        this.connectionStatus = connectionStatus;
        this.egressBytesTransferred = egressBytesTransferred;
        this.ingressBytesTransferred = ingressBytesTransferred;
        this.lastConnectionEstablishedUtcTime = lastConnectionEstablishedUtcTime;
        this.tunnel = tunnel;
    }

    /**
     * Virtual Network Gateway connection status.
     * 
    */
    public String getConnectionStatus() {
        return this.connectionStatus;
    }
    /**
     * The Egress Bytes Transferred in this connection.
     * 
    */
    public Double getEgressBytesTransferred() {
        return this.egressBytesTransferred;
    }
    /**
     * The Ingress Bytes Transferred in this connection.
     * 
    */
    public Double getIngressBytesTransferred() {
        return this.ingressBytesTransferred;
    }
    /**
     * The time at which connection was established in Utc format.
     * 
    */
    public String getLastConnectionEstablishedUtcTime() {
        return this.lastConnectionEstablishedUtcTime;
    }
    /**
     * Tunnel name.
     * 
    */
    public String getTunnel() {
        return this.tunnel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TunnelConnectionHealthResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String connectionStatus;
        private Double egressBytesTransferred;
        private Double ingressBytesTransferred;
        private String lastConnectionEstablishedUtcTime;
        private String tunnel;

        public Builder() {
    	      // Empty
        }

        public Builder(TunnelConnectionHealthResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionStatus = defaults.connectionStatus;
    	      this.egressBytesTransferred = defaults.egressBytesTransferred;
    	      this.ingressBytesTransferred = defaults.ingressBytesTransferred;
    	      this.lastConnectionEstablishedUtcTime = defaults.lastConnectionEstablishedUtcTime;
    	      this.tunnel = defaults.tunnel;
        }

        public Builder connectionStatus(String connectionStatus) {
            this.connectionStatus = Objects.requireNonNull(connectionStatus);
            return this;
        }
        public Builder egressBytesTransferred(Double egressBytesTransferred) {
            this.egressBytesTransferred = Objects.requireNonNull(egressBytesTransferred);
            return this;
        }
        public Builder ingressBytesTransferred(Double ingressBytesTransferred) {
            this.ingressBytesTransferred = Objects.requireNonNull(ingressBytesTransferred);
            return this;
        }
        public Builder lastConnectionEstablishedUtcTime(String lastConnectionEstablishedUtcTime) {
            this.lastConnectionEstablishedUtcTime = Objects.requireNonNull(lastConnectionEstablishedUtcTime);
            return this;
        }
        public Builder tunnel(String tunnel) {
            this.tunnel = Objects.requireNonNull(tunnel);
            return this;
        }        public TunnelConnectionHealthResponse build() {
            return new TunnelConnectionHealthResponse(connectionStatus, egressBytesTransferred, ingressBytesTransferred, lastConnectionEstablishedUtcTime, tunnel);
        }
    }
}
