// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.inputs.AutoScaleSettingsResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.CodeConfigurationResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.DataPathAssetReferenceResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.IdAssetReferenceResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.ManualScaleSettingsResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.OnlineRequestSettingsResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.OutputPathAssetReferenceResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.ProbeSettingsResponse;
import io.pulumi.core.Either;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedOnlineDeploymentResponse extends io.pulumi.resources.InvokeArgs {

    public static final ManagedOnlineDeploymentResponse Empty = new ManagedOnlineDeploymentResponse();

    /**
     * If true, enables Application Insights logging.
     * 
     */
    @Import(name="appInsightsEnabled")
      private final @Nullable Boolean appInsightsEnabled;

    public Optional<Boolean> getAppInsightsEnabled() {
        return this.appInsightsEnabled == null ? Optional.empty() : Optional.ofNullable(this.appInsightsEnabled);
    }

    /**
     * Code configuration for the endpoint deployment.
     * 
     */
    @Import(name="codeConfiguration")
      private final @Nullable CodeConfigurationResponse codeConfiguration;

    public Optional<CodeConfigurationResponse> getCodeConfiguration() {
        return this.codeConfiguration == null ? Optional.empty() : Optional.ofNullable(this.codeConfiguration);
    }

    /**
     * Description of the endpoint deployment.
     * 
     */
    @Import(name="description")
      private final @Nullable String description;

    public Optional<String> getDescription() {
        return this.description == null ? Optional.empty() : Optional.ofNullable(this.description);
    }

    /**
     * Enum to determine endpoint compute type.
     * Expected value is 'Managed'.
     * 
     */
    @Import(name="endpointComputeType", required=true)
      private final String endpointComputeType;

    public String getEndpointComputeType() {
        return this.endpointComputeType;
    }

    /**
     * ARM resource ID of the environment specification for the endpoint deployment.
     * 
     */
    @Import(name="environmentId")
      private final @Nullable String environmentId;

    public Optional<String> getEnvironmentId() {
        return this.environmentId == null ? Optional.empty() : Optional.ofNullable(this.environmentId);
    }

    /**
     * Environment variables configuration for the deployment.
     * 
     */
    @Import(name="environmentVariables")
      private final @Nullable Map<String,String> environmentVariables;

    public Map<String,String> getEnvironmentVariables() {
        return this.environmentVariables == null ? Map.of() : this.environmentVariables;
    }

    /**
     * Compute instance type.
     * 
     */
    @Import(name="instanceType")
      private final @Nullable String instanceType;

    public Optional<String> getInstanceType() {
        return this.instanceType == null ? Optional.empty() : Optional.ofNullable(this.instanceType);
    }

    /**
     * Deployment container liveness/readiness probe configuration.
     * 
     */
    @Import(name="livenessProbe")
      private final @Nullable ProbeSettingsResponse livenessProbe;

    public Optional<ProbeSettingsResponse> getLivenessProbe() {
        return this.livenessProbe == null ? Optional.empty() : Optional.ofNullable(this.livenessProbe);
    }

    /**
     * Reference to the model asset for the endpoint deployment.
     * 
     */
    @Import(name="model")
      private final @Nullable Object model;

    public Object getModel() {
        return this.model == null ? null : this.model;
    }

    /**
     * Property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    @Import(name="properties")
      private final @Nullable Map<String,String> properties;

    public Map<String,String> getProperties() {
        return this.properties == null ? Map.of() : this.properties;
    }

    /**
     * Provisioning state for the endpoint deployment.
     * 
     */
    @Import(name="provisioningState", required=true)
      private final String provisioningState;

    public String getProvisioningState() {
        return this.provisioningState;
    }

    /**
     * Deployment container liveness/readiness probe configuration.
     * 
     */
    @Import(name="readinessProbe")
      private final @Nullable ProbeSettingsResponse readinessProbe;

    public Optional<ProbeSettingsResponse> getReadinessProbe() {
        return this.readinessProbe == null ? Optional.empty() : Optional.ofNullable(this.readinessProbe);
    }

    /**
     * Online deployment scoring requests configuration.
     * 
     */
    @Import(name="requestSettings")
      private final @Nullable OnlineRequestSettingsResponse requestSettings;

    public Optional<OnlineRequestSettingsResponse> getRequestSettings() {
        return this.requestSettings == null ? Optional.empty() : Optional.ofNullable(this.requestSettings);
    }

    /**
     * Online deployment scaling configuration.
     * 
     */
    @Import(name="scaleSettings")
      private final @Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings;

    public Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> getScaleSettings() {
        return this.scaleSettings == null ? null : this.scaleSettings;
    }

    public ManagedOnlineDeploymentResponse(
        @Nullable Boolean appInsightsEnabled,
        @Nullable CodeConfigurationResponse codeConfiguration,
        @Nullable String description,
        String endpointComputeType,
        @Nullable String environmentId,
        @Nullable Map<String,String> environmentVariables,
        @Nullable String instanceType,
        @Nullable ProbeSettingsResponse livenessProbe,
        @Nullable Object model,
        @Nullable Map<String,String> properties,
        String provisioningState,
        @Nullable ProbeSettingsResponse readinessProbe,
        @Nullable OnlineRequestSettingsResponse requestSettings,
        @Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings) {
        this.appInsightsEnabled = appInsightsEnabled;
        this.codeConfiguration = codeConfiguration;
        this.description = description;
        this.endpointComputeType = Objects.requireNonNull(endpointComputeType, "expected parameter 'endpointComputeType' to be non-null");
        this.environmentId = environmentId;
        this.environmentVariables = environmentVariables;
        this.instanceType = instanceType;
        this.livenessProbe = livenessProbe;
        this.model = model;
        this.properties = properties;
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.readinessProbe = readinessProbe;
        this.requestSettings = requestSettings;
        this.scaleSettings = scaleSettings;
    }

    private ManagedOnlineDeploymentResponse() {
        this.appInsightsEnabled = null;
        this.codeConfiguration = null;
        this.description = null;
        this.endpointComputeType = null;
        this.environmentId = null;
        this.environmentVariables = Map.of();
        this.instanceType = null;
        this.livenessProbe = null;
        this.model = null;
        this.properties = Map.of();
        this.provisioningState = null;
        this.readinessProbe = null;
        this.requestSettings = null;
        this.scaleSettings = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedOnlineDeploymentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean appInsightsEnabled;
        private @Nullable CodeConfigurationResponse codeConfiguration;
        private @Nullable String description;
        private String endpointComputeType;
        private @Nullable String environmentId;
        private @Nullable Map<String,String> environmentVariables;
        private @Nullable String instanceType;
        private @Nullable ProbeSettingsResponse livenessProbe;
        private @Nullable Object model;
        private @Nullable Map<String,String> properties;
        private String provisioningState;
        private @Nullable ProbeSettingsResponse readinessProbe;
        private @Nullable OnlineRequestSettingsResponse requestSettings;
        private @Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedOnlineDeploymentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appInsightsEnabled = defaults.appInsightsEnabled;
    	      this.codeConfiguration = defaults.codeConfiguration;
    	      this.description = defaults.description;
    	      this.endpointComputeType = defaults.endpointComputeType;
    	      this.environmentId = defaults.environmentId;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.instanceType = defaults.instanceType;
    	      this.livenessProbe = defaults.livenessProbe;
    	      this.model = defaults.model;
    	      this.properties = defaults.properties;
    	      this.provisioningState = defaults.provisioningState;
    	      this.readinessProbe = defaults.readinessProbe;
    	      this.requestSettings = defaults.requestSettings;
    	      this.scaleSettings = defaults.scaleSettings;
        }

        public Builder appInsightsEnabled(@Nullable Boolean appInsightsEnabled) {
            this.appInsightsEnabled = appInsightsEnabled;
            return this;
        }

        public Builder codeConfiguration(@Nullable CodeConfigurationResponse codeConfiguration) {
            this.codeConfiguration = codeConfiguration;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder endpointComputeType(String endpointComputeType) {
            this.endpointComputeType = Objects.requireNonNull(endpointComputeType);
            return this;
        }

        public Builder environmentId(@Nullable String environmentId) {
            this.environmentId = environmentId;
            return this;
        }

        public Builder environmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }

        public Builder instanceType(@Nullable String instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        public Builder livenessProbe(@Nullable ProbeSettingsResponse livenessProbe) {
            this.livenessProbe = livenessProbe;
            return this;
        }

        public Builder model(@Nullable Object model) {
            this.model = model;
            return this;
        }

        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder readinessProbe(@Nullable ProbeSettingsResponse readinessProbe) {
            this.readinessProbe = readinessProbe;
            return this;
        }

        public Builder requestSettings(@Nullable OnlineRequestSettingsResponse requestSettings) {
            this.requestSettings = requestSettings;
            return this;
        }

        public Builder scaleSettings(@Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings) {
            this.scaleSettings = scaleSettings;
            return this;
        }
        public ManagedOnlineDeploymentResponse build() {
            return new ManagedOnlineDeploymentResponse(appInsightsEnabled, codeConfiguration, description, endpointComputeType, environmentId, environmentVariables, instanceType, livenessProbe, model, properties, provisioningState, readinessProbe, requestSettings, scaleSettings);
        }
    }
}
