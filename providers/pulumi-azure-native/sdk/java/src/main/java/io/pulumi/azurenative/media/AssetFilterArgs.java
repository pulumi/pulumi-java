// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media;

import io.pulumi.azurenative.media.inputs.FilterTrackSelectionArgs;
import io.pulumi.azurenative.media.inputs.FirstQualityArgs;
import io.pulumi.azurenative.media.inputs.PresentationTimeRangeArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AssetFilterArgs extends io.pulumi.resources.ResourceArgs {

    public static final AssetFilterArgs Empty = new AssetFilterArgs();

    /**
     * The Media Services account name.
     * 
     */
    @Import(name="accountName", required=true)
      private final Output<String> accountName;

    public Output<String> getAccountName() {
        return this.accountName;
    }

    /**
     * The Asset name.
     * 
     */
    @Import(name="assetName", required=true)
      private final Output<String> assetName;

    public Output<String> getAssetName() {
        return this.assetName;
    }

    /**
     * The Asset Filter name
     * 
     */
    @Import(name="filterName")
      private final @Nullable Output<String> filterName;

    public Output<String> getFilterName() {
        return this.filterName == null ? Codegen.empty() : this.filterName;
    }

    /**
     * The first quality.
     * 
     */
    @Import(name="firstQuality")
      private final @Nullable Output<FirstQualityArgs> firstQuality;

    public Output<FirstQualityArgs> getFirstQuality() {
        return this.firstQuality == null ? Codegen.empty() : this.firstQuality;
    }

    /**
     * The presentation time range.
     * 
     */
    @Import(name="presentationTimeRange")
      private final @Nullable Output<PresentationTimeRangeArgs> presentationTimeRange;

    public Output<PresentationTimeRangeArgs> getPresentationTimeRange() {
        return this.presentationTimeRange == null ? Codegen.empty() : this.presentationTimeRange;
    }

    /**
     * The name of the resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The tracks selection conditions.
     * 
     */
    @Import(name="tracks")
      private final @Nullable Output<List<FilterTrackSelectionArgs>> tracks;

    public Output<List<FilterTrackSelectionArgs>> getTracks() {
        return this.tracks == null ? Codegen.empty() : this.tracks;
    }

    public AssetFilterArgs(
        Output<String> accountName,
        Output<String> assetName,
        @Nullable Output<String> filterName,
        @Nullable Output<FirstQualityArgs> firstQuality,
        @Nullable Output<PresentationTimeRangeArgs> presentationTimeRange,
        Output<String> resourceGroupName,
        @Nullable Output<List<FilterTrackSelectionArgs>> tracks) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.assetName = Objects.requireNonNull(assetName, "expected parameter 'assetName' to be non-null");
        this.filterName = filterName;
        this.firstQuality = firstQuality;
        this.presentationTimeRange = presentationTimeRange;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tracks = tracks;
    }

    private AssetFilterArgs() {
        this.accountName = Codegen.empty();
        this.assetName = Codegen.empty();
        this.filterName = Codegen.empty();
        this.firstQuality = Codegen.empty();
        this.presentationTimeRange = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tracks = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accountName;
        private Output<String> assetName;
        private @Nullable Output<String> filterName;
        private @Nullable Output<FirstQualityArgs> firstQuality;
        private @Nullable Output<PresentationTimeRangeArgs> presentationTimeRange;
        private Output<String> resourceGroupName;
        private @Nullable Output<List<FilterTrackSelectionArgs>> tracks;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetFilterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.assetName = defaults.assetName;
    	      this.filterName = defaults.filterName;
    	      this.firstQuality = defaults.firstQuality;
    	      this.presentationTimeRange = defaults.presentationTimeRange;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tracks = defaults.tracks;
        }

        public Builder accountName(Output<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }
        public Builder accountName(String accountName) {
            this.accountName = Output.of(Objects.requireNonNull(accountName));
            return this;
        }
        public Builder assetName(Output<String> assetName) {
            this.assetName = Objects.requireNonNull(assetName);
            return this;
        }
        public Builder assetName(String assetName) {
            this.assetName = Output.of(Objects.requireNonNull(assetName));
            return this;
        }
        public Builder filterName(@Nullable Output<String> filterName) {
            this.filterName = filterName;
            return this;
        }
        public Builder filterName(@Nullable String filterName) {
            this.filterName = Codegen.ofNullable(filterName);
            return this;
        }
        public Builder firstQuality(@Nullable Output<FirstQualityArgs> firstQuality) {
            this.firstQuality = firstQuality;
            return this;
        }
        public Builder firstQuality(@Nullable FirstQualityArgs firstQuality) {
            this.firstQuality = Codegen.ofNullable(firstQuality);
            return this;
        }
        public Builder presentationTimeRange(@Nullable Output<PresentationTimeRangeArgs> presentationTimeRange) {
            this.presentationTimeRange = presentationTimeRange;
            return this;
        }
        public Builder presentationTimeRange(@Nullable PresentationTimeRangeArgs presentationTimeRange) {
            this.presentationTimeRange = Codegen.ofNullable(presentationTimeRange);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tracks(@Nullable Output<List<FilterTrackSelectionArgs>> tracks) {
            this.tracks = tracks;
            return this;
        }
        public Builder tracks(@Nullable List<FilterTrackSelectionArgs> tracks) {
            this.tracks = Codegen.ofNullable(tracks);
            return this;
        }
        public Builder tracks(FilterTrackSelectionArgs... tracks) {
            return tracks(List.of(tracks));
        }        public AssetFilterArgs build() {
            return new AssetFilterArgs(accountName, assetName, filterName, firstQuality, presentationTimeRange, resourceGroupName, tracks);
        }
    }
}
