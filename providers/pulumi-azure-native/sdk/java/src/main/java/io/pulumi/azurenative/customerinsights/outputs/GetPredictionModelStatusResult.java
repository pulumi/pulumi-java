// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetPredictionModelStatusResult {
    private final String message;
    private final String modelVersion;
    private final String predictionGuidId;
    private final String predictionName;
    private final Integer signalsUsed;
    private final String status;
    private final String tenantId;
    private final Integer testSetCount;
    private final Integer trainingAccuracy;
    private final Integer trainingSetCount;
    private final Integer validationSetCount;

    @OutputCustomType.Constructor({"message","modelVersion","predictionGuidId","predictionName","signalsUsed","status","tenantId","testSetCount","trainingAccuracy","trainingSetCount","validationSetCount"})
    private GetPredictionModelStatusResult(
        String message,
        String modelVersion,
        String predictionGuidId,
        String predictionName,
        Integer signalsUsed,
        String status,
        String tenantId,
        Integer testSetCount,
        Integer trainingAccuracy,
        Integer trainingSetCount,
        Integer validationSetCount) {
        this.message = Objects.requireNonNull(message);
        this.modelVersion = Objects.requireNonNull(modelVersion);
        this.predictionGuidId = Objects.requireNonNull(predictionGuidId);
        this.predictionName = Objects.requireNonNull(predictionName);
        this.signalsUsed = Objects.requireNonNull(signalsUsed);
        this.status = Objects.requireNonNull(status);
        this.tenantId = Objects.requireNonNull(tenantId);
        this.testSetCount = Objects.requireNonNull(testSetCount);
        this.trainingAccuracy = Objects.requireNonNull(trainingAccuracy);
        this.trainingSetCount = Objects.requireNonNull(trainingSetCount);
        this.validationSetCount = Objects.requireNonNull(validationSetCount);
    }

    public String getMessage() {
        return this.message;
    }
    public String getModelVersion() {
        return this.modelVersion;
    }
    public String getPredictionGuidId() {
        return this.predictionGuidId;
    }
    public String getPredictionName() {
        return this.predictionName;
    }
    public Integer getSignalsUsed() {
        return this.signalsUsed;
    }
    public String getStatus() {
        return this.status;
    }
    public String getTenantId() {
        return this.tenantId;
    }
    public Integer getTestSetCount() {
        return this.testSetCount;
    }
    public Integer getTrainingAccuracy() {
        return this.trainingAccuracy;
    }
    public Integer getTrainingSetCount() {
        return this.trainingSetCount;
    }
    public Integer getValidationSetCount() {
        return this.validationSetCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPredictionModelStatusResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String message;
        private String modelVersion;
        private String predictionGuidId;
        private String predictionName;
        private Integer signalsUsed;
        private String status;
        private String tenantId;
        private Integer testSetCount;
        private Integer trainingAccuracy;
        private Integer trainingSetCount;
        private Integer validationSetCount;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPredictionModelStatusResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.message = defaults.message;
    	      this.modelVersion = defaults.modelVersion;
    	      this.predictionGuidId = defaults.predictionGuidId;
    	      this.predictionName = defaults.predictionName;
    	      this.signalsUsed = defaults.signalsUsed;
    	      this.status = defaults.status;
    	      this.tenantId = defaults.tenantId;
    	      this.testSetCount = defaults.testSetCount;
    	      this.trainingAccuracy = defaults.trainingAccuracy;
    	      this.trainingSetCount = defaults.trainingSetCount;
    	      this.validationSetCount = defaults.validationSetCount;
        }

        public Builder setMessage(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }

        public Builder setModelVersion(String modelVersion) {
            this.modelVersion = Objects.requireNonNull(modelVersion);
            return this;
        }

        public Builder setPredictionGuidId(String predictionGuidId) {
            this.predictionGuidId = Objects.requireNonNull(predictionGuidId);
            return this;
        }

        public Builder setPredictionName(String predictionName) {
            this.predictionName = Objects.requireNonNull(predictionName);
            return this;
        }

        public Builder setSignalsUsed(Integer signalsUsed) {
            this.signalsUsed = Objects.requireNonNull(signalsUsed);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setTenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }

        public Builder setTestSetCount(Integer testSetCount) {
            this.testSetCount = Objects.requireNonNull(testSetCount);
            return this;
        }

        public Builder setTrainingAccuracy(Integer trainingAccuracy) {
            this.trainingAccuracy = Objects.requireNonNull(trainingAccuracy);
            return this;
        }

        public Builder setTrainingSetCount(Integer trainingSetCount) {
            this.trainingSetCount = Objects.requireNonNull(trainingSetCount);
            return this;
        }

        public Builder setValidationSetCount(Integer validationSetCount) {
            this.validationSetCount = Objects.requireNonNull(validationSetCount);
            return this;
        }

        public GetPredictionModelStatusResult build() {
            return new GetPredictionModelStatusResult(message, modelVersion, predictionGuidId, predictionName, signalsUsed, status, tenantId, testSetCount, trainingAccuracy, trainingSetCount, validationSetCount);
        }
    }
}
