// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.managednetwork.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class GetScopeAssignmentArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetScopeAssignmentArgs Empty = new GetScopeAssignmentArgs();

    /**
     * The base resource of the scope assignment.
     * 
     */
    @InputImport(name="scope", required=true)
      private final String scope;

    public String getScope() {
        return this.scope;
    }

    /**
     * The name of the scope assignment to get.
     * 
     */
    @InputImport(name="scopeAssignmentName", required=true)
      private final String scopeAssignmentName;

    public String getScopeAssignmentName() {
        return this.scopeAssignmentName;
    }

    public GetScopeAssignmentArgs(
        String scope,
        String scopeAssignmentName) {
        this.scope = Objects.requireNonNull(scope, "expected parameter 'scope' to be non-null");
        this.scopeAssignmentName = Objects.requireNonNull(scopeAssignmentName, "expected parameter 'scopeAssignmentName' to be non-null");
    }

    private GetScopeAssignmentArgs() {
        this.scope = null;
        this.scopeAssignmentName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScopeAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String scope;
        private String scopeAssignmentName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetScopeAssignmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scope = defaults.scope;
    	      this.scopeAssignmentName = defaults.scopeAssignmentName;
        }

        public Builder setScope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }

        public Builder setScopeAssignmentName(String scopeAssignmentName) {
            this.scopeAssignmentName = Objects.requireNonNull(scopeAssignmentName);
            return this;
        }
        public GetScopeAssignmentArgs build() {
            return new GetScopeAssignmentArgs(scope, scopeAssignmentName);
        }
    }
}
