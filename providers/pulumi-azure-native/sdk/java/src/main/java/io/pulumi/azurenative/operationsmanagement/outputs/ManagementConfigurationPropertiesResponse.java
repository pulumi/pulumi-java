// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.operationsmanagement.outputs;

import io.pulumi.azurenative.operationsmanagement.outputs.ArmTemplateParameterResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagementConfigurationPropertiesResponse {
    /**
     * The applicationId of the appliance for this Management.
     * 
     */
    private final @Nullable String applicationId;
    /**
     * Parameters to run the ARM template
     * 
     */
    private final List<ArmTemplateParameterResponse> parameters;
    /**
     * The type of the parent resource.
     * 
     */
    private final String parentResourceType;
    /**
     * The provisioning state for the ManagementConfiguration.
     * 
     */
    private final String provisioningState;
    /**
     * The Json object containing the ARM template to deploy
     * 
     */
    private final Object template;

    @CustomType.Constructor
    private ManagementConfigurationPropertiesResponse(
        @CustomType.Parameter("applicationId") @Nullable String applicationId,
        @CustomType.Parameter("parameters") List<ArmTemplateParameterResponse> parameters,
        @CustomType.Parameter("parentResourceType") String parentResourceType,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("template") Object template) {
        this.applicationId = applicationId;
        this.parameters = parameters;
        this.parentResourceType = parentResourceType;
        this.provisioningState = provisioningState;
        this.template = template;
    }

    /**
     * The applicationId of the appliance for this Management.
     * 
    */
    public Optional<String> getApplicationId() {
        return Optional.ofNullable(this.applicationId);
    }
    /**
     * Parameters to run the ARM template
     * 
    */
    public List<ArmTemplateParameterResponse> getParameters() {
        return this.parameters;
    }
    /**
     * The type of the parent resource.
     * 
    */
    public String getParentResourceType() {
        return this.parentResourceType;
    }
    /**
     * The provisioning state for the ManagementConfiguration.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The Json object containing the ARM template to deploy
     * 
    */
    public Object getTemplate() {
        return this.template;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagementConfigurationPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String applicationId;
        private List<ArmTemplateParameterResponse> parameters;
        private String parentResourceType;
        private String provisioningState;
        private Object template;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagementConfigurationPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.parameters = defaults.parameters;
    	      this.parentResourceType = defaults.parentResourceType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.template = defaults.template;
        }

        public Builder applicationId(@Nullable String applicationId) {
            this.applicationId = applicationId;
            return this;
        }

        public Builder parameters(List<ArmTemplateParameterResponse> parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }

        public Builder parentResourceType(String parentResourceType) {
            this.parentResourceType = Objects.requireNonNull(parentResourceType);
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder template(Object template) {
            this.template = Objects.requireNonNull(template);
            return this;
        }
        public ManagementConfigurationPropertiesResponse build() {
            return new ManagementConfigurationPropertiesResponse(applicationId, parameters, parentResourceType, provisioningState, template);
        }
    }
}
