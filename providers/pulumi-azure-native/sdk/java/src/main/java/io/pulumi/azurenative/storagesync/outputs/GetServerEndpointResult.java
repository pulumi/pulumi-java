// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagesync.outputs;

import io.pulumi.azurenative.storagesync.outputs.ServerEndpointCloudTieringStatusResponse;
import io.pulumi.azurenative.storagesync.outputs.ServerEndpointRecallStatusResponse;
import io.pulumi.azurenative.storagesync.outputs.ServerEndpointSyncStatusResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetServerEndpointResult {
    private final @Nullable String cloudTiering;
    private final ServerEndpointCloudTieringStatusResponse cloudTieringStatus;
    private final @Nullable String friendlyName;
    private final String id;
    private final @Nullable String initialDownloadPolicy;
    private final String lastOperationName;
    private final String lastWorkflowId;
    private final @Nullable String localCacheMode;
    private final String name;
    private final @Nullable String offlineDataTransfer;
    private final @Nullable String offlineDataTransferShareName;
    private final String offlineDataTransferStorageAccountResourceId;
    private final String offlineDataTransferStorageAccountTenantId;
    private final String provisioningState;
    private final ServerEndpointRecallStatusResponse recallStatus;
    private final @Nullable String serverLocalPath;
    private final @Nullable String serverResourceId;
    private final ServerEndpointSyncStatusResponse syncStatus;
    private final @Nullable Integer tierFilesOlderThanDays;
    private final String type;
    private final @Nullable Integer volumeFreeSpacePercent;

    @OutputCustomType.Constructor({"cloudTiering","cloudTieringStatus","friendlyName","id","initialDownloadPolicy","lastOperationName","lastWorkflowId","localCacheMode","name","offlineDataTransfer","offlineDataTransferShareName","offlineDataTransferStorageAccountResourceId","offlineDataTransferStorageAccountTenantId","provisioningState","recallStatus","serverLocalPath","serverResourceId","syncStatus","tierFilesOlderThanDays","type","volumeFreeSpacePercent"})
    private GetServerEndpointResult(
        @Nullable String cloudTiering,
        ServerEndpointCloudTieringStatusResponse cloudTieringStatus,
        @Nullable String friendlyName,
        String id,
        @Nullable String initialDownloadPolicy,
        String lastOperationName,
        String lastWorkflowId,
        @Nullable String localCacheMode,
        String name,
        @Nullable String offlineDataTransfer,
        @Nullable String offlineDataTransferShareName,
        String offlineDataTransferStorageAccountResourceId,
        String offlineDataTransferStorageAccountTenantId,
        String provisioningState,
        ServerEndpointRecallStatusResponse recallStatus,
        @Nullable String serverLocalPath,
        @Nullable String serverResourceId,
        ServerEndpointSyncStatusResponse syncStatus,
        @Nullable Integer tierFilesOlderThanDays,
        String type,
        @Nullable Integer volumeFreeSpacePercent) {
        this.cloudTiering = cloudTiering;
        this.cloudTieringStatus = Objects.requireNonNull(cloudTieringStatus);
        this.friendlyName = friendlyName;
        this.id = Objects.requireNonNull(id);
        this.initialDownloadPolicy = initialDownloadPolicy;
        this.lastOperationName = Objects.requireNonNull(lastOperationName);
        this.lastWorkflowId = Objects.requireNonNull(lastWorkflowId);
        this.localCacheMode = localCacheMode;
        this.name = Objects.requireNonNull(name);
        this.offlineDataTransfer = offlineDataTransfer;
        this.offlineDataTransferShareName = offlineDataTransferShareName;
        this.offlineDataTransferStorageAccountResourceId = Objects.requireNonNull(offlineDataTransferStorageAccountResourceId);
        this.offlineDataTransferStorageAccountTenantId = Objects.requireNonNull(offlineDataTransferStorageAccountTenantId);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.recallStatus = Objects.requireNonNull(recallStatus);
        this.serverLocalPath = serverLocalPath;
        this.serverResourceId = serverResourceId;
        this.syncStatus = Objects.requireNonNull(syncStatus);
        this.tierFilesOlderThanDays = tierFilesOlderThanDays;
        this.type = Objects.requireNonNull(type);
        this.volumeFreeSpacePercent = volumeFreeSpacePercent;
    }

    public Optional<String> getCloudTiering() {
        return Optional.ofNullable(this.cloudTiering);
    }
    public ServerEndpointCloudTieringStatusResponse getCloudTieringStatus() {
        return this.cloudTieringStatus;
    }
    public Optional<String> getFriendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }
    public String getId() {
        return this.id;
    }
    public Optional<String> getInitialDownloadPolicy() {
        return Optional.ofNullable(this.initialDownloadPolicy);
    }
    public String getLastOperationName() {
        return this.lastOperationName;
    }
    public String getLastWorkflowId() {
        return this.lastWorkflowId;
    }
    public Optional<String> getLocalCacheMode() {
        return Optional.ofNullable(this.localCacheMode);
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getOfflineDataTransfer() {
        return Optional.ofNullable(this.offlineDataTransfer);
    }
    public Optional<String> getOfflineDataTransferShareName() {
        return Optional.ofNullable(this.offlineDataTransferShareName);
    }
    public String getOfflineDataTransferStorageAccountResourceId() {
        return this.offlineDataTransferStorageAccountResourceId;
    }
    public String getOfflineDataTransferStorageAccountTenantId() {
        return this.offlineDataTransferStorageAccountTenantId;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public ServerEndpointRecallStatusResponse getRecallStatus() {
        return this.recallStatus;
    }
    public Optional<String> getServerLocalPath() {
        return Optional.ofNullable(this.serverLocalPath);
    }
    public Optional<String> getServerResourceId() {
        return Optional.ofNullable(this.serverResourceId);
    }
    public ServerEndpointSyncStatusResponse getSyncStatus() {
        return this.syncStatus;
    }
    public Optional<Integer> getTierFilesOlderThanDays() {
        return Optional.ofNullable(this.tierFilesOlderThanDays);
    }
    public String getType() {
        return this.type;
    }
    public Optional<Integer> getVolumeFreeSpacePercent() {
        return Optional.ofNullable(this.volumeFreeSpacePercent);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerEndpointResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cloudTiering;
        private ServerEndpointCloudTieringStatusResponse cloudTieringStatus;
        private @Nullable String friendlyName;
        private String id;
        private @Nullable String initialDownloadPolicy;
        private String lastOperationName;
        private String lastWorkflowId;
        private @Nullable String localCacheMode;
        private String name;
        private @Nullable String offlineDataTransfer;
        private @Nullable String offlineDataTransferShareName;
        private String offlineDataTransferStorageAccountResourceId;
        private String offlineDataTransferStorageAccountTenantId;
        private String provisioningState;
        private ServerEndpointRecallStatusResponse recallStatus;
        private @Nullable String serverLocalPath;
        private @Nullable String serverResourceId;
        private ServerEndpointSyncStatusResponse syncStatus;
        private @Nullable Integer tierFilesOlderThanDays;
        private String type;
        private @Nullable Integer volumeFreeSpacePercent;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServerEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudTiering = defaults.cloudTiering;
    	      this.cloudTieringStatus = defaults.cloudTieringStatus;
    	      this.friendlyName = defaults.friendlyName;
    	      this.id = defaults.id;
    	      this.initialDownloadPolicy = defaults.initialDownloadPolicy;
    	      this.lastOperationName = defaults.lastOperationName;
    	      this.lastWorkflowId = defaults.lastWorkflowId;
    	      this.localCacheMode = defaults.localCacheMode;
    	      this.name = defaults.name;
    	      this.offlineDataTransfer = defaults.offlineDataTransfer;
    	      this.offlineDataTransferShareName = defaults.offlineDataTransferShareName;
    	      this.offlineDataTransferStorageAccountResourceId = defaults.offlineDataTransferStorageAccountResourceId;
    	      this.offlineDataTransferStorageAccountTenantId = defaults.offlineDataTransferStorageAccountTenantId;
    	      this.provisioningState = defaults.provisioningState;
    	      this.recallStatus = defaults.recallStatus;
    	      this.serverLocalPath = defaults.serverLocalPath;
    	      this.serverResourceId = defaults.serverResourceId;
    	      this.syncStatus = defaults.syncStatus;
    	      this.tierFilesOlderThanDays = defaults.tierFilesOlderThanDays;
    	      this.type = defaults.type;
    	      this.volumeFreeSpacePercent = defaults.volumeFreeSpacePercent;
        }

        public Builder setCloudTiering(@Nullable String cloudTiering) {
            this.cloudTiering = cloudTiering;
            return this;
        }

        public Builder setCloudTieringStatus(ServerEndpointCloudTieringStatusResponse cloudTieringStatus) {
            this.cloudTieringStatus = Objects.requireNonNull(cloudTieringStatus);
            return this;
        }

        public Builder setFriendlyName(@Nullable String friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInitialDownloadPolicy(@Nullable String initialDownloadPolicy) {
            this.initialDownloadPolicy = initialDownloadPolicy;
            return this;
        }

        public Builder setLastOperationName(String lastOperationName) {
            this.lastOperationName = Objects.requireNonNull(lastOperationName);
            return this;
        }

        public Builder setLastWorkflowId(String lastWorkflowId) {
            this.lastWorkflowId = Objects.requireNonNull(lastWorkflowId);
            return this;
        }

        public Builder setLocalCacheMode(@Nullable String localCacheMode) {
            this.localCacheMode = localCacheMode;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOfflineDataTransfer(@Nullable String offlineDataTransfer) {
            this.offlineDataTransfer = offlineDataTransfer;
            return this;
        }

        public Builder setOfflineDataTransferShareName(@Nullable String offlineDataTransferShareName) {
            this.offlineDataTransferShareName = offlineDataTransferShareName;
            return this;
        }

        public Builder setOfflineDataTransferStorageAccountResourceId(String offlineDataTransferStorageAccountResourceId) {
            this.offlineDataTransferStorageAccountResourceId = Objects.requireNonNull(offlineDataTransferStorageAccountResourceId);
            return this;
        }

        public Builder setOfflineDataTransferStorageAccountTenantId(String offlineDataTransferStorageAccountTenantId) {
            this.offlineDataTransferStorageAccountTenantId = Objects.requireNonNull(offlineDataTransferStorageAccountTenantId);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRecallStatus(ServerEndpointRecallStatusResponse recallStatus) {
            this.recallStatus = Objects.requireNonNull(recallStatus);
            return this;
        }

        public Builder setServerLocalPath(@Nullable String serverLocalPath) {
            this.serverLocalPath = serverLocalPath;
            return this;
        }

        public Builder setServerResourceId(@Nullable String serverResourceId) {
            this.serverResourceId = serverResourceId;
            return this;
        }

        public Builder setSyncStatus(ServerEndpointSyncStatusResponse syncStatus) {
            this.syncStatus = Objects.requireNonNull(syncStatus);
            return this;
        }

        public Builder setTierFilesOlderThanDays(@Nullable Integer tierFilesOlderThanDays) {
            this.tierFilesOlderThanDays = tierFilesOlderThanDays;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVolumeFreeSpacePercent(@Nullable Integer volumeFreeSpacePercent) {
            this.volumeFreeSpacePercent = volumeFreeSpacePercent;
            return this;
        }

        public GetServerEndpointResult build() {
            return new GetServerEndpointResult(cloudTiering, cloudTieringStatus, friendlyName, id, initialDownloadPolicy, lastOperationName, lastWorkflowId, localCacheMode, name, offlineDataTransfer, offlineDataTransferShareName, offlineDataTransferStorageAccountResourceId, offlineDataTransferStorageAccountTenantId, provisioningState, recallStatus, serverLocalPath, serverResourceId, syncStatus, tierFilesOlderThanDays, type, volumeFreeSpacePercent);
        }
    }
}
