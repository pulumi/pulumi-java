// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagecache.inputs;

import io.pulumi.azurenative.storagecache.inputs.CacheActiveDirectorySettingsArgs;
import io.pulumi.azurenative.storagecache.inputs.CacheUsernameDownloadSettingsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Cache Directory Services settings.
 * 
 */
public final class CacheDirectorySettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final CacheDirectorySettingsArgs Empty = new CacheDirectorySettingsArgs();

    /**
     * Specifies settings for joining the HPC Cache to an Active Directory domain.
     * 
     */
    @InputImport(name="activeDirectory")
      private final @Nullable Input<CacheActiveDirectorySettingsArgs> activeDirectory;

    public Input<CacheActiveDirectorySettingsArgs> getActiveDirectory() {
        return this.activeDirectory == null ? Input.empty() : this.activeDirectory;
    }

    /**
     * Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.
     * 
     */
    @InputImport(name="usernameDownload")
      private final @Nullable Input<CacheUsernameDownloadSettingsArgs> usernameDownload;

    public Input<CacheUsernameDownloadSettingsArgs> getUsernameDownload() {
        return this.usernameDownload == null ? Input.empty() : this.usernameDownload;
    }

    public CacheDirectorySettingsArgs(
        @Nullable Input<CacheActiveDirectorySettingsArgs> activeDirectory,
        @Nullable Input<CacheUsernameDownloadSettingsArgs> usernameDownload) {
        this.activeDirectory = activeDirectory;
        this.usernameDownload = usernameDownload;
    }

    private CacheDirectorySettingsArgs() {
        this.activeDirectory = Input.empty();
        this.usernameDownload = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CacheDirectorySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<CacheActiveDirectorySettingsArgs> activeDirectory;
        private @Nullable Input<CacheUsernameDownloadSettingsArgs> usernameDownload;

        public Builder() {
    	      // Empty
        }

        public Builder(CacheDirectorySettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectory = defaults.activeDirectory;
    	      this.usernameDownload = defaults.usernameDownload;
        }

        public Builder setActiveDirectory(@Nullable Input<CacheActiveDirectorySettingsArgs> activeDirectory) {
            this.activeDirectory = activeDirectory;
            return this;
        }

        public Builder setActiveDirectory(@Nullable CacheActiveDirectorySettingsArgs activeDirectory) {
            this.activeDirectory = Input.ofNullable(activeDirectory);
            return this;
        }

        public Builder setUsernameDownload(@Nullable Input<CacheUsernameDownloadSettingsArgs> usernameDownload) {
            this.usernameDownload = usernameDownload;
            return this;
        }

        public Builder setUsernameDownload(@Nullable CacheUsernameDownloadSettingsArgs usernameDownload) {
            this.usernameDownload = Input.ofNullable(usernameDownload);
            return this;
        }
        public CacheDirectorySettingsArgs build() {
            return new CacheDirectorySettingsArgs(activeDirectory, usernameDownload);
        }
    }
}
