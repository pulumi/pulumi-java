// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class LocationResponse {
    private final String documentEndpoint;
    private final @Nullable Integer failoverPriority;
    private final String id;
    private final @Nullable Boolean isZoneRedundant;
    private final @Nullable String locationName;
    private final String provisioningState;

    @OutputCustomType.Constructor({"documentEndpoint","failoverPriority","id","isZoneRedundant","locationName","provisioningState"})
    private LocationResponse(
        String documentEndpoint,
        @Nullable Integer failoverPriority,
        String id,
        @Nullable Boolean isZoneRedundant,
        @Nullable String locationName,
        String provisioningState) {
        this.documentEndpoint = Objects.requireNonNull(documentEndpoint);
        this.failoverPriority = failoverPriority;
        this.id = Objects.requireNonNull(id);
        this.isZoneRedundant = isZoneRedundant;
        this.locationName = locationName;
        this.provisioningState = Objects.requireNonNull(provisioningState);
    }

    public String getDocumentEndpoint() {
        return this.documentEndpoint;
    }
    public Optional<Integer> getFailoverPriority() {
        return Optional.ofNullable(this.failoverPriority);
    }
    public String getId() {
        return this.id;
    }
    public Optional<Boolean> getIsZoneRedundant() {
        return Optional.ofNullable(this.isZoneRedundant);
    }
    public Optional<String> getLocationName() {
        return Optional.ofNullable(this.locationName);
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LocationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String documentEndpoint;
        private @Nullable Integer failoverPriority;
        private String id;
        private @Nullable Boolean isZoneRedundant;
        private @Nullable String locationName;
        private String provisioningState;

        public Builder() {
    	      // Empty
        }

        public Builder(LocationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.documentEndpoint = defaults.documentEndpoint;
    	      this.failoverPriority = defaults.failoverPriority;
    	      this.id = defaults.id;
    	      this.isZoneRedundant = defaults.isZoneRedundant;
    	      this.locationName = defaults.locationName;
    	      this.provisioningState = defaults.provisioningState;
        }

        public Builder setDocumentEndpoint(String documentEndpoint) {
            this.documentEndpoint = Objects.requireNonNull(documentEndpoint);
            return this;
        }

        public Builder setFailoverPriority(@Nullable Integer failoverPriority) {
            this.failoverPriority = failoverPriority;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIsZoneRedundant(@Nullable Boolean isZoneRedundant) {
            this.isZoneRedundant = isZoneRedundant;
            return this;
        }

        public Builder setLocationName(@Nullable String locationName) {
            this.locationName = locationName;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public LocationResponse build() {
            return new LocationResponse(documentEndpoint, failoverPriority, id, isZoneRedundant, locationName, provisioningState);
        }
    }
}
