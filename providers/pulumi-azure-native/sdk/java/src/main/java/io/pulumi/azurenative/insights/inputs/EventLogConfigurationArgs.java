// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EventLogConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final EventLogConfigurationArgs Empty = new EventLogConfigurationArgs();

    @InputImport(name="filter")
        private final @Nullable Input<String> filter;

    public Input<String> getFilter() {
        return this.filter == null ? Input.empty() : this.filter;
    }

    @InputImport(name="logName", required=true)
        private final Input<String> logName;

    public Input<String> getLogName() {
        return this.logName;
    }

    public EventLogConfigurationArgs(
        @Nullable Input<String> filter,
        Input<String> logName) {
        this.filter = filter;
        this.logName = Objects.requireNonNull(logName, "expected parameter 'logName' to be non-null");
    }

    private EventLogConfigurationArgs() {
        this.filter = Input.empty();
        this.logName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventLogConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> filter;
        private Input<String> logName;

        public Builder() {
    	      // Empty
        }

        public Builder(EventLogConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.logName = defaults.logName;
        }

        public Builder setFilter(@Nullable Input<String> filter) {
            this.filter = filter;
            return this;
        }

        public Builder setFilter(@Nullable String filter) {
            this.filter = Input.ofNullable(filter);
            return this;
        }

        public Builder setLogName(Input<String> logName) {
            this.logName = Objects.requireNonNull(logName);
            return this;
        }

        public Builder setLogName(String logName) {
            this.logName = Input.of(Objects.requireNonNull(logName));
            return this;
        }
        public EventLogConfigurationArgs build() {
            return new EventLogConfigurationArgs(filter, logName);
        }
    }
}
