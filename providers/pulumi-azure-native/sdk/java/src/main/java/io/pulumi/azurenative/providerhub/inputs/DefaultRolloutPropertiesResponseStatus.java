// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.providerhub.inputs;

import io.pulumi.azurenative.providerhub.inputs.ExtendedErrorInfoResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefaultRolloutPropertiesResponseStatus extends io.pulumi.resources.InvokeArgs {

    public static final DefaultRolloutPropertiesResponseStatus Empty = new DefaultRolloutPropertiesResponseStatus();

    @InputImport(name="completedRegions")
      private final @Nullable List<String> completedRegions;

    public List<String> getCompletedRegions() {
        return this.completedRegions == null ? List.of() : this.completedRegions;
    }

    @InputImport(name="failedOrSkippedRegions")
      private final @Nullable Map<String,ExtendedErrorInfoResponse> failedOrSkippedRegions;

    public Map<String,ExtendedErrorInfoResponse> getFailedOrSkippedRegions() {
        return this.failedOrSkippedRegions == null ? Map.of() : this.failedOrSkippedRegions;
    }

    @InputImport(name="nextTrafficRegion")
      private final @Nullable String nextTrafficRegion;

    public Optional<String> getNextTrafficRegion() {
        return this.nextTrafficRegion == null ? Optional.empty() : Optional.ofNullable(this.nextTrafficRegion);
    }

    @InputImport(name="nextTrafficRegionScheduledTime")
      private final @Nullable String nextTrafficRegionScheduledTime;

    public Optional<String> getNextTrafficRegionScheduledTime() {
        return this.nextTrafficRegionScheduledTime == null ? Optional.empty() : Optional.ofNullable(this.nextTrafficRegionScheduledTime);
    }

    @InputImport(name="subscriptionReregistrationResult")
      private final @Nullable String subscriptionReregistrationResult;

    public Optional<String> getSubscriptionReregistrationResult() {
        return this.subscriptionReregistrationResult == null ? Optional.empty() : Optional.ofNullable(this.subscriptionReregistrationResult);
    }

    public DefaultRolloutPropertiesResponseStatus(
        @Nullable List<String> completedRegions,
        @Nullable Map<String,ExtendedErrorInfoResponse> failedOrSkippedRegions,
        @Nullable String nextTrafficRegion,
        @Nullable String nextTrafficRegionScheduledTime,
        @Nullable String subscriptionReregistrationResult) {
        this.completedRegions = completedRegions;
        this.failedOrSkippedRegions = failedOrSkippedRegions;
        this.nextTrafficRegion = nextTrafficRegion;
        this.nextTrafficRegionScheduledTime = nextTrafficRegionScheduledTime;
        this.subscriptionReregistrationResult = subscriptionReregistrationResult;
    }

    private DefaultRolloutPropertiesResponseStatus() {
        this.completedRegions = List.of();
        this.failedOrSkippedRegions = Map.of();
        this.nextTrafficRegion = null;
        this.nextTrafficRegionScheduledTime = null;
        this.subscriptionReregistrationResult = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DefaultRolloutPropertiesResponseStatus defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> completedRegions;
        private @Nullable Map<String,ExtendedErrorInfoResponse> failedOrSkippedRegions;
        private @Nullable String nextTrafficRegion;
        private @Nullable String nextTrafficRegionScheduledTime;
        private @Nullable String subscriptionReregistrationResult;

        public Builder() {
    	      // Empty
        }

        public Builder(DefaultRolloutPropertiesResponseStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.completedRegions = defaults.completedRegions;
    	      this.failedOrSkippedRegions = defaults.failedOrSkippedRegions;
    	      this.nextTrafficRegion = defaults.nextTrafficRegion;
    	      this.nextTrafficRegionScheduledTime = defaults.nextTrafficRegionScheduledTime;
    	      this.subscriptionReregistrationResult = defaults.subscriptionReregistrationResult;
        }

        public Builder completedRegions(@Nullable List<String> completedRegions) {
            this.completedRegions = completedRegions;
            return this;
        }

        public Builder failedOrSkippedRegions(@Nullable Map<String,ExtendedErrorInfoResponse> failedOrSkippedRegions) {
            this.failedOrSkippedRegions = failedOrSkippedRegions;
            return this;
        }

        public Builder nextTrafficRegion(@Nullable String nextTrafficRegion) {
            this.nextTrafficRegion = nextTrafficRegion;
            return this;
        }

        public Builder nextTrafficRegionScheduledTime(@Nullable String nextTrafficRegionScheduledTime) {
            this.nextTrafficRegionScheduledTime = nextTrafficRegionScheduledTime;
            return this;
        }

        public Builder subscriptionReregistrationResult(@Nullable String subscriptionReregistrationResult) {
            this.subscriptionReregistrationResult = subscriptionReregistrationResult;
            return this;
        }
        public DefaultRolloutPropertiesResponseStatus build() {
            return new DefaultRolloutPropertiesResponseStatus(completedRegions, failedOrSkippedRegions, nextTrafficRegion, nextTrafficRegionScheduledTime, subscriptionReregistrationResult);
        }
    }
}
