// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.inputs;

import io.pulumi.azurenative.web.enums.ForwardProxyConvention;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The configuration settings of a forward proxy used to make the requests.
 * 
 */
public final class ForwardProxyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ForwardProxyArgs Empty = new ForwardProxyArgs();

    /**
     * The convention used to determine the url of the request made.
     * 
     */
    @InputImport(name="convention")
    private final @Nullable Input<ForwardProxyConvention> convention;

    public Input<ForwardProxyConvention> getConvention() {
        return this.convention == null ? Input.empty() : this.convention;
    }

    /**
     * The name of the header containing the host of the request.
     * 
     */
    @InputImport(name="customHostHeaderName")
    private final @Nullable Input<String> customHostHeaderName;

    public Input<String> getCustomHostHeaderName() {
        return this.customHostHeaderName == null ? Input.empty() : this.customHostHeaderName;
    }

    /**
     * The name of the header containing the scheme of the request.
     * 
     */
    @InputImport(name="customProtoHeaderName")
    private final @Nullable Input<String> customProtoHeaderName;

    public Input<String> getCustomProtoHeaderName() {
        return this.customProtoHeaderName == null ? Input.empty() : this.customProtoHeaderName;
    }

    public ForwardProxyArgs(
        @Nullable Input<ForwardProxyConvention> convention,
        @Nullable Input<String> customHostHeaderName,
        @Nullable Input<String> customProtoHeaderName) {
        this.convention = convention;
        this.customHostHeaderName = customHostHeaderName;
        this.customProtoHeaderName = customProtoHeaderName;
    }

    private ForwardProxyArgs() {
        this.convention = Input.empty();
        this.customHostHeaderName = Input.empty();
        this.customProtoHeaderName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ForwardProxyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ForwardProxyConvention> convention;
        private @Nullable Input<String> customHostHeaderName;
        private @Nullable Input<String> customProtoHeaderName;

        public Builder() {
    	      // Empty
        }

        public Builder(ForwardProxyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.convention = defaults.convention;
    	      this.customHostHeaderName = defaults.customHostHeaderName;
    	      this.customProtoHeaderName = defaults.customProtoHeaderName;
        }

        public Builder setConvention(@Nullable Input<ForwardProxyConvention> convention) {
            this.convention = convention;
            return this;
        }

        public Builder setConvention(@Nullable ForwardProxyConvention convention) {
            this.convention = Input.ofNullable(convention);
            return this;
        }

        public Builder setCustomHostHeaderName(@Nullable Input<String> customHostHeaderName) {
            this.customHostHeaderName = customHostHeaderName;
            return this;
        }

        public Builder setCustomHostHeaderName(@Nullable String customHostHeaderName) {
            this.customHostHeaderName = Input.ofNullable(customHostHeaderName);
            return this;
        }

        public Builder setCustomProtoHeaderName(@Nullable Input<String> customProtoHeaderName) {
            this.customProtoHeaderName = customProtoHeaderName;
            return this;
        }

        public Builder setCustomProtoHeaderName(@Nullable String customProtoHeaderName) {
            this.customProtoHeaderName = Input.ofNullable(customProtoHeaderName);
            return this;
        }

        public ForwardProxyArgs build() {
            return new ForwardProxyArgs(convention, customHostHeaderName, customProtoHeaderName);
        }
    }
}
