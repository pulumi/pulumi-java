// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logz.inputs;

import io.pulumi.azurenative.logz.inputs.FilteringTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Set of rules for sending metrics for the Monitor resource.
 * 
 */
public final class MetricRulesArgs extends io.pulumi.resources.ResourceArgs {

    public static final MetricRulesArgs Empty = new MetricRulesArgs();

    /**
     * List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
     * 
     */
    @InputImport(name="filteringTags")
    private final @Nullable Input<List<FilteringTagArgs>> filteringTags;

    public Input<List<FilteringTagArgs>> getFilteringTags() {
        return this.filteringTags == null ? Input.empty() : this.filteringTags;
    }

    /**
     * Subscription Id for which filtering tags are applicable
     * 
     */
    @InputImport(name="subscriptionId")
    private final @Nullable Input<String> subscriptionId;

    public Input<String> getSubscriptionId() {
        return this.subscriptionId == null ? Input.empty() : this.subscriptionId;
    }

    public MetricRulesArgs(
        @Nullable Input<List<FilteringTagArgs>> filteringTags,
        @Nullable Input<String> subscriptionId) {
        this.filteringTags = filteringTags;
        this.subscriptionId = subscriptionId;
    }

    private MetricRulesArgs() {
        this.filteringTags = Input.empty();
        this.subscriptionId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<FilteringTagArgs>> filteringTags;
        private @Nullable Input<String> subscriptionId;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricRulesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filteringTags = defaults.filteringTags;
    	      this.subscriptionId = defaults.subscriptionId;
        }

        public Builder setFilteringTags(@Nullable Input<List<FilteringTagArgs>> filteringTags) {
            this.filteringTags = filteringTags;
            return this;
        }

        public Builder setFilteringTags(@Nullable List<FilteringTagArgs> filteringTags) {
            this.filteringTags = Input.ofNullable(filteringTags);
            return this;
        }

        public Builder setSubscriptionId(@Nullable Input<String> subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }

        public Builder setSubscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = Input.ofNullable(subscriptionId);
            return this;
        }

        public MetricRulesArgs build() {
            return new MetricRulesArgs(filteringTags, subscriptionId);
        }
    }
}
