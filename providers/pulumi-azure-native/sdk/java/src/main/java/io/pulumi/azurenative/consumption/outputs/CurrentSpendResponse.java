// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.consumption.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CurrentSpendResponse {
    /**
     * The total amount of cost which is being tracked by the budget.
     * 
     */
    private final Double amount;
    /**
     * The unit of measure for the budget amount.
     * 
     */
    private final String unit;

    @CustomType.Constructor
    private CurrentSpendResponse(
        @CustomType.Parameter("amount") Double amount,
        @CustomType.Parameter("unit") String unit) {
        this.amount = amount;
        this.unit = unit;
    }

    /**
     * The total amount of cost which is being tracked by the budget.
     * 
    */
    public Double getAmount() {
        return this.amount;
    }
    /**
     * The unit of measure for the budget amount.
     * 
    */
    public String getUnit() {
        return this.unit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CurrentSpendResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double amount;
        private String unit;

        public Builder() {
    	      // Empty
        }

        public Builder(CurrentSpendResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amount = defaults.amount;
    	      this.unit = defaults.unit;
        }

        public Builder amount(Double amount) {
            this.amount = Objects.requireNonNull(amount);
            return this;
        }

        public Builder unit(String unit) {
            this.unit = Objects.requireNonNull(unit);
            return this;
        }
        public CurrentSpendResponse build() {
            return new CurrentSpendResponse(amount, unit);
        }
    }
}
