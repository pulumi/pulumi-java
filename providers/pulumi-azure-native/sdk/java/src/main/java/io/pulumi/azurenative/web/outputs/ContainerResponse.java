// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.azurenative.web.outputs.ContainerResourcesResponse;
import io.pulumi.azurenative.web.outputs.EnvironmentVarResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ContainerResponse {
    private final @Nullable List<String> args;
    private final @Nullable List<String> command;
    private final @Nullable List<EnvironmentVarResponse> env;
    private final @Nullable String image;
    private final @Nullable String name;
    private final @Nullable ContainerResourcesResponse resources;

    @OutputCustomType.Constructor({"args","command","env","image","name","resources"})
    private ContainerResponse(
        @Nullable List<String> args,
        @Nullable List<String> command,
        @Nullable List<EnvironmentVarResponse> env,
        @Nullable String image,
        @Nullable String name,
        @Nullable ContainerResourcesResponse resources) {
        this.args = args;
        this.command = command;
        this.env = env;
        this.image = image;
        this.name = name;
        this.resources = resources;
    }

    public List<String> getArgs() {
        return this.args == null ? List.of() : this.args;
    }
    public List<String> getCommand() {
        return this.command == null ? List.of() : this.command;
    }
    public List<EnvironmentVarResponse> getEnv() {
        return this.env == null ? List.of() : this.env;
    }
    public Optional<String> getImage() {
        return Optional.ofNullable(this.image);
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<ContainerResourcesResponse> getResources() {
        return Optional.ofNullable(this.resources);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> args;
        private @Nullable List<String> command;
        private @Nullable List<EnvironmentVarResponse> env;
        private @Nullable String image;
        private @Nullable String name;
        private @Nullable ContainerResourcesResponse resources;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.args = defaults.args;
    	      this.command = defaults.command;
    	      this.env = defaults.env;
    	      this.image = defaults.image;
    	      this.name = defaults.name;
    	      this.resources = defaults.resources;
        }

        public Builder setArgs(@Nullable List<String> args) {
            this.args = args;
            return this;
        }

        public Builder setCommand(@Nullable List<String> command) {
            this.command = command;
            return this;
        }

        public Builder setEnv(@Nullable List<EnvironmentVarResponse> env) {
            this.env = env;
            return this;
        }

        public Builder setImage(@Nullable String image) {
            this.image = image;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setResources(@Nullable ContainerResourcesResponse resources) {
            this.resources = resources;
            return this;
        }

        public ContainerResponse build() {
            return new ContainerResponse(args, command, env, image, name, resources);
        }
    }
}
