// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServerVulnerabilityAssessmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServerVulnerabilityAssessmentArgs Empty = new ServerVulnerabilityAssessmentArgs();

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the resource.
     * 
     */
    @InputImport(name="resourceName", required=true)
    private final Input<String> resourceName;

    public Input<String> getPropResourceName() {
        return this.resourceName;
    }

    /**
     * The Namespace of the resource.
     * 
     */
    @InputImport(name="resourceNamespace", required=true)
    private final Input<String> resourceNamespace;

    public Input<String> getResourceNamespace() {
        return this.resourceNamespace;
    }

    /**
     * The type of the resource.
     * 
     */
    @InputImport(name="resourceType", required=true)
    private final Input<String> resourceType;

    public Input<String> getPropResourceType() {
        return this.resourceType;
    }

    /**
     * ServerVulnerabilityAssessment status. only a 'default' value is supported.
     * 
     */
    @InputImport(name="serverVulnerabilityAssessment")
    private final @Nullable Input<String> serverVulnerabilityAssessment;

    public Input<String> getServerVulnerabilityAssessment() {
        return this.serverVulnerabilityAssessment == null ? Input.empty() : this.serverVulnerabilityAssessment;
    }

    public ServerVulnerabilityAssessmentArgs(
        Input<String> resourceGroupName,
        Input<String> resourceName,
        Input<String> resourceNamespace,
        Input<String> resourceType,
        @Nullable Input<String> serverVulnerabilityAssessment) {
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = Objects.requireNonNull(resourceName, "expected parameter 'resourceName' to be non-null");
        this.resourceNamespace = Objects.requireNonNull(resourceNamespace, "expected parameter 'resourceNamespace' to be non-null");
        this.resourceType = Objects.requireNonNull(resourceType, "expected parameter 'resourceType' to be non-null");
        this.serverVulnerabilityAssessment = serverVulnerabilityAssessment;
    }

    private ServerVulnerabilityAssessmentArgs() {
        this.resourceGroupName = Input.empty();
        this.resourceName = Input.empty();
        this.resourceNamespace = Input.empty();
        this.resourceType = Input.empty();
        this.serverVulnerabilityAssessment = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerVulnerabilityAssessmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> resourceGroupName;
        private Input<String> resourceName;
        private Input<String> resourceNamespace;
        private Input<String> resourceType;
        private @Nullable Input<String> serverVulnerabilityAssessment;

        public Builder() {
    	      // Empty
        }

        public Builder(ServerVulnerabilityAssessmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceNamespace = defaults.resourceNamespace;
    	      this.resourceType = defaults.resourceType;
    	      this.serverVulnerabilityAssessment = defaults.serverVulnerabilityAssessment;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setResourceName(Input<String> resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }

        public Builder setResourceName(String resourceName) {
            this.resourceName = Input.of(Objects.requireNonNull(resourceName));
            return this;
        }

        public Builder setResourceNamespace(Input<String> resourceNamespace) {
            this.resourceNamespace = Objects.requireNonNull(resourceNamespace);
            return this;
        }

        public Builder setResourceNamespace(String resourceNamespace) {
            this.resourceNamespace = Input.of(Objects.requireNonNull(resourceNamespace));
            return this;
        }

        public Builder setResourceType(Input<String> resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }

        public Builder setResourceType(String resourceType) {
            this.resourceType = Input.of(Objects.requireNonNull(resourceType));
            return this;
        }

        public Builder setServerVulnerabilityAssessment(@Nullable Input<String> serverVulnerabilityAssessment) {
            this.serverVulnerabilityAssessment = serverVulnerabilityAssessment;
            return this;
        }

        public Builder setServerVulnerabilityAssessment(@Nullable String serverVulnerabilityAssessment) {
            this.serverVulnerabilityAssessment = Input.ofNullable(serverVulnerabilityAssessment);
            return this;
        }

        public ServerVulnerabilityAssessmentArgs build() {
            return new ServerVulnerabilityAssessmentArgs(resourceGroupName, resourceName, resourceNamespace, resourceType, serverVulnerabilityAssessment);
        }
    }
}
