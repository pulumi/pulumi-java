// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.inputs.ModelEnvironmentDefinitionDockerArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.ModelEnvironmentDefinitionPythonArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.ModelEnvironmentDefinitionRArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.ModelEnvironmentDefinitionSparkArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The details of the AZURE ML environment.
 * 
 */
public final class EnvironmentImageRequestEnvironmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final EnvironmentImageRequestEnvironmentArgs Empty = new EnvironmentImageRequestEnvironmentArgs();

    /**
     * The definition of a Docker container.
     * 
     */
    @Import(name="docker")
      private final @Nullable Output<ModelEnvironmentDefinitionDockerArgs> docker;

    public Output<ModelEnvironmentDefinitionDockerArgs> getDocker() {
        return this.docker == null ? Output.empty() : this.docker;
    }

    /**
     * Definition of environment variables to be defined in the environment.
     * 
     */
    @Import(name="environmentVariables")
      private final @Nullable Output<Map<String,String>> environmentVariables;

    public Output<Map<String,String>> getEnvironmentVariables() {
        return this.environmentVariables == null ? Output.empty() : this.environmentVariables;
    }

    /**
     * The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
     * 
     */
    @Import(name="inferencingStackVersion")
      private final @Nullable Output<String> inferencingStackVersion;

    public Output<String> getInferencingStackVersion() {
        return this.inferencingStackVersion == null ? Output.empty() : this.inferencingStackVersion;
    }

    /**
     * The name of the environment.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Settings for a Python environment.
     * 
     */
    @Import(name="python")
      private final @Nullable Output<ModelEnvironmentDefinitionPythonArgs> python;

    public Output<ModelEnvironmentDefinitionPythonArgs> getPython() {
        return this.python == null ? Output.empty() : this.python;
    }

    /**
     * Settings for a R environment.
     * 
     */
    @Import(name="r")
      private final @Nullable Output<ModelEnvironmentDefinitionRArgs> r;

    public Output<ModelEnvironmentDefinitionRArgs> getR() {
        return this.r == null ? Output.empty() : this.r;
    }

    /**
     * The configuration for a Spark environment.
     * 
     */
    @Import(name="spark")
      private final @Nullable Output<ModelEnvironmentDefinitionSparkArgs> spark;

    public Output<ModelEnvironmentDefinitionSparkArgs> getSpark() {
        return this.spark == null ? Output.empty() : this.spark;
    }

    /**
     * The environment version.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<String> version;

    public Output<String> getVersion() {
        return this.version == null ? Output.empty() : this.version;
    }

    public EnvironmentImageRequestEnvironmentArgs(
        @Nullable Output<ModelEnvironmentDefinitionDockerArgs> docker,
        @Nullable Output<Map<String,String>> environmentVariables,
        @Nullable Output<String> inferencingStackVersion,
        @Nullable Output<String> name,
        @Nullable Output<ModelEnvironmentDefinitionPythonArgs> python,
        @Nullable Output<ModelEnvironmentDefinitionRArgs> r,
        @Nullable Output<ModelEnvironmentDefinitionSparkArgs> spark,
        @Nullable Output<String> version) {
        this.docker = docker;
        this.environmentVariables = environmentVariables;
        this.inferencingStackVersion = inferencingStackVersion;
        this.name = name;
        this.python = python;
        this.r = r;
        this.spark = spark;
        this.version = version;
    }

    private EnvironmentImageRequestEnvironmentArgs() {
        this.docker = Output.empty();
        this.environmentVariables = Output.empty();
        this.inferencingStackVersion = Output.empty();
        this.name = Output.empty();
        this.python = Output.empty();
        this.r = Output.empty();
        this.spark = Output.empty();
        this.version = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentImageRequestEnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ModelEnvironmentDefinitionDockerArgs> docker;
        private @Nullable Output<Map<String,String>> environmentVariables;
        private @Nullable Output<String> inferencingStackVersion;
        private @Nullable Output<String> name;
        private @Nullable Output<ModelEnvironmentDefinitionPythonArgs> python;
        private @Nullable Output<ModelEnvironmentDefinitionRArgs> r;
        private @Nullable Output<ModelEnvironmentDefinitionSparkArgs> spark;
        private @Nullable Output<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(EnvironmentImageRequestEnvironmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.docker = defaults.docker;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.inferencingStackVersion = defaults.inferencingStackVersion;
    	      this.name = defaults.name;
    	      this.python = defaults.python;
    	      this.r = defaults.r;
    	      this.spark = defaults.spark;
    	      this.version = defaults.version;
        }

        public Builder docker(@Nullable Output<ModelEnvironmentDefinitionDockerArgs> docker) {
            this.docker = docker;
            return this;
        }
        public Builder docker(@Nullable ModelEnvironmentDefinitionDockerArgs docker) {
            this.docker = Output.ofNullable(docker);
            return this;
        }
        public Builder environmentVariables(@Nullable Output<Map<String,String>> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }
        public Builder environmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = Output.ofNullable(environmentVariables);
            return this;
        }
        public Builder inferencingStackVersion(@Nullable Output<String> inferencingStackVersion) {
            this.inferencingStackVersion = inferencingStackVersion;
            return this;
        }
        public Builder inferencingStackVersion(@Nullable String inferencingStackVersion) {
            this.inferencingStackVersion = Output.ofNullable(inferencingStackVersion);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder python(@Nullable Output<ModelEnvironmentDefinitionPythonArgs> python) {
            this.python = python;
            return this;
        }
        public Builder python(@Nullable ModelEnvironmentDefinitionPythonArgs python) {
            this.python = Output.ofNullable(python);
            return this;
        }
        public Builder r(@Nullable Output<ModelEnvironmentDefinitionRArgs> r) {
            this.r = r;
            return this;
        }
        public Builder r(@Nullable ModelEnvironmentDefinitionRArgs r) {
            this.r = Output.ofNullable(r);
            return this;
        }
        public Builder spark(@Nullable Output<ModelEnvironmentDefinitionSparkArgs> spark) {
            this.spark = spark;
            return this;
        }
        public Builder spark(@Nullable ModelEnvironmentDefinitionSparkArgs spark) {
            this.spark = Output.ofNullable(spark);
            return this;
        }
        public Builder version(@Nullable Output<String> version) {
            this.version = version;
            return this;
        }
        public Builder version(@Nullable String version) {
            this.version = Output.ofNullable(version);
            return this;
        }        public EnvironmentImageRequestEnvironmentArgs build() {
            return new EnvironmentImageRequestEnvironmentArgs(docker, environmentVariables, inferencingStackVersion, name, python, r, spark, version);
        }
    }
}
