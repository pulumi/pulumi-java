// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The logging properties of the connected registry.
 * 
 */
public final class LoggingPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final LoggingPropertiesResponse Empty = new LoggingPropertiesResponse();

    /**
     * Indicates whether audit logs are enabled on the connected registry.
     * 
     */
    @InputImport(name="auditLogStatus")
    private final @Nullable String auditLogStatus;

    public Optional<String> getAuditLogStatus() {
        return this.auditLogStatus == null ? Optional.empty() : Optional.ofNullable(this.auditLogStatus);
    }

    /**
     * The verbosity of logs persisted on the connected registry.
     * 
     */
    @InputImport(name="logLevel")
    private final @Nullable String logLevel;

    public Optional<String> getLogLevel() {
        return this.logLevel == null ? Optional.empty() : Optional.ofNullable(this.logLevel);
    }

    public LoggingPropertiesResponse(
        @Nullable String auditLogStatus,
        @Nullable String logLevel) {
        this.auditLogStatus = auditLogStatus == null ? "Disabled" : auditLogStatus;
        this.logLevel = logLevel == null ? "Information" : logLevel;
    }

    private LoggingPropertiesResponse() {
        this.auditLogStatus = null;
        this.logLevel = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoggingPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String auditLogStatus;
        private @Nullable String logLevel;

        public Builder() {
    	      // Empty
        }

        public Builder(LoggingPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditLogStatus = defaults.auditLogStatus;
    	      this.logLevel = defaults.logLevel;
        }

        public Builder setAuditLogStatus(@Nullable String auditLogStatus) {
            this.auditLogStatus = auditLogStatus;
            return this;
        }

        public Builder setLogLevel(@Nullable String logLevel) {
            this.logLevel = logLevel;
            return this;
        }

        public LoggingPropertiesResponse build() {
            return new LoggingPropertiesResponse(auditLogStatus, logLevel);
        }
    }
}
