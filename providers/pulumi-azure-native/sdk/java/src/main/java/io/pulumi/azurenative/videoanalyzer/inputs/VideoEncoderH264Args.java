// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.videoanalyzer.inputs;

import io.pulumi.azurenative.videoanalyzer.inputs.VideoScaleArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A custom preset for encoding video with the H.264 (AVC) codec.
 * 
 */
public final class VideoEncoderH264Args extends io.pulumi.resources.ResourceArgs {

    public static final VideoEncoderH264Args Empty = new VideoEncoderH264Args();

    /**
     * The maximum bitrate, in kilobits per second or Kbps, at which video should be encoded. If omitted, encoder sets it automatically to try and match the quality of the input video.
     * 
     */
    @Import(name="bitrateKbps")
      private final @Nullable Output<String> bitrateKbps;

    public Output<String> getBitrateKbps() {
        return this.bitrateKbps == null ? Codegen.empty() : this.bitrateKbps;
    }

    /**
     * The frame rate (in frames per second) of the encoded video. The value must be greater than zero, and less than or equal to 300. If omitted, the encoder uses the average frame rate of the input video.
     * 
     */
    @Import(name="frameRate")
      private final @Nullable Output<String> frameRate;

    public Output<String> getFrameRate() {
        return this.frameRate == null ? Codegen.empty() : this.frameRate;
    }

    /**
     * Describes the resolution of the encoded video. If omitted, the encoder uses the resolution of the input video.
     * 
     */
    @Import(name="scale")
      private final @Nullable Output<VideoScaleArgs> scale;

    public Output<VideoScaleArgs> getScale() {
        return this.scale == null ? Codegen.empty() : this.scale;
    }

    /**
     * The discriminator for derived types.
     * Expected value is '#Microsoft.VideoAnalyzer.VideoEncoderH264'.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> getType() {
        return this.type;
    }

    public VideoEncoderH264Args(
        @Nullable Output<String> bitrateKbps,
        @Nullable Output<String> frameRate,
        @Nullable Output<VideoScaleArgs> scale,
        Output<String> type) {
        this.bitrateKbps = bitrateKbps;
        this.frameRate = frameRate;
        this.scale = scale;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private VideoEncoderH264Args() {
        this.bitrateKbps = Codegen.empty();
        this.frameRate = Codegen.empty();
        this.scale = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VideoEncoderH264Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> bitrateKbps;
        private @Nullable Output<String> frameRate;
        private @Nullable Output<VideoScaleArgs> scale;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(VideoEncoderH264Args defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bitrateKbps = defaults.bitrateKbps;
    	      this.frameRate = defaults.frameRate;
    	      this.scale = defaults.scale;
    	      this.type = defaults.type;
        }

        public Builder bitrateKbps(@Nullable Output<String> bitrateKbps) {
            this.bitrateKbps = bitrateKbps;
            return this;
        }
        public Builder bitrateKbps(@Nullable String bitrateKbps) {
            this.bitrateKbps = Codegen.ofNullable(bitrateKbps);
            return this;
        }
        public Builder frameRate(@Nullable Output<String> frameRate) {
            this.frameRate = frameRate;
            return this;
        }
        public Builder frameRate(@Nullable String frameRate) {
            this.frameRate = Codegen.ofNullable(frameRate);
            return this;
        }
        public Builder scale(@Nullable Output<VideoScaleArgs> scale) {
            this.scale = scale;
            return this;
        }
        public Builder scale(@Nullable VideoScaleArgs scale) {
            this.scale = Codegen.ofNullable(scale);
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public VideoEncoderH264Args build() {
            return new VideoEncoderH264Args(bitrateKbps, frameRate, scale, type);
        }
    }
}
