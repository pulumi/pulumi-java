// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.botservice.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SmsChannelPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final SmsChannelPropertiesResponse Empty = new SmsChannelPropertiesResponse();

    @InputImport(name="accountSID", required=true)
    private final String accountSID;

    public String getAccountSID() {
        return this.accountSID;
    }

    @InputImport(name="authToken")
    private final @Nullable String authToken;

    public Optional<String> getAuthToken() {
        return this.authToken == null ? Optional.empty() : Optional.ofNullable(this.authToken);
    }

    @InputImport(name="isEnabled", required=true)
    private final Boolean isEnabled;

    public Boolean getIsEnabled() {
        return this.isEnabled;
    }

    @InputImport(name="isValidated")
    private final @Nullable Boolean isValidated;

    public Optional<Boolean> getIsValidated() {
        return this.isValidated == null ? Optional.empty() : Optional.ofNullable(this.isValidated);
    }

    @InputImport(name="phone", required=true)
    private final String phone;

    public String getPhone() {
        return this.phone;
    }

    public SmsChannelPropertiesResponse(
        String accountSID,
        @Nullable String authToken,
        Boolean isEnabled,
        @Nullable Boolean isValidated,
        String phone) {
        this.accountSID = Objects.requireNonNull(accountSID, "expected parameter 'accountSID' to be non-null");
        this.authToken = authToken;
        this.isEnabled = Objects.requireNonNull(isEnabled, "expected parameter 'isEnabled' to be non-null");
        this.isValidated = isValidated;
        this.phone = Objects.requireNonNull(phone, "expected parameter 'phone' to be non-null");
    }

    private SmsChannelPropertiesResponse() {
        this.accountSID = null;
        this.authToken = null;
        this.isEnabled = null;
        this.isValidated = null;
        this.phone = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SmsChannelPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accountSID;
        private @Nullable String authToken;
        private Boolean isEnabled;
        private @Nullable Boolean isValidated;
        private String phone;

        public Builder() {
    	      // Empty
        }

        public Builder(SmsChannelPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountSID = defaults.accountSID;
    	      this.authToken = defaults.authToken;
    	      this.isEnabled = defaults.isEnabled;
    	      this.isValidated = defaults.isValidated;
    	      this.phone = defaults.phone;
        }

        public Builder setAccountSID(String accountSID) {
            this.accountSID = Objects.requireNonNull(accountSID);
            return this;
        }

        public Builder setAuthToken(@Nullable String authToken) {
            this.authToken = authToken;
            return this;
        }

        public Builder setIsEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }

        public Builder setIsValidated(@Nullable Boolean isValidated) {
            this.isValidated = isValidated;
            return this;
        }

        public Builder setPhone(String phone) {
            this.phone = Objects.requireNonNull(phone);
            return this;
        }

        public SmsChannelPropertiesResponse build() {
            return new SmsChannelPropertiesResponse(accountSID, authToken, isEnabled, isValidated, phone);
        }
    }
}
