// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.digitaltwins.outputs;

import io.pulumi.azurenative.digitaltwins.outputs.DigitalTwinsIdentityResponse;
import io.pulumi.azurenative.digitaltwins.outputs.PrivateEndpointConnectionResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetDigitalTwinResult {
    /**
     * Time when DigitalTwinsInstance was created.
     * 
     */
    private final String createdTime;
    /**
     * Api endpoint to work with DigitalTwinsInstance.
     * 
     */
    private final String hostName;
    /**
     * The resource identifier.
     * 
     */
    private final String id;
    /**
     * The managed identity for the DigitalTwinsInstance.
     * 
     */
    private final @Nullable DigitalTwinsIdentityResponse identity;
    /**
     * Time when DigitalTwinsInstance was updated.
     * 
     */
    private final String lastUpdatedTime;
    /**
     * The resource location.
     * 
     */
    private final String location;
    /**
     * The resource name.
     * 
     */
    private final String name;
    private final @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * The provisioning state.
     * 
     */
    private final String provisioningState;
    /**
     * Public network access for the DigitalTwinsInstance.
     * 
     */
    private final @Nullable String publicNetworkAccess;
    /**
     * The resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * The resource type.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor
    private GetDigitalTwinResult(
        @OutputCustomType.Parameter("createdTime") String createdTime,
        @OutputCustomType.Parameter("hostName") String hostName,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("identity") @Nullable DigitalTwinsIdentityResponse identity,
        @OutputCustomType.Parameter("lastUpdatedTime") String lastUpdatedTime,
        @OutputCustomType.Parameter("location") String location,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("privateEndpointConnections") @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections,
        @OutputCustomType.Parameter("provisioningState") String provisioningState,
        @OutputCustomType.Parameter("publicNetworkAccess") @Nullable String publicNetworkAccess,
        @OutputCustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @OutputCustomType.Parameter("type") String type) {
        this.createdTime = createdTime;
        this.hostName = hostName;
        this.id = id;
        this.identity = identity;
        this.lastUpdatedTime = lastUpdatedTime;
        this.location = location;
        this.name = name;
        this.privateEndpointConnections = privateEndpointConnections;
        this.provisioningState = provisioningState;
        this.publicNetworkAccess = publicNetworkAccess;
        this.tags = tags;
        this.type = type;
    }

    /**
     * Time when DigitalTwinsInstance was created.
     * 
    */
    public String getCreatedTime() {
        return this.createdTime;
    }
    /**
     * Api endpoint to work with DigitalTwinsInstance.
     * 
    */
    public String getHostName() {
        return this.hostName;
    }
    /**
     * The resource identifier.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * The managed identity for the DigitalTwinsInstance.
     * 
    */
    public Optional<DigitalTwinsIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * Time when DigitalTwinsInstance was updated.
     * 
    */
    public String getLastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    /**
     * The resource location.
     * 
    */
    public String getLocation() {
        return this.location;
    }
    /**
     * The resource name.
     * 
    */
    public String getName() {
        return this.name;
    }
    public List<PrivateEndpointConnectionResponse> getPrivateEndpointConnections() {
        return this.privateEndpointConnections == null ? List.of() : this.privateEndpointConnections;
    }
    /**
     * The provisioning state.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Public network access for the DigitalTwinsInstance.
     * 
    */
    public Optional<String> getPublicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    /**
     * The resource tags.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * The resource type.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDigitalTwinResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createdTime;
        private String hostName;
        private String id;
        private @Nullable DigitalTwinsIdentityResponse identity;
        private String lastUpdatedTime;
        private String location;
        private String name;
        private @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;
        private String provisioningState;
        private @Nullable String publicNetworkAccess;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDigitalTwinResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdTime = defaults.createdTime;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.lastUpdatedTime = defaults.lastUpdatedTime;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder createdTime(String createdTime) {
            this.createdTime = Objects.requireNonNull(createdTime);
            return this;
        }

        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder identity(@Nullable DigitalTwinsIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder lastUpdatedTime(String lastUpdatedTime) {
            this.lastUpdatedTime = Objects.requireNonNull(lastUpdatedTime);
            return this;
        }

        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder privateEndpointConnections(@Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = privateEndpointConnections;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetDigitalTwinResult build() {
            return new GetDigitalTwinResult(createdTime, hostName, id, identity, lastUpdatedTime, location, name, privateEndpointConnections, provisioningState, publicNetworkAccess, tags, type);
        }
    }
}
