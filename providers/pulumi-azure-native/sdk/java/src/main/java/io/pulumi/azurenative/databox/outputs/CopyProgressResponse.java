// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databox.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class CopyProgressResponse {
    private final String accountId;
    private final Double bytesProcessed;
    private final String dataAccountType;
    private final Double directoriesErroredOut;
    private final Double filesErroredOut;
    private final Double filesProcessed;
    private final Double invalidDirectoriesProcessed;
    private final Double invalidFileBytesUploaded;
    private final Double invalidFilesProcessed;
    private final Boolean isEnumerationInProgress;
    private final Double renamedContainerCount;
    private final String storageAccountName;
    private final Double totalBytesToProcess;
    private final Double totalFilesToProcess;
    private final String transferType;

    @OutputCustomType.Constructor({"accountId","bytesProcessed","dataAccountType","directoriesErroredOut","filesErroredOut","filesProcessed","invalidDirectoriesProcessed","invalidFileBytesUploaded","invalidFilesProcessed","isEnumerationInProgress","renamedContainerCount","storageAccountName","totalBytesToProcess","totalFilesToProcess","transferType"})
    private CopyProgressResponse(
        String accountId,
        Double bytesProcessed,
        String dataAccountType,
        Double directoriesErroredOut,
        Double filesErroredOut,
        Double filesProcessed,
        Double invalidDirectoriesProcessed,
        Double invalidFileBytesUploaded,
        Double invalidFilesProcessed,
        Boolean isEnumerationInProgress,
        Double renamedContainerCount,
        String storageAccountName,
        Double totalBytesToProcess,
        Double totalFilesToProcess,
        String transferType) {
        this.accountId = Objects.requireNonNull(accountId);
        this.bytesProcessed = Objects.requireNonNull(bytesProcessed);
        this.dataAccountType = Objects.requireNonNull(dataAccountType);
        this.directoriesErroredOut = Objects.requireNonNull(directoriesErroredOut);
        this.filesErroredOut = Objects.requireNonNull(filesErroredOut);
        this.filesProcessed = Objects.requireNonNull(filesProcessed);
        this.invalidDirectoriesProcessed = Objects.requireNonNull(invalidDirectoriesProcessed);
        this.invalidFileBytesUploaded = Objects.requireNonNull(invalidFileBytesUploaded);
        this.invalidFilesProcessed = Objects.requireNonNull(invalidFilesProcessed);
        this.isEnumerationInProgress = Objects.requireNonNull(isEnumerationInProgress);
        this.renamedContainerCount = Objects.requireNonNull(renamedContainerCount);
        this.storageAccountName = Objects.requireNonNull(storageAccountName);
        this.totalBytesToProcess = Objects.requireNonNull(totalBytesToProcess);
        this.totalFilesToProcess = Objects.requireNonNull(totalFilesToProcess);
        this.transferType = Objects.requireNonNull(transferType);
    }

    public String getAccountId() {
        return this.accountId;
    }
    public Double getBytesProcessed() {
        return this.bytesProcessed;
    }
    public String getDataAccountType() {
        return this.dataAccountType;
    }
    public Double getDirectoriesErroredOut() {
        return this.directoriesErroredOut;
    }
    public Double getFilesErroredOut() {
        return this.filesErroredOut;
    }
    public Double getFilesProcessed() {
        return this.filesProcessed;
    }
    public Double getInvalidDirectoriesProcessed() {
        return this.invalidDirectoriesProcessed;
    }
    public Double getInvalidFileBytesUploaded() {
        return this.invalidFileBytesUploaded;
    }
    public Double getInvalidFilesProcessed() {
        return this.invalidFilesProcessed;
    }
    public Boolean getIsEnumerationInProgress() {
        return this.isEnumerationInProgress;
    }
    public Double getRenamedContainerCount() {
        return this.renamedContainerCount;
    }
    public String getStorageAccountName() {
        return this.storageAccountName;
    }
    public Double getTotalBytesToProcess() {
        return this.totalBytesToProcess;
    }
    public Double getTotalFilesToProcess() {
        return this.totalFilesToProcess;
    }
    public String getTransferType() {
        return this.transferType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CopyProgressResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accountId;
        private Double bytesProcessed;
        private String dataAccountType;
        private Double directoriesErroredOut;
        private Double filesErroredOut;
        private Double filesProcessed;
        private Double invalidDirectoriesProcessed;
        private Double invalidFileBytesUploaded;
        private Double invalidFilesProcessed;
        private Boolean isEnumerationInProgress;
        private Double renamedContainerCount;
        private String storageAccountName;
        private Double totalBytesToProcess;
        private Double totalFilesToProcess;
        private String transferType;

        public Builder() {
    	      // Empty
        }

        public Builder(CopyProgressResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.bytesProcessed = defaults.bytesProcessed;
    	      this.dataAccountType = defaults.dataAccountType;
    	      this.directoriesErroredOut = defaults.directoriesErroredOut;
    	      this.filesErroredOut = defaults.filesErroredOut;
    	      this.filesProcessed = defaults.filesProcessed;
    	      this.invalidDirectoriesProcessed = defaults.invalidDirectoriesProcessed;
    	      this.invalidFileBytesUploaded = defaults.invalidFileBytesUploaded;
    	      this.invalidFilesProcessed = defaults.invalidFilesProcessed;
    	      this.isEnumerationInProgress = defaults.isEnumerationInProgress;
    	      this.renamedContainerCount = defaults.renamedContainerCount;
    	      this.storageAccountName = defaults.storageAccountName;
    	      this.totalBytesToProcess = defaults.totalBytesToProcess;
    	      this.totalFilesToProcess = defaults.totalFilesToProcess;
    	      this.transferType = defaults.transferType;
        }

        public Builder setAccountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }

        public Builder setBytesProcessed(Double bytesProcessed) {
            this.bytesProcessed = Objects.requireNonNull(bytesProcessed);
            return this;
        }

        public Builder setDataAccountType(String dataAccountType) {
            this.dataAccountType = Objects.requireNonNull(dataAccountType);
            return this;
        }

        public Builder setDirectoriesErroredOut(Double directoriesErroredOut) {
            this.directoriesErroredOut = Objects.requireNonNull(directoriesErroredOut);
            return this;
        }

        public Builder setFilesErroredOut(Double filesErroredOut) {
            this.filesErroredOut = Objects.requireNonNull(filesErroredOut);
            return this;
        }

        public Builder setFilesProcessed(Double filesProcessed) {
            this.filesProcessed = Objects.requireNonNull(filesProcessed);
            return this;
        }

        public Builder setInvalidDirectoriesProcessed(Double invalidDirectoriesProcessed) {
            this.invalidDirectoriesProcessed = Objects.requireNonNull(invalidDirectoriesProcessed);
            return this;
        }

        public Builder setInvalidFileBytesUploaded(Double invalidFileBytesUploaded) {
            this.invalidFileBytesUploaded = Objects.requireNonNull(invalidFileBytesUploaded);
            return this;
        }

        public Builder setInvalidFilesProcessed(Double invalidFilesProcessed) {
            this.invalidFilesProcessed = Objects.requireNonNull(invalidFilesProcessed);
            return this;
        }

        public Builder setIsEnumerationInProgress(Boolean isEnumerationInProgress) {
            this.isEnumerationInProgress = Objects.requireNonNull(isEnumerationInProgress);
            return this;
        }

        public Builder setRenamedContainerCount(Double renamedContainerCount) {
            this.renamedContainerCount = Objects.requireNonNull(renamedContainerCount);
            return this;
        }

        public Builder setStorageAccountName(String storageAccountName) {
            this.storageAccountName = Objects.requireNonNull(storageAccountName);
            return this;
        }

        public Builder setTotalBytesToProcess(Double totalBytesToProcess) {
            this.totalBytesToProcess = Objects.requireNonNull(totalBytesToProcess);
            return this;
        }

        public Builder setTotalFilesToProcess(Double totalFilesToProcess) {
            this.totalFilesToProcess = Objects.requireNonNull(totalFilesToProcess);
            return this;
        }

        public Builder setTransferType(String transferType) {
            this.transferType = Objects.requireNonNull(transferType);
            return this;
        }

        public CopyProgressResponse build() {
            return new CopyProgressResponse(accountId, bytesProcessed, dataAccountType, directoriesErroredOut, filesErroredOut, filesProcessed, invalidDirectoriesProcessed, invalidFileBytesUploaded, invalidFilesProcessed, isEnumerationInProgress, renamedContainerCount, storageAccountName, totalBytesToProcess, totalFilesToProcess, transferType);
        }
    }
}
