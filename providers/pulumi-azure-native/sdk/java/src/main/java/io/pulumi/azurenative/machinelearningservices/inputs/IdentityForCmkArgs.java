// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class IdentityForCmkArgs extends io.pulumi.resources.ResourceArgs {

    public static final IdentityForCmkArgs Empty = new IdentityForCmkArgs();

    @InputImport(name="userAssignedIdentity", required=true)
    private final Input<String> userAssignedIdentity;

    public Input<String> getUserAssignedIdentity() {
        return this.userAssignedIdentity;
    }

    public IdentityForCmkArgs(Input<String> userAssignedIdentity) {
        this.userAssignedIdentity = Objects.requireNonNull(userAssignedIdentity, "expected parameter 'userAssignedIdentity' to be non-null");
    }

    private IdentityForCmkArgs() {
        this.userAssignedIdentity = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IdentityForCmkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> userAssignedIdentity;

        public Builder() {
    	      // Empty
        }

        public Builder(IdentityForCmkArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.userAssignedIdentity = defaults.userAssignedIdentity;
        }

        public Builder setUserAssignedIdentity(Input<String> userAssignedIdentity) {
            this.userAssignedIdentity = Objects.requireNonNull(userAssignedIdentity);
            return this;
        }

        public Builder setUserAssignedIdentity(String userAssignedIdentity) {
            this.userAssignedIdentity = Input.of(Objects.requireNonNull(userAssignedIdentity));
            return this;
        }

        public IdentityForCmkArgs build() {
            return new IdentityForCmkArgs(userAssignedIdentity);
        }
    }
}
