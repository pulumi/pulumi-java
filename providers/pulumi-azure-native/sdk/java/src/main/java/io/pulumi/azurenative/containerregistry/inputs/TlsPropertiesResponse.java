// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry.inputs;

import io.pulumi.azurenative.containerregistry.inputs.TlsCertificatePropertiesResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * The TLS properties of the connected registry login server.
 * 
 */
public final class TlsPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final TlsPropertiesResponse Empty = new TlsPropertiesResponse();

    /**
     * The certificate used to configure HTTPS for the login server.
     * 
     */
    @InputImport(name="certificate", required=true)
      private final TlsCertificatePropertiesResponse certificate;

    public TlsCertificatePropertiesResponse getCertificate() {
        return this.certificate;
    }

    /**
     * Indicates whether HTTPS is enabled for the login server.
     * 
     */
    @InputImport(name="status", required=true)
      private final String status;

    public String getStatus() {
        return this.status;
    }

    public TlsPropertiesResponse(
        TlsCertificatePropertiesResponse certificate,
        String status) {
        this.certificate = Objects.requireNonNull(certificate, "expected parameter 'certificate' to be non-null");
        this.status = Objects.requireNonNull(status, "expected parameter 'status' to be non-null");
    }

    private TlsPropertiesResponse() {
        this.certificate = null;
        this.status = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TlsPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TlsCertificatePropertiesResponse certificate;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(TlsPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificate = defaults.certificate;
    	      this.status = defaults.status;
        }

        public Builder certificate(TlsCertificatePropertiesResponse certificate) {
            this.certificate = Objects.requireNonNull(certificate);
            return this;
        }

        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public TlsPropertiesResponse build() {
            return new TlsPropertiesResponse(certificate, status);
        }
    }
}
