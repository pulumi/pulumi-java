// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.network.enums.SecurityProviderName;
import io.pulumi.azurenative.network.inputs.SubResourceArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SecurityPartnerProviderArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecurityPartnerProviderArgs Empty = new SecurityPartnerProviderArgs();

    /**
     * Resource ID.
     * 
     */
    @InputImport(name="id")
    private final @Nullable Input<String> id;

    public Input<String> getId() {
        return this.id == null ? Input.empty() : this.id;
    }

    /**
     * Resource location.
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Security Partner Provider.
     * 
     */
    @InputImport(name="securityPartnerProviderName")
    private final @Nullable Input<String> securityPartnerProviderName;

    public Input<String> getSecurityPartnerProviderName() {
        return this.securityPartnerProviderName == null ? Input.empty() : this.securityPartnerProviderName;
    }

    /**
     * The security provider name.
     * 
     */
    @InputImport(name="securityProviderName")
    private final @Nullable Input<Either<String,SecurityProviderName>> securityProviderName;

    public Input<Either<String,SecurityProviderName>> getSecurityProviderName() {
        return this.securityProviderName == null ? Input.empty() : this.securityProviderName;
    }

    /**
     * Resource tags.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The virtualHub to which the Security Partner Provider belongs.
     * 
     */
    @InputImport(name="virtualHub")
    private final @Nullable Input<SubResourceArgs> virtualHub;

    public Input<SubResourceArgs> getVirtualHub() {
        return this.virtualHub == null ? Input.empty() : this.virtualHub;
    }

    public SecurityPartnerProviderArgs(
        @Nullable Input<String> id,
        @Nullable Input<String> location,
        Input<String> resourceGroupName,
        @Nullable Input<String> securityPartnerProviderName,
        @Nullable Input<Either<String,SecurityProviderName>> securityProviderName,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<SubResourceArgs> virtualHub) {
        this.id = id;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.securityPartnerProviderName = securityPartnerProviderName;
        this.securityProviderName = securityProviderName;
        this.tags = tags;
        this.virtualHub = virtualHub;
    }

    private SecurityPartnerProviderArgs() {
        this.id = Input.empty();
        this.location = Input.empty();
        this.resourceGroupName = Input.empty();
        this.securityPartnerProviderName = Input.empty();
        this.securityProviderName = Input.empty();
        this.tags = Input.empty();
        this.virtualHub = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityPartnerProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> id;
        private @Nullable Input<String> location;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> securityPartnerProviderName;
        private @Nullable Input<Either<String,SecurityProviderName>> securityProviderName;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<SubResourceArgs> virtualHub;

        public Builder() {
    	      // Empty
        }

        public Builder(SecurityPartnerProviderArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.securityPartnerProviderName = defaults.securityPartnerProviderName;
    	      this.securityProviderName = defaults.securityProviderName;
    	      this.tags = defaults.tags;
    	      this.virtualHub = defaults.virtualHub;
        }

        public Builder setId(@Nullable Input<String> id) {
            this.id = id;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = Input.ofNullable(id);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setSecurityPartnerProviderName(@Nullable Input<String> securityPartnerProviderName) {
            this.securityPartnerProviderName = securityPartnerProviderName;
            return this;
        }

        public Builder setSecurityPartnerProviderName(@Nullable String securityPartnerProviderName) {
            this.securityPartnerProviderName = Input.ofNullable(securityPartnerProviderName);
            return this;
        }

        public Builder setSecurityProviderName(@Nullable Input<Either<String,SecurityProviderName>> securityProviderName) {
            this.securityProviderName = securityProviderName;
            return this;
        }

        public Builder setSecurityProviderName(@Nullable Either<String,SecurityProviderName> securityProviderName) {
            this.securityProviderName = Input.ofNullable(securityProviderName);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setVirtualHub(@Nullable Input<SubResourceArgs> virtualHub) {
            this.virtualHub = virtualHub;
            return this;
        }

        public Builder setVirtualHub(@Nullable SubResourceArgs virtualHub) {
            this.virtualHub = Input.ofNullable(virtualHub);
            return this;
        }

        public SecurityPartnerProviderArgs build() {
            return new SecurityPartnerProviderArgs(id, location, resourceGroupName, securityPartnerProviderName, securityProviderName, tags, virtualHub);
        }
    }
}
