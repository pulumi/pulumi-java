// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.inputs.AddressSpaceResponse;
import io.pulumi.azurenative.network.inputs.IpsecPolicyResponse;
import io.pulumi.azurenative.network.inputs.RadiusServerResponse;
import io.pulumi.azurenative.network.inputs.VpnClientRevokedCertificateResponse;
import io.pulumi.azurenative.network.inputs.VpnClientRootCertificateResponse;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * VpnClientConfiguration for P2S client.
 * 
 */
public final class VpnClientConfigurationResponse extends io.pulumi.resources.InvokeArgs {

    public static final VpnClientConfigurationResponse Empty = new VpnClientConfigurationResponse();

    /**
     * The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     * 
     */
    @Import(name="aadAudience")
      private final @Nullable String aadAudience;

    public Optional<String> aadAudience() {
        return this.aadAudience == null ? Optional.empty() : Optional.ofNullable(this.aadAudience);
    }

    /**
     * The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     * 
     */
    @Import(name="aadIssuer")
      private final @Nullable String aadIssuer;

    public Optional<String> aadIssuer() {
        return this.aadIssuer == null ? Optional.empty() : Optional.ofNullable(this.aadIssuer);
    }

    /**
     * The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
     * 
     */
    @Import(name="aadTenant")
      private final @Nullable String aadTenant;

    public Optional<String> aadTenant() {
        return this.aadTenant == null ? Optional.empty() : Optional.ofNullable(this.aadTenant);
    }

    /**
     * The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
     * 
     */
    @Import(name="radiusServerAddress")
      private final @Nullable String radiusServerAddress;

    public Optional<String> radiusServerAddress() {
        return this.radiusServerAddress == null ? Optional.empty() : Optional.ofNullable(this.radiusServerAddress);
    }

    /**
     * The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
     * 
     */
    @Import(name="radiusServerSecret")
      private final @Nullable String radiusServerSecret;

    public Optional<String> radiusServerSecret() {
        return this.radiusServerSecret == null ? Optional.empty() : Optional.ofNullable(this.radiusServerSecret);
    }

    /**
     * The radiusServers property for multiple radius server configuration.
     * 
     */
    @Import(name="radiusServers")
      private final @Nullable List<RadiusServerResponse> radiusServers;

    public List<RadiusServerResponse> radiusServers() {
        return this.radiusServers == null ? List.of() : this.radiusServers;
    }

    /**
     * VPN authentication types for the virtual network gateway..
     * 
     */
    @Import(name="vpnAuthenticationTypes")
      private final @Nullable List<String> vpnAuthenticationTypes;

    public List<String> vpnAuthenticationTypes() {
        return this.vpnAuthenticationTypes == null ? List.of() : this.vpnAuthenticationTypes;
    }

    /**
     * The reference to the address space resource which represents Address space for P2S VpnClient.
     * 
     */
    @Import(name="vpnClientAddressPool")
      private final @Nullable AddressSpaceResponse vpnClientAddressPool;

    public Optional<AddressSpaceResponse> vpnClientAddressPool() {
        return this.vpnClientAddressPool == null ? Optional.empty() : Optional.ofNullable(this.vpnClientAddressPool);
    }

    /**
     * VpnClientIpsecPolicies for virtual network gateway P2S client.
     * 
     */
    @Import(name="vpnClientIpsecPolicies")
      private final @Nullable List<IpsecPolicyResponse> vpnClientIpsecPolicies;

    public List<IpsecPolicyResponse> vpnClientIpsecPolicies() {
        return this.vpnClientIpsecPolicies == null ? List.of() : this.vpnClientIpsecPolicies;
    }

    /**
     * VpnClientProtocols for Virtual network gateway.
     * 
     */
    @Import(name="vpnClientProtocols")
      private final @Nullable List<String> vpnClientProtocols;

    public List<String> vpnClientProtocols() {
        return this.vpnClientProtocols == null ? List.of() : this.vpnClientProtocols;
    }

    /**
     * VpnClientRevokedCertificate for Virtual network gateway.
     * 
     */
    @Import(name="vpnClientRevokedCertificates")
      private final @Nullable List<VpnClientRevokedCertificateResponse> vpnClientRevokedCertificates;

    public List<VpnClientRevokedCertificateResponse> vpnClientRevokedCertificates() {
        return this.vpnClientRevokedCertificates == null ? List.of() : this.vpnClientRevokedCertificates;
    }

    /**
     * VpnClientRootCertificate for virtual network gateway.
     * 
     */
    @Import(name="vpnClientRootCertificates")
      private final @Nullable List<VpnClientRootCertificateResponse> vpnClientRootCertificates;

    public List<VpnClientRootCertificateResponse> vpnClientRootCertificates() {
        return this.vpnClientRootCertificates == null ? List.of() : this.vpnClientRootCertificates;
    }

    public VpnClientConfigurationResponse(
        @Nullable String aadAudience,
        @Nullable String aadIssuer,
        @Nullable String aadTenant,
        @Nullable String radiusServerAddress,
        @Nullable String radiusServerSecret,
        @Nullable List<RadiusServerResponse> radiusServers,
        @Nullable List<String> vpnAuthenticationTypes,
        @Nullable AddressSpaceResponse vpnClientAddressPool,
        @Nullable List<IpsecPolicyResponse> vpnClientIpsecPolicies,
        @Nullable List<String> vpnClientProtocols,
        @Nullable List<VpnClientRevokedCertificateResponse> vpnClientRevokedCertificates,
        @Nullable List<VpnClientRootCertificateResponse> vpnClientRootCertificates) {
        this.aadAudience = aadAudience;
        this.aadIssuer = aadIssuer;
        this.aadTenant = aadTenant;
        this.radiusServerAddress = radiusServerAddress;
        this.radiusServerSecret = radiusServerSecret;
        this.radiusServers = radiusServers;
        this.vpnAuthenticationTypes = vpnAuthenticationTypes;
        this.vpnClientAddressPool = vpnClientAddressPool;
        this.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
        this.vpnClientProtocols = vpnClientProtocols;
        this.vpnClientRevokedCertificates = vpnClientRevokedCertificates;
        this.vpnClientRootCertificates = vpnClientRootCertificates;
    }

    private VpnClientConfigurationResponse() {
        this.aadAudience = null;
        this.aadIssuer = null;
        this.aadTenant = null;
        this.radiusServerAddress = null;
        this.radiusServerSecret = null;
        this.radiusServers = List.of();
        this.vpnAuthenticationTypes = List.of();
        this.vpnClientAddressPool = null;
        this.vpnClientIpsecPolicies = List.of();
        this.vpnClientProtocols = List.of();
        this.vpnClientRevokedCertificates = List.of();
        this.vpnClientRootCertificates = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpnClientConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String aadAudience;
        private @Nullable String aadIssuer;
        private @Nullable String aadTenant;
        private @Nullable String radiusServerAddress;
        private @Nullable String radiusServerSecret;
        private @Nullable List<RadiusServerResponse> radiusServers;
        private @Nullable List<String> vpnAuthenticationTypes;
        private @Nullable AddressSpaceResponse vpnClientAddressPool;
        private @Nullable List<IpsecPolicyResponse> vpnClientIpsecPolicies;
        private @Nullable List<String> vpnClientProtocols;
        private @Nullable List<VpnClientRevokedCertificateResponse> vpnClientRevokedCertificates;
        private @Nullable List<VpnClientRootCertificateResponse> vpnClientRootCertificates;

        public Builder() {
    	      // Empty
        }

        public Builder(VpnClientConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadAudience = defaults.aadAudience;
    	      this.aadIssuer = defaults.aadIssuer;
    	      this.aadTenant = defaults.aadTenant;
    	      this.radiusServerAddress = defaults.radiusServerAddress;
    	      this.radiusServerSecret = defaults.radiusServerSecret;
    	      this.radiusServers = defaults.radiusServers;
    	      this.vpnAuthenticationTypes = defaults.vpnAuthenticationTypes;
    	      this.vpnClientAddressPool = defaults.vpnClientAddressPool;
    	      this.vpnClientIpsecPolicies = defaults.vpnClientIpsecPolicies;
    	      this.vpnClientProtocols = defaults.vpnClientProtocols;
    	      this.vpnClientRevokedCertificates = defaults.vpnClientRevokedCertificates;
    	      this.vpnClientRootCertificates = defaults.vpnClientRootCertificates;
        }

        public Builder aadAudience(@Nullable String aadAudience) {
            this.aadAudience = aadAudience;
            return this;
        }
        public Builder aadIssuer(@Nullable String aadIssuer) {
            this.aadIssuer = aadIssuer;
            return this;
        }
        public Builder aadTenant(@Nullable String aadTenant) {
            this.aadTenant = aadTenant;
            return this;
        }
        public Builder radiusServerAddress(@Nullable String radiusServerAddress) {
            this.radiusServerAddress = radiusServerAddress;
            return this;
        }
        public Builder radiusServerSecret(@Nullable String radiusServerSecret) {
            this.radiusServerSecret = radiusServerSecret;
            return this;
        }
        public Builder radiusServers(@Nullable List<RadiusServerResponse> radiusServers) {
            this.radiusServers = radiusServers;
            return this;
        }
        public Builder radiusServers(RadiusServerResponse... radiusServers) {
            return radiusServers(List.of(radiusServers));
        }
        public Builder vpnAuthenticationTypes(@Nullable List<String> vpnAuthenticationTypes) {
            this.vpnAuthenticationTypes = vpnAuthenticationTypes;
            return this;
        }
        public Builder vpnAuthenticationTypes(String... vpnAuthenticationTypes) {
            return vpnAuthenticationTypes(List.of(vpnAuthenticationTypes));
        }
        public Builder vpnClientAddressPool(@Nullable AddressSpaceResponse vpnClientAddressPool) {
            this.vpnClientAddressPool = vpnClientAddressPool;
            return this;
        }
        public Builder vpnClientIpsecPolicies(@Nullable List<IpsecPolicyResponse> vpnClientIpsecPolicies) {
            this.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
            return this;
        }
        public Builder vpnClientIpsecPolicies(IpsecPolicyResponse... vpnClientIpsecPolicies) {
            return vpnClientIpsecPolicies(List.of(vpnClientIpsecPolicies));
        }
        public Builder vpnClientProtocols(@Nullable List<String> vpnClientProtocols) {
            this.vpnClientProtocols = vpnClientProtocols;
            return this;
        }
        public Builder vpnClientProtocols(String... vpnClientProtocols) {
            return vpnClientProtocols(List.of(vpnClientProtocols));
        }
        public Builder vpnClientRevokedCertificates(@Nullable List<VpnClientRevokedCertificateResponse> vpnClientRevokedCertificates) {
            this.vpnClientRevokedCertificates = vpnClientRevokedCertificates;
            return this;
        }
        public Builder vpnClientRevokedCertificates(VpnClientRevokedCertificateResponse... vpnClientRevokedCertificates) {
            return vpnClientRevokedCertificates(List.of(vpnClientRevokedCertificates));
        }
        public Builder vpnClientRootCertificates(@Nullable List<VpnClientRootCertificateResponse> vpnClientRootCertificates) {
            this.vpnClientRootCertificates = vpnClientRootCertificates;
            return this;
        }
        public Builder vpnClientRootCertificates(VpnClientRootCertificateResponse... vpnClientRootCertificates) {
            return vpnClientRootCertificates(List.of(vpnClientRootCertificates));
        }        public VpnClientConfigurationResponse build() {
            return new VpnClientConfigurationResponse(aadAudience, aadIssuer, aadTenant, radiusServerAddress, radiusServerSecret, radiusServers, vpnAuthenticationTypes, vpnClientAddressPool, vpnClientIpsecPolicies, vpnClientProtocols, vpnClientRevokedCertificates, vpnClientRootCertificates);
        }
    }
}
