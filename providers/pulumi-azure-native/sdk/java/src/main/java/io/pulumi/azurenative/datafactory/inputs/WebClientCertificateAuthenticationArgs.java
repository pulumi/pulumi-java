// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.azurenative.datafactory.inputs.AzureKeyVaultSecretReferenceArgs;
import io.pulumi.azurenative.datafactory.inputs.SecureStringArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;


/**
 * A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.
 * 
 */
public final class WebClientCertificateAuthenticationArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebClientCertificateAuthenticationArgs Empty = new WebClientCertificateAuthenticationArgs();

    /**
     * Type of authentication used to connect to the web table source.
     * Expected value is 'ClientCertificate'.
     * 
     */
    @InputImport(name="authenticationType", required=true)
      private final Input<String> authenticationType;

    public Input<String> getAuthenticationType() {
        return this.authenticationType;
    }

    /**
     * Password for the PFX file.
     * 
     */
    @InputImport(name="password", required=true)
      private final Input<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password;

    public Input<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> getPassword() {
        return this.password;
    }

    /**
     * Base64-encoded contents of a PFX file.
     * 
     */
    @InputImport(name="pfx", required=true)
      private final Input<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> pfx;

    public Input<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> getPfx() {
        return this.pfx;
    }

    /**
     * The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
     * 
     */
    @InputImport(name="url", required=true)
      private final Input<Object> url;

    public Input<Object> getUrl() {
        return this.url;
    }

    public WebClientCertificateAuthenticationArgs(
        Input<String> authenticationType,
        Input<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password,
        Input<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> pfx,
        Input<Object> url) {
        this.authenticationType = Objects.requireNonNull(authenticationType, "expected parameter 'authenticationType' to be non-null");
        this.password = Objects.requireNonNull(password, "expected parameter 'password' to be non-null");
        this.pfx = Objects.requireNonNull(pfx, "expected parameter 'pfx' to be non-null");
        this.url = Objects.requireNonNull(url, "expected parameter 'url' to be non-null");
    }

    private WebClientCertificateAuthenticationArgs() {
        this.authenticationType = Input.empty();
        this.password = Input.empty();
        this.pfx = Input.empty();
        this.url = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebClientCertificateAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> authenticationType;
        private Input<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password;
        private Input<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> pfx;
        private Input<Object> url;

        public Builder() {
    	      // Empty
        }

        public Builder(WebClientCertificateAuthenticationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationType = defaults.authenticationType;
    	      this.password = defaults.password;
    	      this.pfx = defaults.pfx;
    	      this.url = defaults.url;
        }

        public Builder setAuthenticationType(Input<String> authenticationType) {
            this.authenticationType = Objects.requireNonNull(authenticationType);
            return this;
        }

        public Builder setAuthenticationType(String authenticationType) {
            this.authenticationType = Input.of(Objects.requireNonNull(authenticationType));
            return this;
        }

        public Builder setPassword(Input<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }

        public Builder setPassword(Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs> password) {
            this.password = Input.of(Objects.requireNonNull(password));
            return this;
        }

        public Builder setPfx(Input<Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs>> pfx) {
            this.pfx = Objects.requireNonNull(pfx);
            return this;
        }

        public Builder setPfx(Either<AzureKeyVaultSecretReferenceArgs,SecureStringArgs> pfx) {
            this.pfx = Input.of(Objects.requireNonNull(pfx));
            return this;
        }

        public Builder setUrl(Input<Object> url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }

        public Builder setUrl(Object url) {
            this.url = Input.of(Objects.requireNonNull(url));
            return this;
        }
        public WebClientCertificateAuthenticationArgs build() {
            return new WebClientCertificateAuthenticationArgs(authenticationType, password, pfx, url);
        }
    }
}
