// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Staging info for execute data flow activity.
 * 
 */
public final class DataFlowStagingInfoArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataFlowStagingInfoArgs Empty = new DataFlowStagingInfoArgs();

    /**
     * Folder path for staging blob. Type: string (or Expression with resultType string)
     * 
     */
    @Import(name="folderPath")
      private final @Nullable Output<Object> folderPath;

    public Output<Object> folderPath() {
        return this.folderPath == null ? Codegen.empty() : this.folderPath;
    }

    /**
     * Staging linked service reference.
     * 
     */
    @Import(name="linkedService")
      private final @Nullable Output<LinkedServiceReferenceArgs> linkedService;

    public Output<LinkedServiceReferenceArgs> linkedService() {
        return this.linkedService == null ? Codegen.empty() : this.linkedService;
    }

    public DataFlowStagingInfoArgs(
        @Nullable Output<Object> folderPath,
        @Nullable Output<LinkedServiceReferenceArgs> linkedService) {
        this.folderPath = folderPath;
        this.linkedService = linkedService;
    }

    private DataFlowStagingInfoArgs() {
        this.folderPath = Codegen.empty();
        this.linkedService = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataFlowStagingInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> folderPath;
        private @Nullable Output<LinkedServiceReferenceArgs> linkedService;

        public Builder() {
    	      // Empty
        }

        public Builder(DataFlowStagingInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.folderPath = defaults.folderPath;
    	      this.linkedService = defaults.linkedService;
        }

        public Builder folderPath(@Nullable Output<Object> folderPath) {
            this.folderPath = folderPath;
            return this;
        }
        public Builder folderPath(@Nullable Object folderPath) {
            this.folderPath = Codegen.ofNullable(folderPath);
            return this;
        }
        public Builder linkedService(@Nullable Output<LinkedServiceReferenceArgs> linkedService) {
            this.linkedService = linkedService;
            return this;
        }
        public Builder linkedService(@Nullable LinkedServiceReferenceArgs linkedService) {
            this.linkedService = Codegen.ofNullable(linkedService);
            return this;
        }        public DataFlowStagingInfoArgs build() {
            return new DataFlowStagingInfoArgs(folderPath, linkedService);
        }
    }
}
