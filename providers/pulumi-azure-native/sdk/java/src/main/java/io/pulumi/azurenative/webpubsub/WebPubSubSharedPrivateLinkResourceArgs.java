// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.webpubsub;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebPubSubSharedPrivateLinkResourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebPubSubSharedPrivateLinkResourceArgs Empty = new WebPubSubSharedPrivateLinkResourceArgs();

    /**
     * The group id from the provider of resource the shared private link resource is for
     * 
     */
    @Import(name="groupId", required=true)
      private final Output<String> groupId;

    public Output<String> getGroupId() {
        return this.groupId;
    }

    /**
     * The resource id of the resource the shared private link resource is for
     * 
     */
    @Import(name="privateLinkResourceId", required=true)
      private final Output<String> privateLinkResourceId;

    public Output<String> getPrivateLinkResourceId() {
        return this.privateLinkResourceId;
    }

    /**
     * The request message for requesting approval of the shared private link resource
     * 
     */
    @Import(name="requestMessage")
      private final @Nullable Output<String> requestMessage;

    public Output<String> getRequestMessage() {
        return this.requestMessage == null ? Codegen.empty() : this.requestMessage;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="resourceName", required=true)
      private final Output<String> resourceName;

    public Output<String> getPropResourceName() {
        return this.resourceName;
    }

    /**
     * The name of the shared private link resource
     * 
     */
    @Import(name="sharedPrivateLinkResourceName")
      private final @Nullable Output<String> sharedPrivateLinkResourceName;

    public Output<String> getSharedPrivateLinkResourceName() {
        return this.sharedPrivateLinkResourceName == null ? Codegen.empty() : this.sharedPrivateLinkResourceName;
    }

    public WebPubSubSharedPrivateLinkResourceArgs(
        Output<String> groupId,
        Output<String> privateLinkResourceId,
        @Nullable Output<String> requestMessage,
        Output<String> resourceGroupName,
        Output<String> resourceName,
        @Nullable Output<String> sharedPrivateLinkResourceName) {
        this.groupId = Objects.requireNonNull(groupId, "expected parameter 'groupId' to be non-null");
        this.privateLinkResourceId = Objects.requireNonNull(privateLinkResourceId, "expected parameter 'privateLinkResourceId' to be non-null");
        this.requestMessage = requestMessage;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = Objects.requireNonNull(resourceName, "expected parameter 'resourceName' to be non-null");
        this.sharedPrivateLinkResourceName = sharedPrivateLinkResourceName;
    }

    private WebPubSubSharedPrivateLinkResourceArgs() {
        this.groupId = Codegen.empty();
        this.privateLinkResourceId = Codegen.empty();
        this.requestMessage = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.resourceName = Codegen.empty();
        this.sharedPrivateLinkResourceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebPubSubSharedPrivateLinkResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> groupId;
        private Output<String> privateLinkResourceId;
        private @Nullable Output<String> requestMessage;
        private Output<String> resourceGroupName;
        private Output<String> resourceName;
        private @Nullable Output<String> sharedPrivateLinkResourceName;

        public Builder() {
    	      // Empty
        }

        public Builder(WebPubSubSharedPrivateLinkResourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupId = defaults.groupId;
    	      this.privateLinkResourceId = defaults.privateLinkResourceId;
    	      this.requestMessage = defaults.requestMessage;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.sharedPrivateLinkResourceName = defaults.sharedPrivateLinkResourceName;
        }

        public Builder groupId(Output<String> groupId) {
            this.groupId = Objects.requireNonNull(groupId);
            return this;
        }
        public Builder groupId(String groupId) {
            this.groupId = Output.of(Objects.requireNonNull(groupId));
            return this;
        }
        public Builder privateLinkResourceId(Output<String> privateLinkResourceId) {
            this.privateLinkResourceId = Objects.requireNonNull(privateLinkResourceId);
            return this;
        }
        public Builder privateLinkResourceId(String privateLinkResourceId) {
            this.privateLinkResourceId = Output.of(Objects.requireNonNull(privateLinkResourceId));
            return this;
        }
        public Builder requestMessage(@Nullable Output<String> requestMessage) {
            this.requestMessage = requestMessage;
            return this;
        }
        public Builder requestMessage(@Nullable String requestMessage) {
            this.requestMessage = Codegen.ofNullable(requestMessage);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder resourceName(Output<String> resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        public Builder resourceName(String resourceName) {
            this.resourceName = Output.of(Objects.requireNonNull(resourceName));
            return this;
        }
        public Builder sharedPrivateLinkResourceName(@Nullable Output<String> sharedPrivateLinkResourceName) {
            this.sharedPrivateLinkResourceName = sharedPrivateLinkResourceName;
            return this;
        }
        public Builder sharedPrivateLinkResourceName(@Nullable String sharedPrivateLinkResourceName) {
            this.sharedPrivateLinkResourceName = Codegen.ofNullable(sharedPrivateLinkResourceName);
            return this;
        }        public WebPubSubSharedPrivateLinkResourceArgs build() {
            return new WebPubSubSharedPrivateLinkResourceArgs(groupId, privateLinkResourceId, requestMessage, resourceGroupName, resourceName, sharedPrivateLinkResourceName);
        }
    }
}
