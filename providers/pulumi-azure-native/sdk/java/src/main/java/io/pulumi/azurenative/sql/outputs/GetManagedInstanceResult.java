// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql.outputs;

import io.pulumi.azurenative.sql.outputs.ManagedInstanceExternalAdministratorResponse;
import io.pulumi.azurenative.sql.outputs.ManagedInstancePecPropertyResponse;
import io.pulumi.azurenative.sql.outputs.ResourceIdentityResponse;
import io.pulumi.azurenative.sql.outputs.SkuResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstanceResult {
    /**
     * Administrator username for the managed instance. Can only be specified when the managed instance is being created (and is required for creation).
     * 
     */
    private final @Nullable String administratorLogin;
    /**
     * The Azure Active Directory administrator of the server.
     * 
     */
    private final @Nullable ManagedInstanceExternalAdministratorResponse administrators;
    /**
     * Collation of the managed instance.
     * 
     */
    private final @Nullable String collation;
    /**
     * The Dns Zone that the managed instance is in.
     * 
     */
    private final String dnsZone;
    /**
     * The fully qualified domain name of the managed instance.
     * 
     */
    private final String fullyQualifiedDomainName;
    /**
     * Resource ID.
     * 
     */
    private final String id;
    /**
     * The Azure Active Directory identity of the managed instance.
     * 
     */
    private final @Nullable ResourceIdentityResponse identity;
    /**
     * The Id of the instance pool this managed server belongs to.
     * 
     */
    private final @Nullable String instancePoolId;
    /**
     * A CMK URI of the key to use for encryption.
     * 
     */
    private final @Nullable String keyId;
    /**
     * The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses).
     * 
     */
    private final @Nullable String licenseType;
    /**
     * Resource location.
     * 
     */
    private final String location;
    /**
     * Specifies maintenance configuration id to apply to this managed instance.
     * 
     */
    private final @Nullable String maintenanceConfigurationId;
    /**
     * Minimal TLS version. Allowed values: 'None', '1.0', '1.1', '1.2'
     * 
     */
    private final @Nullable String minimalTlsVersion;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * The resource id of a user assigned identity to be used by default.
     * 
     */
    private final @Nullable String primaryUserAssignedIdentityId;
    /**
     * List of private endpoint connections on a managed instance.
     * 
     */
    private final List<ManagedInstancePecPropertyResponse> privateEndpointConnections;
    private final String provisioningState;
    /**
     * Connection type used for connecting to the instance.
     * 
     */
    private final @Nullable String proxyOverride;
    /**
     * Whether or not the public data endpoint is enabled.
     * 
     */
    private final @Nullable Boolean publicDataEndpointEnabled;
    /**
     * Managed instance SKU. Allowed values for sku.name: GP_Gen4, GP_Gen5, BC_Gen4, BC_Gen5
     * 
     */
    private final @Nullable SkuResponse sku;
    /**
     * The state of the managed instance.
     * 
     */
    private final String state;
    /**
     * The storage account type used to store backups for this instance. The options are LRS (LocallyRedundantStorage), ZRS (ZoneRedundantStorage) and GRS (GeoRedundantStorage)
     * 
     */
    private final @Nullable String storageAccountType;
    /**
     * Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only.
     * 
     */
    private final @Nullable Integer storageSizeInGB;
    /**
     * Subnet resource ID for the managed instance.
     * 
     */
    private final @Nullable String subnetId;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Id of the timezone. Allowed values are timezones supported by Windows.
     * Windows keeps details on supported timezones, including the id, in registry under
     * KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
     * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM sys.time_zone_info.
     * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
     * An example of valid timezone id is "Pacific Standard Time" or "W. Europe Standard Time".
     * 
     */
    private final @Nullable String timezoneId;
    /**
     * Resource type.
     * 
     */
    private final String type;
    /**
     * The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
     * 
     */
    private final @Nullable Integer vCores;
    /**
     * Whether or not the multi-az is enabled.
     * 
     */
    private final @Nullable Boolean zoneRedundant;

    @CustomType.Constructor
    private GetManagedInstanceResult(
        @CustomType.Parameter("administratorLogin") @Nullable String administratorLogin,
        @CustomType.Parameter("administrators") @Nullable ManagedInstanceExternalAdministratorResponse administrators,
        @CustomType.Parameter("collation") @Nullable String collation,
        @CustomType.Parameter("dnsZone") String dnsZone,
        @CustomType.Parameter("fullyQualifiedDomainName") String fullyQualifiedDomainName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identity") @Nullable ResourceIdentityResponse identity,
        @CustomType.Parameter("instancePoolId") @Nullable String instancePoolId,
        @CustomType.Parameter("keyId") @Nullable String keyId,
        @CustomType.Parameter("licenseType") @Nullable String licenseType,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("maintenanceConfigurationId") @Nullable String maintenanceConfigurationId,
        @CustomType.Parameter("minimalTlsVersion") @Nullable String minimalTlsVersion,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("primaryUserAssignedIdentityId") @Nullable String primaryUserAssignedIdentityId,
        @CustomType.Parameter("privateEndpointConnections") List<ManagedInstancePecPropertyResponse> privateEndpointConnections,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("proxyOverride") @Nullable String proxyOverride,
        @CustomType.Parameter("publicDataEndpointEnabled") @Nullable Boolean publicDataEndpointEnabled,
        @CustomType.Parameter("sku") @Nullable SkuResponse sku,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("storageAccountType") @Nullable String storageAccountType,
        @CustomType.Parameter("storageSizeInGB") @Nullable Integer storageSizeInGB,
        @CustomType.Parameter("subnetId") @Nullable String subnetId,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("timezoneId") @Nullable String timezoneId,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("vCores") @Nullable Integer vCores,
        @CustomType.Parameter("zoneRedundant") @Nullable Boolean zoneRedundant) {
        this.administratorLogin = administratorLogin;
        this.administrators = administrators;
        this.collation = collation;
        this.dnsZone = dnsZone;
        this.fullyQualifiedDomainName = fullyQualifiedDomainName;
        this.id = id;
        this.identity = identity;
        this.instancePoolId = instancePoolId;
        this.keyId = keyId;
        this.licenseType = licenseType;
        this.location = location;
        this.maintenanceConfigurationId = maintenanceConfigurationId;
        this.minimalTlsVersion = minimalTlsVersion;
        this.name = name;
        this.primaryUserAssignedIdentityId = primaryUserAssignedIdentityId;
        this.privateEndpointConnections = privateEndpointConnections;
        this.provisioningState = provisioningState;
        this.proxyOverride = proxyOverride;
        this.publicDataEndpointEnabled = publicDataEndpointEnabled;
        this.sku = sku;
        this.state = state;
        this.storageAccountType = storageAccountType;
        this.storageSizeInGB = storageSizeInGB;
        this.subnetId = subnetId;
        this.tags = tags;
        this.timezoneId = timezoneId;
        this.type = type;
        this.vCores = vCores;
        this.zoneRedundant = zoneRedundant;
    }

    /**
     * Administrator username for the managed instance. Can only be specified when the managed instance is being created (and is required for creation).
     * 
    */
    public Optional<String> administratorLogin() {
        return Optional.ofNullable(this.administratorLogin);
    }
    /**
     * The Azure Active Directory administrator of the server.
     * 
    */
    public Optional<ManagedInstanceExternalAdministratorResponse> administrators() {
        return Optional.ofNullable(this.administrators);
    }
    /**
     * Collation of the managed instance.
     * 
    */
    public Optional<String> collation() {
        return Optional.ofNullable(this.collation);
    }
    /**
     * The Dns Zone that the managed instance is in.
     * 
    */
    public String dnsZone() {
        return this.dnsZone;
    }
    /**
     * The fully qualified domain name of the managed instance.
     * 
    */
    public String fullyQualifiedDomainName() {
        return this.fullyQualifiedDomainName;
    }
    /**
     * Resource ID.
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * The Azure Active Directory identity of the managed instance.
     * 
    */
    public Optional<ResourceIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * The Id of the instance pool this managed server belongs to.
     * 
    */
    public Optional<String> instancePoolId() {
        return Optional.ofNullable(this.instancePoolId);
    }
    /**
     * A CMK URI of the key to use for encryption.
     * 
    */
    public Optional<String> keyId() {
        return Optional.ofNullable(this.keyId);
    }
    /**
     * The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses).
     * 
    */
    public Optional<String> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }
    /**
     * Resource location.
     * 
    */
    public String location() {
        return this.location;
    }
    /**
     * Specifies maintenance configuration id to apply to this managed instance.
     * 
    */
    public Optional<String> maintenanceConfigurationId() {
        return Optional.ofNullable(this.maintenanceConfigurationId);
    }
    /**
     * Minimal TLS version. Allowed values: 'None', '1.0', '1.1', '1.2'
     * 
    */
    public Optional<String> minimalTlsVersion() {
        return Optional.ofNullable(this.minimalTlsVersion);
    }
    /**
     * Resource name.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * The resource id of a user assigned identity to be used by default.
     * 
    */
    public Optional<String> primaryUserAssignedIdentityId() {
        return Optional.ofNullable(this.primaryUserAssignedIdentityId);
    }
    /**
     * List of private endpoint connections on a managed instance.
     * 
    */
    public List<ManagedInstancePecPropertyResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * Connection type used for connecting to the instance.
     * 
    */
    public Optional<String> proxyOverride() {
        return Optional.ofNullable(this.proxyOverride);
    }
    /**
     * Whether or not the public data endpoint is enabled.
     * 
    */
    public Optional<Boolean> publicDataEndpointEnabled() {
        return Optional.ofNullable(this.publicDataEndpointEnabled);
    }
    /**
     * Managed instance SKU. Allowed values for sku.name: GP_Gen4, GP_Gen5, BC_Gen4, BC_Gen5
     * 
    */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * The state of the managed instance.
     * 
    */
    public String state() {
        return this.state;
    }
    /**
     * The storage account type used to store backups for this instance. The options are LRS (LocallyRedundantStorage), ZRS (ZoneRedundantStorage) and GRS (GeoRedundantStorage)
     * 
    */
    public Optional<String> storageAccountType() {
        return Optional.ofNullable(this.storageAccountType);
    }
    /**
     * Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only.
     * 
    */
    public Optional<Integer> storageSizeInGB() {
        return Optional.ofNullable(this.storageSizeInGB);
    }
    /**
     * Subnet resource ID for the managed instance.
     * 
    */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Id of the timezone. Allowed values are timezones supported by Windows.
     * Windows keeps details on supported timezones, including the id, in registry under
     * KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
     * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM sys.time_zone_info.
     * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
     * An example of valid timezone id is "Pacific Standard Time" or "W. Europe Standard Time".
     * 
    */
    public Optional<String> timezoneId() {
        return Optional.ofNullable(this.timezoneId);
    }
    /**
     * Resource type.
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
     * 
    */
    public Optional<Integer> vCores() {
        return Optional.ofNullable(this.vCores);
    }
    /**
     * Whether or not the multi-az is enabled.
     * 
    */
    public Optional<Boolean> zoneRedundant() {
        return Optional.ofNullable(this.zoneRedundant);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String administratorLogin;
        private @Nullable ManagedInstanceExternalAdministratorResponse administrators;
        private @Nullable String collation;
        private String dnsZone;
        private String fullyQualifiedDomainName;
        private String id;
        private @Nullable ResourceIdentityResponse identity;
        private @Nullable String instancePoolId;
        private @Nullable String keyId;
        private @Nullable String licenseType;
        private String location;
        private @Nullable String maintenanceConfigurationId;
        private @Nullable String minimalTlsVersion;
        private String name;
        private @Nullable String primaryUserAssignedIdentityId;
        private List<ManagedInstancePecPropertyResponse> privateEndpointConnections;
        private String provisioningState;
        private @Nullable String proxyOverride;
        private @Nullable Boolean publicDataEndpointEnabled;
        private @Nullable SkuResponse sku;
        private String state;
        private @Nullable String storageAccountType;
        private @Nullable Integer storageSizeInGB;
        private @Nullable String subnetId;
        private @Nullable Map<String,String> tags;
        private @Nullable String timezoneId;
        private String type;
        private @Nullable Integer vCores;
        private @Nullable Boolean zoneRedundant;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administratorLogin = defaults.administratorLogin;
    	      this.administrators = defaults.administrators;
    	      this.collation = defaults.collation;
    	      this.dnsZone = defaults.dnsZone;
    	      this.fullyQualifiedDomainName = defaults.fullyQualifiedDomainName;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.instancePoolId = defaults.instancePoolId;
    	      this.keyId = defaults.keyId;
    	      this.licenseType = defaults.licenseType;
    	      this.location = defaults.location;
    	      this.maintenanceConfigurationId = defaults.maintenanceConfigurationId;
    	      this.minimalTlsVersion = defaults.minimalTlsVersion;
    	      this.name = defaults.name;
    	      this.primaryUserAssignedIdentityId = defaults.primaryUserAssignedIdentityId;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.proxyOverride = defaults.proxyOverride;
    	      this.publicDataEndpointEnabled = defaults.publicDataEndpointEnabled;
    	      this.sku = defaults.sku;
    	      this.state = defaults.state;
    	      this.storageAccountType = defaults.storageAccountType;
    	      this.storageSizeInGB = defaults.storageSizeInGB;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.timezoneId = defaults.timezoneId;
    	      this.type = defaults.type;
    	      this.vCores = defaults.vCores;
    	      this.zoneRedundant = defaults.zoneRedundant;
        }

        public Builder administratorLogin(@Nullable String administratorLogin) {
            this.administratorLogin = administratorLogin;
            return this;
        }
        public Builder administrators(@Nullable ManagedInstanceExternalAdministratorResponse administrators) {
            this.administrators = administrators;
            return this;
        }
        public Builder collation(@Nullable String collation) {
            this.collation = collation;
            return this;
        }
        public Builder dnsZone(String dnsZone) {
            this.dnsZone = Objects.requireNonNull(dnsZone);
            return this;
        }
        public Builder fullyQualifiedDomainName(String fullyQualifiedDomainName) {
            this.fullyQualifiedDomainName = Objects.requireNonNull(fullyQualifiedDomainName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identity(@Nullable ResourceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        public Builder instancePoolId(@Nullable String instancePoolId) {
            this.instancePoolId = instancePoolId;
            return this;
        }
        public Builder keyId(@Nullable String keyId) {
            this.keyId = keyId;
            return this;
        }
        public Builder licenseType(@Nullable String licenseType) {
            this.licenseType = licenseType;
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder maintenanceConfigurationId(@Nullable String maintenanceConfigurationId) {
            this.maintenanceConfigurationId = maintenanceConfigurationId;
            return this;
        }
        public Builder minimalTlsVersion(@Nullable String minimalTlsVersion) {
            this.minimalTlsVersion = minimalTlsVersion;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder primaryUserAssignedIdentityId(@Nullable String primaryUserAssignedIdentityId) {
            this.primaryUserAssignedIdentityId = primaryUserAssignedIdentityId;
            return this;
        }
        public Builder privateEndpointConnections(List<ManagedInstancePecPropertyResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }
        public Builder privateEndpointConnections(ManagedInstancePecPropertyResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder proxyOverride(@Nullable String proxyOverride) {
            this.proxyOverride = proxyOverride;
            return this;
        }
        public Builder publicDataEndpointEnabled(@Nullable Boolean publicDataEndpointEnabled) {
            this.publicDataEndpointEnabled = publicDataEndpointEnabled;
            return this;
        }
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder storageAccountType(@Nullable String storageAccountType) {
            this.storageAccountType = storageAccountType;
            return this;
        }
        public Builder storageSizeInGB(@Nullable Integer storageSizeInGB) {
            this.storageSizeInGB = storageSizeInGB;
            return this;
        }
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder timezoneId(@Nullable String timezoneId) {
            this.timezoneId = timezoneId;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder vCores(@Nullable Integer vCores) {
            this.vCores = vCores;
            return this;
        }
        public Builder zoneRedundant(@Nullable Boolean zoneRedundant) {
            this.zoneRedundant = zoneRedundant;
            return this;
        }        public GetManagedInstanceResult build() {
            return new GetManagedInstanceResult(administratorLogin, administrators, collation, dnsZone, fullyQualifiedDomainName, id, identity, instancePoolId, keyId, licenseType, location, maintenanceConfigurationId, minimalTlsVersion, name, primaryUserAssignedIdentityId, privateEndpointConnections, provisioningState, proxyOverride, publicDataEndpointEnabled, sku, state, storageAccountType, storageSizeInGB, subnetId, tags, timezoneId, type, vCores, zoneRedundant);
        }
    }
}
