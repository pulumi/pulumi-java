// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation;

import io.pulumi.azurenative.automation.inputs.RunbookAssociationPropertyArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebhookArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebhookArgs Empty = new WebhookArgs();

    /**
     * The name of the automation account.
     * 
     */
    @Import(name="automationAccountName", required=true)
      private final Output<String> automationAccountName;

    public Output<String> getAutomationAccountName() {
        return this.automationAccountName;
    }

    /**
     * Gets or sets the expiry time.
     * 
     */
    @Import(name="expiryTime")
      private final @Nullable Output<String> expiryTime;

    public Output<String> getExpiryTime() {
        return this.expiryTime == null ? Codegen.empty() : this.expiryTime;
    }

    /**
     * Gets or sets the value of the enabled flag of webhook.
     * 
     */
    @Import(name="isEnabled")
      private final @Nullable Output<Boolean> isEnabled;

    public Output<Boolean> getIsEnabled() {
        return this.isEnabled == null ? Codegen.empty() : this.isEnabled;
    }

    /**
     * Gets or sets the name of the webhook.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    /**
     * Gets or sets the parameters of the job.
     * 
     */
    @Import(name="parameters")
      private final @Nullable Output<Map<String,String>> parameters;

    public Output<Map<String,String>> getParameters() {
        return this.parameters == null ? Codegen.empty() : this.parameters;
    }

    /**
     * Name of an Azure Resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets the name of the hybrid worker group the webhook job will run on.
     * 
     */
    @Import(name="runOn")
      private final @Nullable Output<String> runOn;

    public Output<String> getRunOn() {
        return this.runOn == null ? Codegen.empty() : this.runOn;
    }

    /**
     * Gets or sets the runbook.
     * 
     */
    @Import(name="runbook")
      private final @Nullable Output<RunbookAssociationPropertyArgs> runbook;

    public Output<RunbookAssociationPropertyArgs> getRunbook() {
        return this.runbook == null ? Codegen.empty() : this.runbook;
    }

    /**
     * Gets or sets the uri.
     * 
     */
    @Import(name="uri")
      private final @Nullable Output<String> uri;

    public Output<String> getUri() {
        return this.uri == null ? Codegen.empty() : this.uri;
    }

    /**
     * The webhook name.
     * 
     */
    @Import(name="webhookName")
      private final @Nullable Output<String> webhookName;

    public Output<String> getWebhookName() {
        return this.webhookName == null ? Codegen.empty() : this.webhookName;
    }

    public WebhookArgs(
        Output<String> automationAccountName,
        @Nullable Output<String> expiryTime,
        @Nullable Output<Boolean> isEnabled,
        Output<String> name,
        @Nullable Output<Map<String,String>> parameters,
        Output<String> resourceGroupName,
        @Nullable Output<String> runOn,
        @Nullable Output<RunbookAssociationPropertyArgs> runbook,
        @Nullable Output<String> uri,
        @Nullable Output<String> webhookName) {
        this.automationAccountName = Objects.requireNonNull(automationAccountName, "expected parameter 'automationAccountName' to be non-null");
        this.expiryTime = expiryTime;
        this.isEnabled = isEnabled;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.parameters = parameters;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.runOn = runOn;
        this.runbook = runbook;
        this.uri = uri;
        this.webhookName = webhookName;
    }

    private WebhookArgs() {
        this.automationAccountName = Codegen.empty();
        this.expiryTime = Codegen.empty();
        this.isEnabled = Codegen.empty();
        this.name = Codegen.empty();
        this.parameters = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.runOn = Codegen.empty();
        this.runbook = Codegen.empty();
        this.uri = Codegen.empty();
        this.webhookName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebhookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> automationAccountName;
        private @Nullable Output<String> expiryTime;
        private @Nullable Output<Boolean> isEnabled;
        private Output<String> name;
        private @Nullable Output<Map<String,String>> parameters;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> runOn;
        private @Nullable Output<RunbookAssociationPropertyArgs> runbook;
        private @Nullable Output<String> uri;
        private @Nullable Output<String> webhookName;

        public Builder() {
    	      // Empty
        }

        public Builder(WebhookArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automationAccountName = defaults.automationAccountName;
    	      this.expiryTime = defaults.expiryTime;
    	      this.isEnabled = defaults.isEnabled;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.runOn = defaults.runOn;
    	      this.runbook = defaults.runbook;
    	      this.uri = defaults.uri;
    	      this.webhookName = defaults.webhookName;
        }

        public Builder automationAccountName(Output<String> automationAccountName) {
            this.automationAccountName = Objects.requireNonNull(automationAccountName);
            return this;
        }
        public Builder automationAccountName(String automationAccountName) {
            this.automationAccountName = Output.of(Objects.requireNonNull(automationAccountName));
            return this;
        }
        public Builder expiryTime(@Nullable Output<String> expiryTime) {
            this.expiryTime = expiryTime;
            return this;
        }
        public Builder expiryTime(@Nullable String expiryTime) {
            this.expiryTime = Codegen.ofNullable(expiryTime);
            return this;
        }
        public Builder isEnabled(@Nullable Output<Boolean> isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }
        public Builder isEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = Codegen.ofNullable(isEnabled);
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(@Nullable Map<String,String> parameters) {
            this.parameters = Codegen.ofNullable(parameters);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder runOn(@Nullable Output<String> runOn) {
            this.runOn = runOn;
            return this;
        }
        public Builder runOn(@Nullable String runOn) {
            this.runOn = Codegen.ofNullable(runOn);
            return this;
        }
        public Builder runbook(@Nullable Output<RunbookAssociationPropertyArgs> runbook) {
            this.runbook = runbook;
            return this;
        }
        public Builder runbook(@Nullable RunbookAssociationPropertyArgs runbook) {
            this.runbook = Codegen.ofNullable(runbook);
            return this;
        }
        public Builder uri(@Nullable Output<String> uri) {
            this.uri = uri;
            return this;
        }
        public Builder uri(@Nullable String uri) {
            this.uri = Codegen.ofNullable(uri);
            return this;
        }
        public Builder webhookName(@Nullable Output<String> webhookName) {
            this.webhookName = webhookName;
            return this;
        }
        public Builder webhookName(@Nullable String webhookName) {
            this.webhookName = Codegen.ofNullable(webhookName);
            return this;
        }        public WebhookArgs build() {
            return new WebhookArgs(automationAccountName, expiryTime, isEnabled, name, parameters, resourceGroupName, runOn, runbook, uri, webhookName);
        }
    }
}
