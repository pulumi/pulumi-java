// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkspaceSettingArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkspaceSettingArgs Empty = new WorkspaceSettingArgs();

    /**
     * All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope
     * 
     */
    @InputImport(name="scope", required=true)
      private final Input<String> scope;

    public Input<String> getScope() {
        return this.scope;
    }

    /**
     * The full Azure ID of the workspace to save the data in
     * 
     */
    @InputImport(name="workspaceId", required=true)
      private final Input<String> workspaceId;

    public Input<String> getWorkspaceId() {
        return this.workspaceId;
    }

    /**
     * Name of the security setting
     * 
     */
    @InputImport(name="workspaceSettingName")
      private final @Nullable Input<String> workspaceSettingName;

    public Input<String> getWorkspaceSettingName() {
        return this.workspaceSettingName == null ? Input.empty() : this.workspaceSettingName;
    }

    public WorkspaceSettingArgs(
        Input<String> scope,
        Input<String> workspaceId,
        @Nullable Input<String> workspaceSettingName) {
        this.scope = Objects.requireNonNull(scope, "expected parameter 'scope' to be non-null");
        this.workspaceId = Objects.requireNonNull(workspaceId, "expected parameter 'workspaceId' to be non-null");
        this.workspaceSettingName = workspaceSettingName;
    }

    private WorkspaceSettingArgs() {
        this.scope = Input.empty();
        this.workspaceId = Input.empty();
        this.workspaceSettingName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> scope;
        private Input<String> workspaceId;
        private @Nullable Input<String> workspaceSettingName;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkspaceSettingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scope = defaults.scope;
    	      this.workspaceId = defaults.workspaceId;
    	      this.workspaceSettingName = defaults.workspaceSettingName;
        }

        public Builder scope(Input<String> scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }

        public Builder scope(String scope) {
            this.scope = Input.of(Objects.requireNonNull(scope));
            return this;
        }

        public Builder workspaceId(Input<String> workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Input.of(Objects.requireNonNull(workspaceId));
            return this;
        }

        public Builder workspaceSettingName(@Nullable Input<String> workspaceSettingName) {
            this.workspaceSettingName = workspaceSettingName;
            return this;
        }

        public Builder workspaceSettingName(@Nullable String workspaceSettingName) {
            this.workspaceSettingName = Input.ofNullable(workspaceSettingName);
            return this;
        }
        public WorkspaceSettingArgs build() {
            return new WorkspaceSettingArgs(scope, workspaceId, workspaceSettingName);
        }
    }
}
