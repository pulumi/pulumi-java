// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security;

import io.pulumi.azurenative.security.inputs.SecurityContactPropertiesAlertNotificationsArgs;
import io.pulumi.azurenative.security.inputs.SecurityContactPropertiesNotificationsByRoleArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SecurityContactArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecurityContactArgs Empty = new SecurityContactArgs();

    /**
     * Defines whether to send email notifications about new security alerts
     * 
     */
    @Import(name="alertNotifications")
      private final @Nullable Output<SecurityContactPropertiesAlertNotificationsArgs> alertNotifications;

    public Output<SecurityContactPropertiesAlertNotificationsArgs> getAlertNotifications() {
        return this.alertNotifications == null ? Codegen.empty() : this.alertNotifications;
    }

    /**
     * List of email addresses which will get notifications from Azure Security Center by the configurations defined in this security contact.
     * 
     */
    @Import(name="emails")
      private final @Nullable Output<String> emails;

    public Output<String> getEmails() {
        return this.emails == null ? Codegen.empty() : this.emails;
    }

    /**
     * Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
     * 
     */
    @Import(name="notificationsByRole")
      private final @Nullable Output<SecurityContactPropertiesNotificationsByRoleArgs> notificationsByRole;

    public Output<SecurityContactPropertiesNotificationsByRoleArgs> getNotificationsByRole() {
        return this.notificationsByRole == null ? Codegen.empty() : this.notificationsByRole;
    }

    /**
     * The security contact's phone number
     * 
     */
    @Import(name="phone")
      private final @Nullable Output<String> phone;

    public Output<String> getPhone() {
        return this.phone == null ? Codegen.empty() : this.phone;
    }

    /**
     * Name of the security contact object
     * 
     */
    @Import(name="securityContactName")
      private final @Nullable Output<String> securityContactName;

    public Output<String> getSecurityContactName() {
        return this.securityContactName == null ? Codegen.empty() : this.securityContactName;
    }

    public SecurityContactArgs(
        @Nullable Output<SecurityContactPropertiesAlertNotificationsArgs> alertNotifications,
        @Nullable Output<String> emails,
        @Nullable Output<SecurityContactPropertiesNotificationsByRoleArgs> notificationsByRole,
        @Nullable Output<String> phone,
        @Nullable Output<String> securityContactName) {
        this.alertNotifications = alertNotifications;
        this.emails = emails;
        this.notificationsByRole = notificationsByRole;
        this.phone = phone;
        this.securityContactName = securityContactName;
    }

    private SecurityContactArgs() {
        this.alertNotifications = Codegen.empty();
        this.emails = Codegen.empty();
        this.notificationsByRole = Codegen.empty();
        this.phone = Codegen.empty();
        this.securityContactName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityContactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SecurityContactPropertiesAlertNotificationsArgs> alertNotifications;
        private @Nullable Output<String> emails;
        private @Nullable Output<SecurityContactPropertiesNotificationsByRoleArgs> notificationsByRole;
        private @Nullable Output<String> phone;
        private @Nullable Output<String> securityContactName;

        public Builder() {
    	      // Empty
        }

        public Builder(SecurityContactArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertNotifications = defaults.alertNotifications;
    	      this.emails = defaults.emails;
    	      this.notificationsByRole = defaults.notificationsByRole;
    	      this.phone = defaults.phone;
    	      this.securityContactName = defaults.securityContactName;
        }

        public Builder alertNotifications(@Nullable Output<SecurityContactPropertiesAlertNotificationsArgs> alertNotifications) {
            this.alertNotifications = alertNotifications;
            return this;
        }
        public Builder alertNotifications(@Nullable SecurityContactPropertiesAlertNotificationsArgs alertNotifications) {
            this.alertNotifications = Codegen.ofNullable(alertNotifications);
            return this;
        }
        public Builder emails(@Nullable Output<String> emails) {
            this.emails = emails;
            return this;
        }
        public Builder emails(@Nullable String emails) {
            this.emails = Codegen.ofNullable(emails);
            return this;
        }
        public Builder notificationsByRole(@Nullable Output<SecurityContactPropertiesNotificationsByRoleArgs> notificationsByRole) {
            this.notificationsByRole = notificationsByRole;
            return this;
        }
        public Builder notificationsByRole(@Nullable SecurityContactPropertiesNotificationsByRoleArgs notificationsByRole) {
            this.notificationsByRole = Codegen.ofNullable(notificationsByRole);
            return this;
        }
        public Builder phone(@Nullable Output<String> phone) {
            this.phone = phone;
            return this;
        }
        public Builder phone(@Nullable String phone) {
            this.phone = Codegen.ofNullable(phone);
            return this;
        }
        public Builder securityContactName(@Nullable Output<String> securityContactName) {
            this.securityContactName = securityContactName;
            return this;
        }
        public Builder securityContactName(@Nullable String securityContactName) {
            this.securityContactName = Codegen.ofNullable(securityContactName);
            return this;
        }        public SecurityContactArgs build() {
            return new SecurityContactArgs(alertNotifications, emails, notificationsByRole, phone, securityContactName);
        }
    }
}
