// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.synapse.outputs;

import io.pulumi.azurenative.synapse.outputs.SkuResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetSqlPoolResult {
    private final @Nullable String collation;
    private final @Nullable String createMode;
    private final @Nullable String creationDate;
    private final String id;
    private final String location;
    private final @Nullable Double maxSizeBytes;
    private final String name;
    private final @Nullable String provisioningState;
    private final @Nullable String recoverableDatabaseId;
    private final @Nullable String restorePointInTime;
    private final @Nullable SkuResponse sku;
    private final @Nullable String sourceDatabaseId;
    private final @Nullable String status;
    private final @Nullable String storageAccountType;
    private final @Nullable Map<String,String> tags;
    private final String type;

    @OutputCustomType.Constructor({"collation","createMode","creationDate","id","location","maxSizeBytes","name","provisioningState","recoverableDatabaseId","restorePointInTime","sku","sourceDatabaseId","status","storageAccountType","tags","type"})
    private GetSqlPoolResult(
        @Nullable String collation,
        @Nullable String createMode,
        @Nullable String creationDate,
        String id,
        String location,
        @Nullable Double maxSizeBytes,
        String name,
        @Nullable String provisioningState,
        @Nullable String recoverableDatabaseId,
        @Nullable String restorePointInTime,
        @Nullable SkuResponse sku,
        @Nullable String sourceDatabaseId,
        @Nullable String status,
        @Nullable String storageAccountType,
        @Nullable Map<String,String> tags,
        String type) {
        this.collation = collation;
        this.createMode = createMode;
        this.creationDate = creationDate;
        this.id = Objects.requireNonNull(id);
        this.location = Objects.requireNonNull(location);
        this.maxSizeBytes = maxSizeBytes;
        this.name = Objects.requireNonNull(name);
        this.provisioningState = provisioningState;
        this.recoverableDatabaseId = recoverableDatabaseId;
        this.restorePointInTime = restorePointInTime;
        this.sku = sku;
        this.sourceDatabaseId = sourceDatabaseId;
        this.status = status;
        this.storageAccountType = storageAccountType;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getCollation() {
        return Optional.ofNullable(this.collation);
    }
    public Optional<String> getCreateMode() {
        return Optional.ofNullable(this.createMode);
    }
    public Optional<String> getCreationDate() {
        return Optional.ofNullable(this.creationDate);
    }
    public String getId() {
        return this.id;
    }
    public String getLocation() {
        return this.location;
    }
    public Optional<Double> getMaxSizeBytes() {
        return Optional.ofNullable(this.maxSizeBytes);
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getProvisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }
    public Optional<String> getRecoverableDatabaseId() {
        return Optional.ofNullable(this.recoverableDatabaseId);
    }
    public Optional<String> getRestorePointInTime() {
        return Optional.ofNullable(this.restorePointInTime);
    }
    public Optional<SkuResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    public Optional<String> getSourceDatabaseId() {
        return Optional.ofNullable(this.sourceDatabaseId);
    }
    public Optional<String> getStatus() {
        return Optional.ofNullable(this.status);
    }
    public Optional<String> getStorageAccountType() {
        return Optional.ofNullable(this.storageAccountType);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlPoolResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String collation;
        private @Nullable String createMode;
        private @Nullable String creationDate;
        private String id;
        private String location;
        private @Nullable Double maxSizeBytes;
        private String name;
        private @Nullable String provisioningState;
        private @Nullable String recoverableDatabaseId;
        private @Nullable String restorePointInTime;
        private @Nullable SkuResponse sku;
        private @Nullable String sourceDatabaseId;
        private @Nullable String status;
        private @Nullable String storageAccountType;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSqlPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collation = defaults.collation;
    	      this.createMode = defaults.createMode;
    	      this.creationDate = defaults.creationDate;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.maxSizeBytes = defaults.maxSizeBytes;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.recoverableDatabaseId = defaults.recoverableDatabaseId;
    	      this.restorePointInTime = defaults.restorePointInTime;
    	      this.sku = defaults.sku;
    	      this.sourceDatabaseId = defaults.sourceDatabaseId;
    	      this.status = defaults.status;
    	      this.storageAccountType = defaults.storageAccountType;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setCollation(@Nullable String collation) {
            this.collation = collation;
            return this;
        }

        public Builder setCreateMode(@Nullable String createMode) {
            this.createMode = createMode;
            return this;
        }

        public Builder setCreationDate(@Nullable String creationDate) {
            this.creationDate = creationDate;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setMaxSizeBytes(@Nullable Double maxSizeBytes) {
            this.maxSizeBytes = maxSizeBytes;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProvisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }

        public Builder setRecoverableDatabaseId(@Nullable String recoverableDatabaseId) {
            this.recoverableDatabaseId = recoverableDatabaseId;
            return this;
        }

        public Builder setRestorePointInTime(@Nullable String restorePointInTime) {
            this.restorePointInTime = restorePointInTime;
            return this;
        }

        public Builder setSku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }

        public Builder setSourceDatabaseId(@Nullable String sourceDatabaseId) {
            this.sourceDatabaseId = sourceDatabaseId;
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = status;
            return this;
        }

        public Builder setStorageAccountType(@Nullable String storageAccountType) {
            this.storageAccountType = storageAccountType;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetSqlPoolResult build() {
            return new GetSqlPoolResult(collation, createMode, creationDate, id, location, maxSizeBytes, name, provisioningState, recoverableDatabaseId, restorePointInTime, sku, sourceDatabaseId, status, storageAccountType, tags, type);
        }
    }
}
