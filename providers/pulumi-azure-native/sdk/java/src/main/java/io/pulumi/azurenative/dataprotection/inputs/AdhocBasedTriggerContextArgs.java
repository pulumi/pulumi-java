// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.dataprotection.inputs;

import io.pulumi.azurenative.dataprotection.inputs.AdhocBasedTaggingCriteriaArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Adhoc trigger context
 * 
 */
public final class AdhocBasedTriggerContextArgs extends io.pulumi.resources.ResourceArgs {

    public static final AdhocBasedTriggerContextArgs Empty = new AdhocBasedTriggerContextArgs();

    /**
     * Type of the specific object - used for deserializing
     * Expected value is 'AdhocBasedTriggerContext'.
     * 
     */
    @Import(name="objectType", required=true)
      private final Output<String> objectType;

    public Output<String> getObjectType() {
        return this.objectType;
    }

    /**
     * Tagging Criteria containing retention tag for adhoc backup.
     * 
     */
    @Import(name="taggingCriteria", required=true)
      private final Output<AdhocBasedTaggingCriteriaArgs> taggingCriteria;

    public Output<AdhocBasedTaggingCriteriaArgs> getTaggingCriteria() {
        return this.taggingCriteria;
    }

    public AdhocBasedTriggerContextArgs(
        Output<String> objectType,
        Output<AdhocBasedTaggingCriteriaArgs> taggingCriteria) {
        this.objectType = Objects.requireNonNull(objectType, "expected parameter 'objectType' to be non-null");
        this.taggingCriteria = Objects.requireNonNull(taggingCriteria, "expected parameter 'taggingCriteria' to be non-null");
    }

    private AdhocBasedTriggerContextArgs() {
        this.objectType = Codegen.empty();
        this.taggingCriteria = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AdhocBasedTriggerContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> objectType;
        private Output<AdhocBasedTaggingCriteriaArgs> taggingCriteria;

        public Builder() {
    	      // Empty
        }

        public Builder(AdhocBasedTriggerContextArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.objectType = defaults.objectType;
    	      this.taggingCriteria = defaults.taggingCriteria;
        }

        public Builder objectType(Output<String> objectType) {
            this.objectType = Objects.requireNonNull(objectType);
            return this;
        }
        public Builder objectType(String objectType) {
            this.objectType = Output.of(Objects.requireNonNull(objectType));
            return this;
        }
        public Builder taggingCriteria(Output<AdhocBasedTaggingCriteriaArgs> taggingCriteria) {
            this.taggingCriteria = Objects.requireNonNull(taggingCriteria);
            return this;
        }
        public Builder taggingCriteria(AdhocBasedTaggingCriteriaArgs taggingCriteria) {
            this.taggingCriteria = Output.of(Objects.requireNonNull(taggingCriteria));
            return this;
        }        public AdhocBasedTriggerContextArgs build() {
            return new AdhocBasedTriggerContextArgs(objectType, taggingCriteria);
        }
    }
}
