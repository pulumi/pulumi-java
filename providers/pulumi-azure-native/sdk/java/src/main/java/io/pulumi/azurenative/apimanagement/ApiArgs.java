// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement;

import io.pulumi.azurenative.apimanagement.enums.ApiType;
import io.pulumi.azurenative.apimanagement.enums.ContentFormat;
import io.pulumi.azurenative.apimanagement.enums.Protocol;
import io.pulumi.azurenative.apimanagement.enums.SoapApiType;
import io.pulumi.azurenative.apimanagement.inputs.ApiCreateOrUpdatePropertiesWsdlSelectorArgs;
import io.pulumi.azurenative.apimanagement.inputs.ApiVersionSetContractDetailsArgs;
import io.pulumi.azurenative.apimanagement.inputs.AuthenticationSettingsContractArgs;
import io.pulumi.azurenative.apimanagement.inputs.SubscriptionKeyParameterNamesContractArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApiArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApiArgs Empty = new ApiArgs();

    /**
     * API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * 
     */
    @Import(name="apiId")
      private final @Nullable Output<String> apiId;

    public Output<String> getApiId() {
        return this.apiId == null ? Output.empty() : this.apiId;
    }

    /**
     * Describes the Revision of the Api. If no value is provided, default revision 1 is created
     * 
     */
    @Import(name="apiRevision")
      private final @Nullable Output<String> apiRevision;

    public Output<String> getApiRevision() {
        return this.apiRevision == null ? Output.empty() : this.apiRevision;
    }

    /**
     * Description of the Api Revision.
     * 
     */
    @Import(name="apiRevisionDescription")
      private final @Nullable Output<String> apiRevisionDescription;

    public Output<String> getApiRevisionDescription() {
        return this.apiRevisionDescription == null ? Output.empty() : this.apiRevisionDescription;
    }

    /**
     * Type of API.
     * 
     */
    @Import(name="apiType")
      private final @Nullable Output<Either<String,ApiType>> apiType;

    public Output<Either<String,ApiType>> getApiType() {
        return this.apiType == null ? Output.empty() : this.apiType;
    }

    /**
     * Indicates the Version identifier of the API if the API is versioned
     * 
     */
    @Import(name="apiVersion")
      private final @Nullable Output<String> apiVersion;

    public Output<String> getApiVersion() {
        return this.apiVersion == null ? Output.empty() : this.apiVersion;
    }

    /**
     * Description of the Api Version.
     * 
     */
    @Import(name="apiVersionDescription")
      private final @Nullable Output<String> apiVersionDescription;

    public Output<String> getApiVersionDescription() {
        return this.apiVersionDescription == null ? Output.empty() : this.apiVersionDescription;
    }

    /**
     * Version set details
     * 
     */
    @Import(name="apiVersionSet")
      private final @Nullable Output<ApiVersionSetContractDetailsArgs> apiVersionSet;

    public Output<ApiVersionSetContractDetailsArgs> getApiVersionSet() {
        return this.apiVersionSet == null ? Output.empty() : this.apiVersionSet;
    }

    /**
     * A resource identifier for the related ApiVersionSet.
     * 
     */
    @Import(name="apiVersionSetId")
      private final @Nullable Output<String> apiVersionSetId;

    public Output<String> getApiVersionSetId() {
        return this.apiVersionSetId == null ? Output.empty() : this.apiVersionSetId;
    }

    /**
     * Collection of authentication settings included into this API.
     * 
     */
    @Import(name="authenticationSettings")
      private final @Nullable Output<AuthenticationSettingsContractArgs> authenticationSettings;

    public Output<AuthenticationSettingsContractArgs> getAuthenticationSettings() {
        return this.authenticationSettings == null ? Output.empty() : this.authenticationSettings;
    }

    /**
     * Description of the API. May include HTML formatting tags.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * API name. Must be 1 to 300 characters long.
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName == null ? Output.empty() : this.displayName;
    }

    /**
     * Format of the Content in which the API is getting imported.
     * 
     */
    @Import(name="format")
      private final @Nullable Output<Either<String,ContentFormat>> format;

    public Output<Either<String,ContentFormat>> getFormat() {
        return this.format == null ? Output.empty() : this.format;
    }

    /**
     * Indicates if API revision is current api revision.
     * 
     */
    @Import(name="isCurrent")
      private final @Nullable Output<Boolean> isCurrent;

    public Output<Boolean> getIsCurrent() {
        return this.isCurrent == null ? Output.empty() : this.isCurrent;
    }

    /**
     * Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
     * 
     */
    @Import(name="path", required=true)
      private final Output<String> path;

    public Output<String> getPath() {
        return this.path;
    }

    /**
     * Describes on which protocols the operations in this API can be invoked.
     * 
     */
    @Import(name="protocols")
      private final @Nullable Output<List<Protocol>> protocols;

    public Output<List<Protocol>> getProtocols() {
        return this.protocols == null ? Output.empty() : this.protocols;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @Import(name="serviceName", required=true)
      private final Output<String> serviceName;

    public Output<String> getServiceName() {
        return this.serviceName;
    }

    /**
     * Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
     * 
     */
    @Import(name="serviceUrl")
      private final @Nullable Output<String> serviceUrl;

    public Output<String> getServiceUrl() {
        return this.serviceUrl == null ? Output.empty() : this.serviceUrl;
    }

    /**
     * Type of Api to create.
     *  * `http` creates a SOAP to REST API
     *  * `soap` creates a SOAP pass-through API .
     * 
     */
    @Import(name="soapApiType")
      private final @Nullable Output<Either<String,SoapApiType>> soapApiType;

    public Output<Either<String,SoapApiType>> getSoapApiType() {
        return this.soapApiType == null ? Output.empty() : this.soapApiType;
    }

    /**
     * API identifier of the source API.
     * 
     */
    @Import(name="sourceApiId")
      private final @Nullable Output<String> sourceApiId;

    public Output<String> getSourceApiId() {
        return this.sourceApiId == null ? Output.empty() : this.sourceApiId;
    }

    /**
     * Protocols over which API is made available.
     * 
     */
    @Import(name="subscriptionKeyParameterNames")
      private final @Nullable Output<SubscriptionKeyParameterNamesContractArgs> subscriptionKeyParameterNames;

    public Output<SubscriptionKeyParameterNamesContractArgs> getSubscriptionKeyParameterNames() {
        return this.subscriptionKeyParameterNames == null ? Output.empty() : this.subscriptionKeyParameterNames;
    }

    /**
     * Specifies whether an API or Product subscription is required for accessing the API.
     * 
     */
    @Import(name="subscriptionRequired")
      private final @Nullable Output<Boolean> subscriptionRequired;

    public Output<Boolean> getSubscriptionRequired() {
        return this.subscriptionRequired == null ? Output.empty() : this.subscriptionRequired;
    }

    /**
     * Content value when Importing an API.
     * 
     */
    @Import(name="value")
      private final @Nullable Output<String> value;

    public Output<String> getValue() {
        return this.value == null ? Output.empty() : this.value;
    }

    /**
     * Criteria to limit import of WSDL to a subset of the document.
     * 
     */
    @Import(name="wsdlSelector")
      private final @Nullable Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs> wsdlSelector;

    public Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs> getWsdlSelector() {
        return this.wsdlSelector == null ? Output.empty() : this.wsdlSelector;
    }

    public ApiArgs(
        @Nullable Output<String> apiId,
        @Nullable Output<String> apiRevision,
        @Nullable Output<String> apiRevisionDescription,
        @Nullable Output<Either<String,ApiType>> apiType,
        @Nullable Output<String> apiVersion,
        @Nullable Output<String> apiVersionDescription,
        @Nullable Output<ApiVersionSetContractDetailsArgs> apiVersionSet,
        @Nullable Output<String> apiVersionSetId,
        @Nullable Output<AuthenticationSettingsContractArgs> authenticationSettings,
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        @Nullable Output<Either<String,ContentFormat>> format,
        @Nullable Output<Boolean> isCurrent,
        Output<String> path,
        @Nullable Output<List<Protocol>> protocols,
        Output<String> resourceGroupName,
        Output<String> serviceName,
        @Nullable Output<String> serviceUrl,
        @Nullable Output<Either<String,SoapApiType>> soapApiType,
        @Nullable Output<String> sourceApiId,
        @Nullable Output<SubscriptionKeyParameterNamesContractArgs> subscriptionKeyParameterNames,
        @Nullable Output<Boolean> subscriptionRequired,
        @Nullable Output<String> value,
        @Nullable Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs> wsdlSelector) {
        this.apiId = apiId;
        this.apiRevision = apiRevision;
        this.apiRevisionDescription = apiRevisionDescription;
        this.apiType = apiType;
        this.apiVersion = apiVersion;
        this.apiVersionDescription = apiVersionDescription;
        this.apiVersionSet = apiVersionSet;
        this.apiVersionSetId = apiVersionSetId;
        this.authenticationSettings = authenticationSettings;
        this.description = description;
        this.displayName = displayName;
        this.format = format;
        this.isCurrent = isCurrent;
        this.path = Objects.requireNonNull(path, "expected parameter 'path' to be non-null");
        this.protocols = protocols;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
        this.serviceUrl = serviceUrl;
        this.soapApiType = soapApiType;
        this.sourceApiId = sourceApiId;
        this.subscriptionKeyParameterNames = subscriptionKeyParameterNames;
        this.subscriptionRequired = subscriptionRequired;
        this.value = value;
        this.wsdlSelector = wsdlSelector;
    }

    private ApiArgs() {
        this.apiId = Output.empty();
        this.apiRevision = Output.empty();
        this.apiRevisionDescription = Output.empty();
        this.apiType = Output.empty();
        this.apiVersion = Output.empty();
        this.apiVersionDescription = Output.empty();
        this.apiVersionSet = Output.empty();
        this.apiVersionSetId = Output.empty();
        this.authenticationSettings = Output.empty();
        this.description = Output.empty();
        this.displayName = Output.empty();
        this.format = Output.empty();
        this.isCurrent = Output.empty();
        this.path = Output.empty();
        this.protocols = Output.empty();
        this.resourceGroupName = Output.empty();
        this.serviceName = Output.empty();
        this.serviceUrl = Output.empty();
        this.soapApiType = Output.empty();
        this.sourceApiId = Output.empty();
        this.subscriptionKeyParameterNames = Output.empty();
        this.subscriptionRequired = Output.empty();
        this.value = Output.empty();
        this.wsdlSelector = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> apiId;
        private @Nullable Output<String> apiRevision;
        private @Nullable Output<String> apiRevisionDescription;
        private @Nullable Output<Either<String,ApiType>> apiType;
        private @Nullable Output<String> apiVersion;
        private @Nullable Output<String> apiVersionDescription;
        private @Nullable Output<ApiVersionSetContractDetailsArgs> apiVersionSet;
        private @Nullable Output<String> apiVersionSetId;
        private @Nullable Output<AuthenticationSettingsContractArgs> authenticationSettings;
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private @Nullable Output<Either<String,ContentFormat>> format;
        private @Nullable Output<Boolean> isCurrent;
        private Output<String> path;
        private @Nullable Output<List<Protocol>> protocols;
        private Output<String> resourceGroupName;
        private Output<String> serviceName;
        private @Nullable Output<String> serviceUrl;
        private @Nullable Output<Either<String,SoapApiType>> soapApiType;
        private @Nullable Output<String> sourceApiId;
        private @Nullable Output<SubscriptionKeyParameterNamesContractArgs> subscriptionKeyParameterNames;
        private @Nullable Output<Boolean> subscriptionRequired;
        private @Nullable Output<String> value;
        private @Nullable Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs> wsdlSelector;

        public Builder() {
    	      // Empty
        }

        public Builder(ApiArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiId = defaults.apiId;
    	      this.apiRevision = defaults.apiRevision;
    	      this.apiRevisionDescription = defaults.apiRevisionDescription;
    	      this.apiType = defaults.apiType;
    	      this.apiVersion = defaults.apiVersion;
    	      this.apiVersionDescription = defaults.apiVersionDescription;
    	      this.apiVersionSet = defaults.apiVersionSet;
    	      this.apiVersionSetId = defaults.apiVersionSetId;
    	      this.authenticationSettings = defaults.authenticationSettings;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.format = defaults.format;
    	      this.isCurrent = defaults.isCurrent;
    	      this.path = defaults.path;
    	      this.protocols = defaults.protocols;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceName = defaults.serviceName;
    	      this.serviceUrl = defaults.serviceUrl;
    	      this.soapApiType = defaults.soapApiType;
    	      this.sourceApiId = defaults.sourceApiId;
    	      this.subscriptionKeyParameterNames = defaults.subscriptionKeyParameterNames;
    	      this.subscriptionRequired = defaults.subscriptionRequired;
    	      this.value = defaults.value;
    	      this.wsdlSelector = defaults.wsdlSelector;
        }

        public Builder apiId(@Nullable Output<String> apiId) {
            this.apiId = apiId;
            return this;
        }
        public Builder apiId(@Nullable String apiId) {
            this.apiId = Output.ofNullable(apiId);
            return this;
        }
        public Builder apiRevision(@Nullable Output<String> apiRevision) {
            this.apiRevision = apiRevision;
            return this;
        }
        public Builder apiRevision(@Nullable String apiRevision) {
            this.apiRevision = Output.ofNullable(apiRevision);
            return this;
        }
        public Builder apiRevisionDescription(@Nullable Output<String> apiRevisionDescription) {
            this.apiRevisionDescription = apiRevisionDescription;
            return this;
        }
        public Builder apiRevisionDescription(@Nullable String apiRevisionDescription) {
            this.apiRevisionDescription = Output.ofNullable(apiRevisionDescription);
            return this;
        }
        public Builder apiType(@Nullable Output<Either<String,ApiType>> apiType) {
            this.apiType = apiType;
            return this;
        }
        public Builder apiType(@Nullable Either<String,ApiType> apiType) {
            this.apiType = Output.ofNullable(apiType);
            return this;
        }
        public Builder apiVersion(@Nullable Output<String> apiVersion) {
            this.apiVersion = apiVersion;
            return this;
        }
        public Builder apiVersion(@Nullable String apiVersion) {
            this.apiVersion = Output.ofNullable(apiVersion);
            return this;
        }
        public Builder apiVersionDescription(@Nullable Output<String> apiVersionDescription) {
            this.apiVersionDescription = apiVersionDescription;
            return this;
        }
        public Builder apiVersionDescription(@Nullable String apiVersionDescription) {
            this.apiVersionDescription = Output.ofNullable(apiVersionDescription);
            return this;
        }
        public Builder apiVersionSet(@Nullable Output<ApiVersionSetContractDetailsArgs> apiVersionSet) {
            this.apiVersionSet = apiVersionSet;
            return this;
        }
        public Builder apiVersionSet(@Nullable ApiVersionSetContractDetailsArgs apiVersionSet) {
            this.apiVersionSet = Output.ofNullable(apiVersionSet);
            return this;
        }
        public Builder apiVersionSetId(@Nullable Output<String> apiVersionSetId) {
            this.apiVersionSetId = apiVersionSetId;
            return this;
        }
        public Builder apiVersionSetId(@Nullable String apiVersionSetId) {
            this.apiVersionSetId = Output.ofNullable(apiVersionSetId);
            return this;
        }
        public Builder authenticationSettings(@Nullable Output<AuthenticationSettingsContractArgs> authenticationSettings) {
            this.authenticationSettings = authenticationSettings;
            return this;
        }
        public Builder authenticationSettings(@Nullable AuthenticationSettingsContractArgs authenticationSettings) {
            this.authenticationSettings = Output.ofNullable(authenticationSettings);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = Output.ofNullable(displayName);
            return this;
        }
        public Builder format(@Nullable Output<Either<String,ContentFormat>> format) {
            this.format = format;
            return this;
        }
        public Builder format(@Nullable Either<String,ContentFormat> format) {
            this.format = Output.ofNullable(format);
            return this;
        }
        public Builder isCurrent(@Nullable Output<Boolean> isCurrent) {
            this.isCurrent = isCurrent;
            return this;
        }
        public Builder isCurrent(@Nullable Boolean isCurrent) {
            this.isCurrent = Output.ofNullable(isCurrent);
            return this;
        }
        public Builder path(Output<String> path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        public Builder path(String path) {
            this.path = Output.of(Objects.requireNonNull(path));
            return this;
        }
        public Builder protocols(@Nullable Output<List<Protocol>> protocols) {
            this.protocols = protocols;
            return this;
        }
        public Builder protocols(@Nullable List<Protocol> protocols) {
            this.protocols = Output.ofNullable(protocols);
            return this;
        }
        public Builder protocols(Protocol... protocols) {
            return protocols(List.of(protocols));
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder serviceName(Output<String> serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public Builder serviceName(String serviceName) {
            this.serviceName = Output.of(Objects.requireNonNull(serviceName));
            return this;
        }
        public Builder serviceUrl(@Nullable Output<String> serviceUrl) {
            this.serviceUrl = serviceUrl;
            return this;
        }
        public Builder serviceUrl(@Nullable String serviceUrl) {
            this.serviceUrl = Output.ofNullable(serviceUrl);
            return this;
        }
        public Builder soapApiType(@Nullable Output<Either<String,SoapApiType>> soapApiType) {
            this.soapApiType = soapApiType;
            return this;
        }
        public Builder soapApiType(@Nullable Either<String,SoapApiType> soapApiType) {
            this.soapApiType = Output.ofNullable(soapApiType);
            return this;
        }
        public Builder sourceApiId(@Nullable Output<String> sourceApiId) {
            this.sourceApiId = sourceApiId;
            return this;
        }
        public Builder sourceApiId(@Nullable String sourceApiId) {
            this.sourceApiId = Output.ofNullable(sourceApiId);
            return this;
        }
        public Builder subscriptionKeyParameterNames(@Nullable Output<SubscriptionKeyParameterNamesContractArgs> subscriptionKeyParameterNames) {
            this.subscriptionKeyParameterNames = subscriptionKeyParameterNames;
            return this;
        }
        public Builder subscriptionKeyParameterNames(@Nullable SubscriptionKeyParameterNamesContractArgs subscriptionKeyParameterNames) {
            this.subscriptionKeyParameterNames = Output.ofNullable(subscriptionKeyParameterNames);
            return this;
        }
        public Builder subscriptionRequired(@Nullable Output<Boolean> subscriptionRequired) {
            this.subscriptionRequired = subscriptionRequired;
            return this;
        }
        public Builder subscriptionRequired(@Nullable Boolean subscriptionRequired) {
            this.subscriptionRequired = Output.ofNullable(subscriptionRequired);
            return this;
        }
        public Builder value(@Nullable Output<String> value) {
            this.value = value;
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = Output.ofNullable(value);
            return this;
        }
        public Builder wsdlSelector(@Nullable Output<ApiCreateOrUpdatePropertiesWsdlSelectorArgs> wsdlSelector) {
            this.wsdlSelector = wsdlSelector;
            return this;
        }
        public Builder wsdlSelector(@Nullable ApiCreateOrUpdatePropertiesWsdlSelectorArgs wsdlSelector) {
            this.wsdlSelector = Output.ofNullable(wsdlSelector);
            return this;
        }        public ApiArgs build() {
            return new ApiArgs(apiId, apiRevision, apiRevisionDescription, apiType, apiVersion, apiVersionDescription, apiVersionSet, apiVersionSetId, authenticationSettings, description, displayName, format, isCurrent, path, protocols, resourceGroupName, serviceName, serviceUrl, soapApiType, sourceApiId, subscriptionKeyParameterNames, subscriptionRequired, value, wsdlSelector);
        }
    }
}
