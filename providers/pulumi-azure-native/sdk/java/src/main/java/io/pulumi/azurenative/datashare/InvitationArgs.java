// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datashare;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InvitationArgs extends io.pulumi.resources.ResourceArgs {

    public static final InvitationArgs Empty = new InvitationArgs();

    /**
     * The name of the share account.
     * 
     */
    @InputImport(name="accountName", required=true)
      private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    /**
     * The expiration date for the invitation and share subscription.
     * 
     */
    @InputImport(name="expirationDate")
      private final @Nullable Input<String> expirationDate;

    public Input<String> getExpirationDate() {
        return this.expirationDate == null ? Input.empty() : this.expirationDate;
    }

    /**
     * The name of the invitation.
     * 
     */
    @InputImport(name="invitationName")
      private final @Nullable Input<String> invitationName;

    public Input<String> getInvitationName() {
        return this.invitationName == null ? Input.empty() : this.invitationName;
    }

    /**
     * The resource group name.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the share to send the invitation for.
     * 
     */
    @InputImport(name="shareName", required=true)
      private final Input<String> shareName;

    public Input<String> getShareName() {
        return this.shareName;
    }

    /**
     * The target Azure AD Id. Can't be combined with email.
     * 
     */
    @InputImport(name="targetActiveDirectoryId")
      private final @Nullable Input<String> targetActiveDirectoryId;

    public Input<String> getTargetActiveDirectoryId() {
        return this.targetActiveDirectoryId == null ? Input.empty() : this.targetActiveDirectoryId;
    }

    /**
     * The email the invitation is directed to.
     * 
     */
    @InputImport(name="targetEmail")
      private final @Nullable Input<String> targetEmail;

    public Input<String> getTargetEmail() {
        return this.targetEmail == null ? Input.empty() : this.targetEmail;
    }

    /**
     * The target user or application Id that invitation is being sent to.
     * Must be specified along TargetActiveDirectoryId. This enables sending
     * invitations to specific users or applications in an AD tenant.
     * 
     */
    @InputImport(name="targetObjectId")
      private final @Nullable Input<String> targetObjectId;

    public Input<String> getTargetObjectId() {
        return this.targetObjectId == null ? Input.empty() : this.targetObjectId;
    }

    public InvitationArgs(
        Input<String> accountName,
        @Nullable Input<String> expirationDate,
        @Nullable Input<String> invitationName,
        Input<String> resourceGroupName,
        Input<String> shareName,
        @Nullable Input<String> targetActiveDirectoryId,
        @Nullable Input<String> targetEmail,
        @Nullable Input<String> targetObjectId) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.expirationDate = expirationDate;
        this.invitationName = invitationName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.shareName = Objects.requireNonNull(shareName, "expected parameter 'shareName' to be non-null");
        this.targetActiveDirectoryId = targetActiveDirectoryId;
        this.targetEmail = targetEmail;
        this.targetObjectId = targetObjectId;
    }

    private InvitationArgs() {
        this.accountName = Input.empty();
        this.expirationDate = Input.empty();
        this.invitationName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.shareName = Input.empty();
        this.targetActiveDirectoryId = Input.empty();
        this.targetEmail = Input.empty();
        this.targetObjectId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InvitationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<String> expirationDate;
        private @Nullable Input<String> invitationName;
        private Input<String> resourceGroupName;
        private Input<String> shareName;
        private @Nullable Input<String> targetActiveDirectoryId;
        private @Nullable Input<String> targetEmail;
        private @Nullable Input<String> targetObjectId;

        public Builder() {
    	      // Empty
        }

        public Builder(InvitationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.expirationDate = defaults.expirationDate;
    	      this.invitationName = defaults.invitationName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.shareName = defaults.shareName;
    	      this.targetActiveDirectoryId = defaults.targetActiveDirectoryId;
    	      this.targetEmail = defaults.targetEmail;
    	      this.targetObjectId = defaults.targetObjectId;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setExpirationDate(@Nullable Input<String> expirationDate) {
            this.expirationDate = expirationDate;
            return this;
        }

        public Builder setExpirationDate(@Nullable String expirationDate) {
            this.expirationDate = Input.ofNullable(expirationDate);
            return this;
        }

        public Builder setInvitationName(@Nullable Input<String> invitationName) {
            this.invitationName = invitationName;
            return this;
        }

        public Builder setInvitationName(@Nullable String invitationName) {
            this.invitationName = Input.ofNullable(invitationName);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setShareName(Input<String> shareName) {
            this.shareName = Objects.requireNonNull(shareName);
            return this;
        }

        public Builder setShareName(String shareName) {
            this.shareName = Input.of(Objects.requireNonNull(shareName));
            return this;
        }

        public Builder setTargetActiveDirectoryId(@Nullable Input<String> targetActiveDirectoryId) {
            this.targetActiveDirectoryId = targetActiveDirectoryId;
            return this;
        }

        public Builder setTargetActiveDirectoryId(@Nullable String targetActiveDirectoryId) {
            this.targetActiveDirectoryId = Input.ofNullable(targetActiveDirectoryId);
            return this;
        }

        public Builder setTargetEmail(@Nullable Input<String> targetEmail) {
            this.targetEmail = targetEmail;
            return this;
        }

        public Builder setTargetEmail(@Nullable String targetEmail) {
            this.targetEmail = Input.ofNullable(targetEmail);
            return this;
        }

        public Builder setTargetObjectId(@Nullable Input<String> targetObjectId) {
            this.targetObjectId = targetObjectId;
            return this;
        }

        public Builder setTargetObjectId(@Nullable String targetObjectId) {
            this.targetObjectId = Input.ofNullable(targetObjectId);
            return this;
        }
        public InvitationArgs build() {
            return new InvitationArgs(accountName, expirationDate, invitationName, resourceGroupName, shareName, targetActiveDirectoryId, targetEmail, targetObjectId);
        }
    }
}
