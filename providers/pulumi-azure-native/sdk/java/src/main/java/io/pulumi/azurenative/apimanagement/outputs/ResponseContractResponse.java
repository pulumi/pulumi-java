// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement.outputs;

import io.pulumi.azurenative.apimanagement.outputs.ParameterContractResponse;
import io.pulumi.azurenative.apimanagement.outputs.RepresentationContractResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ResponseContractResponse {
    /**
     * Operation response description.
     * 
     */
    private final @Nullable String description;
    /**
     * Collection of operation response headers.
     * 
     */
    private final @Nullable List<ParameterContractResponse> headers;
    /**
     * Collection of operation response representations.
     * 
     */
    private final @Nullable List<RepresentationContractResponse> representations;
    /**
     * Operation response HTTP status code.
     * 
     */
    private final Integer statusCode;

    @CustomType.Constructor
    private ResponseContractResponse(
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("headers") @Nullable List<ParameterContractResponse> headers,
        @CustomType.Parameter("representations") @Nullable List<RepresentationContractResponse> representations,
        @CustomType.Parameter("statusCode") Integer statusCode) {
        this.description = description;
        this.headers = headers;
        this.representations = representations;
        this.statusCode = statusCode;
    }

    /**
     * Operation response description.
     * 
    */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * Collection of operation response headers.
     * 
    */
    public List<ParameterContractResponse> getHeaders() {
        return this.headers == null ? List.of() : this.headers;
    }
    /**
     * Collection of operation response representations.
     * 
    */
    public List<RepresentationContractResponse> getRepresentations() {
        return this.representations == null ? List.of() : this.representations;
    }
    /**
     * Operation response HTTP status code.
     * 
    */
    public Integer getStatusCode() {
        return this.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResponseContractResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private @Nullable List<ParameterContractResponse> headers;
        private @Nullable List<RepresentationContractResponse> representations;
        private Integer statusCode;

        public Builder() {
    	      // Empty
        }

        public Builder(ResponseContractResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.headers = defaults.headers;
    	      this.representations = defaults.representations;
    	      this.statusCode = defaults.statusCode;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder headers(@Nullable List<ParameterContractResponse> headers) {
            this.headers = headers;
            return this;
        }

        public Builder representations(@Nullable List<RepresentationContractResponse> representations) {
            this.representations = representations;
            return this;
        }

        public Builder statusCode(Integer statusCode) {
            this.statusCode = Objects.requireNonNull(statusCode);
            return this;
        }
        public ResponseContractResponse build() {
            return new ResponseContractResponse(description, headers, representations, statusCode);
        }
    }
}
