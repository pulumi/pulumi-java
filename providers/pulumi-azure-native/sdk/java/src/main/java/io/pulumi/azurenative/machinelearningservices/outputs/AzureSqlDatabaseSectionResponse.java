// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AzureSqlDatabaseSectionResponse {
    private final @Nullable String authorityUrl;
    private final @Nullable String certificate;
    private final @Nullable String clientId;
    private final @Nullable String clientSecret;
    private final @Nullable String credentialType;
    private final @Nullable String databaseName;
    private final @Nullable String endpoint;
    private final @Nullable Boolean isCertAuth;
    private final @Nullable String portNumber;
    private final @Nullable String resourceGroup;
    private final @Nullable String resourceUri;
    private final @Nullable String serverName;
    private final @Nullable String serviceDataAccessAuthIdentity;
    private final @Nullable String subscriptionId;
    private final @Nullable String tenantId;
    private final @Nullable String thumbprint;
    private final @Nullable String userId;
    private final @Nullable String userPassword;

    @OutputCustomType.Constructor({"authorityUrl","certificate","clientId","clientSecret","credentialType","databaseName","endpoint","isCertAuth","portNumber","resourceGroup","resourceUri","serverName","serviceDataAccessAuthIdentity","subscriptionId","tenantId","thumbprint","userId","userPassword"})
    private AzureSqlDatabaseSectionResponse(
        @Nullable String authorityUrl,
        @Nullable String certificate,
        @Nullable String clientId,
        @Nullable String clientSecret,
        @Nullable String credentialType,
        @Nullable String databaseName,
        @Nullable String endpoint,
        @Nullable Boolean isCertAuth,
        @Nullable String portNumber,
        @Nullable String resourceGroup,
        @Nullable String resourceUri,
        @Nullable String serverName,
        @Nullable String serviceDataAccessAuthIdentity,
        @Nullable String subscriptionId,
        @Nullable String tenantId,
        @Nullable String thumbprint,
        @Nullable String userId,
        @Nullable String userPassword) {
        this.authorityUrl = authorityUrl;
        this.certificate = certificate;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.credentialType = credentialType;
        this.databaseName = databaseName;
        this.endpoint = endpoint;
        this.isCertAuth = isCertAuth;
        this.portNumber = portNumber;
        this.resourceGroup = resourceGroup;
        this.resourceUri = resourceUri;
        this.serverName = serverName;
        this.serviceDataAccessAuthIdentity = serviceDataAccessAuthIdentity;
        this.subscriptionId = subscriptionId;
        this.tenantId = tenantId;
        this.thumbprint = thumbprint;
        this.userId = userId;
        this.userPassword = userPassword;
    }

    public Optional<String> getAuthorityUrl() {
        return Optional.ofNullable(this.authorityUrl);
    }
    public Optional<String> getCertificate() {
        return Optional.ofNullable(this.certificate);
    }
    public Optional<String> getClientId() {
        return Optional.ofNullable(this.clientId);
    }
    public Optional<String> getClientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }
    public Optional<String> getCredentialType() {
        return Optional.ofNullable(this.credentialType);
    }
    public Optional<String> getDatabaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    public Optional<String> getEndpoint() {
        return Optional.ofNullable(this.endpoint);
    }
    public Optional<Boolean> getIsCertAuth() {
        return Optional.ofNullable(this.isCertAuth);
    }
    public Optional<String> getPortNumber() {
        return Optional.ofNullable(this.portNumber);
    }
    public Optional<String> getResourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }
    public Optional<String> getResourceUri() {
        return Optional.ofNullable(this.resourceUri);
    }
    public Optional<String> getServerName() {
        return Optional.ofNullable(this.serverName);
    }
    public Optional<String> getServiceDataAccessAuthIdentity() {
        return Optional.ofNullable(this.serviceDataAccessAuthIdentity);
    }
    public Optional<String> getSubscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }
    public Optional<String> getTenantId() {
        return Optional.ofNullable(this.tenantId);
    }
    public Optional<String> getThumbprint() {
        return Optional.ofNullable(this.thumbprint);
    }
    public Optional<String> getUserId() {
        return Optional.ofNullable(this.userId);
    }
    public Optional<String> getUserPassword() {
        return Optional.ofNullable(this.userPassword);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureSqlDatabaseSectionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String authorityUrl;
        private @Nullable String certificate;
        private @Nullable String clientId;
        private @Nullable String clientSecret;
        private @Nullable String credentialType;
        private @Nullable String databaseName;
        private @Nullable String endpoint;
        private @Nullable Boolean isCertAuth;
        private @Nullable String portNumber;
        private @Nullable String resourceGroup;
        private @Nullable String resourceUri;
        private @Nullable String serverName;
        private @Nullable String serviceDataAccessAuthIdentity;
        private @Nullable String subscriptionId;
        private @Nullable String tenantId;
        private @Nullable String thumbprint;
        private @Nullable String userId;
        private @Nullable String userPassword;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureSqlDatabaseSectionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorityUrl = defaults.authorityUrl;
    	      this.certificate = defaults.certificate;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.credentialType = defaults.credentialType;
    	      this.databaseName = defaults.databaseName;
    	      this.endpoint = defaults.endpoint;
    	      this.isCertAuth = defaults.isCertAuth;
    	      this.portNumber = defaults.portNumber;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.resourceUri = defaults.resourceUri;
    	      this.serverName = defaults.serverName;
    	      this.serviceDataAccessAuthIdentity = defaults.serviceDataAccessAuthIdentity;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.tenantId = defaults.tenantId;
    	      this.thumbprint = defaults.thumbprint;
    	      this.userId = defaults.userId;
    	      this.userPassword = defaults.userPassword;
        }

        public Builder setAuthorityUrl(@Nullable String authorityUrl) {
            this.authorityUrl = authorityUrl;
            return this;
        }

        public Builder setCertificate(@Nullable String certificate) {
            this.certificate = certificate;
            return this;
        }

        public Builder setClientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }

        public Builder setClientSecret(@Nullable String clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }

        public Builder setCredentialType(@Nullable String credentialType) {
            this.credentialType = credentialType;
            return this;
        }

        public Builder setDatabaseName(@Nullable String databaseName) {
            this.databaseName = databaseName;
            return this;
        }

        public Builder setEndpoint(@Nullable String endpoint) {
            this.endpoint = endpoint;
            return this;
        }

        public Builder setIsCertAuth(@Nullable Boolean isCertAuth) {
            this.isCertAuth = isCertAuth;
            return this;
        }

        public Builder setPortNumber(@Nullable String portNumber) {
            this.portNumber = portNumber;
            return this;
        }

        public Builder setResourceGroup(@Nullable String resourceGroup) {
            this.resourceGroup = resourceGroup;
            return this;
        }

        public Builder setResourceUri(@Nullable String resourceUri) {
            this.resourceUri = resourceUri;
            return this;
        }

        public Builder setServerName(@Nullable String serverName) {
            this.serverName = serverName;
            return this;
        }

        public Builder setServiceDataAccessAuthIdentity(@Nullable String serviceDataAccessAuthIdentity) {
            this.serviceDataAccessAuthIdentity = serviceDataAccessAuthIdentity;
            return this;
        }

        public Builder setSubscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }

        public Builder setTenantId(@Nullable String tenantId) {
            this.tenantId = tenantId;
            return this;
        }

        public Builder setThumbprint(@Nullable String thumbprint) {
            this.thumbprint = thumbprint;
            return this;
        }

        public Builder setUserId(@Nullable String userId) {
            this.userId = userId;
            return this;
        }

        public Builder setUserPassword(@Nullable String userPassword) {
            this.userPassword = userPassword;
            return this;
        }

        public AzureSqlDatabaseSectionResponse build() {
            return new AzureSqlDatabaseSectionResponse(authorityUrl, certificate, clientId, clientSecret, credentialType, databaseName, endpoint, isCertAuth, portNumber, resourceGroup, resourceUri, serverName, serviceDataAccessAuthIdentity, subscriptionId, tenantId, thumbprint, userId, userPassword);
        }
    }
}
