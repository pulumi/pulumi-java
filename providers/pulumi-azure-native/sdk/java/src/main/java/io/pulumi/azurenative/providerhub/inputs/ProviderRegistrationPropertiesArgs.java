// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.providerhub.inputs;

import io.pulumi.azurenative.providerhub.enums.ProvisioningState;
import io.pulumi.azurenative.providerhub.enums.ResourceProviderType;
import io.pulumi.azurenative.providerhub.inputs.ProviderRegistrationPropertiesProviderHubMetadataArgs;
import io.pulumi.azurenative.providerhub.inputs.ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsArgs;
import io.pulumi.azurenative.providerhub.inputs.ResourceProviderAuthorizationArgs;
import io.pulumi.azurenative.providerhub.inputs.ResourceProviderCapabilitiesArgs;
import io.pulumi.azurenative.providerhub.inputs.ResourceProviderManifestPropertiesFeaturesRuleArgs;
import io.pulumi.azurenative.providerhub.inputs.ResourceProviderManifestPropertiesManagementArgs;
import io.pulumi.azurenative.providerhub.inputs.ResourceProviderManifestPropertiesProviderAuthenticationArgs;
import io.pulumi.azurenative.providerhub.inputs.ResourceProviderManifestPropertiesRequestHeaderOptionsArgs;
import io.pulumi.azurenative.providerhub.inputs.ResourceProviderManifestPropertiesTemplateDeploymentOptionsArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProviderRegistrationPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProviderRegistrationPropertiesArgs Empty = new ProviderRegistrationPropertiesArgs();

    @InputImport(name="capabilities")
    private final @Nullable Input<List<ResourceProviderCapabilitiesArgs>> capabilities;

    public Input<List<ResourceProviderCapabilitiesArgs>> getCapabilities() {
        return this.capabilities == null ? Input.empty() : this.capabilities;
    }

    @InputImport(name="featuresRule")
    private final @Nullable Input<ResourceProviderManifestPropertiesFeaturesRuleArgs> featuresRule;

    public Input<ResourceProviderManifestPropertiesFeaturesRuleArgs> getFeaturesRule() {
        return this.featuresRule == null ? Input.empty() : this.featuresRule;
    }

    @InputImport(name="management")
    private final @Nullable Input<ResourceProviderManifestPropertiesManagementArgs> management;

    public Input<ResourceProviderManifestPropertiesManagementArgs> getManagement() {
        return this.management == null ? Input.empty() : this.management;
    }

    @InputImport(name="metadata")
    private final @Nullable Input<Object> metadata;

    public Input<Object> getMetadata() {
        return this.metadata == null ? Input.empty() : this.metadata;
    }

    @InputImport(name="namespace")
    private final @Nullable Input<String> namespace;

    public Input<String> getNamespace() {
        return this.namespace == null ? Input.empty() : this.namespace;
    }

    @InputImport(name="providerAuthentication")
    private final @Nullable Input<ResourceProviderManifestPropertiesProviderAuthenticationArgs> providerAuthentication;

    public Input<ResourceProviderManifestPropertiesProviderAuthenticationArgs> getProviderAuthentication() {
        return this.providerAuthentication == null ? Input.empty() : this.providerAuthentication;
    }

    @InputImport(name="providerAuthorizations")
    private final @Nullable Input<List<ResourceProviderAuthorizationArgs>> providerAuthorizations;

    public Input<List<ResourceProviderAuthorizationArgs>> getProviderAuthorizations() {
        return this.providerAuthorizations == null ? Input.empty() : this.providerAuthorizations;
    }

    @InputImport(name="providerHubMetadata")
    private final @Nullable Input<ProviderRegistrationPropertiesProviderHubMetadataArgs> providerHubMetadata;

    public Input<ProviderRegistrationPropertiesProviderHubMetadataArgs> getProviderHubMetadata() {
        return this.providerHubMetadata == null ? Input.empty() : this.providerHubMetadata;
    }

    @InputImport(name="providerType")
    private final @Nullable Input<Either<String,ResourceProviderType>> providerType;

    public Input<Either<String,ResourceProviderType>> getProviderType() {
        return this.providerType == null ? Input.empty() : this.providerType;
    }

    @InputImport(name="providerVersion")
    private final @Nullable Input<String> providerVersion;

    public Input<String> getProviderVersion() {
        return this.providerVersion == null ? Input.empty() : this.providerVersion;
    }

    @InputImport(name="provisioningState")
    private final @Nullable Input<Either<String,ProvisioningState>> provisioningState;

    public Input<Either<String,ProvisioningState>> getProvisioningState() {
        return this.provisioningState == null ? Input.empty() : this.provisioningState;
    }

    @InputImport(name="requestHeaderOptions")
    private final @Nullable Input<ResourceProviderManifestPropertiesRequestHeaderOptionsArgs> requestHeaderOptions;

    public Input<ResourceProviderManifestPropertiesRequestHeaderOptionsArgs> getRequestHeaderOptions() {
        return this.requestHeaderOptions == null ? Input.empty() : this.requestHeaderOptions;
    }

    @InputImport(name="requiredFeatures")
    private final @Nullable Input<List<String>> requiredFeatures;

    public Input<List<String>> getRequiredFeatures() {
        return this.requiredFeatures == null ? Input.empty() : this.requiredFeatures;
    }

    @InputImport(name="subscriptionLifecycleNotificationSpecifications")
    private final @Nullable Input<ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsArgs> subscriptionLifecycleNotificationSpecifications;

    public Input<ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsArgs> getSubscriptionLifecycleNotificationSpecifications() {
        return this.subscriptionLifecycleNotificationSpecifications == null ? Input.empty() : this.subscriptionLifecycleNotificationSpecifications;
    }

    @InputImport(name="templateDeploymentOptions")
    private final @Nullable Input<ResourceProviderManifestPropertiesTemplateDeploymentOptionsArgs> templateDeploymentOptions;

    public Input<ResourceProviderManifestPropertiesTemplateDeploymentOptionsArgs> getTemplateDeploymentOptions() {
        return this.templateDeploymentOptions == null ? Input.empty() : this.templateDeploymentOptions;
    }

    public ProviderRegistrationPropertiesArgs(
        @Nullable Input<List<ResourceProviderCapabilitiesArgs>> capabilities,
        @Nullable Input<ResourceProviderManifestPropertiesFeaturesRuleArgs> featuresRule,
        @Nullable Input<ResourceProviderManifestPropertiesManagementArgs> management,
        @Nullable Input<Object> metadata,
        @Nullable Input<String> namespace,
        @Nullable Input<ResourceProviderManifestPropertiesProviderAuthenticationArgs> providerAuthentication,
        @Nullable Input<List<ResourceProviderAuthorizationArgs>> providerAuthorizations,
        @Nullable Input<ProviderRegistrationPropertiesProviderHubMetadataArgs> providerHubMetadata,
        @Nullable Input<Either<String,ResourceProviderType>> providerType,
        @Nullable Input<String> providerVersion,
        @Nullable Input<Either<String,ProvisioningState>> provisioningState,
        @Nullable Input<ResourceProviderManifestPropertiesRequestHeaderOptionsArgs> requestHeaderOptions,
        @Nullable Input<List<String>> requiredFeatures,
        @Nullable Input<ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsArgs> subscriptionLifecycleNotificationSpecifications,
        @Nullable Input<ResourceProviderManifestPropertiesTemplateDeploymentOptionsArgs> templateDeploymentOptions) {
        this.capabilities = capabilities;
        this.featuresRule = featuresRule;
        this.management = management;
        this.metadata = metadata;
        this.namespace = namespace;
        this.providerAuthentication = providerAuthentication;
        this.providerAuthorizations = providerAuthorizations;
        this.providerHubMetadata = providerHubMetadata;
        this.providerType = providerType;
        this.providerVersion = providerVersion;
        this.provisioningState = provisioningState;
        this.requestHeaderOptions = requestHeaderOptions;
        this.requiredFeatures = requiredFeatures;
        this.subscriptionLifecycleNotificationSpecifications = subscriptionLifecycleNotificationSpecifications;
        this.templateDeploymentOptions = templateDeploymentOptions;
    }

    private ProviderRegistrationPropertiesArgs() {
        this.capabilities = Input.empty();
        this.featuresRule = Input.empty();
        this.management = Input.empty();
        this.metadata = Input.empty();
        this.namespace = Input.empty();
        this.providerAuthentication = Input.empty();
        this.providerAuthorizations = Input.empty();
        this.providerHubMetadata = Input.empty();
        this.providerType = Input.empty();
        this.providerVersion = Input.empty();
        this.provisioningState = Input.empty();
        this.requestHeaderOptions = Input.empty();
        this.requiredFeatures = Input.empty();
        this.subscriptionLifecycleNotificationSpecifications = Input.empty();
        this.templateDeploymentOptions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProviderRegistrationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<ResourceProviderCapabilitiesArgs>> capabilities;
        private @Nullable Input<ResourceProviderManifestPropertiesFeaturesRuleArgs> featuresRule;
        private @Nullable Input<ResourceProviderManifestPropertiesManagementArgs> management;
        private @Nullable Input<Object> metadata;
        private @Nullable Input<String> namespace;
        private @Nullable Input<ResourceProviderManifestPropertiesProviderAuthenticationArgs> providerAuthentication;
        private @Nullable Input<List<ResourceProviderAuthorizationArgs>> providerAuthorizations;
        private @Nullable Input<ProviderRegistrationPropertiesProviderHubMetadataArgs> providerHubMetadata;
        private @Nullable Input<Either<String,ResourceProviderType>> providerType;
        private @Nullable Input<String> providerVersion;
        private @Nullable Input<Either<String,ProvisioningState>> provisioningState;
        private @Nullable Input<ResourceProviderManifestPropertiesRequestHeaderOptionsArgs> requestHeaderOptions;
        private @Nullable Input<List<String>> requiredFeatures;
        private @Nullable Input<ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsArgs> subscriptionLifecycleNotificationSpecifications;
        private @Nullable Input<ResourceProviderManifestPropertiesTemplateDeploymentOptionsArgs> templateDeploymentOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(ProviderRegistrationPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capabilities = defaults.capabilities;
    	      this.featuresRule = defaults.featuresRule;
    	      this.management = defaults.management;
    	      this.metadata = defaults.metadata;
    	      this.namespace = defaults.namespace;
    	      this.providerAuthentication = defaults.providerAuthentication;
    	      this.providerAuthorizations = defaults.providerAuthorizations;
    	      this.providerHubMetadata = defaults.providerHubMetadata;
    	      this.providerType = defaults.providerType;
    	      this.providerVersion = defaults.providerVersion;
    	      this.provisioningState = defaults.provisioningState;
    	      this.requestHeaderOptions = defaults.requestHeaderOptions;
    	      this.requiredFeatures = defaults.requiredFeatures;
    	      this.subscriptionLifecycleNotificationSpecifications = defaults.subscriptionLifecycleNotificationSpecifications;
    	      this.templateDeploymentOptions = defaults.templateDeploymentOptions;
        }

        public Builder setCapabilities(@Nullable Input<List<ResourceProviderCapabilitiesArgs>> capabilities) {
            this.capabilities = capabilities;
            return this;
        }

        public Builder setCapabilities(@Nullable List<ResourceProviderCapabilitiesArgs> capabilities) {
            this.capabilities = Input.ofNullable(capabilities);
            return this;
        }

        public Builder setFeaturesRule(@Nullable Input<ResourceProviderManifestPropertiesFeaturesRuleArgs> featuresRule) {
            this.featuresRule = featuresRule;
            return this;
        }

        public Builder setFeaturesRule(@Nullable ResourceProviderManifestPropertiesFeaturesRuleArgs featuresRule) {
            this.featuresRule = Input.ofNullable(featuresRule);
            return this;
        }

        public Builder setManagement(@Nullable Input<ResourceProviderManifestPropertiesManagementArgs> management) {
            this.management = management;
            return this;
        }

        public Builder setManagement(@Nullable ResourceProviderManifestPropertiesManagementArgs management) {
            this.management = Input.ofNullable(management);
            return this;
        }

        public Builder setMetadata(@Nullable Input<Object> metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder setMetadata(@Nullable Object metadata) {
            this.metadata = Input.ofNullable(metadata);
            return this;
        }

        public Builder setNamespace(@Nullable Input<String> namespace) {
            this.namespace = namespace;
            return this;
        }

        public Builder setNamespace(@Nullable String namespace) {
            this.namespace = Input.ofNullable(namespace);
            return this;
        }

        public Builder setProviderAuthentication(@Nullable Input<ResourceProviderManifestPropertiesProviderAuthenticationArgs> providerAuthentication) {
            this.providerAuthentication = providerAuthentication;
            return this;
        }

        public Builder setProviderAuthentication(@Nullable ResourceProviderManifestPropertiesProviderAuthenticationArgs providerAuthentication) {
            this.providerAuthentication = Input.ofNullable(providerAuthentication);
            return this;
        }

        public Builder setProviderAuthorizations(@Nullable Input<List<ResourceProviderAuthorizationArgs>> providerAuthorizations) {
            this.providerAuthorizations = providerAuthorizations;
            return this;
        }

        public Builder setProviderAuthorizations(@Nullable List<ResourceProviderAuthorizationArgs> providerAuthorizations) {
            this.providerAuthorizations = Input.ofNullable(providerAuthorizations);
            return this;
        }

        public Builder setProviderHubMetadata(@Nullable Input<ProviderRegistrationPropertiesProviderHubMetadataArgs> providerHubMetadata) {
            this.providerHubMetadata = providerHubMetadata;
            return this;
        }

        public Builder setProviderHubMetadata(@Nullable ProviderRegistrationPropertiesProviderHubMetadataArgs providerHubMetadata) {
            this.providerHubMetadata = Input.ofNullable(providerHubMetadata);
            return this;
        }

        public Builder setProviderType(@Nullable Input<Either<String,ResourceProviderType>> providerType) {
            this.providerType = providerType;
            return this;
        }

        public Builder setProviderType(@Nullable Either<String,ResourceProviderType> providerType) {
            this.providerType = Input.ofNullable(providerType);
            return this;
        }

        public Builder setProviderVersion(@Nullable Input<String> providerVersion) {
            this.providerVersion = providerVersion;
            return this;
        }

        public Builder setProviderVersion(@Nullable String providerVersion) {
            this.providerVersion = Input.ofNullable(providerVersion);
            return this;
        }

        public Builder setProvisioningState(@Nullable Input<Either<String,ProvisioningState>> provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }

        public Builder setProvisioningState(@Nullable Either<String,ProvisioningState> provisioningState) {
            this.provisioningState = Input.ofNullable(provisioningState);
            return this;
        }

        public Builder setRequestHeaderOptions(@Nullable Input<ResourceProviderManifestPropertiesRequestHeaderOptionsArgs> requestHeaderOptions) {
            this.requestHeaderOptions = requestHeaderOptions;
            return this;
        }

        public Builder setRequestHeaderOptions(@Nullable ResourceProviderManifestPropertiesRequestHeaderOptionsArgs requestHeaderOptions) {
            this.requestHeaderOptions = Input.ofNullable(requestHeaderOptions);
            return this;
        }

        public Builder setRequiredFeatures(@Nullable Input<List<String>> requiredFeatures) {
            this.requiredFeatures = requiredFeatures;
            return this;
        }

        public Builder setRequiredFeatures(@Nullable List<String> requiredFeatures) {
            this.requiredFeatures = Input.ofNullable(requiredFeatures);
            return this;
        }

        public Builder setSubscriptionLifecycleNotificationSpecifications(@Nullable Input<ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsArgs> subscriptionLifecycleNotificationSpecifications) {
            this.subscriptionLifecycleNotificationSpecifications = subscriptionLifecycleNotificationSpecifications;
            return this;
        }

        public Builder setSubscriptionLifecycleNotificationSpecifications(@Nullable ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsArgs subscriptionLifecycleNotificationSpecifications) {
            this.subscriptionLifecycleNotificationSpecifications = Input.ofNullable(subscriptionLifecycleNotificationSpecifications);
            return this;
        }

        public Builder setTemplateDeploymentOptions(@Nullable Input<ResourceProviderManifestPropertiesTemplateDeploymentOptionsArgs> templateDeploymentOptions) {
            this.templateDeploymentOptions = templateDeploymentOptions;
            return this;
        }

        public Builder setTemplateDeploymentOptions(@Nullable ResourceProviderManifestPropertiesTemplateDeploymentOptionsArgs templateDeploymentOptions) {
            this.templateDeploymentOptions = Input.ofNullable(templateDeploymentOptions);
            return this;
        }

        public ProviderRegistrationPropertiesArgs build() {
            return new ProviderRegistrationPropertiesArgs(capabilities, featuresRule, management, metadata, namespace, providerAuthentication, providerAuthorizations, providerHubMetadata, providerType, providerVersion, provisioningState, requestHeaderOptions, requiredFeatures, subscriptionLifecycleNotificationSpecifications, templateDeploymentOptions);
        }
    }
}
