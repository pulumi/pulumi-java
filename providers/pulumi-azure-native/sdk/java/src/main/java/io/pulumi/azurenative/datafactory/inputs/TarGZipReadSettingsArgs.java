// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The TarGZip compression read settings.
 * 
 */
public final class TarGZipReadSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final TarGZipReadSettingsArgs Empty = new TarGZipReadSettingsArgs();

    /**
     * Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).
     * 
     */
    @InputImport(name="preserveCompressionFileNameAsFolder")
      private final @Nullable Input<Object> preserveCompressionFileNameAsFolder;

    public Input<Object> getPreserveCompressionFileNameAsFolder() {
        return this.preserveCompressionFileNameAsFolder == null ? Input.empty() : this.preserveCompressionFileNameAsFolder;
    }

    /**
     * The Compression setting type.
     * Expected value is 'TarGZipReadSettings'.
     * 
     */
    @InputImport(name="type", required=true)
      private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    public TarGZipReadSettingsArgs(
        @Nullable Input<Object> preserveCompressionFileNameAsFolder,
        Input<String> type) {
        this.preserveCompressionFileNameAsFolder = preserveCompressionFileNameAsFolder;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private TarGZipReadSettingsArgs() {
        this.preserveCompressionFileNameAsFolder = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TarGZipReadSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Object> preserveCompressionFileNameAsFolder;
        private Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(TarGZipReadSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.preserveCompressionFileNameAsFolder = defaults.preserveCompressionFileNameAsFolder;
    	      this.type = defaults.type;
        }

        public Builder preserveCompressionFileNameAsFolder(@Nullable Input<Object> preserveCompressionFileNameAsFolder) {
            this.preserveCompressionFileNameAsFolder = preserveCompressionFileNameAsFolder;
            return this;
        }

        public Builder preserveCompressionFileNameAsFolder(@Nullable Object preserveCompressionFileNameAsFolder) {
            this.preserveCompressionFileNameAsFolder = Input.ofNullable(preserveCompressionFileNameAsFolder);
            return this;
        }

        public Builder type(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder type(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }
        public TarGZipReadSettingsArgs build() {
            return new TarGZipReadSettingsArgs(preserveCompressionFileNameAsFolder, type);
        }
    }
}
