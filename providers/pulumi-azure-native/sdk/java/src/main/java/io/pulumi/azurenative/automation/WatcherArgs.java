// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WatcherArgs extends io.pulumi.resources.ResourceArgs {

    public static final WatcherArgs Empty = new WatcherArgs();

    /**
     * The name of the automation account.
     * 
     */
    @Import(name="automationAccountName", required=true)
      private final Output<String> automationAccountName;

    public Output<String> automationAccountName() {
        return this.automationAccountName;
    }

    /**
     * Gets or sets the description.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Gets or sets the frequency at which the watcher is invoked.
     * 
     */
    @Import(name="executionFrequencyInSeconds")
      private final @Nullable Output<Double> executionFrequencyInSeconds;

    public Output<Double> executionFrequencyInSeconds() {
        return this.executionFrequencyInSeconds == null ? Codegen.empty() : this.executionFrequencyInSeconds;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Name of an Azure Resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
     * 
     */
    @Import(name="scriptName")
      private final @Nullable Output<String> scriptName;

    public Output<String> scriptName() {
        return this.scriptName == null ? Codegen.empty() : this.scriptName;
    }

    /**
     * Gets or sets the parameters of the script.
     * 
     */
    @Import(name="scriptParameters")
      private final @Nullable Output<Map<String,String>> scriptParameters;

    public Output<Map<String,String>> scriptParameters() {
        return this.scriptParameters == null ? Codegen.empty() : this.scriptParameters;
    }

    /**
     * Gets or sets the name of the hybrid worker group the watcher will run on.
     * 
     */
    @Import(name="scriptRunOn")
      private final @Nullable Output<String> scriptRunOn;

    public Output<String> scriptRunOn() {
        return this.scriptRunOn == null ? Codegen.empty() : this.scriptRunOn;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The watcher name.
     * 
     */
    @Import(name="watcherName")
      private final @Nullable Output<String> watcherName;

    public Output<String> watcherName() {
        return this.watcherName == null ? Codegen.empty() : this.watcherName;
    }

    public WatcherArgs(
        Output<String> automationAccountName,
        @Nullable Output<String> description,
        @Nullable Output<Double> executionFrequencyInSeconds,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<String> scriptName,
        @Nullable Output<Map<String,String>> scriptParameters,
        @Nullable Output<String> scriptRunOn,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> watcherName) {
        this.automationAccountName = Objects.requireNonNull(automationAccountName, "expected parameter 'automationAccountName' to be non-null");
        this.description = description;
        this.executionFrequencyInSeconds = executionFrequencyInSeconds;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.scriptName = scriptName;
        this.scriptParameters = scriptParameters;
        this.scriptRunOn = scriptRunOn;
        this.tags = tags;
        this.watcherName = watcherName;
    }

    private WatcherArgs() {
        this.automationAccountName = Codegen.empty();
        this.description = Codegen.empty();
        this.executionFrequencyInSeconds = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.scriptName = Codegen.empty();
        this.scriptParameters = Codegen.empty();
        this.scriptRunOn = Codegen.empty();
        this.tags = Codegen.empty();
        this.watcherName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WatcherArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> automationAccountName;
        private @Nullable Output<String> description;
        private @Nullable Output<Double> executionFrequencyInSeconds;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> scriptName;
        private @Nullable Output<Map<String,String>> scriptParameters;
        private @Nullable Output<String> scriptRunOn;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> watcherName;

        public Builder() {
    	      // Empty
        }

        public Builder(WatcherArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automationAccountName = defaults.automationAccountName;
    	      this.description = defaults.description;
    	      this.executionFrequencyInSeconds = defaults.executionFrequencyInSeconds;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.scriptName = defaults.scriptName;
    	      this.scriptParameters = defaults.scriptParameters;
    	      this.scriptRunOn = defaults.scriptRunOn;
    	      this.tags = defaults.tags;
    	      this.watcherName = defaults.watcherName;
        }

        public Builder automationAccountName(Output<String> automationAccountName) {
            this.automationAccountName = Objects.requireNonNull(automationAccountName);
            return this;
        }
        public Builder automationAccountName(String automationAccountName) {
            this.automationAccountName = Output.of(Objects.requireNonNull(automationAccountName));
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder executionFrequencyInSeconds(@Nullable Output<Double> executionFrequencyInSeconds) {
            this.executionFrequencyInSeconds = executionFrequencyInSeconds;
            return this;
        }
        public Builder executionFrequencyInSeconds(@Nullable Double executionFrequencyInSeconds) {
            this.executionFrequencyInSeconds = Codegen.ofNullable(executionFrequencyInSeconds);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder scriptName(@Nullable Output<String> scriptName) {
            this.scriptName = scriptName;
            return this;
        }
        public Builder scriptName(@Nullable String scriptName) {
            this.scriptName = Codegen.ofNullable(scriptName);
            return this;
        }
        public Builder scriptParameters(@Nullable Output<Map<String,String>> scriptParameters) {
            this.scriptParameters = scriptParameters;
            return this;
        }
        public Builder scriptParameters(@Nullable Map<String,String> scriptParameters) {
            this.scriptParameters = Codegen.ofNullable(scriptParameters);
            return this;
        }
        public Builder scriptRunOn(@Nullable Output<String> scriptRunOn) {
            this.scriptRunOn = scriptRunOn;
            return this;
        }
        public Builder scriptRunOn(@Nullable String scriptRunOn) {
            this.scriptRunOn = Codegen.ofNullable(scriptRunOn);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder watcherName(@Nullable Output<String> watcherName) {
            this.watcherName = watcherName;
            return this;
        }
        public Builder watcherName(@Nullable String watcherName) {
            this.watcherName = Codegen.ofNullable(watcherName);
            return this;
        }        public WatcherArgs build() {
            return new WatcherArgs(automationAccountName, description, executionFrequencyInSeconds, location, resourceGroupName, scriptName, scriptParameters, scriptRunOn, tags, watcherName);
        }
    }
}
