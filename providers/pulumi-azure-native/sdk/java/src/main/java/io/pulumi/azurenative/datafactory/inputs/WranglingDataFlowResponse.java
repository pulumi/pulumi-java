// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.azurenative.datafactory.inputs.DataFlowResponseFolder;
import io.pulumi.azurenative.datafactory.inputs.PowerQuerySourceResponse;
import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Power Query data flow.
 * 
 */
public final class WranglingDataFlowResponse extends io.pulumi.resources.InvokeArgs {

    public static final WranglingDataFlowResponse Empty = new WranglingDataFlowResponse();

    /**
     * List of tags that can be used for describing the data flow.
     * 
     */
    @Import(name="annotations")
      private final @Nullable List<Object> annotations;

    public List<Object> annotations() {
        return this.annotations == null ? List.of() : this.annotations;
    }

    /**
     * The description of the data flow.
     * 
     */
    @Import(name="description")
      private final @Nullable String description;

    public Optional<String> description() {
        return this.description == null ? Optional.empty() : Optional.ofNullable(this.description);
    }

    /**
     * Locale of the Power query mashup document.
     * 
     */
    @Import(name="documentLocale")
      private final @Nullable String documentLocale;

    public Optional<String> documentLocale() {
        return this.documentLocale == null ? Optional.empty() : Optional.ofNullable(this.documentLocale);
    }

    /**
     * The folder that this data flow is in. If not specified, Data flow will appear at the root level.
     * 
     */
    @Import(name="folder")
      private final @Nullable DataFlowResponseFolder folder;

    public Optional<DataFlowResponseFolder> folder() {
        return this.folder == null ? Optional.empty() : Optional.ofNullable(this.folder);
    }

    /**
     * Power query mashup script.
     * 
     */
    @Import(name="script")
      private final @Nullable String script;

    public Optional<String> script() {
        return this.script == null ? Optional.empty() : Optional.ofNullable(this.script);
    }

    /**
     * List of sources in Power Query.
     * 
     */
    @Import(name="sources")
      private final @Nullable List<PowerQuerySourceResponse> sources;

    public List<PowerQuerySourceResponse> sources() {
        return this.sources == null ? List.of() : this.sources;
    }

    /**
     * Type of data flow.
     * Expected value is 'WranglingDataFlow'.
     * 
     */
    @Import(name="type", required=true)
      private final String type;

    public String type() {
        return this.type;
    }

    public WranglingDataFlowResponse(
        @Nullable List<Object> annotations,
        @Nullable String description,
        @Nullable String documentLocale,
        @Nullable DataFlowResponseFolder folder,
        @Nullable String script,
        @Nullable List<PowerQuerySourceResponse> sources,
        String type) {
        this.annotations = annotations;
        this.description = description;
        this.documentLocale = documentLocale;
        this.folder = folder;
        this.script = script;
        this.sources = sources;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private WranglingDataFlowResponse() {
        this.annotations = List.of();
        this.description = null;
        this.documentLocale = null;
        this.folder = null;
        this.script = null;
        this.sources = List.of();
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WranglingDataFlowResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<Object> annotations;
        private @Nullable String description;
        private @Nullable String documentLocale;
        private @Nullable DataFlowResponseFolder folder;
        private @Nullable String script;
        private @Nullable List<PowerQuerySourceResponse> sources;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(WranglingDataFlowResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.description = defaults.description;
    	      this.documentLocale = defaults.documentLocale;
    	      this.folder = defaults.folder;
    	      this.script = defaults.script;
    	      this.sources = defaults.sources;
    	      this.type = defaults.type;
        }

        public Builder annotations(@Nullable List<Object> annotations) {
            this.annotations = annotations;
            return this;
        }
        public Builder annotations(Object... annotations) {
            return annotations(List.of(annotations));
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder documentLocale(@Nullable String documentLocale) {
            this.documentLocale = documentLocale;
            return this;
        }
        public Builder folder(@Nullable DataFlowResponseFolder folder) {
            this.folder = folder;
            return this;
        }
        public Builder script(@Nullable String script) {
            this.script = script;
            return this;
        }
        public Builder sources(@Nullable List<PowerQuerySourceResponse> sources) {
            this.sources = sources;
            return this;
        }
        public Builder sources(PowerQuerySourceResponse... sources) {
            return sources(List.of(sources));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public WranglingDataFlowResponse build() {
            return new WranglingDataFlowResponse(annotations, description, documentLocale, folder, script, sources, type);
        }
    }
}
