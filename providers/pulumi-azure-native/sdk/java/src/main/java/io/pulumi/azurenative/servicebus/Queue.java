// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicebus;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.servicebus.QueueArgs;
import io.pulumi.azurenative.servicebus.outputs.MessageCountDetailsResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="azure-native:servicebus:Queue")
public class Queue extends io.pulumi.resources.CustomResource {
    @OutputExport(name="accessedAt", type=String.class, parameters={})
    private Output<String> accessedAt;

    public Output<String> getAccessedAt() {
        return this.accessedAt;
    }
    @OutputExport(name="autoDeleteOnIdle", type=String.class, parameters={})
    private Output</* @Nullable */ String> autoDeleteOnIdle;

    public Output</* @Nullable */ String> getAutoDeleteOnIdle() {
        return this.autoDeleteOnIdle;
    }
    @OutputExport(name="countDetails", type=MessageCountDetailsResponse.class, parameters={})
    private Output<MessageCountDetailsResponse> countDetails;

    public Output<MessageCountDetailsResponse> getCountDetails() {
        return this.countDetails;
    }
    @OutputExport(name="createdAt", type=String.class, parameters={})
    private Output<String> createdAt;

    public Output<String> getCreatedAt() {
        return this.createdAt;
    }
    @OutputExport(name="deadLetteringOnMessageExpiration", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deadLetteringOnMessageExpiration;

    public Output</* @Nullable */ Boolean> getDeadLetteringOnMessageExpiration() {
        return this.deadLetteringOnMessageExpiration;
    }
    @OutputExport(name="defaultMessageTimeToLive", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultMessageTimeToLive;

    public Output</* @Nullable */ String> getDefaultMessageTimeToLive() {
        return this.defaultMessageTimeToLive;
    }
    @OutputExport(name="duplicateDetectionHistoryTimeWindow", type=String.class, parameters={})
    private Output</* @Nullable */ String> duplicateDetectionHistoryTimeWindow;

    public Output</* @Nullable */ String> getDuplicateDetectionHistoryTimeWindow() {
        return this.duplicateDetectionHistoryTimeWindow;
    }
    @OutputExport(name="enableBatchedOperations", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableBatchedOperations;

    public Output</* @Nullable */ Boolean> getEnableBatchedOperations() {
        return this.enableBatchedOperations;
    }
    @OutputExport(name="enableExpress", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableExpress;

    public Output</* @Nullable */ Boolean> getEnableExpress() {
        return this.enableExpress;
    }
    @OutputExport(name="enablePartitioning", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enablePartitioning;

    public Output</* @Nullable */ Boolean> getEnablePartitioning() {
        return this.enablePartitioning;
    }
    @OutputExport(name="forwardDeadLetteredMessagesTo", type=String.class, parameters={})
    private Output</* @Nullable */ String> forwardDeadLetteredMessagesTo;

    public Output</* @Nullable */ String> getForwardDeadLetteredMessagesTo() {
        return this.forwardDeadLetteredMessagesTo;
    }
    @OutputExport(name="forwardTo", type=String.class, parameters={})
    private Output</* @Nullable */ String> forwardTo;

    public Output</* @Nullable */ String> getForwardTo() {
        return this.forwardTo;
    }
    @OutputExport(name="lockDuration", type=String.class, parameters={})
    private Output</* @Nullable */ String> lockDuration;

    public Output</* @Nullable */ String> getLockDuration() {
        return this.lockDuration;
    }
    @OutputExport(name="maxDeliveryCount", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxDeliveryCount;

    public Output</* @Nullable */ Integer> getMaxDeliveryCount() {
        return this.maxDeliveryCount;
    }
    @OutputExport(name="maxSizeInMegabytes", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxSizeInMegabytes;

    public Output</* @Nullable */ Integer> getMaxSizeInMegabytes() {
        return this.maxSizeInMegabytes;
    }
    @OutputExport(name="messageCount", type=Double.class, parameters={})
    private Output<Double> messageCount;

    public Output<Double> getMessageCount() {
        return this.messageCount;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="requiresDuplicateDetection", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requiresDuplicateDetection;

    public Output</* @Nullable */ Boolean> getRequiresDuplicateDetection() {
        return this.requiresDuplicateDetection;
    }
    @OutputExport(name="requiresSession", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requiresSession;

    public Output</* @Nullable */ Boolean> getRequiresSession() {
        return this.requiresSession;
    }
    @OutputExport(name="sizeInBytes", type=Double.class, parameters={})
    private Output<Double> sizeInBytes;

    public Output<Double> getSizeInBytes() {
        return this.sizeInBytes;
    }
    @OutputExport(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    public Output</* @Nullable */ String> getStatus() {
        return this.status;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="updatedAt", type=String.class, parameters={})
    private Output<String> updatedAt;

    public Output<String> getUpdatedAt() {
        return this.updatedAt;
    }

    public Queue(String name, QueueArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicebus:Queue", name, args == null ? QueueArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Queue(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicebus:Queue", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:servicebus/v20140901:Queue").build()),
                Input.of(Alias.builder().setType("azure-native:servicebus/v20150801:Queue").build()),
                Input.of(Alias.builder().setType("azure-native:servicebus/v20170401:Queue").build()),
                Input.of(Alias.builder().setType("azure-native:servicebus/v20180101preview:Queue").build()),
                Input.of(Alias.builder().setType("azure-native:servicebus/v20210101preview:Queue").build()),
                Input.of(Alias.builder().setType("azure-native:servicebus/v20210601preview:Queue").build()),
                Input.of(Alias.builder().setType("azure-native:servicebus/v20211101:Queue").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Queue get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Queue(name, id, options);
    }
}
