// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.webpubsub;

import io.pulumi.azurenative.webpubsub.inputs.EventHandlerSettingsArgs;
import io.pulumi.azurenative.webpubsub.inputs.ManagedIdentityArgs;
import io.pulumi.azurenative.webpubsub.inputs.ResourceSkuArgs;
import io.pulumi.azurenative.webpubsub.inputs.WebPubSubFeatureArgs;
import io.pulumi.azurenative.webpubsub.inputs.WebPubSubNetworkACLsArgs;
import io.pulumi.azurenative.webpubsub.inputs.WebPubSubTlsSettingsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebPubSubArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebPubSubArgs Empty = new WebPubSubArgs();

    @InputImport(name="eventHandler")
    private final @Nullable Input<EventHandlerSettingsArgs> eventHandler;

    public Input<EventHandlerSettingsArgs> getEventHandler() {
        return this.eventHandler == null ? Input.empty() : this.eventHandler;
    }

    @InputImport(name="features")
    private final @Nullable Input<List<WebPubSubFeatureArgs>> features;

    public Input<List<WebPubSubFeatureArgs>> getFeatures() {
        return this.features == null ? Input.empty() : this.features;
    }

    @InputImport(name="identity")
    private final @Nullable Input<ManagedIdentityArgs> identity;

    public Input<ManagedIdentityArgs> getIdentity() {
        return this.identity == null ? Input.empty() : this.identity;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="networkACLs")
    private final @Nullable Input<WebPubSubNetworkACLsArgs> networkACLs;

    public Input<WebPubSubNetworkACLsArgs> getNetworkACLs() {
        return this.networkACLs == null ? Input.empty() : this.networkACLs;
    }

    @InputImport(name="publicNetworkAccess")
    private final @Nullable Input<String> publicNetworkAccess;

    public Input<String> getPublicNetworkAccess() {
        return this.publicNetworkAccess == null ? Input.empty() : this.publicNetworkAccess;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="resourceName")
    private final @Nullable Input<String> resourceName;

    public Input<String> getPropResourceName() {
        return this.resourceName == null ? Input.empty() : this.resourceName;
    }

    @InputImport(name="sku")
    private final @Nullable Input<ResourceSkuArgs> sku;

    public Input<ResourceSkuArgs> getSku() {
        return this.sku == null ? Input.empty() : this.sku;
    }

    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="tls")
    private final @Nullable Input<WebPubSubTlsSettingsArgs> tls;

    public Input<WebPubSubTlsSettingsArgs> getTls() {
        return this.tls == null ? Input.empty() : this.tls;
    }

    public WebPubSubArgs(
        @Nullable Input<EventHandlerSettingsArgs> eventHandler,
        @Nullable Input<List<WebPubSubFeatureArgs>> features,
        @Nullable Input<ManagedIdentityArgs> identity,
        @Nullable Input<String> location,
        @Nullable Input<WebPubSubNetworkACLsArgs> networkACLs,
        @Nullable Input<String> publicNetworkAccess,
        Input<String> resourceGroupName,
        @Nullable Input<String> resourceName,
        @Nullable Input<ResourceSkuArgs> sku,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<WebPubSubTlsSettingsArgs> tls) {
        this.eventHandler = eventHandler;
        this.features = features;
        this.identity = identity;
        this.location = location;
        this.networkACLs = networkACLs;
        this.publicNetworkAccess = publicNetworkAccess == null ? Input.ofNullable("Enabled") : publicNetworkAccess;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = resourceName;
        this.sku = sku;
        this.tags = tags;
        this.tls = tls;
    }

    private WebPubSubArgs() {
        this.eventHandler = Input.empty();
        this.features = Input.empty();
        this.identity = Input.empty();
        this.location = Input.empty();
        this.networkACLs = Input.empty();
        this.publicNetworkAccess = Input.empty();
        this.resourceGroupName = Input.empty();
        this.resourceName = Input.empty();
        this.sku = Input.empty();
        this.tags = Input.empty();
        this.tls = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebPubSubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<EventHandlerSettingsArgs> eventHandler;
        private @Nullable Input<List<WebPubSubFeatureArgs>> features;
        private @Nullable Input<ManagedIdentityArgs> identity;
        private @Nullable Input<String> location;
        private @Nullable Input<WebPubSubNetworkACLsArgs> networkACLs;
        private @Nullable Input<String> publicNetworkAccess;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> resourceName;
        private @Nullable Input<ResourceSkuArgs> sku;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<WebPubSubTlsSettingsArgs> tls;

        public Builder() {
    	      // Empty
        }

        public Builder(WebPubSubArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventHandler = defaults.eventHandler;
    	      this.features = defaults.features;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.networkACLs = defaults.networkACLs;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.tls = defaults.tls;
        }

        public Builder setEventHandler(@Nullable Input<EventHandlerSettingsArgs> eventHandler) {
            this.eventHandler = eventHandler;
            return this;
        }

        public Builder setEventHandler(@Nullable EventHandlerSettingsArgs eventHandler) {
            this.eventHandler = Input.ofNullable(eventHandler);
            return this;
        }

        public Builder setFeatures(@Nullable Input<List<WebPubSubFeatureArgs>> features) {
            this.features = features;
            return this;
        }

        public Builder setFeatures(@Nullable List<WebPubSubFeatureArgs> features) {
            this.features = Input.ofNullable(features);
            return this;
        }

        public Builder setIdentity(@Nullable Input<ManagedIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }

        public Builder setIdentity(@Nullable ManagedIdentityArgs identity) {
            this.identity = Input.ofNullable(identity);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setNetworkACLs(@Nullable Input<WebPubSubNetworkACLsArgs> networkACLs) {
            this.networkACLs = networkACLs;
            return this;
        }

        public Builder setNetworkACLs(@Nullable WebPubSubNetworkACLsArgs networkACLs) {
            this.networkACLs = Input.ofNullable(networkACLs);
            return this;
        }

        public Builder setPublicNetworkAccess(@Nullable Input<String> publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        public Builder setPublicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = Input.ofNullable(publicNetworkAccess);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setResourceName(@Nullable Input<String> resourceName) {
            this.resourceName = resourceName;
            return this;
        }

        public Builder setResourceName(@Nullable String resourceName) {
            this.resourceName = Input.ofNullable(resourceName);
            return this;
        }

        public Builder setSku(@Nullable Input<ResourceSkuArgs> sku) {
            this.sku = sku;
            return this;
        }

        public Builder setSku(@Nullable ResourceSkuArgs sku) {
            this.sku = Input.ofNullable(sku);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTls(@Nullable Input<WebPubSubTlsSettingsArgs> tls) {
            this.tls = tls;
            return this;
        }

        public Builder setTls(@Nullable WebPubSubTlsSettingsArgs tls) {
            this.tls = Input.ofNullable(tls);
            return this;
        }

        public WebPubSubArgs build() {
            return new WebPubSubArgs(eventHandler, features, identity, location, networkACLs, publicNetworkAccess, resourceGroupName, resourceName, sku, tags, tls);
        }
    }
}
