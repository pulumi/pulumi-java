// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.outputs;

import io.pulumi.azurenative.compute.outputs.RunCommandInputParameterResponse;
import io.pulumi.azurenative.compute.outputs.VirtualMachineRunCommandInstanceViewResponse;
import io.pulumi.azurenative.compute.outputs.VirtualMachineRunCommandScriptSourceResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetVirtualMachineRunCommandByVirtualMachineResult {
    private final @Nullable Boolean asyncExecution;
    private final @Nullable String errorBlobUri;
    private final String id;
    private final VirtualMachineRunCommandInstanceViewResponse instanceView;
    private final String location;
    private final String name;
    private final @Nullable String outputBlobUri;
    private final @Nullable List<RunCommandInputParameterResponse> parameters;
    private final @Nullable List<RunCommandInputParameterResponse> protectedParameters;
    private final String provisioningState;
    private final @Nullable String runAsPassword;
    private final @Nullable String runAsUser;
    private final @Nullable VirtualMachineRunCommandScriptSourceResponse source;
    private final @Nullable Map<String,String> tags;
    private final @Nullable Integer timeoutInSeconds;
    private final String type;

    @OutputCustomType.Constructor({"asyncExecution","errorBlobUri","id","instanceView","location","name","outputBlobUri","parameters","protectedParameters","provisioningState","runAsPassword","runAsUser","source","tags","timeoutInSeconds","type"})
    private GetVirtualMachineRunCommandByVirtualMachineResult(
        @Nullable Boolean asyncExecution,
        @Nullable String errorBlobUri,
        String id,
        VirtualMachineRunCommandInstanceViewResponse instanceView,
        String location,
        String name,
        @Nullable String outputBlobUri,
        @Nullable List<RunCommandInputParameterResponse> parameters,
        @Nullable List<RunCommandInputParameterResponse> protectedParameters,
        String provisioningState,
        @Nullable String runAsPassword,
        @Nullable String runAsUser,
        @Nullable VirtualMachineRunCommandScriptSourceResponse source,
        @Nullable Map<String,String> tags,
        @Nullable Integer timeoutInSeconds,
        String type) {
        this.asyncExecution = asyncExecution;
        this.errorBlobUri = errorBlobUri;
        this.id = Objects.requireNonNull(id);
        this.instanceView = Objects.requireNonNull(instanceView);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.outputBlobUri = outputBlobUri;
        this.parameters = parameters;
        this.protectedParameters = protectedParameters;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.runAsPassword = runAsPassword;
        this.runAsUser = runAsUser;
        this.source = source;
        this.tags = tags;
        this.timeoutInSeconds = timeoutInSeconds;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<Boolean> getAsyncExecution() {
        return Optional.ofNullable(this.asyncExecution);
    }
    public Optional<String> getErrorBlobUri() {
        return Optional.ofNullable(this.errorBlobUri);
    }
    public String getId() {
        return this.id;
    }
    public VirtualMachineRunCommandInstanceViewResponse getInstanceView() {
        return this.instanceView;
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getOutputBlobUri() {
        return Optional.ofNullable(this.outputBlobUri);
    }
    public List<RunCommandInputParameterResponse> getParameters() {
        return this.parameters == null ? List.of() : this.parameters;
    }
    public List<RunCommandInputParameterResponse> getProtectedParameters() {
        return this.protectedParameters == null ? List.of() : this.protectedParameters;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<String> getRunAsPassword() {
        return Optional.ofNullable(this.runAsPassword);
    }
    public Optional<String> getRunAsUser() {
        return Optional.ofNullable(this.runAsUser);
    }
    public Optional<VirtualMachineRunCommandScriptSourceResponse> getSource() {
        return Optional.ofNullable(this.source);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<Integer> getTimeoutInSeconds() {
        return Optional.ofNullable(this.timeoutInSeconds);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualMachineRunCommandByVirtualMachineResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean asyncExecution;
        private @Nullable String errorBlobUri;
        private String id;
        private VirtualMachineRunCommandInstanceViewResponse instanceView;
        private String location;
        private String name;
        private @Nullable String outputBlobUri;
        private @Nullable List<RunCommandInputParameterResponse> parameters;
        private @Nullable List<RunCommandInputParameterResponse> protectedParameters;
        private String provisioningState;
        private @Nullable String runAsPassword;
        private @Nullable String runAsUser;
        private @Nullable VirtualMachineRunCommandScriptSourceResponse source;
        private @Nullable Map<String,String> tags;
        private @Nullable Integer timeoutInSeconds;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualMachineRunCommandByVirtualMachineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asyncExecution = defaults.asyncExecution;
    	      this.errorBlobUri = defaults.errorBlobUri;
    	      this.id = defaults.id;
    	      this.instanceView = defaults.instanceView;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.outputBlobUri = defaults.outputBlobUri;
    	      this.parameters = defaults.parameters;
    	      this.protectedParameters = defaults.protectedParameters;
    	      this.provisioningState = defaults.provisioningState;
    	      this.runAsPassword = defaults.runAsPassword;
    	      this.runAsUser = defaults.runAsUser;
    	      this.source = defaults.source;
    	      this.tags = defaults.tags;
    	      this.timeoutInSeconds = defaults.timeoutInSeconds;
    	      this.type = defaults.type;
        }

        public Builder setAsyncExecution(@Nullable Boolean asyncExecution) {
            this.asyncExecution = asyncExecution;
            return this;
        }

        public Builder setErrorBlobUri(@Nullable String errorBlobUri) {
            this.errorBlobUri = errorBlobUri;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInstanceView(VirtualMachineRunCommandInstanceViewResponse instanceView) {
            this.instanceView = Objects.requireNonNull(instanceView);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOutputBlobUri(@Nullable String outputBlobUri) {
            this.outputBlobUri = outputBlobUri;
            return this;
        }

        public Builder setParameters(@Nullable List<RunCommandInputParameterResponse> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setProtectedParameters(@Nullable List<RunCommandInputParameterResponse> protectedParameters) {
            this.protectedParameters = protectedParameters;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRunAsPassword(@Nullable String runAsPassword) {
            this.runAsPassword = runAsPassword;
            return this;
        }

        public Builder setRunAsUser(@Nullable String runAsUser) {
            this.runAsUser = runAsUser;
            return this;
        }

        public Builder setSource(@Nullable VirtualMachineRunCommandScriptSourceResponse source) {
            this.source = source;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTimeoutInSeconds(@Nullable Integer timeoutInSeconds) {
            this.timeoutInSeconds = timeoutInSeconds;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetVirtualMachineRunCommandByVirtualMachineResult build() {
            return new GetVirtualMachineRunCommandByVirtualMachineResult(asyncExecution, errorBlobUri, id, instanceView, location, name, outputBlobUri, parameters, protectedParameters, provisioningState, runAsPassword, runAsUser, source, tags, timeoutInSeconds, type);
        }
    }
}
