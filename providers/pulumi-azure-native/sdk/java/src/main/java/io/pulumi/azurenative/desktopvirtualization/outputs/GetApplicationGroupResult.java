// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.desktopvirtualization.outputs;

import io.pulumi.azurenative.desktopvirtualization.outputs.MigrationRequestPropertiesResponse;
import io.pulumi.azurenative.desktopvirtualization.outputs.ResourceModelWithAllowedPropertySetResponseIdentity;
import io.pulumi.azurenative.desktopvirtualization.outputs.ResourceModelWithAllowedPropertySetResponsePlan;
import io.pulumi.azurenative.desktopvirtualization.outputs.ResourceModelWithAllowedPropertySetResponseSku;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetApplicationGroupResult {
    /**
     * Resource Type of ApplicationGroup.
     * 
     */
    private final String applicationGroupType;
    /**
     * Is cloud pc resource.
     * 
     */
    private final Boolean cloudPcResource;
    /**
     * Description of ApplicationGroup.
     * 
     */
    private final @Nullable String description;
    /**
     * The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
     * 
     */
    private final String etag;
    /**
     * Friendly name of ApplicationGroup.
     * 
     */
    private final @Nullable String friendlyName;
    /**
     * HostPool arm path of ApplicationGroup.
     * 
     */
    private final String hostPoolArmPath;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private final String id;
    private final @Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    private final @Nullable String kind;
    /**
     * The geo-location where the resource lives
     * 
     */
    private final @Nullable String location;
    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
     */
    private final @Nullable String managedBy;
    /**
     * The registration info of HostPool.
     * 
     */
    private final @Nullable MigrationRequestPropertiesResponse migrationRequest;
    /**
     * The name of the resource
     * 
     */
    private final String name;
    /**
     * ObjectId of ApplicationGroup. (internal use)
     * 
     */
    private final String objectId;
    private final @Nullable ResourceModelWithAllowedPropertySetResponsePlan plan;
    private final @Nullable ResourceModelWithAllowedPropertySetResponseSku sku;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
     */
    private final String type;
    /**
     * Workspace arm path of ApplicationGroup.
     * 
     */
    private final String workspaceArmPath;

    @OutputCustomType.Constructor({"applicationGroupType","cloudPcResource","description","etag","friendlyName","hostPoolArmPath","id","identity","kind","location","managedBy","migrationRequest","name","objectId","plan","sku","tags","type","workspaceArmPath"})
    private GetApplicationGroupResult(
        String applicationGroupType,
        Boolean cloudPcResource,
        @Nullable String description,
        String etag,
        @Nullable String friendlyName,
        String hostPoolArmPath,
        String id,
        @Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity,
        @Nullable String kind,
        @Nullable String location,
        @Nullable String managedBy,
        @Nullable MigrationRequestPropertiesResponse migrationRequest,
        String name,
        String objectId,
        @Nullable ResourceModelWithAllowedPropertySetResponsePlan plan,
        @Nullable ResourceModelWithAllowedPropertySetResponseSku sku,
        @Nullable Map<String,String> tags,
        String type,
        String workspaceArmPath) {
        this.applicationGroupType = applicationGroupType;
        this.cloudPcResource = cloudPcResource;
        this.description = description;
        this.etag = etag;
        this.friendlyName = friendlyName;
        this.hostPoolArmPath = hostPoolArmPath;
        this.id = id;
        this.identity = identity;
        this.kind = kind;
        this.location = location;
        this.managedBy = managedBy;
        this.migrationRequest = migrationRequest;
        this.name = name;
        this.objectId = objectId;
        this.plan = plan;
        this.sku = sku;
        this.tags = tags;
        this.type = type;
        this.workspaceArmPath = workspaceArmPath;
    }

    /**
     * Resource Type of ApplicationGroup.
     * 
    */
    public String getApplicationGroupType() {
        return this.applicationGroupType;
    }
    /**
     * Is cloud pc resource.
     * 
    */
    public Boolean getCloudPcResource() {
        return this.cloudPcResource;
    }
    /**
     * Description of ApplicationGroup.
     * 
    */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
     * 
    */
    public String getEtag() {
        return this.etag;
    }
    /**
     * Friendly name of ApplicationGroup.
     * 
    */
    public Optional<String> getFriendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }
    /**
     * HostPool arm path of ApplicationGroup.
     * 
    */
    public String getHostPoolArmPath() {
        return this.hostPoolArmPath;
    }
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
    */
    public String getId() {
        return this.id;
    }
    public Optional<ResourceModelWithAllowedPropertySetResponseIdentity> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
    */
    public Optional<String> getKind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * The geo-location where the resource lives
     * 
    */
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
    */
    public Optional<String> getManagedBy() {
        return Optional.ofNullable(this.managedBy);
    }
    /**
     * The registration info of HostPool.
     * 
    */
    public Optional<MigrationRequestPropertiesResponse> getMigrationRequest() {
        return Optional.ofNullable(this.migrationRequest);
    }
    /**
     * The name of the resource
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * ObjectId of ApplicationGroup. (internal use)
     * 
    */
    public String getObjectId() {
        return this.objectId;
    }
    public Optional<ResourceModelWithAllowedPropertySetResponsePlan> getPlan() {
        return Optional.ofNullable(this.plan);
    }
    public Optional<ResourceModelWithAllowedPropertySetResponseSku> getSku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
    */
    public String getType() {
        return this.type;
    }
    /**
     * Workspace arm path of ApplicationGroup.
     * 
    */
    public String getWorkspaceArmPath() {
        return this.workspaceArmPath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationGroupResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String applicationGroupType;
        private Boolean cloudPcResource;
        private @Nullable String description;
        private String etag;
        private @Nullable String friendlyName;
        private String hostPoolArmPath;
        private String id;
        private @Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity;
        private @Nullable String kind;
        private @Nullable String location;
        private @Nullable String managedBy;
        private @Nullable MigrationRequestPropertiesResponse migrationRequest;
        private String name;
        private String objectId;
        private @Nullable ResourceModelWithAllowedPropertySetResponsePlan plan;
        private @Nullable ResourceModelWithAllowedPropertySetResponseSku sku;
        private @Nullable Map<String,String> tags;
        private String type;
        private String workspaceArmPath;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationGroupType = defaults.applicationGroupType;
    	      this.cloudPcResource = defaults.cloudPcResource;
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.friendlyName = defaults.friendlyName;
    	      this.hostPoolArmPath = defaults.hostPoolArmPath;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.managedBy = defaults.managedBy;
    	      this.migrationRequest = defaults.migrationRequest;
    	      this.name = defaults.name;
    	      this.objectId = defaults.objectId;
    	      this.plan = defaults.plan;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.workspaceArmPath = defaults.workspaceArmPath;
        }

        public Builder setApplicationGroupType(String applicationGroupType) {
            this.applicationGroupType = Objects.requireNonNull(applicationGroupType);
            return this;
        }

        public Builder setCloudPcResource(Boolean cloudPcResource) {
            this.cloudPcResource = Objects.requireNonNull(cloudPcResource);
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setFriendlyName(@Nullable String friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }

        public Builder setHostPoolArmPath(String hostPoolArmPath) {
            this.hostPoolArmPath = Objects.requireNonNull(hostPoolArmPath);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity) {
            this.identity = identity;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setManagedBy(@Nullable String managedBy) {
            this.managedBy = managedBy;
            return this;
        }

        public Builder setMigrationRequest(@Nullable MigrationRequestPropertiesResponse migrationRequest) {
            this.migrationRequest = migrationRequest;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setObjectId(String objectId) {
            this.objectId = Objects.requireNonNull(objectId);
            return this;
        }

        public Builder setPlan(@Nullable ResourceModelWithAllowedPropertySetResponsePlan plan) {
            this.plan = plan;
            return this;
        }

        public Builder setSku(@Nullable ResourceModelWithAllowedPropertySetResponseSku sku) {
            this.sku = sku;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setWorkspaceArmPath(String workspaceArmPath) {
            this.workspaceArmPath = Objects.requireNonNull(workspaceArmPath);
            return this;
        }
        public GetApplicationGroupResult build() {
            return new GetApplicationGroupResult(applicationGroupType, cloudPcResource, description, etag, friendlyName, hostPoolArmPath, id, identity, kind, location, managedBy, migrationRequest, name, objectId, plan, sku, tags, type, workspaceArmPath);
        }
    }
}
