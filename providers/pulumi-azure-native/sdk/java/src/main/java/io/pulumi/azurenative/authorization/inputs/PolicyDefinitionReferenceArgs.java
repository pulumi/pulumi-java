// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.authorization.inputs;

import io.pulumi.azurenative.authorization.inputs.ParameterValuesValueArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The policy definition reference.
 * 
 */
public final class PolicyDefinitionReferenceArgs extends io.pulumi.resources.ResourceArgs {

    public static final PolicyDefinitionReferenceArgs Empty = new PolicyDefinitionReferenceArgs();

    /**
     * The name of the groups that this policy definition reference belongs to.
     * 
     */
    @InputImport(name="groupNames")
      private final @Nullable Output<List<String>> groupNames;

    public Output<List<String>> getGroupNames() {
        return this.groupNames == null ? Output.empty() : this.groupNames;
    }

    /**
     * The parameter values for the referenced policy rule. The keys are the parameter names.
     * 
     */
    @InputImport(name="parameters")
      private final @Nullable Output<Map<String,ParameterValuesValueArgs>> parameters;

    public Output<Map<String,ParameterValuesValueArgs>> getParameters() {
        return this.parameters == null ? Output.empty() : this.parameters;
    }

    /**
     * The ID of the policy definition or policy set definition.
     * 
     */
    @InputImport(name="policyDefinitionId", required=true)
      private final Output<String> policyDefinitionId;

    public Output<String> getPolicyDefinitionId() {
        return this.policyDefinitionId;
    }

    /**
     * A unique id (within the policy set definition) for this policy definition reference.
     * 
     */
    @InputImport(name="policyDefinitionReferenceId")
      private final @Nullable Output<String> policyDefinitionReferenceId;

    public Output<String> getPolicyDefinitionReferenceId() {
        return this.policyDefinitionReferenceId == null ? Output.empty() : this.policyDefinitionReferenceId;
    }

    public PolicyDefinitionReferenceArgs(
        @Nullable Output<List<String>> groupNames,
        @Nullable Output<Map<String,ParameterValuesValueArgs>> parameters,
        Output<String> policyDefinitionId,
        @Nullable Output<String> policyDefinitionReferenceId) {
        this.groupNames = groupNames;
        this.parameters = parameters;
        this.policyDefinitionId = Objects.requireNonNull(policyDefinitionId, "expected parameter 'policyDefinitionId' to be non-null");
        this.policyDefinitionReferenceId = policyDefinitionReferenceId;
    }

    private PolicyDefinitionReferenceArgs() {
        this.groupNames = Output.empty();
        this.parameters = Output.empty();
        this.policyDefinitionId = Output.empty();
        this.policyDefinitionReferenceId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyDefinitionReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> groupNames;
        private @Nullable Output<Map<String,ParameterValuesValueArgs>> parameters;
        private Output<String> policyDefinitionId;
        private @Nullable Output<String> policyDefinitionReferenceId;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyDefinitionReferenceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupNames = defaults.groupNames;
    	      this.parameters = defaults.parameters;
    	      this.policyDefinitionId = defaults.policyDefinitionId;
    	      this.policyDefinitionReferenceId = defaults.policyDefinitionReferenceId;
        }

        public Builder groupNames(@Nullable Output<List<String>> groupNames) {
            this.groupNames = groupNames;
            return this;
        }

        public Builder groupNames(@Nullable List<String> groupNames) {
            this.groupNames = Output.ofNullable(groupNames);
            return this;
        }

        public Builder parameters(@Nullable Output<Map<String,ParameterValuesValueArgs>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder parameters(@Nullable Map<String,ParameterValuesValueArgs> parameters) {
            this.parameters = Output.ofNullable(parameters);
            return this;
        }

        public Builder policyDefinitionId(Output<String> policyDefinitionId) {
            this.policyDefinitionId = Objects.requireNonNull(policyDefinitionId);
            return this;
        }

        public Builder policyDefinitionId(String policyDefinitionId) {
            this.policyDefinitionId = Output.of(Objects.requireNonNull(policyDefinitionId));
            return this;
        }

        public Builder policyDefinitionReferenceId(@Nullable Output<String> policyDefinitionReferenceId) {
            this.policyDefinitionReferenceId = policyDefinitionReferenceId;
            return this;
        }

        public Builder policyDefinitionReferenceId(@Nullable String policyDefinitionReferenceId) {
            this.policyDefinitionReferenceId = Output.ofNullable(policyDefinitionReferenceId);
            return this;
        }
        public PolicyDefinitionReferenceArgs build() {
            return new PolicyDefinitionReferenceArgs(groupNames, parameters, policyDefinitionId, policyDefinitionReferenceId);
        }
    }
}
