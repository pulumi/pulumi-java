// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry;

import io.pulumi.azurenative.containerregistry.inputs.DockerBuildRequestArgs;
import io.pulumi.azurenative.containerregistry.inputs.EncodedTaskRunRequestArgs;
import io.pulumi.azurenative.containerregistry.inputs.FileTaskRunRequestArgs;
import io.pulumi.azurenative.containerregistry.inputs.IdentityPropertiesArgs;
import io.pulumi.azurenative.containerregistry.inputs.TaskRunRequestArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TaskRunArgs extends io.pulumi.resources.ResourceArgs {

    public static final TaskRunArgs Empty = new TaskRunArgs();

    /**
     * How the run should be forced to rerun even if the run request configuration has not changed
     * 
     */
    @Import(name="forceUpdateTag")
      private final @Nullable Output<String> forceUpdateTag;

    public Output<String> getForceUpdateTag() {
        return this.forceUpdateTag == null ? Output.empty() : this.forceUpdateTag;
    }

    /**
     * Identity for the resource.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<IdentityPropertiesArgs> identity;

    public Output<IdentityPropertiesArgs> getIdentity() {
        return this.identity == null ? Output.empty() : this.identity;
    }

    /**
     * The location of the resource
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The name of the container registry.
     * 
     */
    @Import(name="registryName", required=true)
      private final Output<String> registryName;

    public Output<String> getRegistryName() {
        return this.registryName;
    }

    /**
     * The name of the resource group to which the container registry belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The request (parameters) for the run
     * 
     */
    @Import(name="runRequest")
      private final @Nullable Output<Object> runRequest;

    public Output<Object> getRunRequest() {
        return this.runRequest == null ? Output.empty() : this.runRequest;
    }

    /**
     * The name of the task run.
     * 
     */
    @Import(name="taskRunName")
      private final @Nullable Output<String> taskRunName;

    public Output<String> getTaskRunName() {
        return this.taskRunName == null ? Output.empty() : this.taskRunName;
    }

    public TaskRunArgs(
        @Nullable Output<String> forceUpdateTag,
        @Nullable Output<IdentityPropertiesArgs> identity,
        @Nullable Output<String> location,
        Output<String> registryName,
        Output<String> resourceGroupName,
        @Nullable Output<Object> runRequest,
        @Nullable Output<String> taskRunName) {
        this.forceUpdateTag = forceUpdateTag;
        this.identity = identity;
        this.location = location;
        this.registryName = Objects.requireNonNull(registryName, "expected parameter 'registryName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.runRequest = runRequest;
        this.taskRunName = taskRunName;
    }

    private TaskRunArgs() {
        this.forceUpdateTag = Output.empty();
        this.identity = Output.empty();
        this.location = Output.empty();
        this.registryName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.runRequest = Output.empty();
        this.taskRunName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskRunArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> forceUpdateTag;
        private @Nullable Output<IdentityPropertiesArgs> identity;
        private @Nullable Output<String> location;
        private Output<String> registryName;
        private Output<String> resourceGroupName;
        private @Nullable Output<Object> runRequest;
        private @Nullable Output<String> taskRunName;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskRunArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.forceUpdateTag = defaults.forceUpdateTag;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.registryName = defaults.registryName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.runRequest = defaults.runRequest;
    	      this.taskRunName = defaults.taskRunName;
        }

        public Builder forceUpdateTag(@Nullable Output<String> forceUpdateTag) {
            this.forceUpdateTag = forceUpdateTag;
            return this;
        }
        public Builder forceUpdateTag(@Nullable String forceUpdateTag) {
            this.forceUpdateTag = Output.ofNullable(forceUpdateTag);
            return this;
        }
        public Builder identity(@Nullable Output<IdentityPropertiesArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable IdentityPropertiesArgs identity) {
            this.identity = Output.ofNullable(identity);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }
        public Builder registryName(Output<String> registryName) {
            this.registryName = Objects.requireNonNull(registryName);
            return this;
        }
        public Builder registryName(String registryName) {
            this.registryName = Output.of(Objects.requireNonNull(registryName));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder runRequest(@Nullable Output<Object> runRequest) {
            this.runRequest = runRequest;
            return this;
        }
        public Builder runRequest(@Nullable Object runRequest) {
            this.runRequest = Output.ofNullable(runRequest);
            return this;
        }
        public Builder taskRunName(@Nullable Output<String> taskRunName) {
            this.taskRunName = taskRunName;
            return this;
        }
        public Builder taskRunName(@Nullable String taskRunName) {
            this.taskRunName = Output.ofNullable(taskRunName);
            return this;
        }        public TaskRunArgs build() {
            return new TaskRunArgs(forceUpdateTag, identity, location, registryName, resourceGroupName, runRequest, taskRunName);
        }
    }
}
