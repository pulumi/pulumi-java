// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.sql.inputs.JobStepActionArgs;
import io.pulumi.azurenative.sql.inputs.JobStepExecutionOptionsArgs;
import io.pulumi.azurenative.sql.inputs.JobStepOutputArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobStepArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobStepArgs Empty = new JobStepArgs();

    @InputImport(name="action", required=true)
    private final Input<JobStepActionArgs> action;

    public Input<JobStepActionArgs> getAction() {
        return this.action;
    }

    @InputImport(name="credential", required=true)
    private final Input<String> credential;

    public Input<String> getCredential() {
        return this.credential;
    }

    @InputImport(name="executionOptions")
    private final @Nullable Input<JobStepExecutionOptionsArgs> executionOptions;

    public Input<JobStepExecutionOptionsArgs> getExecutionOptions() {
        return this.executionOptions == null ? Input.empty() : this.executionOptions;
    }

    @InputImport(name="jobAgentName", required=true)
    private final Input<String> jobAgentName;

    public Input<String> getJobAgentName() {
        return this.jobAgentName;
    }

    @InputImport(name="jobName", required=true)
    private final Input<String> jobName;

    public Input<String> getJobName() {
        return this.jobName;
    }

    @InputImport(name="output")
    private final @Nullable Input<JobStepOutputArgs> output;

    public Input<JobStepOutputArgs> getOutput() {
        return this.output == null ? Input.empty() : this.output;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="serverName", required=true)
    private final Input<String> serverName;

    public Input<String> getServerName() {
        return this.serverName;
    }

    @InputImport(name="stepId")
    private final @Nullable Input<Integer> stepId;

    public Input<Integer> getStepId() {
        return this.stepId == null ? Input.empty() : this.stepId;
    }

    @InputImport(name="stepName")
    private final @Nullable Input<String> stepName;

    public Input<String> getStepName() {
        return this.stepName == null ? Input.empty() : this.stepName;
    }

    @InputImport(name="targetGroup", required=true)
    private final Input<String> targetGroup;

    public Input<String> getTargetGroup() {
        return this.targetGroup;
    }

    public JobStepArgs(
        Input<JobStepActionArgs> action,
        Input<String> credential,
        @Nullable Input<JobStepExecutionOptionsArgs> executionOptions,
        Input<String> jobAgentName,
        Input<String> jobName,
        @Nullable Input<JobStepOutputArgs> output,
        Input<String> resourceGroupName,
        Input<String> serverName,
        @Nullable Input<Integer> stepId,
        @Nullable Input<String> stepName,
        Input<String> targetGroup) {
        this.action = Objects.requireNonNull(action, "expected parameter 'action' to be non-null");
        this.credential = Objects.requireNonNull(credential, "expected parameter 'credential' to be non-null");
        this.executionOptions = executionOptions;
        this.jobAgentName = Objects.requireNonNull(jobAgentName, "expected parameter 'jobAgentName' to be non-null");
        this.jobName = Objects.requireNonNull(jobName, "expected parameter 'jobName' to be non-null");
        this.output = output;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serverName = Objects.requireNonNull(serverName, "expected parameter 'serverName' to be non-null");
        this.stepId = stepId;
        this.stepName = stepName;
        this.targetGroup = Objects.requireNonNull(targetGroup, "expected parameter 'targetGroup' to be non-null");
    }

    private JobStepArgs() {
        this.action = Input.empty();
        this.credential = Input.empty();
        this.executionOptions = Input.empty();
        this.jobAgentName = Input.empty();
        this.jobName = Input.empty();
        this.output = Input.empty();
        this.resourceGroupName = Input.empty();
        this.serverName = Input.empty();
        this.stepId = Input.empty();
        this.stepName = Input.empty();
        this.targetGroup = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobStepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<JobStepActionArgs> action;
        private Input<String> credential;
        private @Nullable Input<JobStepExecutionOptionsArgs> executionOptions;
        private Input<String> jobAgentName;
        private Input<String> jobName;
        private @Nullable Input<JobStepOutputArgs> output;
        private Input<String> resourceGroupName;
        private Input<String> serverName;
        private @Nullable Input<Integer> stepId;
        private @Nullable Input<String> stepName;
        private Input<String> targetGroup;

        public Builder() {
    	      // Empty
        }

        public Builder(JobStepArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.credential = defaults.credential;
    	      this.executionOptions = defaults.executionOptions;
    	      this.jobAgentName = defaults.jobAgentName;
    	      this.jobName = defaults.jobName;
    	      this.output = defaults.output;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serverName = defaults.serverName;
    	      this.stepId = defaults.stepId;
    	      this.stepName = defaults.stepName;
    	      this.targetGroup = defaults.targetGroup;
        }

        public Builder setAction(Input<JobStepActionArgs> action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public Builder setAction(JobStepActionArgs action) {
            this.action = Input.of(Objects.requireNonNull(action));
            return this;
        }

        public Builder setCredential(Input<String> credential) {
            this.credential = Objects.requireNonNull(credential);
            return this;
        }

        public Builder setCredential(String credential) {
            this.credential = Input.of(Objects.requireNonNull(credential));
            return this;
        }

        public Builder setExecutionOptions(@Nullable Input<JobStepExecutionOptionsArgs> executionOptions) {
            this.executionOptions = executionOptions;
            return this;
        }

        public Builder setExecutionOptions(@Nullable JobStepExecutionOptionsArgs executionOptions) {
            this.executionOptions = Input.ofNullable(executionOptions);
            return this;
        }

        public Builder setJobAgentName(Input<String> jobAgentName) {
            this.jobAgentName = Objects.requireNonNull(jobAgentName);
            return this;
        }

        public Builder setJobAgentName(String jobAgentName) {
            this.jobAgentName = Input.of(Objects.requireNonNull(jobAgentName));
            return this;
        }

        public Builder setJobName(Input<String> jobName) {
            this.jobName = Objects.requireNonNull(jobName);
            return this;
        }

        public Builder setJobName(String jobName) {
            this.jobName = Input.of(Objects.requireNonNull(jobName));
            return this;
        }

        public Builder setOutput(@Nullable Input<JobStepOutputArgs> output) {
            this.output = output;
            return this;
        }

        public Builder setOutput(@Nullable JobStepOutputArgs output) {
            this.output = Input.ofNullable(output);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setServerName(Input<String> serverName) {
            this.serverName = Objects.requireNonNull(serverName);
            return this;
        }

        public Builder setServerName(String serverName) {
            this.serverName = Input.of(Objects.requireNonNull(serverName));
            return this;
        }

        public Builder setStepId(@Nullable Input<Integer> stepId) {
            this.stepId = stepId;
            return this;
        }

        public Builder setStepId(@Nullable Integer stepId) {
            this.stepId = Input.ofNullable(stepId);
            return this;
        }

        public Builder setStepName(@Nullable Input<String> stepName) {
            this.stepName = stepName;
            return this;
        }

        public Builder setStepName(@Nullable String stepName) {
            this.stepName = Input.ofNullable(stepName);
            return this;
        }

        public Builder setTargetGroup(Input<String> targetGroup) {
            this.targetGroup = Objects.requireNonNull(targetGroup);
            return this;
        }

        public Builder setTargetGroup(String targetGroup) {
            this.targetGroup = Input.of(Objects.requireNonNull(targetGroup));
            return this;
        }

        public JobStepArgs build() {
            return new JobStepArgs(action, credential, executionOptions, jobAgentName, jobName, output, resourceGroupName, serverName, stepId, stepName, targetGroup);
        }
    }
}
