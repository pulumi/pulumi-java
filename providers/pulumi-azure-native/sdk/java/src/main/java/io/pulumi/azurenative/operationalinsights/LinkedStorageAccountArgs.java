// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.operationalinsights;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LinkedStorageAccountArgs extends io.pulumi.resources.ResourceArgs {

    public static final LinkedStorageAccountArgs Empty = new LinkedStorageAccountArgs();

    /**
     * Linked storage accounts type.
     * 
     */
    @InputImport(name="dataSourceType")
      private final @Nullable Output<String> dataSourceType;

    public Output<String> getDataSourceType() {
        return this.dataSourceType == null ? Output.empty() : this.dataSourceType;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Linked storage accounts resources ids.
     * 
     */
    @InputImport(name="storageAccountIds")
      private final @Nullable Output<List<String>> storageAccountIds;

    public Output<List<String>> getStorageAccountIds() {
        return this.storageAccountIds == null ? Output.empty() : this.storageAccountIds;
    }

    /**
     * The name of the workspace.
     * 
     */
    @InputImport(name="workspaceName", required=true)
      private final Output<String> workspaceName;

    public Output<String> getWorkspaceName() {
        return this.workspaceName;
    }

    public LinkedStorageAccountArgs(
        @Nullable Output<String> dataSourceType,
        Output<String> resourceGroupName,
        @Nullable Output<List<String>> storageAccountIds,
        Output<String> workspaceName) {
        this.dataSourceType = dataSourceType;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.storageAccountIds = storageAccountIds;
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private LinkedStorageAccountArgs() {
        this.dataSourceType = Output.empty();
        this.resourceGroupName = Output.empty();
        this.storageAccountIds = Output.empty();
        this.workspaceName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinkedStorageAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> dataSourceType;
        private Output<String> resourceGroupName;
        private @Nullable Output<List<String>> storageAccountIds;
        private Output<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(LinkedStorageAccountArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSourceType = defaults.dataSourceType;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.storageAccountIds = defaults.storageAccountIds;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder dataSourceType(@Nullable Output<String> dataSourceType) {
            this.dataSourceType = dataSourceType;
            return this;
        }

        public Builder dataSourceType(@Nullable String dataSourceType) {
            this.dataSourceType = Output.ofNullable(dataSourceType);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder storageAccountIds(@Nullable Output<List<String>> storageAccountIds) {
            this.storageAccountIds = storageAccountIds;
            return this;
        }

        public Builder storageAccountIds(@Nullable List<String> storageAccountIds) {
            this.storageAccountIds = Output.ofNullable(storageAccountIds);
            return this;
        }

        public Builder workspaceName(Output<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            this.workspaceName = Output.of(Objects.requireNonNull(workspaceName));
            return this;
        }
        public LinkedStorageAccountArgs build() {
            return new LinkedStorageAccountArgs(dataSourceType, resourceGroupName, storageAccountIds, workspaceName);
        }
    }
}
