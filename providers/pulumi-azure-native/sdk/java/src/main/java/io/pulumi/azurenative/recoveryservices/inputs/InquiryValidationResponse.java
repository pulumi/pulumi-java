// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.azurenative.recoveryservices.inputs.ErrorDetailResponse;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Validation for inquired protectable items under a given container.
 * 
 */
public final class InquiryValidationResponse extends io.pulumi.resources.InvokeArgs {

    public static final InquiryValidationResponse Empty = new InquiryValidationResponse();

    /**
     * Error Additional Detail in case the status is non-success.
     * 
     */
    @Import(name="additionalDetail", required=true)
      private final String additionalDetail;

    public String additionalDetail() {
        return this.additionalDetail;
    }

    /**
     * Error Detail in case the status is non-success.
     * 
     */
    @Import(name="errorDetail")
      private final @Nullable ErrorDetailResponse errorDetail;

    public Optional<ErrorDetailResponse> errorDetail() {
        return this.errorDetail == null ? Optional.empty() : Optional.ofNullable(this.errorDetail);
    }

    /**
     * Status for the Inquiry Validation.
     * 
     */
    @Import(name="status")
      private final @Nullable String status;

    public Optional<String> status() {
        return this.status == null ? Optional.empty() : Optional.ofNullable(this.status);
    }

    public InquiryValidationResponse(
        String additionalDetail,
        @Nullable ErrorDetailResponse errorDetail,
        @Nullable String status) {
        this.additionalDetail = Objects.requireNonNull(additionalDetail, "expected parameter 'additionalDetail' to be non-null");
        this.errorDetail = errorDetail;
        this.status = status;
    }

    private InquiryValidationResponse() {
        this.additionalDetail = null;
        this.errorDetail = null;
        this.status = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InquiryValidationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String additionalDetail;
        private @Nullable ErrorDetailResponse errorDetail;
        private @Nullable String status;

        public Builder() {
    	      // Empty
        }

        public Builder(InquiryValidationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetail = defaults.additionalDetail;
    	      this.errorDetail = defaults.errorDetail;
    	      this.status = defaults.status;
        }

        public Builder additionalDetail(String additionalDetail) {
            this.additionalDetail = Objects.requireNonNull(additionalDetail);
            return this;
        }
        public Builder errorDetail(@Nullable ErrorDetailResponse errorDetail) {
            this.errorDetail = errorDetail;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }        public InquiryValidationResponse build() {
            return new InquiryValidationResponse(additionalDetail, errorDetail, status);
        }
    }
}
