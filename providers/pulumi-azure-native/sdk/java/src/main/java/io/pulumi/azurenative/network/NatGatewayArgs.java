// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.network.inputs.NatGatewaySkuArgs;
import io.pulumi.azurenative.network.inputs.SubResourceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NatGatewayArgs extends io.pulumi.resources.ResourceArgs {

    public static final NatGatewayArgs Empty = new NatGatewayArgs();

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * The idle timeout of the nat gateway.
     * 
     */
    @Import(name="idleTimeoutInMinutes")
      private final @Nullable Output<Integer> idleTimeoutInMinutes;

    public Output<Integer> idleTimeoutInMinutes() {
        return this.idleTimeoutInMinutes == null ? Codegen.empty() : this.idleTimeoutInMinutes;
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the nat gateway.
     * 
     */
    @Import(name="natGatewayName")
      private final @Nullable Output<String> natGatewayName;

    public Output<String> natGatewayName() {
        return this.natGatewayName == null ? Codegen.empty() : this.natGatewayName;
    }

    /**
     * An array of public ip addresses associated with the nat gateway resource.
     * 
     */
    @Import(name="publicIpAddresses")
      private final @Nullable Output<List<SubResourceArgs>> publicIpAddresses;

    public Output<List<SubResourceArgs>> publicIpAddresses() {
        return this.publicIpAddresses == null ? Codegen.empty() : this.publicIpAddresses;
    }

    /**
     * An array of public ip prefixes associated with the nat gateway resource.
     * 
     */
    @Import(name="publicIpPrefixes")
      private final @Nullable Output<List<SubResourceArgs>> publicIpPrefixes;

    public Output<List<SubResourceArgs>> publicIpPrefixes() {
        return this.publicIpPrefixes == null ? Codegen.empty() : this.publicIpPrefixes;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The nat gateway SKU.
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<NatGatewaySkuArgs> sku;

    public Output<NatGatewaySkuArgs> sku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A list of availability zones denoting the zone in which Nat Gateway should be deployed.
     * 
     */
    @Import(name="zones")
      private final @Nullable Output<List<String>> zones;

    public Output<List<String>> zones() {
        return this.zones == null ? Codegen.empty() : this.zones;
    }

    public NatGatewayArgs(
        @Nullable Output<String> id,
        @Nullable Output<Integer> idleTimeoutInMinutes,
        @Nullable Output<String> location,
        @Nullable Output<String> natGatewayName,
        @Nullable Output<List<SubResourceArgs>> publicIpAddresses,
        @Nullable Output<List<SubResourceArgs>> publicIpPrefixes,
        Output<String> resourceGroupName,
        @Nullable Output<NatGatewaySkuArgs> sku,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<List<String>> zones) {
        this.id = id;
        this.idleTimeoutInMinutes = idleTimeoutInMinutes;
        this.location = location;
        this.natGatewayName = natGatewayName;
        this.publicIpAddresses = publicIpAddresses;
        this.publicIpPrefixes = publicIpPrefixes;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sku = sku;
        this.tags = tags;
        this.zones = zones;
    }

    private NatGatewayArgs() {
        this.id = Codegen.empty();
        this.idleTimeoutInMinutes = Codegen.empty();
        this.location = Codegen.empty();
        this.natGatewayName = Codegen.empty();
        this.publicIpAddresses = Codegen.empty();
        this.publicIpPrefixes = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.sku = Codegen.empty();
        this.tags = Codegen.empty();
        this.zones = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NatGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> id;
        private @Nullable Output<Integer> idleTimeoutInMinutes;
        private @Nullable Output<String> location;
        private @Nullable Output<String> natGatewayName;
        private @Nullable Output<List<SubResourceArgs>> publicIpAddresses;
        private @Nullable Output<List<SubResourceArgs>> publicIpPrefixes;
        private Output<String> resourceGroupName;
        private @Nullable Output<NatGatewaySkuArgs> sku;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<List<String>> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(NatGatewayArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.idleTimeoutInMinutes = defaults.idleTimeoutInMinutes;
    	      this.location = defaults.location;
    	      this.natGatewayName = defaults.natGatewayName;
    	      this.publicIpAddresses = defaults.publicIpAddresses;
    	      this.publicIpPrefixes = defaults.publicIpPrefixes;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.zones = defaults.zones;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder idleTimeoutInMinutes(@Nullable Output<Integer> idleTimeoutInMinutes) {
            this.idleTimeoutInMinutes = idleTimeoutInMinutes;
            return this;
        }
        public Builder idleTimeoutInMinutes(@Nullable Integer idleTimeoutInMinutes) {
            this.idleTimeoutInMinutes = Codegen.ofNullable(idleTimeoutInMinutes);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder natGatewayName(@Nullable Output<String> natGatewayName) {
            this.natGatewayName = natGatewayName;
            return this;
        }
        public Builder natGatewayName(@Nullable String natGatewayName) {
            this.natGatewayName = Codegen.ofNullable(natGatewayName);
            return this;
        }
        public Builder publicIpAddresses(@Nullable Output<List<SubResourceArgs>> publicIpAddresses) {
            this.publicIpAddresses = publicIpAddresses;
            return this;
        }
        public Builder publicIpAddresses(@Nullable List<SubResourceArgs> publicIpAddresses) {
            this.publicIpAddresses = Codegen.ofNullable(publicIpAddresses);
            return this;
        }
        public Builder publicIpAddresses(SubResourceArgs... publicIpAddresses) {
            return publicIpAddresses(List.of(publicIpAddresses));
        }
        public Builder publicIpPrefixes(@Nullable Output<List<SubResourceArgs>> publicIpPrefixes) {
            this.publicIpPrefixes = publicIpPrefixes;
            return this;
        }
        public Builder publicIpPrefixes(@Nullable List<SubResourceArgs> publicIpPrefixes) {
            this.publicIpPrefixes = Codegen.ofNullable(publicIpPrefixes);
            return this;
        }
        public Builder publicIpPrefixes(SubResourceArgs... publicIpPrefixes) {
            return publicIpPrefixes(List.of(publicIpPrefixes));
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder sku(@Nullable Output<NatGatewaySkuArgs> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable NatGatewaySkuArgs sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder zones(@Nullable Output<List<String>> zones) {
            this.zones = zones;
            return this;
        }
        public Builder zones(@Nullable List<String> zones) {
            this.zones = Codegen.ofNullable(zones);
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }        public NatGatewayArgs build() {
            return new NatGatewayArgs(id, idleTimeoutInMinutes, location, natGatewayName, publicIpAddresses, publicIpPrefixes, resourceGroupName, sku, tags, zones);
        }
    }
}
