// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class RequestResponse {
    /**
     * The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
     * 
     */
    private final @Nullable String addr;
    /**
     * The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
     * 
     */
    private final @Nullable String host;
    /**
     * The ID of the request that initiated the event.
     * 
     */
    private final @Nullable String id;
    /**
     * The request method that generated the event.
     * 
     */
    private final @Nullable String method;
    /**
     * The user agent header of the request.
     * 
     */
    private final @Nullable String useragent;

    @OutputCustomType.Constructor
    private RequestResponse(
        @OutputCustomType.Parameter("addr") @Nullable String addr,
        @OutputCustomType.Parameter("host") @Nullable String host,
        @OutputCustomType.Parameter("id") @Nullable String id,
        @OutputCustomType.Parameter("method") @Nullable String method,
        @OutputCustomType.Parameter("useragent") @Nullable String useragent) {
        this.addr = addr;
        this.host = host;
        this.id = id;
        this.method = method;
        this.useragent = useragent;
    }

    /**
     * The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
     * 
    */
    public Optional<String> getAddr() {
        return Optional.ofNullable(this.addr);
    }
    /**
     * The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
     * 
    */
    public Optional<String> getHost() {
        return Optional.ofNullable(this.host);
    }
    /**
     * The ID of the request that initiated the event.
     * 
    */
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    /**
     * The request method that generated the event.
     * 
    */
    public Optional<String> getMethod() {
        return Optional.ofNullable(this.method);
    }
    /**
     * The user agent header of the request.
     * 
    */
    public Optional<String> getUseragent() {
        return Optional.ofNullable(this.useragent);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RequestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String addr;
        private @Nullable String host;
        private @Nullable String id;
        private @Nullable String method;
        private @Nullable String useragent;

        public Builder() {
    	      // Empty
        }

        public Builder(RequestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addr = defaults.addr;
    	      this.host = defaults.host;
    	      this.id = defaults.id;
    	      this.method = defaults.method;
    	      this.useragent = defaults.useragent;
        }

        public Builder addr(@Nullable String addr) {
            this.addr = addr;
            return this;
        }

        public Builder host(@Nullable String host) {
            this.host = host;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder method(@Nullable String method) {
            this.method = method;
            return this;
        }

        public Builder useragent(@Nullable String useragent) {
            this.useragent = useragent;
            return this;
        }
        public RequestResponse build() {
            return new RequestResponse(addr, host, id, method, useragent);
        }
    }
}
