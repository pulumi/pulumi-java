// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.synapse.outputs;

import io.pulumi.azurenative.synapse.outputs.ManagedIntegrationRuntimeErrorResponse;
import io.pulumi.azurenative.synapse.outputs.ManagedIntegrationRuntimeNodeResponse;
import io.pulumi.azurenative.synapse.outputs.ManagedIntegrationRuntimeOperationResultResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class ManagedIntegrationRuntimeStatusResponse {
    /**
     * The time at which the integration runtime was created, in ISO8601 format.
     * 
     */
    private final String createTime;
    /**
     * The workspace name which the integration runtime belong to.
     * 
     */
    private final String dataFactoryName;
    /**
     * The last operation result that occurred on this integration runtime.
     * 
     */
    private final ManagedIntegrationRuntimeOperationResultResponse lastOperation;
    /**
     * The list of nodes for managed integration runtime.
     * 
     */
    private final List<ManagedIntegrationRuntimeNodeResponse> nodes;
    /**
     * The errors that occurred on this integration runtime.
     * 
     */
    private final List<ManagedIntegrationRuntimeErrorResponse> otherErrors;
    /**
     * The state of integration runtime.
     * 
     */
    private final String state;
    /**
     * The type of integration runtime.
     * Expected value is 'Managed'.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"createTime","dataFactoryName","lastOperation","nodes","otherErrors","state","type"})
    private ManagedIntegrationRuntimeStatusResponse(
        String createTime,
        String dataFactoryName,
        ManagedIntegrationRuntimeOperationResultResponse lastOperation,
        List<ManagedIntegrationRuntimeNodeResponse> nodes,
        List<ManagedIntegrationRuntimeErrorResponse> otherErrors,
        String state,
        String type) {
        this.createTime = Objects.requireNonNull(createTime);
        this.dataFactoryName = Objects.requireNonNull(dataFactoryName);
        this.lastOperation = Objects.requireNonNull(lastOperation);
        this.nodes = Objects.requireNonNull(nodes);
        this.otherErrors = Objects.requireNonNull(otherErrors);
        this.state = Objects.requireNonNull(state);
        this.type = Objects.requireNonNull(type);
    }

    /**
     * The time at which the integration runtime was created, in ISO8601 format.
     * 
     */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * The workspace name which the integration runtime belong to.
     * 
     */
    public String getDataFactoryName() {
        return this.dataFactoryName;
    }
    /**
     * The last operation result that occurred on this integration runtime.
     * 
     */
    public ManagedIntegrationRuntimeOperationResultResponse getLastOperation() {
        return this.lastOperation;
    }
    /**
     * The list of nodes for managed integration runtime.
     * 
     */
    public List<ManagedIntegrationRuntimeNodeResponse> getNodes() {
        return this.nodes;
    }
    /**
     * The errors that occurred on this integration runtime.
     * 
     */
    public List<ManagedIntegrationRuntimeErrorResponse> getOtherErrors() {
        return this.otherErrors;
    }
    /**
     * The state of integration runtime.
     * 
     */
    public String getState() {
        return this.state;
    }
    /**
     * The type of integration runtime.
     * Expected value is 'Managed'.
     * 
     */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedIntegrationRuntimeStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String dataFactoryName;
        private ManagedIntegrationRuntimeOperationResultResponse lastOperation;
        private List<ManagedIntegrationRuntimeNodeResponse> nodes;
        private List<ManagedIntegrationRuntimeErrorResponse> otherErrors;
        private String state;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedIntegrationRuntimeStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.dataFactoryName = defaults.dataFactoryName;
    	      this.lastOperation = defaults.lastOperation;
    	      this.nodes = defaults.nodes;
    	      this.otherErrors = defaults.otherErrors;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDataFactoryName(String dataFactoryName) {
            this.dataFactoryName = Objects.requireNonNull(dataFactoryName);
            return this;
        }

        public Builder setLastOperation(ManagedIntegrationRuntimeOperationResultResponse lastOperation) {
            this.lastOperation = Objects.requireNonNull(lastOperation);
            return this;
        }

        public Builder setNodes(List<ManagedIntegrationRuntimeNodeResponse> nodes) {
            this.nodes = Objects.requireNonNull(nodes);
            return this;
        }

        public Builder setOtherErrors(List<ManagedIntegrationRuntimeErrorResponse> otherErrors) {
            this.otherErrors = Objects.requireNonNull(otherErrors);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ManagedIntegrationRuntimeStatusResponse build() {
            return new ManagedIntegrationRuntimeStatusResponse(createTime, dataFactoryName, lastOperation, nodes, otherErrors, state, type);
        }
    }
}
