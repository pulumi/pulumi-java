// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cognitiveservices.inputs;

import io.pulumi.azurenative.cognitiveservices.enums.KeySource;
import io.pulumi.azurenative.cognitiveservices.inputs.KeyVaultPropertiesArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Properties to configure Encryption
 * 
 */
public final class EncryptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final EncryptionArgs Empty = new EncryptionArgs();

    /**
     * Enumerates the possible value of keySource for Encryption
     * 
     */
    @Import(name="keySource")
      private final @Nullable Output<Either<String,KeySource>> keySource;

    public Output<Either<String,KeySource>> keySource() {
        return this.keySource == null ? Codegen.empty() : this.keySource;
    }

    /**
     * Properties of KeyVault
     * 
     */
    @Import(name="keyVaultProperties")
      private final @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties;

    public Output<KeyVaultPropertiesArgs> keyVaultProperties() {
        return this.keyVaultProperties == null ? Codegen.empty() : this.keyVaultProperties;
    }

    public EncryptionArgs(
        @Nullable Output<Either<String,KeySource>> keySource,
        @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties) {
        this.keySource = keySource == null ? Output.ofLeft("Microsoft.KeyVault") : keySource;
        this.keyVaultProperties = keyVaultProperties;
    }

    private EncryptionArgs() {
        this.keySource = Codegen.empty();
        this.keyVaultProperties = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,KeySource>> keySource;
        private @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties;

        public Builder() {
    	      // Empty
        }

        public Builder(EncryptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keySource = defaults.keySource;
    	      this.keyVaultProperties = defaults.keyVaultProperties;
        }

        public Builder keySource(@Nullable Output<Either<String,KeySource>> keySource) {
            this.keySource = keySource;
            return this;
        }
        public Builder keySource(@Nullable Either<String,KeySource> keySource) {
            this.keySource = Codegen.ofNullable(keySource);
            return this;
        }
        public Builder keyVaultProperties(@Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties) {
            this.keyVaultProperties = keyVaultProperties;
            return this;
        }
        public Builder keyVaultProperties(@Nullable KeyVaultPropertiesArgs keyVaultProperties) {
            this.keyVaultProperties = Codegen.ofNullable(keyVaultProperties);
            return this;
        }        public EncryptionArgs build() {
            return new EncryptionArgs(keySource, keyVaultProperties);
        }
    }
}
