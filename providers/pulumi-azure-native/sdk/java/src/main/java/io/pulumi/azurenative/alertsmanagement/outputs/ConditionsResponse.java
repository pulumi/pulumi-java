// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.alertsmanagement.outputs;

import io.pulumi.azurenative.alertsmanagement.outputs.ConditionResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ConditionsResponse {
    /**
     * filter alerts by alert context (payload)
     * 
     */
    private final @Nullable ConditionResponse alertContext;
    /**
     * filter alerts by alert rule id
     * 
     */
    private final @Nullable ConditionResponse alertRuleId;
    /**
     * filter alerts by alert rule description
     * 
     */
    private final @Nullable ConditionResponse description;
    /**
     * filter alerts by monitor condition
     * 
     */
    private final @Nullable ConditionResponse monitorCondition;
    /**
     * filter alerts by monitor service
     * 
     */
    private final @Nullable ConditionResponse monitorService;
    /**
     * filter alerts by severity
     * 
     */
    private final @Nullable ConditionResponse severity;
    /**
     * filter alerts by target resource type
     * 
     */
    private final @Nullable ConditionResponse targetResourceType;

    @OutputCustomType.Constructor({"alertContext","alertRuleId","description","monitorCondition","monitorService","severity","targetResourceType"})
    private ConditionsResponse(
        @Nullable ConditionResponse alertContext,
        @Nullable ConditionResponse alertRuleId,
        @Nullable ConditionResponse description,
        @Nullable ConditionResponse monitorCondition,
        @Nullable ConditionResponse monitorService,
        @Nullable ConditionResponse severity,
        @Nullable ConditionResponse targetResourceType) {
        this.alertContext = alertContext;
        this.alertRuleId = alertRuleId;
        this.description = description;
        this.monitorCondition = monitorCondition;
        this.monitorService = monitorService;
        this.severity = severity;
        this.targetResourceType = targetResourceType;
    }

    /**
     * filter alerts by alert context (payload)
     * 
     */
    public Optional<ConditionResponse> getAlertContext() {
        return Optional.ofNullable(this.alertContext);
    }
    /**
     * filter alerts by alert rule id
     * 
     */
    public Optional<ConditionResponse> getAlertRuleId() {
        return Optional.ofNullable(this.alertRuleId);
    }
    /**
     * filter alerts by alert rule description
     * 
     */
    public Optional<ConditionResponse> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * filter alerts by monitor condition
     * 
     */
    public Optional<ConditionResponse> getMonitorCondition() {
        return Optional.ofNullable(this.monitorCondition);
    }
    /**
     * filter alerts by monitor service
     * 
     */
    public Optional<ConditionResponse> getMonitorService() {
        return Optional.ofNullable(this.monitorService);
    }
    /**
     * filter alerts by severity
     * 
     */
    public Optional<ConditionResponse> getSeverity() {
        return Optional.ofNullable(this.severity);
    }
    /**
     * filter alerts by target resource type
     * 
     */
    public Optional<ConditionResponse> getTargetResourceType() {
        return Optional.ofNullable(this.targetResourceType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConditionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ConditionResponse alertContext;
        private @Nullable ConditionResponse alertRuleId;
        private @Nullable ConditionResponse description;
        private @Nullable ConditionResponse monitorCondition;
        private @Nullable ConditionResponse monitorService;
        private @Nullable ConditionResponse severity;
        private @Nullable ConditionResponse targetResourceType;

        public Builder() {
    	      // Empty
        }

        public Builder(ConditionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertContext = defaults.alertContext;
    	      this.alertRuleId = defaults.alertRuleId;
    	      this.description = defaults.description;
    	      this.monitorCondition = defaults.monitorCondition;
    	      this.monitorService = defaults.monitorService;
    	      this.severity = defaults.severity;
    	      this.targetResourceType = defaults.targetResourceType;
        }

        public Builder setAlertContext(@Nullable ConditionResponse alertContext) {
            this.alertContext = alertContext;
            return this;
        }

        public Builder setAlertRuleId(@Nullable ConditionResponse alertRuleId) {
            this.alertRuleId = alertRuleId;
            return this;
        }

        public Builder setDescription(@Nullable ConditionResponse description) {
            this.description = description;
            return this;
        }

        public Builder setMonitorCondition(@Nullable ConditionResponse monitorCondition) {
            this.monitorCondition = monitorCondition;
            return this;
        }

        public Builder setMonitorService(@Nullable ConditionResponse monitorService) {
            this.monitorService = monitorService;
            return this;
        }

        public Builder setSeverity(@Nullable ConditionResponse severity) {
            this.severity = severity;
            return this;
        }

        public Builder setTargetResourceType(@Nullable ConditionResponse targetResourceType) {
            this.targetResourceType = targetResourceType;
            return this;
        }

        public ConditionsResponse build() {
            return new ConditionsResponse(alertContext, alertRuleId, description, monitorCondition, monitorService, severity, targetResourceType);
        }
    }
}
