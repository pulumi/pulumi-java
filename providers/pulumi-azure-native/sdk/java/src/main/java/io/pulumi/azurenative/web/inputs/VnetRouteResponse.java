// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Virtual Network route contract used to pass routing information for a Virtual Network.
 * 
 */
public final class VnetRouteResponse extends io.pulumi.resources.InvokeArgs {

    public static final VnetRouteResponse Empty = new VnetRouteResponse();

    /**
     * The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
     * 
     */
    @Import(name="endAddress")
      private final @Nullable String endAddress;

    public Optional<String> getEndAddress() {
        return this.endAddress == null ? Optional.empty() : Optional.ofNullable(this.endAddress);
    }

    /**
     * Resource Id.
     * 
     */
    @Import(name="id", required=true)
      private final String id;

    public String getId() {
        return this.id;
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
      private final @Nullable String kind;

    public Optional<String> getKind() {
        return this.kind == null ? Optional.empty() : Optional.ofNullable(this.kind);
    }

    /**
     * Resource Name.
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * The type of route this is:
     * DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
     * INHERITED - Routes inherited from the real Virtual Network routes
     * STATIC - Static route set on the app only
     * 
     * These values will be used for syncing an app's routes with those from a Virtual Network.
     * 
     */
    @Import(name="routeType")
      private final @Nullable String routeType;

    public Optional<String> getRouteType() {
        return this.routeType == null ? Optional.empty() : Optional.ofNullable(this.routeType);
    }

    /**
     * The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
     * 
     */
    @Import(name="startAddress")
      private final @Nullable String startAddress;

    public Optional<String> getStartAddress() {
        return this.startAddress == null ? Optional.empty() : Optional.ofNullable(this.startAddress);
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type", required=true)
      private final String type;

    public String getType() {
        return this.type;
    }

    public VnetRouteResponse(
        @Nullable String endAddress,
        String id,
        @Nullable String kind,
        String name,
        @Nullable String routeType,
        @Nullable String startAddress,
        String type) {
        this.endAddress = endAddress;
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.kind = kind;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.routeType = routeType;
        this.startAddress = startAddress;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private VnetRouteResponse() {
        this.endAddress = null;
        this.id = null;
        this.kind = null;
        this.name = null;
        this.routeType = null;
        this.startAddress = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VnetRouteResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String endAddress;
        private String id;
        private @Nullable String kind;
        private String name;
        private @Nullable String routeType;
        private @Nullable String startAddress;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(VnetRouteResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endAddress = defaults.endAddress;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.routeType = defaults.routeType;
    	      this.startAddress = defaults.startAddress;
    	      this.type = defaults.type;
        }

        public Builder endAddress(@Nullable String endAddress) {
            this.endAddress = endAddress;
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder routeType(@Nullable String routeType) {
            this.routeType = routeType;
            return this;
        }

        public Builder startAddress(@Nullable String startAddress) {
            this.startAddress = startAddress;
            return this;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public VnetRouteResponse build() {
            return new VnetRouteResponse(endAddress, id, kind, name, routeType, startAddress, type);
        }
    }
}
