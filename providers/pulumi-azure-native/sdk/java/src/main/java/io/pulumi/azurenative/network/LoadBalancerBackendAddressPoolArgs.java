// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.network.inputs.LoadBalancerBackendAddressArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LoadBalancerBackendAddressPoolArgs extends io.pulumi.resources.ResourceArgs {

    public static final LoadBalancerBackendAddressPoolArgs Empty = new LoadBalancerBackendAddressPoolArgs();

    /**
     * The name of the backend address pool.
     * 
     */
    @InputImport(name="backendAddressPoolName")
      private final @Nullable Output<String> backendAddressPoolName;

    public Output<String> getBackendAddressPoolName() {
        return this.backendAddressPoolName == null ? Output.empty() : this.backendAddressPoolName;
    }

    /**
     * Resource ID.
     * 
     */
    @InputImport(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Output.empty() : this.id;
    }

    /**
     * An array of backend addresses.
     * 
     */
    @InputImport(name="loadBalancerBackendAddresses")
      private final @Nullable Output<List<LoadBalancerBackendAddressArgs>> loadBalancerBackendAddresses;

    public Output<List<LoadBalancerBackendAddressArgs>> getLoadBalancerBackendAddresses() {
        return this.loadBalancerBackendAddresses == null ? Output.empty() : this.loadBalancerBackendAddresses;
    }

    /**
     * The name of the load balancer.
     * 
     */
    @InputImport(name="loadBalancerName", required=true)
      private final Output<String> loadBalancerName;

    public Output<String> getLoadBalancerName() {
        return this.loadBalancerName;
    }

    /**
     * The location of the backend address pool.
     * 
     */
    @InputImport(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public LoadBalancerBackendAddressPoolArgs(
        @Nullable Output<String> backendAddressPoolName,
        @Nullable Output<String> id,
        @Nullable Output<List<LoadBalancerBackendAddressArgs>> loadBalancerBackendAddresses,
        Output<String> loadBalancerName,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        Output<String> resourceGroupName) {
        this.backendAddressPoolName = backendAddressPoolName;
        this.id = id;
        this.loadBalancerBackendAddresses = loadBalancerBackendAddresses;
        this.loadBalancerName = Objects.requireNonNull(loadBalancerName, "expected parameter 'loadBalancerName' to be non-null");
        this.location = location;
        this.name = name;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private LoadBalancerBackendAddressPoolArgs() {
        this.backendAddressPoolName = Output.empty();
        this.id = Output.empty();
        this.loadBalancerBackendAddresses = Output.empty();
        this.loadBalancerName = Output.empty();
        this.location = Output.empty();
        this.name = Output.empty();
        this.resourceGroupName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadBalancerBackendAddressPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> backendAddressPoolName;
        private @Nullable Output<String> id;
        private @Nullable Output<List<LoadBalancerBackendAddressArgs>> loadBalancerBackendAddresses;
        private Output<String> loadBalancerName;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private Output<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(LoadBalancerBackendAddressPoolArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendAddressPoolName = defaults.backendAddressPoolName;
    	      this.id = defaults.id;
    	      this.loadBalancerBackendAddresses = defaults.loadBalancerBackendAddresses;
    	      this.loadBalancerName = defaults.loadBalancerName;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder backendAddressPoolName(@Nullable Output<String> backendAddressPoolName) {
            this.backendAddressPoolName = backendAddressPoolName;
            return this;
        }

        public Builder backendAddressPoolName(@Nullable String backendAddressPoolName) {
            this.backendAddressPoolName = Output.ofNullable(backendAddressPoolName);
            return this;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = Output.ofNullable(id);
            return this;
        }

        public Builder loadBalancerBackendAddresses(@Nullable Output<List<LoadBalancerBackendAddressArgs>> loadBalancerBackendAddresses) {
            this.loadBalancerBackendAddresses = loadBalancerBackendAddresses;
            return this;
        }

        public Builder loadBalancerBackendAddresses(@Nullable List<LoadBalancerBackendAddressArgs> loadBalancerBackendAddresses) {
            this.loadBalancerBackendAddresses = Output.ofNullable(loadBalancerBackendAddresses);
            return this;
        }

        public Builder loadBalancerName(Output<String> loadBalancerName) {
            this.loadBalancerName = Objects.requireNonNull(loadBalancerName);
            return this;
        }

        public Builder loadBalancerName(String loadBalancerName) {
            this.loadBalancerName = Output.of(Objects.requireNonNull(loadBalancerName));
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public LoadBalancerBackendAddressPoolArgs build() {
            return new LoadBalancerBackendAddressPoolArgs(backendAddressPoolName, id, loadBalancerBackendAddresses, loadBalancerName, location, name, resourceGroupName);
        }
    }
}
