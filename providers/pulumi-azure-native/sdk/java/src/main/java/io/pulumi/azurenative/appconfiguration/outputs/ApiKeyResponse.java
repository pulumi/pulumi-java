// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.appconfiguration.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class ApiKeyResponse {
    /**
     * A connection string that can be used by supporting clients for authentication.
     * 
     */
    private final String connectionString;
    /**
     * The key ID.
     * 
     */
    private final String id;
    /**
     * The last time any of the key's properties were modified.
     * 
     */
    private final String lastModified;
    /**
     * A name for the key describing its usage.
     * 
     */
    private final String name;
    /**
     * Whether this key can only be used for read operations.
     * 
     */
    private final Boolean readOnly;
    /**
     * The value of the key that is used for authentication purposes.
     * 
     */
    private final String value;

    @OutputCustomType.Constructor({"connectionString","id","lastModified","name","readOnly","value"})
    private ApiKeyResponse(
        String connectionString,
        String id,
        String lastModified,
        String name,
        Boolean readOnly,
        String value) {
        this.connectionString = Objects.requireNonNull(connectionString);
        this.id = Objects.requireNonNull(id);
        this.lastModified = Objects.requireNonNull(lastModified);
        this.name = Objects.requireNonNull(name);
        this.readOnly = Objects.requireNonNull(readOnly);
        this.value = Objects.requireNonNull(value);
    }

    /**
     * A connection string that can be used by supporting clients for authentication.
     * 
     */
    public String getConnectionString() {
        return this.connectionString;
    }
    /**
     * The key ID.
     * 
     */
    public String getId() {
        return this.id;
    }
    /**
     * The last time any of the key's properties were modified.
     * 
     */
    public String getLastModified() {
        return this.lastModified;
    }
    /**
     * A name for the key describing its usage.
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * Whether this key can only be used for read operations.
     * 
     */
    public Boolean getReadOnly() {
        return this.readOnly;
    }
    /**
     * The value of the key that is used for authentication purposes.
     * 
     */
    public String getValue() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiKeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String connectionString;
        private String id;
        private String lastModified;
        private String name;
        private Boolean readOnly;
        private String value;

        public Builder() {
    	      // Empty
        }

        public Builder(ApiKeyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionString = defaults.connectionString;
    	      this.id = defaults.id;
    	      this.lastModified = defaults.lastModified;
    	      this.name = defaults.name;
    	      this.readOnly = defaults.readOnly;
    	      this.value = defaults.value;
        }

        public Builder setConnectionString(String connectionString) {
            this.connectionString = Objects.requireNonNull(connectionString);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setReadOnly(Boolean readOnly) {
            this.readOnly = Objects.requireNonNull(readOnly);
            return this;
        }

        public Builder setValue(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }

        public ApiKeyResponse build() {
            return new ApiKeyResponse(connectionString, id, lastModified, name, readOnly, value);
        }
    }
}
