// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.appplatform.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Persistent disk payload
 * 
 */
public final class PersistentDiskResponse extends io.pulumi.resources.InvokeArgs {

    public static final PersistentDiskResponse Empty = new PersistentDiskResponse();

    /**
     * Mount path of the persistent disk
     * 
     */
    @InputImport(name="mountPath")
    private final @Nullable String mountPath;

    public Optional<String> getMountPath() {
        return this.mountPath == null ? Optional.empty() : Optional.ofNullable(this.mountPath);
    }

    /**
     * Size of the persistent disk in GB
     * 
     */
    @InputImport(name="sizeInGB")
    private final @Nullable Integer sizeInGB;

    public Optional<Integer> getSizeInGB() {
        return this.sizeInGB == null ? Optional.empty() : Optional.ofNullable(this.sizeInGB);
    }

    /**
     * Size of the used persistent disk in GB
     * 
     */
    @InputImport(name="usedInGB", required=true)
    private final Integer usedInGB;

    public Integer getUsedInGB() {
        return this.usedInGB;
    }

    public PersistentDiskResponse(
        @Nullable String mountPath,
        @Nullable Integer sizeInGB,
        Integer usedInGB) {
        this.mountPath = mountPath;
        this.sizeInGB = sizeInGB;
        this.usedInGB = Objects.requireNonNull(usedInGB, "expected parameter 'usedInGB' to be non-null");
    }

    private PersistentDiskResponse() {
        this.mountPath = null;
        this.sizeInGB = null;
        this.usedInGB = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PersistentDiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String mountPath;
        private @Nullable Integer sizeInGB;
        private Integer usedInGB;

        public Builder() {
    	      // Empty
        }

        public Builder(PersistentDiskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mountPath = defaults.mountPath;
    	      this.sizeInGB = defaults.sizeInGB;
    	      this.usedInGB = defaults.usedInGB;
        }

        public Builder setMountPath(@Nullable String mountPath) {
            this.mountPath = mountPath;
            return this;
        }

        public Builder setSizeInGB(@Nullable Integer sizeInGB) {
            this.sizeInGB = sizeInGB;
            return this;
        }

        public Builder setUsedInGB(Integer usedInGB) {
            this.usedInGB = Objects.requireNonNull(usedInGB);
            return this;
        }

        public PersistentDiskResponse build() {
            return new PersistentDiskResponse(mountPath, sizeInGB, usedInGB);
        }
    }
}
