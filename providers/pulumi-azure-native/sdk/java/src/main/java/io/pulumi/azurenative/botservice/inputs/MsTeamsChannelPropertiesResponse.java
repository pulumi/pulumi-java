// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.botservice.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The parameters to provide for the Microsoft Teams channel.
 * 
 */
public final class MsTeamsChannelPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final MsTeamsChannelPropertiesResponse Empty = new MsTeamsChannelPropertiesResponse();

    /**
     * Whether this channel accepted terms
     * 
     */
    @InputImport(name="acceptedTerms")
    private final @Nullable Boolean acceptedTerms;

    public Optional<Boolean> getAcceptedTerms() {
        return this.acceptedTerms == null ? Optional.empty() : Optional.ofNullable(this.acceptedTerms);
    }

    /**
     * Webhook for Microsoft Teams channel calls
     * 
     */
    @InputImport(name="callingWebHook")
    private final @Nullable String callingWebHook;

    public Optional<String> getCallingWebHook() {
        return this.callingWebHook == null ? Optional.empty() : Optional.ofNullable(this.callingWebHook);
    }

    /**
     * Deployment environment for Microsoft Teams channel calls
     * 
     */
    @InputImport(name="deploymentEnvironment")
    private final @Nullable String deploymentEnvironment;

    public Optional<String> getDeploymentEnvironment() {
        return this.deploymentEnvironment == null ? Optional.empty() : Optional.ofNullable(this.deploymentEnvironment);
    }

    /**
     * Enable calling for Microsoft Teams channel
     * 
     */
    @InputImport(name="enableCalling")
    private final @Nullable Boolean enableCalling;

    public Optional<Boolean> getEnableCalling() {
        return this.enableCalling == null ? Optional.empty() : Optional.ofNullable(this.enableCalling);
    }

    /**
     * Webhook for Microsoft Teams channel calls
     * 
     */
    @InputImport(name="incomingCallRoute")
    private final @Nullable String incomingCallRoute;

    public Optional<String> getIncomingCallRoute() {
        return this.incomingCallRoute == null ? Optional.empty() : Optional.ofNullable(this.incomingCallRoute);
    }

    /**
     * Whether this channel is enabled for the bot
     * 
     */
    @InputImport(name="isEnabled", required=true)
    private final Boolean isEnabled;

    public Boolean getIsEnabled() {
        return this.isEnabled;
    }

    public MsTeamsChannelPropertiesResponse(
        @Nullable Boolean acceptedTerms,
        @Nullable String callingWebHook,
        @Nullable String deploymentEnvironment,
        @Nullable Boolean enableCalling,
        @Nullable String incomingCallRoute,
        Boolean isEnabled) {
        this.acceptedTerms = acceptedTerms == null ? true : acceptedTerms;
        this.callingWebHook = callingWebHook;
        this.deploymentEnvironment = deploymentEnvironment;
        this.enableCalling = enableCalling;
        this.incomingCallRoute = incomingCallRoute;
        this.isEnabled = Objects.requireNonNull(isEnabled, "expected parameter 'isEnabled' to be non-null");
    }

    private MsTeamsChannelPropertiesResponse() {
        this.acceptedTerms = null;
        this.callingWebHook = null;
        this.deploymentEnvironment = null;
        this.enableCalling = null;
        this.incomingCallRoute = null;
        this.isEnabled = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MsTeamsChannelPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean acceptedTerms;
        private @Nullable String callingWebHook;
        private @Nullable String deploymentEnvironment;
        private @Nullable Boolean enableCalling;
        private @Nullable String incomingCallRoute;
        private Boolean isEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(MsTeamsChannelPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptedTerms = defaults.acceptedTerms;
    	      this.callingWebHook = defaults.callingWebHook;
    	      this.deploymentEnvironment = defaults.deploymentEnvironment;
    	      this.enableCalling = defaults.enableCalling;
    	      this.incomingCallRoute = defaults.incomingCallRoute;
    	      this.isEnabled = defaults.isEnabled;
        }

        public Builder setAcceptedTerms(@Nullable Boolean acceptedTerms) {
            this.acceptedTerms = acceptedTerms;
            return this;
        }

        public Builder setCallingWebHook(@Nullable String callingWebHook) {
            this.callingWebHook = callingWebHook;
            return this;
        }

        public Builder setDeploymentEnvironment(@Nullable String deploymentEnvironment) {
            this.deploymentEnvironment = deploymentEnvironment;
            return this;
        }

        public Builder setEnableCalling(@Nullable Boolean enableCalling) {
            this.enableCalling = enableCalling;
            return this;
        }

        public Builder setIncomingCallRoute(@Nullable String incomingCallRoute) {
            this.incomingCallRoute = incomingCallRoute;
            return this;
        }

        public Builder setIsEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }

        public MsTeamsChannelPropertiesResponse build() {
            return new MsTeamsChannelPropertiesResponse(acceptedTerms, callingWebHook, deploymentEnvironment, enableCalling, incomingCallRoute, isEnabled);
        }
    }
}
