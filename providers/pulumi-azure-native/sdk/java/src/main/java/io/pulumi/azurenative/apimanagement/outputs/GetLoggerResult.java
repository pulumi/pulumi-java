// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetLoggerResult {
    private final @Nullable Map<String,String> credentials;
    private final @Nullable String description;
    private final String id;
    private final @Nullable Boolean isBuffered;
    private final String loggerType;
    private final String name;
    private final @Nullable String resourceId;
    private final String type;

    @OutputCustomType.Constructor({"credentials","description","id","isBuffered","loggerType","name","resourceId","type"})
    private GetLoggerResult(
        @Nullable Map<String,String> credentials,
        @Nullable String description,
        String id,
        @Nullable Boolean isBuffered,
        String loggerType,
        String name,
        @Nullable String resourceId,
        String type) {
        this.credentials = credentials;
        this.description = description;
        this.id = Objects.requireNonNull(id);
        this.isBuffered = isBuffered;
        this.loggerType = Objects.requireNonNull(loggerType);
        this.name = Objects.requireNonNull(name);
        this.resourceId = resourceId;
        this.type = Objects.requireNonNull(type);
    }

    public Map<String,String> getCredentials() {
        return this.credentials == null ? Map.of() : this.credentials;
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public String getId() {
        return this.id;
    }
    public Optional<Boolean> getIsBuffered() {
        return Optional.ofNullable(this.isBuffered);
    }
    public String getLoggerType() {
        return this.loggerType;
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getResourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoggerResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Map<String,String> credentials;
        private @Nullable String description;
        private String id;
        private @Nullable Boolean isBuffered;
        private String loggerType;
        private String name;
        private @Nullable String resourceId;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLoggerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentials = defaults.credentials;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.isBuffered = defaults.isBuffered;
    	      this.loggerType = defaults.loggerType;
    	      this.name = defaults.name;
    	      this.resourceId = defaults.resourceId;
    	      this.type = defaults.type;
        }

        public Builder setCredentials(@Nullable Map<String,String> credentials) {
            this.credentials = credentials;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIsBuffered(@Nullable Boolean isBuffered) {
            this.isBuffered = isBuffered;
            return this;
        }

        public Builder setLoggerType(String loggerType) {
            this.loggerType = Objects.requireNonNull(loggerType);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setResourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetLoggerResult build() {
            return new GetLoggerResult(credentials, description, id, isBuffered, loggerType, name, resourceId, type);
        }
    }
}
