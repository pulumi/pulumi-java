// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.azurenative.compute.enums.HostCaching;
import io.pulumi.azurenative.compute.inputs.GalleryArtifactVersionSourceArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * This is the OS disk image.
 * 
 */
public final class GalleryOSDiskImageArgs extends io.pulumi.resources.ResourceArgs {

    public static final GalleryOSDiskImageArgs Empty = new GalleryOSDiskImageArgs();

    /**
     * The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
     * 
     */
    @InputImport(name="hostCaching")
      private final @Nullable Input<HostCaching> hostCaching;

    public Input<HostCaching> getHostCaching() {
        return this.hostCaching == null ? Input.empty() : this.hostCaching;
    }

    /**
     * The gallery artifact version source.
     * 
     */
    @InputImport(name="source")
      private final @Nullable Input<GalleryArtifactVersionSourceArgs> source;

    public Input<GalleryArtifactVersionSourceArgs> getSource() {
        return this.source == null ? Input.empty() : this.source;
    }

    public GalleryOSDiskImageArgs(
        @Nullable Input<HostCaching> hostCaching,
        @Nullable Input<GalleryArtifactVersionSourceArgs> source) {
        this.hostCaching = hostCaching;
        this.source = source;
    }

    private GalleryOSDiskImageArgs() {
        this.hostCaching = Input.empty();
        this.source = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GalleryOSDiskImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<HostCaching> hostCaching;
        private @Nullable Input<GalleryArtifactVersionSourceArgs> source;

        public Builder() {
    	      // Empty
        }

        public Builder(GalleryOSDiskImageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostCaching = defaults.hostCaching;
    	      this.source = defaults.source;
        }

        public Builder hostCaching(@Nullable Input<HostCaching> hostCaching) {
            this.hostCaching = hostCaching;
            return this;
        }

        public Builder hostCaching(@Nullable HostCaching hostCaching) {
            this.hostCaching = Input.ofNullable(hostCaching);
            return this;
        }

        public Builder source(@Nullable Input<GalleryArtifactVersionSourceArgs> source) {
            this.source = source;
            return this;
        }

        public Builder source(@Nullable GalleryArtifactVersionSourceArgs source) {
            this.source = Input.ofNullable(source);
            return this;
        }
        public GalleryOSDiskImageArgs build() {
            return new GalleryOSDiskImageArgs(hostCaching, source);
        }
    }
}
