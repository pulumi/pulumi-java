// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.network.VirtualNetworkTapArgs;
import io.pulumi.azurenative.network.outputs.FrontendIPConfigurationResponse;
import io.pulumi.azurenative.network.outputs.NetworkInterfaceIPConfigurationResponse;
import io.pulumi.azurenative.network.outputs.NetworkInterfaceTapConfigurationResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Virtual Network Tap resource.
 * API Version: 2020-11-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:VirtualNetworkTap testvtap /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkTaps/testvtap 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:VirtualNetworkTap")
public class VirtualNetworkTap extends io.pulumi.resources.CustomResource {
    /**
     * The reference to the private IP address on the internal Load Balancer that will receive the tap.
     * 
     */
    @OutputExport(name="destinationLoadBalancerFrontEndIPConfiguration", type=FrontendIPConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ FrontendIPConfigurationResponse> destinationLoadBalancerFrontEndIPConfiguration;

    /**
     * @return The reference to the private IP address on the internal Load Balancer that will receive the tap.
     * 
     */
    public Output</* @Nullable */ FrontendIPConfigurationResponse> getDestinationLoadBalancerFrontEndIPConfiguration() {
        return this.destinationLoadBalancerFrontEndIPConfiguration;
    }
    /**
     * The reference to the private IP Address of the collector nic that will receive the tap.
     * 
     */
    @OutputExport(name="destinationNetworkInterfaceIPConfiguration", type=NetworkInterfaceIPConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ NetworkInterfaceIPConfigurationResponse> destinationNetworkInterfaceIPConfiguration;

    /**
     * @return The reference to the private IP Address of the collector nic that will receive the tap.
     * 
     */
    public Output</* @Nullable */ NetworkInterfaceIPConfigurationResponse> getDestinationNetworkInterfaceIPConfiguration() {
        return this.destinationNetworkInterfaceIPConfiguration;
    }
    /**
     * The VXLAN destination port that will receive the tapped traffic.
     * 
     */
    @OutputExport(name="destinationPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> destinationPort;

    /**
     * @return The VXLAN destination port that will receive the tapped traffic.
     * 
     */
    public Output</* @Nullable */ Integer> getDestinationPort() {
        return this.destinationPort;
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public Output<String> getEtag() {
        return this.etag;
    }
    /**
     * Resource location.
     * 
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * Resource name.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
     * 
     */
    @OutputExport(name="networkInterfaceTapConfigurations", type=List.class, parameters={NetworkInterfaceTapConfigurationResponse.class})
    private Output<List<NetworkInterfaceTapConfigurationResponse>> networkInterfaceTapConfigurations;

    /**
     * @return Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
     * 
     */
    public Output<List<NetworkInterfaceTapConfigurationResponse>> getNetworkInterfaceTapConfigurations() {
        return this.networkInterfaceTapConfigurations;
    }
    /**
     * The provisioning state of the virtual network tap resource.
     * 
     */
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the virtual network tap resource.
     * 
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The resource GUID property of the virtual network tap resource.
     * 
     */
    @OutputExport(name="resourceGuid", type=String.class, parameters={})
    private Output<String> resourceGuid;

    /**
     * @return The resource GUID property of the virtual network tap resource.
     * 
     */
    public Output<String> getResourceGuid() {
        return this.resourceGuid;
    }
    /**
     * Resource tags.
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Resource type.
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    public interface BuilderApplicator {
        public void apply(VirtualNetworkTapArgs.Builder a);
    }
    private static io.pulumi.azurenative.network.VirtualNetworkTapArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.azurenative.network.VirtualNetworkTapArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public VirtualNetworkTap(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VirtualNetworkTap(String name) {
        this(name, VirtualNetworkTapArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VirtualNetworkTap(String name, VirtualNetworkTapArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VirtualNetworkTap(String name, VirtualNetworkTapArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:VirtualNetworkTap", name, args == null ? VirtualNetworkTapArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private VirtualNetworkTap(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:VirtualNetworkTap", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:network/v20180801:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181001:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181101:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181201:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190201:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190401:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190601:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190701:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190801:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190901:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20191101:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20191201:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200301:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200401:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200501:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200601:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200701:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200801:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20201101:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210201:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210301:VirtualNetworkTap").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210501:VirtualNetworkTap").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VirtualNetworkTap get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VirtualNetworkTap(name, id, options);
    }
}
