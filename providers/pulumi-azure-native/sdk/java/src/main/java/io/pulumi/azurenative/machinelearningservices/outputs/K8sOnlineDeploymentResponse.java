// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.outputs;

import io.pulumi.azurenative.machinelearningservices.outputs.AutoScaleSettingsResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.CodeConfigurationResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.ContainerResourceRequirementsResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.DataPathAssetReferenceResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.IdAssetReferenceResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.ManualScaleSettingsResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.OnlineRequestSettingsResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.OutputPathAssetReferenceResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.ProbeSettingsResponse;
import io.pulumi.core.Either;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class K8sOnlineDeploymentResponse {
    /**
     * If true, enables Application Insights logging.
     * 
     */
    private final @Nullable Boolean appInsightsEnabled;
    /**
     * Code configuration for the endpoint deployment.
     * 
     */
    private final @Nullable CodeConfigurationResponse codeConfiguration;
    /**
     * Resource requirements for each container instance within an online deployment.
     * 
     */
    private final @Nullable ContainerResourceRequirementsResponse containerResourceRequirements;
    /**
     * Description of the endpoint deployment.
     * 
     */
    private final @Nullable String description;
    /**
     * Enum to determine endpoint compute type.
     * Expected value is 'K8S'.
     * 
     */
    private final String endpointComputeType;
    /**
     * ARM resource ID of the environment specification for the endpoint deployment.
     * 
     */
    private final @Nullable String environmentId;
    /**
     * Environment variables configuration for the deployment.
     * 
     */
    private final @Nullable Map<String,String> environmentVariables;
    /**
     * Deployment container liveness/readiness probe configuration.
     * 
     */
    private final @Nullable ProbeSettingsResponse livenessProbe;
    /**
     * Reference to the model asset for the endpoint deployment.
     * 
     */
    private final @Nullable Object model;
    /**
     * Property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    private final @Nullable Map<String,String> properties;
    /**
     * Provisioning state for the endpoint deployment.
     * 
     */
    private final String provisioningState;
    /**
     * Online deployment scoring requests configuration.
     * 
     */
    private final @Nullable OnlineRequestSettingsResponse requestSettings;
    /**
     * Online deployment scaling configuration.
     * 
     */
    private final @Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings;

    @OutputCustomType.Constructor({"appInsightsEnabled","codeConfiguration","containerResourceRequirements","description","endpointComputeType","environmentId","environmentVariables","livenessProbe","model","properties","provisioningState","requestSettings","scaleSettings"})
    private K8sOnlineDeploymentResponse(
        @Nullable Boolean appInsightsEnabled,
        @Nullable CodeConfigurationResponse codeConfiguration,
        @Nullable ContainerResourceRequirementsResponse containerResourceRequirements,
        @Nullable String description,
        String endpointComputeType,
        @Nullable String environmentId,
        @Nullable Map<String,String> environmentVariables,
        @Nullable ProbeSettingsResponse livenessProbe,
        @Nullable Object model,
        @Nullable Map<String,String> properties,
        String provisioningState,
        @Nullable OnlineRequestSettingsResponse requestSettings,
        @Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings) {
        this.appInsightsEnabled = appInsightsEnabled;
        this.codeConfiguration = codeConfiguration;
        this.containerResourceRequirements = containerResourceRequirements;
        this.description = description;
        this.endpointComputeType = Objects.requireNonNull(endpointComputeType);
        this.environmentId = environmentId;
        this.environmentVariables = environmentVariables;
        this.livenessProbe = livenessProbe;
        this.model = model;
        this.properties = properties;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.requestSettings = requestSettings;
        this.scaleSettings = scaleSettings;
    }

    /**
     * If true, enables Application Insights logging.
     * 
     */
    public Optional<Boolean> getAppInsightsEnabled() {
        return Optional.ofNullable(this.appInsightsEnabled);
    }
    /**
     * Code configuration for the endpoint deployment.
     * 
     */
    public Optional<CodeConfigurationResponse> getCodeConfiguration() {
        return Optional.ofNullable(this.codeConfiguration);
    }
    /**
     * Resource requirements for each container instance within an online deployment.
     * 
     */
    public Optional<ContainerResourceRequirementsResponse> getContainerResourceRequirements() {
        return Optional.ofNullable(this.containerResourceRequirements);
    }
    /**
     * Description of the endpoint deployment.
     * 
     */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * Enum to determine endpoint compute type.
     * Expected value is 'K8S'.
     * 
     */
    public String getEndpointComputeType() {
        return this.endpointComputeType;
    }
    /**
     * ARM resource ID of the environment specification for the endpoint deployment.
     * 
     */
    public Optional<String> getEnvironmentId() {
        return Optional.ofNullable(this.environmentId);
    }
    /**
     * Environment variables configuration for the deployment.
     * 
     */
    public Map<String,String> getEnvironmentVariables() {
        return this.environmentVariables == null ? Map.of() : this.environmentVariables;
    }
    /**
     * Deployment container liveness/readiness probe configuration.
     * 
     */
    public Optional<ProbeSettingsResponse> getLivenessProbe() {
        return Optional.ofNullable(this.livenessProbe);
    }
    /**
     * Reference to the model asset for the endpoint deployment.
     * 
     */
    public Optional<Object> getModel() {
        return Optional.ofNullable(this.model);
    }
    /**
     * Property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    public Map<String,String> getProperties() {
        return this.properties == null ? Map.of() : this.properties;
    }
    /**
     * Provisioning state for the endpoint deployment.
     * 
     */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Online deployment scoring requests configuration.
     * 
     */
    public Optional<OnlineRequestSettingsResponse> getRequestSettings() {
        return Optional.ofNullable(this.requestSettings);
    }
    /**
     * Online deployment scaling configuration.
     * 
     */
    public Optional<Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse>> getScaleSettings() {
        return Optional.ofNullable(this.scaleSettings);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(K8sOnlineDeploymentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean appInsightsEnabled;
        private @Nullable CodeConfigurationResponse codeConfiguration;
        private @Nullable ContainerResourceRequirementsResponse containerResourceRequirements;
        private @Nullable String description;
        private String endpointComputeType;
        private @Nullable String environmentId;
        private @Nullable Map<String,String> environmentVariables;
        private @Nullable ProbeSettingsResponse livenessProbe;
        private @Nullable Object model;
        private @Nullable Map<String,String> properties;
        private String provisioningState;
        private @Nullable OnlineRequestSettingsResponse requestSettings;
        private @Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(K8sOnlineDeploymentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appInsightsEnabled = defaults.appInsightsEnabled;
    	      this.codeConfiguration = defaults.codeConfiguration;
    	      this.containerResourceRequirements = defaults.containerResourceRequirements;
    	      this.description = defaults.description;
    	      this.endpointComputeType = defaults.endpointComputeType;
    	      this.environmentId = defaults.environmentId;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.livenessProbe = defaults.livenessProbe;
    	      this.model = defaults.model;
    	      this.properties = defaults.properties;
    	      this.provisioningState = defaults.provisioningState;
    	      this.requestSettings = defaults.requestSettings;
    	      this.scaleSettings = defaults.scaleSettings;
        }

        public Builder setAppInsightsEnabled(@Nullable Boolean appInsightsEnabled) {
            this.appInsightsEnabled = appInsightsEnabled;
            return this;
        }

        public Builder setCodeConfiguration(@Nullable CodeConfigurationResponse codeConfiguration) {
            this.codeConfiguration = codeConfiguration;
            return this;
        }

        public Builder setContainerResourceRequirements(@Nullable ContainerResourceRequirementsResponse containerResourceRequirements) {
            this.containerResourceRequirements = containerResourceRequirements;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setEndpointComputeType(String endpointComputeType) {
            this.endpointComputeType = Objects.requireNonNull(endpointComputeType);
            return this;
        }

        public Builder setEnvironmentId(@Nullable String environmentId) {
            this.environmentId = environmentId;
            return this;
        }

        public Builder setEnvironmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }

        public Builder setLivenessProbe(@Nullable ProbeSettingsResponse livenessProbe) {
            this.livenessProbe = livenessProbe;
            return this;
        }

        public Builder setModel(@Nullable Object model) {
            this.model = model;
            return this;
        }

        public Builder setProperties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRequestSettings(@Nullable OnlineRequestSettingsResponse requestSettings) {
            this.requestSettings = requestSettings;
            return this;
        }

        public Builder setScaleSettings(@Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings) {
            this.scaleSettings = scaleSettings;
            return this;
        }

        public K8sOnlineDeploymentResponse build() {
            return new K8sOnlineDeploymentResponse(appInsightsEnabled, codeConfiguration, containerResourceRequirements, description, endpointComputeType, environmentId, environmentVariables, livenessProbe, model, properties, provisioningState, requestSettings, scaleSettings);
        }
    }
}
