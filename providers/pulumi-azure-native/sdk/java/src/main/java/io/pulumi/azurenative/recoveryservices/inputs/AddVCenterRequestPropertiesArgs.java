// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The properties of an add vCenter request.
 * 
 */
public final class AddVCenterRequestPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final AddVCenterRequestPropertiesArgs Empty = new AddVCenterRequestPropertiesArgs();

    /**
     * The friendly name of the vCenter.
     * 
     */
    @InputImport(name="friendlyName")
    private final @Nullable Input<String> friendlyName;

    public Input<String> getFriendlyName() {
        return this.friendlyName == null ? Input.empty() : this.friendlyName;
    }

    /**
     * The IP address of the vCenter to be discovered.
     * 
     */
    @InputImport(name="ipAddress")
    private final @Nullable Input<String> ipAddress;

    public Input<String> getIpAddress() {
        return this.ipAddress == null ? Input.empty() : this.ipAddress;
    }

    /**
     * The port number for discovery.
     * 
     */
    @InputImport(name="port")
    private final @Nullable Input<String> port;

    public Input<String> getPort() {
        return this.port == null ? Input.empty() : this.port;
    }

    /**
     * The process server Id from where the discovery is orchestrated.
     * 
     */
    @InputImport(name="processServerId")
    private final @Nullable Input<String> processServerId;

    public Input<String> getProcessServerId() {
        return this.processServerId == null ? Input.empty() : this.processServerId;
    }

    /**
     * The account Id which has privileges to discover the vCenter.
     * 
     */
    @InputImport(name="runAsAccountId")
    private final @Nullable Input<String> runAsAccountId;

    public Input<String> getRunAsAccountId() {
        return this.runAsAccountId == null ? Input.empty() : this.runAsAccountId;
    }

    public AddVCenterRequestPropertiesArgs(
        @Nullable Input<String> friendlyName,
        @Nullable Input<String> ipAddress,
        @Nullable Input<String> port,
        @Nullable Input<String> processServerId,
        @Nullable Input<String> runAsAccountId) {
        this.friendlyName = friendlyName;
        this.ipAddress = ipAddress;
        this.port = port;
        this.processServerId = processServerId;
        this.runAsAccountId = runAsAccountId;
    }

    private AddVCenterRequestPropertiesArgs() {
        this.friendlyName = Input.empty();
        this.ipAddress = Input.empty();
        this.port = Input.empty();
        this.processServerId = Input.empty();
        this.runAsAccountId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AddVCenterRequestPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> friendlyName;
        private @Nullable Input<String> ipAddress;
        private @Nullable Input<String> port;
        private @Nullable Input<String> processServerId;
        private @Nullable Input<String> runAsAccountId;

        public Builder() {
    	      // Empty
        }

        public Builder(AddVCenterRequestPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.friendlyName = defaults.friendlyName;
    	      this.ipAddress = defaults.ipAddress;
    	      this.port = defaults.port;
    	      this.processServerId = defaults.processServerId;
    	      this.runAsAccountId = defaults.runAsAccountId;
        }

        public Builder setFriendlyName(@Nullable Input<String> friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }

        public Builder setFriendlyName(@Nullable String friendlyName) {
            this.friendlyName = Input.ofNullable(friendlyName);
            return this;
        }

        public Builder setIpAddress(@Nullable Input<String> ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }

        public Builder setIpAddress(@Nullable String ipAddress) {
            this.ipAddress = Input.ofNullable(ipAddress);
            return this;
        }

        public Builder setPort(@Nullable Input<String> port) {
            this.port = port;
            return this;
        }

        public Builder setPort(@Nullable String port) {
            this.port = Input.ofNullable(port);
            return this;
        }

        public Builder setProcessServerId(@Nullable Input<String> processServerId) {
            this.processServerId = processServerId;
            return this;
        }

        public Builder setProcessServerId(@Nullable String processServerId) {
            this.processServerId = Input.ofNullable(processServerId);
            return this;
        }

        public Builder setRunAsAccountId(@Nullable Input<String> runAsAccountId) {
            this.runAsAccountId = runAsAccountId;
            return this;
        }

        public Builder setRunAsAccountId(@Nullable String runAsAccountId) {
            this.runAsAccountId = Input.ofNullable(runAsAccountId);
            return this;
        }

        public AddVCenterRequestPropertiesArgs build() {
            return new AddVCenterRequestPropertiesArgs(friendlyName, ipAddress, port, processServerId, runAsAccountId);
        }
    }
}
