// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApiIssueCommentResult {
    /**
     * Date and time when the comment was created.
     * 
     */
    private final @Nullable String createdDate;
    /**
     * Resource ID.
     * 
     */
    private final String id;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * Comment text.
     * 
     */
    private final String text;
    /**
     * Resource type for API Management resource.
     * 
     */
    private final String type;
    /**
     * A resource identifier for the user who left the comment.
     * 
     */
    private final String userId;

    @CustomType.Constructor
    private GetApiIssueCommentResult(
        @CustomType.Parameter("createdDate") @Nullable String createdDate,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("text") String text,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("userId") String userId) {
        this.createdDate = createdDate;
        this.id = id;
        this.name = name;
        this.text = text;
        this.type = type;
        this.userId = userId;
    }

    /**
     * Date and time when the comment was created.
     * 
    */
    public Optional<String> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }
    /**
     * Resource ID.
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * Resource name.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * Comment text.
     * 
    */
    public String text() {
        return this.text;
    }
    /**
     * Resource type for API Management resource.
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * A resource identifier for the user who left the comment.
     * 
    */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiIssueCommentResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String createdDate;
        private String id;
        private String name;
        private String text;
        private String type;
        private String userId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApiIssueCommentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdDate = defaults.createdDate;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.text = defaults.text;
    	      this.type = defaults.type;
    	      this.userId = defaults.userId;
        }

        public Builder createdDate(@Nullable String createdDate) {
            this.createdDate = createdDate;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder text(String text) {
            this.text = Objects.requireNonNull(text);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }        public GetApiIssueCommentResult build() {
            return new GetApiIssueCommentResult(createdDate, id, name, text, type, userId);
        }
    }
}
