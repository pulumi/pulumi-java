// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.videoanalyzer;

import io.pulumi.azurenative.videoanalyzer.enums.AccessPolicyRole;
import io.pulumi.azurenative.videoanalyzer.inputs.JwtAuthenticationArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccessPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final AccessPolicyArgs Empty = new AccessPolicyArgs();

    /**
     * The name of the access policy to create or update.
     * 
     */
    @InputImport(name="accessPolicyName")
    private final @Nullable Input<String> accessPolicyName;

    public Input<String> getAccessPolicyName() {
        return this.accessPolicyName == null ? Input.empty() : this.accessPolicyName;
    }

    /**
     * The Azure Video Analyzer account name.
     * 
     */
    @InputImport(name="accountName", required=true)
    private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    /**
     * Authentication method to be used when validating client API access.
     * 
     */
    @InputImport(name="authentication")
    private final @Nullable Input<JwtAuthenticationArgs> authentication;

    public Input<JwtAuthenticationArgs> getAuthentication() {
        return this.authentication == null ? Input.empty() : this.authentication;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Defines the access level granted by this policy.
     * 
     */
    @InputImport(name="role")
    private final @Nullable Input<Either<String,AccessPolicyRole>> role;

    public Input<Either<String,AccessPolicyRole>> getRole() {
        return this.role == null ? Input.empty() : this.role;
    }

    public AccessPolicyArgs(
        @Nullable Input<String> accessPolicyName,
        Input<String> accountName,
        @Nullable Input<JwtAuthenticationArgs> authentication,
        Input<String> resourceGroupName,
        @Nullable Input<Either<String,AccessPolicyRole>> role) {
        this.accessPolicyName = accessPolicyName;
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.authentication = authentication;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.role = role;
    }

    private AccessPolicyArgs() {
        this.accessPolicyName = Input.empty();
        this.accountName = Input.empty();
        this.authentication = Input.empty();
        this.resourceGroupName = Input.empty();
        this.role = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> accessPolicyName;
        private Input<String> accountName;
        private @Nullable Input<JwtAuthenticationArgs> authentication;
        private Input<String> resourceGroupName;
        private @Nullable Input<Either<String,AccessPolicyRole>> role;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPolicyName = defaults.accessPolicyName;
    	      this.accountName = defaults.accountName;
    	      this.authentication = defaults.authentication;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.role = defaults.role;
        }

        public Builder setAccessPolicyName(@Nullable Input<String> accessPolicyName) {
            this.accessPolicyName = accessPolicyName;
            return this;
        }

        public Builder setAccessPolicyName(@Nullable String accessPolicyName) {
            this.accessPolicyName = Input.ofNullable(accessPolicyName);
            return this;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setAuthentication(@Nullable Input<JwtAuthenticationArgs> authentication) {
            this.authentication = authentication;
            return this;
        }

        public Builder setAuthentication(@Nullable JwtAuthenticationArgs authentication) {
            this.authentication = Input.ofNullable(authentication);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRole(@Nullable Input<Either<String,AccessPolicyRole>> role) {
            this.role = role;
            return this;
        }

        public Builder setRole(@Nullable Either<String,AccessPolicyRole> role) {
            this.role = Input.ofNullable(role);
            return this;
        }

        public AccessPolicyArgs build() {
            return new AccessPolicyArgs(accessPolicyName, accountName, authentication, resourceGroupName, role);
        }
    }
}
