// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Property/Properties which represent a unique ID.
 * 
 */
public final class StrongIdArgs extends io.pulumi.resources.ResourceArgs {

    public static final StrongIdArgs Empty = new StrongIdArgs();

    /**
     * Localized descriptions.
     * 
     */
    @InputImport(name="description")
        private final @Nullable Input<Map<String,String>> description;

    public Input<Map<String,String>> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Localized display name.
     * 
     */
    @InputImport(name="displayName")
        private final @Nullable Input<Map<String,String>> displayName;

    public Input<Map<String,String>> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    /**
     * The properties which make up the unique ID.
     * 
     */
    @InputImport(name="keyPropertyNames", required=true)
        private final Input<List<String>> keyPropertyNames;

    public Input<List<String>> getKeyPropertyNames() {
        return this.keyPropertyNames;
    }

    /**
     * The Name identifying the strong ID.
     * 
     */
    @InputImport(name="strongIdName", required=true)
        private final Input<String> strongIdName;

    public Input<String> getStrongIdName() {
        return this.strongIdName;
    }

    public StrongIdArgs(
        @Nullable Input<Map<String,String>> description,
        @Nullable Input<Map<String,String>> displayName,
        Input<List<String>> keyPropertyNames,
        Input<String> strongIdName) {
        this.description = description;
        this.displayName = displayName;
        this.keyPropertyNames = Objects.requireNonNull(keyPropertyNames, "expected parameter 'keyPropertyNames' to be non-null");
        this.strongIdName = Objects.requireNonNull(strongIdName, "expected parameter 'strongIdName' to be non-null");
    }

    private StrongIdArgs() {
        this.description = Input.empty();
        this.displayName = Input.empty();
        this.keyPropertyNames = Input.empty();
        this.strongIdName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StrongIdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,String>> description;
        private @Nullable Input<Map<String,String>> displayName;
        private Input<List<String>> keyPropertyNames;
        private Input<String> strongIdName;

        public Builder() {
    	      // Empty
        }

        public Builder(StrongIdArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.keyPropertyNames = defaults.keyPropertyNames;
    	      this.strongIdName = defaults.strongIdName;
        }

        public Builder setDescription(@Nullable Input<Map<String,String>> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable Map<String,String> description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<Map<String,String>> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable Map<String,String> displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setKeyPropertyNames(Input<List<String>> keyPropertyNames) {
            this.keyPropertyNames = Objects.requireNonNull(keyPropertyNames);
            return this;
        }

        public Builder setKeyPropertyNames(List<String> keyPropertyNames) {
            this.keyPropertyNames = Input.of(Objects.requireNonNull(keyPropertyNames));
            return this;
        }

        public Builder setStrongIdName(Input<String> strongIdName) {
            this.strongIdName = Objects.requireNonNull(strongIdName);
            return this;
        }

        public Builder setStrongIdName(String strongIdName) {
            this.strongIdName = Input.of(Objects.requireNonNull(strongIdName));
            return this;
        }
        public StrongIdArgs build() {
            return new StrongIdArgs(description, displayName, keyPropertyNames, strongIdName);
        }
    }
}
