// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.managednetwork;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.managednetwork.outputs.ManagedNetworkPeeringPolicyPropertiesResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * The Managed Network Peering Policy resource
API Version: 2019-06-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### ManagedNetworkPeeringPoliciesPut
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var managedNetworkPeeringPolicy = new AzureNative.ManagedNetwork.ManagedNetworkPeeringPolicy("managedNetworkPeeringPolicy", new AzureNative.ManagedNetwork.ManagedNetworkPeeringPolicyArgs
        {
            ManagedNetworkName = "myManagedNetwork",
            ManagedNetworkPeeringPolicyName = "myHubAndSpoke",
            Properties = new AzureNative.ManagedNetwork.Inputs.ManagedNetworkPeeringPolicyPropertiesArgs
            {
                Hub = new AzureNative.ManagedNetwork.Inputs.ResourceIdArgs
                {
                    Id = "/subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myHubVnet",
                },
                Spokes = 
                {
                    new AzureNative.ManagedNetwork.Inputs.ResourceIdArgs
                    {
                        Id = "/subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.ManagedNetwork/managedNetworks/myManagedNetwork/managedNetworkGroups/myManagedNetworkGroup1",
                    },
                },
                Type = "HubAndSpokeTopology",
            },
            ResourceGroupName = "myResourceGroup",
        });
    }

}

```

```go
package main

import (
	managednetwork "github.com/pulumi/pulumi-azure-native/sdk/go/azure/managednetwork"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := managednetwork.NewManagedNetworkPeeringPolicy(ctx, "managedNetworkPeeringPolicy", &managednetwork.ManagedNetworkPeeringPolicyArgs{
			ManagedNetworkName:              pulumi.String("myManagedNetwork"),
			ManagedNetworkPeeringPolicyName: pulumi.String("myHubAndSpoke"),
			Properties: &managednetwork.ManagedNetworkPeeringPolicyPropertiesArgs{
				Hub: &managednetwork.ResourceIdArgs{
					Id: pulumi.String("/subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myHubVnet"),
				},
				Spokes: managednetwork.ResourceIdArray{
					&managednetwork.ResourceIdArgs{
						Id: pulumi.String("/subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.ManagedNetwork/managedNetworks/myManagedNetwork/managedNetworkGroups/myManagedNetworkGroup1"),
					},
				},
				Type: pulumi.String("HubAndSpokeTopology"),
			},
			ResourceGroupName: pulumi.String("myResourceGroup"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const managedNetworkPeeringPolicy = new azure_native.managednetwork.ManagedNetworkPeeringPolicy("managedNetworkPeeringPolicy", {
    managedNetworkName: "myManagedNetwork",
    managedNetworkPeeringPolicyName: "myHubAndSpoke",
    properties: {
        hub: {
            id: "/subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myHubVnet",
        },
        spokes: [{
            id: "/subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.ManagedNetwork/managedNetworks/myManagedNetwork/managedNetworkGroups/myManagedNetworkGroup1",
        }],
        type: "HubAndSpokeTopology",
    },
    resourceGroupName: "myResourceGroup",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

managed_network_peering_policy = azure_native.managednetwork.ManagedNetworkPeeringPolicy("managedNetworkPeeringPolicy",
    managed_network_name="myManagedNetwork",
    managed_network_peering_policy_name="myHubAndSpoke",
    properties=azure_native.managednetwork.ManagedNetworkPeeringPolicyPropertiesArgs(
        hub=azure_native.managednetwork.ResourceIdArgs(
            id="/subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myHubVnet",
        ),
        spokes=[azure_native.managednetwork.ResourceIdArgs(
            id="/subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.ManagedNetwork/managedNetworks/myManagedNetwork/managedNetworkGroups/myManagedNetworkGroup1",
        )],
        type="HubAndSpokeTopology",
    ),
    resource_group_name="myResourceGroup")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:managednetwork:ManagedNetworkPeeringPolicy myHubAndSpoke /subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.ManagedNetwork/managedNetworks/myManagedNetwork/managedNetworkPeeringPolicies/myHubAndSpoke 
```

 */
@ResourceType(type="azure-native:managednetwork:ManagedNetworkPeeringPolicy")
public class ManagedNetworkPeeringPolicy extends io.pulumi.resources.CustomResource {
    /**
     * The geo-location where the resource lives
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The geo-location where the resource lives
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Gets or sets the properties of a Managed Network Policy
     */
    @OutputExport(name="properties", type=ManagedNetworkPeeringPolicyPropertiesResponse.class, parameters={})
    private Output<ManagedNetworkPeeringPolicyPropertiesResponse> properties;

    /**
     * @return Gets or sets the properties of a Managed Network Policy
     */
    public Output<ManagedNetworkPeeringPolicyPropertiesResponse> getProperties() {
        return this.properties;
    }
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedNetworkPeeringPolicy(String name, ManagedNetworkPeeringPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:managednetwork:ManagedNetworkPeeringPolicy", name, args == null ? ManagedNetworkPeeringPolicyArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ManagedNetworkPeeringPolicy(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:managednetwork:ManagedNetworkPeeringPolicy", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:managednetwork/v20190601preview:ManagedNetworkPeeringPolicy").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedNetworkPeeringPolicy get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ManagedNetworkPeeringPolicy(name, id, options);
    }
}
