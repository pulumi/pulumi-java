// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media;

import io.pulumi.azurenative.media.inputs.TransformOutputArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TransformArgs extends io.pulumi.resources.ResourceArgs {

    public static final TransformArgs Empty = new TransformArgs();

    @InputImport(name="accountName", required=true)
    private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="outputs", required=true)
    private final Input<List<TransformOutputArgs>> outputs;

    public Input<List<TransformOutputArgs>> getOutputs() {
        return this.outputs;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="transformName")
    private final @Nullable Input<String> transformName;

    public Input<String> getTransformName() {
        return this.transformName == null ? Input.empty() : this.transformName;
    }

    public TransformArgs(
        Input<String> accountName,
        @Nullable Input<String> description,
        Input<List<TransformOutputArgs>> outputs,
        Input<String> resourceGroupName,
        @Nullable Input<String> transformName) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.description = description;
        this.outputs = Objects.requireNonNull(outputs, "expected parameter 'outputs' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.transformName = transformName;
    }

    private TransformArgs() {
        this.accountName = Input.empty();
        this.description = Input.empty();
        this.outputs = Input.empty();
        this.resourceGroupName = Input.empty();
        this.transformName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransformArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<String> description;
        private Input<List<TransformOutputArgs>> outputs;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> transformName;

        public Builder() {
    	      // Empty
        }

        public Builder(TransformArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.description = defaults.description;
    	      this.outputs = defaults.outputs;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.transformName = defaults.transformName;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setOutputs(Input<List<TransformOutputArgs>> outputs) {
            this.outputs = Objects.requireNonNull(outputs);
            return this;
        }

        public Builder setOutputs(List<TransformOutputArgs> outputs) {
            this.outputs = Input.of(Objects.requireNonNull(outputs));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setTransformName(@Nullable Input<String> transformName) {
            this.transformName = transformName;
            return this;
        }

        public Builder setTransformName(@Nullable String transformName) {
            this.transformName = Input.ofNullable(transformName);
            return this;
        }

        public TransformArgs build() {
            return new TransformArgs(accountName, description, outputs, resourceGroupName, transformName);
        }
    }
}
