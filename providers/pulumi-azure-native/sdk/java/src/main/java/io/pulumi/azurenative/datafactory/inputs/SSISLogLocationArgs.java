// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.azurenative.datafactory.enums.SsisLogLocationType;
import io.pulumi.azurenative.datafactory.inputs.SSISAccessCredentialArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * SSIS package execution log location
 * 
 */
public final class SSISLogLocationArgs extends io.pulumi.resources.ResourceArgs {

    public static final SSISLogLocationArgs Empty = new SSISLogLocationArgs();

    /**
     * The package execution log access credential.
     * 
     */
    @Import(name="accessCredential")
      private final @Nullable Output<SSISAccessCredentialArgs> accessCredential;

    public Output<SSISAccessCredentialArgs> getAccessCredential() {
        return this.accessCredential == null ? Output.empty() : this.accessCredential;
    }

    /**
     * The SSIS package execution log path. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="logPath", required=true)
      private final Output<Object> logPath;

    public Output<Object> getLogPath() {
        return this.logPath;
    }

    /**
     * Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     * 
     */
    @Import(name="logRefreshInterval")
      private final @Nullable Output<Object> logRefreshInterval;

    public Output<Object> getLogRefreshInterval() {
        return this.logRefreshInterval == null ? Output.empty() : this.logRefreshInterval;
    }

    /**
     * The type of SSIS log location.
     * 
     */
    @Import(name="type", required=true)
      private final Output<Either<String,SsisLogLocationType>> type;

    public Output<Either<String,SsisLogLocationType>> getType() {
        return this.type;
    }

    public SSISLogLocationArgs(
        @Nullable Output<SSISAccessCredentialArgs> accessCredential,
        Output<Object> logPath,
        @Nullable Output<Object> logRefreshInterval,
        Output<Either<String,SsisLogLocationType>> type) {
        this.accessCredential = accessCredential;
        this.logPath = Objects.requireNonNull(logPath, "expected parameter 'logPath' to be non-null");
        this.logRefreshInterval = logRefreshInterval;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private SSISLogLocationArgs() {
        this.accessCredential = Output.empty();
        this.logPath = Output.empty();
        this.logRefreshInterval = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SSISLogLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SSISAccessCredentialArgs> accessCredential;
        private Output<Object> logPath;
        private @Nullable Output<Object> logRefreshInterval;
        private Output<Either<String,SsisLogLocationType>> type;

        public Builder() {
    	      // Empty
        }

        public Builder(SSISLogLocationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessCredential = defaults.accessCredential;
    	      this.logPath = defaults.logPath;
    	      this.logRefreshInterval = defaults.logRefreshInterval;
    	      this.type = defaults.type;
        }

        public Builder accessCredential(@Nullable Output<SSISAccessCredentialArgs> accessCredential) {
            this.accessCredential = accessCredential;
            return this;
        }
        public Builder accessCredential(@Nullable SSISAccessCredentialArgs accessCredential) {
            this.accessCredential = Output.ofNullable(accessCredential);
            return this;
        }
        public Builder logPath(Output<Object> logPath) {
            this.logPath = Objects.requireNonNull(logPath);
            return this;
        }
        public Builder logPath(Object logPath) {
            this.logPath = Output.of(Objects.requireNonNull(logPath));
            return this;
        }
        public Builder logRefreshInterval(@Nullable Output<Object> logRefreshInterval) {
            this.logRefreshInterval = logRefreshInterval;
            return this;
        }
        public Builder logRefreshInterval(@Nullable Object logRefreshInterval) {
            this.logRefreshInterval = Output.ofNullable(logRefreshInterval);
            return this;
        }
        public Builder type(Output<Either<String,SsisLogLocationType>> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(Either<String,SsisLogLocationType> type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public SSISLogLocationArgs build() {
            return new SSISLogLocationArgs(accessCredential, logPath, logRefreshInterval, type);
        }
    }
}
