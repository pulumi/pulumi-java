// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class UniformInt64RangePartitionSchemeDescriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final UniformInt64RangePartitionSchemeDescriptionArgs Empty = new UniformInt64RangePartitionSchemeDescriptionArgs();

    @InputImport(name="count", required=true)
    private final Input<Integer> count;

    public Input<Integer> getCount() {
        return this.count;
    }

    @InputImport(name="highKey", required=true)
    private final Input<String> highKey;

    public Input<String> getHighKey() {
        return this.highKey;
    }

    @InputImport(name="lowKey", required=true)
    private final Input<String> lowKey;

    public Input<String> getLowKey() {
        return this.lowKey;
    }

    @InputImport(name="partitionScheme", required=true)
    private final Input<String> partitionScheme;

    public Input<String> getPartitionScheme() {
        return this.partitionScheme;
    }

    public UniformInt64RangePartitionSchemeDescriptionArgs(
        Input<Integer> count,
        Input<String> highKey,
        Input<String> lowKey,
        Input<String> partitionScheme) {
        this.count = Objects.requireNonNull(count, "expected parameter 'count' to be non-null");
        this.highKey = Objects.requireNonNull(highKey, "expected parameter 'highKey' to be non-null");
        this.lowKey = Objects.requireNonNull(lowKey, "expected parameter 'lowKey' to be non-null");
        this.partitionScheme = Objects.requireNonNull(partitionScheme, "expected parameter 'partitionScheme' to be non-null");
    }

    private UniformInt64RangePartitionSchemeDescriptionArgs() {
        this.count = Input.empty();
        this.highKey = Input.empty();
        this.lowKey = Input.empty();
        this.partitionScheme = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UniformInt64RangePartitionSchemeDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> count;
        private Input<String> highKey;
        private Input<String> lowKey;
        private Input<String> partitionScheme;

        public Builder() {
    	      // Empty
        }

        public Builder(UniformInt64RangePartitionSchemeDescriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.highKey = defaults.highKey;
    	      this.lowKey = defaults.lowKey;
    	      this.partitionScheme = defaults.partitionScheme;
        }

        public Builder setCount(Input<Integer> count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }

        public Builder setCount(Integer count) {
            this.count = Input.of(Objects.requireNonNull(count));
            return this;
        }

        public Builder setHighKey(Input<String> highKey) {
            this.highKey = Objects.requireNonNull(highKey);
            return this;
        }

        public Builder setHighKey(String highKey) {
            this.highKey = Input.of(Objects.requireNonNull(highKey));
            return this;
        }

        public Builder setLowKey(Input<String> lowKey) {
            this.lowKey = Objects.requireNonNull(lowKey);
            return this;
        }

        public Builder setLowKey(String lowKey) {
            this.lowKey = Input.of(Objects.requireNonNull(lowKey));
            return this;
        }

        public Builder setPartitionScheme(Input<String> partitionScheme) {
            this.partitionScheme = Objects.requireNonNull(partitionScheme);
            return this;
        }

        public Builder setPartitionScheme(String partitionScheme) {
            this.partitionScheme = Input.of(Objects.requireNonNull(partitionScheme));
            return this;
        }

        public UniformInt64RangePartitionSchemeDescriptionArgs build() {
            return new UniformInt64RangePartitionSchemeDescriptionArgs(count, highKey, lowKey, partitionScheme);
        }
    }
}
