// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.connectedvmwarevsphere;

import io.pulumi.azurenative.connectedvmwarevsphere.enums.FirmwareType;
import io.pulumi.azurenative.connectedvmwarevsphere.inputs.ExtendedLocationArgs;
import io.pulumi.azurenative.connectedvmwarevsphere.inputs.HardwareProfileArgs;
import io.pulumi.azurenative.connectedvmwarevsphere.inputs.IdentityArgs;
import io.pulumi.azurenative.connectedvmwarevsphere.inputs.NetworkProfileArgs;
import io.pulumi.azurenative.connectedvmwarevsphere.inputs.OsProfileArgs;
import io.pulumi.azurenative.connectedvmwarevsphere.inputs.PlacementProfileArgs;
import io.pulumi.azurenative.connectedvmwarevsphere.inputs.StorageProfileArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualMachineArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualMachineArgs Empty = new VirtualMachineArgs();

    /**
     * Gets or sets the extended location.
     * 
     */
    @Import(name="extendedLocation")
      private final @Nullable Output<ExtendedLocationArgs> extendedLocation;

    public Output<ExtendedLocationArgs> extendedLocation() {
        return this.extendedLocation == null ? Codegen.empty() : this.extendedLocation;
    }

    /**
     * Firmware type
     * 
     */
    @Import(name="firmwareType")
      private final @Nullable Output<Either<String,FirmwareType>> firmwareType;

    public Output<Either<String,FirmwareType>> firmwareType() {
        return this.firmwareType == null ? Codegen.empty() : this.firmwareType;
    }

    /**
     * Hardware properties.
     * 
     */
    @Import(name="hardwareProfile")
      private final @Nullable Output<HardwareProfileArgs> hardwareProfile;

    public Output<HardwareProfileArgs> hardwareProfile() {
        return this.hardwareProfile == null ? Codegen.empty() : this.hardwareProfile;
    }

    /**
     * The identity of the resource.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<IdentityArgs> identity;

    public Output<IdentityArgs> identity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * Gets or sets the inventory Item ID for the virtual machine.
     * 
     */
    @Import(name="inventoryItemId")
      private final @Nullable Output<String> inventoryItemId;

    public Output<String> inventoryItemId() {
        return this.inventoryItemId == null ? Codegen.empty() : this.inventoryItemId;
    }

    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<String> kind;

    public Output<String> kind() {
        return this.kind == null ? Codegen.empty() : this.kind;
    }

    /**
     * Gets or sets the location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
     * 
     */
    @Import(name="moRefId")
      private final @Nullable Output<String> moRefId;

    public Output<String> moRefId() {
        return this.moRefId == null ? Codegen.empty() : this.moRefId;
    }

    /**
     * Network properties.
     * 
     */
    @Import(name="networkProfile")
      private final @Nullable Output<NetworkProfileArgs> networkProfile;

    public Output<NetworkProfileArgs> networkProfile() {
        return this.networkProfile == null ? Codegen.empty() : this.networkProfile;
    }

    /**
     * OS properties.
     * 
     */
    @Import(name="osProfile")
      private final @Nullable Output<OsProfileArgs> osProfile;

    public Output<OsProfileArgs> osProfile() {
        return this.osProfile == null ? Codegen.empty() : this.osProfile;
    }

    /**
     * Placement properties.
     * 
     */
    @Import(name="placementProfile")
      private final @Nullable Output<PlacementProfileArgs> placementProfile;

    public Output<PlacementProfileArgs> placementProfile() {
        return this.placementProfile == null ? Codegen.empty() : this.placementProfile;
    }

    /**
     * The Resource Group Name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will
     * deploy.
     * 
     */
    @Import(name="resourcePoolId")
      private final @Nullable Output<String> resourcePoolId;

    public Output<String> resourcePoolId() {
        return this.resourcePoolId == null ? Codegen.empty() : this.resourcePoolId;
    }

    /**
     * Gets or sets the SMBIOS UUID of the vm.
     * 
     */
    @Import(name="smbiosUuid")
      private final @Nullable Output<String> smbiosUuid;

    public Output<String> smbiosUuid() {
        return this.smbiosUuid == null ? Codegen.empty() : this.smbiosUuid;
    }

    /**
     * Storage properties.
     * 
     */
    @Import(name="storageProfile")
      private final @Nullable Output<StorageProfileArgs> storageProfile;

    public Output<StorageProfileArgs> storageProfile() {
        return this.storageProfile == null ? Codegen.empty() : this.storageProfile;
    }

    /**
     * Gets or sets the Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * Gets or sets the ARM Id of the template resource to deploy the virtual machine.
     * 
     */
    @Import(name="templateId")
      private final @Nullable Output<String> templateId;

    public Output<String> templateId() {
        return this.templateId == null ? Codegen.empty() : this.templateId;
    }

    /**
     * Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
     * 
     */
    @Import(name="vCenterId")
      private final @Nullable Output<String> vCenterId;

    public Output<String> vCenterId() {
        return this.vCenterId == null ? Codegen.empty() : this.vCenterId;
    }

    /**
     * Name of the virtual machine resource.
     * 
     */
    @Import(name="virtualMachineName")
      private final @Nullable Output<String> virtualMachineName;

    public Output<String> virtualMachineName() {
        return this.virtualMachineName == null ? Codegen.empty() : this.virtualMachineName;
    }

    public VirtualMachineArgs(
        @Nullable Output<ExtendedLocationArgs> extendedLocation,
        @Nullable Output<Either<String,FirmwareType>> firmwareType,
        @Nullable Output<HardwareProfileArgs> hardwareProfile,
        @Nullable Output<IdentityArgs> identity,
        @Nullable Output<String> inventoryItemId,
        @Nullable Output<String> kind,
        @Nullable Output<String> location,
        @Nullable Output<String> moRefId,
        @Nullable Output<NetworkProfileArgs> networkProfile,
        @Nullable Output<OsProfileArgs> osProfile,
        @Nullable Output<PlacementProfileArgs> placementProfile,
        Output<String> resourceGroupName,
        @Nullable Output<String> resourcePoolId,
        @Nullable Output<String> smbiosUuid,
        @Nullable Output<StorageProfileArgs> storageProfile,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> templateId,
        @Nullable Output<String> vCenterId,
        @Nullable Output<String> virtualMachineName) {
        this.extendedLocation = extendedLocation;
        this.firmwareType = firmwareType;
        this.hardwareProfile = hardwareProfile;
        this.identity = identity;
        this.inventoryItemId = inventoryItemId;
        this.kind = kind;
        this.location = location;
        this.moRefId = moRefId;
        this.networkProfile = networkProfile;
        this.osProfile = osProfile;
        this.placementProfile = placementProfile;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourcePoolId = resourcePoolId;
        this.smbiosUuid = smbiosUuid;
        this.storageProfile = storageProfile;
        this.tags = tags;
        this.templateId = templateId;
        this.vCenterId = vCenterId;
        this.virtualMachineName = virtualMachineName;
    }

    private VirtualMachineArgs() {
        this.extendedLocation = Codegen.empty();
        this.firmwareType = Codegen.empty();
        this.hardwareProfile = Codegen.empty();
        this.identity = Codegen.empty();
        this.inventoryItemId = Codegen.empty();
        this.kind = Codegen.empty();
        this.location = Codegen.empty();
        this.moRefId = Codegen.empty();
        this.networkProfile = Codegen.empty();
        this.osProfile = Codegen.empty();
        this.placementProfile = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.resourcePoolId = Codegen.empty();
        this.smbiosUuid = Codegen.empty();
        this.storageProfile = Codegen.empty();
        this.tags = Codegen.empty();
        this.templateId = Codegen.empty();
        this.vCenterId = Codegen.empty();
        this.virtualMachineName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ExtendedLocationArgs> extendedLocation;
        private @Nullable Output<Either<String,FirmwareType>> firmwareType;
        private @Nullable Output<HardwareProfileArgs> hardwareProfile;
        private @Nullable Output<IdentityArgs> identity;
        private @Nullable Output<String> inventoryItemId;
        private @Nullable Output<String> kind;
        private @Nullable Output<String> location;
        private @Nullable Output<String> moRefId;
        private @Nullable Output<NetworkProfileArgs> networkProfile;
        private @Nullable Output<OsProfileArgs> osProfile;
        private @Nullable Output<PlacementProfileArgs> placementProfile;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> resourcePoolId;
        private @Nullable Output<String> smbiosUuid;
        private @Nullable Output<StorageProfileArgs> storageProfile;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> templateId;
        private @Nullable Output<String> vCenterId;
        private @Nullable Output<String> virtualMachineName;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.firmwareType = defaults.firmwareType;
    	      this.hardwareProfile = defaults.hardwareProfile;
    	      this.identity = defaults.identity;
    	      this.inventoryItemId = defaults.inventoryItemId;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.moRefId = defaults.moRefId;
    	      this.networkProfile = defaults.networkProfile;
    	      this.osProfile = defaults.osProfile;
    	      this.placementProfile = defaults.placementProfile;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourcePoolId = defaults.resourcePoolId;
    	      this.smbiosUuid = defaults.smbiosUuid;
    	      this.storageProfile = defaults.storageProfile;
    	      this.tags = defaults.tags;
    	      this.templateId = defaults.templateId;
    	      this.vCenterId = defaults.vCenterId;
    	      this.virtualMachineName = defaults.virtualMachineName;
        }

        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        public Builder extendedLocation(@Nullable ExtendedLocationArgs extendedLocation) {
            this.extendedLocation = Codegen.ofNullable(extendedLocation);
            return this;
        }
        public Builder firmwareType(@Nullable Output<Either<String,FirmwareType>> firmwareType) {
            this.firmwareType = firmwareType;
            return this;
        }
        public Builder firmwareType(@Nullable Either<String,FirmwareType> firmwareType) {
            this.firmwareType = Codegen.ofNullable(firmwareType);
            return this;
        }
        public Builder hardwareProfile(@Nullable Output<HardwareProfileArgs> hardwareProfile) {
            this.hardwareProfile = hardwareProfile;
            return this;
        }
        public Builder hardwareProfile(@Nullable HardwareProfileArgs hardwareProfile) {
            this.hardwareProfile = Codegen.ofNullable(hardwareProfile);
            return this;
        }
        public Builder identity(@Nullable Output<IdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable IdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder inventoryItemId(@Nullable Output<String> inventoryItemId) {
            this.inventoryItemId = inventoryItemId;
            return this;
        }
        public Builder inventoryItemId(@Nullable String inventoryItemId) {
            this.inventoryItemId = Codegen.ofNullable(inventoryItemId);
            return this;
        }
        public Builder kind(@Nullable Output<String> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = Codegen.ofNullable(kind);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder moRefId(@Nullable Output<String> moRefId) {
            this.moRefId = moRefId;
            return this;
        }
        public Builder moRefId(@Nullable String moRefId) {
            this.moRefId = Codegen.ofNullable(moRefId);
            return this;
        }
        public Builder networkProfile(@Nullable Output<NetworkProfileArgs> networkProfile) {
            this.networkProfile = networkProfile;
            return this;
        }
        public Builder networkProfile(@Nullable NetworkProfileArgs networkProfile) {
            this.networkProfile = Codegen.ofNullable(networkProfile);
            return this;
        }
        public Builder osProfile(@Nullable Output<OsProfileArgs> osProfile) {
            this.osProfile = osProfile;
            return this;
        }
        public Builder osProfile(@Nullable OsProfileArgs osProfile) {
            this.osProfile = Codegen.ofNullable(osProfile);
            return this;
        }
        public Builder placementProfile(@Nullable Output<PlacementProfileArgs> placementProfile) {
            this.placementProfile = placementProfile;
            return this;
        }
        public Builder placementProfile(@Nullable PlacementProfileArgs placementProfile) {
            this.placementProfile = Codegen.ofNullable(placementProfile);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder resourcePoolId(@Nullable Output<String> resourcePoolId) {
            this.resourcePoolId = resourcePoolId;
            return this;
        }
        public Builder resourcePoolId(@Nullable String resourcePoolId) {
            this.resourcePoolId = Codegen.ofNullable(resourcePoolId);
            return this;
        }
        public Builder smbiosUuid(@Nullable Output<String> smbiosUuid) {
            this.smbiosUuid = smbiosUuid;
            return this;
        }
        public Builder smbiosUuid(@Nullable String smbiosUuid) {
            this.smbiosUuid = Codegen.ofNullable(smbiosUuid);
            return this;
        }
        public Builder storageProfile(@Nullable Output<StorageProfileArgs> storageProfile) {
            this.storageProfile = storageProfile;
            return this;
        }
        public Builder storageProfile(@Nullable StorageProfileArgs storageProfile) {
            this.storageProfile = Codegen.ofNullable(storageProfile);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder templateId(@Nullable Output<String> templateId) {
            this.templateId = templateId;
            return this;
        }
        public Builder templateId(@Nullable String templateId) {
            this.templateId = Codegen.ofNullable(templateId);
            return this;
        }
        public Builder vCenterId(@Nullable Output<String> vCenterId) {
            this.vCenterId = vCenterId;
            return this;
        }
        public Builder vCenterId(@Nullable String vCenterId) {
            this.vCenterId = Codegen.ofNullable(vCenterId);
            return this;
        }
        public Builder virtualMachineName(@Nullable Output<String> virtualMachineName) {
            this.virtualMachineName = virtualMachineName;
            return this;
        }
        public Builder virtualMachineName(@Nullable String virtualMachineName) {
            this.virtualMachineName = Codegen.ofNullable(virtualMachineName);
            return this;
        }        public VirtualMachineArgs build() {
            return new VirtualMachineArgs(extendedLocation, firmwareType, hardwareProfile, identity, inventoryItemId, kind, location, moRefId, networkProfile, osProfile, placementProfile, resourceGroupName, resourcePoolId, smbiosUuid, storageProfile, tags, templateId, vCenterId, virtualMachineName);
        }
    }
}
