// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.portal;

import io.pulumi.azurenative.portal.inputs.ConsoleCreatePropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConsoleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConsoleArgs Empty = new ConsoleArgs();

    /**
     * The name of the console
     * 
     */
    @InputImport(name="consoleName")
    private final @Nullable Input<String> consoleName;

    public Input<String> getConsoleName() {
        return this.consoleName == null ? Input.empty() : this.consoleName;
    }

    /**
     * Cloud shell properties for creating a console.
     * 
     */
    @InputImport(name="properties", required=true)
    private final Input<ConsoleCreatePropertiesArgs> properties;

    public Input<ConsoleCreatePropertiesArgs> getProperties() {
        return this.properties;
    }

    public ConsoleArgs(
        @Nullable Input<String> consoleName,
        Input<ConsoleCreatePropertiesArgs> properties) {
        this.consoleName = consoleName;
        this.properties = Objects.requireNonNull(properties, "expected parameter 'properties' to be non-null");
    }

    private ConsoleArgs() {
        this.consoleName = Input.empty();
        this.properties = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConsoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> consoleName;
        private Input<ConsoleCreatePropertiesArgs> properties;

        public Builder() {
    	      // Empty
        }

        public Builder(ConsoleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consoleName = defaults.consoleName;
    	      this.properties = defaults.properties;
        }

        public Builder setConsoleName(@Nullable Input<String> consoleName) {
            this.consoleName = consoleName;
            return this;
        }

        public Builder setConsoleName(@Nullable String consoleName) {
            this.consoleName = Input.ofNullable(consoleName);
            return this;
        }

        public Builder setProperties(Input<ConsoleCreatePropertiesArgs> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }

        public Builder setProperties(ConsoleCreatePropertiesArgs properties) {
            this.properties = Input.of(Objects.requireNonNull(properties));
            return this;
        }

        public ConsoleArgs build() {
            return new ConsoleArgs(consoleName, properties);
        }
    }
}
