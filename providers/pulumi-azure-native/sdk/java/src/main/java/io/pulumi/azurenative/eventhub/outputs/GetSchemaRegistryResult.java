// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.eventhub.outputs;

import io.pulumi.azurenative.eventhub.outputs.SystemDataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetSchemaRegistryResult {
    private final String createdAtUtc;
    private final String eTag;
    private final @Nullable Map<String,String> groupProperties;
    private final String id;
    private final String location;
    private final String name;
    private final @Nullable String schemaCompatibility;
    private final @Nullable String schemaType;
    private final SystemDataResponse systemData;
    private final String type;
    private final String updatedAtUtc;

    @OutputCustomType.Constructor({"createdAtUtc","eTag","groupProperties","id","location","name","schemaCompatibility","schemaType","systemData","type","updatedAtUtc"})
    private GetSchemaRegistryResult(
        String createdAtUtc,
        String eTag,
        @Nullable Map<String,String> groupProperties,
        String id,
        String location,
        String name,
        @Nullable String schemaCompatibility,
        @Nullable String schemaType,
        SystemDataResponse systemData,
        String type,
        String updatedAtUtc) {
        this.createdAtUtc = Objects.requireNonNull(createdAtUtc);
        this.eTag = Objects.requireNonNull(eTag);
        this.groupProperties = groupProperties;
        this.id = Objects.requireNonNull(id);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.schemaCompatibility = schemaCompatibility;
        this.schemaType = schemaType;
        this.systemData = Objects.requireNonNull(systemData);
        this.type = Objects.requireNonNull(type);
        this.updatedAtUtc = Objects.requireNonNull(updatedAtUtc);
    }

    public String getCreatedAtUtc() {
        return this.createdAtUtc;
    }
    public String getETag() {
        return this.eTag;
    }
    public Map<String,String> getGroupProperties() {
        return this.groupProperties == null ? Map.of() : this.groupProperties;
    }
    public String getId() {
        return this.id;
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getSchemaCompatibility() {
        return Optional.ofNullable(this.schemaCompatibility);
    }
    public Optional<String> getSchemaType() {
        return Optional.ofNullable(this.schemaType);
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public String getType() {
        return this.type;
    }
    public String getUpdatedAtUtc() {
        return this.updatedAtUtc;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchemaRegistryResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createdAtUtc;
        private String eTag;
        private @Nullable Map<String,String> groupProperties;
        private String id;
        private String location;
        private String name;
        private @Nullable String schemaCompatibility;
        private @Nullable String schemaType;
        private SystemDataResponse systemData;
        private String type;
        private String updatedAtUtc;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSchemaRegistryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAtUtc = defaults.createdAtUtc;
    	      this.eTag = defaults.eTag;
    	      this.groupProperties = defaults.groupProperties;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.schemaCompatibility = defaults.schemaCompatibility;
    	      this.schemaType = defaults.schemaType;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
    	      this.updatedAtUtc = defaults.updatedAtUtc;
        }

        public Builder setCreatedAtUtc(String createdAtUtc) {
            this.createdAtUtc = Objects.requireNonNull(createdAtUtc);
            return this;
        }

        public Builder setETag(String eTag) {
            this.eTag = Objects.requireNonNull(eTag);
            return this;
        }

        public Builder setGroupProperties(@Nullable Map<String,String> groupProperties) {
            this.groupProperties = groupProperties;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSchemaCompatibility(@Nullable String schemaCompatibility) {
            this.schemaCompatibility = schemaCompatibility;
            return this;
        }

        public Builder setSchemaType(@Nullable String schemaType) {
            this.schemaType = schemaType;
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUpdatedAtUtc(String updatedAtUtc) {
            this.updatedAtUtc = Objects.requireNonNull(updatedAtUtc);
            return this;
        }

        public GetSchemaRegistryResult build() {
            return new GetSchemaRegistryResult(createdAtUtc, eTag, groupProperties, id, location, name, schemaCompatibility, schemaType, systemData, type, updatedAtUtc);
        }
    }
}
