// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge.inputs;

import io.pulumi.azurenative.databoxedge.enums.AzureContainerDataFormat;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Azure container mapping of the endpoint.
 * 
 */
public final class AzureContainerInfoArgs extends io.pulumi.resources.ResourceArgs {

    public static final AzureContainerInfoArgs Empty = new AzureContainerInfoArgs();

    /**
     * Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
     * 
     */
    @Import(name="containerName", required=true)
      private final Output<String> containerName;

    public Output<String> getContainerName() {
        return this.containerName;
    }

    /**
     * Storage format used for the file represented by the share.
     * 
     */
    @Import(name="dataFormat", required=true)
      private final Output<Either<String,AzureContainerDataFormat>> dataFormat;

    public Output<Either<String,AzureContainerDataFormat>> getDataFormat() {
        return this.dataFormat;
    }

    /**
     * ID of the storage account credential used to access storage.
     * 
     */
    @Import(name="storageAccountCredentialId", required=true)
      private final Output<String> storageAccountCredentialId;

    public Output<String> getStorageAccountCredentialId() {
        return this.storageAccountCredentialId;
    }

    public AzureContainerInfoArgs(
        Output<String> containerName,
        Output<Either<String,AzureContainerDataFormat>> dataFormat,
        Output<String> storageAccountCredentialId) {
        this.containerName = Objects.requireNonNull(containerName, "expected parameter 'containerName' to be non-null");
        this.dataFormat = Objects.requireNonNull(dataFormat, "expected parameter 'dataFormat' to be non-null");
        this.storageAccountCredentialId = Objects.requireNonNull(storageAccountCredentialId, "expected parameter 'storageAccountCredentialId' to be non-null");
    }

    private AzureContainerInfoArgs() {
        this.containerName = Output.empty();
        this.dataFormat = Output.empty();
        this.storageAccountCredentialId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureContainerInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> containerName;
        private Output<Either<String,AzureContainerDataFormat>> dataFormat;
        private Output<String> storageAccountCredentialId;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureContainerInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerName = defaults.containerName;
    	      this.dataFormat = defaults.dataFormat;
    	      this.storageAccountCredentialId = defaults.storageAccountCredentialId;
        }

        public Builder containerName(Output<String> containerName) {
            this.containerName = Objects.requireNonNull(containerName);
            return this;
        }

        public Builder containerName(String containerName) {
            this.containerName = Output.of(Objects.requireNonNull(containerName));
            return this;
        }

        public Builder dataFormat(Output<Either<String,AzureContainerDataFormat>> dataFormat) {
            this.dataFormat = Objects.requireNonNull(dataFormat);
            return this;
        }

        public Builder dataFormat(Either<String,AzureContainerDataFormat> dataFormat) {
            this.dataFormat = Output.of(Objects.requireNonNull(dataFormat));
            return this;
        }

        public Builder storageAccountCredentialId(Output<String> storageAccountCredentialId) {
            this.storageAccountCredentialId = Objects.requireNonNull(storageAccountCredentialId);
            return this;
        }

        public Builder storageAccountCredentialId(String storageAccountCredentialId) {
            this.storageAccountCredentialId = Output.of(Objects.requireNonNull(storageAccountCredentialId));
            return this;
        }
        public AzureContainerInfoArgs build() {
            return new AzureContainerInfoArgs(containerName, dataFormat, storageAccountCredentialId);
        }
    }
}
