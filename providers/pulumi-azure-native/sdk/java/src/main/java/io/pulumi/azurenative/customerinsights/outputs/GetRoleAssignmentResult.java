// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.outputs;

import io.pulumi.azurenative.customerinsights.outputs.AssignmentPrincipalResponse;
import io.pulumi.azurenative.customerinsights.outputs.ResourceSetDescriptionResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRoleAssignmentResult {
    /**
     * The name of the metadata object.
     * 
     */
    private final String assignmentName;
    /**
     * Widget types set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse conflationPolicies;
    /**
     * Connectors set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse connectors;
    /**
     * Localized description for the metadata.
     * 
     */
    private final @Nullable Map<String,String> description;
    /**
     * Localized display names for the metadata.
     * 
     */
    private final @Nullable Map<String,String> displayName;
    /**
     * Resource ID.
     * 
     */
    private final String id;
    /**
     * Interactions set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse interactions;
    /**
     * Kpis set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse kpis;
    /**
     * Links set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse links;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * The principals being assigned to.
     * 
     */
    private final List<AssignmentPrincipalResponse> principals;
    /**
     * Profiles set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse profiles;
    /**
     * Provisioning state.
     * 
     */
    private final String provisioningState;
    /**
     * The Role assignments set for the relationship links.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse relationshipLinks;
    /**
     * The Role assignments set for the relationships.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse relationships;
    /**
     * Type of roles.
     * 
     */
    private final String role;
    /**
     * The Role assignments set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse roleAssignments;
    /**
     * Sas Policies set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse sasPolicies;
    /**
     * The Role assignments set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse segments;
    /**
     * The hub name.
     * 
     */
    private final String tenantId;
    /**
     * Resource type.
     * 
     */
    private final String type;
    /**
     * Views set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse views;
    /**
     * Widget types set for the assignment.
     * 
     */
    private final @Nullable ResourceSetDescriptionResponse widgetTypes;

    @CustomType.Constructor
    private GetRoleAssignmentResult(
        @CustomType.Parameter("assignmentName") String assignmentName,
        @CustomType.Parameter("conflationPolicies") @Nullable ResourceSetDescriptionResponse conflationPolicies,
        @CustomType.Parameter("connectors") @Nullable ResourceSetDescriptionResponse connectors,
        @CustomType.Parameter("description") @Nullable Map<String,String> description,
        @CustomType.Parameter("displayName") @Nullable Map<String,String> displayName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("interactions") @Nullable ResourceSetDescriptionResponse interactions,
        @CustomType.Parameter("kpis") @Nullable ResourceSetDescriptionResponse kpis,
        @CustomType.Parameter("links") @Nullable ResourceSetDescriptionResponse links,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("principals") List<AssignmentPrincipalResponse> principals,
        @CustomType.Parameter("profiles") @Nullable ResourceSetDescriptionResponse profiles,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("relationshipLinks") @Nullable ResourceSetDescriptionResponse relationshipLinks,
        @CustomType.Parameter("relationships") @Nullable ResourceSetDescriptionResponse relationships,
        @CustomType.Parameter("role") String role,
        @CustomType.Parameter("roleAssignments") @Nullable ResourceSetDescriptionResponse roleAssignments,
        @CustomType.Parameter("sasPolicies") @Nullable ResourceSetDescriptionResponse sasPolicies,
        @CustomType.Parameter("segments") @Nullable ResourceSetDescriptionResponse segments,
        @CustomType.Parameter("tenantId") String tenantId,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("views") @Nullable ResourceSetDescriptionResponse views,
        @CustomType.Parameter("widgetTypes") @Nullable ResourceSetDescriptionResponse widgetTypes) {
        this.assignmentName = assignmentName;
        this.conflationPolicies = conflationPolicies;
        this.connectors = connectors;
        this.description = description;
        this.displayName = displayName;
        this.id = id;
        this.interactions = interactions;
        this.kpis = kpis;
        this.links = links;
        this.name = name;
        this.principals = principals;
        this.profiles = profiles;
        this.provisioningState = provisioningState;
        this.relationshipLinks = relationshipLinks;
        this.relationships = relationships;
        this.role = role;
        this.roleAssignments = roleAssignments;
        this.sasPolicies = sasPolicies;
        this.segments = segments;
        this.tenantId = tenantId;
        this.type = type;
        this.views = views;
        this.widgetTypes = widgetTypes;
    }

    /**
     * The name of the metadata object.
     * 
    */
    public String assignmentName() {
        return this.assignmentName;
    }
    /**
     * Widget types set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> conflationPolicies() {
        return Optional.ofNullable(this.conflationPolicies);
    }
    /**
     * Connectors set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> connectors() {
        return Optional.ofNullable(this.connectors);
    }
    /**
     * Localized description for the metadata.
     * 
    */
    public Map<String,String> description() {
        return this.description == null ? Map.of() : this.description;
    }
    /**
     * Localized display names for the metadata.
     * 
    */
    public Map<String,String> displayName() {
        return this.displayName == null ? Map.of() : this.displayName;
    }
    /**
     * Resource ID.
     * 
    */
    public String id() {
        return this.id;
    }
    /**
     * Interactions set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> interactions() {
        return Optional.ofNullable(this.interactions);
    }
    /**
     * Kpis set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> kpis() {
        return Optional.ofNullable(this.kpis);
    }
    /**
     * Links set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> links() {
        return Optional.ofNullable(this.links);
    }
    /**
     * Resource name.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * The principals being assigned to.
     * 
    */
    public List<AssignmentPrincipalResponse> principals() {
        return this.principals;
    }
    /**
     * Profiles set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> profiles() {
        return Optional.ofNullable(this.profiles);
    }
    /**
     * Provisioning state.
     * 
    */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * The Role assignments set for the relationship links.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> relationshipLinks() {
        return Optional.ofNullable(this.relationshipLinks);
    }
    /**
     * The Role assignments set for the relationships.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> relationships() {
        return Optional.ofNullable(this.relationships);
    }
    /**
     * Type of roles.
     * 
    */
    public String role() {
        return this.role;
    }
    /**
     * The Role assignments set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> roleAssignments() {
        return Optional.ofNullable(this.roleAssignments);
    }
    /**
     * Sas Policies set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> sasPolicies() {
        return Optional.ofNullable(this.sasPolicies);
    }
    /**
     * The Role assignments set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> segments() {
        return Optional.ofNullable(this.segments);
    }
    /**
     * The hub name.
     * 
    */
    public String tenantId() {
        return this.tenantId;
    }
    /**
     * Resource type.
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * Views set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> views() {
        return Optional.ofNullable(this.views);
    }
    /**
     * Widget types set for the assignment.
     * 
    */
    public Optional<ResourceSetDescriptionResponse> widgetTypes() {
        return Optional.ofNullable(this.widgetTypes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRoleAssignmentResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String assignmentName;
        private @Nullable ResourceSetDescriptionResponse conflationPolicies;
        private @Nullable ResourceSetDescriptionResponse connectors;
        private @Nullable Map<String,String> description;
        private @Nullable Map<String,String> displayName;
        private String id;
        private @Nullable ResourceSetDescriptionResponse interactions;
        private @Nullable ResourceSetDescriptionResponse kpis;
        private @Nullable ResourceSetDescriptionResponse links;
        private String name;
        private List<AssignmentPrincipalResponse> principals;
        private @Nullable ResourceSetDescriptionResponse profiles;
        private String provisioningState;
        private @Nullable ResourceSetDescriptionResponse relationshipLinks;
        private @Nullable ResourceSetDescriptionResponse relationships;
        private String role;
        private @Nullable ResourceSetDescriptionResponse roleAssignments;
        private @Nullable ResourceSetDescriptionResponse sasPolicies;
        private @Nullable ResourceSetDescriptionResponse segments;
        private String tenantId;
        private String type;
        private @Nullable ResourceSetDescriptionResponse views;
        private @Nullable ResourceSetDescriptionResponse widgetTypes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRoleAssignmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignmentName = defaults.assignmentName;
    	      this.conflationPolicies = defaults.conflationPolicies;
    	      this.connectors = defaults.connectors;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.interactions = defaults.interactions;
    	      this.kpis = defaults.kpis;
    	      this.links = defaults.links;
    	      this.name = defaults.name;
    	      this.principals = defaults.principals;
    	      this.profiles = defaults.profiles;
    	      this.provisioningState = defaults.provisioningState;
    	      this.relationshipLinks = defaults.relationshipLinks;
    	      this.relationships = defaults.relationships;
    	      this.role = defaults.role;
    	      this.roleAssignments = defaults.roleAssignments;
    	      this.sasPolicies = defaults.sasPolicies;
    	      this.segments = defaults.segments;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
    	      this.views = defaults.views;
    	      this.widgetTypes = defaults.widgetTypes;
        }

        public Builder assignmentName(String assignmentName) {
            this.assignmentName = Objects.requireNonNull(assignmentName);
            return this;
        }
        public Builder conflationPolicies(@Nullable ResourceSetDescriptionResponse conflationPolicies) {
            this.conflationPolicies = conflationPolicies;
            return this;
        }
        public Builder connectors(@Nullable ResourceSetDescriptionResponse connectors) {
            this.connectors = connectors;
            return this;
        }
        public Builder description(@Nullable Map<String,String> description) {
            this.description = description;
            return this;
        }
        public Builder displayName(@Nullable Map<String,String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder interactions(@Nullable ResourceSetDescriptionResponse interactions) {
            this.interactions = interactions;
            return this;
        }
        public Builder kpis(@Nullable ResourceSetDescriptionResponse kpis) {
            this.kpis = kpis;
            return this;
        }
        public Builder links(@Nullable ResourceSetDescriptionResponse links) {
            this.links = links;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder principals(List<AssignmentPrincipalResponse> principals) {
            this.principals = Objects.requireNonNull(principals);
            return this;
        }
        public Builder principals(AssignmentPrincipalResponse... principals) {
            return principals(List.of(principals));
        }
        public Builder profiles(@Nullable ResourceSetDescriptionResponse profiles) {
            this.profiles = profiles;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder relationshipLinks(@Nullable ResourceSetDescriptionResponse relationshipLinks) {
            this.relationshipLinks = relationshipLinks;
            return this;
        }
        public Builder relationships(@Nullable ResourceSetDescriptionResponse relationships) {
            this.relationships = relationships;
            return this;
        }
        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }
        public Builder roleAssignments(@Nullable ResourceSetDescriptionResponse roleAssignments) {
            this.roleAssignments = roleAssignments;
            return this;
        }
        public Builder sasPolicies(@Nullable ResourceSetDescriptionResponse sasPolicies) {
            this.sasPolicies = sasPolicies;
            return this;
        }
        public Builder segments(@Nullable ResourceSetDescriptionResponse segments) {
            this.segments = segments;
            return this;
        }
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder views(@Nullable ResourceSetDescriptionResponse views) {
            this.views = views;
            return this;
        }
        public Builder widgetTypes(@Nullable ResourceSetDescriptionResponse widgetTypes) {
            this.widgetTypes = widgetTypes;
            return this;
        }        public GetRoleAssignmentResult build() {
            return new GetRoleAssignmentResult(assignmentName, conflationPolicies, connectors, description, displayName, id, interactions, kpis, links, name, principals, profiles, provisioningState, relationshipLinks, relationships, role, roleAssignments, sasPolicies, segments, tenantId, type, views, widgetTypes);
        }
    }
}
