// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.azurenative.recoveryservices.inputs.A2AProtectionContainerMappingDetailsResponse;
import io.pulumi.azurenative.recoveryservices.inputs.HealthErrorResponse;
import io.pulumi.azurenative.recoveryservices.inputs.VMwareCbtProtectionContainerMappingDetailsResponse;
import io.pulumi.core.Either;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProtectionContainerMappingPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final ProtectionContainerMappingPropertiesResponse Empty = new ProtectionContainerMappingPropertiesResponse();

    @InputImport(name="health")
    private final @Nullable String health;

    public Optional<String> getHealth() {
        return this.health == null ? Optional.empty() : Optional.ofNullable(this.health);
    }

    @InputImport(name="healthErrorDetails")
    private final @Nullable List<HealthErrorResponse> healthErrorDetails;

    public List<HealthErrorResponse> getHealthErrorDetails() {
        return this.healthErrorDetails == null ? List.of() : this.healthErrorDetails;
    }

    @InputImport(name="policyFriendlyName")
    private final @Nullable String policyFriendlyName;

    public Optional<String> getPolicyFriendlyName() {
        return this.policyFriendlyName == null ? Optional.empty() : Optional.ofNullable(this.policyFriendlyName);
    }

    @InputImport(name="policyId")
    private final @Nullable String policyId;

    public Optional<String> getPolicyId() {
        return this.policyId == null ? Optional.empty() : Optional.ofNullable(this.policyId);
    }

    @InputImport(name="providerSpecificDetails")
    private final @Nullable Either<A2AProtectionContainerMappingDetailsResponse,VMwareCbtProtectionContainerMappingDetailsResponse> providerSpecificDetails;

    public Either<A2AProtectionContainerMappingDetailsResponse,VMwareCbtProtectionContainerMappingDetailsResponse> getProviderSpecificDetails() {
        return this.providerSpecificDetails == null ? null : this.providerSpecificDetails;
    }

    @InputImport(name="sourceFabricFriendlyName")
    private final @Nullable String sourceFabricFriendlyName;

    public Optional<String> getSourceFabricFriendlyName() {
        return this.sourceFabricFriendlyName == null ? Optional.empty() : Optional.ofNullable(this.sourceFabricFriendlyName);
    }

    @InputImport(name="sourceProtectionContainerFriendlyName")
    private final @Nullable String sourceProtectionContainerFriendlyName;

    public Optional<String> getSourceProtectionContainerFriendlyName() {
        return this.sourceProtectionContainerFriendlyName == null ? Optional.empty() : Optional.ofNullable(this.sourceProtectionContainerFriendlyName);
    }

    @InputImport(name="state")
    private final @Nullable String state;

    public Optional<String> getState() {
        return this.state == null ? Optional.empty() : Optional.ofNullable(this.state);
    }

    @InputImport(name="targetFabricFriendlyName")
    private final @Nullable String targetFabricFriendlyName;

    public Optional<String> getTargetFabricFriendlyName() {
        return this.targetFabricFriendlyName == null ? Optional.empty() : Optional.ofNullable(this.targetFabricFriendlyName);
    }

    @InputImport(name="targetProtectionContainerFriendlyName")
    private final @Nullable String targetProtectionContainerFriendlyName;

    public Optional<String> getTargetProtectionContainerFriendlyName() {
        return this.targetProtectionContainerFriendlyName == null ? Optional.empty() : Optional.ofNullable(this.targetProtectionContainerFriendlyName);
    }

    @InputImport(name="targetProtectionContainerId")
    private final @Nullable String targetProtectionContainerId;

    public Optional<String> getTargetProtectionContainerId() {
        return this.targetProtectionContainerId == null ? Optional.empty() : Optional.ofNullable(this.targetProtectionContainerId);
    }

    public ProtectionContainerMappingPropertiesResponse(
        @Nullable String health,
        @Nullable List<HealthErrorResponse> healthErrorDetails,
        @Nullable String policyFriendlyName,
        @Nullable String policyId,
        @Nullable Either<A2AProtectionContainerMappingDetailsResponse,VMwareCbtProtectionContainerMappingDetailsResponse> providerSpecificDetails,
        @Nullable String sourceFabricFriendlyName,
        @Nullable String sourceProtectionContainerFriendlyName,
        @Nullable String state,
        @Nullable String targetFabricFriendlyName,
        @Nullable String targetProtectionContainerFriendlyName,
        @Nullable String targetProtectionContainerId) {
        this.health = health;
        this.healthErrorDetails = healthErrorDetails;
        this.policyFriendlyName = policyFriendlyName;
        this.policyId = policyId;
        this.providerSpecificDetails = providerSpecificDetails;
        this.sourceFabricFriendlyName = sourceFabricFriendlyName;
        this.sourceProtectionContainerFriendlyName = sourceProtectionContainerFriendlyName;
        this.state = state;
        this.targetFabricFriendlyName = targetFabricFriendlyName;
        this.targetProtectionContainerFriendlyName = targetProtectionContainerFriendlyName;
        this.targetProtectionContainerId = targetProtectionContainerId;
    }

    private ProtectionContainerMappingPropertiesResponse() {
        this.health = null;
        this.healthErrorDetails = List.of();
        this.policyFriendlyName = null;
        this.policyId = null;
        this.providerSpecificDetails = null;
        this.sourceFabricFriendlyName = null;
        this.sourceProtectionContainerFriendlyName = null;
        this.state = null;
        this.targetFabricFriendlyName = null;
        this.targetProtectionContainerFriendlyName = null;
        this.targetProtectionContainerId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProtectionContainerMappingPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String health;
        private @Nullable List<HealthErrorResponse> healthErrorDetails;
        private @Nullable String policyFriendlyName;
        private @Nullable String policyId;
        private @Nullable Either<A2AProtectionContainerMappingDetailsResponse,VMwareCbtProtectionContainerMappingDetailsResponse> providerSpecificDetails;
        private @Nullable String sourceFabricFriendlyName;
        private @Nullable String sourceProtectionContainerFriendlyName;
        private @Nullable String state;
        private @Nullable String targetFabricFriendlyName;
        private @Nullable String targetProtectionContainerFriendlyName;
        private @Nullable String targetProtectionContainerId;

        public Builder() {
    	      // Empty
        }

        public Builder(ProtectionContainerMappingPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.health = defaults.health;
    	      this.healthErrorDetails = defaults.healthErrorDetails;
    	      this.policyFriendlyName = defaults.policyFriendlyName;
    	      this.policyId = defaults.policyId;
    	      this.providerSpecificDetails = defaults.providerSpecificDetails;
    	      this.sourceFabricFriendlyName = defaults.sourceFabricFriendlyName;
    	      this.sourceProtectionContainerFriendlyName = defaults.sourceProtectionContainerFriendlyName;
    	      this.state = defaults.state;
    	      this.targetFabricFriendlyName = defaults.targetFabricFriendlyName;
    	      this.targetProtectionContainerFriendlyName = defaults.targetProtectionContainerFriendlyName;
    	      this.targetProtectionContainerId = defaults.targetProtectionContainerId;
        }

        public Builder setHealth(@Nullable String health) {
            this.health = health;
            return this;
        }

        public Builder setHealthErrorDetails(@Nullable List<HealthErrorResponse> healthErrorDetails) {
            this.healthErrorDetails = healthErrorDetails;
            return this;
        }

        public Builder setPolicyFriendlyName(@Nullable String policyFriendlyName) {
            this.policyFriendlyName = policyFriendlyName;
            return this;
        }

        public Builder setPolicyId(@Nullable String policyId) {
            this.policyId = policyId;
            return this;
        }

        public Builder setProviderSpecificDetails(@Nullable Either<A2AProtectionContainerMappingDetailsResponse,VMwareCbtProtectionContainerMappingDetailsResponse> providerSpecificDetails) {
            this.providerSpecificDetails = providerSpecificDetails;
            return this;
        }

        public Builder setSourceFabricFriendlyName(@Nullable String sourceFabricFriendlyName) {
            this.sourceFabricFriendlyName = sourceFabricFriendlyName;
            return this;
        }

        public Builder setSourceProtectionContainerFriendlyName(@Nullable String sourceProtectionContainerFriendlyName) {
            this.sourceProtectionContainerFriendlyName = sourceProtectionContainerFriendlyName;
            return this;
        }

        public Builder setState(@Nullable String state) {
            this.state = state;
            return this;
        }

        public Builder setTargetFabricFriendlyName(@Nullable String targetFabricFriendlyName) {
            this.targetFabricFriendlyName = targetFabricFriendlyName;
            return this;
        }

        public Builder setTargetProtectionContainerFriendlyName(@Nullable String targetProtectionContainerFriendlyName) {
            this.targetProtectionContainerFriendlyName = targetProtectionContainerFriendlyName;
            return this;
        }

        public Builder setTargetProtectionContainerId(@Nullable String targetProtectionContainerId) {
            this.targetProtectionContainerId = targetProtectionContainerId;
            return this;
        }

        public ProtectionContainerMappingPropertiesResponse build() {
            return new ProtectionContainerMappingPropertiesResponse(health, healthErrorDetails, policyFriendlyName, policyId, providerSpecificDetails, sourceFabricFriendlyName, sourceProtectionContainerFriendlyName, state, targetFabricFriendlyName, targetProtectionContainerFriendlyName, targetProtectionContainerId);
        }
    }
}
