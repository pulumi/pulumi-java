// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.insights.inputs.GetDiagnosticServiceTokenReadWriteArgs;
import io.pulumi.azurenative.insights.outputs.GetDiagnosticServiceTokenReadWriteResult;
import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;
import javax.annotation.Nullable;

public class GetDiagnosticServiceTokenReadWrite {
    private GetDiagnosticServiceTokenReadWrite() {}
    public interface BuilderApplicator {
        public void apply(GetDiagnosticServiceTokenReadWriteArgs.Builder a);
    }
    private static GetDiagnosticServiceTokenReadWriteArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = GetDiagnosticServiceTokenReadWriteArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     * The response to a diagnostic services token query.
 * API Version: 2021-03-03-preview.
 * 
     *
     * The response to a diagnostic services token query.
 * 
     */
    public static CompletableFuture<GetDiagnosticServiceTokenReadWriteResult> invokeAsync(BuilderApplicator argsBuilder, @Nullable InvokeOptions options) {
        return invokeAsync(buildArgs(argsBuilder), Utilities.withVersion(options));
    }
    /**
         * The response to a diagnostic services token query.
     * API Version: 2021-03-03-preview.
     * 
     *
         * The response to a diagnostic services token query.
     * 
     */
    public static CompletableFuture<GetDiagnosticServiceTokenReadWriteResult> invokeAsync(GetDiagnosticServiceTokenReadWriteArgs args, @Nullable InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure-native:insights:getDiagnosticServiceTokenReadWrite", TypeShape.of(GetDiagnosticServiceTokenReadWriteResult.class), args == null ? GetDiagnosticServiceTokenReadWriteArgs.Empty : args, Utilities.withVersion(options));
    }
}
