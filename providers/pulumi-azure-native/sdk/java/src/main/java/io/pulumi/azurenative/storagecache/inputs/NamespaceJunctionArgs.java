// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagecache.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A namespace junction.
 * 
 */
public final class NamespaceJunctionArgs extends io.pulumi.resources.ResourceArgs {

    public static final NamespaceJunctionArgs Empty = new NamespaceJunctionArgs();

    /**
     * Namespace path on a Cache for a Storage Target.
     * 
     */
    @InputImport(name="namespacePath")
      private final @Nullable Input<String> namespacePath;

    public Input<String> getNamespacePath() {
        return this.namespacePath == null ? Input.empty() : this.namespacePath;
    }

    /**
     * Name of the access policy applied to this junction.
     * 
     */
    @InputImport(name="nfsAccessPolicy")
      private final @Nullable Input<String> nfsAccessPolicy;

    public Input<String> getNfsAccessPolicy() {
        return this.nfsAccessPolicy == null ? Input.empty() : this.nfsAccessPolicy;
    }

    /**
     * NFS export where targetPath exists.
     * 
     */
    @InputImport(name="nfsExport")
      private final @Nullable Input<String> nfsExport;

    public Input<String> getNfsExport() {
        return this.nfsExport == null ? Input.empty() : this.nfsExport;
    }

    /**
     * Path in Storage Target to which namespacePath points.
     * 
     */
    @InputImport(name="targetPath")
      private final @Nullable Input<String> targetPath;

    public Input<String> getTargetPath() {
        return this.targetPath == null ? Input.empty() : this.targetPath;
    }

    public NamespaceJunctionArgs(
        @Nullable Input<String> namespacePath,
        @Nullable Input<String> nfsAccessPolicy,
        @Nullable Input<String> nfsExport,
        @Nullable Input<String> targetPath) {
        this.namespacePath = namespacePath;
        this.nfsAccessPolicy = nfsAccessPolicy == null ? Input.ofNullable("default") : nfsAccessPolicy;
        this.nfsExport = nfsExport;
        this.targetPath = targetPath;
    }

    private NamespaceJunctionArgs() {
        this.namespacePath = Input.empty();
        this.nfsAccessPolicy = Input.empty();
        this.nfsExport = Input.empty();
        this.targetPath = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NamespaceJunctionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> namespacePath;
        private @Nullable Input<String> nfsAccessPolicy;
        private @Nullable Input<String> nfsExport;
        private @Nullable Input<String> targetPath;

        public Builder() {
    	      // Empty
        }

        public Builder(NamespaceJunctionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.namespacePath = defaults.namespacePath;
    	      this.nfsAccessPolicy = defaults.nfsAccessPolicy;
    	      this.nfsExport = defaults.nfsExport;
    	      this.targetPath = defaults.targetPath;
        }

        public Builder namespacePath(@Nullable Input<String> namespacePath) {
            this.namespacePath = namespacePath;
            return this;
        }

        public Builder namespacePath(@Nullable String namespacePath) {
            this.namespacePath = Input.ofNullable(namespacePath);
            return this;
        }

        public Builder nfsAccessPolicy(@Nullable Input<String> nfsAccessPolicy) {
            this.nfsAccessPolicy = nfsAccessPolicy;
            return this;
        }

        public Builder nfsAccessPolicy(@Nullable String nfsAccessPolicy) {
            this.nfsAccessPolicy = Input.ofNullable(nfsAccessPolicy);
            return this;
        }

        public Builder nfsExport(@Nullable Input<String> nfsExport) {
            this.nfsExport = nfsExport;
            return this;
        }

        public Builder nfsExport(@Nullable String nfsExport) {
            this.nfsExport = Input.ofNullable(nfsExport);
            return this;
        }

        public Builder targetPath(@Nullable Input<String> targetPath) {
            this.targetPath = targetPath;
            return this;
        }

        public Builder targetPath(@Nullable String targetPath) {
            this.targetPath = Input.ofNullable(targetPath);
            return this;
        }
        public NamespaceJunctionArgs build() {
            return new NamespaceJunctionArgs(namespacePath, nfsAccessPolicy, nfsExport, targetPath);
        }
    }
}
