// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.enums.EndpointMonitorStatus;
import io.pulumi.azurenative.network.enums.EndpointStatus;
import io.pulumi.azurenative.network.inputs.EndpointPropertiesCustomHeadersArgs;
import io.pulumi.azurenative.network.inputs.EndpointPropertiesSubnetsArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EndpointArgs extends io.pulumi.resources.ResourceArgs {

    public static final EndpointArgs Empty = new EndpointArgs();

    @InputImport(name="customHeaders")
    private final @Nullable Input<List<EndpointPropertiesCustomHeadersArgs>> customHeaders;

    public Input<List<EndpointPropertiesCustomHeadersArgs>> getCustomHeaders() {
        return this.customHeaders == null ? Input.empty() : this.customHeaders;
    }

    @InputImport(name="endpointLocation")
    private final @Nullable Input<String> endpointLocation;

    public Input<String> getEndpointLocation() {
        return this.endpointLocation == null ? Input.empty() : this.endpointLocation;
    }

    @InputImport(name="endpointMonitorStatus")
    private final @Nullable Input<Either<String,EndpointMonitorStatus>> endpointMonitorStatus;

    public Input<Either<String,EndpointMonitorStatus>> getEndpointMonitorStatus() {
        return this.endpointMonitorStatus == null ? Input.empty() : this.endpointMonitorStatus;
    }

    @InputImport(name="endpointStatus")
    private final @Nullable Input<Either<String,EndpointStatus>> endpointStatus;

    public Input<Either<String,EndpointStatus>> getEndpointStatus() {
        return this.endpointStatus == null ? Input.empty() : this.endpointStatus;
    }

    @InputImport(name="geoMapping")
    private final @Nullable Input<List<String>> geoMapping;

    public Input<List<String>> getGeoMapping() {
        return this.geoMapping == null ? Input.empty() : this.geoMapping;
    }

    @InputImport(name="id")
    private final @Nullable Input<String> id;

    public Input<String> getId() {
        return this.id == null ? Input.empty() : this.id;
    }

    @InputImport(name="minChildEndpoints")
    private final @Nullable Input<Double> minChildEndpoints;

    public Input<Double> getMinChildEndpoints() {
        return this.minChildEndpoints == null ? Input.empty() : this.minChildEndpoints;
    }

    @InputImport(name="minChildEndpointsIPv4")
    private final @Nullable Input<Double> minChildEndpointsIPv4;

    public Input<Double> getMinChildEndpointsIPv4() {
        return this.minChildEndpointsIPv4 == null ? Input.empty() : this.minChildEndpointsIPv4;
    }

    @InputImport(name="minChildEndpointsIPv6")
    private final @Nullable Input<Double> minChildEndpointsIPv6;

    public Input<Double> getMinChildEndpointsIPv6() {
        return this.minChildEndpointsIPv6 == null ? Input.empty() : this.minChildEndpointsIPv6;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="priority")
    private final @Nullable Input<Double> priority;

    public Input<Double> getPriority() {
        return this.priority == null ? Input.empty() : this.priority;
    }

    @InputImport(name="subnets")
    private final @Nullable Input<List<EndpointPropertiesSubnetsArgs>> subnets;

    public Input<List<EndpointPropertiesSubnetsArgs>> getSubnets() {
        return this.subnets == null ? Input.empty() : this.subnets;
    }

    @InputImport(name="target")
    private final @Nullable Input<String> target;

    public Input<String> getTarget() {
        return this.target == null ? Input.empty() : this.target;
    }

    @InputImport(name="targetResourceId")
    private final @Nullable Input<String> targetResourceId;

    public Input<String> getTargetResourceId() {
        return this.targetResourceId == null ? Input.empty() : this.targetResourceId;
    }

    @InputImport(name="type")
    private final @Nullable Input<String> type;

    public Input<String> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    @InputImport(name="weight")
    private final @Nullable Input<Double> weight;

    public Input<Double> getWeight() {
        return this.weight == null ? Input.empty() : this.weight;
    }

    public EndpointArgs(
        @Nullable Input<List<EndpointPropertiesCustomHeadersArgs>> customHeaders,
        @Nullable Input<String> endpointLocation,
        @Nullable Input<Either<String,EndpointMonitorStatus>> endpointMonitorStatus,
        @Nullable Input<Either<String,EndpointStatus>> endpointStatus,
        @Nullable Input<List<String>> geoMapping,
        @Nullable Input<String> id,
        @Nullable Input<Double> minChildEndpoints,
        @Nullable Input<Double> minChildEndpointsIPv4,
        @Nullable Input<Double> minChildEndpointsIPv6,
        @Nullable Input<String> name,
        @Nullable Input<Double> priority,
        @Nullable Input<List<EndpointPropertiesSubnetsArgs>> subnets,
        @Nullable Input<String> target,
        @Nullable Input<String> targetResourceId,
        @Nullable Input<String> type,
        @Nullable Input<Double> weight) {
        this.customHeaders = customHeaders;
        this.endpointLocation = endpointLocation;
        this.endpointMonitorStatus = endpointMonitorStatus;
        this.endpointStatus = endpointStatus;
        this.geoMapping = geoMapping;
        this.id = id;
        this.minChildEndpoints = minChildEndpoints;
        this.minChildEndpointsIPv4 = minChildEndpointsIPv4;
        this.minChildEndpointsIPv6 = minChildEndpointsIPv6;
        this.name = name;
        this.priority = priority;
        this.subnets = subnets;
        this.target = target;
        this.targetResourceId = targetResourceId;
        this.type = type;
        this.weight = weight;
    }

    private EndpointArgs() {
        this.customHeaders = Input.empty();
        this.endpointLocation = Input.empty();
        this.endpointMonitorStatus = Input.empty();
        this.endpointStatus = Input.empty();
        this.geoMapping = Input.empty();
        this.id = Input.empty();
        this.minChildEndpoints = Input.empty();
        this.minChildEndpointsIPv4 = Input.empty();
        this.minChildEndpointsIPv6 = Input.empty();
        this.name = Input.empty();
        this.priority = Input.empty();
        this.subnets = Input.empty();
        this.target = Input.empty();
        this.targetResourceId = Input.empty();
        this.type = Input.empty();
        this.weight = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<EndpointPropertiesCustomHeadersArgs>> customHeaders;
        private @Nullable Input<String> endpointLocation;
        private @Nullable Input<Either<String,EndpointMonitorStatus>> endpointMonitorStatus;
        private @Nullable Input<Either<String,EndpointStatus>> endpointStatus;
        private @Nullable Input<List<String>> geoMapping;
        private @Nullable Input<String> id;
        private @Nullable Input<Double> minChildEndpoints;
        private @Nullable Input<Double> minChildEndpointsIPv4;
        private @Nullable Input<Double> minChildEndpointsIPv6;
        private @Nullable Input<String> name;
        private @Nullable Input<Double> priority;
        private @Nullable Input<List<EndpointPropertiesSubnetsArgs>> subnets;
        private @Nullable Input<String> target;
        private @Nullable Input<String> targetResourceId;
        private @Nullable Input<String> type;
        private @Nullable Input<Double> weight;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customHeaders = defaults.customHeaders;
    	      this.endpointLocation = defaults.endpointLocation;
    	      this.endpointMonitorStatus = defaults.endpointMonitorStatus;
    	      this.endpointStatus = defaults.endpointStatus;
    	      this.geoMapping = defaults.geoMapping;
    	      this.id = defaults.id;
    	      this.minChildEndpoints = defaults.minChildEndpoints;
    	      this.minChildEndpointsIPv4 = defaults.minChildEndpointsIPv4;
    	      this.minChildEndpointsIPv6 = defaults.minChildEndpointsIPv6;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.subnets = defaults.subnets;
    	      this.target = defaults.target;
    	      this.targetResourceId = defaults.targetResourceId;
    	      this.type = defaults.type;
    	      this.weight = defaults.weight;
        }

        public Builder setCustomHeaders(@Nullable Input<List<EndpointPropertiesCustomHeadersArgs>> customHeaders) {
            this.customHeaders = customHeaders;
            return this;
        }

        public Builder setCustomHeaders(@Nullable List<EndpointPropertiesCustomHeadersArgs> customHeaders) {
            this.customHeaders = Input.ofNullable(customHeaders);
            return this;
        }

        public Builder setEndpointLocation(@Nullable Input<String> endpointLocation) {
            this.endpointLocation = endpointLocation;
            return this;
        }

        public Builder setEndpointLocation(@Nullable String endpointLocation) {
            this.endpointLocation = Input.ofNullable(endpointLocation);
            return this;
        }

        public Builder setEndpointMonitorStatus(@Nullable Input<Either<String,EndpointMonitorStatus>> endpointMonitorStatus) {
            this.endpointMonitorStatus = endpointMonitorStatus;
            return this;
        }

        public Builder setEndpointMonitorStatus(@Nullable Either<String,EndpointMonitorStatus> endpointMonitorStatus) {
            this.endpointMonitorStatus = Input.ofNullable(endpointMonitorStatus);
            return this;
        }

        public Builder setEndpointStatus(@Nullable Input<Either<String,EndpointStatus>> endpointStatus) {
            this.endpointStatus = endpointStatus;
            return this;
        }

        public Builder setEndpointStatus(@Nullable Either<String,EndpointStatus> endpointStatus) {
            this.endpointStatus = Input.ofNullable(endpointStatus);
            return this;
        }

        public Builder setGeoMapping(@Nullable Input<List<String>> geoMapping) {
            this.geoMapping = geoMapping;
            return this;
        }

        public Builder setGeoMapping(@Nullable List<String> geoMapping) {
            this.geoMapping = Input.ofNullable(geoMapping);
            return this;
        }

        public Builder setId(@Nullable Input<String> id) {
            this.id = id;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = Input.ofNullable(id);
            return this;
        }

        public Builder setMinChildEndpoints(@Nullable Input<Double> minChildEndpoints) {
            this.minChildEndpoints = minChildEndpoints;
            return this;
        }

        public Builder setMinChildEndpoints(@Nullable Double minChildEndpoints) {
            this.minChildEndpoints = Input.ofNullable(minChildEndpoints);
            return this;
        }

        public Builder setMinChildEndpointsIPv4(@Nullable Input<Double> minChildEndpointsIPv4) {
            this.minChildEndpointsIPv4 = minChildEndpointsIPv4;
            return this;
        }

        public Builder setMinChildEndpointsIPv4(@Nullable Double minChildEndpointsIPv4) {
            this.minChildEndpointsIPv4 = Input.ofNullable(minChildEndpointsIPv4);
            return this;
        }

        public Builder setMinChildEndpointsIPv6(@Nullable Input<Double> minChildEndpointsIPv6) {
            this.minChildEndpointsIPv6 = minChildEndpointsIPv6;
            return this;
        }

        public Builder setMinChildEndpointsIPv6(@Nullable Double minChildEndpointsIPv6) {
            this.minChildEndpointsIPv6 = Input.ofNullable(minChildEndpointsIPv6);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPriority(@Nullable Input<Double> priority) {
            this.priority = priority;
            return this;
        }

        public Builder setPriority(@Nullable Double priority) {
            this.priority = Input.ofNullable(priority);
            return this;
        }

        public Builder setSubnets(@Nullable Input<List<EndpointPropertiesSubnetsArgs>> subnets) {
            this.subnets = subnets;
            return this;
        }

        public Builder setSubnets(@Nullable List<EndpointPropertiesSubnetsArgs> subnets) {
            this.subnets = Input.ofNullable(subnets);
            return this;
        }

        public Builder setTarget(@Nullable Input<String> target) {
            this.target = target;
            return this;
        }

        public Builder setTarget(@Nullable String target) {
            this.target = Input.ofNullable(target);
            return this;
        }

        public Builder setTargetResourceId(@Nullable Input<String> targetResourceId) {
            this.targetResourceId = targetResourceId;
            return this;
        }

        public Builder setTargetResourceId(@Nullable String targetResourceId) {
            this.targetResourceId = Input.ofNullable(targetResourceId);
            return this;
        }

        public Builder setType(@Nullable Input<String> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public Builder setWeight(@Nullable Input<Double> weight) {
            this.weight = weight;
            return this;
        }

        public Builder setWeight(@Nullable Double weight) {
            this.weight = Input.ofNullable(weight);
            return this;
        }

        public EndpointArgs build() {
            return new EndpointArgs(customHeaders, endpointLocation, endpointMonitorStatus, endpointStatus, geoMapping, id, minChildEndpoints, minChildEndpointsIPv4, minChildEndpointsIPv6, name, priority, subnets, target, targetResourceId, type, weight);
        }
    }
}
