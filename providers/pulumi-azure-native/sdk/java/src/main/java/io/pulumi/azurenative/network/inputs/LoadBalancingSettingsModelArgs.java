// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Load balancing settings for a backend pool
 * 
 */
public final class LoadBalancingSettingsModelArgs extends io.pulumi.resources.ResourceArgs {

    public static final LoadBalancingSettingsModelArgs Empty = new LoadBalancingSettingsModelArgs();

    /**
     * The additional latency in milliseconds for probes to fall into the lowest latency bucket
     * 
     */
    @InputImport(name="additionalLatencyMilliseconds")
      private final @Nullable Output<Integer> additionalLatencyMilliseconds;

    public Output<Integer> getAdditionalLatencyMilliseconds() {
        return this.additionalLatencyMilliseconds == null ? Output.empty() : this.additionalLatencyMilliseconds;
    }

    /**
     * Resource ID.
     * 
     */
    @InputImport(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Output.empty() : this.id;
    }

    /**
     * Resource name.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The number of samples to consider for load balancing decisions
     * 
     */
    @InputImport(name="sampleSize")
      private final @Nullable Output<Integer> sampleSize;

    public Output<Integer> getSampleSize() {
        return this.sampleSize == null ? Output.empty() : this.sampleSize;
    }

    /**
     * The number of samples within the sample period that must succeed
     * 
     */
    @InputImport(name="successfulSamplesRequired")
      private final @Nullable Output<Integer> successfulSamplesRequired;

    public Output<Integer> getSuccessfulSamplesRequired() {
        return this.successfulSamplesRequired == null ? Output.empty() : this.successfulSamplesRequired;
    }

    public LoadBalancingSettingsModelArgs(
        @Nullable Output<Integer> additionalLatencyMilliseconds,
        @Nullable Output<String> id,
        @Nullable Output<String> name,
        @Nullable Output<Integer> sampleSize,
        @Nullable Output<Integer> successfulSamplesRequired) {
        this.additionalLatencyMilliseconds = additionalLatencyMilliseconds;
        this.id = id;
        this.name = name;
        this.sampleSize = sampleSize;
        this.successfulSamplesRequired = successfulSamplesRequired;
    }

    private LoadBalancingSettingsModelArgs() {
        this.additionalLatencyMilliseconds = Output.empty();
        this.id = Output.empty();
        this.name = Output.empty();
        this.sampleSize = Output.empty();
        this.successfulSamplesRequired = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadBalancingSettingsModelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> additionalLatencyMilliseconds;
        private @Nullable Output<String> id;
        private @Nullable Output<String> name;
        private @Nullable Output<Integer> sampleSize;
        private @Nullable Output<Integer> successfulSamplesRequired;

        public Builder() {
    	      // Empty
        }

        public Builder(LoadBalancingSettingsModelArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalLatencyMilliseconds = defaults.additionalLatencyMilliseconds;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.sampleSize = defaults.sampleSize;
    	      this.successfulSamplesRequired = defaults.successfulSamplesRequired;
        }

        public Builder additionalLatencyMilliseconds(@Nullable Output<Integer> additionalLatencyMilliseconds) {
            this.additionalLatencyMilliseconds = additionalLatencyMilliseconds;
            return this;
        }

        public Builder additionalLatencyMilliseconds(@Nullable Integer additionalLatencyMilliseconds) {
            this.additionalLatencyMilliseconds = Output.ofNullable(additionalLatencyMilliseconds);
            return this;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = Output.ofNullable(id);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder sampleSize(@Nullable Output<Integer> sampleSize) {
            this.sampleSize = sampleSize;
            return this;
        }

        public Builder sampleSize(@Nullable Integer sampleSize) {
            this.sampleSize = Output.ofNullable(sampleSize);
            return this;
        }

        public Builder successfulSamplesRequired(@Nullable Output<Integer> successfulSamplesRequired) {
            this.successfulSamplesRequired = successfulSamplesRequired;
            return this;
        }

        public Builder successfulSamplesRequired(@Nullable Integer successfulSamplesRequired) {
            this.successfulSamplesRequired = Output.ofNullable(successfulSamplesRequired);
            return this;
        }
        public LoadBalancingSettingsModelArgs build() {
            return new LoadBalancingSettingsModelArgs(additionalLatencyMilliseconds, id, name, sampleSize, successfulSamplesRequired);
        }
    }
}
