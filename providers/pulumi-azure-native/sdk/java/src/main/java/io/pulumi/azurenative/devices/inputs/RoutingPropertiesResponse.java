// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devices.inputs;

import io.pulumi.azurenative.devices.inputs.EnrichmentPropertiesResponse;
import io.pulumi.azurenative.devices.inputs.FallbackRoutePropertiesResponse;
import io.pulumi.azurenative.devices.inputs.RoutePropertiesResponse;
import io.pulumi.azurenative.devices.inputs.RoutingEndpointsResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoutingPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final RoutingPropertiesResponse Empty = new RoutingPropertiesResponse();

    @InputImport(name="endpoints")
    private final @Nullable RoutingEndpointsResponse endpoints;

    public Optional<RoutingEndpointsResponse> getEndpoints() {
        return this.endpoints == null ? Optional.empty() : Optional.ofNullable(this.endpoints);
    }

    @InputImport(name="enrichments")
    private final @Nullable List<EnrichmentPropertiesResponse> enrichments;

    public List<EnrichmentPropertiesResponse> getEnrichments() {
        return this.enrichments == null ? List.of() : this.enrichments;
    }

    @InputImport(name="fallbackRoute")
    private final @Nullable FallbackRoutePropertiesResponse fallbackRoute;

    public Optional<FallbackRoutePropertiesResponse> getFallbackRoute() {
        return this.fallbackRoute == null ? Optional.empty() : Optional.ofNullable(this.fallbackRoute);
    }

    @InputImport(name="routes")
    private final @Nullable List<RoutePropertiesResponse> routes;

    public List<RoutePropertiesResponse> getRoutes() {
        return this.routes == null ? List.of() : this.routes;
    }

    public RoutingPropertiesResponse(
        @Nullable RoutingEndpointsResponse endpoints,
        @Nullable List<EnrichmentPropertiesResponse> enrichments,
        @Nullable FallbackRoutePropertiesResponse fallbackRoute,
        @Nullable List<RoutePropertiesResponse> routes) {
        this.endpoints = endpoints;
        this.enrichments = enrichments;
        this.fallbackRoute = fallbackRoute;
        this.routes = routes;
    }

    private RoutingPropertiesResponse() {
        this.endpoints = null;
        this.enrichments = List.of();
        this.fallbackRoute = null;
        this.routes = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoutingPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable RoutingEndpointsResponse endpoints;
        private @Nullable List<EnrichmentPropertiesResponse> enrichments;
        private @Nullable FallbackRoutePropertiesResponse fallbackRoute;
        private @Nullable List<RoutePropertiesResponse> routes;

        public Builder() {
    	      // Empty
        }

        public Builder(RoutingPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpoints = defaults.endpoints;
    	      this.enrichments = defaults.enrichments;
    	      this.fallbackRoute = defaults.fallbackRoute;
    	      this.routes = defaults.routes;
        }

        public Builder setEndpoints(@Nullable RoutingEndpointsResponse endpoints) {
            this.endpoints = endpoints;
            return this;
        }

        public Builder setEnrichments(@Nullable List<EnrichmentPropertiesResponse> enrichments) {
            this.enrichments = enrichments;
            return this;
        }

        public Builder setFallbackRoute(@Nullable FallbackRoutePropertiesResponse fallbackRoute) {
            this.fallbackRoute = fallbackRoute;
            return this;
        }

        public Builder setRoutes(@Nullable List<RoutePropertiesResponse> routes) {
            this.routes = routes;
            return this;
        }

        public RoutingPropertiesResponse build() {
            return new RoutingPropertiesResponse(endpoints, enrichments, fallbackRoute, routes);
        }
    }
}
