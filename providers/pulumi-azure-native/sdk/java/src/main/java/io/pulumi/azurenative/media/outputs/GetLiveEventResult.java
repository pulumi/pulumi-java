// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.outputs;

import io.pulumi.azurenative.media.outputs.CrossSiteAccessPoliciesResponse;
import io.pulumi.azurenative.media.outputs.LiveEventEncodingResponse;
import io.pulumi.azurenative.media.outputs.LiveEventInputResponse;
import io.pulumi.azurenative.media.outputs.LiveEventPreviewResponse;
import io.pulumi.azurenative.media.outputs.LiveEventTranscriptionResponse;
import io.pulumi.azurenative.media.outputs.SystemDataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetLiveEventResult {
    private final String created;
    private final @Nullable CrossSiteAccessPoliciesResponse crossSiteAccessPolicies;
    private final @Nullable String description;
    private final @Nullable LiveEventEncodingResponse encoding;
    private final @Nullable String hostnamePrefix;
    private final String id;
    private final LiveEventInputResponse input;
    private final String lastModified;
    private final String location;
    private final String name;
    private final @Nullable LiveEventPreviewResponse preview;
    private final String provisioningState;
    private final String resourceState;
    private final @Nullable List<String> streamOptions;
    private final SystemDataResponse systemData;
    private final @Nullable Map<String,String> tags;
    private final @Nullable List<LiveEventTranscriptionResponse> transcriptions;
    private final String type;
    private final @Nullable Boolean useStaticHostname;

    @OutputCustomType.Constructor({"created","crossSiteAccessPolicies","description","encoding","hostnamePrefix","id","input","lastModified","location","name","preview","provisioningState","resourceState","streamOptions","systemData","tags","transcriptions","type","useStaticHostname"})
    private GetLiveEventResult(
        String created,
        @Nullable CrossSiteAccessPoliciesResponse crossSiteAccessPolicies,
        @Nullable String description,
        @Nullable LiveEventEncodingResponse encoding,
        @Nullable String hostnamePrefix,
        String id,
        LiveEventInputResponse input,
        String lastModified,
        String location,
        String name,
        @Nullable LiveEventPreviewResponse preview,
        String provisioningState,
        String resourceState,
        @Nullable List<String> streamOptions,
        SystemDataResponse systemData,
        @Nullable Map<String,String> tags,
        @Nullable List<LiveEventTranscriptionResponse> transcriptions,
        String type,
        @Nullable Boolean useStaticHostname) {
        this.created = Objects.requireNonNull(created);
        this.crossSiteAccessPolicies = crossSiteAccessPolicies;
        this.description = description;
        this.encoding = encoding;
        this.hostnamePrefix = hostnamePrefix;
        this.id = Objects.requireNonNull(id);
        this.input = Objects.requireNonNull(input);
        this.lastModified = Objects.requireNonNull(lastModified);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.preview = preview;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.resourceState = Objects.requireNonNull(resourceState);
        this.streamOptions = streamOptions;
        this.systemData = Objects.requireNonNull(systemData);
        this.tags = tags;
        this.transcriptions = transcriptions;
        this.type = Objects.requireNonNull(type);
        this.useStaticHostname = useStaticHostname;
    }

    public String getCreated() {
        return this.created;
    }
    public Optional<CrossSiteAccessPoliciesResponse> getCrossSiteAccessPolicies() {
        return Optional.ofNullable(this.crossSiteAccessPolicies);
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public Optional<LiveEventEncodingResponse> getEncoding() {
        return Optional.ofNullable(this.encoding);
    }
    public Optional<String> getHostnamePrefix() {
        return Optional.ofNullable(this.hostnamePrefix);
    }
    public String getId() {
        return this.id;
    }
    public LiveEventInputResponse getInput() {
        return this.input;
    }
    public String getLastModified() {
        return this.lastModified;
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public Optional<LiveEventPreviewResponse> getPreview() {
        return Optional.ofNullable(this.preview);
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public String getResourceState() {
        return this.resourceState;
    }
    public List<String> getStreamOptions() {
        return this.streamOptions == null ? List.of() : this.streamOptions;
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public List<LiveEventTranscriptionResponse> getTranscriptions() {
        return this.transcriptions == null ? List.of() : this.transcriptions;
    }
    public String getType() {
        return this.type;
    }
    public Optional<Boolean> getUseStaticHostname() {
        return Optional.ofNullable(this.useStaticHostname);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLiveEventResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String created;
        private @Nullable CrossSiteAccessPoliciesResponse crossSiteAccessPolicies;
        private @Nullable String description;
        private @Nullable LiveEventEncodingResponse encoding;
        private @Nullable String hostnamePrefix;
        private String id;
        private LiveEventInputResponse input;
        private String lastModified;
        private String location;
        private String name;
        private @Nullable LiveEventPreviewResponse preview;
        private String provisioningState;
        private String resourceState;
        private @Nullable List<String> streamOptions;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private @Nullable List<LiveEventTranscriptionResponse> transcriptions;
        private String type;
        private @Nullable Boolean useStaticHostname;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLiveEventResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.created = defaults.created;
    	      this.crossSiteAccessPolicies = defaults.crossSiteAccessPolicies;
    	      this.description = defaults.description;
    	      this.encoding = defaults.encoding;
    	      this.hostnamePrefix = defaults.hostnamePrefix;
    	      this.id = defaults.id;
    	      this.input = defaults.input;
    	      this.lastModified = defaults.lastModified;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.preview = defaults.preview;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceState = defaults.resourceState;
    	      this.streamOptions = defaults.streamOptions;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.transcriptions = defaults.transcriptions;
    	      this.type = defaults.type;
    	      this.useStaticHostname = defaults.useStaticHostname;
        }

        public Builder setCreated(String created) {
            this.created = Objects.requireNonNull(created);
            return this;
        }

        public Builder setCrossSiteAccessPolicies(@Nullable CrossSiteAccessPoliciesResponse crossSiteAccessPolicies) {
            this.crossSiteAccessPolicies = crossSiteAccessPolicies;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setEncoding(@Nullable LiveEventEncodingResponse encoding) {
            this.encoding = encoding;
            return this;
        }

        public Builder setHostnamePrefix(@Nullable String hostnamePrefix) {
            this.hostnamePrefix = hostnamePrefix;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInput(LiveEventInputResponse input) {
            this.input = Objects.requireNonNull(input);
            return this;
        }

        public Builder setLastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPreview(@Nullable LiveEventPreviewResponse preview) {
            this.preview = preview;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setResourceState(String resourceState) {
            this.resourceState = Objects.requireNonNull(resourceState);
            return this;
        }

        public Builder setStreamOptions(@Nullable List<String> streamOptions) {
            this.streamOptions = streamOptions;
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTranscriptions(@Nullable List<LiveEventTranscriptionResponse> transcriptions) {
            this.transcriptions = transcriptions;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUseStaticHostname(@Nullable Boolean useStaticHostname) {
            this.useStaticHostname = useStaticHostname;
            return this;
        }

        public GetLiveEventResult build() {
            return new GetLiveEventResult(created, crossSiteAccessPolicies, description, encoding, hostnamePrefix, id, input, lastModified, location, name, preview, provisioningState, resourceState, streamOptions, systemData, tags, transcriptions, type, useStaticHostname);
        }
    }
}
