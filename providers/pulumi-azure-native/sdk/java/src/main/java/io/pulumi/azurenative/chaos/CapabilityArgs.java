// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.chaos;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CapabilityArgs extends io.pulumi.resources.ResourceArgs {

    public static final CapabilityArgs Empty = new CapabilityArgs();

    /**
     * String that represents a Capability resource name.
     * 
     */
    @InputImport(name="capabilityName")
      private final @Nullable Input<String> capabilityName;

    public Input<String> getCapabilityName() {
        return this.capabilityName == null ? Input.empty() : this.capabilityName;
    }

    /**
     * String that represents a resource provider namespace.
     * 
     */
    @InputImport(name="parentProviderNamespace", required=true)
      private final Input<String> parentProviderNamespace;

    public Input<String> getParentProviderNamespace() {
        return this.parentProviderNamespace;
    }

    /**
     * String that represents a resource name.
     * 
     */
    @InputImport(name="parentResourceName", required=true)
      private final Input<String> parentResourceName;

    public Input<String> getParentResourceName() {
        return this.parentResourceName;
    }

    /**
     * String that represents a resource type.
     * 
     */
    @InputImport(name="parentResourceType", required=true)
      private final Input<String> parentResourceType;

    public Input<String> getParentResourceType() {
        return this.parentResourceType;
    }

    /**
     * String that represents an Azure resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * String that represents a Target resource name.
     * 
     */
    @InputImport(name="targetName", required=true)
      private final Input<String> targetName;

    public Input<String> getTargetName() {
        return this.targetName;
    }

    public CapabilityArgs(
        @Nullable Input<String> capabilityName,
        Input<String> parentProviderNamespace,
        Input<String> parentResourceName,
        Input<String> parentResourceType,
        Input<String> resourceGroupName,
        Input<String> targetName) {
        this.capabilityName = capabilityName;
        this.parentProviderNamespace = Objects.requireNonNull(parentProviderNamespace, "expected parameter 'parentProviderNamespace' to be non-null");
        this.parentResourceName = Objects.requireNonNull(parentResourceName, "expected parameter 'parentResourceName' to be non-null");
        this.parentResourceType = Objects.requireNonNull(parentResourceType, "expected parameter 'parentResourceType' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.targetName = Objects.requireNonNull(targetName, "expected parameter 'targetName' to be non-null");
    }

    private CapabilityArgs() {
        this.capabilityName = Input.empty();
        this.parentProviderNamespace = Input.empty();
        this.parentResourceName = Input.empty();
        this.parentResourceType = Input.empty();
        this.resourceGroupName = Input.empty();
        this.targetName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CapabilityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> capabilityName;
        private Input<String> parentProviderNamespace;
        private Input<String> parentResourceName;
        private Input<String> parentResourceType;
        private Input<String> resourceGroupName;
        private Input<String> targetName;

        public Builder() {
    	      // Empty
        }

        public Builder(CapabilityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capabilityName = defaults.capabilityName;
    	      this.parentProviderNamespace = defaults.parentProviderNamespace;
    	      this.parentResourceName = defaults.parentResourceName;
    	      this.parentResourceType = defaults.parentResourceType;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.targetName = defaults.targetName;
        }

        public Builder capabilityName(@Nullable Input<String> capabilityName) {
            this.capabilityName = capabilityName;
            return this;
        }

        public Builder capabilityName(@Nullable String capabilityName) {
            this.capabilityName = Input.ofNullable(capabilityName);
            return this;
        }

        public Builder parentProviderNamespace(Input<String> parentProviderNamespace) {
            this.parentProviderNamespace = Objects.requireNonNull(parentProviderNamespace);
            return this;
        }

        public Builder parentProviderNamespace(String parentProviderNamespace) {
            this.parentProviderNamespace = Input.of(Objects.requireNonNull(parentProviderNamespace));
            return this;
        }

        public Builder parentResourceName(Input<String> parentResourceName) {
            this.parentResourceName = Objects.requireNonNull(parentResourceName);
            return this;
        }

        public Builder parentResourceName(String parentResourceName) {
            this.parentResourceName = Input.of(Objects.requireNonNull(parentResourceName));
            return this;
        }

        public Builder parentResourceType(Input<String> parentResourceType) {
            this.parentResourceType = Objects.requireNonNull(parentResourceType);
            return this;
        }

        public Builder parentResourceType(String parentResourceType) {
            this.parentResourceType = Input.of(Objects.requireNonNull(parentResourceType));
            return this;
        }

        public Builder resourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder targetName(Input<String> targetName) {
            this.targetName = Objects.requireNonNull(targetName);
            return this;
        }

        public Builder targetName(String targetName) {
            this.targetName = Input.of(Objects.requireNonNull(targetName));
            return this;
        }
        public CapabilityArgs build() {
            return new CapabilityArgs(capabilityName, parentProviderNamespace, parentResourceName, parentResourceType, resourceGroupName, targetName);
        }
    }
}
