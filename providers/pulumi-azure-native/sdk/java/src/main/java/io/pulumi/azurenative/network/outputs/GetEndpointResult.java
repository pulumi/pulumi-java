// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.EndpointPropertiesResponseCustomHeaders;
import io.pulumi.azurenative.network.outputs.EndpointPropertiesResponseSubnets;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetEndpointResult {
    private final @Nullable List<EndpointPropertiesResponseCustomHeaders> customHeaders;
    private final @Nullable String endpointLocation;
    private final @Nullable String endpointMonitorStatus;
    private final @Nullable String endpointStatus;
    private final @Nullable List<String> geoMapping;
    private final @Nullable String id;
    private final @Nullable Double minChildEndpoints;
    private final @Nullable Double minChildEndpointsIPv4;
    private final @Nullable Double minChildEndpointsIPv6;
    private final @Nullable String name;
    private final @Nullable Double priority;
    private final @Nullable List<EndpointPropertiesResponseSubnets> subnets;
    private final @Nullable String target;
    private final @Nullable String targetResourceId;
    private final @Nullable String type;
    private final @Nullable Double weight;

    @OutputCustomType.Constructor({"customHeaders","endpointLocation","endpointMonitorStatus","endpointStatus","geoMapping","id","minChildEndpoints","minChildEndpointsIPv4","minChildEndpointsIPv6","name","priority","subnets","target","targetResourceId","type","weight"})
    private GetEndpointResult(
        @Nullable List<EndpointPropertiesResponseCustomHeaders> customHeaders,
        @Nullable String endpointLocation,
        @Nullable String endpointMonitorStatus,
        @Nullable String endpointStatus,
        @Nullable List<String> geoMapping,
        @Nullable String id,
        @Nullable Double minChildEndpoints,
        @Nullable Double minChildEndpointsIPv4,
        @Nullable Double minChildEndpointsIPv6,
        @Nullable String name,
        @Nullable Double priority,
        @Nullable List<EndpointPropertiesResponseSubnets> subnets,
        @Nullable String target,
        @Nullable String targetResourceId,
        @Nullable String type,
        @Nullable Double weight) {
        this.customHeaders = customHeaders;
        this.endpointLocation = endpointLocation;
        this.endpointMonitorStatus = endpointMonitorStatus;
        this.endpointStatus = endpointStatus;
        this.geoMapping = geoMapping;
        this.id = id;
        this.minChildEndpoints = minChildEndpoints;
        this.minChildEndpointsIPv4 = minChildEndpointsIPv4;
        this.minChildEndpointsIPv6 = minChildEndpointsIPv6;
        this.name = name;
        this.priority = priority;
        this.subnets = subnets;
        this.target = target;
        this.targetResourceId = targetResourceId;
        this.type = type;
        this.weight = weight;
    }

    public List<EndpointPropertiesResponseCustomHeaders> getCustomHeaders() {
        return this.customHeaders == null ? List.of() : this.customHeaders;
    }
    public Optional<String> getEndpointLocation() {
        return Optional.ofNullable(this.endpointLocation);
    }
    public Optional<String> getEndpointMonitorStatus() {
        return Optional.ofNullable(this.endpointMonitorStatus);
    }
    public Optional<String> getEndpointStatus() {
        return Optional.ofNullable(this.endpointStatus);
    }
    public List<String> getGeoMapping() {
        return this.geoMapping == null ? List.of() : this.geoMapping;
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Double> getMinChildEndpoints() {
        return Optional.ofNullable(this.minChildEndpoints);
    }
    public Optional<Double> getMinChildEndpointsIPv4() {
        return Optional.ofNullable(this.minChildEndpointsIPv4);
    }
    public Optional<Double> getMinChildEndpointsIPv6() {
        return Optional.ofNullable(this.minChildEndpointsIPv6);
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Double> getPriority() {
        return Optional.ofNullable(this.priority);
    }
    public List<EndpointPropertiesResponseSubnets> getSubnets() {
        return this.subnets == null ? List.of() : this.subnets;
    }
    public Optional<String> getTarget() {
        return Optional.ofNullable(this.target);
    }
    public Optional<String> getTargetResourceId() {
        return Optional.ofNullable(this.targetResourceId);
    }
    public Optional<String> getType() {
        return Optional.ofNullable(this.type);
    }
    public Optional<Double> getWeight() {
        return Optional.ofNullable(this.weight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndpointResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<EndpointPropertiesResponseCustomHeaders> customHeaders;
        private @Nullable String endpointLocation;
        private @Nullable String endpointMonitorStatus;
        private @Nullable String endpointStatus;
        private @Nullable List<String> geoMapping;
        private @Nullable String id;
        private @Nullable Double minChildEndpoints;
        private @Nullable Double minChildEndpointsIPv4;
        private @Nullable Double minChildEndpointsIPv6;
        private @Nullable String name;
        private @Nullable Double priority;
        private @Nullable List<EndpointPropertiesResponseSubnets> subnets;
        private @Nullable String target;
        private @Nullable String targetResourceId;
        private @Nullable String type;
        private @Nullable Double weight;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customHeaders = defaults.customHeaders;
    	      this.endpointLocation = defaults.endpointLocation;
    	      this.endpointMonitorStatus = defaults.endpointMonitorStatus;
    	      this.endpointStatus = defaults.endpointStatus;
    	      this.geoMapping = defaults.geoMapping;
    	      this.id = defaults.id;
    	      this.minChildEndpoints = defaults.minChildEndpoints;
    	      this.minChildEndpointsIPv4 = defaults.minChildEndpointsIPv4;
    	      this.minChildEndpointsIPv6 = defaults.minChildEndpointsIPv6;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.subnets = defaults.subnets;
    	      this.target = defaults.target;
    	      this.targetResourceId = defaults.targetResourceId;
    	      this.type = defaults.type;
    	      this.weight = defaults.weight;
        }

        public Builder setCustomHeaders(@Nullable List<EndpointPropertiesResponseCustomHeaders> customHeaders) {
            this.customHeaders = customHeaders;
            return this;
        }

        public Builder setEndpointLocation(@Nullable String endpointLocation) {
            this.endpointLocation = endpointLocation;
            return this;
        }

        public Builder setEndpointMonitorStatus(@Nullable String endpointMonitorStatus) {
            this.endpointMonitorStatus = endpointMonitorStatus;
            return this;
        }

        public Builder setEndpointStatus(@Nullable String endpointStatus) {
            this.endpointStatus = endpointStatus;
            return this;
        }

        public Builder setGeoMapping(@Nullable List<String> geoMapping) {
            this.geoMapping = geoMapping;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setMinChildEndpoints(@Nullable Double minChildEndpoints) {
            this.minChildEndpoints = minChildEndpoints;
            return this;
        }

        public Builder setMinChildEndpointsIPv4(@Nullable Double minChildEndpointsIPv4) {
            this.minChildEndpointsIPv4 = minChildEndpointsIPv4;
            return this;
        }

        public Builder setMinChildEndpointsIPv6(@Nullable Double minChildEndpointsIPv6) {
            this.minChildEndpointsIPv6 = minChildEndpointsIPv6;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setPriority(@Nullable Double priority) {
            this.priority = priority;
            return this;
        }

        public Builder setSubnets(@Nullable List<EndpointPropertiesResponseSubnets> subnets) {
            this.subnets = subnets;
            return this;
        }

        public Builder setTarget(@Nullable String target) {
            this.target = target;
            return this;
        }

        public Builder setTargetResourceId(@Nullable String targetResourceId) {
            this.targetResourceId = targetResourceId;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = type;
            return this;
        }

        public Builder setWeight(@Nullable Double weight) {
            this.weight = weight;
            return this;
        }

        public GetEndpointResult build() {
            return new GetEndpointResult(customHeaders, endpointLocation, endpointMonitorStatus, endpointStatus, geoMapping, id, minChildEndpoints, minChildEndpointsIPv4, minChildEndpointsIPv6, name, priority, subnets, target, targetResourceId, type, weight);
        }
    }
}
