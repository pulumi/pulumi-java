// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.inputs.ExpressRouteLinkMacSecConfigResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExpressRouteLinkResponse extends io.pulumi.resources.InvokeArgs {

    public static final ExpressRouteLinkResponse Empty = new ExpressRouteLinkResponse();

    @InputImport(name="adminState")
    private final @Nullable String adminState;

    public Optional<String> getAdminState() {
        return this.adminState == null ? Optional.empty() : Optional.ofNullable(this.adminState);
    }

    @InputImport(name="connectorType", required=true)
    private final String connectorType;

    public String getConnectorType() {
        return this.connectorType;
    }

    @InputImport(name="etag", required=true)
    private final String etag;

    public String getEtag() {
        return this.etag;
    }

    @InputImport(name="id")
    private final @Nullable String id;

    public Optional<String> getId() {
        return this.id == null ? Optional.empty() : Optional.ofNullable(this.id);
    }

    @InputImport(name="interfaceName", required=true)
    private final String interfaceName;

    public String getInterfaceName() {
        return this.interfaceName;
    }

    @InputImport(name="macSecConfig")
    private final @Nullable ExpressRouteLinkMacSecConfigResponse macSecConfig;

    public Optional<ExpressRouteLinkMacSecConfigResponse> getMacSecConfig() {
        return this.macSecConfig == null ? Optional.empty() : Optional.ofNullable(this.macSecConfig);
    }

    @InputImport(name="name")
    private final @Nullable String name;

    public Optional<String> getName() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    @InputImport(name="patchPanelId", required=true)
    private final String patchPanelId;

    public String getPatchPanelId() {
        return this.patchPanelId;
    }

    @InputImport(name="provisioningState", required=true)
    private final String provisioningState;

    public String getProvisioningState() {
        return this.provisioningState;
    }

    @InputImport(name="rackId", required=true)
    private final String rackId;

    public String getRackId() {
        return this.rackId;
    }

    @InputImport(name="routerName", required=true)
    private final String routerName;

    public String getRouterName() {
        return this.routerName;
    }

    public ExpressRouteLinkResponse(
        @Nullable String adminState,
        String connectorType,
        String etag,
        @Nullable String id,
        String interfaceName,
        @Nullable ExpressRouteLinkMacSecConfigResponse macSecConfig,
        @Nullable String name,
        String patchPanelId,
        String provisioningState,
        String rackId,
        String routerName) {
        this.adminState = adminState;
        this.connectorType = Objects.requireNonNull(connectorType, "expected parameter 'connectorType' to be non-null");
        this.etag = Objects.requireNonNull(etag, "expected parameter 'etag' to be non-null");
        this.id = id;
        this.interfaceName = Objects.requireNonNull(interfaceName, "expected parameter 'interfaceName' to be non-null");
        this.macSecConfig = macSecConfig;
        this.name = name;
        this.patchPanelId = Objects.requireNonNull(patchPanelId, "expected parameter 'patchPanelId' to be non-null");
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.rackId = Objects.requireNonNull(rackId, "expected parameter 'rackId' to be non-null");
        this.routerName = Objects.requireNonNull(routerName, "expected parameter 'routerName' to be non-null");
    }

    private ExpressRouteLinkResponse() {
        this.adminState = null;
        this.connectorType = null;
        this.etag = null;
        this.id = null;
        this.interfaceName = null;
        this.macSecConfig = null;
        this.name = null;
        this.patchPanelId = null;
        this.provisioningState = null;
        this.rackId = null;
        this.routerName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExpressRouteLinkResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String adminState;
        private String connectorType;
        private String etag;
        private @Nullable String id;
        private String interfaceName;
        private @Nullable ExpressRouteLinkMacSecConfigResponse macSecConfig;
        private @Nullable String name;
        private String patchPanelId;
        private String provisioningState;
        private String rackId;
        private String routerName;

        public Builder() {
    	      // Empty
        }

        public Builder(ExpressRouteLinkResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminState = defaults.adminState;
    	      this.connectorType = defaults.connectorType;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.interfaceName = defaults.interfaceName;
    	      this.macSecConfig = defaults.macSecConfig;
    	      this.name = defaults.name;
    	      this.patchPanelId = defaults.patchPanelId;
    	      this.provisioningState = defaults.provisioningState;
    	      this.rackId = defaults.rackId;
    	      this.routerName = defaults.routerName;
        }

        public Builder setAdminState(@Nullable String adminState) {
            this.adminState = adminState;
            return this;
        }

        public Builder setConnectorType(String connectorType) {
            this.connectorType = Objects.requireNonNull(connectorType);
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setInterfaceName(String interfaceName) {
            this.interfaceName = Objects.requireNonNull(interfaceName);
            return this;
        }

        public Builder setMacSecConfig(@Nullable ExpressRouteLinkMacSecConfigResponse macSecConfig) {
            this.macSecConfig = macSecConfig;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setPatchPanelId(String patchPanelId) {
            this.patchPanelId = Objects.requireNonNull(patchPanelId);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRackId(String rackId) {
            this.rackId = Objects.requireNonNull(rackId);
            return this;
        }

        public Builder setRouterName(String routerName) {
            this.routerName = Objects.requireNonNull(routerName);
            return this;
        }

        public ExpressRouteLinkResponse build() {
            return new ExpressRouteLinkResponse(adminState, connectorType, etag, id, interfaceName, macSecConfig, name, patchPanelId, provisioningState, rackId, routerName);
        }
    }
}
