// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
 * 
 */
public final class AdditionalUnattendContentResponse extends io.pulumi.resources.InvokeArgs {

    public static final AdditionalUnattendContentResponse Empty = new AdditionalUnattendContentResponse();

    /**
     * The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
     * 
     */
    @InputImport(name="componentName")
        private final @Nullable String componentName;

    public Optional<String> getComponentName() {
        return this.componentName == null ? Optional.empty() : Optional.ofNullable(this.componentName);
    }

    /**
     * Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
     * 
     */
    @InputImport(name="content")
        private final @Nullable String content;

    public Optional<String> getContent() {
        return this.content == null ? Optional.empty() : Optional.ofNullable(this.content);
    }

    /**
     * The pass name. Currently, the only allowable value is OobeSystem.
     * 
     */
    @InputImport(name="passName")
        private final @Nullable String passName;

    public Optional<String> getPassName() {
        return this.passName == null ? Optional.empty() : Optional.ofNullable(this.passName);
    }

    /**
     * Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
     * 
     */
    @InputImport(name="settingName")
        private final @Nullable String settingName;

    public Optional<String> getSettingName() {
        return this.settingName == null ? Optional.empty() : Optional.ofNullable(this.settingName);
    }

    public AdditionalUnattendContentResponse(
        @Nullable String componentName,
        @Nullable String content,
        @Nullable String passName,
        @Nullable String settingName) {
        this.componentName = componentName;
        this.content = content;
        this.passName = passName;
        this.settingName = settingName;
    }

    private AdditionalUnattendContentResponse() {
        this.componentName = null;
        this.content = null;
        this.passName = null;
        this.settingName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AdditionalUnattendContentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String componentName;
        private @Nullable String content;
        private @Nullable String passName;
        private @Nullable String settingName;

        public Builder() {
    	      // Empty
        }

        public Builder(AdditionalUnattendContentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.componentName = defaults.componentName;
    	      this.content = defaults.content;
    	      this.passName = defaults.passName;
    	      this.settingName = defaults.settingName;
        }

        public Builder setComponentName(@Nullable String componentName) {
            this.componentName = componentName;
            return this;
        }

        public Builder setContent(@Nullable String content) {
            this.content = content;
            return this;
        }

        public Builder setPassName(@Nullable String passName) {
            this.passName = passName;
            return this;
        }

        public Builder setSettingName(@Nullable String settingName) {
            this.settingName = settingName;
            return this;
        }
        public AdditionalUnattendContentResponse build() {
            return new AdditionalUnattendContentResponse(componentName, content, passName, settingName);
        }
    }
}
