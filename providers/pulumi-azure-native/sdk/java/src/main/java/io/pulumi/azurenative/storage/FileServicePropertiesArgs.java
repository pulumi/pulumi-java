// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage;

import io.pulumi.azurenative.storage.inputs.CorsRulesArgs;
import io.pulumi.azurenative.storage.inputs.DeleteRetentionPolicyArgs;
import io.pulumi.azurenative.storage.inputs.ProtocolSettingsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FileServicePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final FileServicePropertiesArgs Empty = new FileServicePropertiesArgs();

    /**
     * The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * 
     */
    @InputImport(name="accountName", required=true)
    private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    /**
     * Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.
     * 
     */
    @InputImport(name="cors")
    private final @Nullable Input<CorsRulesArgs> cors;

    public Input<CorsRulesArgs> getCors() {
        return this.cors == null ? Input.empty() : this.cors;
    }

    /**
     * The name of the file Service within the specified storage account. File Service Name must be "default"
     * 
     */
    @InputImport(name="fileServicesName")
    private final @Nullable Input<String> fileServicesName;

    public Input<String> getFileServicesName() {
        return this.fileServicesName == null ? Input.empty() : this.fileServicesName;
    }

    /**
     * Protocol settings for file service
     * 
     */
    @InputImport(name="protocolSettings")
    private final @Nullable Input<ProtocolSettingsArgs> protocolSettings;

    public Input<ProtocolSettingsArgs> getProtocolSettings() {
        return this.protocolSettings == null ? Input.empty() : this.protocolSettings;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The file service properties for share soft delete.
     * 
     */
    @InputImport(name="shareDeleteRetentionPolicy")
    private final @Nullable Input<DeleteRetentionPolicyArgs> shareDeleteRetentionPolicy;

    public Input<DeleteRetentionPolicyArgs> getShareDeleteRetentionPolicy() {
        return this.shareDeleteRetentionPolicy == null ? Input.empty() : this.shareDeleteRetentionPolicy;
    }

    public FileServicePropertiesArgs(
        Input<String> accountName,
        @Nullable Input<CorsRulesArgs> cors,
        @Nullable Input<String> fileServicesName,
        @Nullable Input<ProtocolSettingsArgs> protocolSettings,
        Input<String> resourceGroupName,
        @Nullable Input<DeleteRetentionPolicyArgs> shareDeleteRetentionPolicy) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.cors = cors;
        this.fileServicesName = fileServicesName;
        this.protocolSettings = protocolSettings;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.shareDeleteRetentionPolicy = shareDeleteRetentionPolicy;
    }

    private FileServicePropertiesArgs() {
        this.accountName = Input.empty();
        this.cors = Input.empty();
        this.fileServicesName = Input.empty();
        this.protocolSettings = Input.empty();
        this.resourceGroupName = Input.empty();
        this.shareDeleteRetentionPolicy = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileServicePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<CorsRulesArgs> cors;
        private @Nullable Input<String> fileServicesName;
        private @Nullable Input<ProtocolSettingsArgs> protocolSettings;
        private Input<String> resourceGroupName;
        private @Nullable Input<DeleteRetentionPolicyArgs> shareDeleteRetentionPolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(FileServicePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.cors = defaults.cors;
    	      this.fileServicesName = defaults.fileServicesName;
    	      this.protocolSettings = defaults.protocolSettings;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.shareDeleteRetentionPolicy = defaults.shareDeleteRetentionPolicy;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setCors(@Nullable Input<CorsRulesArgs> cors) {
            this.cors = cors;
            return this;
        }

        public Builder setCors(@Nullable CorsRulesArgs cors) {
            this.cors = Input.ofNullable(cors);
            return this;
        }

        public Builder setFileServicesName(@Nullable Input<String> fileServicesName) {
            this.fileServicesName = fileServicesName;
            return this;
        }

        public Builder setFileServicesName(@Nullable String fileServicesName) {
            this.fileServicesName = Input.ofNullable(fileServicesName);
            return this;
        }

        public Builder setProtocolSettings(@Nullable Input<ProtocolSettingsArgs> protocolSettings) {
            this.protocolSettings = protocolSettings;
            return this;
        }

        public Builder setProtocolSettings(@Nullable ProtocolSettingsArgs protocolSettings) {
            this.protocolSettings = Input.ofNullable(protocolSettings);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setShareDeleteRetentionPolicy(@Nullable Input<DeleteRetentionPolicyArgs> shareDeleteRetentionPolicy) {
            this.shareDeleteRetentionPolicy = shareDeleteRetentionPolicy;
            return this;
        }

        public Builder setShareDeleteRetentionPolicy(@Nullable DeleteRetentionPolicyArgs shareDeleteRetentionPolicy) {
            this.shareDeleteRetentionPolicy = Input.ofNullable(shareDeleteRetentionPolicy);
            return this;
        }

        public FileServicePropertiesArgs build() {
            return new FileServicePropertiesArgs(accountName, cors, fileServicesName, protocolSettings, resourceGroupName, shareDeleteRetentionPolicy);
        }
    }
}
