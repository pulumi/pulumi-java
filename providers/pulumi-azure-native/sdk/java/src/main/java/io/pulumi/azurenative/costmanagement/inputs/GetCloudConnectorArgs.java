// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.costmanagement.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudConnectorArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetCloudConnectorArgs Empty = new GetCloudConnectorArgs();

    /**
     * Connector Name.
     * 
     */
    @Import(name="connectorName", required=true)
      private final String connectorName;

    public String getConnectorName() {
        return this.connectorName;
    }

    /**
     * May be used to expand the collectionInfo property. By default, collectionInfo is not included.
     * 
     */
    @Import(name="expand")
      private final @Nullable String expand;

    public Optional<String> getExpand() {
        return this.expand == null ? Optional.empty() : Optional.ofNullable(this.expand);
    }

    public GetCloudConnectorArgs(
        String connectorName,
        @Nullable String expand) {
        this.connectorName = Objects.requireNonNull(connectorName, "expected parameter 'connectorName' to be non-null");
        this.expand = expand;
    }

    private GetCloudConnectorArgs() {
        this.connectorName = null;
        this.expand = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String connectorName;
        private @Nullable String expand;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCloudConnectorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectorName = defaults.connectorName;
    	      this.expand = defaults.expand;
        }

        public Builder connectorName(String connectorName) {
            this.connectorName = Objects.requireNonNull(connectorName);
            return this;
        }

        public Builder expand(@Nullable String expand) {
            this.expand = expand;
            return this;
        }
        public GetCloudConnectorArgs build() {
            return new GetCloudConnectorArgs(connectorName, expand);
        }
    }
}
