// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.operationalinsights.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The key vault properties.
 * 
 */
public final class KeyVaultPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final KeyVaultPropertiesArgs Empty = new KeyVaultPropertiesArgs();

    /**
     * The name of the key associated with the Log Analytics cluster.
     * 
     */
    @Import(name="keyName")
      private final @Nullable Output<String> keyName;

    public Output<String> getKeyName() {
        return this.keyName == null ? Codegen.empty() : this.keyName;
    }

    /**
     * Selected key minimum required size.
     * 
     */
    @Import(name="keyRsaSize")
      private final @Nullable Output<Integer> keyRsaSize;

    public Output<Integer> getKeyRsaSize() {
        return this.keyRsaSize == null ? Codegen.empty() : this.keyRsaSize;
    }

    /**
     * The Key Vault uri which holds they key associated with the Log Analytics cluster.
     * 
     */
    @Import(name="keyVaultUri")
      private final @Nullable Output<String> keyVaultUri;

    public Output<String> getKeyVaultUri() {
        return this.keyVaultUri == null ? Codegen.empty() : this.keyVaultUri;
    }

    /**
     * The version of the key associated with the Log Analytics cluster.
     * 
     */
    @Import(name="keyVersion")
      private final @Nullable Output<String> keyVersion;

    public Output<String> getKeyVersion() {
        return this.keyVersion == null ? Codegen.empty() : this.keyVersion;
    }

    public KeyVaultPropertiesArgs(
        @Nullable Output<String> keyName,
        @Nullable Output<Integer> keyRsaSize,
        @Nullable Output<String> keyVaultUri,
        @Nullable Output<String> keyVersion) {
        this.keyName = keyName;
        this.keyRsaSize = keyRsaSize;
        this.keyVaultUri = keyVaultUri;
        this.keyVersion = keyVersion;
    }

    private KeyVaultPropertiesArgs() {
        this.keyName = Codegen.empty();
        this.keyRsaSize = Codegen.empty();
        this.keyVaultUri = Codegen.empty();
        this.keyVersion = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyVaultPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> keyName;
        private @Nullable Output<Integer> keyRsaSize;
        private @Nullable Output<String> keyVaultUri;
        private @Nullable Output<String> keyVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(KeyVaultPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyName = defaults.keyName;
    	      this.keyRsaSize = defaults.keyRsaSize;
    	      this.keyVaultUri = defaults.keyVaultUri;
    	      this.keyVersion = defaults.keyVersion;
        }

        public Builder keyName(@Nullable Output<String> keyName) {
            this.keyName = keyName;
            return this;
        }
        public Builder keyName(@Nullable String keyName) {
            this.keyName = Codegen.ofNullable(keyName);
            return this;
        }
        public Builder keyRsaSize(@Nullable Output<Integer> keyRsaSize) {
            this.keyRsaSize = keyRsaSize;
            return this;
        }
        public Builder keyRsaSize(@Nullable Integer keyRsaSize) {
            this.keyRsaSize = Codegen.ofNullable(keyRsaSize);
            return this;
        }
        public Builder keyVaultUri(@Nullable Output<String> keyVaultUri) {
            this.keyVaultUri = keyVaultUri;
            return this;
        }
        public Builder keyVaultUri(@Nullable String keyVaultUri) {
            this.keyVaultUri = Codegen.ofNullable(keyVaultUri);
            return this;
        }
        public Builder keyVersion(@Nullable Output<String> keyVersion) {
            this.keyVersion = keyVersion;
            return this;
        }
        public Builder keyVersion(@Nullable String keyVersion) {
            this.keyVersion = Codegen.ofNullable(keyVersion);
            return this;
        }        public KeyVaultPropertiesArgs build() {
            return new KeyVaultPropertiesArgs(keyName, keyRsaSize, keyVaultUri, keyVersion);
        }
    }
}
