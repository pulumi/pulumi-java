// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web;

import io.pulumi.azurenative.web.inputs.AppLogsConfigurationArgs;
import io.pulumi.azurenative.web.inputs.ArcConfigurationArgs;
import io.pulumi.azurenative.web.inputs.ExtendedLocationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class KubeEnvironmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final KubeEnvironmentArgs Empty = new KubeEnvironmentArgs();

    @Import(name="aksResourceID")
      private final @Nullable Output<String> aksResourceID;

    public Output<String> getAksResourceID() {
        return this.aksResourceID == null ? Output.empty() : this.aksResourceID;
    }

    /**
     * Cluster configuration which enables the log daemon to export
     * app logs to a destination. Currently only "log-analytics" is
     * supported
     * 
     */
    @Import(name="appLogsConfiguration")
      private final @Nullable Output<AppLogsConfigurationArgs> appLogsConfiguration;

    public Output<AppLogsConfigurationArgs> getAppLogsConfiguration() {
        return this.appLogsConfiguration == null ? Output.empty() : this.appLogsConfiguration;
    }

    /**
     * Cluster configuration which determines the ARC cluster
     * components types. Eg: Choosing between BuildService kind,
     * FrontEnd Service ArtifactsStorageType etc.
     * 
     */
    @Import(name="arcConfiguration")
      private final @Nullable Output<ArcConfigurationArgs> arcConfiguration;

    public Output<ArcConfigurationArgs> getArcConfiguration() {
        return this.arcConfiguration == null ? Output.empty() : this.arcConfiguration;
    }

    /**
     * Extended Location.
     * 
     */
    @Import(name="extendedLocation")
      private final @Nullable Output<ExtendedLocationArgs> extendedLocation;

    public Output<ExtendedLocationArgs> getExtendedLocation() {
        return this.extendedLocation == null ? Output.empty() : this.extendedLocation;
    }

    /**
     * Only visible within Vnet/Subnet
     * 
     */
    @Import(name="internalLoadBalancerEnabled")
      private final @Nullable Output<Boolean> internalLoadBalancerEnabled;

    public Output<Boolean> getInternalLoadBalancerEnabled() {
        return this.internalLoadBalancerEnabled == null ? Output.empty() : this.internalLoadBalancerEnabled;
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<String> kind;

    public Output<String> getKind() {
        return this.kind == null ? Output.empty() : this.kind;
    }

    /**
     * Resource Location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * Name of the Kubernetes Environment.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Static IP of the KubeEnvironment
     * 
     */
    @Import(name="staticIp")
      private final @Nullable Output<String> staticIp;

    public Output<String> getStaticIp() {
        return this.staticIp == null ? Output.empty() : this.staticIp;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public KubeEnvironmentArgs(
        @Nullable Output<String> aksResourceID,
        @Nullable Output<AppLogsConfigurationArgs> appLogsConfiguration,
        @Nullable Output<ArcConfigurationArgs> arcConfiguration,
        @Nullable Output<ExtendedLocationArgs> extendedLocation,
        @Nullable Output<Boolean> internalLoadBalancerEnabled,
        @Nullable Output<String> kind,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        Output<String> resourceGroupName,
        @Nullable Output<String> staticIp,
        @Nullable Output<Map<String,String>> tags) {
        this.aksResourceID = aksResourceID;
        this.appLogsConfiguration = appLogsConfiguration;
        this.arcConfiguration = arcConfiguration;
        this.extendedLocation = extendedLocation;
        this.internalLoadBalancerEnabled = internalLoadBalancerEnabled;
        this.kind = kind;
        this.location = location;
        this.name = name;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.staticIp = staticIp;
        this.tags = tags;
    }

    private KubeEnvironmentArgs() {
        this.aksResourceID = Output.empty();
        this.appLogsConfiguration = Output.empty();
        this.arcConfiguration = Output.empty();
        this.extendedLocation = Output.empty();
        this.internalLoadBalancerEnabled = Output.empty();
        this.kind = Output.empty();
        this.location = Output.empty();
        this.name = Output.empty();
        this.resourceGroupName = Output.empty();
        this.staticIp = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubeEnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> aksResourceID;
        private @Nullable Output<AppLogsConfigurationArgs> appLogsConfiguration;
        private @Nullable Output<ArcConfigurationArgs> arcConfiguration;
        private @Nullable Output<ExtendedLocationArgs> extendedLocation;
        private @Nullable Output<Boolean> internalLoadBalancerEnabled;
        private @Nullable Output<String> kind;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> staticIp;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(KubeEnvironmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aksResourceID = defaults.aksResourceID;
    	      this.appLogsConfiguration = defaults.appLogsConfiguration;
    	      this.arcConfiguration = defaults.arcConfiguration;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.internalLoadBalancerEnabled = defaults.internalLoadBalancerEnabled;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.staticIp = defaults.staticIp;
    	      this.tags = defaults.tags;
        }

        public Builder aksResourceID(@Nullable Output<String> aksResourceID) {
            this.aksResourceID = aksResourceID;
            return this;
        }

        public Builder aksResourceID(@Nullable String aksResourceID) {
            this.aksResourceID = Output.ofNullable(aksResourceID);
            return this;
        }

        public Builder appLogsConfiguration(@Nullable Output<AppLogsConfigurationArgs> appLogsConfiguration) {
            this.appLogsConfiguration = appLogsConfiguration;
            return this;
        }

        public Builder appLogsConfiguration(@Nullable AppLogsConfigurationArgs appLogsConfiguration) {
            this.appLogsConfiguration = Output.ofNullable(appLogsConfiguration);
            return this;
        }

        public Builder arcConfiguration(@Nullable Output<ArcConfigurationArgs> arcConfiguration) {
            this.arcConfiguration = arcConfiguration;
            return this;
        }

        public Builder arcConfiguration(@Nullable ArcConfigurationArgs arcConfiguration) {
            this.arcConfiguration = Output.ofNullable(arcConfiguration);
            return this;
        }

        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }

        public Builder extendedLocation(@Nullable ExtendedLocationArgs extendedLocation) {
            this.extendedLocation = Output.ofNullable(extendedLocation);
            return this;
        }

        public Builder internalLoadBalancerEnabled(@Nullable Output<Boolean> internalLoadBalancerEnabled) {
            this.internalLoadBalancerEnabled = internalLoadBalancerEnabled;
            return this;
        }

        public Builder internalLoadBalancerEnabled(@Nullable Boolean internalLoadBalancerEnabled) {
            this.internalLoadBalancerEnabled = Output.ofNullable(internalLoadBalancerEnabled);
            return this;
        }

        public Builder kind(@Nullable Output<String> kind) {
            this.kind = kind;
            return this;
        }

        public Builder kind(@Nullable String kind) {
            this.kind = Output.ofNullable(kind);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder staticIp(@Nullable Output<String> staticIp) {
            this.staticIp = staticIp;
            return this;
        }

        public Builder staticIp(@Nullable String staticIp) {
            this.staticIp = Output.ofNullable(staticIp);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public KubeEnvironmentArgs build() {
            return new KubeEnvironmentArgs(aksResourceID, appLogsConfiguration, arcConfiguration, extendedLocation, internalLoadBalancerEnabled, kind, location, name, resourceGroupName, staticIp, tags);
        }
    }
}
