// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.operationalinsights.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


/**
 * Search job execution statistics.
 * 
 */
public final class ResultStatisticsResponse extends io.pulumi.resources.InvokeArgs {

    public static final ResultStatisticsResponse Empty = new ResultStatisticsResponse();

    /**
     * The number of rows that were returned by the search job.
     * 
     */
    @InputImport(name="ingestedRecords", required=true)
    private final Integer ingestedRecords;

    public Integer getIngestedRecords() {
        return this.ingestedRecords;
    }

    /**
     * Search job completion percentage.
     * 
     */
    @InputImport(name="progress", required=true)
    private final Double progress;

    public Double getProgress() {
        return this.progress;
    }

    public ResultStatisticsResponse(
        Integer ingestedRecords,
        Double progress) {
        this.ingestedRecords = Objects.requireNonNull(ingestedRecords, "expected parameter 'ingestedRecords' to be non-null");
        this.progress = Objects.requireNonNull(progress, "expected parameter 'progress' to be non-null");
    }

    private ResultStatisticsResponse() {
        this.ingestedRecords = null;
        this.progress = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResultStatisticsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer ingestedRecords;
        private Double progress;

        public Builder() {
    	      // Empty
        }

        public Builder(ResultStatisticsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ingestedRecords = defaults.ingestedRecords;
    	      this.progress = defaults.progress;
        }

        public Builder setIngestedRecords(Integer ingestedRecords) {
            this.ingestedRecords = Objects.requireNonNull(ingestedRecords);
            return this;
        }

        public Builder setProgress(Double progress) {
            this.progress = Objects.requireNonNull(progress);
            return this;
        }

        public ResultStatisticsResponse build() {
            return new ResultStatisticsResponse(ingestedRecords, progress);
        }
    }
}
