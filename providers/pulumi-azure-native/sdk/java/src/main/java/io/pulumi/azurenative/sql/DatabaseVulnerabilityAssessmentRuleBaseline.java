// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.sql.DatabaseVulnerabilityAssessmentRuleBaselineArgs;
import io.pulumi.azurenative.sql.outputs.DatabaseVulnerabilityAssessmentRuleBaselineItemResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A database vulnerability assessment rule baseline.
 * API Version: 2020-11-01-preview.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Creates or updates a database's vulnerability assessment rule baseline.
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var databaseVulnerabilityAssessmentRuleBaseline = new AzureNative.Sql.DatabaseVulnerabilityAssessmentRuleBaseline("databaseVulnerabilityAssessmentRuleBaseline", new AzureNative.Sql.DatabaseVulnerabilityAssessmentRuleBaselineArgs
 *         {
 *             BaselineName = "default",
 *             BaselineResults = 
 *             {
 *                 new AzureNative.Sql.Inputs.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs
 *                 {
 *                     Result = 
 *                     {
 *                         "userA",
 *                         "SELECT",
 *                     },
 *                 },
 *                 new AzureNative.Sql.Inputs.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs
 *                 {
 *                     Result = 
 *                     {
 *                         "userB",
 *                         "SELECT",
 *                     },
 *                 },
 *                 new AzureNative.Sql.Inputs.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs
 *                 {
 *                     Result = 
 *                     {
 *                         "userC",
 *                         "SELECT",
 *                         "tableId_4",
 *                     },
 *                 },
 *             },
 *             DatabaseName = "testdb",
 *             ResourceGroupName = "vulnerabilityaseessmenttest-4799",
 *             RuleId = "VA1001",
 *             ServerName = "vulnerabilityaseessmenttest-6440",
 *             VulnerabilityAssessmentName = "default",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	sql "github.com/pulumi/pulumi-azure-native/sdk/go/azure/sql"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := sql.NewDatabaseVulnerabilityAssessmentRuleBaseline(ctx, "databaseVulnerabilityAssessmentRuleBaseline", &sql.DatabaseVulnerabilityAssessmentRuleBaselineArgs{
 * 			BaselineName: pulumi.String("default"),
 * 			BaselineResults: sql.DatabaseVulnerabilityAssessmentRuleBaselineItemArray{
 * 				&sql.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs{
 * 					Result: pulumi.StringArray{
 * 						pulumi.String("userA"),
 * 						pulumi.String("SELECT"),
 * 					},
 * 				},
 * 				&sql.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs{
 * 					Result: pulumi.StringArray{
 * 						pulumi.String("userB"),
 * 						pulumi.String("SELECT"),
 * 					},
 * 				},
 * 				&sql.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs{
 * 					Result: pulumi.StringArray{
 * 						pulumi.String("userC"),
 * 						pulumi.String("SELECT"),
 * 						pulumi.String("tableId_4"),
 * 					},
 * 				},
 * 			},
 * 			DatabaseName:                pulumi.String("testdb"),
 * 			ResourceGroupName:           pulumi.String("vulnerabilityaseessmenttest-4799"),
 * 			RuleId:                      pulumi.String("VA1001"),
 * 			ServerName:                  pulumi.String("vulnerabilityaseessmenttest-6440"),
 * 			VulnerabilityAssessmentName: pulumi.String("default"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const databaseVulnerabilityAssessmentRuleBaseline = new azure_native.sql.DatabaseVulnerabilityAssessmentRuleBaseline("databaseVulnerabilityAssessmentRuleBaseline", {
 *     baselineName: "default",
 *     baselineResults: [
 *         {
 *             result: [
 *                 "userA",
 *                 "SELECT",
 *             ],
 *         },
 *         {
 *             result: [
 *                 "userB",
 *                 "SELECT",
 *             ],
 *         },
 *         {
 *             result: [
 *                 "userC",
 *                 "SELECT",
 *                 "tableId_4",
 *             ],
 *         },
 *     ],
 *     databaseName: "testdb",
 *     resourceGroupName: "vulnerabilityaseessmenttest-4799",
 *     ruleId: "VA1001",
 *     serverName: "vulnerabilityaseessmenttest-6440",
 *     vulnerabilityAssessmentName: "default",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * database_vulnerability_assessment_rule_baseline = azure_native.sql.DatabaseVulnerabilityAssessmentRuleBaseline("databaseVulnerabilityAssessmentRuleBaseline",
 *     baseline_name="default",
 *     baseline_results=[
 *         azure_native.sql.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs(
 *             result=[
 *                 "userA",
 *                 "SELECT",
 *             ],
 *         ),
 *         azure_native.sql.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs(
 *             result=[
 *                 "userB",
 *                 "SELECT",
 *             ],
 *         ),
 *         azure_native.sql.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs(
 *             result=[
 *                 "userC",
 *                 "SELECT",
 *                 "tableId_4",
 *             ],
 *         ),
 *     ],
 *     database_name="testdb",
 *     resource_group_name="vulnerabilityaseessmenttest-4799",
 *     rule_id="VA1001",
 *     server_name="vulnerabilityaseessmenttest-6440",
 *     vulnerability_assessment_name="default")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:sql:DatabaseVulnerabilityAssessmentRuleBaseline default /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/vulnerabilityaseessmenttest-4799/providers/Microsoft.Sql/servers/vulnerabilityaseessmenttest-6440/databases/testdb/vulnerabilityAssessments/default/rules/VA1001/baselines/default 
 * ```
 * 
 */
@ResourceType(type="azure-native:sql:DatabaseVulnerabilityAssessmentRuleBaseline")
public class DatabaseVulnerabilityAssessmentRuleBaseline extends io.pulumi.resources.CustomResource {
    /**
     * The rule baseline result
     */
    @Export(name="baselineResults", type=List.class, parameters={DatabaseVulnerabilityAssessmentRuleBaselineItemResponse.class})
    private Output<List<DatabaseVulnerabilityAssessmentRuleBaselineItemResponse>> baselineResults;

    /**
     * @return The rule baseline result
     */
    public Output<List<DatabaseVulnerabilityAssessmentRuleBaselineItemResponse>> getBaselineResults() {
        return this.baselineResults;
    }
    /**
     * Resource name.
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Resource type.
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabaseVulnerabilityAssessmentRuleBaseline(String name) {
        this(name, DatabaseVulnerabilityAssessmentRuleBaselineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabaseVulnerabilityAssessmentRuleBaseline(String name, DatabaseVulnerabilityAssessmentRuleBaselineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabaseVulnerabilityAssessmentRuleBaseline(String name, DatabaseVulnerabilityAssessmentRuleBaselineArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:DatabaseVulnerabilityAssessmentRuleBaseline", name, args == null ? DatabaseVulnerabilityAssessmentRuleBaselineArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private DatabaseVulnerabilityAssessmentRuleBaseline(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:DatabaseVulnerabilityAssessmentRuleBaseline", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:sql/v20170301preview:DatabaseVulnerabilityAssessmentRuleBaseline").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20200202preview:DatabaseVulnerabilityAssessmentRuleBaseline").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20200801preview:DatabaseVulnerabilityAssessmentRuleBaseline").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20201101preview:DatabaseVulnerabilityAssessmentRuleBaseline").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20210201preview:DatabaseVulnerabilityAssessmentRuleBaseline").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20210501preview:DatabaseVulnerabilityAssessmentRuleBaseline").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20210801preview:DatabaseVulnerabilityAssessmentRuleBaseline").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabaseVulnerabilityAssessmentRuleBaseline get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseVulnerabilityAssessmentRuleBaseline(name, id, options);
    }
}
