// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.resources;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.resources.outputs.DeploymentPropertiesExtendedResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Deployment information.
API Version: 2021-01-01.

{{% examples %}}
## Example Usage
{{% example %}}
### Create a deployment that will deploy a template with a uri and queryString
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var deployment = new AzureNative.Resources.Deployment("deployment", new AzureNative.Resources.DeploymentArgs
        {
            DeploymentName = "my-deployment",
            Properties = new AzureNative.Resources.Inputs.DeploymentPropertiesArgs
            {
                Mode = "Incremental",
                Parameters = ,
                TemplateLink = new AzureNative.Resources.Inputs.TemplateLinkArgs
                {
                    QueryString = "sv=2019-02-02&st=2019-04-29T22%3A18%3A26Z&se=2019-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=xxxxxxxx0xxxxxxxxxxxxx%2bxxxxxxxxxxxxxxxxxxxx%3d",
                    Uri = "https://example.com/exampleTemplate.json",
                },
            },
            ResourceGroupName = "my-resource-group",
        });
    }

}

```

```go
package main

import (
	"fmt"

	resources "github.com/pulumi/pulumi-azure-native/sdk/go/azure/resources"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := resources.NewDeployment(ctx, "deployment", &resources.DeploymentArgs{
			DeploymentName: pulumi.String("my-deployment"),
			Properties: &resources.DeploymentPropertiesArgs{
				Mode:       "Incremental",
				Parameters: nil,
				TemplateLink: &resources.TemplateLinkArgs{
					QueryString: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v", "sv=2019-02-02&st=2019-04-29T22", "%", "3A18", "%", "3A26Z&se=2019-04-30T02", "%", "3A23", "%", "3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=xxxxxxxx0xxxxxxxxxxxxx", "%", "2bxxxxxxxxxxxxxxxxxxxx", "%", "3d")),
					Uri:         pulumi.String("https://example.com/exampleTemplate.json"),
				},
			},
			ResourceGroupName: pulumi.String("my-resource-group"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const deployment = new azure_native.resources.Deployment("deployment", {
    deploymentName: "my-deployment",
    properties: {
        mode: "Incremental",
        parameters: {},
        templateLink: {
            queryString: `sv=2019-02-02&st=2019-04-29T22%3A18%3A26Z&se=2019-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=xxxxxxxx0xxxxxxxxxxxxx%2bxxxxxxxxxxxxxxxxxxxx%3d`,
            uri: "https://example.com/exampleTemplate.json",
        },
    },
    resourceGroupName: "my-resource-group",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

deployment = azure_native.resources.Deployment("deployment",
    deployment_name="my-deployment",
    properties=azure_native.resources.DeploymentPropertiesArgs(
        mode="Incremental",
        parameters={},
        template_link=azure_native.resources.TemplateLinkArgs(
            query_string="sv=2019-02-02&st=2019-04-29T22%3A18%3A26Z&se=2019-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=xxxxxxxx0xxxxxxxxxxxxx%2bxxxxxxxxxxxxxxxxxxxx%3d",
            uri="https://example.com/exampleTemplate.json",
        ),
    ),
    resource_group_name="my-resource-group")

```

{{% /example %}}
{{% example %}}
### Create a deployment that will deploy a templateSpec with the given resourceId
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var deployment = new AzureNative.Resources.Deployment("deployment", new AzureNative.Resources.DeploymentArgs
        {
            DeploymentName = "my-deployment",
            Properties = new AzureNative.Resources.Inputs.DeploymentPropertiesArgs
            {
                Mode = "Incremental",
                Parameters = ,
                TemplateLink = new AzureNative.Resources.Inputs.TemplateLinkArgs
                {
                    Id = "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.Resources/TemplateSpecs/TemplateSpec-Name/versions/v1",
                },
            },
            ResourceGroupName = "my-resource-group",
        });
    }

}

```

```go
package main

import (
	resources "github.com/pulumi/pulumi-azure-native/sdk/go/azure/resources"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := resources.NewDeployment(ctx, "deployment", &resources.DeploymentArgs{
			DeploymentName: pulumi.String("my-deployment"),
			Properties: &resources.DeploymentPropertiesArgs{
				Mode:       "Incremental",
				Parameters: nil,
				TemplateLink: &resources.TemplateLinkArgs{
					Id: pulumi.String("/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.Resources/TemplateSpecs/TemplateSpec-Name/versions/v1"),
				},
			},
			ResourceGroupName: pulumi.String("my-resource-group"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const deployment = new azure_native.resources.Deployment("deployment", {
    deploymentName: "my-deployment",
    properties: {
        mode: "Incremental",
        parameters: {},
        templateLink: {
            id: "/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.Resources/TemplateSpecs/TemplateSpec-Name/versions/v1",
        },
    },
    resourceGroupName: "my-resource-group",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

deployment = azure_native.resources.Deployment("deployment",
    deployment_name="my-deployment",
    properties=azure_native.resources.DeploymentPropertiesArgs(
        mode="Incremental",
        parameters={},
        template_link=azure_native.resources.TemplateLinkArgs(
            id="/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/my-resource-group/providers/Microsoft.Resources/TemplateSpecs/TemplateSpec-Name/versions/v1",
        ),
    ),
    resource_group_name="my-resource-group")

```

{{% /example %}}
{{% example %}}
### Create a deployment that will redeploy another deployment on failure
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var deployment = new AzureNative.Resources.Deployment("deployment", new AzureNative.Resources.DeploymentArgs
        {
            DeploymentName = "my-deployment",
            Properties = new AzureNative.Resources.Inputs.DeploymentPropertiesArgs
            {
                Mode = "Complete",
                OnErrorDeployment = new AzureNative.Resources.Inputs.OnErrorDeploymentArgs
                {
                    DeploymentName = "name-of-deployment-to-use",
                    Type = "SpecificDeployment",
                },
                Parameters = ,
                TemplateLink = new AzureNative.Resources.Inputs.TemplateLinkArgs
                {
                    Uri = "https://example.com/exampleTemplate.json",
                },
            },
            ResourceGroupName = "my-resource-group",
        });
    }

}

```

```go
package main

import (
	resources "github.com/pulumi/pulumi-azure-native/sdk/go/azure/resources"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := resources.NewDeployment(ctx, "deployment", &resources.DeploymentArgs{
			DeploymentName: pulumi.String("my-deployment"),
			Properties: &resources.DeploymentPropertiesArgs{
				Mode: "Complete",
				OnErrorDeployment: &resources.OnErrorDeploymentArgs{
					DeploymentName: pulumi.String("name-of-deployment-to-use"),
					Type:           "SpecificDeployment",
				},
				Parameters: nil,
				TemplateLink: &resources.TemplateLinkArgs{
					Uri: pulumi.String("https://example.com/exampleTemplate.json"),
				},
			},
			ResourceGroupName: pulumi.String("my-resource-group"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const deployment = new azure_native.resources.Deployment("deployment", {
    deploymentName: "my-deployment",
    properties: {
        mode: "Complete",
        onErrorDeployment: {
            deploymentName: "name-of-deployment-to-use",
            type: "SpecificDeployment",
        },
        parameters: {},
        templateLink: {
            uri: "https://example.com/exampleTemplate.json",
        },
    },
    resourceGroupName: "my-resource-group",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

deployment = azure_native.resources.Deployment("deployment",
    deployment_name="my-deployment",
    properties=azure_native.resources.DeploymentPropertiesArgs(
        mode="Complete",
        on_error_deployment=azure_native.resources.OnErrorDeploymentArgs(
            deployment_name="name-of-deployment-to-use",
            type="SpecificDeployment",
        ),
        parameters={},
        template_link=azure_native.resources.TemplateLinkArgs(
            uri="https://example.com/exampleTemplate.json",
        ),
    ),
    resource_group_name="my-resource-group")

```

{{% /example %}}
{{% example %}}
### Create a deployment that will redeploy the last successful deployment on failure
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var deployment = new AzureNative.Resources.Deployment("deployment", new AzureNative.Resources.DeploymentArgs
        {
            DeploymentName = "my-deployment",
            Properties = new AzureNative.Resources.Inputs.DeploymentPropertiesArgs
            {
                Mode = "Complete",
                OnErrorDeployment = new AzureNative.Resources.Inputs.OnErrorDeploymentArgs
                {
                    Type = "LastSuccessful",
                },
                Parameters = ,
                TemplateLink = new AzureNative.Resources.Inputs.TemplateLinkArgs
                {
                    Uri = "https://example.com/exampleTemplate.json",
                },
            },
            ResourceGroupName = "my-resource-group",
        });
    }

}

```

```go
package main

import (
	resources "github.com/pulumi/pulumi-azure-native/sdk/go/azure/resources"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := resources.NewDeployment(ctx, "deployment", &resources.DeploymentArgs{
			DeploymentName: pulumi.String("my-deployment"),
			Properties: &resources.DeploymentPropertiesArgs{
				Mode: "Complete",
				OnErrorDeployment: &resources.OnErrorDeploymentArgs{
					Type: "LastSuccessful",
				},
				Parameters: nil,
				TemplateLink: &resources.TemplateLinkArgs{
					Uri: pulumi.String("https://example.com/exampleTemplate.json"),
				},
			},
			ResourceGroupName: pulumi.String("my-resource-group"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const deployment = new azure_native.resources.Deployment("deployment", {
    deploymentName: "my-deployment",
    properties: {
        mode: "Complete",
        onErrorDeployment: {
            type: "LastSuccessful",
        },
        parameters: {},
        templateLink: {
            uri: "https://example.com/exampleTemplate.json",
        },
    },
    resourceGroupName: "my-resource-group",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

deployment = azure_native.resources.Deployment("deployment",
    deployment_name="my-deployment",
    properties=azure_native.resources.DeploymentPropertiesArgs(
        mode="Complete",
        on_error_deployment=azure_native.resources.OnErrorDeploymentArgs(
            type="LastSuccessful",
        ),
        parameters={},
        template_link=azure_native.resources.TemplateLinkArgs(
            uri="https://example.com/exampleTemplate.json",
        ),
    ),
    resource_group_name="my-resource-group")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:resources:Deployment my-deployment /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/Microsoft.Resources/deployments/my-deployment 
```

 */
@ResourceType(type="azure-native:resources:Deployment")
public class Deployment extends io.pulumi.resources.CustomResource {
    /**
     * the location of the deployment.
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return the location of the deployment.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * The name of the deployment.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the deployment.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Deployment properties.
     */
    @OutputExport(name="properties", type=DeploymentPropertiesExtendedResponse.class, parameters={})
    private Output<DeploymentPropertiesExtendedResponse> properties;

    /**
     * @return Deployment properties.
     */
    public Output<DeploymentPropertiesExtendedResponse> getProperties() {
        return this.properties;
    }
    /**
     * Deployment tags
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Deployment tags
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The type of the deployment.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the deployment.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Deployment(String name, DeploymentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:resources:Deployment", name, args == null ? DeploymentArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Deployment(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:resources:Deployment", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:resources/v20151101:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20160201:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20160701:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20160901:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20170510:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20180201:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20180501:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20190301:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20190501:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20190510:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20190701:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20190801:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20191001:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20200601:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20200801:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20201001:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20210101:Deployment").build()),
                Input.of(Alias.builder().setType("azure-native:resources/v20210401:Deployment").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Deployment get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Deployment(name, id, options);
    }
}
