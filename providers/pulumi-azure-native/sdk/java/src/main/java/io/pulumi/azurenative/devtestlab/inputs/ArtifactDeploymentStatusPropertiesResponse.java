// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devtestlab.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Properties of an artifact deployment.
 * 
 */
public final class ArtifactDeploymentStatusPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final ArtifactDeploymentStatusPropertiesResponse Empty = new ArtifactDeploymentStatusPropertiesResponse();

    /**
     * The total count of the artifacts that were successfully applied.
     * 
     */
    @InputImport(name="artifactsApplied")
        private final @Nullable Integer artifactsApplied;

    public Optional<Integer> getArtifactsApplied() {
        return this.artifactsApplied == null ? Optional.empty() : Optional.ofNullable(this.artifactsApplied);
    }

    /**
     * The deployment status of the artifact.
     * 
     */
    @InputImport(name="deploymentStatus")
        private final @Nullable String deploymentStatus;

    public Optional<String> getDeploymentStatus() {
        return this.deploymentStatus == null ? Optional.empty() : Optional.ofNullable(this.deploymentStatus);
    }

    /**
     * The total count of the artifacts that were tentatively applied.
     * 
     */
    @InputImport(name="totalArtifacts")
        private final @Nullable Integer totalArtifacts;

    public Optional<Integer> getTotalArtifacts() {
        return this.totalArtifacts == null ? Optional.empty() : Optional.ofNullable(this.totalArtifacts);
    }

    public ArtifactDeploymentStatusPropertiesResponse(
        @Nullable Integer artifactsApplied,
        @Nullable String deploymentStatus,
        @Nullable Integer totalArtifacts) {
        this.artifactsApplied = artifactsApplied;
        this.deploymentStatus = deploymentStatus;
        this.totalArtifacts = totalArtifacts;
    }

    private ArtifactDeploymentStatusPropertiesResponse() {
        this.artifactsApplied = null;
        this.deploymentStatus = null;
        this.totalArtifacts = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ArtifactDeploymentStatusPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer artifactsApplied;
        private @Nullable String deploymentStatus;
        private @Nullable Integer totalArtifacts;

        public Builder() {
    	      // Empty
        }

        public Builder(ArtifactDeploymentStatusPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactsApplied = defaults.artifactsApplied;
    	      this.deploymentStatus = defaults.deploymentStatus;
    	      this.totalArtifacts = defaults.totalArtifacts;
        }

        public Builder setArtifactsApplied(@Nullable Integer artifactsApplied) {
            this.artifactsApplied = artifactsApplied;
            return this;
        }

        public Builder setDeploymentStatus(@Nullable String deploymentStatus) {
            this.deploymentStatus = deploymentStatus;
            return this;
        }

        public Builder setTotalArtifacts(@Nullable Integer totalArtifacts) {
            this.totalArtifacts = totalArtifacts;
            return this;
        }
        public ArtifactDeploymentStatusPropertiesResponse build() {
            return new ArtifactDeploymentStatusPropertiesResponse(artifactsApplied, deploymentStatus, totalArtifacts);
        }
    }
}
