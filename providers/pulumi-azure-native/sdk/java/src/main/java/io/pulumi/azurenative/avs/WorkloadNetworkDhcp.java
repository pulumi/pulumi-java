// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.avs;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.avs.WorkloadNetworkDhcpArgs;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * NSX DHCP
 * API Version: 2020-07-17-preview.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### WorkloadNetworks_CreateDhcp
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var workloadNetworkDhcp = new AzureNative.AVS.WorkloadNetworkDhcp("workloadNetworkDhcp", new AzureNative.AVS.WorkloadNetworkDhcpArgs
 *         {
 *             DhcpId = "dhcp1",
 *             DhcpType = "SERVER",
 *             DisplayName = "dhcpConfigurations1",
 *             PrivateCloudName = "cloud1",
 *             ResourceGroupName = "group1",
 *             Revision = 1,
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	avs "github.com/pulumi/pulumi-azure-native/sdk/go/azure/avs"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := avs.NewWorkloadNetworkDhcp(ctx, "workloadNetworkDhcp", &avs.WorkloadNetworkDhcpArgs{
 * 			DhcpId:            pulumi.String("dhcp1"),
 * 			DhcpType:          pulumi.String("SERVER"),
 * 			DisplayName:       pulumi.String("dhcpConfigurations1"),
 * 			PrivateCloudName:  pulumi.String("cloud1"),
 * 			ResourceGroupName: pulumi.String("group1"),
 * 			Revision:          pulumi.Float64(1),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const workloadNetworkDhcp = new azure_native.avs.WorkloadNetworkDhcp("workloadNetworkDhcp", {
 *     dhcpId: "dhcp1",
 *     dhcpType: "SERVER",
 *     displayName: "dhcpConfigurations1",
 *     privateCloudName: "cloud1",
 *     resourceGroupName: "group1",
 *     revision: 1,
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * workload_network_dhcp = azure_native.avs.WorkloadNetworkDhcp("workloadNetworkDhcp",
 *     dhcp_id="dhcp1",
 *     dhcp_type="SERVER",
 *     display_name="dhcpConfigurations1",
 *     private_cloud_name="cloud1",
 *     resource_group_name="group1",
 *     revision=1)
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:avs:WorkloadNetworkDhcp dhcp1 /subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/workloadNetworks/default/dhcpConfigurations/dhcpConfigurations1 
 * ```
 * 
 */
@ResourceType(type="azure-native:avs:WorkloadNetworkDhcp")
public class WorkloadNetworkDhcp extends io.pulumi.resources.CustomResource {
    /**
     * Type of DHCP: SERVER or RELAY.
     */
    @Export(name="dhcpType", type=String.class, parameters={})
    private Output<String> dhcpType;

    /**
     * @return Type of DHCP: SERVER or RELAY.
     */
    public Output<String> getDhcpType() {
        return this.dhcpType;
    }
    /**
     * Display name of the DHCP entity.
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Display name of the DHCP entity.
     */
    public Output</* @Nullable */ String> getDisplayName() {
        return this.displayName;
    }
    /**
     * Resource name.
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The provisioning state
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * NSX revision number.
     */
    @Export(name="revision", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> revision;

    /**
     * @return NSX revision number.
     */
    public Output</* @Nullable */ Double> getRevision() {
        return this.revision;
    }
    /**
     * NSX Segments consuming DHCP.
     */
    @Export(name="segments", type=List.class, parameters={String.class})
    private Output<List<String>> segments;

    /**
     * @return NSX Segments consuming DHCP.
     */
    public Output<List<String>> getSegments() {
        return this.segments;
    }
    /**
     * Resource type.
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkloadNetworkDhcp(String name) {
        this(name, WorkloadNetworkDhcpArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkloadNetworkDhcp(String name, WorkloadNetworkDhcpArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkloadNetworkDhcp(String name, WorkloadNetworkDhcpArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:avs:WorkloadNetworkDhcp", name, args == null ? WorkloadNetworkDhcpArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private WorkloadNetworkDhcp(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:avs:WorkloadNetworkDhcp", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:avs/v20200717preview:WorkloadNetworkDhcp").build()),
                Output.of(Alias.builder().type("azure-native:avs/v20210101preview:WorkloadNetworkDhcp").build()),
                Output.of(Alias.builder().type("azure-native:avs/v20210601:WorkloadNetworkDhcp").build()),
                Output.of(Alias.builder().type("azure-native:avs/v20211201:WorkloadNetworkDhcp").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkloadNetworkDhcp get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new WorkloadNetworkDhcp(name, id, options);
    }
}
