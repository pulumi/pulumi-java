// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hdinsight.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Time and capacity request parameters
 * 
 */
public final class AutoscaleTimeAndCapacityArgs extends io.pulumi.resources.ResourceArgs {

    public static final AutoscaleTimeAndCapacityArgs Empty = new AutoscaleTimeAndCapacityArgs();

    /**
     * The maximum instance count of the cluster
     * 
     */
    @InputImport(name="maxInstanceCount")
    private final @Nullable Input<Integer> maxInstanceCount;

    public Input<Integer> getMaxInstanceCount() {
        return this.maxInstanceCount == null ? Input.empty() : this.maxInstanceCount;
    }

    /**
     * The minimum instance count of the cluster
     * 
     */
    @InputImport(name="minInstanceCount")
    private final @Nullable Input<Integer> minInstanceCount;

    public Input<Integer> getMinInstanceCount() {
        return this.minInstanceCount == null ? Input.empty() : this.minInstanceCount;
    }

    /**
     * 24-hour time in the form xx:xx
     * 
     */
    @InputImport(name="time")
    private final @Nullable Input<String> time;

    public Input<String> getTime() {
        return this.time == null ? Input.empty() : this.time;
    }

    public AutoscaleTimeAndCapacityArgs(
        @Nullable Input<Integer> maxInstanceCount,
        @Nullable Input<Integer> minInstanceCount,
        @Nullable Input<String> time) {
        this.maxInstanceCount = maxInstanceCount;
        this.minInstanceCount = minInstanceCount;
        this.time = time;
    }

    private AutoscaleTimeAndCapacityArgs() {
        this.maxInstanceCount = Input.empty();
        this.minInstanceCount = Input.empty();
        this.time = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoscaleTimeAndCapacityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> maxInstanceCount;
        private @Nullable Input<Integer> minInstanceCount;
        private @Nullable Input<String> time;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoscaleTimeAndCapacityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxInstanceCount = defaults.maxInstanceCount;
    	      this.minInstanceCount = defaults.minInstanceCount;
    	      this.time = defaults.time;
        }

        public Builder setMaxInstanceCount(@Nullable Input<Integer> maxInstanceCount) {
            this.maxInstanceCount = maxInstanceCount;
            return this;
        }

        public Builder setMaxInstanceCount(@Nullable Integer maxInstanceCount) {
            this.maxInstanceCount = Input.ofNullable(maxInstanceCount);
            return this;
        }

        public Builder setMinInstanceCount(@Nullable Input<Integer> minInstanceCount) {
            this.minInstanceCount = minInstanceCount;
            return this;
        }

        public Builder setMinInstanceCount(@Nullable Integer minInstanceCount) {
            this.minInstanceCount = Input.ofNullable(minInstanceCount);
            return this;
        }

        public Builder setTime(@Nullable Input<String> time) {
            this.time = time;
            return this;
        }

        public Builder setTime(@Nullable String time) {
            this.time = Input.ofNullable(time);
            return this;
        }

        public AutoscaleTimeAndCapacityArgs build() {
            return new AutoscaleTimeAndCapacityArgs(maxInstanceCount, minInstanceCount, time);
        }
    }
}
