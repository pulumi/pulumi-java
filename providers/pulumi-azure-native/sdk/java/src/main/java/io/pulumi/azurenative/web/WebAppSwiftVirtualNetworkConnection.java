// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.web.WebAppSwiftVirtualNetworkConnectionArgs;
import io.pulumi.azurenative.web.outputs.SystemDataResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.
 * API Version: 2020-10-01.
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:web:WebAppSwiftVirtualNetworkConnection myresource1 /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork 
 * ```
 * 
 */
@ResourceType(type="azure-native:web:WebAppSwiftVirtualNetworkConnection")
public class WebAppSwiftVirtualNetworkConnection extends io.pulumi.resources.CustomResource {
    /**
     * Kind of resource.
     * 
     */
    @OutputExport(name="kind", type=String.class, parameters={})
    private Output</* @Nullable */ String> kind;

    /**
     * @return Kind of resource.
     * 
     */
    public Output</* @Nullable */ String> getKind() {
        return this.kind;
    }
    /**
     * Resource Name.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource Name.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
     * 
     */
    @OutputExport(name="subnetResourceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> subnetResourceId;

    /**
     * @return The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
     * 
     */
    public Output</* @Nullable */ String> getSubnetResourceId() {
        return this.subnetResourceId;
    }
    /**
     * A flag that specifies if the scale unit this Web App is on supports Swift integration.
     * 
     */
    @OutputExport(name="swiftSupported", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> swiftSupported;

    /**
     * @return A flag that specifies if the scale unit this Web App is on supports Swift integration.
     * 
     */
    public Output</* @Nullable */ Boolean> getSwiftSupported() {
        return this.swiftSupported;
    }
    /**
     * The system metadata relating to this resource.
     * 
     */
    @OutputExport(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return The system metadata relating to this resource.
     * 
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * Resource type.
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    public interface BuilderApplicator {
        public void apply(WebAppSwiftVirtualNetworkConnectionArgs.Builder a);
    }
    private static io.pulumi.azurenative.web.WebAppSwiftVirtualNetworkConnectionArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.azurenative.web.WebAppSwiftVirtualNetworkConnectionArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public WebAppSwiftVirtualNetworkConnection(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WebAppSwiftVirtualNetworkConnection(String name) {
        this(name, WebAppSwiftVirtualNetworkConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WebAppSwiftVirtualNetworkConnection(String name, WebAppSwiftVirtualNetworkConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WebAppSwiftVirtualNetworkConnection(String name, WebAppSwiftVirtualNetworkConnectionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:web:WebAppSwiftVirtualNetworkConnection", name, args == null ? WebAppSwiftVirtualNetworkConnectionArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private WebAppSwiftVirtualNetworkConnection(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:web:WebAppSwiftVirtualNetworkConnection", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Output.of(Alias.builder().setType("azure-native:web/v20180201:WebAppSwiftVirtualNetworkConnection").build()),
                Output.of(Alias.builder().setType("azure-native:web/v20181101:WebAppSwiftVirtualNetworkConnection").build()),
                Output.of(Alias.builder().setType("azure-native:web/v20190801:WebAppSwiftVirtualNetworkConnection").build()),
                Output.of(Alias.builder().setType("azure-native:web/v20200601:WebAppSwiftVirtualNetworkConnection").build()),
                Output.of(Alias.builder().setType("azure-native:web/v20200901:WebAppSwiftVirtualNetworkConnection").build()),
                Output.of(Alias.builder().setType("azure-native:web/v20201001:WebAppSwiftVirtualNetworkConnection").build()),
                Output.of(Alias.builder().setType("azure-native:web/v20201201:WebAppSwiftVirtualNetworkConnection").build()),
                Output.of(Alias.builder().setType("azure-native:web/v20210101:WebAppSwiftVirtualNetworkConnection").build()),
                Output.of(Alias.builder().setType("azure-native:web/v20210115:WebAppSwiftVirtualNetworkConnection").build()),
                Output.of(Alias.builder().setType("azure-native:web/v20210201:WebAppSwiftVirtualNetworkConnection").build()),
                Output.of(Alias.builder().setType("azure-native:web/v20210301:WebAppSwiftVirtualNetworkConnection").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WebAppSwiftVirtualNetworkConnection get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new WebAppSwiftVirtualNetworkConnection(name, id, options);
    }
}
