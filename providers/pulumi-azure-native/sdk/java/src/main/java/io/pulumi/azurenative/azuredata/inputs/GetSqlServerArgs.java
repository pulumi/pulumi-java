// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azuredata.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSqlServerArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetSqlServerArgs Empty = new GetSqlServerArgs();

    /**
     * The child resources to include in the response.
     * 
     */
    @InputImport(name="expand")
      private final @Nullable String expand;

    public Optional<String> getExpand() {
        return this.expand == null ? Optional.empty() : Optional.ofNullable(this.expand);
    }

    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final String resourceGroupName;

    public String getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the SQL Server.
     * 
     */
    @InputImport(name="sqlServerName", required=true)
      private final String sqlServerName;

    public String getSqlServerName() {
        return this.sqlServerName;
    }

    /**
     * Name of the SQL Server registration.
     * 
     */
    @InputImport(name="sqlServerRegistrationName", required=true)
      private final String sqlServerRegistrationName;

    public String getSqlServerRegistrationName() {
        return this.sqlServerRegistrationName;
    }

    public GetSqlServerArgs(
        @Nullable String expand,
        String resourceGroupName,
        String sqlServerName,
        String sqlServerRegistrationName) {
        this.expand = expand;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sqlServerName = Objects.requireNonNull(sqlServerName, "expected parameter 'sqlServerName' to be non-null");
        this.sqlServerRegistrationName = Objects.requireNonNull(sqlServerRegistrationName, "expected parameter 'sqlServerRegistrationName' to be non-null");
    }

    private GetSqlServerArgs() {
        this.expand = null;
        this.resourceGroupName = null;
        this.sqlServerName = null;
        this.sqlServerRegistrationName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String expand;
        private String resourceGroupName;
        private String sqlServerName;
        private String sqlServerRegistrationName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSqlServerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expand = defaults.expand;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sqlServerName = defaults.sqlServerName;
    	      this.sqlServerRegistrationName = defaults.sqlServerRegistrationName;
        }

        public Builder expand(@Nullable String expand) {
            this.expand = expand;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder sqlServerName(String sqlServerName) {
            this.sqlServerName = Objects.requireNonNull(sqlServerName);
            return this;
        }

        public Builder sqlServerRegistrationName(String sqlServerRegistrationName) {
            this.sqlServerRegistrationName = Objects.requireNonNull(sqlServerRegistrationName);
            return this;
        }
        public GetSqlServerArgs build() {
            return new GetSqlServerArgs(expand, resourceGroupName, sqlServerName, sqlServerRegistrationName);
        }
    }
}
