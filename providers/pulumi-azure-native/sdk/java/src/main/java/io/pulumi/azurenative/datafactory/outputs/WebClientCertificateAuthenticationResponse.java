// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.outputs;

import io.pulumi.azurenative.datafactory.outputs.AzureKeyVaultSecretReferenceResponse;
import io.pulumi.azurenative.datafactory.outputs.SecureStringResponse;
import io.pulumi.core.Either;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class WebClientCertificateAuthenticationResponse {
    /**
     * Type of authentication used to connect to the web table source.
     * Expected value is 'ClientCertificate'.
     * 
     */
    private final String authenticationType;
    /**
     * Password for the PFX file.
     * 
     */
    private final Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password;
    /**
     * Base64-encoded contents of a PFX file.
     * 
     */
    private final Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> pfx;
    /**
     * The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
     * 
     */
    private final Object url;

    @OutputCustomType.Constructor({"authenticationType","password","pfx","url"})
    private WebClientCertificateAuthenticationResponse(
        String authenticationType,
        Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password,
        Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> pfx,
        Object url) {
        this.authenticationType = Objects.requireNonNull(authenticationType);
        this.password = Objects.requireNonNull(password);
        this.pfx = Objects.requireNonNull(pfx);
        this.url = Objects.requireNonNull(url);
    }

    /**
     * Type of authentication used to connect to the web table source.
     * Expected value is 'ClientCertificate'.
     * 
    */
    public String getAuthenticationType() {
        return this.authenticationType;
    }
    /**
     * Password for the PFX file.
     * 
    */
    public Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> getPassword() {
        return this.password;
    }
    /**
     * Base64-encoded contents of a PFX file.
     * 
    */
    public Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> getPfx() {
        return this.pfx;
    }
    /**
     * The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
     * 
    */
    public Object getUrl() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebClientCertificateAuthenticationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authenticationType;
        private Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password;
        private Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> pfx;
        private Object url;

        public Builder() {
    	      // Empty
        }

        public Builder(WebClientCertificateAuthenticationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationType = defaults.authenticationType;
    	      this.password = defaults.password;
    	      this.pfx = defaults.pfx;
    	      this.url = defaults.url;
        }

        public Builder setAuthenticationType(String authenticationType) {
            this.authenticationType = Objects.requireNonNull(authenticationType);
            return this;
        }

        public Builder setPassword(Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }

        public Builder setPfx(Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> pfx) {
            this.pfx = Objects.requireNonNull(pfx);
            return this;
        }

        public Builder setUrl(Object url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public WebClientCertificateAuthenticationResponse build() {
            return new WebClientCertificateAuthenticationResponse(authenticationType, password, pfx, url);
        }
    }
}
