// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.labservices.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Connection profile for how users connect to lab virtual machines.
 * 
 */
public final class ConnectionProfileResponse extends io.pulumi.resources.InvokeArgs {

    public static final ConnectionProfileResponse Empty = new ConnectionProfileResponse();

    /**
     * The enabled access level for Client Access over RDP.
     * 
     */
    @InputImport(name="clientRdpAccess")
      private final @Nullable String clientRdpAccess;

    public Optional<String> getClientRdpAccess() {
        return this.clientRdpAccess == null ? Optional.empty() : Optional.ofNullable(this.clientRdpAccess);
    }

    /**
     * The enabled access level for Client Access over SSH.
     * 
     */
    @InputImport(name="clientSshAccess")
      private final @Nullable String clientSshAccess;

    public Optional<String> getClientSshAccess() {
        return this.clientSshAccess == null ? Optional.empty() : Optional.ofNullable(this.clientSshAccess);
    }

    /**
     * The enabled access level for Web Access over RDP.
     * 
     */
    @InputImport(name="webRdpAccess")
      private final @Nullable String webRdpAccess;

    public Optional<String> getWebRdpAccess() {
        return this.webRdpAccess == null ? Optional.empty() : Optional.ofNullable(this.webRdpAccess);
    }

    /**
     * The enabled access level for Web Access over SSH.
     * 
     */
    @InputImport(name="webSshAccess")
      private final @Nullable String webSshAccess;

    public Optional<String> getWebSshAccess() {
        return this.webSshAccess == null ? Optional.empty() : Optional.ofNullable(this.webSshAccess);
    }

    public ConnectionProfileResponse(
        @Nullable String clientRdpAccess,
        @Nullable String clientSshAccess,
        @Nullable String webRdpAccess,
        @Nullable String webSshAccess) {
        this.clientRdpAccess = clientRdpAccess == null ? "None" : clientRdpAccess;
        this.clientSshAccess = clientSshAccess == null ? "None" : clientSshAccess;
        this.webRdpAccess = webRdpAccess == null ? "None" : webRdpAccess;
        this.webSshAccess = webSshAccess == null ? "None" : webSshAccess;
    }

    private ConnectionProfileResponse() {
        this.clientRdpAccess = null;
        this.clientSshAccess = null;
        this.webRdpAccess = null;
        this.webSshAccess = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String clientRdpAccess;
        private @Nullable String clientSshAccess;
        private @Nullable String webRdpAccess;
        private @Nullable String webSshAccess;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientRdpAccess = defaults.clientRdpAccess;
    	      this.clientSshAccess = defaults.clientSshAccess;
    	      this.webRdpAccess = defaults.webRdpAccess;
    	      this.webSshAccess = defaults.webSshAccess;
        }

        public Builder clientRdpAccess(@Nullable String clientRdpAccess) {
            this.clientRdpAccess = clientRdpAccess;
            return this;
        }

        public Builder clientSshAccess(@Nullable String clientSshAccess) {
            this.clientSshAccess = clientSshAccess;
            return this;
        }

        public Builder webRdpAccess(@Nullable String webRdpAccess) {
            this.webRdpAccess = webRdpAccess;
            return this;
        }

        public Builder webSshAccess(@Nullable String webSshAccess) {
            this.webSshAccess = webSshAccess;
            return this;
        }
        public ConnectionProfileResponse build() {
            return new ConnectionProfileResponse(clientRdpAccess, clientSshAccess, webRdpAccess, webSshAccess);
        }
    }
}
