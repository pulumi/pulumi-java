// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearning.inputs;

import io.pulumi.azurenative.machinelearning.inputs.WebServiceParameterArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time.
 * 
 */
public final class GraphNodeArgs extends io.pulumi.resources.ResourceArgs {

    public static final GraphNodeArgs Empty = new GraphNodeArgs();

    /**
     * The id of the asset represented by this node.
     * 
     */
    @Import(name="assetId")
      private final @Nullable Output<String> assetId;

    public Output<String> getAssetId() {
        return this.assetId == null ? Output.empty() : this.assetId;
    }

    /**
     * The id of the input element represented by this node.
     * 
     */
    @Import(name="inputId")
      private final @Nullable Output<String> inputId;

    public Output<String> getInputId() {
        return this.inputId == null ? Output.empty() : this.inputId;
    }

    /**
     * The id of the output element represented by this node.
     * 
     */
    @Import(name="outputId")
      private final @Nullable Output<String> outputId;

    public Output<String> getOutputId() {
        return this.outputId == null ? Output.empty() : this.outputId;
    }

    /**
     * If applicable, parameters of the node. Global graph parameters map into these, with values set at runtime.
     * 
     */
    @Import(name="parameters")
      private final @Nullable Output<Map<String,WebServiceParameterArgs>> parameters;

    public Output<Map<String,WebServiceParameterArgs>> getParameters() {
        return this.parameters == null ? Output.empty() : this.parameters;
    }

    public GraphNodeArgs(
        @Nullable Output<String> assetId,
        @Nullable Output<String> inputId,
        @Nullable Output<String> outputId,
        @Nullable Output<Map<String,WebServiceParameterArgs>> parameters) {
        this.assetId = assetId;
        this.inputId = inputId;
        this.outputId = outputId;
        this.parameters = parameters;
    }

    private GraphNodeArgs() {
        this.assetId = Output.empty();
        this.inputId = Output.empty();
        this.outputId = Output.empty();
        this.parameters = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GraphNodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> assetId;
        private @Nullable Output<String> inputId;
        private @Nullable Output<String> outputId;
        private @Nullable Output<Map<String,WebServiceParameterArgs>> parameters;

        public Builder() {
    	      // Empty
        }

        public Builder(GraphNodeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetId = defaults.assetId;
    	      this.inputId = defaults.inputId;
    	      this.outputId = defaults.outputId;
    	      this.parameters = defaults.parameters;
        }

        public Builder assetId(@Nullable Output<String> assetId) {
            this.assetId = assetId;
            return this;
        }
        public Builder assetId(@Nullable String assetId) {
            this.assetId = Output.ofNullable(assetId);
            return this;
        }
        public Builder inputId(@Nullable Output<String> inputId) {
            this.inputId = inputId;
            return this;
        }
        public Builder inputId(@Nullable String inputId) {
            this.inputId = Output.ofNullable(inputId);
            return this;
        }
        public Builder outputId(@Nullable Output<String> outputId) {
            this.outputId = outputId;
            return this;
        }
        public Builder outputId(@Nullable String outputId) {
            this.outputId = Output.ofNullable(outputId);
            return this;
        }
        public Builder parameters(@Nullable Output<Map<String,WebServiceParameterArgs>> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(@Nullable Map<String,WebServiceParameterArgs> parameters) {
            this.parameters = Output.ofNullable(parameters);
            return this;
        }        public GraphNodeArgs build() {
            return new GraphNodeArgs(assetId, inputId, outputId, parameters);
        }
    }
}
