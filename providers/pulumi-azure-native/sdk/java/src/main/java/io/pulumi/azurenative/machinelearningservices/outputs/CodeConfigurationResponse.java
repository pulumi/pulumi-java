// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class CodeConfigurationResponse {
    /**
     * ARM resource ID of the code asset.
     * 
     */
    private final @Nullable String codeId;
    /**
     * The script to execute on startup. eg. "score.py"
     * 
     */
    private final String scoringScript;

    @OutputCustomType.Constructor
    private CodeConfigurationResponse(
        @OutputCustomType.Parameter("codeId") @Nullable String codeId,
        @OutputCustomType.Parameter("scoringScript") String scoringScript) {
        this.codeId = codeId;
        this.scoringScript = scoringScript;
    }

    /**
     * ARM resource ID of the code asset.
     * 
    */
    public Optional<String> getCodeId() {
        return Optional.ofNullable(this.codeId);
    }
    /**
     * The script to execute on startup. eg. "score.py"
     * 
    */
    public String getScoringScript() {
        return this.scoringScript;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CodeConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String codeId;
        private String scoringScript;

        public Builder() {
    	      // Empty
        }

        public Builder(CodeConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.codeId = defaults.codeId;
    	      this.scoringScript = defaults.scoringScript;
        }

        public Builder setCodeId(@Nullable String codeId) {
            this.codeId = codeId;
            return this;
        }

        public Builder setScoringScript(String scoringScript) {
            this.scoringScript = Objects.requireNonNull(scoringScript);
            return this;
        }
        public CodeConfigurationResponse build() {
            return new CodeConfigurationResponse(codeId, scoringScript);
        }
    }
}
