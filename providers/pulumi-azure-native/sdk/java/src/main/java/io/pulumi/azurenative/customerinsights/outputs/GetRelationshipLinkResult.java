// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.outputs;

import io.pulumi.azurenative.customerinsights.outputs.ParticipantProfilePropertyReferenceResponse;
import io.pulumi.azurenative.customerinsights.outputs.RelationshipLinkFieldMappingResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetRelationshipLinkResult {
    /**
     * Localized descriptions for the Relationship Link.
     * 
     */
    private final @Nullable Map<String,String> description;
    /**
     * Localized display name for the Relationship Link.
     * 
     */
    private final @Nullable Map<String,String> displayName;
    /**
     * Resource ID.
     * 
     */
    private final String id;
    /**
     * The InteractionType associated with the Relationship Link.
     * 
     */
    private final String interactionType;
    /**
     * The name of the Relationship Link.
     * 
     */
    private final String linkName;
    /**
     * The mappings between Interaction and Relationship fields.
     * 
     */
    private final @Nullable List<RelationshipLinkFieldMappingResponse> mappings;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * The property references for the Profile of the Relationship.
     * 
     */
    private final List<ParticipantProfilePropertyReferenceResponse> profilePropertyReferences;
    /**
     * Provisioning state.
     * 
     */
    private final String provisioningState;
    /**
     * The property references for the Related Profile of the Relationship.
     * 
     */
    private final List<ParticipantProfilePropertyReferenceResponse> relatedProfilePropertyReferences;
    /**
     * The relationship guid id.
     * 
     */
    private final String relationshipGuidId;
    /**
     * The Relationship associated with the Link.
     * 
     */
    private final String relationshipName;
    /**
     * The hub name.
     * 
     */
    private final String tenantId;
    /**
     * Resource type.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"description","displayName","id","interactionType","linkName","mappings","name","profilePropertyReferences","provisioningState","relatedProfilePropertyReferences","relationshipGuidId","relationshipName","tenantId","type"})
    private GetRelationshipLinkResult(
        @Nullable Map<String,String> description,
        @Nullable Map<String,String> displayName,
        String id,
        String interactionType,
        String linkName,
        @Nullable List<RelationshipLinkFieldMappingResponse> mappings,
        String name,
        List<ParticipantProfilePropertyReferenceResponse> profilePropertyReferences,
        String provisioningState,
        List<ParticipantProfilePropertyReferenceResponse> relatedProfilePropertyReferences,
        String relationshipGuidId,
        String relationshipName,
        String tenantId,
        String type) {
        this.description = description;
        this.displayName = displayName;
        this.id = Objects.requireNonNull(id);
        this.interactionType = Objects.requireNonNull(interactionType);
        this.linkName = Objects.requireNonNull(linkName);
        this.mappings = mappings;
        this.name = Objects.requireNonNull(name);
        this.profilePropertyReferences = Objects.requireNonNull(profilePropertyReferences);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.relatedProfilePropertyReferences = Objects.requireNonNull(relatedProfilePropertyReferences);
        this.relationshipGuidId = Objects.requireNonNull(relationshipGuidId);
        this.relationshipName = Objects.requireNonNull(relationshipName);
        this.tenantId = Objects.requireNonNull(tenantId);
        this.type = Objects.requireNonNull(type);
    }

    /**
     * Localized descriptions for the Relationship Link.
     * 
    */
    public Map<String,String> getDescription() {
        return this.description == null ? Map.of() : this.description;
    }
    /**
     * Localized display name for the Relationship Link.
     * 
    */
    public Map<String,String> getDisplayName() {
        return this.displayName == null ? Map.of() : this.displayName;
    }
    /**
     * Resource ID.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * The InteractionType associated with the Relationship Link.
     * 
    */
    public String getInteractionType() {
        return this.interactionType;
    }
    /**
     * The name of the Relationship Link.
     * 
    */
    public String getLinkName() {
        return this.linkName;
    }
    /**
     * The mappings between Interaction and Relationship fields.
     * 
    */
    public List<RelationshipLinkFieldMappingResponse> getMappings() {
        return this.mappings == null ? List.of() : this.mappings;
    }
    /**
     * Resource name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The property references for the Profile of the Relationship.
     * 
    */
    public List<ParticipantProfilePropertyReferenceResponse> getProfilePropertyReferences() {
        return this.profilePropertyReferences;
    }
    /**
     * Provisioning state.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The property references for the Related Profile of the Relationship.
     * 
    */
    public List<ParticipantProfilePropertyReferenceResponse> getRelatedProfilePropertyReferences() {
        return this.relatedProfilePropertyReferences;
    }
    /**
     * The relationship guid id.
     * 
    */
    public String getRelationshipGuidId() {
        return this.relationshipGuidId;
    }
    /**
     * The Relationship associated with the Link.
     * 
    */
    public String getRelationshipName() {
        return this.relationshipName;
    }
    /**
     * The hub name.
     * 
    */
    public String getTenantId() {
        return this.tenantId;
    }
    /**
     * Resource type.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRelationshipLinkResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Map<String,String> description;
        private @Nullable Map<String,String> displayName;
        private String id;
        private String interactionType;
        private String linkName;
        private @Nullable List<RelationshipLinkFieldMappingResponse> mappings;
        private String name;
        private List<ParticipantProfilePropertyReferenceResponse> profilePropertyReferences;
        private String provisioningState;
        private List<ParticipantProfilePropertyReferenceResponse> relatedProfilePropertyReferences;
        private String relationshipGuidId;
        private String relationshipName;
        private String tenantId;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRelationshipLinkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.interactionType = defaults.interactionType;
    	      this.linkName = defaults.linkName;
    	      this.mappings = defaults.mappings;
    	      this.name = defaults.name;
    	      this.profilePropertyReferences = defaults.profilePropertyReferences;
    	      this.provisioningState = defaults.provisioningState;
    	      this.relatedProfilePropertyReferences = defaults.relatedProfilePropertyReferences;
    	      this.relationshipGuidId = defaults.relationshipGuidId;
    	      this.relationshipName = defaults.relationshipName;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
        }

        public Builder setDescription(@Nullable Map<String,String> description) {
            this.description = description;
            return this;
        }

        public Builder setDisplayName(@Nullable Map<String,String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInteractionType(String interactionType) {
            this.interactionType = Objects.requireNonNull(interactionType);
            return this;
        }

        public Builder setLinkName(String linkName) {
            this.linkName = Objects.requireNonNull(linkName);
            return this;
        }

        public Builder setMappings(@Nullable List<RelationshipLinkFieldMappingResponse> mappings) {
            this.mappings = mappings;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProfilePropertyReferences(List<ParticipantProfilePropertyReferenceResponse> profilePropertyReferences) {
            this.profilePropertyReferences = Objects.requireNonNull(profilePropertyReferences);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRelatedProfilePropertyReferences(List<ParticipantProfilePropertyReferenceResponse> relatedProfilePropertyReferences) {
            this.relatedProfilePropertyReferences = Objects.requireNonNull(relatedProfilePropertyReferences);
            return this;
        }

        public Builder setRelationshipGuidId(String relationshipGuidId) {
            this.relationshipGuidId = Objects.requireNonNull(relationshipGuidId);
            return this;
        }

        public Builder setRelationshipName(String relationshipName) {
            this.relationshipName = Objects.requireNonNull(relationshipName);
            return this;
        }

        public Builder setTenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetRelationshipLinkResult build() {
            return new GetRelationshipLinkResult(description, displayName, id, interactionType, linkName, mappings, name, profilePropertyReferences, provisioningState, relatedProfilePropertyReferences, relationshipGuidId, relationshipName, tenantId, type);
        }
    }
}
