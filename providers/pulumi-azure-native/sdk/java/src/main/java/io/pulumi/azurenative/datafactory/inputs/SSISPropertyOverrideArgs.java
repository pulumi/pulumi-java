// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Object;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * SSIS property override.
 * 
 */
public final class SSISPropertyOverrideArgs extends io.pulumi.resources.ResourceArgs {

    public static final SSISPropertyOverrideArgs Empty = new SSISPropertyOverrideArgs();

    /**
     * Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true
     * 
     */
    @Import(name="isSensitive")
      private final @Nullable Output<Boolean> isSensitive;

    public Output<Boolean> isSensitive() {
        return this.isSensitive == null ? Codegen.empty() : this.isSensitive;
    }

    /**
     * SSIS package property override value. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="value", required=true)
      private final Output<Object> value;

    public Output<Object> value() {
        return this.value;
    }

    public SSISPropertyOverrideArgs(
        @Nullable Output<Boolean> isSensitive,
        Output<Object> value) {
        this.isSensitive = isSensitive;
        this.value = Objects.requireNonNull(value, "expected parameter 'value' to be non-null");
    }

    private SSISPropertyOverrideArgs() {
        this.isSensitive = Codegen.empty();
        this.value = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SSISPropertyOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> isSensitive;
        private Output<Object> value;

        public Builder() {
    	      // Empty
        }

        public Builder(SSISPropertyOverrideArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isSensitive = defaults.isSensitive;
    	      this.value = defaults.value;
        }

        public Builder isSensitive(@Nullable Output<Boolean> isSensitive) {
            this.isSensitive = isSensitive;
            return this;
        }
        public Builder isSensitive(@Nullable Boolean isSensitive) {
            this.isSensitive = Codegen.ofNullable(isSensitive);
            return this;
        }
        public Builder value(Output<Object> value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public Builder value(Object value) {
            this.value = Output.of(Objects.requireNonNull(value));
            return this;
        }        public SSISPropertyOverrideArgs build() {
            return new SSISPropertyOverrideArgs(isSensitive, value);
        }
    }
}
