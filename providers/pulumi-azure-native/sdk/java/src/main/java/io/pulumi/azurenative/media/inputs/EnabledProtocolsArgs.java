// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.util.Objects;


/**
 * Class to specify which protocols are enabled
 * 
 */
public final class EnabledProtocolsArgs extends io.pulumi.resources.ResourceArgs {

    public static final EnabledProtocolsArgs Empty = new EnabledProtocolsArgs();

    /**
     * Enable DASH protocol or not
     * 
     */
    @InputImport(name="dash", required=true)
      private final Input<Boolean> dash;

    public Input<Boolean> getDash() {
        return this.dash;
    }

    /**
     * Enable Download protocol or not
     * 
     */
    @InputImport(name="download", required=true)
      private final Input<Boolean> download;

    public Input<Boolean> getDownload() {
        return this.download;
    }

    /**
     * Enable HLS protocol or not
     * 
     */
    @InputImport(name="hls", required=true)
      private final Input<Boolean> hls;

    public Input<Boolean> getHls() {
        return this.hls;
    }

    /**
     * Enable SmoothStreaming protocol or not
     * 
     */
    @InputImport(name="smoothStreaming", required=true)
      private final Input<Boolean> smoothStreaming;

    public Input<Boolean> getSmoothStreaming() {
        return this.smoothStreaming;
    }

    public EnabledProtocolsArgs(
        Input<Boolean> dash,
        Input<Boolean> download,
        Input<Boolean> hls,
        Input<Boolean> smoothStreaming) {
        this.dash = Objects.requireNonNull(dash, "expected parameter 'dash' to be non-null");
        this.download = Objects.requireNonNull(download, "expected parameter 'download' to be non-null");
        this.hls = Objects.requireNonNull(hls, "expected parameter 'hls' to be non-null");
        this.smoothStreaming = Objects.requireNonNull(smoothStreaming, "expected parameter 'smoothStreaming' to be non-null");
    }

    private EnabledProtocolsArgs() {
        this.dash = Input.empty();
        this.download = Input.empty();
        this.hls = Input.empty();
        this.smoothStreaming = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnabledProtocolsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Boolean> dash;
        private Input<Boolean> download;
        private Input<Boolean> hls;
        private Input<Boolean> smoothStreaming;

        public Builder() {
    	      // Empty
        }

        public Builder(EnabledProtocolsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dash = defaults.dash;
    	      this.download = defaults.download;
    	      this.hls = defaults.hls;
    	      this.smoothStreaming = defaults.smoothStreaming;
        }

        public Builder setDash(Input<Boolean> dash) {
            this.dash = Objects.requireNonNull(dash);
            return this;
        }

        public Builder setDash(Boolean dash) {
            this.dash = Input.of(Objects.requireNonNull(dash));
            return this;
        }

        public Builder setDownload(Input<Boolean> download) {
            this.download = Objects.requireNonNull(download);
            return this;
        }

        public Builder setDownload(Boolean download) {
            this.download = Input.of(Objects.requireNonNull(download));
            return this;
        }

        public Builder setHls(Input<Boolean> hls) {
            this.hls = Objects.requireNonNull(hls);
            return this;
        }

        public Builder setHls(Boolean hls) {
            this.hls = Input.of(Objects.requireNonNull(hls));
            return this;
        }

        public Builder setSmoothStreaming(Input<Boolean> smoothStreaming) {
            this.smoothStreaming = Objects.requireNonNull(smoothStreaming);
            return this;
        }

        public Builder setSmoothStreaming(Boolean smoothStreaming) {
            this.smoothStreaming = Input.of(Objects.requireNonNull(smoothStreaming));
            return this;
        }
        public EnabledProtocolsArgs build() {
            return new EnabledProtocolsArgs(dash, download, hls, smoothStreaming);
        }
    }
}
