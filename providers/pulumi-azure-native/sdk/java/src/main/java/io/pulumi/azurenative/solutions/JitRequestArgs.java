// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.solutions;

import io.pulumi.azurenative.solutions.inputs.JitAuthorizationPoliciesArgs;
import io.pulumi.azurenative.solutions.inputs.JitSchedulingPolicyArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JitRequestArgs extends io.pulumi.resources.ResourceArgs {

    public static final JitRequestArgs Empty = new JitRequestArgs();

    /**
     * The parent application id.
     * 
     */
    @Import(name="applicationResourceId", required=true)
      private final Output<String> applicationResourceId;

    public Output<String> applicationResourceId() {
        return this.applicationResourceId;
    }

    /**
     * The JIT authorization policies.
     * 
     */
    @Import(name="jitAuthorizationPolicies", required=true)
      private final Output<List<JitAuthorizationPoliciesArgs>> jitAuthorizationPolicies;

    public Output<List<JitAuthorizationPoliciesArgs>> jitAuthorizationPolicies() {
        return this.jitAuthorizationPolicies;
    }

    /**
     * The name of the JIT request.
     * 
     */
    @Import(name="jitRequestName")
      private final @Nullable Output<String> jitRequestName;

    public Output<String> jitRequestName() {
        return this.jitRequestName == null ? Codegen.empty() : this.jitRequestName;
    }

    /**
     * The JIT request properties.
     * 
     */
    @Import(name="jitSchedulingPolicy", required=true)
      private final Output<JitSchedulingPolicyArgs> jitSchedulingPolicy;

    public Output<JitSchedulingPolicyArgs> jitSchedulingPolicy() {
        return this.jitSchedulingPolicy;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public JitRequestArgs(
        Output<String> applicationResourceId,
        Output<List<JitAuthorizationPoliciesArgs>> jitAuthorizationPolicies,
        @Nullable Output<String> jitRequestName,
        Output<JitSchedulingPolicyArgs> jitSchedulingPolicy,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.applicationResourceId = Objects.requireNonNull(applicationResourceId, "expected parameter 'applicationResourceId' to be non-null");
        this.jitAuthorizationPolicies = Objects.requireNonNull(jitAuthorizationPolicies, "expected parameter 'jitAuthorizationPolicies' to be non-null");
        this.jitRequestName = jitRequestName;
        this.jitSchedulingPolicy = Objects.requireNonNull(jitSchedulingPolicy, "expected parameter 'jitSchedulingPolicy' to be non-null");
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private JitRequestArgs() {
        this.applicationResourceId = Codegen.empty();
        this.jitAuthorizationPolicies = Codegen.empty();
        this.jitRequestName = Codegen.empty();
        this.jitSchedulingPolicy = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JitRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> applicationResourceId;
        private Output<List<JitAuthorizationPoliciesArgs>> jitAuthorizationPolicies;
        private @Nullable Output<String> jitRequestName;
        private Output<JitSchedulingPolicyArgs> jitSchedulingPolicy;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(JitRequestArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationResourceId = defaults.applicationResourceId;
    	      this.jitAuthorizationPolicies = defaults.jitAuthorizationPolicies;
    	      this.jitRequestName = defaults.jitRequestName;
    	      this.jitSchedulingPolicy = defaults.jitSchedulingPolicy;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder applicationResourceId(Output<String> applicationResourceId) {
            this.applicationResourceId = Objects.requireNonNull(applicationResourceId);
            return this;
        }
        public Builder applicationResourceId(String applicationResourceId) {
            this.applicationResourceId = Output.of(Objects.requireNonNull(applicationResourceId));
            return this;
        }
        public Builder jitAuthorizationPolicies(Output<List<JitAuthorizationPoliciesArgs>> jitAuthorizationPolicies) {
            this.jitAuthorizationPolicies = Objects.requireNonNull(jitAuthorizationPolicies);
            return this;
        }
        public Builder jitAuthorizationPolicies(List<JitAuthorizationPoliciesArgs> jitAuthorizationPolicies) {
            this.jitAuthorizationPolicies = Output.of(Objects.requireNonNull(jitAuthorizationPolicies));
            return this;
        }
        public Builder jitAuthorizationPolicies(JitAuthorizationPoliciesArgs... jitAuthorizationPolicies) {
            return jitAuthorizationPolicies(List.of(jitAuthorizationPolicies));
        }
        public Builder jitRequestName(@Nullable Output<String> jitRequestName) {
            this.jitRequestName = jitRequestName;
            return this;
        }
        public Builder jitRequestName(@Nullable String jitRequestName) {
            this.jitRequestName = Codegen.ofNullable(jitRequestName);
            return this;
        }
        public Builder jitSchedulingPolicy(Output<JitSchedulingPolicyArgs> jitSchedulingPolicy) {
            this.jitSchedulingPolicy = Objects.requireNonNull(jitSchedulingPolicy);
            return this;
        }
        public Builder jitSchedulingPolicy(JitSchedulingPolicyArgs jitSchedulingPolicy) {
            this.jitSchedulingPolicy = Output.of(Objects.requireNonNull(jitSchedulingPolicy));
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public JitRequestArgs build() {
            return new JitRequestArgs(applicationResourceId, jitAuthorizationPolicies, jitRequestName, jitSchedulingPolicy, location, resourceGroupName, tags);
        }
    }
}
