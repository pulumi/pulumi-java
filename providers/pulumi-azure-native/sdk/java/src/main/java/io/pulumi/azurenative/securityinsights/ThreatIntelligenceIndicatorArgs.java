// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights;

import io.pulumi.azurenative.securityinsights.enums.ThreatIntelligenceResourceKind;
import io.pulumi.azurenative.securityinsights.inputs.ThreatIntelligenceExternalReferenceArgs;
import io.pulumi.azurenative.securityinsights.inputs.ThreatIntelligenceGranularMarkingModelArgs;
import io.pulumi.azurenative.securityinsights.inputs.ThreatIntelligenceKillChainPhaseArgs;
import io.pulumi.azurenative.securityinsights.inputs.ThreatIntelligenceParsedPatternArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ThreatIntelligenceIndicatorArgs extends io.pulumi.resources.ResourceArgs {

    public static final ThreatIntelligenceIndicatorArgs Empty = new ThreatIntelligenceIndicatorArgs();

    /**
     * Confidence of threat intelligence entity
     * 
     */
    @Import(name="confidence")
      private final @Nullable Output<Integer> confidence;

    public Output<Integer> confidence() {
        return this.confidence == null ? Codegen.empty() : this.confidence;
    }

    /**
     * Created by
     * 
     */
    @Import(name="created")
      private final @Nullable Output<String> created;

    public Output<String> created() {
        return this.created == null ? Codegen.empty() : this.created;
    }

    /**
     * Created by reference of threat intelligence entity
     * 
     */
    @Import(name="createdByRef")
      private final @Nullable Output<String> createdByRef;

    public Output<String> createdByRef() {
        return this.createdByRef == null ? Codegen.empty() : this.createdByRef;
    }

    /**
     * Is threat intelligence entity defanged
     * 
     */
    @Import(name="defanged")
      private final @Nullable Output<Boolean> defanged;

    public Output<Boolean> defanged() {
        return this.defanged == null ? Codegen.empty() : this.defanged;
    }

    /**
     * Description of a threat intelligence entity
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Display name of a threat intelligence entity
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName == null ? Codegen.empty() : this.displayName;
    }

    /**
     * Extensions map
     * 
     */
    @Import(name="extensions")
      private final @Nullable Output<Object> extensions;

    public Output<Object> extensions() {
        return this.extensions == null ? Codegen.empty() : this.extensions;
    }

    /**
     * External ID of threat intelligence entity
     * 
     */
    @Import(name="externalId")
      private final @Nullable Output<String> externalId;

    public Output<String> externalId() {
        return this.externalId == null ? Codegen.empty() : this.externalId;
    }

    /**
     * External last updated time in UTC
     * 
     */
    @Import(name="externalLastUpdatedTimeUtc")
      private final @Nullable Output<String> externalLastUpdatedTimeUtc;

    public Output<String> externalLastUpdatedTimeUtc() {
        return this.externalLastUpdatedTimeUtc == null ? Codegen.empty() : this.externalLastUpdatedTimeUtc;
    }

    /**
     * External References
     * 
     */
    @Import(name="externalReferences")
      private final @Nullable Output<List<ThreatIntelligenceExternalReferenceArgs>> externalReferences;

    public Output<List<ThreatIntelligenceExternalReferenceArgs>> externalReferences() {
        return this.externalReferences == null ? Codegen.empty() : this.externalReferences;
    }

    /**
     * Granular Markings
     * 
     */
    @Import(name="granularMarkings")
      private final @Nullable Output<List<ThreatIntelligenceGranularMarkingModelArgs>> granularMarkings;

    public Output<List<ThreatIntelligenceGranularMarkingModelArgs>> granularMarkings() {
        return this.granularMarkings == null ? Codegen.empty() : this.granularMarkings;
    }

    /**
     * Indicator types of threat intelligence entities
     * 
     */
    @Import(name="indicatorTypes")
      private final @Nullable Output<List<String>> indicatorTypes;

    public Output<List<String>> indicatorTypes() {
        return this.indicatorTypes == null ? Codegen.empty() : this.indicatorTypes;
    }

    /**
     * Kill chain phases
     * 
     */
    @Import(name="killChainPhases")
      private final @Nullable Output<List<ThreatIntelligenceKillChainPhaseArgs>> killChainPhases;

    public Output<List<ThreatIntelligenceKillChainPhaseArgs>> killChainPhases() {
        return this.killChainPhases == null ? Codegen.empty() : this.killChainPhases;
    }

    /**
     * The kind of the entity.
     * 
     */
    @Import(name="kind", required=true)
      private final Output<Either<String,ThreatIntelligenceResourceKind>> kind;

    public Output<Either<String,ThreatIntelligenceResourceKind>> kind() {
        return this.kind;
    }

    /**
     * Labels  of threat intelligence entity
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<List<String>> labels;

    public Output<List<String>> labels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    /**
     * Language of threat intelligence entity
     * 
     */
    @Import(name="language")
      private final @Nullable Output<String> language;

    public Output<String> language() {
        return this.language == null ? Codegen.empty() : this.language;
    }

    /**
     * Last updated time in UTC
     * 
     */
    @Import(name="lastUpdatedTimeUtc")
      private final @Nullable Output<String> lastUpdatedTimeUtc;

    public Output<String> lastUpdatedTimeUtc() {
        return this.lastUpdatedTimeUtc == null ? Codegen.empty() : this.lastUpdatedTimeUtc;
    }

    /**
     * Modified by
     * 
     */
    @Import(name="modified")
      private final @Nullable Output<String> modified;

    public Output<String> modified() {
        return this.modified == null ? Codegen.empty() : this.modified;
    }

    /**
     * Threat intelligence indicator name field.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Threat intelligence entity object marking references
     * 
     */
    @Import(name="objectMarkingRefs")
      private final @Nullable Output<List<String>> objectMarkingRefs;

    public Output<List<String>> objectMarkingRefs() {
        return this.objectMarkingRefs == null ? Codegen.empty() : this.objectMarkingRefs;
    }

    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     * 
     */
    @Import(name="operationalInsightsResourceProvider", required=true)
      private final Output<String> operationalInsightsResourceProvider;

    public Output<String> operationalInsightsResourceProvider() {
        return this.operationalInsightsResourceProvider;
    }

    /**
     * Parsed patterns
     * 
     */
    @Import(name="parsedPattern")
      private final @Nullable Output<List<ThreatIntelligenceParsedPatternArgs>> parsedPattern;

    public Output<List<ThreatIntelligenceParsedPatternArgs>> parsedPattern() {
        return this.parsedPattern == null ? Codegen.empty() : this.parsedPattern;
    }

    /**
     * Pattern of a threat intelligence entity
     * 
     */
    @Import(name="pattern")
      private final @Nullable Output<String> pattern;

    public Output<String> pattern() {
        return this.pattern == null ? Codegen.empty() : this.pattern;
    }

    /**
     * Pattern type of a threat intelligence entity
     * 
     */
    @Import(name="patternType")
      private final @Nullable Output<String> patternType;

    public Output<String> patternType() {
        return this.patternType == null ? Codegen.empty() : this.patternType;
    }

    /**
     * Pattern version of a threat intelligence entity
     * 
     */
    @Import(name="patternVersion")
      private final @Nullable Output<String> patternVersion;

    public Output<String> patternVersion() {
        return this.patternVersion == null ? Codegen.empty() : this.patternVersion;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Is threat intelligence entity revoked
     * 
     */
    @Import(name="revoked")
      private final @Nullable Output<Boolean> revoked;

    public Output<Boolean> revoked() {
        return this.revoked == null ? Codegen.empty() : this.revoked;
    }

    /**
     * Source of a threat intelligence entity
     * 
     */
    @Import(name="source")
      private final @Nullable Output<String> source;

    public Output<String> source() {
        return this.source == null ? Codegen.empty() : this.source;
    }

    /**
     * List of tags
     * 
     */
    @Import(name="threatIntelligenceTags")
      private final @Nullable Output<List<String>> threatIntelligenceTags;

    public Output<List<String>> threatIntelligenceTags() {
        return this.threatIntelligenceTags == null ? Codegen.empty() : this.threatIntelligenceTags;
    }

    /**
     * Threat types
     * 
     */
    @Import(name="threatTypes")
      private final @Nullable Output<List<String>> threatTypes;

    public Output<List<String>> threatTypes() {
        return this.threatTypes == null ? Codegen.empty() : this.threatTypes;
    }

    /**
     * Valid from
     * 
     */
    @Import(name="validFrom")
      private final @Nullable Output<String> validFrom;

    public Output<String> validFrom() {
        return this.validFrom == null ? Codegen.empty() : this.validFrom;
    }

    /**
     * Valid until
     * 
     */
    @Import(name="validUntil")
      private final @Nullable Output<String> validUntil;

    public Output<String> validUntil() {
        return this.validUntil == null ? Codegen.empty() : this.validUntil;
    }

    /**
     * The name of the workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
      private final Output<String> workspaceName;

    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    public ThreatIntelligenceIndicatorArgs(
        @Nullable Output<Integer> confidence,
        @Nullable Output<String> created,
        @Nullable Output<String> createdByRef,
        @Nullable Output<Boolean> defanged,
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        @Nullable Output<Object> extensions,
        @Nullable Output<String> externalId,
        @Nullable Output<String> externalLastUpdatedTimeUtc,
        @Nullable Output<List<ThreatIntelligenceExternalReferenceArgs>> externalReferences,
        @Nullable Output<List<ThreatIntelligenceGranularMarkingModelArgs>> granularMarkings,
        @Nullable Output<List<String>> indicatorTypes,
        @Nullable Output<List<ThreatIntelligenceKillChainPhaseArgs>> killChainPhases,
        Output<Either<String,ThreatIntelligenceResourceKind>> kind,
        @Nullable Output<List<String>> labels,
        @Nullable Output<String> language,
        @Nullable Output<String> lastUpdatedTimeUtc,
        @Nullable Output<String> modified,
        @Nullable Output<String> name,
        @Nullable Output<List<String>> objectMarkingRefs,
        Output<String> operationalInsightsResourceProvider,
        @Nullable Output<List<ThreatIntelligenceParsedPatternArgs>> parsedPattern,
        @Nullable Output<String> pattern,
        @Nullable Output<String> patternType,
        @Nullable Output<String> patternVersion,
        Output<String> resourceGroupName,
        @Nullable Output<Boolean> revoked,
        @Nullable Output<String> source,
        @Nullable Output<List<String>> threatIntelligenceTags,
        @Nullable Output<List<String>> threatTypes,
        @Nullable Output<String> validFrom,
        @Nullable Output<String> validUntil,
        Output<String> workspaceName) {
        this.confidence = confidence;
        this.created = created;
        this.createdByRef = createdByRef;
        this.defanged = defanged;
        this.description = description;
        this.displayName = displayName;
        this.extensions = extensions;
        this.externalId = externalId;
        this.externalLastUpdatedTimeUtc = externalLastUpdatedTimeUtc;
        this.externalReferences = externalReferences;
        this.granularMarkings = granularMarkings;
        this.indicatorTypes = indicatorTypes;
        this.killChainPhases = killChainPhases;
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
        this.labels = labels;
        this.language = language;
        this.lastUpdatedTimeUtc = lastUpdatedTimeUtc;
        this.modified = modified;
        this.name = name;
        this.objectMarkingRefs = objectMarkingRefs;
        this.operationalInsightsResourceProvider = Objects.requireNonNull(operationalInsightsResourceProvider, "expected parameter 'operationalInsightsResourceProvider' to be non-null");
        this.parsedPattern = parsedPattern;
        this.pattern = pattern;
        this.patternType = patternType;
        this.patternVersion = patternVersion;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.revoked = revoked;
        this.source = source;
        this.threatIntelligenceTags = threatIntelligenceTags;
        this.threatTypes = threatTypes;
        this.validFrom = validFrom;
        this.validUntil = validUntil;
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private ThreatIntelligenceIndicatorArgs() {
        this.confidence = Codegen.empty();
        this.created = Codegen.empty();
        this.createdByRef = Codegen.empty();
        this.defanged = Codegen.empty();
        this.description = Codegen.empty();
        this.displayName = Codegen.empty();
        this.extensions = Codegen.empty();
        this.externalId = Codegen.empty();
        this.externalLastUpdatedTimeUtc = Codegen.empty();
        this.externalReferences = Codegen.empty();
        this.granularMarkings = Codegen.empty();
        this.indicatorTypes = Codegen.empty();
        this.killChainPhases = Codegen.empty();
        this.kind = Codegen.empty();
        this.labels = Codegen.empty();
        this.language = Codegen.empty();
        this.lastUpdatedTimeUtc = Codegen.empty();
        this.modified = Codegen.empty();
        this.name = Codegen.empty();
        this.objectMarkingRefs = Codegen.empty();
        this.operationalInsightsResourceProvider = Codegen.empty();
        this.parsedPattern = Codegen.empty();
        this.pattern = Codegen.empty();
        this.patternType = Codegen.empty();
        this.patternVersion = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.revoked = Codegen.empty();
        this.source = Codegen.empty();
        this.threatIntelligenceTags = Codegen.empty();
        this.threatTypes = Codegen.empty();
        this.validFrom = Codegen.empty();
        this.validUntil = Codegen.empty();
        this.workspaceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThreatIntelligenceIndicatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> confidence;
        private @Nullable Output<String> created;
        private @Nullable Output<String> createdByRef;
        private @Nullable Output<Boolean> defanged;
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private @Nullable Output<Object> extensions;
        private @Nullable Output<String> externalId;
        private @Nullable Output<String> externalLastUpdatedTimeUtc;
        private @Nullable Output<List<ThreatIntelligenceExternalReferenceArgs>> externalReferences;
        private @Nullable Output<List<ThreatIntelligenceGranularMarkingModelArgs>> granularMarkings;
        private @Nullable Output<List<String>> indicatorTypes;
        private @Nullable Output<List<ThreatIntelligenceKillChainPhaseArgs>> killChainPhases;
        private Output<Either<String,ThreatIntelligenceResourceKind>> kind;
        private @Nullable Output<List<String>> labels;
        private @Nullable Output<String> language;
        private @Nullable Output<String> lastUpdatedTimeUtc;
        private @Nullable Output<String> modified;
        private @Nullable Output<String> name;
        private @Nullable Output<List<String>> objectMarkingRefs;
        private Output<String> operationalInsightsResourceProvider;
        private @Nullable Output<List<ThreatIntelligenceParsedPatternArgs>> parsedPattern;
        private @Nullable Output<String> pattern;
        private @Nullable Output<String> patternType;
        private @Nullable Output<String> patternVersion;
        private Output<String> resourceGroupName;
        private @Nullable Output<Boolean> revoked;
        private @Nullable Output<String> source;
        private @Nullable Output<List<String>> threatIntelligenceTags;
        private @Nullable Output<List<String>> threatTypes;
        private @Nullable Output<String> validFrom;
        private @Nullable Output<String> validUntil;
        private Output<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(ThreatIntelligenceIndicatorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.confidence = defaults.confidence;
    	      this.created = defaults.created;
    	      this.createdByRef = defaults.createdByRef;
    	      this.defanged = defaults.defanged;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.extensions = defaults.extensions;
    	      this.externalId = defaults.externalId;
    	      this.externalLastUpdatedTimeUtc = defaults.externalLastUpdatedTimeUtc;
    	      this.externalReferences = defaults.externalReferences;
    	      this.granularMarkings = defaults.granularMarkings;
    	      this.indicatorTypes = defaults.indicatorTypes;
    	      this.killChainPhases = defaults.killChainPhases;
    	      this.kind = defaults.kind;
    	      this.labels = defaults.labels;
    	      this.language = defaults.language;
    	      this.lastUpdatedTimeUtc = defaults.lastUpdatedTimeUtc;
    	      this.modified = defaults.modified;
    	      this.name = defaults.name;
    	      this.objectMarkingRefs = defaults.objectMarkingRefs;
    	      this.operationalInsightsResourceProvider = defaults.operationalInsightsResourceProvider;
    	      this.parsedPattern = defaults.parsedPattern;
    	      this.pattern = defaults.pattern;
    	      this.patternType = defaults.patternType;
    	      this.patternVersion = defaults.patternVersion;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.revoked = defaults.revoked;
    	      this.source = defaults.source;
    	      this.threatIntelligenceTags = defaults.threatIntelligenceTags;
    	      this.threatTypes = defaults.threatTypes;
    	      this.validFrom = defaults.validFrom;
    	      this.validUntil = defaults.validUntil;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder confidence(@Nullable Output<Integer> confidence) {
            this.confidence = confidence;
            return this;
        }
        public Builder confidence(@Nullable Integer confidence) {
            this.confidence = Codegen.ofNullable(confidence);
            return this;
        }
        public Builder created(@Nullable Output<String> created) {
            this.created = created;
            return this;
        }
        public Builder created(@Nullable String created) {
            this.created = Codegen.ofNullable(created);
            return this;
        }
        public Builder createdByRef(@Nullable Output<String> createdByRef) {
            this.createdByRef = createdByRef;
            return this;
        }
        public Builder createdByRef(@Nullable String createdByRef) {
            this.createdByRef = Codegen.ofNullable(createdByRef);
            return this;
        }
        public Builder defanged(@Nullable Output<Boolean> defanged) {
            this.defanged = defanged;
            return this;
        }
        public Builder defanged(@Nullable Boolean defanged) {
            this.defanged = Codegen.ofNullable(defanged);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = Codegen.ofNullable(displayName);
            return this;
        }
        public Builder extensions(@Nullable Output<Object> extensions) {
            this.extensions = extensions;
            return this;
        }
        public Builder extensions(@Nullable Object extensions) {
            this.extensions = Codegen.ofNullable(extensions);
            return this;
        }
        public Builder externalId(@Nullable Output<String> externalId) {
            this.externalId = externalId;
            return this;
        }
        public Builder externalId(@Nullable String externalId) {
            this.externalId = Codegen.ofNullable(externalId);
            return this;
        }
        public Builder externalLastUpdatedTimeUtc(@Nullable Output<String> externalLastUpdatedTimeUtc) {
            this.externalLastUpdatedTimeUtc = externalLastUpdatedTimeUtc;
            return this;
        }
        public Builder externalLastUpdatedTimeUtc(@Nullable String externalLastUpdatedTimeUtc) {
            this.externalLastUpdatedTimeUtc = Codegen.ofNullable(externalLastUpdatedTimeUtc);
            return this;
        }
        public Builder externalReferences(@Nullable Output<List<ThreatIntelligenceExternalReferenceArgs>> externalReferences) {
            this.externalReferences = externalReferences;
            return this;
        }
        public Builder externalReferences(@Nullable List<ThreatIntelligenceExternalReferenceArgs> externalReferences) {
            this.externalReferences = Codegen.ofNullable(externalReferences);
            return this;
        }
        public Builder externalReferences(ThreatIntelligenceExternalReferenceArgs... externalReferences) {
            return externalReferences(List.of(externalReferences));
        }
        public Builder granularMarkings(@Nullable Output<List<ThreatIntelligenceGranularMarkingModelArgs>> granularMarkings) {
            this.granularMarkings = granularMarkings;
            return this;
        }
        public Builder granularMarkings(@Nullable List<ThreatIntelligenceGranularMarkingModelArgs> granularMarkings) {
            this.granularMarkings = Codegen.ofNullable(granularMarkings);
            return this;
        }
        public Builder granularMarkings(ThreatIntelligenceGranularMarkingModelArgs... granularMarkings) {
            return granularMarkings(List.of(granularMarkings));
        }
        public Builder indicatorTypes(@Nullable Output<List<String>> indicatorTypes) {
            this.indicatorTypes = indicatorTypes;
            return this;
        }
        public Builder indicatorTypes(@Nullable List<String> indicatorTypes) {
            this.indicatorTypes = Codegen.ofNullable(indicatorTypes);
            return this;
        }
        public Builder indicatorTypes(String... indicatorTypes) {
            return indicatorTypes(List.of(indicatorTypes));
        }
        public Builder killChainPhases(@Nullable Output<List<ThreatIntelligenceKillChainPhaseArgs>> killChainPhases) {
            this.killChainPhases = killChainPhases;
            return this;
        }
        public Builder killChainPhases(@Nullable List<ThreatIntelligenceKillChainPhaseArgs> killChainPhases) {
            this.killChainPhases = Codegen.ofNullable(killChainPhases);
            return this;
        }
        public Builder killChainPhases(ThreatIntelligenceKillChainPhaseArgs... killChainPhases) {
            return killChainPhases(List.of(killChainPhases));
        }
        public Builder kind(Output<Either<String,ThreatIntelligenceResourceKind>> kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder kind(Either<String,ThreatIntelligenceResourceKind> kind) {
            this.kind = Output.of(Objects.requireNonNull(kind));
            return this;
        }
        public Builder labels(@Nullable Output<List<String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable List<String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }
        public Builder language(@Nullable Output<String> language) {
            this.language = language;
            return this;
        }
        public Builder language(@Nullable String language) {
            this.language = Codegen.ofNullable(language);
            return this;
        }
        public Builder lastUpdatedTimeUtc(@Nullable Output<String> lastUpdatedTimeUtc) {
            this.lastUpdatedTimeUtc = lastUpdatedTimeUtc;
            return this;
        }
        public Builder lastUpdatedTimeUtc(@Nullable String lastUpdatedTimeUtc) {
            this.lastUpdatedTimeUtc = Codegen.ofNullable(lastUpdatedTimeUtc);
            return this;
        }
        public Builder modified(@Nullable Output<String> modified) {
            this.modified = modified;
            return this;
        }
        public Builder modified(@Nullable String modified) {
            this.modified = Codegen.ofNullable(modified);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder objectMarkingRefs(@Nullable Output<List<String>> objectMarkingRefs) {
            this.objectMarkingRefs = objectMarkingRefs;
            return this;
        }
        public Builder objectMarkingRefs(@Nullable List<String> objectMarkingRefs) {
            this.objectMarkingRefs = Codegen.ofNullable(objectMarkingRefs);
            return this;
        }
        public Builder objectMarkingRefs(String... objectMarkingRefs) {
            return objectMarkingRefs(List.of(objectMarkingRefs));
        }
        public Builder operationalInsightsResourceProvider(Output<String> operationalInsightsResourceProvider) {
            this.operationalInsightsResourceProvider = Objects.requireNonNull(operationalInsightsResourceProvider);
            return this;
        }
        public Builder operationalInsightsResourceProvider(String operationalInsightsResourceProvider) {
            this.operationalInsightsResourceProvider = Output.of(Objects.requireNonNull(operationalInsightsResourceProvider));
            return this;
        }
        public Builder parsedPattern(@Nullable Output<List<ThreatIntelligenceParsedPatternArgs>> parsedPattern) {
            this.parsedPattern = parsedPattern;
            return this;
        }
        public Builder parsedPattern(@Nullable List<ThreatIntelligenceParsedPatternArgs> parsedPattern) {
            this.parsedPattern = Codegen.ofNullable(parsedPattern);
            return this;
        }
        public Builder parsedPattern(ThreatIntelligenceParsedPatternArgs... parsedPattern) {
            return parsedPattern(List.of(parsedPattern));
        }
        public Builder pattern(@Nullable Output<String> pattern) {
            this.pattern = pattern;
            return this;
        }
        public Builder pattern(@Nullable String pattern) {
            this.pattern = Codegen.ofNullable(pattern);
            return this;
        }
        public Builder patternType(@Nullable Output<String> patternType) {
            this.patternType = patternType;
            return this;
        }
        public Builder patternType(@Nullable String patternType) {
            this.patternType = Codegen.ofNullable(patternType);
            return this;
        }
        public Builder patternVersion(@Nullable Output<String> patternVersion) {
            this.patternVersion = patternVersion;
            return this;
        }
        public Builder patternVersion(@Nullable String patternVersion) {
            this.patternVersion = Codegen.ofNullable(patternVersion);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder revoked(@Nullable Output<Boolean> revoked) {
            this.revoked = revoked;
            return this;
        }
        public Builder revoked(@Nullable Boolean revoked) {
            this.revoked = Codegen.ofNullable(revoked);
            return this;
        }
        public Builder source(@Nullable Output<String> source) {
            this.source = source;
            return this;
        }
        public Builder source(@Nullable String source) {
            this.source = Codegen.ofNullable(source);
            return this;
        }
        public Builder threatIntelligenceTags(@Nullable Output<List<String>> threatIntelligenceTags) {
            this.threatIntelligenceTags = threatIntelligenceTags;
            return this;
        }
        public Builder threatIntelligenceTags(@Nullable List<String> threatIntelligenceTags) {
            this.threatIntelligenceTags = Codegen.ofNullable(threatIntelligenceTags);
            return this;
        }
        public Builder threatIntelligenceTags(String... threatIntelligenceTags) {
            return threatIntelligenceTags(List.of(threatIntelligenceTags));
        }
        public Builder threatTypes(@Nullable Output<List<String>> threatTypes) {
            this.threatTypes = threatTypes;
            return this;
        }
        public Builder threatTypes(@Nullable List<String> threatTypes) {
            this.threatTypes = Codegen.ofNullable(threatTypes);
            return this;
        }
        public Builder threatTypes(String... threatTypes) {
            return threatTypes(List.of(threatTypes));
        }
        public Builder validFrom(@Nullable Output<String> validFrom) {
            this.validFrom = validFrom;
            return this;
        }
        public Builder validFrom(@Nullable String validFrom) {
            this.validFrom = Codegen.ofNullable(validFrom);
            return this;
        }
        public Builder validUntil(@Nullable Output<String> validUntil) {
            this.validUntil = validUntil;
            return this;
        }
        public Builder validUntil(@Nullable String validUntil) {
            this.validUntil = Codegen.ofNullable(validUntil);
            return this;
        }
        public Builder workspaceName(Output<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }
        public Builder workspaceName(String workspaceName) {
            this.workspaceName = Output.of(Objects.requireNonNull(workspaceName));
            return this;
        }        public ThreatIntelligenceIndicatorArgs build() {
            return new ThreatIntelligenceIndicatorArgs(confidence, created, createdByRef, defanged, description, displayName, extensions, externalId, externalLastUpdatedTimeUtc, externalReferences, granularMarkings, indicatorTypes, killChainPhases, kind, labels, language, lastUpdatedTimeUtc, modified, name, objectMarkingRefs, operationalInsightsResourceProvider, parsedPattern, pattern, patternType, patternVersion, resourceGroupName, revoked, source, threatIntelligenceTags, threatTypes, validFrom, validUntil, workspaceName);
        }
    }
}
