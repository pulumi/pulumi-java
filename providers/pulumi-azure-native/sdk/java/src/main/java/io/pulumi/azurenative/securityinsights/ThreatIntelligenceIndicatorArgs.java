// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights;

import io.pulumi.azurenative.securityinsights.enums.ThreatIntelligenceResourceKind;
import io.pulumi.azurenative.securityinsights.inputs.ThreatIntelligenceExternalReferenceArgs;
import io.pulumi.azurenative.securityinsights.inputs.ThreatIntelligenceGranularMarkingModelArgs;
import io.pulumi.azurenative.securityinsights.inputs.ThreatIntelligenceKillChainPhaseArgs;
import io.pulumi.azurenative.securityinsights.inputs.ThreatIntelligenceParsedPatternArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ThreatIntelligenceIndicatorArgs extends io.pulumi.resources.ResourceArgs {

    public static final ThreatIntelligenceIndicatorArgs Empty = new ThreatIntelligenceIndicatorArgs();

    /**
     * Confidence of threat intelligence entity
     * 
     */
    @InputImport(name="confidence")
    private final @Nullable Input<Integer> confidence;

    public Input<Integer> getConfidence() {
        return this.confidence == null ? Input.empty() : this.confidence;
    }

    /**
     * Created by
     * 
     */
    @InputImport(name="created")
    private final @Nullable Input<String> created;

    public Input<String> getCreated() {
        return this.created == null ? Input.empty() : this.created;
    }

    /**
     * Created by reference of threat intelligence entity
     * 
     */
    @InputImport(name="createdByRef")
    private final @Nullable Input<String> createdByRef;

    public Input<String> getCreatedByRef() {
        return this.createdByRef == null ? Input.empty() : this.createdByRef;
    }

    /**
     * Is threat intelligence entity defanged
     * 
     */
    @InputImport(name="defanged")
    private final @Nullable Input<Boolean> defanged;

    public Input<Boolean> getDefanged() {
        return this.defanged == null ? Input.empty() : this.defanged;
    }

    /**
     * Description of a threat intelligence entity
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Display name of a threat intelligence entity
     * 
     */
    @InputImport(name="displayName")
    private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    /**
     * Extensions map
     * 
     */
    @InputImport(name="extensions")
    private final @Nullable Input<Object> extensions;

    public Input<Object> getExtensions() {
        return this.extensions == null ? Input.empty() : this.extensions;
    }

    /**
     * External ID of threat intelligence entity
     * 
     */
    @InputImport(name="externalId")
    private final @Nullable Input<String> externalId;

    public Input<String> getExternalId() {
        return this.externalId == null ? Input.empty() : this.externalId;
    }

    /**
     * External last updated time in UTC
     * 
     */
    @InputImport(name="externalLastUpdatedTimeUtc")
    private final @Nullable Input<String> externalLastUpdatedTimeUtc;

    public Input<String> getExternalLastUpdatedTimeUtc() {
        return this.externalLastUpdatedTimeUtc == null ? Input.empty() : this.externalLastUpdatedTimeUtc;
    }

    /**
     * External References
     * 
     */
    @InputImport(name="externalReferences")
    private final @Nullable Input<List<ThreatIntelligenceExternalReferenceArgs>> externalReferences;

    public Input<List<ThreatIntelligenceExternalReferenceArgs>> getExternalReferences() {
        return this.externalReferences == null ? Input.empty() : this.externalReferences;
    }

    /**
     * Granular Markings
     * 
     */
    @InputImport(name="granularMarkings")
    private final @Nullable Input<List<ThreatIntelligenceGranularMarkingModelArgs>> granularMarkings;

    public Input<List<ThreatIntelligenceGranularMarkingModelArgs>> getGranularMarkings() {
        return this.granularMarkings == null ? Input.empty() : this.granularMarkings;
    }

    /**
     * Indicator types of threat intelligence entities
     * 
     */
    @InputImport(name="indicatorTypes")
    private final @Nullable Input<List<String>> indicatorTypes;

    public Input<List<String>> getIndicatorTypes() {
        return this.indicatorTypes == null ? Input.empty() : this.indicatorTypes;
    }

    /**
     * Kill chain phases
     * 
     */
    @InputImport(name="killChainPhases")
    private final @Nullable Input<List<ThreatIntelligenceKillChainPhaseArgs>> killChainPhases;

    public Input<List<ThreatIntelligenceKillChainPhaseArgs>> getKillChainPhases() {
        return this.killChainPhases == null ? Input.empty() : this.killChainPhases;
    }

    /**
     * The kind of the entity.
     * 
     */
    @InputImport(name="kind", required=true)
    private final Input<Either<String,ThreatIntelligenceResourceKind>> kind;

    public Input<Either<String,ThreatIntelligenceResourceKind>> getKind() {
        return this.kind;
    }

    /**
     * Labels  of threat intelligence entity
     * 
     */
    @InputImport(name="labels")
    private final @Nullable Input<List<String>> labels;

    public Input<List<String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    /**
     * Language of threat intelligence entity
     * 
     */
    @InputImport(name="language")
    private final @Nullable Input<String> language;

    public Input<String> getLanguage() {
        return this.language == null ? Input.empty() : this.language;
    }

    /**
     * Last updated time in UTC
     * 
     */
    @InputImport(name="lastUpdatedTimeUtc")
    private final @Nullable Input<String> lastUpdatedTimeUtc;

    public Input<String> getLastUpdatedTimeUtc() {
        return this.lastUpdatedTimeUtc == null ? Input.empty() : this.lastUpdatedTimeUtc;
    }

    /**
     * Modified by
     * 
     */
    @InputImport(name="modified")
    private final @Nullable Input<String> modified;

    public Input<String> getModified() {
        return this.modified == null ? Input.empty() : this.modified;
    }

    /**
     * Threat intelligence indicator name field.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Threat intelligence entity object marking references
     * 
     */
    @InputImport(name="objectMarkingRefs")
    private final @Nullable Input<List<String>> objectMarkingRefs;

    public Input<List<String>> getObjectMarkingRefs() {
        return this.objectMarkingRefs == null ? Input.empty() : this.objectMarkingRefs;
    }

    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     * 
     */
    @InputImport(name="operationalInsightsResourceProvider", required=true)
    private final Input<String> operationalInsightsResourceProvider;

    public Input<String> getOperationalInsightsResourceProvider() {
        return this.operationalInsightsResourceProvider;
    }

    /**
     * Parsed patterns
     * 
     */
    @InputImport(name="parsedPattern")
    private final @Nullable Input<List<ThreatIntelligenceParsedPatternArgs>> parsedPattern;

    public Input<List<ThreatIntelligenceParsedPatternArgs>> getParsedPattern() {
        return this.parsedPattern == null ? Input.empty() : this.parsedPattern;
    }

    /**
     * Pattern of a threat intelligence entity
     * 
     */
    @InputImport(name="pattern")
    private final @Nullable Input<String> pattern;

    public Input<String> getPattern() {
        return this.pattern == null ? Input.empty() : this.pattern;
    }

    /**
     * Pattern type of a threat intelligence entity
     * 
     */
    @InputImport(name="patternType")
    private final @Nullable Input<String> patternType;

    public Input<String> getPatternType() {
        return this.patternType == null ? Input.empty() : this.patternType;
    }

    /**
     * Pattern version of a threat intelligence entity
     * 
     */
    @InputImport(name="patternVersion")
    private final @Nullable Input<String> patternVersion;

    public Input<String> getPatternVersion() {
        return this.patternVersion == null ? Input.empty() : this.patternVersion;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Is threat intelligence entity revoked
     * 
     */
    @InputImport(name="revoked")
    private final @Nullable Input<Boolean> revoked;

    public Input<Boolean> getRevoked() {
        return this.revoked == null ? Input.empty() : this.revoked;
    }

    /**
     * Source of a threat intelligence entity
     * 
     */
    @InputImport(name="source")
    private final @Nullable Input<String> source;

    public Input<String> getSource() {
        return this.source == null ? Input.empty() : this.source;
    }

    /**
     * List of tags
     * 
     */
    @InputImport(name="threatIntelligenceTags")
    private final @Nullable Input<List<String>> threatIntelligenceTags;

    public Input<List<String>> getThreatIntelligenceTags() {
        return this.threatIntelligenceTags == null ? Input.empty() : this.threatIntelligenceTags;
    }

    /**
     * Threat types
     * 
     */
    @InputImport(name="threatTypes")
    private final @Nullable Input<List<String>> threatTypes;

    public Input<List<String>> getThreatTypes() {
        return this.threatTypes == null ? Input.empty() : this.threatTypes;
    }

    /**
     * Valid from
     * 
     */
    @InputImport(name="validFrom")
    private final @Nullable Input<String> validFrom;

    public Input<String> getValidFrom() {
        return this.validFrom == null ? Input.empty() : this.validFrom;
    }

    /**
     * Valid until
     * 
     */
    @InputImport(name="validUntil")
    private final @Nullable Input<String> validUntil;

    public Input<String> getValidUntil() {
        return this.validUntil == null ? Input.empty() : this.validUntil;
    }

    /**
     * The name of the workspace.
     * 
     */
    @InputImport(name="workspaceName", required=true)
    private final Input<String> workspaceName;

    public Input<String> getWorkspaceName() {
        return this.workspaceName;
    }

    public ThreatIntelligenceIndicatorArgs(
        @Nullable Input<Integer> confidence,
        @Nullable Input<String> created,
        @Nullable Input<String> createdByRef,
        @Nullable Input<Boolean> defanged,
        @Nullable Input<String> description,
        @Nullable Input<String> displayName,
        @Nullable Input<Object> extensions,
        @Nullable Input<String> externalId,
        @Nullable Input<String> externalLastUpdatedTimeUtc,
        @Nullable Input<List<ThreatIntelligenceExternalReferenceArgs>> externalReferences,
        @Nullable Input<List<ThreatIntelligenceGranularMarkingModelArgs>> granularMarkings,
        @Nullable Input<List<String>> indicatorTypes,
        @Nullable Input<List<ThreatIntelligenceKillChainPhaseArgs>> killChainPhases,
        Input<Either<String,ThreatIntelligenceResourceKind>> kind,
        @Nullable Input<List<String>> labels,
        @Nullable Input<String> language,
        @Nullable Input<String> lastUpdatedTimeUtc,
        @Nullable Input<String> modified,
        @Nullable Input<String> name,
        @Nullable Input<List<String>> objectMarkingRefs,
        Input<String> operationalInsightsResourceProvider,
        @Nullable Input<List<ThreatIntelligenceParsedPatternArgs>> parsedPattern,
        @Nullable Input<String> pattern,
        @Nullable Input<String> patternType,
        @Nullable Input<String> patternVersion,
        Input<String> resourceGroupName,
        @Nullable Input<Boolean> revoked,
        @Nullable Input<String> source,
        @Nullable Input<List<String>> threatIntelligenceTags,
        @Nullable Input<List<String>> threatTypes,
        @Nullable Input<String> validFrom,
        @Nullable Input<String> validUntil,
        Input<String> workspaceName) {
        this.confidence = confidence;
        this.created = created;
        this.createdByRef = createdByRef;
        this.defanged = defanged;
        this.description = description;
        this.displayName = displayName;
        this.extensions = extensions;
        this.externalId = externalId;
        this.externalLastUpdatedTimeUtc = externalLastUpdatedTimeUtc;
        this.externalReferences = externalReferences;
        this.granularMarkings = granularMarkings;
        this.indicatorTypes = indicatorTypes;
        this.killChainPhases = killChainPhases;
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
        this.labels = labels;
        this.language = language;
        this.lastUpdatedTimeUtc = lastUpdatedTimeUtc;
        this.modified = modified;
        this.name = name;
        this.objectMarkingRefs = objectMarkingRefs;
        this.operationalInsightsResourceProvider = Objects.requireNonNull(operationalInsightsResourceProvider, "expected parameter 'operationalInsightsResourceProvider' to be non-null");
        this.parsedPattern = parsedPattern;
        this.pattern = pattern;
        this.patternType = patternType;
        this.patternVersion = patternVersion;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.revoked = revoked;
        this.source = source;
        this.threatIntelligenceTags = threatIntelligenceTags;
        this.threatTypes = threatTypes;
        this.validFrom = validFrom;
        this.validUntil = validUntil;
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private ThreatIntelligenceIndicatorArgs() {
        this.confidence = Input.empty();
        this.created = Input.empty();
        this.createdByRef = Input.empty();
        this.defanged = Input.empty();
        this.description = Input.empty();
        this.displayName = Input.empty();
        this.extensions = Input.empty();
        this.externalId = Input.empty();
        this.externalLastUpdatedTimeUtc = Input.empty();
        this.externalReferences = Input.empty();
        this.granularMarkings = Input.empty();
        this.indicatorTypes = Input.empty();
        this.killChainPhases = Input.empty();
        this.kind = Input.empty();
        this.labels = Input.empty();
        this.language = Input.empty();
        this.lastUpdatedTimeUtc = Input.empty();
        this.modified = Input.empty();
        this.name = Input.empty();
        this.objectMarkingRefs = Input.empty();
        this.operationalInsightsResourceProvider = Input.empty();
        this.parsedPattern = Input.empty();
        this.pattern = Input.empty();
        this.patternType = Input.empty();
        this.patternVersion = Input.empty();
        this.resourceGroupName = Input.empty();
        this.revoked = Input.empty();
        this.source = Input.empty();
        this.threatIntelligenceTags = Input.empty();
        this.threatTypes = Input.empty();
        this.validFrom = Input.empty();
        this.validUntil = Input.empty();
        this.workspaceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThreatIntelligenceIndicatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> confidence;
        private @Nullable Input<String> created;
        private @Nullable Input<String> createdByRef;
        private @Nullable Input<Boolean> defanged;
        private @Nullable Input<String> description;
        private @Nullable Input<String> displayName;
        private @Nullable Input<Object> extensions;
        private @Nullable Input<String> externalId;
        private @Nullable Input<String> externalLastUpdatedTimeUtc;
        private @Nullable Input<List<ThreatIntelligenceExternalReferenceArgs>> externalReferences;
        private @Nullable Input<List<ThreatIntelligenceGranularMarkingModelArgs>> granularMarkings;
        private @Nullable Input<List<String>> indicatorTypes;
        private @Nullable Input<List<ThreatIntelligenceKillChainPhaseArgs>> killChainPhases;
        private Input<Either<String,ThreatIntelligenceResourceKind>> kind;
        private @Nullable Input<List<String>> labels;
        private @Nullable Input<String> language;
        private @Nullable Input<String> lastUpdatedTimeUtc;
        private @Nullable Input<String> modified;
        private @Nullable Input<String> name;
        private @Nullable Input<List<String>> objectMarkingRefs;
        private Input<String> operationalInsightsResourceProvider;
        private @Nullable Input<List<ThreatIntelligenceParsedPatternArgs>> parsedPattern;
        private @Nullable Input<String> pattern;
        private @Nullable Input<String> patternType;
        private @Nullable Input<String> patternVersion;
        private Input<String> resourceGroupName;
        private @Nullable Input<Boolean> revoked;
        private @Nullable Input<String> source;
        private @Nullable Input<List<String>> threatIntelligenceTags;
        private @Nullable Input<List<String>> threatTypes;
        private @Nullable Input<String> validFrom;
        private @Nullable Input<String> validUntil;
        private Input<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(ThreatIntelligenceIndicatorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.confidence = defaults.confidence;
    	      this.created = defaults.created;
    	      this.createdByRef = defaults.createdByRef;
    	      this.defanged = defaults.defanged;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.extensions = defaults.extensions;
    	      this.externalId = defaults.externalId;
    	      this.externalLastUpdatedTimeUtc = defaults.externalLastUpdatedTimeUtc;
    	      this.externalReferences = defaults.externalReferences;
    	      this.granularMarkings = defaults.granularMarkings;
    	      this.indicatorTypes = defaults.indicatorTypes;
    	      this.killChainPhases = defaults.killChainPhases;
    	      this.kind = defaults.kind;
    	      this.labels = defaults.labels;
    	      this.language = defaults.language;
    	      this.lastUpdatedTimeUtc = defaults.lastUpdatedTimeUtc;
    	      this.modified = defaults.modified;
    	      this.name = defaults.name;
    	      this.objectMarkingRefs = defaults.objectMarkingRefs;
    	      this.operationalInsightsResourceProvider = defaults.operationalInsightsResourceProvider;
    	      this.parsedPattern = defaults.parsedPattern;
    	      this.pattern = defaults.pattern;
    	      this.patternType = defaults.patternType;
    	      this.patternVersion = defaults.patternVersion;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.revoked = defaults.revoked;
    	      this.source = defaults.source;
    	      this.threatIntelligenceTags = defaults.threatIntelligenceTags;
    	      this.threatTypes = defaults.threatTypes;
    	      this.validFrom = defaults.validFrom;
    	      this.validUntil = defaults.validUntil;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder setConfidence(@Nullable Input<Integer> confidence) {
            this.confidence = confidence;
            return this;
        }

        public Builder setConfidence(@Nullable Integer confidence) {
            this.confidence = Input.ofNullable(confidence);
            return this;
        }

        public Builder setCreated(@Nullable Input<String> created) {
            this.created = created;
            return this;
        }

        public Builder setCreated(@Nullable String created) {
            this.created = Input.ofNullable(created);
            return this;
        }

        public Builder setCreatedByRef(@Nullable Input<String> createdByRef) {
            this.createdByRef = createdByRef;
            return this;
        }

        public Builder setCreatedByRef(@Nullable String createdByRef) {
            this.createdByRef = Input.ofNullable(createdByRef);
            return this;
        }

        public Builder setDefanged(@Nullable Input<Boolean> defanged) {
            this.defanged = defanged;
            return this;
        }

        public Builder setDefanged(@Nullable Boolean defanged) {
            this.defanged = Input.ofNullable(defanged);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setExtensions(@Nullable Input<Object> extensions) {
            this.extensions = extensions;
            return this;
        }

        public Builder setExtensions(@Nullable Object extensions) {
            this.extensions = Input.ofNullable(extensions);
            return this;
        }

        public Builder setExternalId(@Nullable Input<String> externalId) {
            this.externalId = externalId;
            return this;
        }

        public Builder setExternalId(@Nullable String externalId) {
            this.externalId = Input.ofNullable(externalId);
            return this;
        }

        public Builder setExternalLastUpdatedTimeUtc(@Nullable Input<String> externalLastUpdatedTimeUtc) {
            this.externalLastUpdatedTimeUtc = externalLastUpdatedTimeUtc;
            return this;
        }

        public Builder setExternalLastUpdatedTimeUtc(@Nullable String externalLastUpdatedTimeUtc) {
            this.externalLastUpdatedTimeUtc = Input.ofNullable(externalLastUpdatedTimeUtc);
            return this;
        }

        public Builder setExternalReferences(@Nullable Input<List<ThreatIntelligenceExternalReferenceArgs>> externalReferences) {
            this.externalReferences = externalReferences;
            return this;
        }

        public Builder setExternalReferences(@Nullable List<ThreatIntelligenceExternalReferenceArgs> externalReferences) {
            this.externalReferences = Input.ofNullable(externalReferences);
            return this;
        }

        public Builder setGranularMarkings(@Nullable Input<List<ThreatIntelligenceGranularMarkingModelArgs>> granularMarkings) {
            this.granularMarkings = granularMarkings;
            return this;
        }

        public Builder setGranularMarkings(@Nullable List<ThreatIntelligenceGranularMarkingModelArgs> granularMarkings) {
            this.granularMarkings = Input.ofNullable(granularMarkings);
            return this;
        }

        public Builder setIndicatorTypes(@Nullable Input<List<String>> indicatorTypes) {
            this.indicatorTypes = indicatorTypes;
            return this;
        }

        public Builder setIndicatorTypes(@Nullable List<String> indicatorTypes) {
            this.indicatorTypes = Input.ofNullable(indicatorTypes);
            return this;
        }

        public Builder setKillChainPhases(@Nullable Input<List<ThreatIntelligenceKillChainPhaseArgs>> killChainPhases) {
            this.killChainPhases = killChainPhases;
            return this;
        }

        public Builder setKillChainPhases(@Nullable List<ThreatIntelligenceKillChainPhaseArgs> killChainPhases) {
            this.killChainPhases = Input.ofNullable(killChainPhases);
            return this;
        }

        public Builder setKind(Input<Either<String,ThreatIntelligenceResourceKind>> kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setKind(Either<String,ThreatIntelligenceResourceKind> kind) {
            this.kind = Input.of(Objects.requireNonNull(kind));
            return this;
        }

        public Builder setLabels(@Nullable Input<List<String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable List<String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLanguage(@Nullable Input<String> language) {
            this.language = language;
            return this;
        }

        public Builder setLanguage(@Nullable String language) {
            this.language = Input.ofNullable(language);
            return this;
        }

        public Builder setLastUpdatedTimeUtc(@Nullable Input<String> lastUpdatedTimeUtc) {
            this.lastUpdatedTimeUtc = lastUpdatedTimeUtc;
            return this;
        }

        public Builder setLastUpdatedTimeUtc(@Nullable String lastUpdatedTimeUtc) {
            this.lastUpdatedTimeUtc = Input.ofNullable(lastUpdatedTimeUtc);
            return this;
        }

        public Builder setModified(@Nullable Input<String> modified) {
            this.modified = modified;
            return this;
        }

        public Builder setModified(@Nullable String modified) {
            this.modified = Input.ofNullable(modified);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setObjectMarkingRefs(@Nullable Input<List<String>> objectMarkingRefs) {
            this.objectMarkingRefs = objectMarkingRefs;
            return this;
        }

        public Builder setObjectMarkingRefs(@Nullable List<String> objectMarkingRefs) {
            this.objectMarkingRefs = Input.ofNullable(objectMarkingRefs);
            return this;
        }

        public Builder setOperationalInsightsResourceProvider(Input<String> operationalInsightsResourceProvider) {
            this.operationalInsightsResourceProvider = Objects.requireNonNull(operationalInsightsResourceProvider);
            return this;
        }

        public Builder setOperationalInsightsResourceProvider(String operationalInsightsResourceProvider) {
            this.operationalInsightsResourceProvider = Input.of(Objects.requireNonNull(operationalInsightsResourceProvider));
            return this;
        }

        public Builder setParsedPattern(@Nullable Input<List<ThreatIntelligenceParsedPatternArgs>> parsedPattern) {
            this.parsedPattern = parsedPattern;
            return this;
        }

        public Builder setParsedPattern(@Nullable List<ThreatIntelligenceParsedPatternArgs> parsedPattern) {
            this.parsedPattern = Input.ofNullable(parsedPattern);
            return this;
        }

        public Builder setPattern(@Nullable Input<String> pattern) {
            this.pattern = pattern;
            return this;
        }

        public Builder setPattern(@Nullable String pattern) {
            this.pattern = Input.ofNullable(pattern);
            return this;
        }

        public Builder setPatternType(@Nullable Input<String> patternType) {
            this.patternType = patternType;
            return this;
        }

        public Builder setPatternType(@Nullable String patternType) {
            this.patternType = Input.ofNullable(patternType);
            return this;
        }

        public Builder setPatternVersion(@Nullable Input<String> patternVersion) {
            this.patternVersion = patternVersion;
            return this;
        }

        public Builder setPatternVersion(@Nullable String patternVersion) {
            this.patternVersion = Input.ofNullable(patternVersion);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRevoked(@Nullable Input<Boolean> revoked) {
            this.revoked = revoked;
            return this;
        }

        public Builder setRevoked(@Nullable Boolean revoked) {
            this.revoked = Input.ofNullable(revoked);
            return this;
        }

        public Builder setSource(@Nullable Input<String> source) {
            this.source = source;
            return this;
        }

        public Builder setSource(@Nullable String source) {
            this.source = Input.ofNullable(source);
            return this;
        }

        public Builder setThreatIntelligenceTags(@Nullable Input<List<String>> threatIntelligenceTags) {
            this.threatIntelligenceTags = threatIntelligenceTags;
            return this;
        }

        public Builder setThreatIntelligenceTags(@Nullable List<String> threatIntelligenceTags) {
            this.threatIntelligenceTags = Input.ofNullable(threatIntelligenceTags);
            return this;
        }

        public Builder setThreatTypes(@Nullable Input<List<String>> threatTypes) {
            this.threatTypes = threatTypes;
            return this;
        }

        public Builder setThreatTypes(@Nullable List<String> threatTypes) {
            this.threatTypes = Input.ofNullable(threatTypes);
            return this;
        }

        public Builder setValidFrom(@Nullable Input<String> validFrom) {
            this.validFrom = validFrom;
            return this;
        }

        public Builder setValidFrom(@Nullable String validFrom) {
            this.validFrom = Input.ofNullable(validFrom);
            return this;
        }

        public Builder setValidUntil(@Nullable Input<String> validUntil) {
            this.validUntil = validUntil;
            return this;
        }

        public Builder setValidUntil(@Nullable String validUntil) {
            this.validUntil = Input.ofNullable(validUntil);
            return this;
        }

        public Builder setWorkspaceName(Input<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }

        public Builder setWorkspaceName(String workspaceName) {
            this.workspaceName = Input.of(Objects.requireNonNull(workspaceName));
            return this;
        }

        public ThreatIntelligenceIndicatorArgs build() {
            return new ThreatIntelligenceIndicatorArgs(confidence, created, createdByRef, defanged, description, displayName, extensions, externalId, externalLastUpdatedTimeUtc, externalReferences, granularMarkings, indicatorTypes, killChainPhases, kind, labels, language, lastUpdatedTimeUtc, modified, name, objectMarkingRefs, operationalInsightsResourceProvider, parsedPattern, pattern, patternType, patternVersion, resourceGroupName, revoked, source, threatIntelligenceTags, threatTypes, validFrom, validUntil, workspaceName);
        }
    }
}
