// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security.inputs;

import io.pulumi.azurenative.security.enums.AutoProvision;
import io.pulumi.azurenative.security.inputs.ProxyServerPropertiesArgs;
import io.pulumi.azurenative.security.inputs.ServicePrincipalPropertiesArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Settings for hybrid compute management
 * 
 */
public final class HybridComputeSettingsPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final HybridComputeSettingsPropertiesArgs Empty = new HybridComputeSettingsPropertiesArgs();

    /**
     * Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
     * 
     */
    @InputImport(name="autoProvision", required=true)
    private final Input<Either<String,AutoProvision>> autoProvision;

    public Input<Either<String,AutoProvision>> getAutoProvision() {
        return this.autoProvision;
    }

    /**
     * For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
     * 
     */
    @InputImport(name="proxyServer")
    private final @Nullable Input<ProxyServerPropertiesArgs> proxyServer;

    public Input<ProxyServerPropertiesArgs> getProxyServer() {
        return this.proxyServer == null ? Input.empty() : this.proxyServer;
    }

    /**
     * The location where the metadata of machines will be stored
     * 
     */
    @InputImport(name="region")
    private final @Nullable Input<String> region;

    public Input<String> getRegion() {
        return this.region == null ? Input.empty() : this.region;
    }

    /**
     * The name of the resource group where Arc (Hybrid Compute) connectors are connected.
     * 
     */
    @InputImport(name="resourceGroupName")
    private final @Nullable Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName == null ? Input.empty() : this.resourceGroupName;
    }

    /**
     * An object to access resources that are secured by an Azure AD tenant.
     * 
     */
    @InputImport(name="servicePrincipal")
    private final @Nullable Input<ServicePrincipalPropertiesArgs> servicePrincipal;

    public Input<ServicePrincipalPropertiesArgs> getServicePrincipal() {
        return this.servicePrincipal == null ? Input.empty() : this.servicePrincipal;
    }

    public HybridComputeSettingsPropertiesArgs(
        Input<Either<String,AutoProvision>> autoProvision,
        @Nullable Input<ProxyServerPropertiesArgs> proxyServer,
        @Nullable Input<String> region,
        @Nullable Input<String> resourceGroupName,
        @Nullable Input<ServicePrincipalPropertiesArgs> servicePrincipal) {
        this.autoProvision = Objects.requireNonNull(autoProvision, "expected parameter 'autoProvision' to be non-null");
        this.proxyServer = proxyServer;
        this.region = region;
        this.resourceGroupName = resourceGroupName;
        this.servicePrincipal = servicePrincipal;
    }

    private HybridComputeSettingsPropertiesArgs() {
        this.autoProvision = Input.empty();
        this.proxyServer = Input.empty();
        this.region = Input.empty();
        this.resourceGroupName = Input.empty();
        this.servicePrincipal = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HybridComputeSettingsPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Either<String,AutoProvision>> autoProvision;
        private @Nullable Input<ProxyServerPropertiesArgs> proxyServer;
        private @Nullable Input<String> region;
        private @Nullable Input<String> resourceGroupName;
        private @Nullable Input<ServicePrincipalPropertiesArgs> servicePrincipal;

        public Builder() {
    	      // Empty
        }

        public Builder(HybridComputeSettingsPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoProvision = defaults.autoProvision;
    	      this.proxyServer = defaults.proxyServer;
    	      this.region = defaults.region;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.servicePrincipal = defaults.servicePrincipal;
        }

        public Builder setAutoProvision(Input<Either<String,AutoProvision>> autoProvision) {
            this.autoProvision = Objects.requireNonNull(autoProvision);
            return this;
        }

        public Builder setAutoProvision(Either<String,AutoProvision> autoProvision) {
            this.autoProvision = Input.of(Objects.requireNonNull(autoProvision));
            return this;
        }

        public Builder setProxyServer(@Nullable Input<ProxyServerPropertiesArgs> proxyServer) {
            this.proxyServer = proxyServer;
            return this;
        }

        public Builder setProxyServer(@Nullable ProxyServerPropertiesArgs proxyServer) {
            this.proxyServer = Input.ofNullable(proxyServer);
            return this;
        }

        public Builder setRegion(@Nullable Input<String> region) {
            this.region = region;
            return this;
        }

        public Builder setRegion(@Nullable String region) {
            this.region = Input.ofNullable(region);
            return this;
        }

        public Builder setResourceGroupName(@Nullable Input<String> resourceGroupName) {
            this.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder setResourceGroupName(@Nullable String resourceGroupName) {
            this.resourceGroupName = Input.ofNullable(resourceGroupName);
            return this;
        }

        public Builder setServicePrincipal(@Nullable Input<ServicePrincipalPropertiesArgs> servicePrincipal) {
            this.servicePrincipal = servicePrincipal;
            return this;
        }

        public Builder setServicePrincipal(@Nullable ServicePrincipalPropertiesArgs servicePrincipal) {
            this.servicePrincipal = Input.ofNullable(servicePrincipal);
            return this;
        }

        public HybridComputeSettingsPropertiesArgs build() {
            return new HybridComputeSettingsPropertiesArgs(autoProvision, proxyServer, region, resourceGroupName, servicePrincipal);
        }
    }
}
