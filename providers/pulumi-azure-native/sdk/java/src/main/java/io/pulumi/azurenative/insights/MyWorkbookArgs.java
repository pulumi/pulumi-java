// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights;

import io.pulumi.azurenative.insights.enums.Kind;
import io.pulumi.azurenative.insights.inputs.MyWorkbookManagedIdentityArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MyWorkbookArgs extends io.pulumi.resources.ResourceArgs {

    public static final MyWorkbookArgs Empty = new MyWorkbookArgs();

    /**
     * Workbook category, as defined by the user at creation time.
     * 
     */
    @Import(name="category", required=true)
      private final Output<String> category;

    public Output<String> category() {
        return this.category;
    }

    /**
     * The user-defined name of the private workbook.
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Azure resource Id
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * Identity used for BYOS
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<MyWorkbookManagedIdentityArgs> identity;

    public Output<MyWorkbookManagedIdentityArgs> identity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * The kind of workbook. Choices are user and shared.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<Either<String,Kind>> kind;

    public Output<Either<String,Kind>> kind() {
        return this.kind == null ? Codegen.empty() : this.kind;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Azure resource name
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Application Insights component resource.
     * 
     */
    @Import(name="resourceName")
      private final @Nullable Output<String> resourceName;

    public Output<String> resourceName() {
        return this.resourceName == null ? Codegen.empty() : this.resourceName;
    }

    /**
     * Configuration of this particular private workbook. Configuration data is a string containing valid JSON
     * 
     */
    @Import(name="serializedData", required=true)
      private final Output<String> serializedData;

    public Output<String> serializedData() {
        return this.serializedData;
    }

    /**
     * Optional resourceId for a source resource.
     * 
     */
    @Import(name="sourceId")
      private final @Nullable Output<String> sourceId;

    public Output<String> sourceId() {
        return this.sourceId == null ? Codegen.empty() : this.sourceId;
    }

    /**
     * BYOS Storage Account URI
     * 
     */
    @Import(name="storageUri")
      private final @Nullable Output<String> storageUri;

    public Output<String> storageUri() {
        return this.storageUri == null ? Codegen.empty() : this.storageUri;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * Azure resource type
     * 
     */
    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> type() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    /**
     * This instance's version of the data model. This can change as new features are added that can be marked private workbook.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<String> version;

    public Output<String> version() {
        return this.version == null ? Codegen.empty() : this.version;
    }

    public MyWorkbookArgs(
        Output<String> category,
        Output<String> displayName,
        @Nullable Output<String> id,
        @Nullable Output<MyWorkbookManagedIdentityArgs> identity,
        @Nullable Output<Either<String,Kind>> kind,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        Output<String> resourceGroupName,
        @Nullable Output<String> resourceName,
        Output<String> serializedData,
        @Nullable Output<String> sourceId,
        @Nullable Output<String> storageUri,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> type,
        @Nullable Output<String> version) {
        this.category = Objects.requireNonNull(category, "expected parameter 'category' to be non-null");
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.id = id;
        this.identity = identity;
        this.kind = kind;
        this.location = location;
        this.name = name;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = resourceName;
        this.serializedData = Objects.requireNonNull(serializedData, "expected parameter 'serializedData' to be non-null");
        this.sourceId = sourceId;
        this.storageUri = storageUri;
        this.tags = tags;
        this.type = type;
        this.version = version;
    }

    private MyWorkbookArgs() {
        this.category = Codegen.empty();
        this.displayName = Codegen.empty();
        this.id = Codegen.empty();
        this.identity = Codegen.empty();
        this.kind = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.resourceName = Codegen.empty();
        this.serializedData = Codegen.empty();
        this.sourceId = Codegen.empty();
        this.storageUri = Codegen.empty();
        this.tags = Codegen.empty();
        this.type = Codegen.empty();
        this.version = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MyWorkbookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> category;
        private Output<String> displayName;
        private @Nullable Output<String> id;
        private @Nullable Output<MyWorkbookManagedIdentityArgs> identity;
        private @Nullable Output<Either<String,Kind>> kind;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> resourceName;
        private Output<String> serializedData;
        private @Nullable Output<String> sourceId;
        private @Nullable Output<String> storageUri;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> type;
        private @Nullable Output<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(MyWorkbookArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.serializedData = defaults.serializedData;
    	      this.sourceId = defaults.sourceId;
    	      this.storageUri = defaults.storageUri;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        public Builder category(Output<String> category) {
            this.category = Objects.requireNonNull(category);
            return this;
        }
        public Builder category(String category) {
            this.category = Output.of(Objects.requireNonNull(category));
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder identity(@Nullable Output<MyWorkbookManagedIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable MyWorkbookManagedIdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder kind(@Nullable Output<Either<String,Kind>> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable Either<String,Kind> kind) {
            this.kind = Codegen.ofNullable(kind);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder resourceName(@Nullable Output<String> resourceName) {
            this.resourceName = resourceName;
            return this;
        }
        public Builder resourceName(@Nullable String resourceName) {
            this.resourceName = Codegen.ofNullable(resourceName);
            return this;
        }
        public Builder serializedData(Output<String> serializedData) {
            this.serializedData = Objects.requireNonNull(serializedData);
            return this;
        }
        public Builder serializedData(String serializedData) {
            this.serializedData = Output.of(Objects.requireNonNull(serializedData));
            return this;
        }
        public Builder sourceId(@Nullable Output<String> sourceId) {
            this.sourceId = sourceId;
            return this;
        }
        public Builder sourceId(@Nullable String sourceId) {
            this.sourceId = Codegen.ofNullable(sourceId);
            return this;
        }
        public Builder storageUri(@Nullable Output<String> storageUri) {
            this.storageUri = storageUri;
            return this;
        }
        public Builder storageUri(@Nullable String storageUri) {
            this.storageUri = Codegen.ofNullable(storageUri);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }
        public Builder version(@Nullable Output<String> version) {
            this.version = version;
            return this;
        }
        public Builder version(@Nullable String version) {
            this.version = Codegen.ofNullable(version);
            return this;
        }        public MyWorkbookArgs build() {
            return new MyWorkbookArgs(category, displayName, id, identity, kind, location, name, resourceGroupName, resourceName, serializedData, sourceId, storageUri, tags, type, version);
        }
    }
}
