// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.edgeorder.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;


/**
 * The resource management error additional info.
 * 
 */
public final class ErrorAdditionalInfoResponse extends io.pulumi.resources.InvokeArgs {

    public static final ErrorAdditionalInfoResponse Empty = new ErrorAdditionalInfoResponse();

    /**
     * The additional info.
     * 
     */
    @Import(name="info", required=true)
      private final Object info;

    public Object info() {
        return this.info;
    }

    /**
     * The additional info type.
     * 
     */
    @Import(name="type", required=true)
      private final String type;

    public String type() {
        return this.type;
    }

    public ErrorAdditionalInfoResponse(
        Object info,
        String type) {
        this.info = Objects.requireNonNull(info, "expected parameter 'info' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private ErrorAdditionalInfoResponse() {
        this.info = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ErrorAdditionalInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Object info;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ErrorAdditionalInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.info = defaults.info;
    	      this.type = defaults.type;
        }

        public Builder info(Object info) {
            this.info = Objects.requireNonNull(info);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public ErrorAdditionalInfoResponse build() {
            return new ErrorAdditionalInfoResponse(info, type);
        }
    }
}
