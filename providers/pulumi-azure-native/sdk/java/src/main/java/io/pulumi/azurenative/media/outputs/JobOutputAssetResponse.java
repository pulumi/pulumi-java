// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.outputs;

import io.pulumi.azurenative.media.outputs.JobErrorResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class JobOutputAssetResponse {
    private final String assetName;
    private final String endTime;
    private final JobErrorResponse error;
    private final @Nullable String label;
    private final String odataType;
    private final Integer progress;
    private final String startTime;
    private final String state;

    @OutputCustomType.Constructor({"assetName","endTime","error","label","odataType","progress","startTime","state"})
    private JobOutputAssetResponse(
        String assetName,
        String endTime,
        JobErrorResponse error,
        @Nullable String label,
        String odataType,
        Integer progress,
        String startTime,
        String state) {
        this.assetName = Objects.requireNonNull(assetName);
        this.endTime = Objects.requireNonNull(endTime);
        this.error = Objects.requireNonNull(error);
        this.label = label;
        this.odataType = Objects.requireNonNull(odataType);
        this.progress = Objects.requireNonNull(progress);
        this.startTime = Objects.requireNonNull(startTime);
        this.state = Objects.requireNonNull(state);
    }

    public String getAssetName() {
        return this.assetName;
    }
    public String getEndTime() {
        return this.endTime;
    }
    public JobErrorResponse getError() {
        return this.error;
    }
    public Optional<String> getLabel() {
        return Optional.ofNullable(this.label);
    }
    public String getOdataType() {
        return this.odataType;
    }
    public Integer getProgress() {
        return this.progress;
    }
    public String getStartTime() {
        return this.startTime;
    }
    public String getState() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobOutputAssetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String assetName;
        private String endTime;
        private JobErrorResponse error;
        private @Nullable String label;
        private String odataType;
        private Integer progress;
        private String startTime;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(JobOutputAssetResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetName = defaults.assetName;
    	      this.endTime = defaults.endTime;
    	      this.error = defaults.error;
    	      this.label = defaults.label;
    	      this.odataType = defaults.odataType;
    	      this.progress = defaults.progress;
    	      this.startTime = defaults.startTime;
    	      this.state = defaults.state;
        }

        public Builder setAssetName(String assetName) {
            this.assetName = Objects.requireNonNull(assetName);
            return this;
        }

        public Builder setEndTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }

        public Builder setError(JobErrorResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }

        public Builder setLabel(@Nullable String label) {
            this.label = label;
            return this;
        }

        public Builder setOdataType(String odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }

        public Builder setProgress(Integer progress) {
            this.progress = Objects.requireNonNull(progress);
            return this;
        }

        public Builder setStartTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public JobOutputAssetResponse build() {
            return new JobOutputAssetResponse(assetName, endTime, error, label, odataType, progress, startTime, state);
        }
    }
}
