// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.outputs;

import io.pulumi.azurenative.servicefabricmesh.outputs.DiagnosticsDescriptionResponse;
import io.pulumi.azurenative.servicefabricmesh.outputs.ServiceResourceDescriptionResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetApplicationResult {
    private final @Nullable String debugParams;
    private final @Nullable String description;
    private final @Nullable DiagnosticsDescriptionResponse diagnostics;
    private final String healthState;
    private final String id;
    private final String location;
    private final String name;
    private final String provisioningState;
    private final List<String> serviceNames;
    private final @Nullable List<ServiceResourceDescriptionResponse> services;
    private final String status;
    private final String statusDetails;
    private final @Nullable Map<String,String> tags;
    private final String type;
    private final String unhealthyEvaluation;

    @OutputCustomType.Constructor({"debugParams","description","diagnostics","healthState","id","location","name","provisioningState","serviceNames","services","status","statusDetails","tags","type","unhealthyEvaluation"})
    private GetApplicationResult(
        @Nullable String debugParams,
        @Nullable String description,
        @Nullable DiagnosticsDescriptionResponse diagnostics,
        String healthState,
        String id,
        String location,
        String name,
        String provisioningState,
        List<String> serviceNames,
        @Nullable List<ServiceResourceDescriptionResponse> services,
        String status,
        String statusDetails,
        @Nullable Map<String,String> tags,
        String type,
        String unhealthyEvaluation) {
        this.debugParams = debugParams;
        this.description = description;
        this.diagnostics = diagnostics;
        this.healthState = Objects.requireNonNull(healthState);
        this.id = Objects.requireNonNull(id);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.serviceNames = Objects.requireNonNull(serviceNames);
        this.services = services;
        this.status = Objects.requireNonNull(status);
        this.statusDetails = Objects.requireNonNull(statusDetails);
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.unhealthyEvaluation = Objects.requireNonNull(unhealthyEvaluation);
    }

    public Optional<String> getDebugParams() {
        return Optional.ofNullable(this.debugParams);
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public Optional<DiagnosticsDescriptionResponse> getDiagnostics() {
        return Optional.ofNullable(this.diagnostics);
    }
    public String getHealthState() {
        return this.healthState;
    }
    public String getId() {
        return this.id;
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public List<String> getServiceNames() {
        return this.serviceNames;
    }
    public List<ServiceResourceDescriptionResponse> getServices() {
        return this.services == null ? List.of() : this.services;
    }
    public String getStatus() {
        return this.status;
    }
    public String getStatusDetails() {
        return this.statusDetails;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }
    public String getUnhealthyEvaluation() {
        return this.unhealthyEvaluation;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String debugParams;
        private @Nullable String description;
        private @Nullable DiagnosticsDescriptionResponse diagnostics;
        private String healthState;
        private String id;
        private String location;
        private String name;
        private String provisioningState;
        private List<String> serviceNames;
        private @Nullable List<ServiceResourceDescriptionResponse> services;
        private String status;
        private String statusDetails;
        private @Nullable Map<String,String> tags;
        private String type;
        private String unhealthyEvaluation;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.debugParams = defaults.debugParams;
    	      this.description = defaults.description;
    	      this.diagnostics = defaults.diagnostics;
    	      this.healthState = defaults.healthState;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.serviceNames = defaults.serviceNames;
    	      this.services = defaults.services;
    	      this.status = defaults.status;
    	      this.statusDetails = defaults.statusDetails;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.unhealthyEvaluation = defaults.unhealthyEvaluation;
        }

        public Builder setDebugParams(@Nullable String debugParams) {
            this.debugParams = debugParams;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setDiagnostics(@Nullable DiagnosticsDescriptionResponse diagnostics) {
            this.diagnostics = diagnostics;
            return this;
        }

        public Builder setHealthState(String healthState) {
            this.healthState = Objects.requireNonNull(healthState);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setServiceNames(List<String> serviceNames) {
            this.serviceNames = Objects.requireNonNull(serviceNames);
            return this;
        }

        public Builder setServices(@Nullable List<ServiceResourceDescriptionResponse> services) {
            this.services = services;
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setStatusDetails(String statusDetails) {
            this.statusDetails = Objects.requireNonNull(statusDetails);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUnhealthyEvaluation(String unhealthyEvaluation) {
            this.unhealthyEvaluation = Objects.requireNonNull(unhealthyEvaluation);
            return this;
        }

        public GetApplicationResult build() {
            return new GetApplicationResult(debugParams, description, diagnostics, healthState, id, location, name, provisioningState, serviceNames, services, status, statusDetails, tags, type, unhealthyEvaluation);
        }
    }
}
