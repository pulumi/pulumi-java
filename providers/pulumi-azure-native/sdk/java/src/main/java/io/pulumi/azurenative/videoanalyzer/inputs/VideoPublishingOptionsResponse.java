// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.videoanalyzer.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Optional flags used to change how video is published. These are only allowed for topologies where "kind" is set to "live".
 * 
 */
public final class VideoPublishingOptionsResponse extends io.pulumi.resources.InvokeArgs {

    public static final VideoPublishingOptionsResponse Empty = new VideoPublishingOptionsResponse();

    /**
     * When set to 'true' content will not be archived or recorded. This is used, for example, when the topology is used only for low latency video streaming. Default is 'false'.  If set to 'true', then "disableRtspPublishing" must be set to 'false'.
     * 
     */
    @Import(name="disableArchive")
      private final @Nullable String disableArchive;

    public Optional<String> getDisableArchive() {
        return this.disableArchive == null ? Optional.empty() : Optional.ofNullable(this.disableArchive);
    }

    /**
     * When set to 'true' the RTSP playback URL will not be published, disabling low latency streaming. This is used, for example, when the topology is used only for archiving content. Default is 'false'.  If set to 'true', then "disableArchive" must be set to 'false'.
     * 
     */
    @Import(name="disableRtspPublishing")
      private final @Nullable String disableRtspPublishing;

    public Optional<String> getDisableRtspPublishing() {
        return this.disableRtspPublishing == null ? Optional.empty() : Optional.ofNullable(this.disableRtspPublishing);
    }

    public VideoPublishingOptionsResponse(
        @Nullable String disableArchive,
        @Nullable String disableRtspPublishing) {
        this.disableArchive = disableArchive;
        this.disableRtspPublishing = disableRtspPublishing;
    }

    private VideoPublishingOptionsResponse() {
        this.disableArchive = null;
        this.disableRtspPublishing = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VideoPublishingOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String disableArchive;
        private @Nullable String disableRtspPublishing;

        public Builder() {
    	      // Empty
        }

        public Builder(VideoPublishingOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disableArchive = defaults.disableArchive;
    	      this.disableRtspPublishing = defaults.disableRtspPublishing;
        }

        public Builder disableArchive(@Nullable String disableArchive) {
            this.disableArchive = disableArchive;
            return this;
        }
        public Builder disableRtspPublishing(@Nullable String disableRtspPublishing) {
            this.disableRtspPublishing = disableRtspPublishing;
            return this;
        }        public VideoPublishingOptionsResponse build() {
            return new VideoPublishingOptionsResponse(disableArchive, disableRtspPublishing);
        }
    }
}
