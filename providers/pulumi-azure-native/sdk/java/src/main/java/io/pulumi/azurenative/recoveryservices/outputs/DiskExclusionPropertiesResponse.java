// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class DiskExclusionPropertiesResponse {
    private final @Nullable List<Integer> diskLunList;
    private final @Nullable Boolean isInclusionList;

    @OutputCustomType.Constructor({"diskLunList","isInclusionList"})
    private DiskExclusionPropertiesResponse(
        @Nullable List<Integer> diskLunList,
        @Nullable Boolean isInclusionList) {
        this.diskLunList = diskLunList;
        this.isInclusionList = isInclusionList;
    }

    public List<Integer> getDiskLunList() {
        return this.diskLunList == null ? List.of() : this.diskLunList;
    }
    public Optional<Boolean> getIsInclusionList() {
        return Optional.ofNullable(this.isInclusionList);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskExclusionPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<Integer> diskLunList;
        private @Nullable Boolean isInclusionList;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskExclusionPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskLunList = defaults.diskLunList;
    	      this.isInclusionList = defaults.isInclusionList;
        }

        public Builder setDiskLunList(@Nullable List<Integer> diskLunList) {
            this.diskLunList = diskLunList;
            return this;
        }

        public Builder setIsInclusionList(@Nullable Boolean isInclusionList) {
            this.isInclusionList = isInclusionList;
            return this;
        }

        public DiskExclusionPropertiesResponse build() {
            return new DiskExclusionPropertiesResponse(diskLunList, isInclusionList);
        }
    }
}
