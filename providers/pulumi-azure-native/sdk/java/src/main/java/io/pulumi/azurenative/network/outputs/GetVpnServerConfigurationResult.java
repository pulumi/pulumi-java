// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.AadAuthenticationParametersResponse;
import io.pulumi.azurenative.network.outputs.IpsecPolicyResponse;
import io.pulumi.azurenative.network.outputs.P2SVpnGatewayResponse;
import io.pulumi.azurenative.network.outputs.RadiusServerResponse;
import io.pulumi.azurenative.network.outputs.VpnServerConfigRadiusClientRootCertificateResponse;
import io.pulumi.azurenative.network.outputs.VpnServerConfigRadiusServerRootCertificateResponse;
import io.pulumi.azurenative.network.outputs.VpnServerConfigVpnClientRevokedCertificateResponse;
import io.pulumi.azurenative.network.outputs.VpnServerConfigVpnClientRootCertificateResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetVpnServerConfigurationResult {
    private final @Nullable AadAuthenticationParametersResponse aadAuthenticationParameters;
    private final String etag;
    private final @Nullable String id;
    private final @Nullable String location;
    private final String name;
    private final List<P2SVpnGatewayResponse> p2SVpnGateways;
    private final String provisioningState;
    private final @Nullable List<VpnServerConfigRadiusClientRootCertificateResponse> radiusClientRootCertificates;
    private final @Nullable String radiusServerAddress;
    private final @Nullable List<VpnServerConfigRadiusServerRootCertificateResponse> radiusServerRootCertificates;
    private final @Nullable String radiusServerSecret;
    private final @Nullable List<RadiusServerResponse> radiusServers;
    private final @Nullable Map<String,String> tags;
    private final String type;
    private final @Nullable List<String> vpnAuthenticationTypes;
    private final @Nullable List<IpsecPolicyResponse> vpnClientIpsecPolicies;
    private final @Nullable List<VpnServerConfigVpnClientRevokedCertificateResponse> vpnClientRevokedCertificates;
    private final @Nullable List<VpnServerConfigVpnClientRootCertificateResponse> vpnClientRootCertificates;
    private final @Nullable List<String> vpnProtocols;

    @OutputCustomType.Constructor({"aadAuthenticationParameters","etag","id","location","name","p2SVpnGateways","provisioningState","radiusClientRootCertificates","radiusServerAddress","radiusServerRootCertificates","radiusServerSecret","radiusServers","tags","type","vpnAuthenticationTypes","vpnClientIpsecPolicies","vpnClientRevokedCertificates","vpnClientRootCertificates","vpnProtocols"})
    private GetVpnServerConfigurationResult(
        @Nullable AadAuthenticationParametersResponse aadAuthenticationParameters,
        String etag,
        @Nullable String id,
        @Nullable String location,
        String name,
        List<P2SVpnGatewayResponse> p2SVpnGateways,
        String provisioningState,
        @Nullable List<VpnServerConfigRadiusClientRootCertificateResponse> radiusClientRootCertificates,
        @Nullable String radiusServerAddress,
        @Nullable List<VpnServerConfigRadiusServerRootCertificateResponse> radiusServerRootCertificates,
        @Nullable String radiusServerSecret,
        @Nullable List<RadiusServerResponse> radiusServers,
        @Nullable Map<String,String> tags,
        String type,
        @Nullable List<String> vpnAuthenticationTypes,
        @Nullable List<IpsecPolicyResponse> vpnClientIpsecPolicies,
        @Nullable List<VpnServerConfigVpnClientRevokedCertificateResponse> vpnClientRevokedCertificates,
        @Nullable List<VpnServerConfigVpnClientRootCertificateResponse> vpnClientRootCertificates,
        @Nullable List<String> vpnProtocols) {
        this.aadAuthenticationParameters = aadAuthenticationParameters;
        this.etag = Objects.requireNonNull(etag);
        this.id = id;
        this.location = location;
        this.name = Objects.requireNonNull(name);
        this.p2SVpnGateways = Objects.requireNonNull(p2SVpnGateways);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.radiusClientRootCertificates = radiusClientRootCertificates;
        this.radiusServerAddress = radiusServerAddress;
        this.radiusServerRootCertificates = radiusServerRootCertificates;
        this.radiusServerSecret = radiusServerSecret;
        this.radiusServers = radiusServers;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.vpnAuthenticationTypes = vpnAuthenticationTypes;
        this.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
        this.vpnClientRevokedCertificates = vpnClientRevokedCertificates;
        this.vpnClientRootCertificates = vpnClientRootCertificates;
        this.vpnProtocols = vpnProtocols;
    }

    public Optional<AadAuthenticationParametersResponse> getAadAuthenticationParameters() {
        return Optional.ofNullable(this.aadAuthenticationParameters);
    }
    public String getEtag() {
        return this.etag;
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    public String getName() {
        return this.name;
    }
    public List<P2SVpnGatewayResponse> getP2SVpnGateways() {
        return this.p2SVpnGateways;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public List<VpnServerConfigRadiusClientRootCertificateResponse> getRadiusClientRootCertificates() {
        return this.radiusClientRootCertificates == null ? List.of() : this.radiusClientRootCertificates;
    }
    public Optional<String> getRadiusServerAddress() {
        return Optional.ofNullable(this.radiusServerAddress);
    }
    public List<VpnServerConfigRadiusServerRootCertificateResponse> getRadiusServerRootCertificates() {
        return this.radiusServerRootCertificates == null ? List.of() : this.radiusServerRootCertificates;
    }
    public Optional<String> getRadiusServerSecret() {
        return Optional.ofNullable(this.radiusServerSecret);
    }
    public List<RadiusServerResponse> getRadiusServers() {
        return this.radiusServers == null ? List.of() : this.radiusServers;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }
    public List<String> getVpnAuthenticationTypes() {
        return this.vpnAuthenticationTypes == null ? List.of() : this.vpnAuthenticationTypes;
    }
    public List<IpsecPolicyResponse> getVpnClientIpsecPolicies() {
        return this.vpnClientIpsecPolicies == null ? List.of() : this.vpnClientIpsecPolicies;
    }
    public List<VpnServerConfigVpnClientRevokedCertificateResponse> getVpnClientRevokedCertificates() {
        return this.vpnClientRevokedCertificates == null ? List.of() : this.vpnClientRevokedCertificates;
    }
    public List<VpnServerConfigVpnClientRootCertificateResponse> getVpnClientRootCertificates() {
        return this.vpnClientRootCertificates == null ? List.of() : this.vpnClientRootCertificates;
    }
    public List<String> getVpnProtocols() {
        return this.vpnProtocols == null ? List.of() : this.vpnProtocols;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpnServerConfigurationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AadAuthenticationParametersResponse aadAuthenticationParameters;
        private String etag;
        private @Nullable String id;
        private @Nullable String location;
        private String name;
        private List<P2SVpnGatewayResponse> p2SVpnGateways;
        private String provisioningState;
        private @Nullable List<VpnServerConfigRadiusClientRootCertificateResponse> radiusClientRootCertificates;
        private @Nullable String radiusServerAddress;
        private @Nullable List<VpnServerConfigRadiusServerRootCertificateResponse> radiusServerRootCertificates;
        private @Nullable String radiusServerSecret;
        private @Nullable List<RadiusServerResponse> radiusServers;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable List<String> vpnAuthenticationTypes;
        private @Nullable List<IpsecPolicyResponse> vpnClientIpsecPolicies;
        private @Nullable List<VpnServerConfigVpnClientRevokedCertificateResponse> vpnClientRevokedCertificates;
        private @Nullable List<VpnServerConfigVpnClientRootCertificateResponse> vpnClientRootCertificates;
        private @Nullable List<String> vpnProtocols;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVpnServerConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadAuthenticationParameters = defaults.aadAuthenticationParameters;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.p2SVpnGateways = defaults.p2SVpnGateways;
    	      this.provisioningState = defaults.provisioningState;
    	      this.radiusClientRootCertificates = defaults.radiusClientRootCertificates;
    	      this.radiusServerAddress = defaults.radiusServerAddress;
    	      this.radiusServerRootCertificates = defaults.radiusServerRootCertificates;
    	      this.radiusServerSecret = defaults.radiusServerSecret;
    	      this.radiusServers = defaults.radiusServers;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.vpnAuthenticationTypes = defaults.vpnAuthenticationTypes;
    	      this.vpnClientIpsecPolicies = defaults.vpnClientIpsecPolicies;
    	      this.vpnClientRevokedCertificates = defaults.vpnClientRevokedCertificates;
    	      this.vpnClientRootCertificates = defaults.vpnClientRootCertificates;
    	      this.vpnProtocols = defaults.vpnProtocols;
        }

        public Builder setAadAuthenticationParameters(@Nullable AadAuthenticationParametersResponse aadAuthenticationParameters) {
            this.aadAuthenticationParameters = aadAuthenticationParameters;
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setP2SVpnGateways(List<P2SVpnGatewayResponse> p2SVpnGateways) {
            this.p2SVpnGateways = Objects.requireNonNull(p2SVpnGateways);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRadiusClientRootCertificates(@Nullable List<VpnServerConfigRadiusClientRootCertificateResponse> radiusClientRootCertificates) {
            this.radiusClientRootCertificates = radiusClientRootCertificates;
            return this;
        }

        public Builder setRadiusServerAddress(@Nullable String radiusServerAddress) {
            this.radiusServerAddress = radiusServerAddress;
            return this;
        }

        public Builder setRadiusServerRootCertificates(@Nullable List<VpnServerConfigRadiusServerRootCertificateResponse> radiusServerRootCertificates) {
            this.radiusServerRootCertificates = radiusServerRootCertificates;
            return this;
        }

        public Builder setRadiusServerSecret(@Nullable String radiusServerSecret) {
            this.radiusServerSecret = radiusServerSecret;
            return this;
        }

        public Builder setRadiusServers(@Nullable List<RadiusServerResponse> radiusServers) {
            this.radiusServers = radiusServers;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVpnAuthenticationTypes(@Nullable List<String> vpnAuthenticationTypes) {
            this.vpnAuthenticationTypes = vpnAuthenticationTypes;
            return this;
        }

        public Builder setVpnClientIpsecPolicies(@Nullable List<IpsecPolicyResponse> vpnClientIpsecPolicies) {
            this.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
            return this;
        }

        public Builder setVpnClientRevokedCertificates(@Nullable List<VpnServerConfigVpnClientRevokedCertificateResponse> vpnClientRevokedCertificates) {
            this.vpnClientRevokedCertificates = vpnClientRevokedCertificates;
            return this;
        }

        public Builder setVpnClientRootCertificates(@Nullable List<VpnServerConfigVpnClientRootCertificateResponse> vpnClientRootCertificates) {
            this.vpnClientRootCertificates = vpnClientRootCertificates;
            return this;
        }

        public Builder setVpnProtocols(@Nullable List<String> vpnProtocols) {
            this.vpnProtocols = vpnProtocols;
            return this;
        }

        public GetVpnServerConfigurationResult build() {
            return new GetVpnServerConfigurationResult(aadAuthenticationParameters, etag, id, location, name, p2SVpnGateways, provisioningState, radiusClientRootCertificates, radiusServerAddress, radiusServerRootCertificates, radiusServerSecret, radiusServers, tags, type, vpnAuthenticationTypes, vpnClientIpsecPolicies, vpnClientRevokedCertificates, vpnClientRootCertificates, vpnProtocols);
        }
    }
}
