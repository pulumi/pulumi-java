// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.notificationhubs.outputs;

import io.pulumi.azurenative.notificationhubs.outputs.SkuResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamespaceResult {
    /**
     * The time the namespace was created.
     * 
     */
    private final @Nullable String createdAt;
    /**
     * Whether or not the namespace is set as Critical.
     * 
     */
    private final @Nullable Boolean critical;
    /**
     * Data center for the namespace
     * 
     */
    private final @Nullable String dataCenter;
    /**
     * Whether or not the namespace is currently enabled.
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * Resource Id
     * 
     */
    private final String id;
    /**
     * Resource location
     * 
     */
    private final @Nullable String location;
    /**
     * Identifier for Azure Insights metrics
     * 
     */
    private final String metricId;
    /**
     * Resource name
     * 
     */
    private final String name;
    /**
     * The namespace type.
     * 
     */
    private final @Nullable String namespaceType;
    /**
     * Provisioning state of the Namespace.
     * 
     */
    private final @Nullable String provisioningState;
    /**
     * Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
     * 
     */
    private final @Nullable String region;
    /**
     * ScaleUnit where the namespace gets created
     * 
     */
    private final @Nullable String scaleUnit;
    /**
     * Endpoint you can use to perform NotificationHub operations.
     * 
     */
    private final @Nullable String serviceBusEndpoint;
    /**
     * The sku of the created namespace
     * 
     */
    private final @Nullable SkuResponse sku;
    /**
     * Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
     * 
     */
    private final @Nullable String status;
    /**
     * The Id of the Azure subscription associated with the namespace.
     * 
     */
    private final @Nullable String subscriptionId;
    /**
     * Resource tags
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Resource type
     * 
     */
    private final String type;
    /**
     * The time the namespace was updated.
     * 
     */
    private final @Nullable String updatedAt;

    @CustomType.Constructor
    private GetNamespaceResult(
        @CustomType.Parameter("createdAt") @Nullable String createdAt,
        @CustomType.Parameter("critical") @Nullable Boolean critical,
        @CustomType.Parameter("dataCenter") @Nullable String dataCenter,
        @CustomType.Parameter("enabled") @Nullable Boolean enabled,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("metricId") String metricId,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("namespaceType") @Nullable String namespaceType,
        @CustomType.Parameter("provisioningState") @Nullable String provisioningState,
        @CustomType.Parameter("region") @Nullable String region,
        @CustomType.Parameter("scaleUnit") @Nullable String scaleUnit,
        @CustomType.Parameter("serviceBusEndpoint") @Nullable String serviceBusEndpoint,
        @CustomType.Parameter("sku") @Nullable SkuResponse sku,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("subscriptionId") @Nullable String subscriptionId,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("updatedAt") @Nullable String updatedAt) {
        this.createdAt = createdAt;
        this.critical = critical;
        this.dataCenter = dataCenter;
        this.enabled = enabled;
        this.id = id;
        this.location = location;
        this.metricId = metricId;
        this.name = name;
        this.namespaceType = namespaceType;
        this.provisioningState = provisioningState;
        this.region = region;
        this.scaleUnit = scaleUnit;
        this.serviceBusEndpoint = serviceBusEndpoint;
        this.sku = sku;
        this.status = status;
        this.subscriptionId = subscriptionId;
        this.tags = tags;
        this.type = type;
        this.updatedAt = updatedAt;
    }

    /**
     * The time the namespace was created.
     * 
    */
    public Optional<String> getCreatedAt() {
        return Optional.ofNullable(this.createdAt);
    }
    /**
     * Whether or not the namespace is set as Critical.
     * 
    */
    public Optional<Boolean> getCritical() {
        return Optional.ofNullable(this.critical);
    }
    /**
     * Data center for the namespace
     * 
    */
    public Optional<String> getDataCenter() {
        return Optional.ofNullable(this.dataCenter);
    }
    /**
     * Whether or not the namespace is currently enabled.
     * 
    */
    public Optional<Boolean> getEnabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * Resource Id
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Resource location
     * 
    */
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    /**
     * Identifier for Azure Insights metrics
     * 
    */
    public String getMetricId() {
        return this.metricId;
    }
    /**
     * Resource name
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The namespace type.
     * 
    */
    public Optional<String> getNamespaceType() {
        return Optional.ofNullable(this.namespaceType);
    }
    /**
     * Provisioning state of the Namespace.
     * 
    */
    public Optional<String> getProvisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }
    /**
     * Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
     * 
    */
    public Optional<String> getRegion() {
        return Optional.ofNullable(this.region);
    }
    /**
     * ScaleUnit where the namespace gets created
     * 
    */
    public Optional<String> getScaleUnit() {
        return Optional.ofNullable(this.scaleUnit);
    }
    /**
     * Endpoint you can use to perform NotificationHub operations.
     * 
    */
    public Optional<String> getServiceBusEndpoint() {
        return Optional.ofNullable(this.serviceBusEndpoint);
    }
    /**
     * The sku of the created namespace
     * 
    */
    public Optional<SkuResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
     * 
    */
    public Optional<String> getStatus() {
        return Optional.ofNullable(this.status);
    }
    /**
     * The Id of the Azure subscription associated with the namespace.
     * 
    */
    public Optional<String> getSubscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }
    /**
     * Resource tags
     * 
    */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Resource type
     * 
    */
    public String getType() {
        return this.type;
    }
    /**
     * The time the namespace was updated.
     * 
    */
    public Optional<String> getUpdatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String createdAt;
        private @Nullable Boolean critical;
        private @Nullable String dataCenter;
        private @Nullable Boolean enabled;
        private String id;
        private @Nullable String location;
        private String metricId;
        private String name;
        private @Nullable String namespaceType;
        private @Nullable String provisioningState;
        private @Nullable String region;
        private @Nullable String scaleUnit;
        private @Nullable String serviceBusEndpoint;
        private @Nullable SkuResponse sku;
        private @Nullable String status;
        private @Nullable String subscriptionId;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable String updatedAt;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNamespaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.critical = defaults.critical;
    	      this.dataCenter = defaults.dataCenter;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.metricId = defaults.metricId;
    	      this.name = defaults.name;
    	      this.namespaceType = defaults.namespaceType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.region = defaults.region;
    	      this.scaleUnit = defaults.scaleUnit;
    	      this.serviceBusEndpoint = defaults.serviceBusEndpoint;
    	      this.sku = defaults.sku;
    	      this.status = defaults.status;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.updatedAt = defaults.updatedAt;
        }

        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = createdAt;
            return this;
        }
        public Builder critical(@Nullable Boolean critical) {
            this.critical = critical;
            return this;
        }
        public Builder dataCenter(@Nullable String dataCenter) {
            this.dataCenter = dataCenter;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder metricId(String metricId) {
            this.metricId = Objects.requireNonNull(metricId);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder namespaceType(@Nullable String namespaceType) {
            this.namespaceType = namespaceType;
            return this;
        }
        public Builder provisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        public Builder scaleUnit(@Nullable String scaleUnit) {
            this.scaleUnit = scaleUnit;
            return this;
        }
        public Builder serviceBusEndpoint(@Nullable String serviceBusEndpoint) {
            this.serviceBusEndpoint = serviceBusEndpoint;
            return this;
        }
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder subscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder updatedAt(@Nullable String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }        public GetNamespaceResult build() {
            return new GetNamespaceResult(createdAt, critical, dataCenter, enabled, id, location, metricId, name, namespaceType, provisioningState, region, scaleUnit, serviceBusEndpoint, sku, status, subscriptionId, tags, type, updatedAt);
        }
    }
}
