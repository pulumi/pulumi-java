// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devices.inputs;

import io.pulumi.azurenative.devices.inputs.CloudToDevicePropertiesResponse;
import io.pulumi.azurenative.devices.inputs.EventHubPropertiesResponse;
import io.pulumi.azurenative.devices.inputs.IotHubLocationDescriptionResponse;
import io.pulumi.azurenative.devices.inputs.IpFilterRuleResponse;
import io.pulumi.azurenative.devices.inputs.MessagingEndpointPropertiesResponse;
import io.pulumi.azurenative.devices.inputs.NetworkRuleSetPropertiesResponse;
import io.pulumi.azurenative.devices.inputs.PrivateEndpointConnectionResponse;
import io.pulumi.azurenative.devices.inputs.RoutingPropertiesResponse;
import io.pulumi.azurenative.devices.inputs.SharedAccessSignatureAuthorizationRuleResponse;
import io.pulumi.azurenative.devices.inputs.StorageEndpointPropertiesResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IotHubPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final IotHubPropertiesResponse Empty = new IotHubPropertiesResponse();

    @InputImport(name="authorizationPolicies")
    private final @Nullable List<SharedAccessSignatureAuthorizationRuleResponse> authorizationPolicies;

    public List<SharedAccessSignatureAuthorizationRuleResponse> getAuthorizationPolicies() {
        return this.authorizationPolicies == null ? List.of() : this.authorizationPolicies;
    }

    @InputImport(name="cloudToDevice")
    private final @Nullable CloudToDevicePropertiesResponse cloudToDevice;

    public Optional<CloudToDevicePropertiesResponse> getCloudToDevice() {
        return this.cloudToDevice == null ? Optional.empty() : Optional.ofNullable(this.cloudToDevice);
    }

    @InputImport(name="comments")
    private final @Nullable String comments;

    public Optional<String> getComments() {
        return this.comments == null ? Optional.empty() : Optional.ofNullable(this.comments);
    }

    @InputImport(name="enableFileUploadNotifications")
    private final @Nullable Boolean enableFileUploadNotifications;

    public Optional<Boolean> getEnableFileUploadNotifications() {
        return this.enableFileUploadNotifications == null ? Optional.empty() : Optional.ofNullable(this.enableFileUploadNotifications);
    }

    @InputImport(name="eventHubEndpoints")
    private final @Nullable Map<String,EventHubPropertiesResponse> eventHubEndpoints;

    public Map<String,EventHubPropertiesResponse> getEventHubEndpoints() {
        return this.eventHubEndpoints == null ? Map.of() : this.eventHubEndpoints;
    }

    @InputImport(name="features")
    private final @Nullable String features;

    public Optional<String> getFeatures() {
        return this.features == null ? Optional.empty() : Optional.ofNullable(this.features);
    }

    @InputImport(name="hostName", required=true)
    private final String hostName;

    public String getHostName() {
        return this.hostName;
    }

    @InputImport(name="ipFilterRules")
    private final @Nullable List<IpFilterRuleResponse> ipFilterRules;

    public List<IpFilterRuleResponse> getIpFilterRules() {
        return this.ipFilterRules == null ? List.of() : this.ipFilterRules;
    }

    @InputImport(name="locations", required=true)
    private final List<IotHubLocationDescriptionResponse> locations;

    public List<IotHubLocationDescriptionResponse> getLocations() {
        return this.locations;
    }

    @InputImport(name="messagingEndpoints")
    private final @Nullable Map<String,MessagingEndpointPropertiesResponse> messagingEndpoints;

    public Map<String,MessagingEndpointPropertiesResponse> getMessagingEndpoints() {
        return this.messagingEndpoints == null ? Map.of() : this.messagingEndpoints;
    }

    @InputImport(name="minTlsVersion")
    private final @Nullable String minTlsVersion;

    public Optional<String> getMinTlsVersion() {
        return this.minTlsVersion == null ? Optional.empty() : Optional.ofNullable(this.minTlsVersion);
    }

    @InputImport(name="networkRuleSets")
    private final @Nullable NetworkRuleSetPropertiesResponse networkRuleSets;

    public Optional<NetworkRuleSetPropertiesResponse> getNetworkRuleSets() {
        return this.networkRuleSets == null ? Optional.empty() : Optional.ofNullable(this.networkRuleSets);
    }

    @InputImport(name="privateEndpointConnections")
    private final @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;

    public List<PrivateEndpointConnectionResponse> getPrivateEndpointConnections() {
        return this.privateEndpointConnections == null ? List.of() : this.privateEndpointConnections;
    }

    @InputImport(name="provisioningState", required=true)
    private final String provisioningState;

    public String getProvisioningState() {
        return this.provisioningState;
    }

    @InputImport(name="publicNetworkAccess")
    private final @Nullable String publicNetworkAccess;

    public Optional<String> getPublicNetworkAccess() {
        return this.publicNetworkAccess == null ? Optional.empty() : Optional.ofNullable(this.publicNetworkAccess);
    }

    @InputImport(name="routing")
    private final @Nullable RoutingPropertiesResponse routing;

    public Optional<RoutingPropertiesResponse> getRouting() {
        return this.routing == null ? Optional.empty() : Optional.ofNullable(this.routing);
    }

    @InputImport(name="state", required=true)
    private final String state;

    public String getState() {
        return this.state;
    }

    @InputImport(name="storageEndpoints")
    private final @Nullable Map<String,StorageEndpointPropertiesResponse> storageEndpoints;

    public Map<String,StorageEndpointPropertiesResponse> getStorageEndpoints() {
        return this.storageEndpoints == null ? Map.of() : this.storageEndpoints;
    }

    public IotHubPropertiesResponse(
        @Nullable List<SharedAccessSignatureAuthorizationRuleResponse> authorizationPolicies,
        @Nullable CloudToDevicePropertiesResponse cloudToDevice,
        @Nullable String comments,
        @Nullable Boolean enableFileUploadNotifications,
        @Nullable Map<String,EventHubPropertiesResponse> eventHubEndpoints,
        @Nullable String features,
        String hostName,
        @Nullable List<IpFilterRuleResponse> ipFilterRules,
        List<IotHubLocationDescriptionResponse> locations,
        @Nullable Map<String,MessagingEndpointPropertiesResponse> messagingEndpoints,
        @Nullable String minTlsVersion,
        @Nullable NetworkRuleSetPropertiesResponse networkRuleSets,
        @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections,
        String provisioningState,
        @Nullable String publicNetworkAccess,
        @Nullable RoutingPropertiesResponse routing,
        String state,
        @Nullable Map<String,StorageEndpointPropertiesResponse> storageEndpoints) {
        this.authorizationPolicies = authorizationPolicies;
        this.cloudToDevice = cloudToDevice;
        this.comments = comments;
        this.enableFileUploadNotifications = enableFileUploadNotifications;
        this.eventHubEndpoints = eventHubEndpoints;
        this.features = features;
        this.hostName = Objects.requireNonNull(hostName, "expected parameter 'hostName' to be non-null");
        this.ipFilterRules = ipFilterRules;
        this.locations = Objects.requireNonNull(locations, "expected parameter 'locations' to be non-null");
        this.messagingEndpoints = messagingEndpoints;
        this.minTlsVersion = minTlsVersion;
        this.networkRuleSets = networkRuleSets;
        this.privateEndpointConnections = privateEndpointConnections;
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.publicNetworkAccess = publicNetworkAccess;
        this.routing = routing;
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
        this.storageEndpoints = storageEndpoints;
    }

    private IotHubPropertiesResponse() {
        this.authorizationPolicies = List.of();
        this.cloudToDevice = null;
        this.comments = null;
        this.enableFileUploadNotifications = null;
        this.eventHubEndpoints = Map.of();
        this.features = null;
        this.hostName = null;
        this.ipFilterRules = List.of();
        this.locations = List.of();
        this.messagingEndpoints = Map.of();
        this.minTlsVersion = null;
        this.networkRuleSets = null;
        this.privateEndpointConnections = List.of();
        this.provisioningState = null;
        this.publicNetworkAccess = null;
        this.routing = null;
        this.state = null;
        this.storageEndpoints = Map.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IotHubPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<SharedAccessSignatureAuthorizationRuleResponse> authorizationPolicies;
        private @Nullable CloudToDevicePropertiesResponse cloudToDevice;
        private @Nullable String comments;
        private @Nullable Boolean enableFileUploadNotifications;
        private @Nullable Map<String,EventHubPropertiesResponse> eventHubEndpoints;
        private @Nullable String features;
        private String hostName;
        private @Nullable List<IpFilterRuleResponse> ipFilterRules;
        private List<IotHubLocationDescriptionResponse> locations;
        private @Nullable Map<String,MessagingEndpointPropertiesResponse> messagingEndpoints;
        private @Nullable String minTlsVersion;
        private @Nullable NetworkRuleSetPropertiesResponse networkRuleSets;
        private @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;
        private String provisioningState;
        private @Nullable String publicNetworkAccess;
        private @Nullable RoutingPropertiesResponse routing;
        private String state;
        private @Nullable Map<String,StorageEndpointPropertiesResponse> storageEndpoints;

        public Builder() {
    	      // Empty
        }

        public Builder(IotHubPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationPolicies = defaults.authorizationPolicies;
    	      this.cloudToDevice = defaults.cloudToDevice;
    	      this.comments = defaults.comments;
    	      this.enableFileUploadNotifications = defaults.enableFileUploadNotifications;
    	      this.eventHubEndpoints = defaults.eventHubEndpoints;
    	      this.features = defaults.features;
    	      this.hostName = defaults.hostName;
    	      this.ipFilterRules = defaults.ipFilterRules;
    	      this.locations = defaults.locations;
    	      this.messagingEndpoints = defaults.messagingEndpoints;
    	      this.minTlsVersion = defaults.minTlsVersion;
    	      this.networkRuleSets = defaults.networkRuleSets;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.routing = defaults.routing;
    	      this.state = defaults.state;
    	      this.storageEndpoints = defaults.storageEndpoints;
        }

        public Builder setAuthorizationPolicies(@Nullable List<SharedAccessSignatureAuthorizationRuleResponse> authorizationPolicies) {
            this.authorizationPolicies = authorizationPolicies;
            return this;
        }

        public Builder setCloudToDevice(@Nullable CloudToDevicePropertiesResponse cloudToDevice) {
            this.cloudToDevice = cloudToDevice;
            return this;
        }

        public Builder setComments(@Nullable String comments) {
            this.comments = comments;
            return this;
        }

        public Builder setEnableFileUploadNotifications(@Nullable Boolean enableFileUploadNotifications) {
            this.enableFileUploadNotifications = enableFileUploadNotifications;
            return this;
        }

        public Builder setEventHubEndpoints(@Nullable Map<String,EventHubPropertiesResponse> eventHubEndpoints) {
            this.eventHubEndpoints = eventHubEndpoints;
            return this;
        }

        public Builder setFeatures(@Nullable String features) {
            this.features = features;
            return this;
        }

        public Builder setHostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }

        public Builder setIpFilterRules(@Nullable List<IpFilterRuleResponse> ipFilterRules) {
            this.ipFilterRules = ipFilterRules;
            return this;
        }

        public Builder setLocations(List<IotHubLocationDescriptionResponse> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }

        public Builder setMessagingEndpoints(@Nullable Map<String,MessagingEndpointPropertiesResponse> messagingEndpoints) {
            this.messagingEndpoints = messagingEndpoints;
            return this;
        }

        public Builder setMinTlsVersion(@Nullable String minTlsVersion) {
            this.minTlsVersion = minTlsVersion;
            return this;
        }

        public Builder setNetworkRuleSets(@Nullable NetworkRuleSetPropertiesResponse networkRuleSets) {
            this.networkRuleSets = networkRuleSets;
            return this;
        }

        public Builder setPrivateEndpointConnections(@Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = privateEndpointConnections;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setPublicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        public Builder setRouting(@Nullable RoutingPropertiesResponse routing) {
            this.routing = routing;
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setStorageEndpoints(@Nullable Map<String,StorageEndpointPropertiesResponse> storageEndpoints) {
            this.storageEndpoints = storageEndpoints;
            return this;
        }

        public IotHubPropertiesResponse build() {
            return new IotHubPropertiesResponse(authorizationPolicies, cloudToDevice, comments, enableFileUploadNotifications, eventHubEndpoints, features, hostName, ipFilterRules, locations, messagingEndpoints, minTlsVersion, networkRuleSets, privateEndpointConnections, provisioningState, publicNetworkAccess, routing, state, storageEndpoints);
        }
    }
}
