// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azurearcdata.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Service principal for uploading billing, metrics and logs.
 * 
 */
public final class UploadServicePrincipalResponse extends io.pulumi.resources.InvokeArgs {

    public static final UploadServicePrincipalResponse Empty = new UploadServicePrincipalResponse();

    /**
     * Authority for the service principal. Example: https://login.microsoftonline.com/
     * 
     */
    @InputImport(name="authority")
      private final @Nullable String authority;

    public Optional<String> getAuthority() {
        return this.authority == null ? Optional.empty() : Optional.ofNullable(this.authority);
    }

    /**
     * Client ID of the service principal for uploading data.
     * 
     */
    @InputImport(name="clientId")
      private final @Nullable String clientId;

    public Optional<String> getClientId() {
        return this.clientId == null ? Optional.empty() : Optional.ofNullable(this.clientId);
    }

    /**
     * Tenant ID of the service principal.
     * 
     */
    @InputImport(name="tenantId")
      private final @Nullable String tenantId;

    public Optional<String> getTenantId() {
        return this.tenantId == null ? Optional.empty() : Optional.ofNullable(this.tenantId);
    }

    public UploadServicePrincipalResponse(
        @Nullable String authority,
        @Nullable String clientId,
        @Nullable String tenantId) {
        this.authority = authority;
        this.clientId = clientId;
        this.tenantId = tenantId;
    }

    private UploadServicePrincipalResponse() {
        this.authority = null;
        this.clientId = null;
        this.tenantId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UploadServicePrincipalResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String authority;
        private @Nullable String clientId;
        private @Nullable String tenantId;

        public Builder() {
    	      // Empty
        }

        public Builder(UploadServicePrincipalResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authority = defaults.authority;
    	      this.clientId = defaults.clientId;
    	      this.tenantId = defaults.tenantId;
        }

        public Builder setAuthority(@Nullable String authority) {
            this.authority = authority;
            return this;
        }

        public Builder setClientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }

        public Builder setTenantId(@Nullable String tenantId) {
            this.tenantId = tenantId;
            return this;
        }
        public UploadServicePrincipalResponse build() {
            return new UploadServicePrincipalResponse(authority, clientId, tenantId);
        }
    }
}
