// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.streamanalytics.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class JsonSerializationResponse {
    private final @Nullable String encoding;
    private final @Nullable String format;
    private final String type;

    @OutputCustomType.Constructor({"encoding","format","type"})
    private JsonSerializationResponse(
        @Nullable String encoding,
        @Nullable String format,
        String type) {
        this.encoding = encoding;
        this.format = format;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getEncoding() {
        return Optional.ofNullable(this.encoding);
    }
    public Optional<String> getFormat() {
        return Optional.ofNullable(this.format);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JsonSerializationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String encoding;
        private @Nullable String format;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(JsonSerializationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encoding = defaults.encoding;
    	      this.format = defaults.format;
    	      this.type = defaults.type;
        }

        public Builder setEncoding(@Nullable String encoding) {
            this.encoding = encoding;
            return this;
        }

        public Builder setFormat(@Nullable String format) {
            this.format = format;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public JsonSerializationResponse build() {
            return new JsonSerializationResponse(encoding, format, type);
        }
    }
}
