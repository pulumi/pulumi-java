// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.guestconfiguration;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.guestconfiguration.GuestConfigurationAssignmentArgs;
import io.pulumi.azurenative.guestconfiguration.outputs.GuestConfigurationAssignmentPropertiesResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Guest configuration assignment is an association between a machine and guest configuration.
 * API Version: 2020-06-25.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Create or update guest configuration assignment
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var guestConfigurationAssignment = new AzureNative.GuestConfiguration.GuestConfigurationAssignment("guestConfigurationAssignment", new AzureNative.GuestConfiguration.GuestConfigurationAssignmentArgs
 *         {
 *             GuestConfigurationAssignmentName = "WhitelistedApplication",
 *             Location = "westcentralus",
 *             Name = "WhitelistedApplication",
 *             Properties = new AzureNative.GuestConfiguration.Inputs.GuestConfigurationAssignmentPropertiesArgs
 *             {
 *                 Context = "Azure policy",
 *                 GuestConfiguration = new AzureNative.GuestConfiguration.Inputs.GuestConfigurationNavigationArgs
 *                 {
 *                     AssignmentType = "ApplyAndAutoCorrect",
 *                     ConfigurationParameter = 
 *                     {
 *                         new AzureNative.GuestConfiguration.Inputs.ConfigurationParameterArgs
 *                         {
 *                             Name = "[InstalledApplication]bwhitelistedapp;Name",
 *                             Value = "NotePad,sql",
 *                         },
 *                     },
 *                     ContentHash = "123contenthash",
 *                     ContentUri = "https://thisisfake/pacakge",
 *                     Name = "WhitelistedApplication",
 *                     Version = "1.*",
 *                 },
 *             },
 *             ResourceGroupName = "myResourceGroupName",
 *             VmName = "myVMName",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	guestconfiguration "github.com/pulumi/pulumi-azure-native/sdk/go/azure/guestconfiguration"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := guestconfiguration.NewGuestConfigurationAssignment(ctx, "guestConfigurationAssignment", &guestconfiguration.GuestConfigurationAssignmentArgs{
 * 			GuestConfigurationAssignmentName: pulumi.String("WhitelistedApplication"),
 * 			Location:                         pulumi.String("westcentralus"),
 * 			Name:                             pulumi.String("WhitelistedApplication"),
 * 			Properties: &guestconfiguration.GuestConfigurationAssignmentPropertiesArgs{
 * 				Context: pulumi.String("Azure policy"),
 * 				GuestConfiguration: &guestconfiguration.GuestConfigurationNavigationArgs{
 * 					AssignmentType: pulumi.String("ApplyAndAutoCorrect"),
 * 					ConfigurationParameter: guestconfiguration.ConfigurationParameterArray{
 * 						&guestconfiguration.ConfigurationParameterArgs{
 * 							Name:  pulumi.String("[InstalledApplication]bwhitelistedapp;Name"),
 * 							Value: pulumi.String("NotePad,sql"),
 * 						},
 * 					},
 * 					ContentHash: pulumi.String("123contenthash"),
 * 					ContentUri:  pulumi.String("https://thisisfake/pacakge"),
 * 					Name:        pulumi.String("WhitelistedApplication"),
 * 					Version:     pulumi.String("1.*"),
 * 				},
 * 			},
 * 			ResourceGroupName: pulumi.String("myResourceGroupName"),
 * 			VmName:            pulumi.String("myVMName"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const guestConfigurationAssignment = new azure_native.guestconfiguration.GuestConfigurationAssignment("guestConfigurationAssignment", {
 *     guestConfigurationAssignmentName: "WhitelistedApplication",
 *     location: "westcentralus",
 *     name: "WhitelistedApplication",
 *     properties: {
 *         context: "Azure policy",
 *         guestConfiguration: {
 *             assignmentType: "ApplyAndAutoCorrect",
 *             configurationParameter: [{
 *                 name: "[InstalledApplication]bwhitelistedapp;Name",
 *                 value: "NotePad,sql",
 *             }],
 *             contentHash: "123contenthash",
 *             contentUri: "https://thisisfake/pacakge",
 *             name: "WhitelistedApplication",
 *             version: "1.*",
 *         },
 *     },
 *     resourceGroupName: "myResourceGroupName",
 *     vmName: "myVMName",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * guest_configuration_assignment = azure_native.guestconfiguration.GuestConfigurationAssignment("guestConfigurationAssignment",
 *     guest_configuration_assignment_name="WhitelistedApplication",
 *     location="westcentralus",
 *     name="WhitelistedApplication",
 *     properties=azure_native.guestconfiguration.GuestConfigurationAssignmentPropertiesArgs(
 *         context="Azure policy",
 *         guest_configuration=azure_native.guestconfiguration.GuestConfigurationNavigationArgs(
 *             assignment_type="ApplyAndAutoCorrect",
 *             configuration_parameter=[azure_native.guestconfiguration.ConfigurationParameterArgs(
 *                 name="[InstalledApplication]bwhitelistedapp;Name",
 *                 value="NotePad,sql",
 *             )],
 *             content_hash="123contenthash",
 *             content_uri="https://thisisfake/pacakge",
 *             name="WhitelistedApplication",
 *             version="1.*",
 *         ),
 *     ),
 *     resource_group_name="myResourceGroupName",
 *     vm_name="myVMName")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:guestconfiguration:GuestConfigurationAssignment WhitelistedApplication /subscriptions/mysubscriptionid/resourceGroups/myResourceGroupName/providers/Microsoft.Compute/virtualMachines/myvm/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/WhitelistedApplication 
 * ```
 * 
 */
@ResourceType(type="azure-native:guestconfiguration:GuestConfigurationAssignment")
public class GuestConfigurationAssignment extends io.pulumi.resources.CustomResource {
    /**
     * Region where the VM is located.
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Region where the VM is located.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * Name of the guest configuration assignment.
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return Name of the guest configuration assignment.
     */
    public Output</* @Nullable */ String> getName() {
        return this.name;
    }
    /**
     * Properties of the Guest configuration assignment.
     */
    @Export(name="properties", type=GuestConfigurationAssignmentPropertiesResponse.class, parameters={})
    private Output<GuestConfigurationAssignmentPropertiesResponse> properties;

    /**
     * @return Properties of the Guest configuration assignment.
     */
    public Output<GuestConfigurationAssignmentPropertiesResponse> getProperties() {
        return this.properties;
    }
    /**
     * The type of the resource.
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GuestConfigurationAssignment(String name) {
        this(name, GuestConfigurationAssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GuestConfigurationAssignment(String name, GuestConfigurationAssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GuestConfigurationAssignment(String name, GuestConfigurationAssignmentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:guestconfiguration:GuestConfigurationAssignment", name, args == null ? GuestConfigurationAssignmentArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private GuestConfigurationAssignment(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:guestconfiguration:GuestConfigurationAssignment", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:guestconfiguration/v20180630preview:GuestConfigurationAssignment").build()),
                Output.of(Alias.builder().type("azure-native:guestconfiguration/v20181120:GuestConfigurationAssignment").build()),
                Output.of(Alias.builder().type("azure-native:guestconfiguration/v20200625:GuestConfigurationAssignment").build()),
                Output.of(Alias.builder().type("azure-native:guestconfiguration/v20210125:GuestConfigurationAssignment").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GuestConfigurationAssignment get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new GuestConfigurationAssignment(name, id, options);
    }
}
