// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerservice.outputs;

import io.pulumi.azurenative.containerservice.outputs.ContainerServiceLinuxProfileResponse;
import io.pulumi.azurenative.containerservice.outputs.ContainerServiceNetworkProfileResponse;
import io.pulumi.azurenative.containerservice.outputs.ExtendedLocationResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterAADProfileResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterAPIServerAccessProfileResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterAddonProfileResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterAgentPoolProfileResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterAutoUpgradeProfileResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterHTTPProxyConfigResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterIdentityResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterPodIdentityProfileResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterPropertiesResponseAutoScalerProfile;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterPropertiesResponseIdentityProfile;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterSKUResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterServicePrincipalProfileResponse;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterWindowsProfileResponse;
import io.pulumi.azurenative.containerservice.outputs.PowerStateResponse;
import io.pulumi.azurenative.containerservice.outputs.PrivateLinkResourceResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetManagedClusterResult {
    private final @Nullable ManagedClusterAADProfileResponse aadProfile;
    private final @Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles;
    private final @Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles;
    private final @Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile;
    private final @Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile;
    private final @Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile;
    private final String azurePortalFQDN;
    private final @Nullable Boolean disableLocalAccounts;
    private final @Nullable String diskEncryptionSetID;
    private final @Nullable String dnsPrefix;
    private final @Nullable Boolean enablePodSecurityPolicy;
    private final @Nullable Boolean enableRBAC;
    private final @Nullable ExtendedLocationResponse extendedLocation;
    private final String fqdn;
    private final @Nullable String fqdnSubdomain;
    private final @Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig;
    private final String id;
    private final @Nullable ManagedClusterIdentityResponse identity;
    private final @Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile;
    private final @Nullable String kubernetesVersion;
    private final @Nullable ContainerServiceLinuxProfileResponse linuxProfile;
    private final String location;
    private final Integer maxAgentPools;
    private final String name;
    private final @Nullable ContainerServiceNetworkProfileResponse networkProfile;
    private final @Nullable String nodeResourceGroup;
    private final @Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile;
    private final PowerStateResponse powerState;
    private final String privateFQDN;
    private final @Nullable List<PrivateLinkResourceResponse> privateLinkResources;
    private final String provisioningState;
    private final @Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile;
    private final @Nullable ManagedClusterSKUResponse sku;
    private final @Nullable Map<String,String> tags;
    private final String type;
    private final @Nullable ManagedClusterWindowsProfileResponse windowsProfile;

    @OutputCustomType.Constructor({"aadProfile","addonProfiles","agentPoolProfiles","apiServerAccessProfile","autoScalerProfile","autoUpgradeProfile","azurePortalFQDN","disableLocalAccounts","diskEncryptionSetID","dnsPrefix","enablePodSecurityPolicy","enableRBAC","extendedLocation","fqdn","fqdnSubdomain","httpProxyConfig","id","identity","identityProfile","kubernetesVersion","linuxProfile","location","maxAgentPools","name","networkProfile","nodeResourceGroup","podIdentityProfile","powerState","privateFQDN","privateLinkResources","provisioningState","servicePrincipalProfile","sku","tags","type","windowsProfile"})
    private GetManagedClusterResult(
        @Nullable ManagedClusterAADProfileResponse aadProfile,
        @Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles,
        @Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles,
        @Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile,
        @Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile,
        @Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile,
        String azurePortalFQDN,
        @Nullable Boolean disableLocalAccounts,
        @Nullable String diskEncryptionSetID,
        @Nullable String dnsPrefix,
        @Nullable Boolean enablePodSecurityPolicy,
        @Nullable Boolean enableRBAC,
        @Nullable ExtendedLocationResponse extendedLocation,
        String fqdn,
        @Nullable String fqdnSubdomain,
        @Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig,
        String id,
        @Nullable ManagedClusterIdentityResponse identity,
        @Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile,
        @Nullable String kubernetesVersion,
        @Nullable ContainerServiceLinuxProfileResponse linuxProfile,
        String location,
        Integer maxAgentPools,
        String name,
        @Nullable ContainerServiceNetworkProfileResponse networkProfile,
        @Nullable String nodeResourceGroup,
        @Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile,
        PowerStateResponse powerState,
        String privateFQDN,
        @Nullable List<PrivateLinkResourceResponse> privateLinkResources,
        String provisioningState,
        @Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile,
        @Nullable ManagedClusterSKUResponse sku,
        @Nullable Map<String,String> tags,
        String type,
        @Nullable ManagedClusterWindowsProfileResponse windowsProfile) {
        this.aadProfile = aadProfile;
        this.addonProfiles = addonProfiles;
        this.agentPoolProfiles = agentPoolProfiles;
        this.apiServerAccessProfile = apiServerAccessProfile;
        this.autoScalerProfile = autoScalerProfile;
        this.autoUpgradeProfile = autoUpgradeProfile;
        this.azurePortalFQDN = Objects.requireNonNull(azurePortalFQDN);
        this.disableLocalAccounts = disableLocalAccounts;
        this.diskEncryptionSetID = diskEncryptionSetID;
        this.dnsPrefix = dnsPrefix;
        this.enablePodSecurityPolicy = enablePodSecurityPolicy;
        this.enableRBAC = enableRBAC;
        this.extendedLocation = extendedLocation;
        this.fqdn = Objects.requireNonNull(fqdn);
        this.fqdnSubdomain = fqdnSubdomain;
        this.httpProxyConfig = httpProxyConfig;
        this.id = Objects.requireNonNull(id);
        this.identity = identity;
        this.identityProfile = identityProfile;
        this.kubernetesVersion = kubernetesVersion;
        this.linuxProfile = linuxProfile;
        this.location = Objects.requireNonNull(location);
        this.maxAgentPools = Objects.requireNonNull(maxAgentPools);
        this.name = Objects.requireNonNull(name);
        this.networkProfile = networkProfile;
        this.nodeResourceGroup = nodeResourceGroup;
        this.podIdentityProfile = podIdentityProfile;
        this.powerState = Objects.requireNonNull(powerState);
        this.privateFQDN = Objects.requireNonNull(privateFQDN);
        this.privateLinkResources = privateLinkResources;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.servicePrincipalProfile = servicePrincipalProfile;
        this.sku = sku;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.windowsProfile = windowsProfile;
    }

    public Optional<ManagedClusterAADProfileResponse> getAadProfile() {
        return Optional.ofNullable(this.aadProfile);
    }
    public Map<String,ManagedClusterAddonProfileResponse> getAddonProfiles() {
        return this.addonProfiles == null ? Map.of() : this.addonProfiles;
    }
    public List<ManagedClusterAgentPoolProfileResponse> getAgentPoolProfiles() {
        return this.agentPoolProfiles == null ? List.of() : this.agentPoolProfiles;
    }
    public Optional<ManagedClusterAPIServerAccessProfileResponse> getApiServerAccessProfile() {
        return Optional.ofNullable(this.apiServerAccessProfile);
    }
    public Optional<ManagedClusterPropertiesResponseAutoScalerProfile> getAutoScalerProfile() {
        return Optional.ofNullable(this.autoScalerProfile);
    }
    public Optional<ManagedClusterAutoUpgradeProfileResponse> getAutoUpgradeProfile() {
        return Optional.ofNullable(this.autoUpgradeProfile);
    }
    public String getAzurePortalFQDN() {
        return this.azurePortalFQDN;
    }
    public Optional<Boolean> getDisableLocalAccounts() {
        return Optional.ofNullable(this.disableLocalAccounts);
    }
    public Optional<String> getDiskEncryptionSetID() {
        return Optional.ofNullable(this.diskEncryptionSetID);
    }
    public Optional<String> getDnsPrefix() {
        return Optional.ofNullable(this.dnsPrefix);
    }
    public Optional<Boolean> getEnablePodSecurityPolicy() {
        return Optional.ofNullable(this.enablePodSecurityPolicy);
    }
    public Optional<Boolean> getEnableRBAC() {
        return Optional.ofNullable(this.enableRBAC);
    }
    public Optional<ExtendedLocationResponse> getExtendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    public String getFqdn() {
        return this.fqdn;
    }
    public Optional<String> getFqdnSubdomain() {
        return Optional.ofNullable(this.fqdnSubdomain);
    }
    public Optional<ManagedClusterHTTPProxyConfigResponse> getHttpProxyConfig() {
        return Optional.ofNullable(this.httpProxyConfig);
    }
    public String getId() {
        return this.id;
    }
    public Optional<ManagedClusterIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    public Map<String,ManagedClusterPropertiesResponseIdentityProfile> getIdentityProfile() {
        return this.identityProfile == null ? Map.of() : this.identityProfile;
    }
    public Optional<String> getKubernetesVersion() {
        return Optional.ofNullable(this.kubernetesVersion);
    }
    public Optional<ContainerServiceLinuxProfileResponse> getLinuxProfile() {
        return Optional.ofNullable(this.linuxProfile);
    }
    public String getLocation() {
        return this.location;
    }
    public Integer getMaxAgentPools() {
        return this.maxAgentPools;
    }
    public String getName() {
        return this.name;
    }
    public Optional<ContainerServiceNetworkProfileResponse> getNetworkProfile() {
        return Optional.ofNullable(this.networkProfile);
    }
    public Optional<String> getNodeResourceGroup() {
        return Optional.ofNullable(this.nodeResourceGroup);
    }
    public Optional<ManagedClusterPodIdentityProfileResponse> getPodIdentityProfile() {
        return Optional.ofNullable(this.podIdentityProfile);
    }
    public PowerStateResponse getPowerState() {
        return this.powerState;
    }
    public String getPrivateFQDN() {
        return this.privateFQDN;
    }
    public List<PrivateLinkResourceResponse> getPrivateLinkResources() {
        return this.privateLinkResources == null ? List.of() : this.privateLinkResources;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<ManagedClusterServicePrincipalProfileResponse> getServicePrincipalProfile() {
        return Optional.ofNullable(this.servicePrincipalProfile);
    }
    public Optional<ManagedClusterSKUResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }
    public Optional<ManagedClusterWindowsProfileResponse> getWindowsProfile() {
        return Optional.ofNullable(this.windowsProfile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ManagedClusterAADProfileResponse aadProfile;
        private @Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles;
        private @Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles;
        private @Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile;
        private @Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile;
        private @Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile;
        private String azurePortalFQDN;
        private @Nullable Boolean disableLocalAccounts;
        private @Nullable String diskEncryptionSetID;
        private @Nullable String dnsPrefix;
        private @Nullable Boolean enablePodSecurityPolicy;
        private @Nullable Boolean enableRBAC;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private String fqdn;
        private @Nullable String fqdnSubdomain;
        private @Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig;
        private String id;
        private @Nullable ManagedClusterIdentityResponse identity;
        private @Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile;
        private @Nullable String kubernetesVersion;
        private @Nullable ContainerServiceLinuxProfileResponse linuxProfile;
        private String location;
        private Integer maxAgentPools;
        private String name;
        private @Nullable ContainerServiceNetworkProfileResponse networkProfile;
        private @Nullable String nodeResourceGroup;
        private @Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile;
        private PowerStateResponse powerState;
        private String privateFQDN;
        private @Nullable List<PrivateLinkResourceResponse> privateLinkResources;
        private String provisioningState;
        private @Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile;
        private @Nullable ManagedClusterSKUResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable ManagedClusterWindowsProfileResponse windowsProfile;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadProfile = defaults.aadProfile;
    	      this.addonProfiles = defaults.addonProfiles;
    	      this.agentPoolProfiles = defaults.agentPoolProfiles;
    	      this.apiServerAccessProfile = defaults.apiServerAccessProfile;
    	      this.autoScalerProfile = defaults.autoScalerProfile;
    	      this.autoUpgradeProfile = defaults.autoUpgradeProfile;
    	      this.azurePortalFQDN = defaults.azurePortalFQDN;
    	      this.disableLocalAccounts = defaults.disableLocalAccounts;
    	      this.diskEncryptionSetID = defaults.diskEncryptionSetID;
    	      this.dnsPrefix = defaults.dnsPrefix;
    	      this.enablePodSecurityPolicy = defaults.enablePodSecurityPolicy;
    	      this.enableRBAC = defaults.enableRBAC;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.fqdn = defaults.fqdn;
    	      this.fqdnSubdomain = defaults.fqdnSubdomain;
    	      this.httpProxyConfig = defaults.httpProxyConfig;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.identityProfile = defaults.identityProfile;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.linuxProfile = defaults.linuxProfile;
    	      this.location = defaults.location;
    	      this.maxAgentPools = defaults.maxAgentPools;
    	      this.name = defaults.name;
    	      this.networkProfile = defaults.networkProfile;
    	      this.nodeResourceGroup = defaults.nodeResourceGroup;
    	      this.podIdentityProfile = defaults.podIdentityProfile;
    	      this.powerState = defaults.powerState;
    	      this.privateFQDN = defaults.privateFQDN;
    	      this.privateLinkResources = defaults.privateLinkResources;
    	      this.provisioningState = defaults.provisioningState;
    	      this.servicePrincipalProfile = defaults.servicePrincipalProfile;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.windowsProfile = defaults.windowsProfile;
        }

        public Builder setAadProfile(@Nullable ManagedClusterAADProfileResponse aadProfile) {
            this.aadProfile = aadProfile;
            return this;
        }

        public Builder setAddonProfiles(@Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles) {
            this.addonProfiles = addonProfiles;
            return this;
        }

        public Builder setAgentPoolProfiles(@Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles) {
            this.agentPoolProfiles = agentPoolProfiles;
            return this;
        }

        public Builder setApiServerAccessProfile(@Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile) {
            this.apiServerAccessProfile = apiServerAccessProfile;
            return this;
        }

        public Builder setAutoScalerProfile(@Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile) {
            this.autoScalerProfile = autoScalerProfile;
            return this;
        }

        public Builder setAutoUpgradeProfile(@Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile) {
            this.autoUpgradeProfile = autoUpgradeProfile;
            return this;
        }

        public Builder setAzurePortalFQDN(String azurePortalFQDN) {
            this.azurePortalFQDN = Objects.requireNonNull(azurePortalFQDN);
            return this;
        }

        public Builder setDisableLocalAccounts(@Nullable Boolean disableLocalAccounts) {
            this.disableLocalAccounts = disableLocalAccounts;
            return this;
        }

        public Builder setDiskEncryptionSetID(@Nullable String diskEncryptionSetID) {
            this.diskEncryptionSetID = diskEncryptionSetID;
            return this;
        }

        public Builder setDnsPrefix(@Nullable String dnsPrefix) {
            this.dnsPrefix = dnsPrefix;
            return this;
        }

        public Builder setEnablePodSecurityPolicy(@Nullable Boolean enablePodSecurityPolicy) {
            this.enablePodSecurityPolicy = enablePodSecurityPolicy;
            return this;
        }

        public Builder setEnableRBAC(@Nullable Boolean enableRBAC) {
            this.enableRBAC = enableRBAC;
            return this;
        }

        public Builder setExtendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }

        public Builder setFqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }

        public Builder setFqdnSubdomain(@Nullable String fqdnSubdomain) {
            this.fqdnSubdomain = fqdnSubdomain;
            return this;
        }

        public Builder setHttpProxyConfig(@Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig) {
            this.httpProxyConfig = httpProxyConfig;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable ManagedClusterIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setIdentityProfile(@Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile) {
            this.identityProfile = identityProfile;
            return this;
        }

        public Builder setKubernetesVersion(@Nullable String kubernetesVersion) {
            this.kubernetesVersion = kubernetesVersion;
            return this;
        }

        public Builder setLinuxProfile(@Nullable ContainerServiceLinuxProfileResponse linuxProfile) {
            this.linuxProfile = linuxProfile;
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setMaxAgentPools(Integer maxAgentPools) {
            this.maxAgentPools = Objects.requireNonNull(maxAgentPools);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetworkProfile(@Nullable ContainerServiceNetworkProfileResponse networkProfile) {
            this.networkProfile = networkProfile;
            return this;
        }

        public Builder setNodeResourceGroup(@Nullable String nodeResourceGroup) {
            this.nodeResourceGroup = nodeResourceGroup;
            return this;
        }

        public Builder setPodIdentityProfile(@Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile) {
            this.podIdentityProfile = podIdentityProfile;
            return this;
        }

        public Builder setPowerState(PowerStateResponse powerState) {
            this.powerState = Objects.requireNonNull(powerState);
            return this;
        }

        public Builder setPrivateFQDN(String privateFQDN) {
            this.privateFQDN = Objects.requireNonNull(privateFQDN);
            return this;
        }

        public Builder setPrivateLinkResources(@Nullable List<PrivateLinkResourceResponse> privateLinkResources) {
            this.privateLinkResources = privateLinkResources;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setServicePrincipalProfile(@Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile) {
            this.servicePrincipalProfile = servicePrincipalProfile;
            return this;
        }

        public Builder setSku(@Nullable ManagedClusterSKUResponse sku) {
            this.sku = sku;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setWindowsProfile(@Nullable ManagedClusterWindowsProfileResponse windowsProfile) {
            this.windowsProfile = windowsProfile;
            return this;
        }

        public GetManagedClusterResult build() {
            return new GetManagedClusterResult(aadProfile, addonProfiles, agentPoolProfiles, apiServerAccessProfile, autoScalerProfile, autoUpgradeProfile, azurePortalFQDN, disableLocalAccounts, diskEncryptionSetID, dnsPrefix, enablePodSecurityPolicy, enableRBAC, extendedLocation, fqdn, fqdnSubdomain, httpProxyConfig, id, identity, identityProfile, kubernetesVersion, linuxProfile, location, maxAgentPools, name, networkProfile, nodeResourceGroup, podIdentityProfile, powerState, privateFQDN, privateLinkResources, provisioningState, servicePrincipalProfile, sku, tags, type, windowsProfile);
        }
    }
}
