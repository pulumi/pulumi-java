// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ArmServiceTypeHealthPolicyResponse {
    /**
     * The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.
     * 
     */
    private final @Nullable Integer maxPercentUnhealthyPartitionsPerService;
    /**
     * The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.
     * 
     */
    private final @Nullable Integer maxPercentUnhealthyReplicasPerPartition;
    /**
     * The maximum percentage of services allowed to be unhealthy before your application is considered in error.
     * 
     */
    private final @Nullable Integer maxPercentUnhealthyServices;

    @OutputCustomType.Constructor
    private ArmServiceTypeHealthPolicyResponse(
        @OutputCustomType.Parameter("maxPercentUnhealthyPartitionsPerService") @Nullable Integer maxPercentUnhealthyPartitionsPerService,
        @OutputCustomType.Parameter("maxPercentUnhealthyReplicasPerPartition") @Nullable Integer maxPercentUnhealthyReplicasPerPartition,
        @OutputCustomType.Parameter("maxPercentUnhealthyServices") @Nullable Integer maxPercentUnhealthyServices) {
        this.maxPercentUnhealthyPartitionsPerService = maxPercentUnhealthyPartitionsPerService;
        this.maxPercentUnhealthyReplicasPerPartition = maxPercentUnhealthyReplicasPerPartition;
        this.maxPercentUnhealthyServices = maxPercentUnhealthyServices;
    }

    /**
     * The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.
     * 
    */
    public Optional<Integer> getMaxPercentUnhealthyPartitionsPerService() {
        return Optional.ofNullable(this.maxPercentUnhealthyPartitionsPerService);
    }
    /**
     * The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.
     * 
    */
    public Optional<Integer> getMaxPercentUnhealthyReplicasPerPartition() {
        return Optional.ofNullable(this.maxPercentUnhealthyReplicasPerPartition);
    }
    /**
     * The maximum percentage of services allowed to be unhealthy before your application is considered in error.
     * 
    */
    public Optional<Integer> getMaxPercentUnhealthyServices() {
        return Optional.ofNullable(this.maxPercentUnhealthyServices);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ArmServiceTypeHealthPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer maxPercentUnhealthyPartitionsPerService;
        private @Nullable Integer maxPercentUnhealthyReplicasPerPartition;
        private @Nullable Integer maxPercentUnhealthyServices;

        public Builder() {
    	      // Empty
        }

        public Builder(ArmServiceTypeHealthPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxPercentUnhealthyPartitionsPerService = defaults.maxPercentUnhealthyPartitionsPerService;
    	      this.maxPercentUnhealthyReplicasPerPartition = defaults.maxPercentUnhealthyReplicasPerPartition;
    	      this.maxPercentUnhealthyServices = defaults.maxPercentUnhealthyServices;
        }

        public Builder maxPercentUnhealthyPartitionsPerService(@Nullable Integer maxPercentUnhealthyPartitionsPerService) {
            this.maxPercentUnhealthyPartitionsPerService = maxPercentUnhealthyPartitionsPerService;
            return this;
        }

        public Builder maxPercentUnhealthyReplicasPerPartition(@Nullable Integer maxPercentUnhealthyReplicasPerPartition) {
            this.maxPercentUnhealthyReplicasPerPartition = maxPercentUnhealthyReplicasPerPartition;
            return this;
        }

        public Builder maxPercentUnhealthyServices(@Nullable Integer maxPercentUnhealthyServices) {
            this.maxPercentUnhealthyServices = maxPercentUnhealthyServices;
            return this;
        }
        public ArmServiceTypeHealthPolicyResponse build() {
            return new ArmServiceTypeHealthPolicyResponse(maxPercentUnhealthyPartitionsPerService, maxPercentUnhealthyReplicasPerPartition, maxPercentUnhealthyServices);
        }
    }
}
