// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devtestlab;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.devtestlab.DiskArgs;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * A Disk.
 * API Version: 2018-09-15.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:devtestlab:Disk {diskName} /subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/l{labName}/users/{userId}/disks/{diskName} 
 * ```
 * 
 */
@ResourceType(type="azure-native:devtestlab:Disk")
public class Disk extends io.pulumi.resources.CustomResource {
    /**
     * The creation date of the disk.
     * 
     */
    @Export(name="createdDate", type=String.class, parameters={})
    private Output<String> createdDate;

    /**
     * @return The creation date of the disk.
     * 
     */
    public Output<String> getCreatedDate() {
        return this.createdDate;
    }
    /**
     * When backed by a blob, the name of the VHD blob without extension.
     * 
     */
    @Export(name="diskBlobName", type=String.class, parameters={})
    private Output</* @Nullable */ String> diskBlobName;

    /**
     * @return When backed by a blob, the name of the VHD blob without extension.
     * 
     */
    public Output</* @Nullable */ String> getDiskBlobName() {
        return this.diskBlobName;
    }
    /**
     * The size of the disk in Gibibytes.
     * 
     */
    @Export(name="diskSizeGiB", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> diskSizeGiB;

    /**
     * @return The size of the disk in Gibibytes.
     * 
     */
    public Output</* @Nullable */ Integer> getDiskSizeGiB() {
        return this.diskSizeGiB;
    }
    /**
     * The storage type for the disk (i.e. Standard, Premium).
     * 
     */
    @Export(name="diskType", type=String.class, parameters={})
    private Output</* @Nullable */ String> diskType;

    /**
     * @return The storage type for the disk (i.e. Standard, Premium).
     * 
     */
    public Output</* @Nullable */ String> getDiskType() {
        return this.diskType;
    }
    /**
     * When backed by a blob, the URI of underlying blob.
     * 
     */
    @Export(name="diskUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> diskUri;

    /**
     * @return When backed by a blob, the URI of underlying blob.
     * 
     */
    public Output</* @Nullable */ String> getDiskUri() {
        return this.diskUri;
    }
    /**
     * The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).
     * 
     */
    @Export(name="hostCaching", type=String.class, parameters={})
    private Output</* @Nullable */ String> hostCaching;

    /**
     * @return The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).
     * 
     */
    public Output</* @Nullable */ String> getHostCaching() {
        return this.hostCaching;
    }
    /**
     * The resource ID of the VM to which this disk is leased.
     * 
     */
    @Export(name="leasedByLabVmId", type=String.class, parameters={})
    private Output</* @Nullable */ String> leasedByLabVmId;

    /**
     * @return The resource ID of the VM to which this disk is leased.
     * 
     */
    public Output</* @Nullable */ String> getLeasedByLabVmId() {
        return this.leasedByLabVmId;
    }
    /**
     * The location of the resource.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * When backed by managed disk, this is the ID of the compute disk resource.
     * 
     */
    @Export(name="managedDiskId", type=String.class, parameters={})
    private Output</* @Nullable */ String> managedDiskId;

    /**
     * @return When backed by managed disk, this is the ID of the compute disk resource.
     * 
     */
    public Output</* @Nullable */ String> getManagedDiskId() {
        return this.managedDiskId;
    }
    /**
     * The name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The provisioning status of the resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning status of the resource.
     * 
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * When backed by a blob, the storage account where the blob is.
     * 
     */
    @Export(name="storageAccountId", type=String.class, parameters={})
    private Output</* @Nullable */ String> storageAccountId;

    /**
     * @return When backed by a blob, the storage account where the blob is.
     * 
     */
    public Output</* @Nullable */ String> getStorageAccountId() {
        return this.storageAccountId;
    }
    /**
     * The tags of the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The tags of the resource.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The type of the resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The unique immutable identifier of a resource (Guid).
     * 
     */
    @Export(name="uniqueIdentifier", type=String.class, parameters={})
    private Output<String> uniqueIdentifier;

    /**
     * @return The unique immutable identifier of a resource (Guid).
     * 
     */
    public Output<String> getUniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Disk(String name) {
        this(name, DiskArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Disk(String name, DiskArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Disk(String name, DiskArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:devtestlab:Disk", name, args == null ? DiskArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Disk(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:devtestlab:Disk", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:devtestlab/v20160515:Disk").build()),
                Output.of(Alias.builder().type("azure-native:devtestlab/v20180915:Disk").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Disk get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Disk(name, id, options);
    }
}
