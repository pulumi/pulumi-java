// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.outputs;

import io.pulumi.azurenative.customerinsights.outputs.DataSourcePrecedenceResponse;
import io.pulumi.azurenative.customerinsights.outputs.ProfileEnumValidValuesFormatResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class PropertyDefinitionResponse {
    private final @Nullable String arrayValueSeparator;
    private final List<DataSourcePrecedenceResponse> dataSourcePrecedenceRules;
    private final @Nullable List<ProfileEnumValidValuesFormatResponse> enumValidValues;
    private final String fieldName;
    private final String fieldType;
    private final @Nullable Boolean isArray;
    private final @Nullable Boolean isAvailableInGraph;
    private final @Nullable Boolean isEnum;
    private final @Nullable Boolean isFlagEnum;
    private final @Nullable Boolean isImage;
    private final @Nullable Boolean isLocalizedString;
    private final @Nullable Boolean isName;
    private final @Nullable Boolean isRequired;
    private final @Nullable Integer maxLength;
    private final @Nullable String propertyId;
    private final @Nullable String schemaItemPropLink;

    @OutputCustomType.Constructor({"arrayValueSeparator","dataSourcePrecedenceRules","enumValidValues","fieldName","fieldType","isArray","isAvailableInGraph","isEnum","isFlagEnum","isImage","isLocalizedString","isName","isRequired","maxLength","propertyId","schemaItemPropLink"})
    private PropertyDefinitionResponse(
        @Nullable String arrayValueSeparator,
        List<DataSourcePrecedenceResponse> dataSourcePrecedenceRules,
        @Nullable List<ProfileEnumValidValuesFormatResponse> enumValidValues,
        String fieldName,
        String fieldType,
        @Nullable Boolean isArray,
        @Nullable Boolean isAvailableInGraph,
        @Nullable Boolean isEnum,
        @Nullable Boolean isFlagEnum,
        @Nullable Boolean isImage,
        @Nullable Boolean isLocalizedString,
        @Nullable Boolean isName,
        @Nullable Boolean isRequired,
        @Nullable Integer maxLength,
        @Nullable String propertyId,
        @Nullable String schemaItemPropLink) {
        this.arrayValueSeparator = arrayValueSeparator;
        this.dataSourcePrecedenceRules = Objects.requireNonNull(dataSourcePrecedenceRules);
        this.enumValidValues = enumValidValues;
        this.fieldName = Objects.requireNonNull(fieldName);
        this.fieldType = Objects.requireNonNull(fieldType);
        this.isArray = isArray;
        this.isAvailableInGraph = isAvailableInGraph;
        this.isEnum = isEnum;
        this.isFlagEnum = isFlagEnum;
        this.isImage = isImage;
        this.isLocalizedString = isLocalizedString;
        this.isName = isName;
        this.isRequired = isRequired;
        this.maxLength = maxLength;
        this.propertyId = propertyId;
        this.schemaItemPropLink = schemaItemPropLink;
    }

    public Optional<String> getArrayValueSeparator() {
        return Optional.ofNullable(this.arrayValueSeparator);
    }
    public List<DataSourcePrecedenceResponse> getDataSourcePrecedenceRules() {
        return this.dataSourcePrecedenceRules;
    }
    public List<ProfileEnumValidValuesFormatResponse> getEnumValidValues() {
        return this.enumValidValues == null ? List.of() : this.enumValidValues;
    }
    public String getFieldName() {
        return this.fieldName;
    }
    public String getFieldType() {
        return this.fieldType;
    }
    public Optional<Boolean> getIsArray() {
        return Optional.ofNullable(this.isArray);
    }
    public Optional<Boolean> getIsAvailableInGraph() {
        return Optional.ofNullable(this.isAvailableInGraph);
    }
    public Optional<Boolean> getIsEnum() {
        return Optional.ofNullable(this.isEnum);
    }
    public Optional<Boolean> getIsFlagEnum() {
        return Optional.ofNullable(this.isFlagEnum);
    }
    public Optional<Boolean> getIsImage() {
        return Optional.ofNullable(this.isImage);
    }
    public Optional<Boolean> getIsLocalizedString() {
        return Optional.ofNullable(this.isLocalizedString);
    }
    public Optional<Boolean> getIsName() {
        return Optional.ofNullable(this.isName);
    }
    public Optional<Boolean> getIsRequired() {
        return Optional.ofNullable(this.isRequired);
    }
    public Optional<Integer> getMaxLength() {
        return Optional.ofNullable(this.maxLength);
    }
    public Optional<String> getPropertyId() {
        return Optional.ofNullable(this.propertyId);
    }
    public Optional<String> getSchemaItemPropLink() {
        return Optional.ofNullable(this.schemaItemPropLink);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PropertyDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arrayValueSeparator;
        private List<DataSourcePrecedenceResponse> dataSourcePrecedenceRules;
        private @Nullable List<ProfileEnumValidValuesFormatResponse> enumValidValues;
        private String fieldName;
        private String fieldType;
        private @Nullable Boolean isArray;
        private @Nullable Boolean isAvailableInGraph;
        private @Nullable Boolean isEnum;
        private @Nullable Boolean isFlagEnum;
        private @Nullable Boolean isImage;
        private @Nullable Boolean isLocalizedString;
        private @Nullable Boolean isName;
        private @Nullable Boolean isRequired;
        private @Nullable Integer maxLength;
        private @Nullable String propertyId;
        private @Nullable String schemaItemPropLink;

        public Builder() {
    	      // Empty
        }

        public Builder(PropertyDefinitionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arrayValueSeparator = defaults.arrayValueSeparator;
    	      this.dataSourcePrecedenceRules = defaults.dataSourcePrecedenceRules;
    	      this.enumValidValues = defaults.enumValidValues;
    	      this.fieldName = defaults.fieldName;
    	      this.fieldType = defaults.fieldType;
    	      this.isArray = defaults.isArray;
    	      this.isAvailableInGraph = defaults.isAvailableInGraph;
    	      this.isEnum = defaults.isEnum;
    	      this.isFlagEnum = defaults.isFlagEnum;
    	      this.isImage = defaults.isImage;
    	      this.isLocalizedString = defaults.isLocalizedString;
    	      this.isName = defaults.isName;
    	      this.isRequired = defaults.isRequired;
    	      this.maxLength = defaults.maxLength;
    	      this.propertyId = defaults.propertyId;
    	      this.schemaItemPropLink = defaults.schemaItemPropLink;
        }

        public Builder setArrayValueSeparator(@Nullable String arrayValueSeparator) {
            this.arrayValueSeparator = arrayValueSeparator;
            return this;
        }

        public Builder setDataSourcePrecedenceRules(List<DataSourcePrecedenceResponse> dataSourcePrecedenceRules) {
            this.dataSourcePrecedenceRules = Objects.requireNonNull(dataSourcePrecedenceRules);
            return this;
        }

        public Builder setEnumValidValues(@Nullable List<ProfileEnumValidValuesFormatResponse> enumValidValues) {
            this.enumValidValues = enumValidValues;
            return this;
        }

        public Builder setFieldName(String fieldName) {
            this.fieldName = Objects.requireNonNull(fieldName);
            return this;
        }

        public Builder setFieldType(String fieldType) {
            this.fieldType = Objects.requireNonNull(fieldType);
            return this;
        }

        public Builder setIsArray(@Nullable Boolean isArray) {
            this.isArray = isArray;
            return this;
        }

        public Builder setIsAvailableInGraph(@Nullable Boolean isAvailableInGraph) {
            this.isAvailableInGraph = isAvailableInGraph;
            return this;
        }

        public Builder setIsEnum(@Nullable Boolean isEnum) {
            this.isEnum = isEnum;
            return this;
        }

        public Builder setIsFlagEnum(@Nullable Boolean isFlagEnum) {
            this.isFlagEnum = isFlagEnum;
            return this;
        }

        public Builder setIsImage(@Nullable Boolean isImage) {
            this.isImage = isImage;
            return this;
        }

        public Builder setIsLocalizedString(@Nullable Boolean isLocalizedString) {
            this.isLocalizedString = isLocalizedString;
            return this;
        }

        public Builder setIsName(@Nullable Boolean isName) {
            this.isName = isName;
            return this;
        }

        public Builder setIsRequired(@Nullable Boolean isRequired) {
            this.isRequired = isRequired;
            return this;
        }

        public Builder setMaxLength(@Nullable Integer maxLength) {
            this.maxLength = maxLength;
            return this;
        }

        public Builder setPropertyId(@Nullable String propertyId) {
            this.propertyId = propertyId;
            return this;
        }

        public Builder setSchemaItemPropLink(@Nullable String schemaItemPropLink) {
            this.schemaItemPropLink = schemaItemPropLink;
            return this;
        }

        public PropertyDefinitionResponse build() {
            return new PropertyDefinitionResponse(arrayValueSeparator, dataSourcePrecedenceRules, enumValidValues, fieldName, fieldType, isArray, isAvailableInGraph, isEnum, isFlagEnum, isImage, isLocalizedString, isName, isRequired, maxLength, propertyId, schemaItemPropLink);
        }
    }
}
