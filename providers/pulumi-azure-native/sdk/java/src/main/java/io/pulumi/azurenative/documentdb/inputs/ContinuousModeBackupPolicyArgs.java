// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * The object representing continuous mode backup policy.
 * 
 */
public final class ContinuousModeBackupPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContinuousModeBackupPolicyArgs Empty = new ContinuousModeBackupPolicyArgs();

    /**
     * Describes the mode of backups.
     * Expected value is 'Continuous'.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    public ContinuousModeBackupPolicyArgs(Output<String> type) {
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private ContinuousModeBackupPolicyArgs() {
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContinuousModeBackupPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(ContinuousModeBackupPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
        }

        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public ContinuousModeBackupPolicyArgs build() {
            return new ContinuousModeBackupPolicyArgs(type);
        }
    }
}
