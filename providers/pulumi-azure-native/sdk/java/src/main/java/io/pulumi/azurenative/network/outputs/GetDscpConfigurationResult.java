// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.NetworkInterfaceResponse;
import io.pulumi.azurenative.network.outputs.QosIpRangeResponse;
import io.pulumi.azurenative.network.outputs.QosPortRangeResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetDscpConfigurationResult {
    /**
     * Associated Network Interfaces to the DSCP Configuration.
     * 
     */
    private final List<NetworkInterfaceResponse> associatedNetworkInterfaces;
    /**
     * Destination IP ranges.
     * 
     */
    private final @Nullable List<QosIpRangeResponse> destinationIpRanges;
    /**
     * Destination port ranges.
     * 
     */
    private final @Nullable List<QosPortRangeResponse> destinationPortRanges;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private final String etag;
    /**
     * Resource ID.
     * 
     */
    private final @Nullable String id;
    /**
     * Resource location.
     * 
     */
    private final @Nullable String location;
    /**
     * List of markings to be used in the configuration.
     * 
     */
    private final @Nullable List<Integer> markings;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * RNM supported protocol types.
     * 
     */
    private final @Nullable String protocol;
    /**
     * The provisioning state of the DSCP Configuration resource.
     * 
     */
    private final String provisioningState;
    /**
     * Qos Collection ID generated by RNM.
     * 
     */
    private final String qosCollectionId;
    /**
     * The resource GUID property of the DSCP Configuration resource.
     * 
     */
    private final String resourceGuid;
    /**
     * Source IP ranges.
     * 
     */
    private final @Nullable List<QosIpRangeResponse> sourceIpRanges;
    /**
     * Sources port ranges.
     * 
     */
    private final @Nullable List<QosPortRangeResponse> sourcePortRanges;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Resource type.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"associatedNetworkInterfaces","destinationIpRanges","destinationPortRanges","etag","id","location","markings","name","protocol","provisioningState","qosCollectionId","resourceGuid","sourceIpRanges","sourcePortRanges","tags","type"})
    private GetDscpConfigurationResult(
        List<NetworkInterfaceResponse> associatedNetworkInterfaces,
        @Nullable List<QosIpRangeResponse> destinationIpRanges,
        @Nullable List<QosPortRangeResponse> destinationPortRanges,
        String etag,
        @Nullable String id,
        @Nullable String location,
        @Nullable List<Integer> markings,
        String name,
        @Nullable String protocol,
        String provisioningState,
        String qosCollectionId,
        String resourceGuid,
        @Nullable List<QosIpRangeResponse> sourceIpRanges,
        @Nullable List<QosPortRangeResponse> sourcePortRanges,
        @Nullable Map<String,String> tags,
        String type) {
        this.associatedNetworkInterfaces = Objects.requireNonNull(associatedNetworkInterfaces);
        this.destinationIpRanges = destinationIpRanges;
        this.destinationPortRanges = destinationPortRanges;
        this.etag = Objects.requireNonNull(etag);
        this.id = id;
        this.location = location;
        this.markings = markings;
        this.name = Objects.requireNonNull(name);
        this.protocol = protocol;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.qosCollectionId = Objects.requireNonNull(qosCollectionId);
        this.resourceGuid = Objects.requireNonNull(resourceGuid);
        this.sourceIpRanges = sourceIpRanges;
        this.sourcePortRanges = sourcePortRanges;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    /**
     * Associated Network Interfaces to the DSCP Configuration.
     * 
     */
    public List<NetworkInterfaceResponse> getAssociatedNetworkInterfaces() {
        return this.associatedNetworkInterfaces;
    }
    /**
     * Destination IP ranges.
     * 
     */
    public List<QosIpRangeResponse> getDestinationIpRanges() {
        return this.destinationIpRanges == null ? List.of() : this.destinationIpRanges;
    }
    /**
     * Destination port ranges.
     * 
     */
    public List<QosPortRangeResponse> getDestinationPortRanges() {
        return this.destinationPortRanges == null ? List.of() : this.destinationPortRanges;
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String getEtag() {
        return this.etag;
    }
    /**
     * Resource ID.
     * 
     */
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    /**
     * Resource location.
     * 
     */
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    /**
     * List of markings to be used in the configuration.
     * 
     */
    public List<Integer> getMarkings() {
        return this.markings == null ? List.of() : this.markings;
    }
    /**
     * Resource name.
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * RNM supported protocol types.
     * 
     */
    public Optional<String> getProtocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * The provisioning state of the DSCP Configuration resource.
     * 
     */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Qos Collection ID generated by RNM.
     * 
     */
    public String getQosCollectionId() {
        return this.qosCollectionId;
    }
    /**
     * The resource GUID property of the DSCP Configuration resource.
     * 
     */
    public String getResourceGuid() {
        return this.resourceGuid;
    }
    /**
     * Source IP ranges.
     * 
     */
    public List<QosIpRangeResponse> getSourceIpRanges() {
        return this.sourceIpRanges == null ? List.of() : this.sourceIpRanges;
    }
    /**
     * Sources port ranges.
     * 
     */
    public List<QosPortRangeResponse> getSourcePortRanges() {
        return this.sourcePortRanges == null ? List.of() : this.sourcePortRanges;
    }
    /**
     * Resource tags.
     * 
     */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Resource type.
     * 
     */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDscpConfigurationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<NetworkInterfaceResponse> associatedNetworkInterfaces;
        private @Nullable List<QosIpRangeResponse> destinationIpRanges;
        private @Nullable List<QosPortRangeResponse> destinationPortRanges;
        private String etag;
        private @Nullable String id;
        private @Nullable String location;
        private @Nullable List<Integer> markings;
        private String name;
        private @Nullable String protocol;
        private String provisioningState;
        private String qosCollectionId;
        private String resourceGuid;
        private @Nullable List<QosIpRangeResponse> sourceIpRanges;
        private @Nullable List<QosPortRangeResponse> sourcePortRanges;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDscpConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedNetworkInterfaces = defaults.associatedNetworkInterfaces;
    	      this.destinationIpRanges = defaults.destinationIpRanges;
    	      this.destinationPortRanges = defaults.destinationPortRanges;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.markings = defaults.markings;
    	      this.name = defaults.name;
    	      this.protocol = defaults.protocol;
    	      this.provisioningState = defaults.provisioningState;
    	      this.qosCollectionId = defaults.qosCollectionId;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.sourceIpRanges = defaults.sourceIpRanges;
    	      this.sourcePortRanges = defaults.sourcePortRanges;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setAssociatedNetworkInterfaces(List<NetworkInterfaceResponse> associatedNetworkInterfaces) {
            this.associatedNetworkInterfaces = Objects.requireNonNull(associatedNetworkInterfaces);
            return this;
        }

        public Builder setDestinationIpRanges(@Nullable List<QosIpRangeResponse> destinationIpRanges) {
            this.destinationIpRanges = destinationIpRanges;
            return this;
        }

        public Builder setDestinationPortRanges(@Nullable List<QosPortRangeResponse> destinationPortRanges) {
            this.destinationPortRanges = destinationPortRanges;
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setMarkings(@Nullable List<Integer> markings) {
            this.markings = markings;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProtocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setQosCollectionId(String qosCollectionId) {
            this.qosCollectionId = Objects.requireNonNull(qosCollectionId);
            return this;
        }

        public Builder setResourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }

        public Builder setSourceIpRanges(@Nullable List<QosIpRangeResponse> sourceIpRanges) {
            this.sourceIpRanges = sourceIpRanges;
            return this;
        }

        public Builder setSourcePortRanges(@Nullable List<QosPortRangeResponse> sourcePortRanges) {
            this.sourcePortRanges = sourcePortRanges;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetDscpConfigurationResult build() {
            return new GetDscpConfigurationResult(associatedNetworkInterfaces, destinationIpRanges, destinationPortRanges, etag, id, location, markings, name, protocol, provisioningState, qosCollectionId, resourceGuid, sourceIpRanges, sourcePortRanges, tags, type);
        }
    }
}
