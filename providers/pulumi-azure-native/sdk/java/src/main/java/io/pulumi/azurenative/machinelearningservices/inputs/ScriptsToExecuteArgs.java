// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.inputs.ScriptReferenceArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Customized setup scripts
 * 
 */
public final class ScriptsToExecuteArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScriptsToExecuteArgs Empty = new ScriptsToExecuteArgs();

    /**
     * Script that's run only once during provision of the compute.
     * 
     */
    @InputImport(name="creationScript")
      private final @Nullable Input<ScriptReferenceArgs> creationScript;

    public Input<ScriptReferenceArgs> getCreationScript() {
        return this.creationScript == null ? Input.empty() : this.creationScript;
    }

    /**
     * Script that's run every time the machine starts.
     * 
     */
    @InputImport(name="startupScript")
      private final @Nullable Input<ScriptReferenceArgs> startupScript;

    public Input<ScriptReferenceArgs> getStartupScript() {
        return this.startupScript == null ? Input.empty() : this.startupScript;
    }

    public ScriptsToExecuteArgs(
        @Nullable Input<ScriptReferenceArgs> creationScript,
        @Nullable Input<ScriptReferenceArgs> startupScript) {
        this.creationScript = creationScript;
        this.startupScript = startupScript;
    }

    private ScriptsToExecuteArgs() {
        this.creationScript = Input.empty();
        this.startupScript = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScriptsToExecuteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ScriptReferenceArgs> creationScript;
        private @Nullable Input<ScriptReferenceArgs> startupScript;

        public Builder() {
    	      // Empty
        }

        public Builder(ScriptsToExecuteArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationScript = defaults.creationScript;
    	      this.startupScript = defaults.startupScript;
        }

        public Builder setCreationScript(@Nullable Input<ScriptReferenceArgs> creationScript) {
            this.creationScript = creationScript;
            return this;
        }

        public Builder setCreationScript(@Nullable ScriptReferenceArgs creationScript) {
            this.creationScript = Input.ofNullable(creationScript);
            return this;
        }

        public Builder setStartupScript(@Nullable Input<ScriptReferenceArgs> startupScript) {
            this.startupScript = startupScript;
            return this;
        }

        public Builder setStartupScript(@Nullable ScriptReferenceArgs startupScript) {
            this.startupScript = Input.ofNullable(startupScript);
            return this;
        }
        public ScriptsToExecuteArgs build() {
            return new ScriptsToExecuteArgs(creationScript, startupScript);
        }
    }
}
