// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.synapse.outputs;

import io.pulumi.azurenative.synapse.outputs.DataLakeStorageAccountDetailsResponse;
import io.pulumi.azurenative.synapse.outputs.EncryptionDetailsResponse;
import io.pulumi.azurenative.synapse.outputs.ManagedIdentityResponse;
import io.pulumi.azurenative.synapse.outputs.ManagedVirtualNetworkSettingsResponse;
import io.pulumi.azurenative.synapse.outputs.PrivateEndpointConnectionResponse;
import io.pulumi.azurenative.synapse.outputs.PurviewConfigurationResponse;
import io.pulumi.azurenative.synapse.outputs.VirtualNetworkProfileResponse;
import io.pulumi.azurenative.synapse.outputs.WorkspaceRepositoryConfigurationResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetWorkspaceResult {
    private final String adlaResourceId;
    private final @Nullable Map<String,String> connectivityEndpoints;
    private final @Nullable DataLakeStorageAccountDetailsResponse defaultDataLakeStorage;
    private final @Nullable EncryptionDetailsResponse encryption;
    private final Map<String,Object> extraProperties;
    private final String id;
    private final @Nullable ManagedIdentityResponse identity;
    private final String location;
    private final @Nullable String managedResourceGroupName;
    private final @Nullable String managedVirtualNetwork;
    private final @Nullable ManagedVirtualNetworkSettingsResponse managedVirtualNetworkSettings;
    private final String name;
    private final @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;
    private final String provisioningState;
    private final @Nullable String publicNetworkAccess;
    private final @Nullable PurviewConfigurationResponse purviewConfiguration;
    private final @Nullable String sqlAdministratorLogin;
    private final @Nullable String sqlAdministratorLoginPassword;
    private final @Nullable Map<String,String> tags;
    private final String type;
    private final @Nullable VirtualNetworkProfileResponse virtualNetworkProfile;
    private final @Nullable WorkspaceRepositoryConfigurationResponse workspaceRepositoryConfiguration;
    private final String workspaceUID;

    @OutputCustomType.Constructor({"adlaResourceId","connectivityEndpoints","defaultDataLakeStorage","encryption","extraProperties","id","identity","location","managedResourceGroupName","managedVirtualNetwork","managedVirtualNetworkSettings","name","privateEndpointConnections","provisioningState","publicNetworkAccess","purviewConfiguration","sqlAdministratorLogin","sqlAdministratorLoginPassword","tags","type","virtualNetworkProfile","workspaceRepositoryConfiguration","workspaceUID"})
    private GetWorkspaceResult(
        String adlaResourceId,
        @Nullable Map<String,String> connectivityEndpoints,
        @Nullable DataLakeStorageAccountDetailsResponse defaultDataLakeStorage,
        @Nullable EncryptionDetailsResponse encryption,
        Map<String,Object> extraProperties,
        String id,
        @Nullable ManagedIdentityResponse identity,
        String location,
        @Nullable String managedResourceGroupName,
        @Nullable String managedVirtualNetwork,
        @Nullable ManagedVirtualNetworkSettingsResponse managedVirtualNetworkSettings,
        String name,
        @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections,
        String provisioningState,
        @Nullable String publicNetworkAccess,
        @Nullable PurviewConfigurationResponse purviewConfiguration,
        @Nullable String sqlAdministratorLogin,
        @Nullable String sqlAdministratorLoginPassword,
        @Nullable Map<String,String> tags,
        String type,
        @Nullable VirtualNetworkProfileResponse virtualNetworkProfile,
        @Nullable WorkspaceRepositoryConfigurationResponse workspaceRepositoryConfiguration,
        String workspaceUID) {
        this.adlaResourceId = Objects.requireNonNull(adlaResourceId);
        this.connectivityEndpoints = connectivityEndpoints;
        this.defaultDataLakeStorage = defaultDataLakeStorage;
        this.encryption = encryption;
        this.extraProperties = Objects.requireNonNull(extraProperties);
        this.id = Objects.requireNonNull(id);
        this.identity = identity;
        this.location = Objects.requireNonNull(location);
        this.managedResourceGroupName = managedResourceGroupName;
        this.managedVirtualNetwork = managedVirtualNetwork;
        this.managedVirtualNetworkSettings = managedVirtualNetworkSettings;
        this.name = Objects.requireNonNull(name);
        this.privateEndpointConnections = privateEndpointConnections;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.publicNetworkAccess = publicNetworkAccess;
        this.purviewConfiguration = purviewConfiguration;
        this.sqlAdministratorLogin = sqlAdministratorLogin;
        this.sqlAdministratorLoginPassword = sqlAdministratorLoginPassword;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.virtualNetworkProfile = virtualNetworkProfile;
        this.workspaceRepositoryConfiguration = workspaceRepositoryConfiguration;
        this.workspaceUID = Objects.requireNonNull(workspaceUID);
    }

    public String getAdlaResourceId() {
        return this.adlaResourceId;
    }
    public Map<String,String> getConnectivityEndpoints() {
        return this.connectivityEndpoints == null ? Map.of() : this.connectivityEndpoints;
    }
    public Optional<DataLakeStorageAccountDetailsResponse> getDefaultDataLakeStorage() {
        return Optional.ofNullable(this.defaultDataLakeStorage);
    }
    public Optional<EncryptionDetailsResponse> getEncryption() {
        return Optional.ofNullable(this.encryption);
    }
    public Map<String,Object> getExtraProperties() {
        return this.extraProperties;
    }
    public String getId() {
        return this.id;
    }
    public Optional<ManagedIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    public String getLocation() {
        return this.location;
    }
    public Optional<String> getManagedResourceGroupName() {
        return Optional.ofNullable(this.managedResourceGroupName);
    }
    public Optional<String> getManagedVirtualNetwork() {
        return Optional.ofNullable(this.managedVirtualNetwork);
    }
    public Optional<ManagedVirtualNetworkSettingsResponse> getManagedVirtualNetworkSettings() {
        return Optional.ofNullable(this.managedVirtualNetworkSettings);
    }
    public String getName() {
        return this.name;
    }
    public List<PrivateEndpointConnectionResponse> getPrivateEndpointConnections() {
        return this.privateEndpointConnections == null ? List.of() : this.privateEndpointConnections;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<String> getPublicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    public Optional<PurviewConfigurationResponse> getPurviewConfiguration() {
        return Optional.ofNullable(this.purviewConfiguration);
    }
    public Optional<String> getSqlAdministratorLogin() {
        return Optional.ofNullable(this.sqlAdministratorLogin);
    }
    public Optional<String> getSqlAdministratorLoginPassword() {
        return Optional.ofNullable(this.sqlAdministratorLoginPassword);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }
    public Optional<VirtualNetworkProfileResponse> getVirtualNetworkProfile() {
        return Optional.ofNullable(this.virtualNetworkProfile);
    }
    public Optional<WorkspaceRepositoryConfigurationResponse> getWorkspaceRepositoryConfiguration() {
        return Optional.ofNullable(this.workspaceRepositoryConfiguration);
    }
    public String getWorkspaceUID() {
        return this.workspaceUID;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String adlaResourceId;
        private @Nullable Map<String,String> connectivityEndpoints;
        private @Nullable DataLakeStorageAccountDetailsResponse defaultDataLakeStorage;
        private @Nullable EncryptionDetailsResponse encryption;
        private Map<String,Object> extraProperties;
        private String id;
        private @Nullable ManagedIdentityResponse identity;
        private String location;
        private @Nullable String managedResourceGroupName;
        private @Nullable String managedVirtualNetwork;
        private @Nullable ManagedVirtualNetworkSettingsResponse managedVirtualNetworkSettings;
        private String name;
        private @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;
        private String provisioningState;
        private @Nullable String publicNetworkAccess;
        private @Nullable PurviewConfigurationResponse purviewConfiguration;
        private @Nullable String sqlAdministratorLogin;
        private @Nullable String sqlAdministratorLoginPassword;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable VirtualNetworkProfileResponse virtualNetworkProfile;
        private @Nullable WorkspaceRepositoryConfigurationResponse workspaceRepositoryConfiguration;
        private String workspaceUID;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adlaResourceId = defaults.adlaResourceId;
    	      this.connectivityEndpoints = defaults.connectivityEndpoints;
    	      this.defaultDataLakeStorage = defaults.defaultDataLakeStorage;
    	      this.encryption = defaults.encryption;
    	      this.extraProperties = defaults.extraProperties;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.managedResourceGroupName = defaults.managedResourceGroupName;
    	      this.managedVirtualNetwork = defaults.managedVirtualNetwork;
    	      this.managedVirtualNetworkSettings = defaults.managedVirtualNetworkSettings;
    	      this.name = defaults.name;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.purviewConfiguration = defaults.purviewConfiguration;
    	      this.sqlAdministratorLogin = defaults.sqlAdministratorLogin;
    	      this.sqlAdministratorLoginPassword = defaults.sqlAdministratorLoginPassword;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.virtualNetworkProfile = defaults.virtualNetworkProfile;
    	      this.workspaceRepositoryConfiguration = defaults.workspaceRepositoryConfiguration;
    	      this.workspaceUID = defaults.workspaceUID;
        }

        public Builder setAdlaResourceId(String adlaResourceId) {
            this.adlaResourceId = Objects.requireNonNull(adlaResourceId);
            return this;
        }

        public Builder setConnectivityEndpoints(@Nullable Map<String,String> connectivityEndpoints) {
            this.connectivityEndpoints = connectivityEndpoints;
            return this;
        }

        public Builder setDefaultDataLakeStorage(@Nullable DataLakeStorageAccountDetailsResponse defaultDataLakeStorage) {
            this.defaultDataLakeStorage = defaultDataLakeStorage;
            return this;
        }

        public Builder setEncryption(@Nullable EncryptionDetailsResponse encryption) {
            this.encryption = encryption;
            return this;
        }

        public Builder setExtraProperties(Map<String,Object> extraProperties) {
            this.extraProperties = Objects.requireNonNull(extraProperties);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable ManagedIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setManagedResourceGroupName(@Nullable String managedResourceGroupName) {
            this.managedResourceGroupName = managedResourceGroupName;
            return this;
        }

        public Builder setManagedVirtualNetwork(@Nullable String managedVirtualNetwork) {
            this.managedVirtualNetwork = managedVirtualNetwork;
            return this;
        }

        public Builder setManagedVirtualNetworkSettings(@Nullable ManagedVirtualNetworkSettingsResponse managedVirtualNetworkSettings) {
            this.managedVirtualNetworkSettings = managedVirtualNetworkSettings;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPrivateEndpointConnections(@Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = privateEndpointConnections;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setPublicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        public Builder setPurviewConfiguration(@Nullable PurviewConfigurationResponse purviewConfiguration) {
            this.purviewConfiguration = purviewConfiguration;
            return this;
        }

        public Builder setSqlAdministratorLogin(@Nullable String sqlAdministratorLogin) {
            this.sqlAdministratorLogin = sqlAdministratorLogin;
            return this;
        }

        public Builder setSqlAdministratorLoginPassword(@Nullable String sqlAdministratorLoginPassword) {
            this.sqlAdministratorLoginPassword = sqlAdministratorLoginPassword;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVirtualNetworkProfile(@Nullable VirtualNetworkProfileResponse virtualNetworkProfile) {
            this.virtualNetworkProfile = virtualNetworkProfile;
            return this;
        }

        public Builder setWorkspaceRepositoryConfiguration(@Nullable WorkspaceRepositoryConfigurationResponse workspaceRepositoryConfiguration) {
            this.workspaceRepositoryConfiguration = workspaceRepositoryConfiguration;
            return this;
        }

        public Builder setWorkspaceUID(String workspaceUID) {
            this.workspaceUID = Objects.requireNonNull(workspaceUID);
            return this;
        }

        public GetWorkspaceResult build() {
            return new GetWorkspaceResult(adlaResourceId, connectivityEndpoints, defaultDataLakeStorage, encryption, extraProperties, id, identity, location, managedResourceGroupName, managedVirtualNetwork, managedVirtualNetworkSettings, name, privateEndpointConnections, provisioningState, publicNetworkAccess, purviewConfiguration, sqlAdministratorLogin, sqlAdministratorLoginPassword, tags, type, virtualNetworkProfile, workspaceRepositoryConfiguration, workspaceUID);
        }
    }
}
