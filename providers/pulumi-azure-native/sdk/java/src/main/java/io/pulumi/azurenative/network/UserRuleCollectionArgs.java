// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.network.inputs.NetworkManagerSecurityGroupItemArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserRuleCollectionArgs extends io.pulumi.resources.ResourceArgs {

    public static final UserRuleCollectionArgs Empty = new UserRuleCollectionArgs();

    /**
     * Groups for configuration
     * 
     */
    @InputImport(name="appliesToGroups")
      private final @Nullable Output<List<NetworkManagerSecurityGroupItemArgs>> appliesToGroups;

    public Output<List<NetworkManagerSecurityGroupItemArgs>> getAppliesToGroups() {
        return this.appliesToGroups == null ? Output.empty() : this.appliesToGroups;
    }

    /**
     * The name of the network manager security Configuration.
     * 
     */
    @InputImport(name="configurationName", required=true)
      private final Output<String> configurationName;

    public Output<String> getConfigurationName() {
        return this.configurationName;
    }

    /**
     * A description of the rule collection.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * A display name of the rule collection.
     * 
     */
    @InputImport(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName == null ? Output.empty() : this.displayName;
    }

    /**
     * The name of the network manager.
     * 
     */
    @InputImport(name="networkManagerName", required=true)
      private final Output<String> networkManagerName;

    public Output<String> getNetworkManagerName() {
        return this.networkManagerName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the network manager security Configuration rule collection.
     * 
     */
    @InputImport(name="ruleCollectionName")
      private final @Nullable Output<String> ruleCollectionName;

    public Output<String> getRuleCollectionName() {
        return this.ruleCollectionName == null ? Output.empty() : this.ruleCollectionName;
    }

    public UserRuleCollectionArgs(
        @Nullable Output<List<NetworkManagerSecurityGroupItemArgs>> appliesToGroups,
        Output<String> configurationName,
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        Output<String> networkManagerName,
        Output<String> resourceGroupName,
        @Nullable Output<String> ruleCollectionName) {
        this.appliesToGroups = appliesToGroups;
        this.configurationName = Objects.requireNonNull(configurationName, "expected parameter 'configurationName' to be non-null");
        this.description = description;
        this.displayName = displayName;
        this.networkManagerName = Objects.requireNonNull(networkManagerName, "expected parameter 'networkManagerName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.ruleCollectionName = ruleCollectionName;
    }

    private UserRuleCollectionArgs() {
        this.appliesToGroups = Output.empty();
        this.configurationName = Output.empty();
        this.description = Output.empty();
        this.displayName = Output.empty();
        this.networkManagerName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.ruleCollectionName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserRuleCollectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<NetworkManagerSecurityGroupItemArgs>> appliesToGroups;
        private Output<String> configurationName;
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private Output<String> networkManagerName;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> ruleCollectionName;

        public Builder() {
    	      // Empty
        }

        public Builder(UserRuleCollectionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appliesToGroups = defaults.appliesToGroups;
    	      this.configurationName = defaults.configurationName;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.networkManagerName = defaults.networkManagerName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.ruleCollectionName = defaults.ruleCollectionName;
        }

        public Builder appliesToGroups(@Nullable Output<List<NetworkManagerSecurityGroupItemArgs>> appliesToGroups) {
            this.appliesToGroups = appliesToGroups;
            return this;
        }

        public Builder appliesToGroups(@Nullable List<NetworkManagerSecurityGroupItemArgs> appliesToGroups) {
            this.appliesToGroups = Output.ofNullable(appliesToGroups);
            return this;
        }

        public Builder configurationName(Output<String> configurationName) {
            this.configurationName = Objects.requireNonNull(configurationName);
            return this;
        }

        public Builder configurationName(String configurationName) {
            this.configurationName = Output.of(Objects.requireNonNull(configurationName));
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = Output.ofNullable(displayName);
            return this;
        }

        public Builder networkManagerName(Output<String> networkManagerName) {
            this.networkManagerName = Objects.requireNonNull(networkManagerName);
            return this;
        }

        public Builder networkManagerName(String networkManagerName) {
            this.networkManagerName = Output.of(Objects.requireNonNull(networkManagerName));
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder ruleCollectionName(@Nullable Output<String> ruleCollectionName) {
            this.ruleCollectionName = ruleCollectionName;
            return this;
        }

        public Builder ruleCollectionName(@Nullable String ruleCollectionName) {
            this.ruleCollectionName = Output.ofNullable(ruleCollectionName);
            return this;
        }
        public UserRuleCollectionArgs build() {
            return new UserRuleCollectionArgs(appliesToGroups, configurationName, description, displayName, networkManagerName, resourceGroupName, ruleCollectionName);
        }
    }
}
