// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.kubernetesconfiguration.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The source reference for the GitRepository object.
 * 
 */
public final class RepositoryRefDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final RepositoryRefDefinitionArgs Empty = new RepositoryRefDefinitionArgs();

    /**
     * The git repository branch name to checkout.
     * 
     */
    @Import(name="branch")
      private final @Nullable Output<String> branch;

    public Output<String> getBranch() {
        return this.branch == null ? Codegen.empty() : this.branch;
    }

    /**
     * The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
     * 
     */
    @Import(name="commit")
      private final @Nullable Output<String> commit;

    public Output<String> getCommit() {
        return this.commit == null ? Codegen.empty() : this.commit;
    }

    /**
     * The semver range used to match against git repository tags. This takes precedence over tag.
     * 
     */
    @Import(name="semver")
      private final @Nullable Output<String> semver;

    public Output<String> getSemver() {
        return this.semver == null ? Codegen.empty() : this.semver;
    }

    /**
     * The git repository tag name to checkout. This takes precedence over branch.
     * 
     */
    @Import(name="tag")
      private final @Nullable Output<String> tag;

    public Output<String> getTag() {
        return this.tag == null ? Codegen.empty() : this.tag;
    }

    public RepositoryRefDefinitionArgs(
        @Nullable Output<String> branch,
        @Nullable Output<String> commit,
        @Nullable Output<String> semver,
        @Nullable Output<String> tag) {
        this.branch = branch;
        this.commit = commit;
        this.semver = semver;
        this.tag = tag;
    }

    private RepositoryRefDefinitionArgs() {
        this.branch = Codegen.empty();
        this.commit = Codegen.empty();
        this.semver = Codegen.empty();
        this.tag = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryRefDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> branch;
        private @Nullable Output<String> commit;
        private @Nullable Output<String> semver;
        private @Nullable Output<String> tag;

        public Builder() {
    	      // Empty
        }

        public Builder(RepositoryRefDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.commit = defaults.commit;
    	      this.semver = defaults.semver;
    	      this.tag = defaults.tag;
        }

        public Builder branch(@Nullable Output<String> branch) {
            this.branch = branch;
            return this;
        }
        public Builder branch(@Nullable String branch) {
            this.branch = Codegen.ofNullable(branch);
            return this;
        }
        public Builder commit(@Nullable Output<String> commit) {
            this.commit = commit;
            return this;
        }
        public Builder commit(@Nullable String commit) {
            this.commit = Codegen.ofNullable(commit);
            return this;
        }
        public Builder semver(@Nullable Output<String> semver) {
            this.semver = semver;
            return this;
        }
        public Builder semver(@Nullable String semver) {
            this.semver = Codegen.ofNullable(semver);
            return this;
        }
        public Builder tag(@Nullable Output<String> tag) {
            this.tag = tag;
            return this;
        }
        public Builder tag(@Nullable String tag) {
            this.tag = Codegen.ofNullable(tag);
            return this;
        }        public RepositoryRefDefinitionArgs build() {
            return new RepositoryRefDefinitionArgs(branch, commit, semver, tag);
        }
    }
}
