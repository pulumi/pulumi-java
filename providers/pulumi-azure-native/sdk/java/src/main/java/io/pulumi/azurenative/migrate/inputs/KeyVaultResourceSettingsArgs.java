// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.migrate.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Defines the key vault resource settings.
 * 
 */
public final class KeyVaultResourceSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final KeyVaultResourceSettingsArgs Empty = new KeyVaultResourceSettingsArgs();

    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.KeyVault/vaults'.
     * 
     */
    @InputImport(name="resourceType", required=true)
        private final Input<String> resourceType;

    public Input<String> getPropResourceType() {
        return this.resourceType;
    }

    /**
     * Gets or sets the target Resource name.
     * 
     */
    @InputImport(name="targetResourceName", required=true)
        private final Input<String> targetResourceName;

    public Input<String> getTargetResourceName() {
        return this.targetResourceName;
    }

    public KeyVaultResourceSettingsArgs(
        Input<String> resourceType,
        Input<String> targetResourceName) {
        this.resourceType = Objects.requireNonNull(resourceType, "expected parameter 'resourceType' to be non-null");
        this.targetResourceName = Objects.requireNonNull(targetResourceName, "expected parameter 'targetResourceName' to be non-null");
    }

    private KeyVaultResourceSettingsArgs() {
        this.resourceType = Input.empty();
        this.targetResourceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyVaultResourceSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> resourceType;
        private Input<String> targetResourceName;

        public Builder() {
    	      // Empty
        }

        public Builder(KeyVaultResourceSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceType = defaults.resourceType;
    	      this.targetResourceName = defaults.targetResourceName;
        }

        public Builder setResourceType(Input<String> resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }

        public Builder setResourceType(String resourceType) {
            this.resourceType = Input.of(Objects.requireNonNull(resourceType));
            return this;
        }

        public Builder setTargetResourceName(Input<String> targetResourceName) {
            this.targetResourceName = Objects.requireNonNull(targetResourceName);
            return this;
        }

        public Builder setTargetResourceName(String targetResourceName) {
            this.targetResourceName = Input.of(Objects.requireNonNull(targetResourceName));
            return this;
        }
        public KeyVaultResourceSettingsArgs build() {
            return new KeyVaultResourceSettingsArgs(resourceType, targetResourceName);
        }
    }
}
