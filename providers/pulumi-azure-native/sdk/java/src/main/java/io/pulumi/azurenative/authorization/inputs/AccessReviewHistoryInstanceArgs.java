// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.authorization.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Access Review History Definition Instance.
 * 
 */
public final class AccessReviewHistoryInstanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final AccessReviewHistoryInstanceArgs Empty = new AccessReviewHistoryInstanceArgs();

    /**
     * The display name for the parent history definition.
     * 
     */
    @InputImport(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName == null ? Output.empty() : this.displayName;
    }

    /**
     * Date time when history data report expires and the associated data is deleted.
     * 
     */
    @InputImport(name="expiration")
      private final @Nullable Output<String> expiration;

    public Output<String> getExpiration() {
        return this.expiration == null ? Output.empty() : this.expiration;
    }

    /**
     * Date time when the history data report is scheduled to be generated.
     * 
     */
    @InputImport(name="fulfilledDateTime")
      private final @Nullable Output<String> fulfilledDateTime;

    public Output<String> getFulfilledDateTime() {
        return this.fulfilledDateTime == null ? Output.empty() : this.fulfilledDateTime;
    }

    /**
     * Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.
     * 
     */
    @InputImport(name="reviewHistoryPeriodEndDateTime")
      private final @Nullable Output<String> reviewHistoryPeriodEndDateTime;

    public Output<String> getReviewHistoryPeriodEndDateTime() {
        return this.reviewHistoryPeriodEndDateTime == null ? Output.empty() : this.reviewHistoryPeriodEndDateTime;
    }

    /**
     * Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.
     * 
     */
    @InputImport(name="reviewHistoryPeriodStartDateTime")
      private final @Nullable Output<String> reviewHistoryPeriodStartDateTime;

    public Output<String> getReviewHistoryPeriodStartDateTime() {
        return this.reviewHistoryPeriodStartDateTime == null ? Output.empty() : this.reviewHistoryPeriodStartDateTime;
    }

    /**
     * Date time when the history data report is scheduled to be generated.
     * 
     */
    @InputImport(name="runDateTime")
      private final @Nullable Output<String> runDateTime;

    public Output<String> getRunDateTime() {
        return this.runDateTime == null ? Output.empty() : this.runDateTime;
    }

    public AccessReviewHistoryInstanceArgs(
        @Nullable Output<String> displayName,
        @Nullable Output<String> expiration,
        @Nullable Output<String> fulfilledDateTime,
        @Nullable Output<String> reviewHistoryPeriodEndDateTime,
        @Nullable Output<String> reviewHistoryPeriodStartDateTime,
        @Nullable Output<String> runDateTime) {
        this.displayName = displayName;
        this.expiration = expiration;
        this.fulfilledDateTime = fulfilledDateTime;
        this.reviewHistoryPeriodEndDateTime = reviewHistoryPeriodEndDateTime;
        this.reviewHistoryPeriodStartDateTime = reviewHistoryPeriodStartDateTime;
        this.runDateTime = runDateTime;
    }

    private AccessReviewHistoryInstanceArgs() {
        this.displayName = Output.empty();
        this.expiration = Output.empty();
        this.fulfilledDateTime = Output.empty();
        this.reviewHistoryPeriodEndDateTime = Output.empty();
        this.reviewHistoryPeriodStartDateTime = Output.empty();
        this.runDateTime = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessReviewHistoryInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> displayName;
        private @Nullable Output<String> expiration;
        private @Nullable Output<String> fulfilledDateTime;
        private @Nullable Output<String> reviewHistoryPeriodEndDateTime;
        private @Nullable Output<String> reviewHistoryPeriodStartDateTime;
        private @Nullable Output<String> runDateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessReviewHistoryInstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.expiration = defaults.expiration;
    	      this.fulfilledDateTime = defaults.fulfilledDateTime;
    	      this.reviewHistoryPeriodEndDateTime = defaults.reviewHistoryPeriodEndDateTime;
    	      this.reviewHistoryPeriodStartDateTime = defaults.reviewHistoryPeriodStartDateTime;
    	      this.runDateTime = defaults.runDateTime;
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = Output.ofNullable(displayName);
            return this;
        }

        public Builder expiration(@Nullable Output<String> expiration) {
            this.expiration = expiration;
            return this;
        }

        public Builder expiration(@Nullable String expiration) {
            this.expiration = Output.ofNullable(expiration);
            return this;
        }

        public Builder fulfilledDateTime(@Nullable Output<String> fulfilledDateTime) {
            this.fulfilledDateTime = fulfilledDateTime;
            return this;
        }

        public Builder fulfilledDateTime(@Nullable String fulfilledDateTime) {
            this.fulfilledDateTime = Output.ofNullable(fulfilledDateTime);
            return this;
        }

        public Builder reviewHistoryPeriodEndDateTime(@Nullable Output<String> reviewHistoryPeriodEndDateTime) {
            this.reviewHistoryPeriodEndDateTime = reviewHistoryPeriodEndDateTime;
            return this;
        }

        public Builder reviewHistoryPeriodEndDateTime(@Nullable String reviewHistoryPeriodEndDateTime) {
            this.reviewHistoryPeriodEndDateTime = Output.ofNullable(reviewHistoryPeriodEndDateTime);
            return this;
        }

        public Builder reviewHistoryPeriodStartDateTime(@Nullable Output<String> reviewHistoryPeriodStartDateTime) {
            this.reviewHistoryPeriodStartDateTime = reviewHistoryPeriodStartDateTime;
            return this;
        }

        public Builder reviewHistoryPeriodStartDateTime(@Nullable String reviewHistoryPeriodStartDateTime) {
            this.reviewHistoryPeriodStartDateTime = Output.ofNullable(reviewHistoryPeriodStartDateTime);
            return this;
        }

        public Builder runDateTime(@Nullable Output<String> runDateTime) {
            this.runDateTime = runDateTime;
            return this;
        }

        public Builder runDateTime(@Nullable String runDateTime) {
            this.runDateTime = Output.ofNullable(runDateTime);
            return this;
        }
        public AccessReviewHistoryInstanceArgs build() {
            return new AccessReviewHistoryInstanceArgs(displayName, expiration, fulfilledDateTime, reviewHistoryPeriodEndDateTime, reviewHistoryPeriodStartDateTime, runDateTime);
        }
    }
}
