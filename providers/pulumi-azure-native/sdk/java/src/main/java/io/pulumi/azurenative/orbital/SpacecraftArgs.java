// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.orbital;

import io.pulumi.azurenative.orbital.inputs.SpacecraftLinkArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SpacecraftArgs extends io.pulumi.resources.ResourceArgs {

    public static final SpacecraftArgs Empty = new SpacecraftArgs();

    /**
     * Links of the Spacecraft
     * 
     */
    @InputImport(name="links")
      private final @Nullable Input<List<SpacecraftLinkArgs>> links;

    public Input<List<SpacecraftLinkArgs>> getLinks() {
        return this.links == null ? Input.empty() : this.links;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * NORAD ID of the spacecraft.
     * 
     */
    @InputImport(name="noradId", required=true)
      private final Input<String> noradId;

    public Input<String> getNoradId() {
        return this.noradId;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Spacecraft ID
     * 
     */
    @InputImport(name="spacecraftName")
      private final @Nullable Input<String> spacecraftName;

    public Input<String> getSpacecraftName() {
        return this.spacecraftName == null ? Input.empty() : this.spacecraftName;
    }

    /**
     * Resource tags.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Title line of Two Line Element (TLE).
     * 
     */
    @InputImport(name="titleLine")
      private final @Nullable Input<String> titleLine;

    public Input<String> getTitleLine() {
        return this.titleLine == null ? Input.empty() : this.titleLine;
    }

    /**
     * Line 1 of Two Line Element (TLE).
     * 
     */
    @InputImport(name="tleLine1")
      private final @Nullable Input<String> tleLine1;

    public Input<String> getTleLine1() {
        return this.tleLine1 == null ? Input.empty() : this.tleLine1;
    }

    /**
     * Line 2 of Two Line Element (TLE).
     * 
     */
    @InputImport(name="tleLine2")
      private final @Nullable Input<String> tleLine2;

    public Input<String> getTleLine2() {
        return this.tleLine2 == null ? Input.empty() : this.tleLine2;
    }

    public SpacecraftArgs(
        @Nullable Input<List<SpacecraftLinkArgs>> links,
        @Nullable Input<String> location,
        Input<String> noradId,
        Input<String> resourceGroupName,
        @Nullable Input<String> spacecraftName,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<String> titleLine,
        @Nullable Input<String> tleLine1,
        @Nullable Input<String> tleLine2) {
        this.links = links;
        this.location = location;
        this.noradId = Objects.requireNonNull(noradId, "expected parameter 'noradId' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.spacecraftName = spacecraftName;
        this.tags = tags;
        this.titleLine = titleLine;
        this.tleLine1 = tleLine1;
        this.tleLine2 = tleLine2;
    }

    private SpacecraftArgs() {
        this.links = Input.empty();
        this.location = Input.empty();
        this.noradId = Input.empty();
        this.resourceGroupName = Input.empty();
        this.spacecraftName = Input.empty();
        this.tags = Input.empty();
        this.titleLine = Input.empty();
        this.tleLine1 = Input.empty();
        this.tleLine2 = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpacecraftArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<SpacecraftLinkArgs>> links;
        private @Nullable Input<String> location;
        private Input<String> noradId;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> spacecraftName;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<String> titleLine;
        private @Nullable Input<String> tleLine1;
        private @Nullable Input<String> tleLine2;

        public Builder() {
    	      // Empty
        }

        public Builder(SpacecraftArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.links = defaults.links;
    	      this.location = defaults.location;
    	      this.noradId = defaults.noradId;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.spacecraftName = defaults.spacecraftName;
    	      this.tags = defaults.tags;
    	      this.titleLine = defaults.titleLine;
    	      this.tleLine1 = defaults.tleLine1;
    	      this.tleLine2 = defaults.tleLine2;
        }

        public Builder setLinks(@Nullable Input<List<SpacecraftLinkArgs>> links) {
            this.links = links;
            return this;
        }

        public Builder setLinks(@Nullable List<SpacecraftLinkArgs> links) {
            this.links = Input.ofNullable(links);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setNoradId(Input<String> noradId) {
            this.noradId = Objects.requireNonNull(noradId);
            return this;
        }

        public Builder setNoradId(String noradId) {
            this.noradId = Input.of(Objects.requireNonNull(noradId));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setSpacecraftName(@Nullable Input<String> spacecraftName) {
            this.spacecraftName = spacecraftName;
            return this;
        }

        public Builder setSpacecraftName(@Nullable String spacecraftName) {
            this.spacecraftName = Input.ofNullable(spacecraftName);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTitleLine(@Nullable Input<String> titleLine) {
            this.titleLine = titleLine;
            return this;
        }

        public Builder setTitleLine(@Nullable String titleLine) {
            this.titleLine = Input.ofNullable(titleLine);
            return this;
        }

        public Builder setTleLine1(@Nullable Input<String> tleLine1) {
            this.tleLine1 = tleLine1;
            return this;
        }

        public Builder setTleLine1(@Nullable String tleLine1) {
            this.tleLine1 = Input.ofNullable(tleLine1);
            return this;
        }

        public Builder setTleLine2(@Nullable Input<String> tleLine2) {
            this.tleLine2 = tleLine2;
            return this;
        }

        public Builder setTleLine2(@Nullable String tleLine2) {
            this.tleLine2 = Input.ofNullable(tleLine2);
            return this;
        }
        public SpacecraftArgs build() {
            return new SpacecraftArgs(links, location, noradId, resourceGroupName, spacecraftName, tags, titleLine, tleLine1, tleLine2);
        }
    }
}
