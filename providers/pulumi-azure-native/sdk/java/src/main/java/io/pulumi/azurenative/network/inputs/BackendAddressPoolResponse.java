// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.inputs.LoadBalancerBackendAddressResponse;
import io.pulumi.azurenative.network.inputs.NetworkInterfaceIPConfigurationResponse;
import io.pulumi.azurenative.network.inputs.SubResourceResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackendAddressPoolResponse extends io.pulumi.resources.InvokeArgs {

    public static final BackendAddressPoolResponse Empty = new BackendAddressPoolResponse();

    @InputImport(name="backendIPConfigurations", required=true)
    private final List<NetworkInterfaceIPConfigurationResponse> backendIPConfigurations;

    public List<NetworkInterfaceIPConfigurationResponse> getBackendIPConfigurations() {
        return this.backendIPConfigurations;
    }

    @InputImport(name="etag", required=true)
    private final String etag;

    public String getEtag() {
        return this.etag;
    }

    @InputImport(name="id")
    private final @Nullable String id;

    public Optional<String> getId() {
        return this.id == null ? Optional.empty() : Optional.ofNullable(this.id);
    }

    @InputImport(name="loadBalancerBackendAddresses")
    private final @Nullable List<LoadBalancerBackendAddressResponse> loadBalancerBackendAddresses;

    public List<LoadBalancerBackendAddressResponse> getLoadBalancerBackendAddresses() {
        return this.loadBalancerBackendAddresses == null ? List.of() : this.loadBalancerBackendAddresses;
    }

    @InputImport(name="loadBalancingRules", required=true)
    private final List<SubResourceResponse> loadBalancingRules;

    public List<SubResourceResponse> getLoadBalancingRules() {
        return this.loadBalancingRules;
    }

    @InputImport(name="location")
    private final @Nullable String location;

    public Optional<String> getLocation() {
        return this.location == null ? Optional.empty() : Optional.ofNullable(this.location);
    }

    @InputImport(name="name")
    private final @Nullable String name;

    public Optional<String> getName() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    @InputImport(name="outboundRule", required=true)
    private final SubResourceResponse outboundRule;

    public SubResourceResponse getOutboundRule() {
        return this.outboundRule;
    }

    @InputImport(name="outboundRules", required=true)
    private final List<SubResourceResponse> outboundRules;

    public List<SubResourceResponse> getOutboundRules() {
        return this.outboundRules;
    }

    @InputImport(name="provisioningState", required=true)
    private final String provisioningState;

    public String getProvisioningState() {
        return this.provisioningState;
    }

    @InputImport(name="type", required=true)
    private final String type;

    public String getType() {
        return this.type;
    }

    public BackendAddressPoolResponse(
        List<NetworkInterfaceIPConfigurationResponse> backendIPConfigurations,
        String etag,
        @Nullable String id,
        @Nullable List<LoadBalancerBackendAddressResponse> loadBalancerBackendAddresses,
        List<SubResourceResponse> loadBalancingRules,
        @Nullable String location,
        @Nullable String name,
        SubResourceResponse outboundRule,
        List<SubResourceResponse> outboundRules,
        String provisioningState,
        String type) {
        this.backendIPConfigurations = Objects.requireNonNull(backendIPConfigurations, "expected parameter 'backendIPConfigurations' to be non-null");
        this.etag = Objects.requireNonNull(etag, "expected parameter 'etag' to be non-null");
        this.id = id;
        this.loadBalancerBackendAddresses = loadBalancerBackendAddresses;
        this.loadBalancingRules = Objects.requireNonNull(loadBalancingRules, "expected parameter 'loadBalancingRules' to be non-null");
        this.location = location;
        this.name = name;
        this.outboundRule = Objects.requireNonNull(outboundRule, "expected parameter 'outboundRule' to be non-null");
        this.outboundRules = Objects.requireNonNull(outboundRules, "expected parameter 'outboundRules' to be non-null");
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private BackendAddressPoolResponse() {
        this.backendIPConfigurations = List.of();
        this.etag = null;
        this.id = null;
        this.loadBalancerBackendAddresses = List.of();
        this.loadBalancingRules = List.of();
        this.location = null;
        this.name = null;
        this.outboundRule = null;
        this.outboundRules = List.of();
        this.provisioningState = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendAddressPoolResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<NetworkInterfaceIPConfigurationResponse> backendIPConfigurations;
        private String etag;
        private @Nullable String id;
        private @Nullable List<LoadBalancerBackendAddressResponse> loadBalancerBackendAddresses;
        private List<SubResourceResponse> loadBalancingRules;
        private @Nullable String location;
        private @Nullable String name;
        private SubResourceResponse outboundRule;
        private List<SubResourceResponse> outboundRules;
        private String provisioningState;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(BackendAddressPoolResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendIPConfigurations = defaults.backendIPConfigurations;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.loadBalancerBackendAddresses = defaults.loadBalancerBackendAddresses;
    	      this.loadBalancingRules = defaults.loadBalancingRules;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.outboundRule = defaults.outboundRule;
    	      this.outboundRules = defaults.outboundRules;
    	      this.provisioningState = defaults.provisioningState;
    	      this.type = defaults.type;
        }

        public Builder setBackendIPConfigurations(List<NetworkInterfaceIPConfigurationResponse> backendIPConfigurations) {
            this.backendIPConfigurations = Objects.requireNonNull(backendIPConfigurations);
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setLoadBalancerBackendAddresses(@Nullable List<LoadBalancerBackendAddressResponse> loadBalancerBackendAddresses) {
            this.loadBalancerBackendAddresses = loadBalancerBackendAddresses;
            return this;
        }

        public Builder setLoadBalancingRules(List<SubResourceResponse> loadBalancingRules) {
            this.loadBalancingRules = Objects.requireNonNull(loadBalancingRules);
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setOutboundRule(SubResourceResponse outboundRule) {
            this.outboundRule = Objects.requireNonNull(outboundRule);
            return this;
        }

        public Builder setOutboundRules(List<SubResourceResponse> outboundRules) {
            this.outboundRules = Objects.requireNonNull(outboundRules);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public BackendAddressPoolResponse build() {
            return new BackendAddressPoolResponse(backendIPConfigurations, etag, id, loadBalancerBackendAddresses, loadBalancingRules, location, name, outboundRule, outboundRules, provisioningState, type);
        }
    }
}
