// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry.inputs;

import io.pulumi.azurenative.containerregistry.inputs.SecretObjectArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Describes the credentials that will be used to access a custom registry during a run.
 * 
 */
public final class CustomRegistryCredentialsArgs extends io.pulumi.resources.ResourceArgs {

    public static final CustomRegistryCredentialsArgs Empty = new CustomRegistryCredentialsArgs();

    /**
     * Indicates the managed identity assigned to the custom credential. If a user-assigned identity
     * this value is the Client ID. If a system-assigned identity, the value will be `system`. In
     * the case of a system-assigned identity, the Client ID will be determined by the runner. This
     * identity may be used to authenticate to key vault to retrieve credentials or it may be the only
     * source of authentication used for accessing the registry.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<String> identity;

    public Output<String> identity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * The password for logging into the custom registry. The password is a secret
     * object that allows multiple ways of providing the value for it.
     * 
     */
    @Import(name="password")
      private final @Nullable Output<SecretObjectArgs> password;

    public Output<SecretObjectArgs> password() {
        return this.password == null ? Codegen.empty() : this.password;
    }

    /**
     * The username for logging into the custom registry.
     * 
     */
    @Import(name="userName")
      private final @Nullable Output<SecretObjectArgs> userName;

    public Output<SecretObjectArgs> userName() {
        return this.userName == null ? Codegen.empty() : this.userName;
    }

    public CustomRegistryCredentialsArgs(
        @Nullable Output<String> identity,
        @Nullable Output<SecretObjectArgs> password,
        @Nullable Output<SecretObjectArgs> userName) {
        this.identity = identity;
        this.password = password;
        this.userName = userName;
    }

    private CustomRegistryCredentialsArgs() {
        this.identity = Codegen.empty();
        this.password = Codegen.empty();
        this.userName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomRegistryCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> identity;
        private @Nullable Output<SecretObjectArgs> password;
        private @Nullable Output<SecretObjectArgs> userName;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomRegistryCredentialsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
    	      this.password = defaults.password;
    	      this.userName = defaults.userName;
        }

        public Builder identity(@Nullable Output<String> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable String identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder password(@Nullable Output<SecretObjectArgs> password) {
            this.password = password;
            return this;
        }
        public Builder password(@Nullable SecretObjectArgs password) {
            this.password = Codegen.ofNullable(password);
            return this;
        }
        public Builder userName(@Nullable Output<SecretObjectArgs> userName) {
            this.userName = userName;
            return this;
        }
        public Builder userName(@Nullable SecretObjectArgs userName) {
            this.userName = Codegen.ofNullable(userName);
            return this;
        }        public CustomRegistryCredentialsArgs build() {
            return new CustomRegistryCredentialsArgs(identity, password, userName);
        }
    }
}
