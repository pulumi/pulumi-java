// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic.outputs;

import io.pulumi.azurenative.logic.outputs.ContentLinkResponse;
import io.pulumi.azurenative.logic.outputs.IntegrationAccountMapPropertiesResponseParametersSchema;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetIntegrationAccountMapResult {
    private final String changedTime;
    private final @Nullable String content;
    private final ContentLinkResponse contentLink;
    private final @Nullable String contentType;
    private final String createdTime;
    private final String id;
    private final @Nullable String location;
    private final String mapType;
    private final @Nullable Object metadata;
    private final String name;
    private final @Nullable IntegrationAccountMapPropertiesResponseParametersSchema parametersSchema;
    private final @Nullable Map<String,String> tags;
    private final String type;

    @OutputCustomType.Constructor({"changedTime","content","contentLink","contentType","createdTime","id","location","mapType","metadata","name","parametersSchema","tags","type"})
    private GetIntegrationAccountMapResult(
        String changedTime,
        @Nullable String content,
        ContentLinkResponse contentLink,
        @Nullable String contentType,
        String createdTime,
        String id,
        @Nullable String location,
        String mapType,
        @Nullable Object metadata,
        String name,
        @Nullable IntegrationAccountMapPropertiesResponseParametersSchema parametersSchema,
        @Nullable Map<String,String> tags,
        String type) {
        this.changedTime = Objects.requireNonNull(changedTime);
        this.content = content;
        this.contentLink = Objects.requireNonNull(contentLink);
        this.contentType = contentType;
        this.createdTime = Objects.requireNonNull(createdTime);
        this.id = Objects.requireNonNull(id);
        this.location = location;
        this.mapType = Objects.requireNonNull(mapType);
        this.metadata = metadata;
        this.name = Objects.requireNonNull(name);
        this.parametersSchema = parametersSchema;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    public String getChangedTime() {
        return this.changedTime;
    }
    public Optional<String> getContent() {
        return Optional.ofNullable(this.content);
    }
    public ContentLinkResponse getContentLink() {
        return this.contentLink;
    }
    public Optional<String> getContentType() {
        return Optional.ofNullable(this.contentType);
    }
    public String getCreatedTime() {
        return this.createdTime;
    }
    public String getId() {
        return this.id;
    }
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    public String getMapType() {
        return this.mapType;
    }
    public Optional<Object> getMetadata() {
        return Optional.ofNullable(this.metadata);
    }
    public String getName() {
        return this.name;
    }
    public Optional<IntegrationAccountMapPropertiesResponseParametersSchema> getParametersSchema() {
        return Optional.ofNullable(this.parametersSchema);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIntegrationAccountMapResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String changedTime;
        private @Nullable String content;
        private ContentLinkResponse contentLink;
        private @Nullable String contentType;
        private String createdTime;
        private String id;
        private @Nullable String location;
        private String mapType;
        private @Nullable Object metadata;
        private String name;
        private @Nullable IntegrationAccountMapPropertiesResponseParametersSchema parametersSchema;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIntegrationAccountMapResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.changedTime = defaults.changedTime;
    	      this.content = defaults.content;
    	      this.contentLink = defaults.contentLink;
    	      this.contentType = defaults.contentType;
    	      this.createdTime = defaults.createdTime;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.mapType = defaults.mapType;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.parametersSchema = defaults.parametersSchema;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setChangedTime(String changedTime) {
            this.changedTime = Objects.requireNonNull(changedTime);
            return this;
        }

        public Builder setContent(@Nullable String content) {
            this.content = content;
            return this;
        }

        public Builder setContentLink(ContentLinkResponse contentLink) {
            this.contentLink = Objects.requireNonNull(contentLink);
            return this;
        }

        public Builder setContentType(@Nullable String contentType) {
            this.contentType = contentType;
            return this;
        }

        public Builder setCreatedTime(String createdTime) {
            this.createdTime = Objects.requireNonNull(createdTime);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setMapType(String mapType) {
            this.mapType = Objects.requireNonNull(mapType);
            return this;
        }

        public Builder setMetadata(@Nullable Object metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setParametersSchema(@Nullable IntegrationAccountMapPropertiesResponseParametersSchema parametersSchema) {
            this.parametersSchema = parametersSchema;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetIntegrationAccountMapResult build() {
            return new GetIntegrationAccountMapResult(changedTime, content, contentLink, contentType, createdTime, id, location, mapType, metadata, name, parametersSchema, tags, type);
        }
    }
}
