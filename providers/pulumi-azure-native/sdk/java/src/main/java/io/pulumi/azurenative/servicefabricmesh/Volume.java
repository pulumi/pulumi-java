// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.servicefabricmesh.outputs.VolumeProviderParametersAzureFileResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This type describes a volume resource.
API Version: 2018-09-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### CreateOrUpdateVolume
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var volume = new AzureNative.ServiceFabricMesh.Volume("volume", new AzureNative.ServiceFabricMesh.VolumeArgs
        {
            AzureFileParameters = new AzureNative.ServiceFabricMesh.Inputs.VolumeProviderParametersAzureFileArgs
            {
                AccountKey = "provide-account-key-here",
                AccountName = "sbzdemoaccount",
                ShareName = "sharel",
            },
            Description = "Service Fabric Mesh sample volume.",
            Location = "EastUS",
            Provider = "SFAzureFile",
            ResourceGroupName = "sbz_demo",
            Tags = ,
            VolumeResourceName = "sampleVolume",
        });
    }

}

```

```go
package main

import (
	servicefabricmesh "github.com/pulumi/pulumi-azure-native/sdk/go/azure/servicefabricmesh"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := servicefabricmesh.NewVolume(ctx, "volume", &servicefabricmesh.VolumeArgs{
			AzureFileParameters: &servicefabricmesh.VolumeProviderParametersAzureFileArgs{
				AccountKey:  pulumi.String("provide-account-key-here"),
				AccountName: pulumi.String("sbzdemoaccount"),
				ShareName:   pulumi.String("sharel"),
			},
			Description:        pulumi.String("Service Fabric Mesh sample volume."),
			Location:           pulumi.String("EastUS"),
			Provider:           pulumi.String("SFAzureFile"),
			ResourceGroupName:  pulumi.String("sbz_demo"),
			Tags:               nil,
			VolumeResourceName: pulumi.String("sampleVolume"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const volume = new azure_native.servicefabricmesh.Volume("volume", {
    azureFileParameters: {
        accountKey: "provide-account-key-here",
        accountName: "sbzdemoaccount",
        shareName: "sharel",
    },
    description: "Service Fabric Mesh sample volume.",
    location: "EastUS",
    provider: "SFAzureFile",
    resourceGroupName: "sbz_demo",
    tags: {},
    volumeResourceName: "sampleVolume",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

volume = azure_native.servicefabricmesh.Volume("volume",
    azure_file_parameters=azure_native.servicefabricmesh.VolumeProviderParametersAzureFileArgs(
        account_key="provide-account-key-here",
        account_name="sbzdemoaccount",
        share_name="sharel",
    ),
    description="Service Fabric Mesh sample volume.",
    location="EastUS",
    provider="SFAzureFile",
    resource_group_name="sbz_demo",
    tags={},
    volume_resource_name="sampleVolume")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:servicefabricmesh:Volume sampleVolume /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/volumes/sampleVolume 
```

 */
@ResourceType(type="azure-native:servicefabricmesh:Volume")
public class Volume extends io.pulumi.resources.CustomResource {
    /**
     * This type describes a volume provided by an Azure Files file share.
     */
    @OutputExport(name="azureFileParameters", type=VolumeProviderParametersAzureFileResponse.class, parameters={})
    private Output</* @Nullable */ VolumeProviderParametersAzureFileResponse> azureFileParameters;

    /**
     * @return This type describes a volume provided by an Azure Files file share.
     */
    public Output</* @Nullable */ VolumeProviderParametersAzureFileResponse> getAzureFileParameters() {
        return this.azureFileParameters;
    }
    /**
     * User readable description of the volume.
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return User readable description of the volume.
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The geo-location where the resource lives
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The geo-location where the resource lives
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Provider of the volume.
     */
    @OutputExport(name="provider", type=String.class, parameters={})
    private Output<String> provider;

    /**
     * @return Provider of the volume.
     */
    public Output<String> getProvider() {
        return this.provider;
    }
    /**
     * State of the resource.
     */
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return State of the resource.
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Status of the volume.
     */
    @OutputExport(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Status of the volume.
     */
    public Output<String> getStatus() {
        return this.status;
    }
    /**
     * Gives additional information about the current status of the volume.
     */
    @OutputExport(name="statusDetails", type=String.class, parameters={})
    private Output<String> statusDetails;

    /**
     * @return Gives additional information about the current status of the volume.
     */
    public Output<String> getStatusDetails() {
        return this.statusDetails;
    }
    /**
     * Resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Volume(String name, VolumeArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicefabricmesh:Volume", name, args == null ? VolumeArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Volume(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicefabricmesh:Volume", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:servicefabricmesh/v20180701preview:Volume").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabricmesh/v20180901preview:Volume").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Volume get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Volume(name, id, options);
    }
}
