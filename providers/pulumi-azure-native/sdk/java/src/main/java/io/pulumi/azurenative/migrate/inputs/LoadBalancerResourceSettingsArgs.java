// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.migrate.inputs;

import io.pulumi.azurenative.migrate.inputs.LBBackendAddressPoolResourceSettingsArgs;
import io.pulumi.azurenative.migrate.inputs.LBFrontendIPConfigurationResourceSettingsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines the load balancer resource settings.
 * 
 */
public final class LoadBalancerResourceSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final LoadBalancerResourceSettingsArgs Empty = new LoadBalancerResourceSettingsArgs();

    /**
     * Gets or sets the backend address pools of the load balancer.
     * 
     */
    @Import(name="backendAddressPools")
      private final @Nullable Output<List<LBBackendAddressPoolResourceSettingsArgs>> backendAddressPools;

    public Output<List<LBBackendAddressPoolResourceSettingsArgs>> backendAddressPools() {
        return this.backendAddressPools == null ? Codegen.empty() : this.backendAddressPools;
    }

    /**
     * Gets or sets the frontend IP configurations of the load balancer.
     * 
     */
    @Import(name="frontendIPConfigurations")
      private final @Nullable Output<List<LBFrontendIPConfigurationResourceSettingsArgs>> frontendIPConfigurations;

    public Output<List<LBFrontendIPConfigurationResourceSettingsArgs>> frontendIPConfigurations() {
        return this.frontendIPConfigurations == null ? Codegen.empty() : this.frontendIPConfigurations;
    }

    /**
     * The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
     * Expected value is 'Microsoft.Network/loadBalancers'.
     * 
     */
    @Import(name="resourceType", required=true)
      private final Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * Gets or sets load balancer sku (Basic/Standard).
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<String> sku;

    public Output<String> sku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    /**
     * Gets or sets the target Resource name.
     * 
     */
    @Import(name="targetResourceName", required=true)
      private final Output<String> targetResourceName;

    public Output<String> targetResourceName() {
        return this.targetResourceName;
    }

    /**
     * Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
     *  precedence only if frontend IP configurations settings are not present.
     * 
     */
    @Import(name="zones")
      private final @Nullable Output<String> zones;

    public Output<String> zones() {
        return this.zones == null ? Codegen.empty() : this.zones;
    }

    public LoadBalancerResourceSettingsArgs(
        @Nullable Output<List<LBBackendAddressPoolResourceSettingsArgs>> backendAddressPools,
        @Nullable Output<List<LBFrontendIPConfigurationResourceSettingsArgs>> frontendIPConfigurations,
        Output<String> resourceType,
        @Nullable Output<String> sku,
        Output<String> targetResourceName,
        @Nullable Output<String> zones) {
        this.backendAddressPools = backendAddressPools;
        this.frontendIPConfigurations = frontendIPConfigurations;
        this.resourceType = Objects.requireNonNull(resourceType, "expected parameter 'resourceType' to be non-null");
        this.sku = sku;
        this.targetResourceName = Objects.requireNonNull(targetResourceName, "expected parameter 'targetResourceName' to be non-null");
        this.zones = zones;
    }

    private LoadBalancerResourceSettingsArgs() {
        this.backendAddressPools = Codegen.empty();
        this.frontendIPConfigurations = Codegen.empty();
        this.resourceType = Codegen.empty();
        this.sku = Codegen.empty();
        this.targetResourceName = Codegen.empty();
        this.zones = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadBalancerResourceSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<LBBackendAddressPoolResourceSettingsArgs>> backendAddressPools;
        private @Nullable Output<List<LBFrontendIPConfigurationResourceSettingsArgs>> frontendIPConfigurations;
        private Output<String> resourceType;
        private @Nullable Output<String> sku;
        private Output<String> targetResourceName;
        private @Nullable Output<String> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(LoadBalancerResourceSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendAddressPools = defaults.backendAddressPools;
    	      this.frontendIPConfigurations = defaults.frontendIPConfigurations;
    	      this.resourceType = defaults.resourceType;
    	      this.sku = defaults.sku;
    	      this.targetResourceName = defaults.targetResourceName;
    	      this.zones = defaults.zones;
        }

        public Builder backendAddressPools(@Nullable Output<List<LBBackendAddressPoolResourceSettingsArgs>> backendAddressPools) {
            this.backendAddressPools = backendAddressPools;
            return this;
        }
        public Builder backendAddressPools(@Nullable List<LBBackendAddressPoolResourceSettingsArgs> backendAddressPools) {
            this.backendAddressPools = Codegen.ofNullable(backendAddressPools);
            return this;
        }
        public Builder backendAddressPools(LBBackendAddressPoolResourceSettingsArgs... backendAddressPools) {
            return backendAddressPools(List.of(backendAddressPools));
        }
        public Builder frontendIPConfigurations(@Nullable Output<List<LBFrontendIPConfigurationResourceSettingsArgs>> frontendIPConfigurations) {
            this.frontendIPConfigurations = frontendIPConfigurations;
            return this;
        }
        public Builder frontendIPConfigurations(@Nullable List<LBFrontendIPConfigurationResourceSettingsArgs> frontendIPConfigurations) {
            this.frontendIPConfigurations = Codegen.ofNullable(frontendIPConfigurations);
            return this;
        }
        public Builder frontendIPConfigurations(LBFrontendIPConfigurationResourceSettingsArgs... frontendIPConfigurations) {
            return frontendIPConfigurations(List.of(frontendIPConfigurations));
        }
        public Builder resourceType(Output<String> resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }
        public Builder resourceType(String resourceType) {
            this.resourceType = Output.of(Objects.requireNonNull(resourceType));
            return this;
        }
        public Builder sku(@Nullable Output<String> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable String sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder targetResourceName(Output<String> targetResourceName) {
            this.targetResourceName = Objects.requireNonNull(targetResourceName);
            return this;
        }
        public Builder targetResourceName(String targetResourceName) {
            this.targetResourceName = Output.of(Objects.requireNonNull(targetResourceName));
            return this;
        }
        public Builder zones(@Nullable Output<String> zones) {
            this.zones = zones;
            return this;
        }
        public Builder zones(@Nullable String zones) {
            this.zones = Codegen.ofNullable(zones);
            return this;
        }        public LoadBalancerResourceSettingsArgs build() {
            return new LoadBalancerResourceSettingsArgs(backendAddressPools, frontendIPConfigurations, resourceType, sku, targetResourceName, zones);
        }
    }
}
