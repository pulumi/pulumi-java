// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.inputs;

import io.pulumi.azurenative.batch.enums.IPAddressProvisioningType;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The public IP Address configuration of the networking configuration of a Pool.
 * 
 */
public final class PublicIPAddressConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final PublicIPAddressConfigurationArgs Empty = new PublicIPAddressConfigurationArgs();

    /**
     * The number of IPs specified here limits the maximum size of the Pool - 100 dedicated nodes or 100 low-priority nodes can be allocated for each public IP. For example, a pool needing 250 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
     * 
     */
    @InputImport(name="ipAddressIds")
      private final @Nullable Input<List<String>> ipAddressIds;

    public Input<List<String>> getIpAddressIds() {
        return this.ipAddressIds == null ? Input.empty() : this.ipAddressIds;
    }

    /**
     * The default value is BatchManaged
     * 
     */
    @InputImport(name="provision")
      private final @Nullable Input<IPAddressProvisioningType> provision;

    public Input<IPAddressProvisioningType> getProvision() {
        return this.provision == null ? Input.empty() : this.provision;
    }

    public PublicIPAddressConfigurationArgs(
        @Nullable Input<List<String>> ipAddressIds,
        @Nullable Input<IPAddressProvisioningType> provision) {
        this.ipAddressIds = ipAddressIds;
        this.provision = provision;
    }

    private PublicIPAddressConfigurationArgs() {
        this.ipAddressIds = Input.empty();
        this.provision = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicIPAddressConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> ipAddressIds;
        private @Nullable Input<IPAddressProvisioningType> provision;

        public Builder() {
    	      // Empty
        }

        public Builder(PublicIPAddressConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipAddressIds = defaults.ipAddressIds;
    	      this.provision = defaults.provision;
        }

        public Builder ipAddressIds(@Nullable Input<List<String>> ipAddressIds) {
            this.ipAddressIds = ipAddressIds;
            return this;
        }

        public Builder ipAddressIds(@Nullable List<String> ipAddressIds) {
            this.ipAddressIds = Input.ofNullable(ipAddressIds);
            return this;
        }

        public Builder provision(@Nullable Input<IPAddressProvisioningType> provision) {
            this.provision = provision;
            return this;
        }

        public Builder provision(@Nullable IPAddressProvisioningType provision) {
            this.provision = Input.ofNullable(provision);
            return this;
        }
        public PublicIPAddressConfigurationArgs build() {
            return new PublicIPAddressConfigurationArgs(ipAddressIds, provision);
        }
    }
}
