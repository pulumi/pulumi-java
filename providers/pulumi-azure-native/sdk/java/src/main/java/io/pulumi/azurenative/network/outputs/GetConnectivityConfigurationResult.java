// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.ConnectivityGroupItemResponse;
import io.pulumi.azurenative.network.outputs.HubResponse;
import io.pulumi.azurenative.network.outputs.SystemDataResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetConnectivityConfigurationResult {
    /**
     * Groups for configuration
     * 
     */
    private final @Nullable List<ConnectivityGroupItemResponse> appliesToGroups;
    /**
     * Connectivity topology type.
     * 
     */
    private final String connectivityTopology;
    /**
     * Flag if need to remove current existing peerings.
     * 
     */
    private final @Nullable String deleteExistingPeering;
    /**
     * A description of the connectivity configuration.
     * 
     */
    private final @Nullable String description;
    /**
     * A friendly name for the resource.
     * 
     */
    private final @Nullable String displayName;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private final String etag;
    /**
     * List of hubItems
     * 
     */
    private final @Nullable List<HubResponse> hubs;
    /**
     * Resource ID.
     * 
     */
    private final String id;
    /**
     * Flag if global mesh is supported.
     * 
     */
    private final @Nullable String isGlobal;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * The provisioning state of the connectivity configuration resource.
     * 
     */
    private final String provisioningState;
    /**
     * The system metadata related to this resource.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * Resource type.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor
    private GetConnectivityConfigurationResult(
        @OutputCustomType.Parameter("appliesToGroups") @Nullable List<ConnectivityGroupItemResponse> appliesToGroups,
        @OutputCustomType.Parameter("connectivityTopology") String connectivityTopology,
        @OutputCustomType.Parameter("deleteExistingPeering") @Nullable String deleteExistingPeering,
        @OutputCustomType.Parameter("description") @Nullable String description,
        @OutputCustomType.Parameter("displayName") @Nullable String displayName,
        @OutputCustomType.Parameter("etag") String etag,
        @OutputCustomType.Parameter("hubs") @Nullable List<HubResponse> hubs,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("isGlobal") @Nullable String isGlobal,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("provisioningState") String provisioningState,
        @OutputCustomType.Parameter("systemData") SystemDataResponse systemData,
        @OutputCustomType.Parameter("type") String type) {
        this.appliesToGroups = appliesToGroups;
        this.connectivityTopology = connectivityTopology;
        this.deleteExistingPeering = deleteExistingPeering;
        this.description = description;
        this.displayName = displayName;
        this.etag = etag;
        this.hubs = hubs;
        this.id = id;
        this.isGlobal = isGlobal;
        this.name = name;
        this.provisioningState = provisioningState;
        this.systemData = systemData;
        this.type = type;
    }

    /**
     * Groups for configuration
     * 
    */
    public List<ConnectivityGroupItemResponse> getAppliesToGroups() {
        return this.appliesToGroups == null ? List.of() : this.appliesToGroups;
    }
    /**
     * Connectivity topology type.
     * 
    */
    public String getConnectivityTopology() {
        return this.connectivityTopology;
    }
    /**
     * Flag if need to remove current existing peerings.
     * 
    */
    public Optional<String> getDeleteExistingPeering() {
        return Optional.ofNullable(this.deleteExistingPeering);
    }
    /**
     * A description of the connectivity configuration.
     * 
    */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * A friendly name for the resource.
     * 
    */
    public Optional<String> getDisplayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
    */
    public String getEtag() {
        return this.etag;
    }
    /**
     * List of hubItems
     * 
    */
    public List<HubResponse> getHubs() {
        return this.hubs == null ? List.of() : this.hubs;
    }
    /**
     * Resource ID.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Flag if global mesh is supported.
     * 
    */
    public Optional<String> getIsGlobal() {
        return Optional.ofNullable(this.isGlobal);
    }
    /**
     * Resource name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The provisioning state of the connectivity configuration resource.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The system metadata related to this resource.
     * 
    */
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    /**
     * Resource type.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectivityConfigurationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<ConnectivityGroupItemResponse> appliesToGroups;
        private String connectivityTopology;
        private @Nullable String deleteExistingPeering;
        private @Nullable String description;
        private @Nullable String displayName;
        private String etag;
        private @Nullable List<HubResponse> hubs;
        private String id;
        private @Nullable String isGlobal;
        private String name;
        private String provisioningState;
        private SystemDataResponse systemData;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetConnectivityConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appliesToGroups = defaults.appliesToGroups;
    	      this.connectivityTopology = defaults.connectivityTopology;
    	      this.deleteExistingPeering = defaults.deleteExistingPeering;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.etag = defaults.etag;
    	      this.hubs = defaults.hubs;
    	      this.id = defaults.id;
    	      this.isGlobal = defaults.isGlobal;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        public Builder appliesToGroups(@Nullable List<ConnectivityGroupItemResponse> appliesToGroups) {
            this.appliesToGroups = appliesToGroups;
            return this;
        }

        public Builder connectivityTopology(String connectivityTopology) {
            this.connectivityTopology = Objects.requireNonNull(connectivityTopology);
            return this;
        }

        public Builder deleteExistingPeering(@Nullable String deleteExistingPeering) {
            this.deleteExistingPeering = deleteExistingPeering;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder hubs(@Nullable List<HubResponse> hubs) {
            this.hubs = hubs;
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder isGlobal(@Nullable String isGlobal) {
            this.isGlobal = isGlobal;
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetConnectivityConfigurationResult build() {
            return new GetConnectivityConfigurationResult(appliesToGroups, connectivityTopology, deleteExistingPeering, description, displayName, etag, hubs, id, isGlobal, name, provisioningState, systemData, type);
        }
    }
}
