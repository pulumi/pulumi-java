// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicebus.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SqlFilterArgs extends io.pulumi.resources.ResourceArgs {

    public static final SqlFilterArgs Empty = new SqlFilterArgs();

    @InputImport(name="compatibilityLevel")
    private final @Nullable Input<Integer> compatibilityLevel;

    public Input<Integer> getCompatibilityLevel() {
        return this.compatibilityLevel == null ? Input.empty() : this.compatibilityLevel;
    }

    @InputImport(name="requiresPreprocessing")
    private final @Nullable Input<Boolean> requiresPreprocessing;

    public Input<Boolean> getRequiresPreprocessing() {
        return this.requiresPreprocessing == null ? Input.empty() : this.requiresPreprocessing;
    }

    @InputImport(name="sqlExpression")
    private final @Nullable Input<String> sqlExpression;

    public Input<String> getSqlExpression() {
        return this.sqlExpression == null ? Input.empty() : this.sqlExpression;
    }

    public SqlFilterArgs(
        @Nullable Input<Integer> compatibilityLevel,
        @Nullable Input<Boolean> requiresPreprocessing,
        @Nullable Input<String> sqlExpression) {
        this.compatibilityLevel = compatibilityLevel == null ? Input.ofNullable(20) : compatibilityLevel;
        this.requiresPreprocessing = requiresPreprocessing == null ? Input.ofNullable(true) : requiresPreprocessing;
        this.sqlExpression = sqlExpression;
    }

    private SqlFilterArgs() {
        this.compatibilityLevel = Input.empty();
        this.requiresPreprocessing = Input.empty();
        this.sqlExpression = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> compatibilityLevel;
        private @Nullable Input<Boolean> requiresPreprocessing;
        private @Nullable Input<String> sqlExpression;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlFilterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compatibilityLevel = defaults.compatibilityLevel;
    	      this.requiresPreprocessing = defaults.requiresPreprocessing;
    	      this.sqlExpression = defaults.sqlExpression;
        }

        public Builder setCompatibilityLevel(@Nullable Input<Integer> compatibilityLevel) {
            this.compatibilityLevel = compatibilityLevel;
            return this;
        }

        public Builder setCompatibilityLevel(@Nullable Integer compatibilityLevel) {
            this.compatibilityLevel = Input.ofNullable(compatibilityLevel);
            return this;
        }

        public Builder setRequiresPreprocessing(@Nullable Input<Boolean> requiresPreprocessing) {
            this.requiresPreprocessing = requiresPreprocessing;
            return this;
        }

        public Builder setRequiresPreprocessing(@Nullable Boolean requiresPreprocessing) {
            this.requiresPreprocessing = Input.ofNullable(requiresPreprocessing);
            return this;
        }

        public Builder setSqlExpression(@Nullable Input<String> sqlExpression) {
            this.sqlExpression = sqlExpression;
            return this;
        }

        public Builder setSqlExpression(@Nullable String sqlExpression) {
            this.sqlExpression = Input.ofNullable(sqlExpression);
            return this;
        }

        public SqlFilterArgs build() {
            return new SqlFilterArgs(compatibilityLevel, requiresPreprocessing, sqlExpression);
        }
    }
}
