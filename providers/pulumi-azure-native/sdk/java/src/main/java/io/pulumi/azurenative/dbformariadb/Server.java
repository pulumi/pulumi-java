// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.dbformariadb;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.dbformariadb.outputs.ServerPrivateEndpointConnectionResponse;
import io.pulumi.azurenative.dbformariadb.outputs.SkuResponse;
import io.pulumi.azurenative.dbformariadb.outputs.StorageProfileResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Represents a server.
API Version: 2018-06-01.

{{% examples %}}
## Example Usage
{{% example %}}
### Create a database as a point in time restore
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var server = new AzureNative.DBforMariaDB.Server("server", new AzureNative.DBforMariaDB.ServerArgs
        {
            Location = "brazilsouth",
            Properties = new AzureNative.DBforMariaDB.Inputs.ServerPropertiesForRestoreArgs
            {
                CreateMode = "PointInTimeRestore",
                RestorePointInTime = "2017-12-14T00:00:37.467Z",
                SourceServerId = "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMariaDB/servers/sourceserver",
            },
            ResourceGroupName = "TargetResourceGroup",
            ServerName = "targetserver",
            Sku = new AzureNative.DBforMariaDB.Inputs.SkuArgs
            {
                Capacity = 2,
                Family = "Gen5",
                Name = "GP_Gen5_2",
                Tier = "GeneralPurpose",
            },
            Tags = 
            {
                { "ElasticServer", "1" },
            },
        });
    }

}

```

```go
package main

import (
	dbformariadb "github.com/pulumi/pulumi-azure-native/sdk/go/azure/dbformariadb"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := dbformariadb.NewServer(ctx, "server", &dbformariadb.ServerArgs{
			Location: pulumi.String("brazilsouth"),
			Properties: dbformariadb.ServerPropertiesForRestore{
				CreateMode:         "PointInTimeRestore",
				RestorePointInTime: "2017-12-14T00:00:37.467Z",
				SourceServerId:     "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMariaDB/servers/sourceserver",
			},
			ResourceGroupName: pulumi.String("TargetResourceGroup"),
			ServerName:        pulumi.String("targetserver"),
			Sku: &dbformariadb.SkuArgs{
				Capacity: pulumi.Int(2),
				Family:   pulumi.String("Gen5"),
				Name:     pulumi.String("GP_Gen5_2"),
				Tier:     pulumi.String("GeneralPurpose"),
			},
			Tags: pulumi.StringMap{
				"ElasticServer": pulumi.String("1"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const server = new azure_native.dbformariadb.Server("server", {
    location: "brazilsouth",
    properties: {
        createMode: "PointInTimeRestore",
        restorePointInTime: "2017-12-14T00:00:37.467Z",
        sourceServerId: "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMariaDB/servers/sourceserver",
    },
    resourceGroupName: "TargetResourceGroup",
    serverName: "targetserver",
    sku: {
        capacity: 2,
        family: "Gen5",
        name: "GP_Gen5_2",
        tier: "GeneralPurpose",
    },
    tags: {
        ElasticServer: "1",
    },
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

server = azure_native.dbformariadb.Server("server",
    location="brazilsouth",
    properties=azure_native.dbformariadb.ServerPropertiesForRestoreArgs(
        create_mode="PointInTimeRestore",
        restore_point_in_time="2017-12-14T00:00:37.467Z",
        source_server_id="/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMariaDB/servers/sourceserver",
    ),
    resource_group_name="TargetResourceGroup",
    server_name="targetserver",
    sku=azure_native.dbformariadb.SkuArgs(
        capacity=2,
        family="Gen5",
        name="GP_Gen5_2",
        tier="GeneralPurpose",
    ),
    tags={
        "ElasticServer": "1",
    })

```

{{% /example %}}
{{% example %}}
### Create a new server
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var server = new AzureNative.DBforMariaDB.Server("server", new AzureNative.DBforMariaDB.ServerArgs
        {
            Location = "westus",
            Properties = new AzureNative.DBforMariaDB.Inputs.ServerPropertiesForDefaultCreateArgs
            {
                AdministratorLogin = "cloudsa",
                AdministratorLoginPassword = "<administratorLoginPassword>",
                CreateMode = "Default",
                MinimalTlsVersion = "TLS1_2",
                SslEnforcement = "Enabled",
                StorageProfile = new AzureNative.DBforMariaDB.Inputs.StorageProfileArgs
                {
                    BackupRetentionDays = 7,
                    GeoRedundantBackup = "Enabled",
                    StorageMB = 128000,
                },
            },
            ResourceGroupName = "testrg",
            ServerName = "mariadbtestsvc4",
            Sku = new AzureNative.DBforMariaDB.Inputs.SkuArgs
            {
                Capacity = 2,
                Family = "Gen5",
                Name = "GP_Gen5_2",
                Tier = "GeneralPurpose",
            },
            Tags = 
            {
                { "ElasticServer", "1" },
            },
        });
    }

}

```

```go
package main

import (
	dbformariadb "github.com/pulumi/pulumi-azure-native/sdk/go/azure/dbformariadb"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := dbformariadb.NewServer(ctx, "server", &dbformariadb.ServerArgs{
			Location: pulumi.String("westus"),
			Properties: dbformariadb.ServerPropertiesForDefaultCreate{
				AdministratorLogin:         "cloudsa",
				AdministratorLoginPassword: "<administratorLoginPassword>",
				CreateMode:                 "Default",
				MinimalTlsVersion:          "TLS1_2",
				SslEnforcement:             "Enabled",
				StorageProfile: dbformariadb.StorageProfile{
					BackupRetentionDays: 7,
					GeoRedundantBackup:  "Enabled",
					StorageMB:           128000,
				},
			},
			ResourceGroupName: pulumi.String("testrg"),
			ServerName:        pulumi.String("mariadbtestsvc4"),
			Sku: &dbformariadb.SkuArgs{
				Capacity: pulumi.Int(2),
				Family:   pulumi.String("Gen5"),
				Name:     pulumi.String("GP_Gen5_2"),
				Tier:     pulumi.String("GeneralPurpose"),
			},
			Tags: pulumi.StringMap{
				"ElasticServer": pulumi.String("1"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const server = new azure_native.dbformariadb.Server("server", {
    location: "westus",
    properties: {
        administratorLogin: "cloudsa",
        administratorLoginPassword: "<administratorLoginPassword>",
        createMode: "Default",
        minimalTlsVersion: "TLS1_2",
        sslEnforcement: "Enabled",
        storageProfile: {
            backupRetentionDays: 7,
            geoRedundantBackup: "Enabled",
            storageMB: 128000,
        },
    },
    resourceGroupName: "testrg",
    serverName: "mariadbtestsvc4",
    sku: {
        capacity: 2,
        family: "Gen5",
        name: "GP_Gen5_2",
        tier: "GeneralPurpose",
    },
    tags: {
        ElasticServer: "1",
    },
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

server = azure_native.dbformariadb.Server("server",
    location="westus",
    properties=azure_native.dbformariadb.ServerPropertiesForDefaultCreateArgs(
        administrator_login="cloudsa",
        administrator_login_password="<administratorLoginPassword>",
        create_mode="Default",
        minimal_tls_version="TLS1_2",
        ssl_enforcement="Enabled",
        storage_profile=azure_native.dbformariadb.StorageProfileArgs(
            backup_retention_days=7,
            geo_redundant_backup="Enabled",
            storage_mb=128000,
        ),
    ),
    resource_group_name="testrg",
    server_name="mariadbtestsvc4",
    sku=azure_native.dbformariadb.SkuArgs(
        capacity=2,
        family="Gen5",
        name="GP_Gen5_2",
        tier="GeneralPurpose",
    ),
    tags={
        "ElasticServer": "1",
    })

```

{{% /example %}}
{{% example %}}
### Create a replica server
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var server = new AzureNative.DBforMariaDB.Server("server", new AzureNative.DBforMariaDB.ServerArgs
        {
            Location = "westus",
            Properties = new AzureNative.DBforMariaDB.Inputs.ServerPropertiesForReplicaArgs
            {
                CreateMode = "Replica",
                SourceServerId = "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/MasterResourceGroup/providers/Microsoft.DBforMariaDB/servers/masterserver",
            },
            ResourceGroupName = "TargetResourceGroup",
            ServerName = "targetserver",
        });
    }

}

```

```go
package main

import (
	dbformariadb "github.com/pulumi/pulumi-azure-native/sdk/go/azure/dbformariadb"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := dbformariadb.NewServer(ctx, "server", &dbformariadb.ServerArgs{
			Location: pulumi.String("westus"),
			Properties: dbformariadb.ServerPropertiesForReplica{
				CreateMode:     "Replica",
				SourceServerId: "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/MasterResourceGroup/providers/Microsoft.DBforMariaDB/servers/masterserver",
			},
			ResourceGroupName: pulumi.String("TargetResourceGroup"),
			ServerName:        pulumi.String("targetserver"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const server = new azure_native.dbformariadb.Server("server", {
    location: "westus",
    properties: {
        createMode: "Replica",
        sourceServerId: "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/MasterResourceGroup/providers/Microsoft.DBforMariaDB/servers/masterserver",
    },
    resourceGroupName: "TargetResourceGroup",
    serverName: "targetserver",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

server = azure_native.dbformariadb.Server("server",
    location="westus",
    properties=azure_native.dbformariadb.ServerPropertiesForReplicaArgs(
        create_mode="Replica",
        source_server_id="/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/MasterResourceGroup/providers/Microsoft.DBforMariaDB/servers/masterserver",
    ),
    resource_group_name="TargetResourceGroup",
    server_name="targetserver")

```

{{% /example %}}
{{% example %}}
### Create a server as a geo restore 
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var server = new AzureNative.DBforMariaDB.Server("server", new AzureNative.DBforMariaDB.ServerArgs
        {
            Location = "westus",
            Properties = new AzureNative.DBforMariaDB.Inputs.ServerPropertiesForGeoRestoreArgs
            {
                CreateMode = "GeoRestore",
                SourceServerId = "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMariaDB/servers/sourceserver",
            },
            ResourceGroupName = "TargetResourceGroup",
            ServerName = "targetserver",
            Sku = new AzureNative.DBforMariaDB.Inputs.SkuArgs
            {
                Capacity = 2,
                Family = "Gen5",
                Name = "GP_Gen5_2",
                Tier = "GeneralPurpose",
            },
            Tags = 
            {
                { "ElasticServer", "1" },
            },
        });
    }

}

```

```go
package main

import (
	dbformariadb "github.com/pulumi/pulumi-azure-native/sdk/go/azure/dbformariadb"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := dbformariadb.NewServer(ctx, "server", &dbformariadb.ServerArgs{
			Location: pulumi.String("westus"),
			Properties: dbformariadb.ServerPropertiesForGeoRestore{
				CreateMode:     "GeoRestore",
				SourceServerId: "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMariaDB/servers/sourceserver",
			},
			ResourceGroupName: pulumi.String("TargetResourceGroup"),
			ServerName:        pulumi.String("targetserver"),
			Sku: &dbformariadb.SkuArgs{
				Capacity: pulumi.Int(2),
				Family:   pulumi.String("Gen5"),
				Name:     pulumi.String("GP_Gen5_2"),
				Tier:     pulumi.String("GeneralPurpose"),
			},
			Tags: pulumi.StringMap{
				"ElasticServer": pulumi.String("1"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const server = new azure_native.dbformariadb.Server("server", {
    location: "westus",
    properties: {
        createMode: "GeoRestore",
        sourceServerId: "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMariaDB/servers/sourceserver",
    },
    resourceGroupName: "TargetResourceGroup",
    serverName: "targetserver",
    sku: {
        capacity: 2,
        family: "Gen5",
        name: "GP_Gen5_2",
        tier: "GeneralPurpose",
    },
    tags: {
        ElasticServer: "1",
    },
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

server = azure_native.dbformariadb.Server("server",
    location="westus",
    properties=azure_native.dbformariadb.ServerPropertiesForGeoRestoreArgs(
        create_mode="GeoRestore",
        source_server_id="/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMariaDB/servers/sourceserver",
    ),
    resource_group_name="TargetResourceGroup",
    server_name="targetserver",
    sku=azure_native.dbformariadb.SkuArgs(
        capacity=2,
        family="Gen5",
        name="GP_Gen5_2",
        tier="GeneralPurpose",
    ),
    tags={
        "ElasticServer": "1",
    })

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:dbformariadb:Server targetserver /subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforMariaDB/servers/targetserver 
```

 */
@ResourceType(type="azure-native:dbformariadb:Server")
public class Server extends io.pulumi.resources.CustomResource {
    /**
     * The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
     */
    @OutputExport(name="administratorLogin", type=String.class, parameters={})
    private Output</* @Nullable */ String> administratorLogin;

    /**
     * @return The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
     */
    public Output</* @Nullable */ String> getAdministratorLogin() {
        return this.administratorLogin;
    }
    /**
     * Earliest restore point creation time (ISO8601 format)
     */
    @OutputExport(name="earliestRestoreDate", type=String.class, parameters={})
    private Output</* @Nullable */ String> earliestRestoreDate;

    /**
     * @return Earliest restore point creation time (ISO8601 format)
     */
    public Output</* @Nullable */ String> getEarliestRestoreDate() {
        return this.earliestRestoreDate;
    }
    /**
     * The fully qualified domain name of a server.
     */
    @OutputExport(name="fullyQualifiedDomainName", type=String.class, parameters={})
    private Output</* @Nullable */ String> fullyQualifiedDomainName;

    /**
     * @return The fully qualified domain name of a server.
     */
    public Output</* @Nullable */ String> getFullyQualifiedDomainName() {
        return this.fullyQualifiedDomainName;
    }
    /**
     * The geo-location where the resource lives
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The geo-location where the resource lives
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * The master server id of a replica server.
     */
    @OutputExport(name="masterServerId", type=String.class, parameters={})
    private Output</* @Nullable */ String> masterServerId;

    /**
     * @return The master server id of a replica server.
     */
    public Output</* @Nullable */ String> getMasterServerId() {
        return this.masterServerId;
    }
    /**
     * Enforce a minimal Tls version for the server.
     */
    @OutputExport(name="minimalTlsVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> minimalTlsVersion;

    /**
     * @return Enforce a minimal Tls version for the server.
     */
    public Output</* @Nullable */ String> getMinimalTlsVersion() {
        return this.minimalTlsVersion;
    }
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * List of private endpoint connections on a server
     */
    @OutputExport(name="privateEndpointConnections", type=List.class, parameters={ServerPrivateEndpointConnectionResponse.class})
    private Output<List<ServerPrivateEndpointConnectionResponse>> privateEndpointConnections;

    /**
     * @return List of private endpoint connections on a server
     */
    public Output<List<ServerPrivateEndpointConnectionResponse>> getPrivateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
     */
    @OutputExport(name="publicNetworkAccess", type=String.class, parameters={})
    private Output</* @Nullable */ String> publicNetworkAccess;

    /**
     * @return Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
     */
    public Output</* @Nullable */ String> getPublicNetworkAccess() {
        return this.publicNetworkAccess;
    }
    /**
     * The maximum number of replicas that a master server can have.
     */
    @OutputExport(name="replicaCapacity", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> replicaCapacity;

    /**
     * @return The maximum number of replicas that a master server can have.
     */
    public Output</* @Nullable */ Integer> getReplicaCapacity() {
        return this.replicaCapacity;
    }
    /**
     * The replication role of the server.
     */
    @OutputExport(name="replicationRole", type=String.class, parameters={})
    private Output</* @Nullable */ String> replicationRole;

    /**
     * @return The replication role of the server.
     */
    public Output</* @Nullable */ String> getReplicationRole() {
        return this.replicationRole;
    }
    /**
     * The SKU (pricing tier) of the server.
     */
    @OutputExport(name="sku", type=SkuResponse.class, parameters={})
    private Output</* @Nullable */ SkuResponse> sku;

    /**
     * @return The SKU (pricing tier) of the server.
     */
    public Output</* @Nullable */ SkuResponse> getSku() {
        return this.sku;
    }
    /**
     * Enable ssl enforcement or not when connect to server.
     */
    @OutputExport(name="sslEnforcement", type=String.class, parameters={})
    private Output</* @Nullable */ String> sslEnforcement;

    /**
     * @return Enable ssl enforcement or not when connect to server.
     */
    public Output</* @Nullable */ String> getSslEnforcement() {
        return this.sslEnforcement;
    }
    /**
     * Storage profile of a server.
     */
    @OutputExport(name="storageProfile", type=StorageProfileResponse.class, parameters={})
    private Output</* @Nullable */ StorageProfileResponse> storageProfile;

    /**
     * @return Storage profile of a server.
     */
    public Output</* @Nullable */ StorageProfileResponse> getStorageProfile() {
        return this.storageProfile;
    }
    /**
     * Resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * A state of a server that is visible to user.
     */
    @OutputExport(name="userVisibleState", type=String.class, parameters={})
    private Output</* @Nullable */ String> userVisibleState;

    /**
     * @return A state of a server that is visible to user.
     */
    public Output</* @Nullable */ String> getUserVisibleState() {
        return this.userVisibleState;
    }
    /**
     * Server version.
     */
    @OutputExport(name="version", type=String.class, parameters={})
    private Output</* @Nullable */ String> version;

    /**
     * @return Server version.
     */
    public Output</* @Nullable */ String> getVersion() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Server(String name, ServerArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:dbformariadb:Server", name, args == null ? ServerArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Server(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:dbformariadb:Server", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:dbformariadb/v20180601:Server").build()),
                Input.of(Alias.builder().setType("azure-native:dbformariadb/v20180601preview:Server").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Server get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Server(name, id, options);
    }
}
