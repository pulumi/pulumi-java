// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.operationalinsights;

import io.pulumi.azurenative.operationalinsights.enums.PublicNetworkAccessType;
import io.pulumi.azurenative.operationalinsights.enums.WorkspaceEntityStatus;
import io.pulumi.azurenative.operationalinsights.inputs.WorkspaceCappingArgs;
import io.pulumi.azurenative.operationalinsights.inputs.WorkspaceFeaturesArgs;
import io.pulumi.azurenative.operationalinsights.inputs.WorkspaceSkuArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkspaceArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkspaceArgs Empty = new WorkspaceArgs();

    /**
     * The ETag of the workspace.
     * 
     */
    @InputImport(name="eTag")
    private final @Nullable Input<String> eTag;

    public Input<String> getETag() {
        return this.eTag == null ? Input.empty() : this.eTag;
    }

    /**
     * Workspace features.
     * 
     */
    @InputImport(name="features")
    private final @Nullable Input<WorkspaceFeaturesArgs> features;

    public Input<WorkspaceFeaturesArgs> getFeatures() {
        return this.features == null ? Input.empty() : this.features;
    }

    /**
     * Indicates whether customer managed storage is mandatory for query management.
     * 
     */
    @InputImport(name="forceCmkForQuery")
    private final @Nullable Input<Boolean> forceCmkForQuery;

    public Input<Boolean> getForceCmkForQuery() {
        return this.forceCmkForQuery == null ? Input.empty() : this.forceCmkForQuery;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The provisioning state of the workspace.
     * 
     */
    @InputImport(name="provisioningState")
    private final @Nullable Input<Either<String,WorkspaceEntityStatus>> provisioningState;

    public Input<Either<String,WorkspaceEntityStatus>> getProvisioningState() {
        return this.provisioningState == null ? Input.empty() : this.provisioningState;
    }

    /**
     * The network access type for accessing Log Analytics ingestion.
     * 
     */
    @InputImport(name="publicNetworkAccessForIngestion")
    private final @Nullable Input<Either<String,PublicNetworkAccessType>> publicNetworkAccessForIngestion;

    public Input<Either<String,PublicNetworkAccessType>> getPublicNetworkAccessForIngestion() {
        return this.publicNetworkAccessForIngestion == null ? Input.empty() : this.publicNetworkAccessForIngestion;
    }

    /**
     * The network access type for accessing Log Analytics query.
     * 
     */
    @InputImport(name="publicNetworkAccessForQuery")
    private final @Nullable Input<Either<String,PublicNetworkAccessType>> publicNetworkAccessForQuery;

    public Input<Either<String,PublicNetworkAccessType>> getPublicNetworkAccessForQuery() {
        return this.publicNetworkAccessForQuery == null ? Input.empty() : this.publicNetworkAccessForQuery;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.
     * 
     */
    @InputImport(name="retentionInDays")
    private final @Nullable Input<Integer> retentionInDays;

    public Input<Integer> getRetentionInDays() {
        return this.retentionInDays == null ? Input.empty() : this.retentionInDays;
    }

    /**
     * The SKU of the workspace.
     * 
     */
    @InputImport(name="sku")
    private final @Nullable Input<WorkspaceSkuArgs> sku;

    public Input<WorkspaceSkuArgs> getSku() {
        return this.sku == null ? Input.empty() : this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The daily volume cap for ingestion.
     * 
     */
    @InputImport(name="workspaceCapping")
    private final @Nullable Input<WorkspaceCappingArgs> workspaceCapping;

    public Input<WorkspaceCappingArgs> getWorkspaceCapping() {
        return this.workspaceCapping == null ? Input.empty() : this.workspaceCapping;
    }

    /**
     * The name of the workspace.
     * 
     */
    @InputImport(name="workspaceName")
    private final @Nullable Input<String> workspaceName;

    public Input<String> getWorkspaceName() {
        return this.workspaceName == null ? Input.empty() : this.workspaceName;
    }

    public WorkspaceArgs(
        @Nullable Input<String> eTag,
        @Nullable Input<WorkspaceFeaturesArgs> features,
        @Nullable Input<Boolean> forceCmkForQuery,
        @Nullable Input<String> location,
        @Nullable Input<Either<String,WorkspaceEntityStatus>> provisioningState,
        @Nullable Input<Either<String,PublicNetworkAccessType>> publicNetworkAccessForIngestion,
        @Nullable Input<Either<String,PublicNetworkAccessType>> publicNetworkAccessForQuery,
        Input<String> resourceGroupName,
        @Nullable Input<Integer> retentionInDays,
        @Nullable Input<WorkspaceSkuArgs> sku,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<WorkspaceCappingArgs> workspaceCapping,
        @Nullable Input<String> workspaceName) {
        this.eTag = eTag;
        this.features = features;
        this.forceCmkForQuery = forceCmkForQuery;
        this.location = location;
        this.provisioningState = provisioningState;
        this.publicNetworkAccessForIngestion = publicNetworkAccessForIngestion;
        this.publicNetworkAccessForQuery = publicNetworkAccessForQuery;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.retentionInDays = retentionInDays;
        this.sku = sku;
        this.tags = tags;
        this.workspaceCapping = workspaceCapping;
        this.workspaceName = workspaceName;
    }

    private WorkspaceArgs() {
        this.eTag = Input.empty();
        this.features = Input.empty();
        this.forceCmkForQuery = Input.empty();
        this.location = Input.empty();
        this.provisioningState = Input.empty();
        this.publicNetworkAccessForIngestion = Input.empty();
        this.publicNetworkAccessForQuery = Input.empty();
        this.resourceGroupName = Input.empty();
        this.retentionInDays = Input.empty();
        this.sku = Input.empty();
        this.tags = Input.empty();
        this.workspaceCapping = Input.empty();
        this.workspaceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> eTag;
        private @Nullable Input<WorkspaceFeaturesArgs> features;
        private @Nullable Input<Boolean> forceCmkForQuery;
        private @Nullable Input<String> location;
        private @Nullable Input<Either<String,WorkspaceEntityStatus>> provisioningState;
        private @Nullable Input<Either<String,PublicNetworkAccessType>> publicNetworkAccessForIngestion;
        private @Nullable Input<Either<String,PublicNetworkAccessType>> publicNetworkAccessForQuery;
        private Input<String> resourceGroupName;
        private @Nullable Input<Integer> retentionInDays;
        private @Nullable Input<WorkspaceSkuArgs> sku;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<WorkspaceCappingArgs> workspaceCapping;
        private @Nullable Input<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkspaceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eTag = defaults.eTag;
    	      this.features = defaults.features;
    	      this.forceCmkForQuery = defaults.forceCmkForQuery;
    	      this.location = defaults.location;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccessForIngestion = defaults.publicNetworkAccessForIngestion;
    	      this.publicNetworkAccessForQuery = defaults.publicNetworkAccessForQuery;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.retentionInDays = defaults.retentionInDays;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.workspaceCapping = defaults.workspaceCapping;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder setETag(@Nullable Input<String> eTag) {
            this.eTag = eTag;
            return this;
        }

        public Builder setETag(@Nullable String eTag) {
            this.eTag = Input.ofNullable(eTag);
            return this;
        }

        public Builder setFeatures(@Nullable Input<WorkspaceFeaturesArgs> features) {
            this.features = features;
            return this;
        }

        public Builder setFeatures(@Nullable WorkspaceFeaturesArgs features) {
            this.features = Input.ofNullable(features);
            return this;
        }

        public Builder setForceCmkForQuery(@Nullable Input<Boolean> forceCmkForQuery) {
            this.forceCmkForQuery = forceCmkForQuery;
            return this;
        }

        public Builder setForceCmkForQuery(@Nullable Boolean forceCmkForQuery) {
            this.forceCmkForQuery = Input.ofNullable(forceCmkForQuery);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setProvisioningState(@Nullable Input<Either<String,WorkspaceEntityStatus>> provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }

        public Builder setProvisioningState(@Nullable Either<String,WorkspaceEntityStatus> provisioningState) {
            this.provisioningState = Input.ofNullable(provisioningState);
            return this;
        }

        public Builder setPublicNetworkAccessForIngestion(@Nullable Input<Either<String,PublicNetworkAccessType>> publicNetworkAccessForIngestion) {
            this.publicNetworkAccessForIngestion = publicNetworkAccessForIngestion;
            return this;
        }

        public Builder setPublicNetworkAccessForIngestion(@Nullable Either<String,PublicNetworkAccessType> publicNetworkAccessForIngestion) {
            this.publicNetworkAccessForIngestion = Input.ofNullable(publicNetworkAccessForIngestion);
            return this;
        }

        public Builder setPublicNetworkAccessForQuery(@Nullable Input<Either<String,PublicNetworkAccessType>> publicNetworkAccessForQuery) {
            this.publicNetworkAccessForQuery = publicNetworkAccessForQuery;
            return this;
        }

        public Builder setPublicNetworkAccessForQuery(@Nullable Either<String,PublicNetworkAccessType> publicNetworkAccessForQuery) {
            this.publicNetworkAccessForQuery = Input.ofNullable(publicNetworkAccessForQuery);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRetentionInDays(@Nullable Input<Integer> retentionInDays) {
            this.retentionInDays = retentionInDays;
            return this;
        }

        public Builder setRetentionInDays(@Nullable Integer retentionInDays) {
            this.retentionInDays = Input.ofNullable(retentionInDays);
            return this;
        }

        public Builder setSku(@Nullable Input<WorkspaceSkuArgs> sku) {
            this.sku = sku;
            return this;
        }

        public Builder setSku(@Nullable WorkspaceSkuArgs sku) {
            this.sku = Input.ofNullable(sku);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setWorkspaceCapping(@Nullable Input<WorkspaceCappingArgs> workspaceCapping) {
            this.workspaceCapping = workspaceCapping;
            return this;
        }

        public Builder setWorkspaceCapping(@Nullable WorkspaceCappingArgs workspaceCapping) {
            this.workspaceCapping = Input.ofNullable(workspaceCapping);
            return this;
        }

        public Builder setWorkspaceName(@Nullable Input<String> workspaceName) {
            this.workspaceName = workspaceName;
            return this;
        }

        public Builder setWorkspaceName(@Nullable String workspaceName) {
            this.workspaceName = Input.ofNullable(workspaceName);
            return this;
        }

        public WorkspaceArgs build() {
            return new WorkspaceArgs(eTag, features, forceCmkForQuery, location, provisioningState, publicNetworkAccessForIngestion, publicNetworkAccessForQuery, resourceGroupName, retentionInDays, sku, tags, workspaceCapping, workspaceName);
        }
    }
}
