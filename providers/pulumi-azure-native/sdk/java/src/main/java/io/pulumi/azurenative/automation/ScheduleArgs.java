// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation;

import io.pulumi.azurenative.automation.enums.ScheduleFrequency;
import io.pulumi.azurenative.automation.inputs.AdvancedScheduleArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ScheduleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScheduleArgs Empty = new ScheduleArgs();

    /**
     * Gets or sets the AdvancedSchedule.
     * 
     */
    @InputImport(name="advancedSchedule")
      private final @Nullable Input<AdvancedScheduleArgs> advancedSchedule;

    public Input<AdvancedScheduleArgs> getAdvancedSchedule() {
        return this.advancedSchedule == null ? Input.empty() : this.advancedSchedule;
    }

    /**
     * The name of the automation account.
     * 
     */
    @InputImport(name="automationAccountName", required=true)
      private final Input<String> automationAccountName;

    public Input<String> getAutomationAccountName() {
        return this.automationAccountName;
    }

    /**
     * Gets or sets the description of the schedule.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Gets or sets the end time of the schedule.
     * 
     */
    @InputImport(name="expiryTime")
      private final @Nullable Input<String> expiryTime;

    public Input<String> getExpiryTime() {
        return this.expiryTime == null ? Input.empty() : this.expiryTime;
    }

    /**
     * Gets or sets the frequency of the schedule.
     * 
     */
    @InputImport(name="frequency", required=true)
      private final Input<Either<String,ScheduleFrequency>> frequency;

    public Input<Either<String,ScheduleFrequency>> getFrequency() {
        return this.frequency;
    }

    /**
     * Gets or sets the interval of the schedule.
     * 
     */
    @InputImport(name="interval")
      private final @Nullable Input<Object> interval;

    public Input<Object> getInterval() {
        return this.interval == null ? Input.empty() : this.interval;
    }

    /**
     * Gets or sets the name of the Schedule.
     * 
     */
    @InputImport(name="name", required=true)
      private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    /**
     * Name of an Azure Resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The schedule name.
     * 
     */
    @InputImport(name="scheduleName")
      private final @Nullable Input<String> scheduleName;

    public Input<String> getScheduleName() {
        return this.scheduleName == null ? Input.empty() : this.scheduleName;
    }

    /**
     * Gets or sets the start time of the schedule.
     * 
     */
    @InputImport(name="startTime", required=true)
      private final Input<String> startTime;

    public Input<String> getStartTime() {
        return this.startTime;
    }

    /**
     * Gets or sets the time zone of the schedule.
     * 
     */
    @InputImport(name="timeZone")
      private final @Nullable Input<String> timeZone;

    public Input<String> getTimeZone() {
        return this.timeZone == null ? Input.empty() : this.timeZone;
    }

    public ScheduleArgs(
        @Nullable Input<AdvancedScheduleArgs> advancedSchedule,
        Input<String> automationAccountName,
        @Nullable Input<String> description,
        @Nullable Input<String> expiryTime,
        Input<Either<String,ScheduleFrequency>> frequency,
        @Nullable Input<Object> interval,
        Input<String> name,
        Input<String> resourceGroupName,
        @Nullable Input<String> scheduleName,
        Input<String> startTime,
        @Nullable Input<String> timeZone) {
        this.advancedSchedule = advancedSchedule;
        this.automationAccountName = Objects.requireNonNull(automationAccountName, "expected parameter 'automationAccountName' to be non-null");
        this.description = description;
        this.expiryTime = expiryTime;
        this.frequency = Objects.requireNonNull(frequency, "expected parameter 'frequency' to be non-null");
        this.interval = interval;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.scheduleName = scheduleName;
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
        this.timeZone = timeZone;
    }

    private ScheduleArgs() {
        this.advancedSchedule = Input.empty();
        this.automationAccountName = Input.empty();
        this.description = Input.empty();
        this.expiryTime = Input.empty();
        this.frequency = Input.empty();
        this.interval = Input.empty();
        this.name = Input.empty();
        this.resourceGroupName = Input.empty();
        this.scheduleName = Input.empty();
        this.startTime = Input.empty();
        this.timeZone = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AdvancedScheduleArgs> advancedSchedule;
        private Input<String> automationAccountName;
        private @Nullable Input<String> description;
        private @Nullable Input<String> expiryTime;
        private Input<Either<String,ScheduleFrequency>> frequency;
        private @Nullable Input<Object> interval;
        private Input<String> name;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> scheduleName;
        private Input<String> startTime;
        private @Nullable Input<String> timeZone;

        public Builder() {
    	      // Empty
        }

        public Builder(ScheduleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedSchedule = defaults.advancedSchedule;
    	      this.automationAccountName = defaults.automationAccountName;
    	      this.description = defaults.description;
    	      this.expiryTime = defaults.expiryTime;
    	      this.frequency = defaults.frequency;
    	      this.interval = defaults.interval;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.scheduleName = defaults.scheduleName;
    	      this.startTime = defaults.startTime;
    	      this.timeZone = defaults.timeZone;
        }

        public Builder advancedSchedule(@Nullable Input<AdvancedScheduleArgs> advancedSchedule) {
            this.advancedSchedule = advancedSchedule;
            return this;
        }

        public Builder advancedSchedule(@Nullable AdvancedScheduleArgs advancedSchedule) {
            this.advancedSchedule = Input.ofNullable(advancedSchedule);
            return this;
        }

        public Builder automationAccountName(Input<String> automationAccountName) {
            this.automationAccountName = Objects.requireNonNull(automationAccountName);
            return this;
        }

        public Builder automationAccountName(String automationAccountName) {
            this.automationAccountName = Input.of(Objects.requireNonNull(automationAccountName));
            return this;
        }

        public Builder description(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder expiryTime(@Nullable Input<String> expiryTime) {
            this.expiryTime = expiryTime;
            return this;
        }

        public Builder expiryTime(@Nullable String expiryTime) {
            this.expiryTime = Input.ofNullable(expiryTime);
            return this;
        }

        public Builder frequency(Input<Either<String,ScheduleFrequency>> frequency) {
            this.frequency = Objects.requireNonNull(frequency);
            return this;
        }

        public Builder frequency(Either<String,ScheduleFrequency> frequency) {
            this.frequency = Input.of(Objects.requireNonNull(frequency));
            return this;
        }

        public Builder interval(@Nullable Input<Object> interval) {
            this.interval = interval;
            return this;
        }

        public Builder interval(@Nullable Object interval) {
            this.interval = Input.ofNullable(interval);
            return this;
        }

        public Builder name(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder name(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder resourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder scheduleName(@Nullable Input<String> scheduleName) {
            this.scheduleName = scheduleName;
            return this;
        }

        public Builder scheduleName(@Nullable String scheduleName) {
            this.scheduleName = Input.ofNullable(scheduleName);
            return this;
        }

        public Builder startTime(Input<String> startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }

        public Builder startTime(String startTime) {
            this.startTime = Input.of(Objects.requireNonNull(startTime));
            return this;
        }

        public Builder timeZone(@Nullable Input<String> timeZone) {
            this.timeZone = timeZone;
            return this;
        }

        public Builder timeZone(@Nullable String timeZone) {
            this.timeZone = Input.ofNullable(timeZone);
            return this;
        }
        public ScheduleArgs build() {
            return new ScheduleArgs(advancedSchedule, automationAccountName, description, expiryTime, frequency, interval, name, resourceGroupName, scheduleName, startTime, timeZone);
        }
    }
}
