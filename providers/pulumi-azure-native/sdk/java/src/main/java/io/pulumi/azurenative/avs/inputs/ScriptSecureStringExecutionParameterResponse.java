// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.avs.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * a plain text value execution parameter
 * 
 */
public final class ScriptSecureStringExecutionParameterResponse extends io.pulumi.resources.InvokeArgs {

    public static final ScriptSecureStringExecutionParameterResponse Empty = new ScriptSecureStringExecutionParameterResponse();

    /**
     * The parameter name
     * 
     */
    @InputImport(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * A secure value for the passed parameter, not to be stored in logs
     * 
     */
    @InputImport(name="secureValue")
      private final @Nullable String secureValue;

    public Optional<String> getSecureValue() {
        return this.secureValue == null ? Optional.empty() : Optional.ofNullable(this.secureValue);
    }

    /**
     * The type of execution parameter
     * Expected value is 'SecureValue'.
     * 
     */
    @InputImport(name="type", required=true)
      private final String type;

    public String getType() {
        return this.type;
    }

    public ScriptSecureStringExecutionParameterResponse(
        String name,
        @Nullable String secureValue,
        String type) {
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.secureValue = secureValue;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private ScriptSecureStringExecutionParameterResponse() {
        this.name = null;
        this.secureValue = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScriptSecureStringExecutionParameterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private @Nullable String secureValue;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ScriptSecureStringExecutionParameterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.secureValue = defaults.secureValue;
    	      this.type = defaults.type;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSecureValue(@Nullable String secureValue) {
            this.secureValue = secureValue;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ScriptSecureStringExecutionParameterResponse build() {
            return new ScriptSecureStringExecutionParameterResponse(name, secureValue, type);
        }
    }
}
