// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.botservice.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The parameters to provide for the Sms channel.
 * 
 */
public final class SmsChannelPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final SmsChannelPropertiesArgs Empty = new SmsChannelPropertiesArgs();

    /**
     * The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    @Import(name="accountSID", required=true)
      private final Output<String> accountSID;

    public Output<String> getAccountSID() {
        return this.accountSID;
    }

    /**
     * The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    @Import(name="authToken")
      private final @Nullable Output<String> authToken;

    public Output<String> getAuthToken() {
        return this.authToken == null ? Codegen.empty() : this.authToken;
    }

    /**
     * Whether this channel is enabled for the bot
     * 
     */
    @Import(name="isEnabled", required=true)
      private final Output<Boolean> isEnabled;

    public Output<Boolean> getIsEnabled() {
        return this.isEnabled;
    }

    /**
     * Whether this channel is validated for the bot
     * 
     */
    @Import(name="isValidated")
      private final @Nullable Output<Boolean> isValidated;

    public Output<Boolean> getIsValidated() {
        return this.isValidated == null ? Codegen.empty() : this.isValidated;
    }

    /**
     * The Sms phone
     * 
     */
    @Import(name="phone", required=true)
      private final Output<String> phone;

    public Output<String> getPhone() {
        return this.phone;
    }

    public SmsChannelPropertiesArgs(
        Output<String> accountSID,
        @Nullable Output<String> authToken,
        Output<Boolean> isEnabled,
        @Nullable Output<Boolean> isValidated,
        Output<String> phone) {
        this.accountSID = Objects.requireNonNull(accountSID, "expected parameter 'accountSID' to be non-null");
        this.authToken = authToken;
        this.isEnabled = Objects.requireNonNull(isEnabled, "expected parameter 'isEnabled' to be non-null");
        this.isValidated = isValidated;
        this.phone = Objects.requireNonNull(phone, "expected parameter 'phone' to be non-null");
    }

    private SmsChannelPropertiesArgs() {
        this.accountSID = Codegen.empty();
        this.authToken = Codegen.empty();
        this.isEnabled = Codegen.empty();
        this.isValidated = Codegen.empty();
        this.phone = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SmsChannelPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accountSID;
        private @Nullable Output<String> authToken;
        private Output<Boolean> isEnabled;
        private @Nullable Output<Boolean> isValidated;
        private Output<String> phone;

        public Builder() {
    	      // Empty
        }

        public Builder(SmsChannelPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountSID = defaults.accountSID;
    	      this.authToken = defaults.authToken;
    	      this.isEnabled = defaults.isEnabled;
    	      this.isValidated = defaults.isValidated;
    	      this.phone = defaults.phone;
        }

        public Builder accountSID(Output<String> accountSID) {
            this.accountSID = Objects.requireNonNull(accountSID);
            return this;
        }
        public Builder accountSID(String accountSID) {
            this.accountSID = Output.of(Objects.requireNonNull(accountSID));
            return this;
        }
        public Builder authToken(@Nullable Output<String> authToken) {
            this.authToken = authToken;
            return this;
        }
        public Builder authToken(@Nullable String authToken) {
            this.authToken = Codegen.ofNullable(authToken);
            return this;
        }
        public Builder isEnabled(Output<Boolean> isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Output.of(Objects.requireNonNull(isEnabled));
            return this;
        }
        public Builder isValidated(@Nullable Output<Boolean> isValidated) {
            this.isValidated = isValidated;
            return this;
        }
        public Builder isValidated(@Nullable Boolean isValidated) {
            this.isValidated = Codegen.ofNullable(isValidated);
            return this;
        }
        public Builder phone(Output<String> phone) {
            this.phone = Objects.requireNonNull(phone);
            return this;
        }
        public Builder phone(String phone) {
            this.phone = Output.of(Objects.requireNonNull(phone));
            return this;
        }        public SmsChannelPropertiesArgs build() {
            return new SmsChannelPropertiesArgs(accountSID, authToken, isEnabled, isValidated, phone);
        }
    }
}
