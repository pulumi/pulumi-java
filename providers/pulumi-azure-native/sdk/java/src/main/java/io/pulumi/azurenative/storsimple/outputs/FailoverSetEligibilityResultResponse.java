// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storsimple.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class FailoverSetEligibilityResultResponse {
    /**
     * The error message, if the failover set is not eligible for failover.
     * 
     */
    private final @Nullable String errorMessage;
    /**
     * Represents if this failover set is eligible for failover or not.
     * 
     */
    private final @Nullable Boolean isEligibleForFailover;

    @OutputCustomType.Constructor
    private FailoverSetEligibilityResultResponse(
        @OutputCustomType.Parameter("errorMessage") @Nullable String errorMessage,
        @OutputCustomType.Parameter("isEligibleForFailover") @Nullable Boolean isEligibleForFailover) {
        this.errorMessage = errorMessage;
        this.isEligibleForFailover = isEligibleForFailover;
    }

    /**
     * The error message, if the failover set is not eligible for failover.
     * 
    */
    public Optional<String> getErrorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }
    /**
     * Represents if this failover set is eligible for failover or not.
     * 
    */
    public Optional<Boolean> getIsEligibleForFailover() {
        return Optional.ofNullable(this.isEligibleForFailover);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FailoverSetEligibilityResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String errorMessage;
        private @Nullable Boolean isEligibleForFailover;

        public Builder() {
    	      // Empty
        }

        public Builder(FailoverSetEligibilityResultResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorMessage = defaults.errorMessage;
    	      this.isEligibleForFailover = defaults.isEligibleForFailover;
        }

        public Builder errorMessage(@Nullable String errorMessage) {
            this.errorMessage = errorMessage;
            return this;
        }

        public Builder isEligibleForFailover(@Nullable Boolean isEligibleForFailover) {
            this.isEligibleForFailover = isEligibleForFailover;
            return this;
        }
        public FailoverSetEligibilityResultResponse build() {
            return new FailoverSetEligibilityResultResponse(errorMessage, isEligibleForFailover);
        }
    }
}
