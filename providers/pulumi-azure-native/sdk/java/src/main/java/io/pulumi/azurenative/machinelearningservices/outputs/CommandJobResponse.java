// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.outputs;

import io.pulumi.azurenative.machinelearningservices.outputs.AmlTokenResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.ComputeConfigurationResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.InputDataBindingResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.JobEndpointResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.JobOutputResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.ManagedIdentityResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.MpiResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.OutputDataBindingResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.PyTorchResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.TensorFlowResponse;
import io.pulumi.core.Either;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class CommandJobResponse {
    private final @Nullable String codeId;
    private final String command;
    private final ComputeConfigurationResponse compute;
    private final @Nullable String description;
    private final @Nullable Object distribution;
    private final @Nullable String environmentId;
    private final @Nullable Map<String,String> environmentVariables;
    private final @Nullable String experimentName;
    private final @Nullable Either<AmlTokenResponse,ManagedIdentityResponse> identity;
    private final @Nullable Map<String,InputDataBindingResponse> inputDataBindings;
    private final Map<String,JobEndpointResponse> interactionEndpoints;
    private final String jobType;
    private final JobOutputResponse output;
    private final @Nullable Map<String,OutputDataBindingResponse> outputDataBindings;
    private final Object parameters;
    private final @Nullable Integer priority;
    private final @Nullable Map<String,String> properties;
    private final String provisioningState;
    private final String status;
    private final @Nullable Map<String,String> tags;
    private final @Nullable String timeout;

    @OutputCustomType.Constructor({"codeId","command","compute","description","distribution","environmentId","environmentVariables","experimentName","identity","inputDataBindings","interactionEndpoints","jobType","output","outputDataBindings","parameters","priority","properties","provisioningState","status","tags","timeout"})
    private CommandJobResponse(
        @Nullable String codeId,
        String command,
        ComputeConfigurationResponse compute,
        @Nullable String description,
        @Nullable Object distribution,
        @Nullable String environmentId,
        @Nullable Map<String,String> environmentVariables,
        @Nullable String experimentName,
        @Nullable Either<AmlTokenResponse,ManagedIdentityResponse> identity,
        @Nullable Map<String,InputDataBindingResponse> inputDataBindings,
        Map<String,JobEndpointResponse> interactionEndpoints,
        String jobType,
        JobOutputResponse output,
        @Nullable Map<String,OutputDataBindingResponse> outputDataBindings,
        Object parameters,
        @Nullable Integer priority,
        @Nullable Map<String,String> properties,
        String provisioningState,
        String status,
        @Nullable Map<String,String> tags,
        @Nullable String timeout) {
        this.codeId = codeId;
        this.command = Objects.requireNonNull(command);
        this.compute = Objects.requireNonNull(compute);
        this.description = description;
        this.distribution = distribution;
        this.environmentId = environmentId;
        this.environmentVariables = environmentVariables;
        this.experimentName = experimentName;
        this.identity = identity;
        this.inputDataBindings = inputDataBindings;
        this.interactionEndpoints = Objects.requireNonNull(interactionEndpoints);
        this.jobType = Objects.requireNonNull(jobType);
        this.output = Objects.requireNonNull(output);
        this.outputDataBindings = outputDataBindings;
        this.parameters = Objects.requireNonNull(parameters);
        this.priority = priority;
        this.properties = properties;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.status = Objects.requireNonNull(status);
        this.tags = tags;
        this.timeout = timeout;
    }

    public Optional<String> getCodeId() {
        return Optional.ofNullable(this.codeId);
    }
    public String getCommand() {
        return this.command;
    }
    public ComputeConfigurationResponse getCompute() {
        return this.compute;
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public Optional<Object> getDistribution() {
        return Optional.ofNullable(this.distribution);
    }
    public Optional<String> getEnvironmentId() {
        return Optional.ofNullable(this.environmentId);
    }
    public Map<String,String> getEnvironmentVariables() {
        return this.environmentVariables == null ? Map.of() : this.environmentVariables;
    }
    public Optional<String> getExperimentName() {
        return Optional.ofNullable(this.experimentName);
    }
    public Optional<Either<AmlTokenResponse,ManagedIdentityResponse>> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    public Map<String,InputDataBindingResponse> getInputDataBindings() {
        return this.inputDataBindings == null ? Map.of() : this.inputDataBindings;
    }
    public Map<String,JobEndpointResponse> getInteractionEndpoints() {
        return this.interactionEndpoints;
    }
    public String getJobType() {
        return this.jobType;
    }
    public JobOutputResponse getOutput() {
        return this.output;
    }
    public Map<String,OutputDataBindingResponse> getOutputDataBindings() {
        return this.outputDataBindings == null ? Map.of() : this.outputDataBindings;
    }
    public Object getParameters() {
        return this.parameters;
    }
    public Optional<Integer> getPriority() {
        return Optional.ofNullable(this.priority);
    }
    public Map<String,String> getProperties() {
        return this.properties == null ? Map.of() : this.properties;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public String getStatus() {
        return this.status;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> getTimeout() {
        return Optional.ofNullable(this.timeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CommandJobResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String codeId;
        private String command;
        private ComputeConfigurationResponse compute;
        private @Nullable String description;
        private @Nullable Object distribution;
        private @Nullable String environmentId;
        private @Nullable Map<String,String> environmentVariables;
        private @Nullable String experimentName;
        private @Nullable Either<AmlTokenResponse,ManagedIdentityResponse> identity;
        private @Nullable Map<String,InputDataBindingResponse> inputDataBindings;
        private Map<String,JobEndpointResponse> interactionEndpoints;
        private String jobType;
        private JobOutputResponse output;
        private @Nullable Map<String,OutputDataBindingResponse> outputDataBindings;
        private Object parameters;
        private @Nullable Integer priority;
        private @Nullable Map<String,String> properties;
        private String provisioningState;
        private String status;
        private @Nullable Map<String,String> tags;
        private @Nullable String timeout;

        public Builder() {
    	      // Empty
        }

        public Builder(CommandJobResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.codeId = defaults.codeId;
    	      this.command = defaults.command;
    	      this.compute = defaults.compute;
    	      this.description = defaults.description;
    	      this.distribution = defaults.distribution;
    	      this.environmentId = defaults.environmentId;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.experimentName = defaults.experimentName;
    	      this.identity = defaults.identity;
    	      this.inputDataBindings = defaults.inputDataBindings;
    	      this.interactionEndpoints = defaults.interactionEndpoints;
    	      this.jobType = defaults.jobType;
    	      this.output = defaults.output;
    	      this.outputDataBindings = defaults.outputDataBindings;
    	      this.parameters = defaults.parameters;
    	      this.priority = defaults.priority;
    	      this.properties = defaults.properties;
    	      this.provisioningState = defaults.provisioningState;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.timeout = defaults.timeout;
        }

        public Builder setCodeId(@Nullable String codeId) {
            this.codeId = codeId;
            return this;
        }

        public Builder setCommand(String command) {
            this.command = Objects.requireNonNull(command);
            return this;
        }

        public Builder setCompute(ComputeConfigurationResponse compute) {
            this.compute = Objects.requireNonNull(compute);
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setDistribution(@Nullable Object distribution) {
            this.distribution = distribution;
            return this;
        }

        public Builder setEnvironmentId(@Nullable String environmentId) {
            this.environmentId = environmentId;
            return this;
        }

        public Builder setEnvironmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }

        public Builder setExperimentName(@Nullable String experimentName) {
            this.experimentName = experimentName;
            return this;
        }

        public Builder setIdentity(@Nullable Either<AmlTokenResponse,ManagedIdentityResponse> identity) {
            this.identity = identity;
            return this;
        }

        public Builder setInputDataBindings(@Nullable Map<String,InputDataBindingResponse> inputDataBindings) {
            this.inputDataBindings = inputDataBindings;
            return this;
        }

        public Builder setInteractionEndpoints(Map<String,JobEndpointResponse> interactionEndpoints) {
            this.interactionEndpoints = Objects.requireNonNull(interactionEndpoints);
            return this;
        }

        public Builder setJobType(String jobType) {
            this.jobType = Objects.requireNonNull(jobType);
            return this;
        }

        public Builder setOutput(JobOutputResponse output) {
            this.output = Objects.requireNonNull(output);
            return this;
        }

        public Builder setOutputDataBindings(@Nullable Map<String,OutputDataBindingResponse> outputDataBindings) {
            this.outputDataBindings = outputDataBindings;
            return this;
        }

        public Builder setParameters(Object parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }

        public Builder setPriority(@Nullable Integer priority) {
            this.priority = priority;
            return this;
        }

        public Builder setProperties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTimeout(@Nullable String timeout) {
            this.timeout = timeout;
            return this;
        }

        public CommandJobResponse build() {
            return new CommandJobResponse(codeId, command, compute, description, distribution, environmentId, environmentVariables, experimentName, identity, inputDataBindings, interactionEndpoints, jobType, output, outputDataBindings, parameters, priority, properties, provisioningState, status, tags, timeout);
        }
    }
}
