// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.streamanalytics.outputs;

import io.pulumi.azurenative.streamanalytics.outputs.FunctionResponse;
import io.pulumi.azurenative.streamanalytics.outputs.InputResponse;
import io.pulumi.azurenative.streamanalytics.outputs.OutputResponse;
import io.pulumi.azurenative.streamanalytics.outputs.SkuResponse;
import io.pulumi.azurenative.streamanalytics.outputs.TransformationResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetStreamingJobResult {
    private final @Nullable String compatibilityLevel;
    private final String createdDate;
    private final @Nullable String dataLocale;
    private final String etag;
    private final @Nullable Integer eventsLateArrivalMaxDelayInSeconds;
    private final @Nullable Integer eventsOutOfOrderMaxDelayInSeconds;
    private final @Nullable String eventsOutOfOrderPolicy;
    private final @Nullable List<FunctionResponse> functions;
    private final String id;
    private final @Nullable List<InputResponse> inputs;
    private final String jobId;
    private final String jobState;
    private final String lastOutputEventTime;
    private final @Nullable String location;
    private final String name;
    private final @Nullable String outputErrorPolicy;
    private final @Nullable String outputStartMode;
    private final @Nullable String outputStartTime;
    private final @Nullable List<OutputResponse> outputs;
    private final String provisioningState;
    private final @Nullable SkuResponse sku;
    private final @Nullable Map<String,String> tags;
    private final @Nullable TransformationResponse transformation;
    private final String type;

    @OutputCustomType.Constructor({"compatibilityLevel","createdDate","dataLocale","etag","eventsLateArrivalMaxDelayInSeconds","eventsOutOfOrderMaxDelayInSeconds","eventsOutOfOrderPolicy","functions","id","inputs","jobId","jobState","lastOutputEventTime","location","name","outputErrorPolicy","outputStartMode","outputStartTime","outputs","provisioningState","sku","tags","transformation","type"})
    private GetStreamingJobResult(
        @Nullable String compatibilityLevel,
        String createdDate,
        @Nullable String dataLocale,
        String etag,
        @Nullable Integer eventsLateArrivalMaxDelayInSeconds,
        @Nullable Integer eventsOutOfOrderMaxDelayInSeconds,
        @Nullable String eventsOutOfOrderPolicy,
        @Nullable List<FunctionResponse> functions,
        String id,
        @Nullable List<InputResponse> inputs,
        String jobId,
        String jobState,
        String lastOutputEventTime,
        @Nullable String location,
        String name,
        @Nullable String outputErrorPolicy,
        @Nullable String outputStartMode,
        @Nullable String outputStartTime,
        @Nullable List<OutputResponse> outputs,
        String provisioningState,
        @Nullable SkuResponse sku,
        @Nullable Map<String,String> tags,
        @Nullable TransformationResponse transformation,
        String type) {
        this.compatibilityLevel = compatibilityLevel;
        this.createdDate = Objects.requireNonNull(createdDate);
        this.dataLocale = dataLocale;
        this.etag = Objects.requireNonNull(etag);
        this.eventsLateArrivalMaxDelayInSeconds = eventsLateArrivalMaxDelayInSeconds;
        this.eventsOutOfOrderMaxDelayInSeconds = eventsOutOfOrderMaxDelayInSeconds;
        this.eventsOutOfOrderPolicy = eventsOutOfOrderPolicy;
        this.functions = functions;
        this.id = Objects.requireNonNull(id);
        this.inputs = inputs;
        this.jobId = Objects.requireNonNull(jobId);
        this.jobState = Objects.requireNonNull(jobState);
        this.lastOutputEventTime = Objects.requireNonNull(lastOutputEventTime);
        this.location = location;
        this.name = Objects.requireNonNull(name);
        this.outputErrorPolicy = outputErrorPolicy;
        this.outputStartMode = outputStartMode;
        this.outputStartTime = outputStartTime;
        this.outputs = outputs;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.sku = sku;
        this.tags = tags;
        this.transformation = transformation;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getCompatibilityLevel() {
        return Optional.ofNullable(this.compatibilityLevel);
    }
    public String getCreatedDate() {
        return this.createdDate;
    }
    public Optional<String> getDataLocale() {
        return Optional.ofNullable(this.dataLocale);
    }
    public String getEtag() {
        return this.etag;
    }
    public Optional<Integer> getEventsLateArrivalMaxDelayInSeconds() {
        return Optional.ofNullable(this.eventsLateArrivalMaxDelayInSeconds);
    }
    public Optional<Integer> getEventsOutOfOrderMaxDelayInSeconds() {
        return Optional.ofNullable(this.eventsOutOfOrderMaxDelayInSeconds);
    }
    public Optional<String> getEventsOutOfOrderPolicy() {
        return Optional.ofNullable(this.eventsOutOfOrderPolicy);
    }
    public List<FunctionResponse> getFunctions() {
        return this.functions == null ? List.of() : this.functions;
    }
    public String getId() {
        return this.id;
    }
    public List<InputResponse> getInputs() {
        return this.inputs == null ? List.of() : this.inputs;
    }
    public String getJobId() {
        return this.jobId;
    }
    public String getJobState() {
        return this.jobState;
    }
    public String getLastOutputEventTime() {
        return this.lastOutputEventTime;
    }
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getOutputErrorPolicy() {
        return Optional.ofNullable(this.outputErrorPolicy);
    }
    public Optional<String> getOutputStartMode() {
        return Optional.ofNullable(this.outputStartMode);
    }
    public Optional<String> getOutputStartTime() {
        return Optional.ofNullable(this.outputStartTime);
    }
    public List<OutputResponse> getOutputs() {
        return this.outputs == null ? List.of() : this.outputs;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<SkuResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<TransformationResponse> getTransformation() {
        return Optional.ofNullable(this.transformation);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamingJobResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String compatibilityLevel;
        private String createdDate;
        private @Nullable String dataLocale;
        private String etag;
        private @Nullable Integer eventsLateArrivalMaxDelayInSeconds;
        private @Nullable Integer eventsOutOfOrderMaxDelayInSeconds;
        private @Nullable String eventsOutOfOrderPolicy;
        private @Nullable List<FunctionResponse> functions;
        private String id;
        private @Nullable List<InputResponse> inputs;
        private String jobId;
        private String jobState;
        private String lastOutputEventTime;
        private @Nullable String location;
        private String name;
        private @Nullable String outputErrorPolicy;
        private @Nullable String outputStartMode;
        private @Nullable String outputStartTime;
        private @Nullable List<OutputResponse> outputs;
        private String provisioningState;
        private @Nullable SkuResponse sku;
        private @Nullable Map<String,String> tags;
        private @Nullable TransformationResponse transformation;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStreamingJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compatibilityLevel = defaults.compatibilityLevel;
    	      this.createdDate = defaults.createdDate;
    	      this.dataLocale = defaults.dataLocale;
    	      this.etag = defaults.etag;
    	      this.eventsLateArrivalMaxDelayInSeconds = defaults.eventsLateArrivalMaxDelayInSeconds;
    	      this.eventsOutOfOrderMaxDelayInSeconds = defaults.eventsOutOfOrderMaxDelayInSeconds;
    	      this.eventsOutOfOrderPolicy = defaults.eventsOutOfOrderPolicy;
    	      this.functions = defaults.functions;
    	      this.id = defaults.id;
    	      this.inputs = defaults.inputs;
    	      this.jobId = defaults.jobId;
    	      this.jobState = defaults.jobState;
    	      this.lastOutputEventTime = defaults.lastOutputEventTime;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.outputErrorPolicy = defaults.outputErrorPolicy;
    	      this.outputStartMode = defaults.outputStartMode;
    	      this.outputStartTime = defaults.outputStartTime;
    	      this.outputs = defaults.outputs;
    	      this.provisioningState = defaults.provisioningState;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.transformation = defaults.transformation;
    	      this.type = defaults.type;
        }

        public Builder setCompatibilityLevel(@Nullable String compatibilityLevel) {
            this.compatibilityLevel = compatibilityLevel;
            return this;
        }

        public Builder setCreatedDate(String createdDate) {
            this.createdDate = Objects.requireNonNull(createdDate);
            return this;
        }

        public Builder setDataLocale(@Nullable String dataLocale) {
            this.dataLocale = dataLocale;
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setEventsLateArrivalMaxDelayInSeconds(@Nullable Integer eventsLateArrivalMaxDelayInSeconds) {
            this.eventsLateArrivalMaxDelayInSeconds = eventsLateArrivalMaxDelayInSeconds;
            return this;
        }

        public Builder setEventsOutOfOrderMaxDelayInSeconds(@Nullable Integer eventsOutOfOrderMaxDelayInSeconds) {
            this.eventsOutOfOrderMaxDelayInSeconds = eventsOutOfOrderMaxDelayInSeconds;
            return this;
        }

        public Builder setEventsOutOfOrderPolicy(@Nullable String eventsOutOfOrderPolicy) {
            this.eventsOutOfOrderPolicy = eventsOutOfOrderPolicy;
            return this;
        }

        public Builder setFunctions(@Nullable List<FunctionResponse> functions) {
            this.functions = functions;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInputs(@Nullable List<InputResponse> inputs) {
            this.inputs = inputs;
            return this;
        }

        public Builder setJobId(String jobId) {
            this.jobId = Objects.requireNonNull(jobId);
            return this;
        }

        public Builder setJobState(String jobState) {
            this.jobState = Objects.requireNonNull(jobState);
            return this;
        }

        public Builder setLastOutputEventTime(String lastOutputEventTime) {
            this.lastOutputEventTime = Objects.requireNonNull(lastOutputEventTime);
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOutputErrorPolicy(@Nullable String outputErrorPolicy) {
            this.outputErrorPolicy = outputErrorPolicy;
            return this;
        }

        public Builder setOutputStartMode(@Nullable String outputStartMode) {
            this.outputStartMode = outputStartMode;
            return this;
        }

        public Builder setOutputStartTime(@Nullable String outputStartTime) {
            this.outputStartTime = outputStartTime;
            return this;
        }

        public Builder setOutputs(@Nullable List<OutputResponse> outputs) {
            this.outputs = outputs;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setSku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTransformation(@Nullable TransformationResponse transformation) {
            this.transformation = transformation;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetStreamingJobResult build() {
            return new GetStreamingJobResult(compatibilityLevel, createdDate, dataLocale, etag, eventsLateArrivalMaxDelayInSeconds, eventsOutOfOrderMaxDelayInSeconds, eventsOutOfOrderPolicy, functions, id, inputs, jobId, jobState, lastOutputEventTime, location, name, outputErrorPolicy, outputStartMode, outputStartTime, outputs, provisioningState, sku, tags, transformation, type);
        }
    }
}
