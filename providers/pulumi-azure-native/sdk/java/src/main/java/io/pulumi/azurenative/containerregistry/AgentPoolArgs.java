// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry;

import io.pulumi.azurenative.containerregistry.enums.OS;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AgentPoolArgs extends io.pulumi.resources.ResourceArgs {

    public static final AgentPoolArgs Empty = new AgentPoolArgs();

    @InputImport(name="agentPoolName")
    private final @Nullable Input<String> agentPoolName;

    public Input<String> getAgentPoolName() {
        return this.agentPoolName == null ? Input.empty() : this.agentPoolName;
    }

    @InputImport(name="count")
    private final @Nullable Input<Integer> count;

    public Input<Integer> getCount() {
        return this.count == null ? Input.empty() : this.count;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="os")
    private final @Nullable Input<Either<String,OS>> os;

    public Input<Either<String,OS>> getOs() {
        return this.os == null ? Input.empty() : this.os;
    }

    @InputImport(name="registryName", required=true)
    private final Input<String> registryName;

    public Input<String> getRegistryName() {
        return this.registryName;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="tier")
    private final @Nullable Input<String> tier;

    public Input<String> getTier() {
        return this.tier == null ? Input.empty() : this.tier;
    }

    @InputImport(name="virtualNetworkSubnetResourceId")
    private final @Nullable Input<String> virtualNetworkSubnetResourceId;

    public Input<String> getVirtualNetworkSubnetResourceId() {
        return this.virtualNetworkSubnetResourceId == null ? Input.empty() : this.virtualNetworkSubnetResourceId;
    }

    public AgentPoolArgs(
        @Nullable Input<String> agentPoolName,
        @Nullable Input<Integer> count,
        @Nullable Input<String> location,
        @Nullable Input<Either<String,OS>> os,
        Input<String> registryName,
        Input<String> resourceGroupName,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<String> tier,
        @Nullable Input<String> virtualNetworkSubnetResourceId) {
        this.agentPoolName = agentPoolName;
        this.count = count;
        this.location = location;
        this.os = os;
        this.registryName = Objects.requireNonNull(registryName, "expected parameter 'registryName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.tier = tier;
        this.virtualNetworkSubnetResourceId = virtualNetworkSubnetResourceId;
    }

    private AgentPoolArgs() {
        this.agentPoolName = Input.empty();
        this.count = Input.empty();
        this.location = Input.empty();
        this.os = Input.empty();
        this.registryName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.tags = Input.empty();
        this.tier = Input.empty();
        this.virtualNetworkSubnetResourceId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> agentPoolName;
        private @Nullable Input<Integer> count;
        private @Nullable Input<String> location;
        private @Nullable Input<Either<String,OS>> os;
        private Input<String> registryName;
        private Input<String> resourceGroupName;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<String> tier;
        private @Nullable Input<String> virtualNetworkSubnetResourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(AgentPoolArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentPoolName = defaults.agentPoolName;
    	      this.count = defaults.count;
    	      this.location = defaults.location;
    	      this.os = defaults.os;
    	      this.registryName = defaults.registryName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.tier = defaults.tier;
    	      this.virtualNetworkSubnetResourceId = defaults.virtualNetworkSubnetResourceId;
        }

        public Builder setAgentPoolName(@Nullable Input<String> agentPoolName) {
            this.agentPoolName = agentPoolName;
            return this;
        }

        public Builder setAgentPoolName(@Nullable String agentPoolName) {
            this.agentPoolName = Input.ofNullable(agentPoolName);
            return this;
        }

        public Builder setCount(@Nullable Input<Integer> count) {
            this.count = count;
            return this;
        }

        public Builder setCount(@Nullable Integer count) {
            this.count = Input.ofNullable(count);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setOs(@Nullable Input<Either<String,OS>> os) {
            this.os = os;
            return this;
        }

        public Builder setOs(@Nullable Either<String,OS> os) {
            this.os = Input.ofNullable(os);
            return this;
        }

        public Builder setRegistryName(Input<String> registryName) {
            this.registryName = Objects.requireNonNull(registryName);
            return this;
        }

        public Builder setRegistryName(String registryName) {
            this.registryName = Input.of(Objects.requireNonNull(registryName));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTier(@Nullable Input<String> tier) {
            this.tier = tier;
            return this;
        }

        public Builder setTier(@Nullable String tier) {
            this.tier = Input.ofNullable(tier);
            return this;
        }

        public Builder setVirtualNetworkSubnetResourceId(@Nullable Input<String> virtualNetworkSubnetResourceId) {
            this.virtualNetworkSubnetResourceId = virtualNetworkSubnetResourceId;
            return this;
        }

        public Builder setVirtualNetworkSubnetResourceId(@Nullable String virtualNetworkSubnetResourceId) {
            this.virtualNetworkSubnetResourceId = Input.ofNullable(virtualNetworkSubnetResourceId);
            return this;
        }

        public AgentPoolArgs build() {
            return new AgentPoolArgs(agentPoolName, count, location, os, registryName, resourceGroupName, tags, tier, virtualNetworkSubnetResourceId);
        }
    }
}
