// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.azurenative.compute.inputs.CloudServiceVaultAndSecretReferenceArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CloudServiceExtensionPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final CloudServiceExtensionPropertiesArgs Empty = new CloudServiceExtensionPropertiesArgs();

    @InputImport(name="autoUpgradeMinorVersion")
    private final @Nullable Input<Boolean> autoUpgradeMinorVersion;

    public Input<Boolean> getAutoUpgradeMinorVersion() {
        return this.autoUpgradeMinorVersion == null ? Input.empty() : this.autoUpgradeMinorVersion;
    }

    @InputImport(name="forceUpdateTag")
    private final @Nullable Input<String> forceUpdateTag;

    public Input<String> getForceUpdateTag() {
        return this.forceUpdateTag == null ? Input.empty() : this.forceUpdateTag;
    }

    @InputImport(name="protectedSettings")
    private final @Nullable Input<String> protectedSettings;

    public Input<String> getProtectedSettings() {
        return this.protectedSettings == null ? Input.empty() : this.protectedSettings;
    }

    @InputImport(name="protectedSettingsFromKeyVault")
    private final @Nullable Input<CloudServiceVaultAndSecretReferenceArgs> protectedSettingsFromKeyVault;

    public Input<CloudServiceVaultAndSecretReferenceArgs> getProtectedSettingsFromKeyVault() {
        return this.protectedSettingsFromKeyVault == null ? Input.empty() : this.protectedSettingsFromKeyVault;
    }

    @InputImport(name="publisher")
    private final @Nullable Input<String> publisher;

    public Input<String> getPublisher() {
        return this.publisher == null ? Input.empty() : this.publisher;
    }

    @InputImport(name="rolesAppliedTo")
    private final @Nullable Input<List<String>> rolesAppliedTo;

    public Input<List<String>> getRolesAppliedTo() {
        return this.rolesAppliedTo == null ? Input.empty() : this.rolesAppliedTo;
    }

    @InputImport(name="settings")
    private final @Nullable Input<String> settings;

    public Input<String> getSettings() {
        return this.settings == null ? Input.empty() : this.settings;
    }

    @InputImport(name="type")
    private final @Nullable Input<String> type;

    public Input<String> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    @InputImport(name="typeHandlerVersion")
    private final @Nullable Input<String> typeHandlerVersion;

    public Input<String> getTypeHandlerVersion() {
        return this.typeHandlerVersion == null ? Input.empty() : this.typeHandlerVersion;
    }

    public CloudServiceExtensionPropertiesArgs(
        @Nullable Input<Boolean> autoUpgradeMinorVersion,
        @Nullable Input<String> forceUpdateTag,
        @Nullable Input<String> protectedSettings,
        @Nullable Input<CloudServiceVaultAndSecretReferenceArgs> protectedSettingsFromKeyVault,
        @Nullable Input<String> publisher,
        @Nullable Input<List<String>> rolesAppliedTo,
        @Nullable Input<String> settings,
        @Nullable Input<String> type,
        @Nullable Input<String> typeHandlerVersion) {
        this.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
        this.forceUpdateTag = forceUpdateTag;
        this.protectedSettings = protectedSettings;
        this.protectedSettingsFromKeyVault = protectedSettingsFromKeyVault;
        this.publisher = publisher;
        this.rolesAppliedTo = rolesAppliedTo;
        this.settings = settings;
        this.type = type;
        this.typeHandlerVersion = typeHandlerVersion;
    }

    private CloudServiceExtensionPropertiesArgs() {
        this.autoUpgradeMinorVersion = Input.empty();
        this.forceUpdateTag = Input.empty();
        this.protectedSettings = Input.empty();
        this.protectedSettingsFromKeyVault = Input.empty();
        this.publisher = Input.empty();
        this.rolesAppliedTo = Input.empty();
        this.settings = Input.empty();
        this.type = Input.empty();
        this.typeHandlerVersion = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudServiceExtensionPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> autoUpgradeMinorVersion;
        private @Nullable Input<String> forceUpdateTag;
        private @Nullable Input<String> protectedSettings;
        private @Nullable Input<CloudServiceVaultAndSecretReferenceArgs> protectedSettingsFromKeyVault;
        private @Nullable Input<String> publisher;
        private @Nullable Input<List<String>> rolesAppliedTo;
        private @Nullable Input<String> settings;
        private @Nullable Input<String> type;
        private @Nullable Input<String> typeHandlerVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudServiceExtensionPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoUpgradeMinorVersion = defaults.autoUpgradeMinorVersion;
    	      this.forceUpdateTag = defaults.forceUpdateTag;
    	      this.protectedSettings = defaults.protectedSettings;
    	      this.protectedSettingsFromKeyVault = defaults.protectedSettingsFromKeyVault;
    	      this.publisher = defaults.publisher;
    	      this.rolesAppliedTo = defaults.rolesAppliedTo;
    	      this.settings = defaults.settings;
    	      this.type = defaults.type;
    	      this.typeHandlerVersion = defaults.typeHandlerVersion;
        }

        public Builder setAutoUpgradeMinorVersion(@Nullable Input<Boolean> autoUpgradeMinorVersion) {
            this.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
            return this;
        }

        public Builder setAutoUpgradeMinorVersion(@Nullable Boolean autoUpgradeMinorVersion) {
            this.autoUpgradeMinorVersion = Input.ofNullable(autoUpgradeMinorVersion);
            return this;
        }

        public Builder setForceUpdateTag(@Nullable Input<String> forceUpdateTag) {
            this.forceUpdateTag = forceUpdateTag;
            return this;
        }

        public Builder setForceUpdateTag(@Nullable String forceUpdateTag) {
            this.forceUpdateTag = Input.ofNullable(forceUpdateTag);
            return this;
        }

        public Builder setProtectedSettings(@Nullable Input<String> protectedSettings) {
            this.protectedSettings = protectedSettings;
            return this;
        }

        public Builder setProtectedSettings(@Nullable String protectedSettings) {
            this.protectedSettings = Input.ofNullable(protectedSettings);
            return this;
        }

        public Builder setProtectedSettingsFromKeyVault(@Nullable Input<CloudServiceVaultAndSecretReferenceArgs> protectedSettingsFromKeyVault) {
            this.protectedSettingsFromKeyVault = protectedSettingsFromKeyVault;
            return this;
        }

        public Builder setProtectedSettingsFromKeyVault(@Nullable CloudServiceVaultAndSecretReferenceArgs protectedSettingsFromKeyVault) {
            this.protectedSettingsFromKeyVault = Input.ofNullable(protectedSettingsFromKeyVault);
            return this;
        }

        public Builder setPublisher(@Nullable Input<String> publisher) {
            this.publisher = publisher;
            return this;
        }

        public Builder setPublisher(@Nullable String publisher) {
            this.publisher = Input.ofNullable(publisher);
            return this;
        }

        public Builder setRolesAppliedTo(@Nullable Input<List<String>> rolesAppliedTo) {
            this.rolesAppliedTo = rolesAppliedTo;
            return this;
        }

        public Builder setRolesAppliedTo(@Nullable List<String> rolesAppliedTo) {
            this.rolesAppliedTo = Input.ofNullable(rolesAppliedTo);
            return this;
        }

        public Builder setSettings(@Nullable Input<String> settings) {
            this.settings = settings;
            return this;
        }

        public Builder setSettings(@Nullable String settings) {
            this.settings = Input.ofNullable(settings);
            return this;
        }

        public Builder setType(@Nullable Input<String> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public Builder setTypeHandlerVersion(@Nullable Input<String> typeHandlerVersion) {
            this.typeHandlerVersion = typeHandlerVersion;
            return this;
        }

        public Builder setTypeHandlerVersion(@Nullable String typeHandlerVersion) {
            this.typeHandlerVersion = Input.ofNullable(typeHandlerVersion);
            return this;
        }

        public CloudServiceExtensionPropertiesArgs build() {
            return new CloudServiceExtensionPropertiesArgs(autoUpgradeMinorVersion, forceUpdateTag, protectedSettings, protectedSettingsFromKeyVault, publisher, rolesAppliedTo, settings, type, typeHandlerVersion);
        }
    }
}
