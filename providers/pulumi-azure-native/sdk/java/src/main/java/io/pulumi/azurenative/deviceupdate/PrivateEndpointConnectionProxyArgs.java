// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.deviceupdate;

import io.pulumi.azurenative.deviceupdate.inputs.RemotePrivateEndpointArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PrivateEndpointConnectionProxyArgs extends io.pulumi.resources.ResourceArgs {

    public static final PrivateEndpointConnectionProxyArgs Empty = new PrivateEndpointConnectionProxyArgs();

    /**
     * Account name.
     * 
     */
    @InputImport(name="accountName", required=true)
    private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    /**
     * The ID of the private endpoint connection proxy object.
     * 
     */
    @InputImport(name="privateEndpointConnectionProxyId")
    private final @Nullable Input<String> privateEndpointConnectionProxyId;

    public Input<String> getPrivateEndpointConnectionProxyId() {
        return this.privateEndpointConnectionProxyId == null ? Input.empty() : this.privateEndpointConnectionProxyId;
    }

    /**
     * Remote private endpoint details.
     * 
     */
    @InputImport(name="remotePrivateEndpoint")
    private final @Nullable Input<RemotePrivateEndpointArgs> remotePrivateEndpoint;

    public Input<RemotePrivateEndpointArgs> getRemotePrivateEndpoint() {
        return this.remotePrivateEndpoint == null ? Input.empty() : this.remotePrivateEndpoint;
    }

    /**
     * The resource group name.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Operation status.
     * 
     */
    @InputImport(name="status")
    private final @Nullable Input<String> status;

    public Input<String> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    public PrivateEndpointConnectionProxyArgs(
        Input<String> accountName,
        @Nullable Input<String> privateEndpointConnectionProxyId,
        @Nullable Input<RemotePrivateEndpointArgs> remotePrivateEndpoint,
        Input<String> resourceGroupName,
        @Nullable Input<String> status) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.privateEndpointConnectionProxyId = privateEndpointConnectionProxyId;
        this.remotePrivateEndpoint = remotePrivateEndpoint;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.status = status;
    }

    private PrivateEndpointConnectionProxyArgs() {
        this.accountName = Input.empty();
        this.privateEndpointConnectionProxyId = Input.empty();
        this.remotePrivateEndpoint = Input.empty();
        this.resourceGroupName = Input.empty();
        this.status = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateEndpointConnectionProxyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<String> privateEndpointConnectionProxyId;
        private @Nullable Input<RemotePrivateEndpointArgs> remotePrivateEndpoint;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> status;

        public Builder() {
    	      // Empty
        }

        public Builder(PrivateEndpointConnectionProxyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.privateEndpointConnectionProxyId = defaults.privateEndpointConnectionProxyId;
    	      this.remotePrivateEndpoint = defaults.remotePrivateEndpoint;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.status = defaults.status;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setPrivateEndpointConnectionProxyId(@Nullable Input<String> privateEndpointConnectionProxyId) {
            this.privateEndpointConnectionProxyId = privateEndpointConnectionProxyId;
            return this;
        }

        public Builder setPrivateEndpointConnectionProxyId(@Nullable String privateEndpointConnectionProxyId) {
            this.privateEndpointConnectionProxyId = Input.ofNullable(privateEndpointConnectionProxyId);
            return this;
        }

        public Builder setRemotePrivateEndpoint(@Nullable Input<RemotePrivateEndpointArgs> remotePrivateEndpoint) {
            this.remotePrivateEndpoint = remotePrivateEndpoint;
            return this;
        }

        public Builder setRemotePrivateEndpoint(@Nullable RemotePrivateEndpointArgs remotePrivateEndpoint) {
            this.remotePrivateEndpoint = Input.ofNullable(remotePrivateEndpoint);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setStatus(@Nullable Input<String> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = Input.ofNullable(status);
            return this;
        }

        public PrivateEndpointConnectionProxyArgs build() {
            return new PrivateEndpointConnectionProxyArgs(accountName, privateEndpointConnectionProxyId, remotePrivateEndpoint, resourceGroupName, status);
        }
    }
}
