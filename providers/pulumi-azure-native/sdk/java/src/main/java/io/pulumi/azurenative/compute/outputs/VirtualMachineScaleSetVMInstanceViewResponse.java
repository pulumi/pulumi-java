// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.outputs;

import io.pulumi.azurenative.compute.outputs.BootDiagnosticsInstanceViewResponse;
import io.pulumi.azurenative.compute.outputs.DiskInstanceViewResponse;
import io.pulumi.azurenative.compute.outputs.InstanceViewStatusResponse;
import io.pulumi.azurenative.compute.outputs.MaintenanceRedeployStatusResponse;
import io.pulumi.azurenative.compute.outputs.VirtualMachineAgentInstanceViewResponse;
import io.pulumi.azurenative.compute.outputs.VirtualMachineExtensionInstanceViewResponse;
import io.pulumi.azurenative.compute.outputs.VirtualMachineHealthStatusResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualMachineScaleSetVMInstanceViewResponse {
    /**
     * Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.
     * 
     */
    private final String assignedHost;
    /**
     * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
     * 
     */
    private final @Nullable BootDiagnosticsInstanceViewResponse bootDiagnostics;
    /**
     * The disks information.
     * 
     */
    private final @Nullable List<DiskInstanceViewResponse> disks;
    /**
     * The extensions information.
     * 
     */
    private final @Nullable List<VirtualMachineExtensionInstanceViewResponse> extensions;
    /**
     * The Maintenance Operation status on the virtual machine.
     * 
     */
    private final @Nullable MaintenanceRedeployStatusResponse maintenanceRedeployStatus;
    /**
     * The placement group in which the VM is running. If the VM is deallocated it will not have a placementGroupId.
     * 
     */
    private final @Nullable String placementGroupId;
    /**
     * The Fault Domain count.
     * 
     */
    private final @Nullable Integer platformFaultDomain;
    /**
     * The Update Domain count.
     * 
     */
    private final @Nullable Integer platformUpdateDomain;
    /**
     * The Remote desktop certificate thumbprint.
     * 
     */
    private final @Nullable String rdpThumbPrint;
    /**
     * The resource status information.
     * 
     */
    private final @Nullable List<InstanceViewStatusResponse> statuses;
    /**
     * The VM Agent running on the virtual machine.
     * 
     */
    private final @Nullable VirtualMachineAgentInstanceViewResponse vmAgent;
    /**
     * The health status for the VM.
     * 
     */
    private final VirtualMachineHealthStatusResponse vmHealth;

    @CustomType.Constructor
    private VirtualMachineScaleSetVMInstanceViewResponse(
        @CustomType.Parameter("assignedHost") String assignedHost,
        @CustomType.Parameter("bootDiagnostics") @Nullable BootDiagnosticsInstanceViewResponse bootDiagnostics,
        @CustomType.Parameter("disks") @Nullable List<DiskInstanceViewResponse> disks,
        @CustomType.Parameter("extensions") @Nullable List<VirtualMachineExtensionInstanceViewResponse> extensions,
        @CustomType.Parameter("maintenanceRedeployStatus") @Nullable MaintenanceRedeployStatusResponse maintenanceRedeployStatus,
        @CustomType.Parameter("placementGroupId") @Nullable String placementGroupId,
        @CustomType.Parameter("platformFaultDomain") @Nullable Integer platformFaultDomain,
        @CustomType.Parameter("platformUpdateDomain") @Nullable Integer platformUpdateDomain,
        @CustomType.Parameter("rdpThumbPrint") @Nullable String rdpThumbPrint,
        @CustomType.Parameter("statuses") @Nullable List<InstanceViewStatusResponse> statuses,
        @CustomType.Parameter("vmAgent") @Nullable VirtualMachineAgentInstanceViewResponse vmAgent,
        @CustomType.Parameter("vmHealth") VirtualMachineHealthStatusResponse vmHealth) {
        this.assignedHost = assignedHost;
        this.bootDiagnostics = bootDiagnostics;
        this.disks = disks;
        this.extensions = extensions;
        this.maintenanceRedeployStatus = maintenanceRedeployStatus;
        this.placementGroupId = placementGroupId;
        this.platformFaultDomain = platformFaultDomain;
        this.platformUpdateDomain = platformUpdateDomain;
        this.rdpThumbPrint = rdpThumbPrint;
        this.statuses = statuses;
        this.vmAgent = vmAgent;
        this.vmHealth = vmHealth;
    }

    /**
     * Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.
     * 
    */
    public String getAssignedHost() {
        return this.assignedHost;
    }
    /**
     * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
     * 
    */
    public Optional<BootDiagnosticsInstanceViewResponse> getBootDiagnostics() {
        return Optional.ofNullable(this.bootDiagnostics);
    }
    /**
     * The disks information.
     * 
    */
    public List<DiskInstanceViewResponse> getDisks() {
        return this.disks == null ? List.of() : this.disks;
    }
    /**
     * The extensions information.
     * 
    */
    public List<VirtualMachineExtensionInstanceViewResponse> getExtensions() {
        return this.extensions == null ? List.of() : this.extensions;
    }
    /**
     * The Maintenance Operation status on the virtual machine.
     * 
    */
    public Optional<MaintenanceRedeployStatusResponse> getMaintenanceRedeployStatus() {
        return Optional.ofNullable(this.maintenanceRedeployStatus);
    }
    /**
     * The placement group in which the VM is running. If the VM is deallocated it will not have a placementGroupId.
     * 
    */
    public Optional<String> getPlacementGroupId() {
        return Optional.ofNullable(this.placementGroupId);
    }
    /**
     * The Fault Domain count.
     * 
    */
    public Optional<Integer> getPlatformFaultDomain() {
        return Optional.ofNullable(this.platformFaultDomain);
    }
    /**
     * The Update Domain count.
     * 
    */
    public Optional<Integer> getPlatformUpdateDomain() {
        return Optional.ofNullable(this.platformUpdateDomain);
    }
    /**
     * The Remote desktop certificate thumbprint.
     * 
    */
    public Optional<String> getRdpThumbPrint() {
        return Optional.ofNullable(this.rdpThumbPrint);
    }
    /**
     * The resource status information.
     * 
    */
    public List<InstanceViewStatusResponse> getStatuses() {
        return this.statuses == null ? List.of() : this.statuses;
    }
    /**
     * The VM Agent running on the virtual machine.
     * 
    */
    public Optional<VirtualMachineAgentInstanceViewResponse> getVmAgent() {
        return Optional.ofNullable(this.vmAgent);
    }
    /**
     * The health status for the VM.
     * 
    */
    public VirtualMachineHealthStatusResponse getVmHealth() {
        return this.vmHealth;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineScaleSetVMInstanceViewResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String assignedHost;
        private @Nullable BootDiagnosticsInstanceViewResponse bootDiagnostics;
        private @Nullable List<DiskInstanceViewResponse> disks;
        private @Nullable List<VirtualMachineExtensionInstanceViewResponse> extensions;
        private @Nullable MaintenanceRedeployStatusResponse maintenanceRedeployStatus;
        private @Nullable String placementGroupId;
        private @Nullable Integer platformFaultDomain;
        private @Nullable Integer platformUpdateDomain;
        private @Nullable String rdpThumbPrint;
        private @Nullable List<InstanceViewStatusResponse> statuses;
        private @Nullable VirtualMachineAgentInstanceViewResponse vmAgent;
        private VirtualMachineHealthStatusResponse vmHealth;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineScaleSetVMInstanceViewResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignedHost = defaults.assignedHost;
    	      this.bootDiagnostics = defaults.bootDiagnostics;
    	      this.disks = defaults.disks;
    	      this.extensions = defaults.extensions;
    	      this.maintenanceRedeployStatus = defaults.maintenanceRedeployStatus;
    	      this.placementGroupId = defaults.placementGroupId;
    	      this.platformFaultDomain = defaults.platformFaultDomain;
    	      this.platformUpdateDomain = defaults.platformUpdateDomain;
    	      this.rdpThumbPrint = defaults.rdpThumbPrint;
    	      this.statuses = defaults.statuses;
    	      this.vmAgent = defaults.vmAgent;
    	      this.vmHealth = defaults.vmHealth;
        }

        public Builder assignedHost(String assignedHost) {
            this.assignedHost = Objects.requireNonNull(assignedHost);
            return this;
        }
        public Builder bootDiagnostics(@Nullable BootDiagnosticsInstanceViewResponse bootDiagnostics) {
            this.bootDiagnostics = bootDiagnostics;
            return this;
        }
        public Builder disks(@Nullable List<DiskInstanceViewResponse> disks) {
            this.disks = disks;
            return this;
        }
        public Builder disks(DiskInstanceViewResponse... disks) {
            return disks(List.of(disks));
        }
        public Builder extensions(@Nullable List<VirtualMachineExtensionInstanceViewResponse> extensions) {
            this.extensions = extensions;
            return this;
        }
        public Builder extensions(VirtualMachineExtensionInstanceViewResponse... extensions) {
            return extensions(List.of(extensions));
        }
        public Builder maintenanceRedeployStatus(@Nullable MaintenanceRedeployStatusResponse maintenanceRedeployStatus) {
            this.maintenanceRedeployStatus = maintenanceRedeployStatus;
            return this;
        }
        public Builder placementGroupId(@Nullable String placementGroupId) {
            this.placementGroupId = placementGroupId;
            return this;
        }
        public Builder platformFaultDomain(@Nullable Integer platformFaultDomain) {
            this.platformFaultDomain = platformFaultDomain;
            return this;
        }
        public Builder platformUpdateDomain(@Nullable Integer platformUpdateDomain) {
            this.platformUpdateDomain = platformUpdateDomain;
            return this;
        }
        public Builder rdpThumbPrint(@Nullable String rdpThumbPrint) {
            this.rdpThumbPrint = rdpThumbPrint;
            return this;
        }
        public Builder statuses(@Nullable List<InstanceViewStatusResponse> statuses) {
            this.statuses = statuses;
            return this;
        }
        public Builder statuses(InstanceViewStatusResponse... statuses) {
            return statuses(List.of(statuses));
        }
        public Builder vmAgent(@Nullable VirtualMachineAgentInstanceViewResponse vmAgent) {
            this.vmAgent = vmAgent;
            return this;
        }
        public Builder vmHealth(VirtualMachineHealthStatusResponse vmHealth) {
            this.vmHealth = Objects.requireNonNull(vmHealth);
            return this;
        }        public VirtualMachineScaleSetVMInstanceViewResponse build() {
            return new VirtualMachineScaleSetVMInstanceViewResponse(assignedHost, bootDiagnostics, disks, extensions, maintenanceRedeployStatus, placementGroupId, platformFaultDomain, platformUpdateDomain, rdpThumbPrint, statuses, vmAgent, vmHealth);
        }
    }
}
